Search.setIndex({"alltitles": {"1. Use cuPyNumeric arrays, AVOID native lists": [[484, "use-cupynumeric-arrays-avoid-native-lists"]], "2. Use array-based operations, AVOID loops with indexing": [[484, "use-array-based-operations-avoid-loops-with-indexing"]], "3. Use boolean masks, AVOID advanced indexing": [[484, "use-boolean-masks-avoid-advanced-indexing"]], "API Reference": [[444, null]], "Advanced statistics": [[3, "advanced-statistics"]], "Advanced topics": [[460, "advanced-topics"], [476, null]], "Arithmetic operations": [[450, "arithmetic-operations"]], "Arithmetic, matrix multiplication, and comparison operations": [[451, "arithmetic-matrix-multiplication-and-comparison-operations"]], "Array Attributes": [[451, "array-attributes"]], "Array Manipulation Routine Pitfalls": [[483, "array-manipulation-routine-pitfalls"]], "Array Methods": [[451, "array-methods"]], "Array contents": [[448, "array-contents"]], "Array conversion": [[451, "array-conversion"]], "Array creation": [[3, "array-creation"]], "Array creation (ndarray)": [[3, "array-creation-ndarray"]], "Array creation routines": [[9, null]], "Array manipulation": [[3, "array-manipulation"]], "Array manipulation (ndarray)": [[3, "array-manipulation-ndarray"]], "Array manipulation routines": [[449, null]], "Array type testing": [[448, "array-type-testing"]], "Averages and variances": [[457, "averages-and-variances"]], "Avoid blocking operations": [[483, "avoid-blocking-operations"]], "Background": [[465, "Background"], [466, "Background"], [468, "Background"], [469, "Background"]], "Basic Linux installation": [[484, "basic-linux-installation"]], "Basic build": [[460, "basic-build"]], "Basic operations": [[449, "basic-operations"]], "Basic usage": [[462, "basic-usage"]], "Best practices": [[483, null], [484, "best-practices"]], "Binary operations": [[5, null]], "Bit Generators": [[452, "bit-generators"]], "Bit packing": [[5, "bit-packing"]], "Black-Scholes": [[484, "black-scholes"]], "Black-Scholes options pricing": [[463, null]], "Building from source": [[460, null], [474, "building-from-source"]], "Building matrices": [[9, "building-matrices"]], "Building through pip & cmake": [[460, "building-through-pip-cmake"]], "Calculation": [[451, "calculation"], [451, "id1"]], "Call stack reporting": [[480, "call-stack-reporting"]], "Cephes": [[475, "cephes"]], "Changing array shape": [[449, "changing-array-shape"]], "Changing kind of array": [[449, "changing-kind-of-array"]], "Changing number of dimensions": [[449, "changing-number-of-dimensions"]], "Cholesky decomposition": [[464, null]], "Classes": [[7, null]], "Code Formatting Requirements": [[459, "code-formatting-requirements"]], "Compact Finite Difference Scheme": [[465, null]], "Comparison": [[448, "comparison"]], "Conda": [[484, "conda"]], "Conda and GPU / CPU Variants": [[474, "conda-and-gpu-cpu-variants"]], "Conjugate gradient": [[484, "conjugate-gradient"]], "Constructing arrays": [[451, "constructing-arrays"]], "Contents:": [[473, null]], "Contributing to cuPyNumeric": [[459, null]], "Convolve and Correlate": [[3, null]], "Correlating": [[457, "correlating"]], "Counting": [[456, "counting"]], "Data Type": [[451, "data-type"]], "Data type routines": [[10, null]], "Data type testing": [[10, "data-type-testing"]], "Decompositions": [[447, "decompositions"]], "Dependencies": [[460, "dependencies"]], "Detailed coverage report": [[480, "detailed-coverage-report"]], "Developer guide": [[461, null]], "Differences with Numpy": [[477, null]], "Discrete Fourier Transform": [[8, "discrete-fourier-transform"]], "Discrete Fourier Transform (cupynumeric.fft)": [[11, null]], "Discrete Fourier transform": [[3, "discrete-fourier-transform"]], "Distributions": [[452, "distributions"]], "Edge Detection": [[466, null]], "Edge detection": [[484, "edge-detection"]], "Eigenvalues": [[3, "eigenvalues"]], "Einsum and related": [[3, "einsum-and-related"]], "Elementwise bit operations": [[5, "elementwise-bit-operations"]], "Example 1": [[484, "example-1"]], "Example 2": [[484, "example-2"]], "Examples": [[467, null], [484, "examples"]], "Exercise: Change the number of clusters and number of observations and see how the clusters change": [[468, "Exercise:-Change-the-number-of-clusters-and-number-of-observations-and-see-how-the-clusters-change"]], "Exponents and logarithms": [[450, "exponents-and-logarithms"]], "Extrema Finding": [[450, "extrema-finding"]], "Factorizations": [[3, "factorizations"]], "Faster I/O Routines": [[483, "faster-i-o-routines"]], "Floating point routines": [[450, "floating-point-routines"]], "Frequently Asked Questions": [[472, null]], "From existing data": [[9, "from-existing-data"]], "From shape or value": [[9, "from-shape-or-value"]], "Functional programming": [[3, "functional-programming"]], "General Recommendations": [[483, "general-recommendations"]], "Generating index arrays": [[445, "generating-index-arrays"]], "Guidelines for performance benchmarks": [[478, "guidelines-for-performance-benchmarks"]], "Guidelines on designing cuPyNumeric applications": [[483, "guidelines-on-designing-cupynumeric-applications"]], "Guidelines on using cuPyNumeric APIs": [[483, "guidelines-on-using-cupynumeric-apis"]], "HPC cluster installation": [[484, "hpc-cluster-installation"]], "Handling complex numbers": [[450, "handling-complex-numbers"]], "Hardware requirements": [[484, "hardware-requirements"]], "Helper routines": [[11, "helper-routines"]], "Hermitian FFTs": [[11, "hermitian-ffts"]], "Histograms": [[457, "histograms"]], "How Do I Sign the DCO?": [[459, "how-do-i-sign-the-dco"]], "How do I time the execution of my application?": [[472, "how-do-i-time-the-execution-of-my-application"]], "How do I use Jupyter Notebooks?": [[472, "how-do-i-use-jupyter-notebooks"]], "How to begin": [[459, "how-to-begin"]], "How to determine available memory?": [[472, "how-to-determine-available-memory"]], "How to handle Out-Of-Memory errors?": [[472, "how-to-handle-out-of-memory-errors"]], "How to pass Legion and Realm arguments?": [[472, "how-to-pass-legion-and-realm-arguments"]], "Howtos": [[479, null]], "Hyperbolic functions": [[450, "hyperbolic-functions"]], "Implementation": [[465, "Implementation"], [466, "Implementation"], [468, "Implementation"], [469, "Implementation"]], "Indexing": [[3, "indexing"]], "Indexing behavior": [[477, "indexing-behavior"]], "Indexing routines": [[445, null]], "Indexing-like operations": [[445, "indexing-like-operations"]], "Indices and tables": [[473, "indices-and-tables"]], "Input and output": [[3, "input-and-output"], [446, null]], "Input and output (ndarray)": [[3, "input-and-output-ndarray"]], "Inserting data into arrays": [[445, "inserting-data-into-arrays"]], "Installation": [[474, null]], "Installing Conda Packages": [[474, "installing-conda-packages"]], "Installing PyPI Packages": [[474, "installing-pypi-packages"]], "Introduction": [[484, "introduction"]], "Item selection and manipulation": [[451, "item-selection-and-manipulation"]], "Jacobi stencil": [[470, null], [484, "jacobi-stencil"]], "Joining arrays": [[449, "joining-arrays"]], "K-Means Clustering Algorithm": [[468, null]], "LU factorization and related": [[3, "lu-factorization-and-related"]], "Learning Outcomes": [[465, "Learning-Outcomes"], [466, "Learning-Outcomes"], [468, "Learning-Outcomes"], [469, "Learning-Outcomes"]], "Lets run the kmeans algorithm using a set of inputs": [[468, "Lets-run-the-kmeans-algorithm-using-a-set-of-inputs"]], "Licenses": [[474, "licenses"]], "Linear Algebra": [[8, "linear-algebra"]], "Linear algebra (cupynumeric.linalg)": [[447, null]], "Logic functions": [[448, null]], "Logic operations": [[448, "logic-operations"]], "Logical operations": [[3, "logical-operations"]], "Making proper sets": [[454, "making-proper-sets"]], "Mathematical functions": [[3, "mathematical-functions"], [450, null]], "Matrix Functions": [[447, "matrix-functions"]], "Matrix and vector products": [[447, "matrix-and-vector-products"]], "Matrix multiplication": [[484, "matrix-multiplication"]], "Measure API coverage": [[480, null]], "Memory Layout": [[451, "memory-layout"]], "Merge tasks to reduce overhead": [[483, "merge-tasks-to-reduce-overhead"]], "Miscellaneous": [[450, "miscellaneous"]], "Miscellaneous matrix routines": [[3, "miscellaneous-matrix-routines"]], "Module-Level": [[8, "module-level"]], "Multi-Dimensional Array": [[8, "multi-dimensional-array"]], "Multi-node HPC": [[484, "multi-node-hpc"]], "Multi-node execution": [[476, "multi-node-execution"]], "NVIDIA cuPyNumeric": [[473, null]], "Newton Raphson Method In Two Dimensions": [[469, null]], "Norms and other numbers": [[447, "norms-and-other-numbers"]], "NumPy": [[475, "numpy"], [484, "numpy"]], "NumPy binary files (npy, npz)": [[446, "numpy-binary-files-npy-npz"]], "NumPy vs cuPyNumeric APIs": [[8, "numpy-vs-cupynumeric-apis"]], "Numerical ranges": [[9, "numerical-ranges"]], "OpenBLAS": [[460, "openblas"]], "Order argument": [[477, "order-argument"]], "Order statistics": [[457, "order-statistics"]], "Other Attributes": [[451, "other-attributes"]], "Other options": [[484, "other-options"]], "Overall coverage report": [[480, "overall-coverage-report"]], "Packing and unpacking bits": [[3, "packing-and-unpacking-bits"]], "Padding arrays": [[3, "padding-arrays"]], "Passing Legion and Realm arguments": [[476, "passing-legion-and-realm-arguments"]], "Performance Benchmarking": [[478, null]], "Pip": [[484, "pip"]], "Project comparisons": [[8, null]], "Questions?": [[472, "questions"]], "Random Generator": [[452, "random-generator"]], "Random Kit": [[475, "random-kit"]], "Random Sampling": [[8, "random-sampling"]], "Random sampling": [[3, "random-sampling"]], "Random sampling (cupynumeric.random)": [[452, null]], "Rational routines": [[450, "rational-routines"]], "Real FFTs": [[11, "real-ffts"]], "Rearranging elements": [[449, "rearranging-elements"]], "Reductions": [[477, "reductions"]], "Reshape returns a copy instead of view": [[483, "reshape-returns-a-copy-instead-of-view"]], "Resource allocation": [[484, "resource-allocation"]], "Returning a copy instead of a view": [[477, "returning-a-copy-instead-of-a-view"]], "Review Process": [[459, "review-process"]], "Rounding": [[450, "rounding"]], "Routines": [[453, null]], "Running cuPyNumeric code": [[484, "running-cupynumeric-code"]], "Running on CPU": [[484, "running-on-cpu"], [484, "id2"], [484, "id4"], [484, "id6"]], "Running on GPU": [[484, "running-on-gpu"], [484, "id3"], [484, "id5"], [484, "id7"], [484, "id9"]], "Running on GPU cluster": [[484, "running-on-gpu-cluster"]], "Running tests": [[462, null]], "SVD and related": [[3, "svd-and-related"]], "Sample Code": [[484, "sample-code"], [484, "id8"]], "Sample computation": [[484, "sample-computation"]], "Scalar return values": [[477, "scalar-return-values"]], "Searching": [[456, "searching"]], "Searching, sorting, and counting": [[3, "searching-sorting-and-counting"]], "Seeding and State": [[452, "seeding-and-state"]], "Set operations": [[3, "set-operations"]], "Set routines": [[454, null]], "Settings": [[455, null]], "Shape manipulation": [[451, "shape-manipulation"]], "Simple random data": [[452, "simple-random-data"]], "Single node": [[484, "single-node"]], "Single-node setup": [[484, "single-node-setup"]], "Solving equations and inverting matrices": [[447, "solving-equations-and-inverting-matrices"]], "Sorting": [[456, "sorting"]], "Sorting, searching, and counting": [[456, null]], "Special methods": [[451, "special-methods"]], "Splitting arrays": [[449, "splitting-arrays"]], "Stack results in a performance penalty": [[483, "stack-results-in-a-performance-penalty"]], "Stage configuration": [[462, "stage-configuration"]], "Standard FFTs": [[11, "standard-ffts"]], "Statistics": [[457, null]], "Sums, products, differences": [[450, "sums-products-differences"]], "Supported shapes and datatypes": [[477, "supported-shapes-and-datatypes"]], "TBLIS": [[460, "tblis"], [475, "tblis"]], "The Legalese: Developer Certificate of Origin": [[459, "the-legalese-developer-certificate-of-origin"]], "The N-Dimensional array (cupynumeric.ndarray)": [[451, null]], "Third-party notices": [[475, null]], "Tiling arrays": [[449, "tiling-arrays"]], "Top three Tips": [[484, "top-three-tips"]], "TorchSWE case study": [[471, null]], "Transpose-like operations": [[449, "transpose-like-operations"]], "Trigonometric functions": [[450, "trigonometric-functions"]], "Truth value testing": [[448, "truth-value-testing"]], "Trying Numpy code without changes": [[481, null]], "Tutorial": [[484, null]], "Ufuncs": [[3, "ufuncs"]], "Usage": [[485, null]], "Use array-based operations, AVOID loops with indexing": [[483, "use-array-based-operations-avoid-loops-with-indexing"]], "Use boolean masks, AVOID advanced indexing": [[483, "use-boolean-masks-avoid-advanced-indexing"]], "Use cuPyNumeric or NumPy arrays, AVOID native lists": [[483, "use-cupynumeric-or-numpy-arrays-avoid-native-lists"]], "Use logic functions, AVOID iterating through a loop": [[483, "use-logic-functions-avoid-iterating-through-a-loop"]], "Use mathematical functions, AVOID element-wise loops": [[483, "use-mathematical-functions-avoid-element-wise-loops"]], "Use output arguments to reduce memory allocation": [[483, "use-output-arguments-to-reduce-memory-allocation"]], "Use putmask to update an array based on another array": [[483, "use-putmask-to-update-an-array-based-on-another-array"]], "User guide": [[482, null]], "Using Legate timing tools": [[478, "using-legate-timing-tools"]], "Using a manual task manager": [[476, "using-a-manual-task-manager"]], "Using legate": [[476, "using-legate"]], "Various windows": [[458, "various-windows"]], "Vectorize for better performance": [[483, "vectorize-for-better-performance"]], "Verify your Installation": [[474, "verify-your-installation"]], "What are the anti-patterns in a NumPy code?": [[472, "what-are-the-anti-patterns-in-a-numpy-code"]], "What are the defaults?": [[472, "what-are-the-defaults"]], "What are the different task variants available in Legate?": [[472, "what-are-the-different-task-variants-available-in-legate"]], "What does this warning mean?": [[472, "what-does-this-warning-mean"]], "What if I don\u2019t have a GPU?": [[472, "what-if-i-dont-have-a-gpu"]], "What is the difference between Legate and cuPyNumeric?": [[472, "what-is-the-difference-between-legate-and-cupynumeric"]], "What is the version of legate?": [[472, "what-is-the-version-of-legate"]], "When to use python vs legate?": [[472, "when-to-use-python-vs-legate"]], "Where I can read more about cuPyNumeric?": [[472, "where-i-can-read-more-about-cupynumeric"]], "Why are the results different from NumPy?": [[472, "why-are-the-results-different-from-numpy"]], "Why doesn\u2019t Legate use my GPU?": [[472, "why-doesnt-legate-use-my-gpu"]], "Why is cuPyNumeric slower than CuPy on my laptop?": [[472, "why-is-cupynumeric-slower-than-cupy-on-my-laptop"]], "Why is cuPyNumeric slower than NumPy on my laptop?": [[472, "why-is-cupynumeric-slower-than-numpy-on-my-laptop"]], "Window functions": [[458, null]], "cuPyNumeric": [[484, "cupynumeric"]], "cuPyNumeric vs NumPy": [[484, "cupynumeric-vs-numpy"]], "cupynumeric.absolute": [[12, null]], "cupynumeric.add": [[13, null]], "cupynumeric.all": [[14, null]], "cupynumeric.allclose": [[15, null]], "cupynumeric.amax": [[16, null]], "cupynumeric.amin": [[17, null]], "cupynumeric.angle": [[18, null]], "cupynumeric.any": [[19, null]], "cupynumeric.append": [[20, null]], "cupynumeric.arange": [[21, null]], "cupynumeric.arccos": [[22, null]], "cupynumeric.arccosh": [[23, null]], "cupynumeric.arcsin": [[24, null]], "cupynumeric.arcsinh": [[25, null]], "cupynumeric.arctan": [[26, null]], "cupynumeric.arctan2": [[27, null]], "cupynumeric.arctanh": [[28, null]], "cupynumeric.argmax": [[29, null]], "cupynumeric.argmin": [[30, null]], "cupynumeric.argpartition": [[31, null]], "cupynumeric.argsort": [[32, null]], "cupynumeric.argwhere": [[33, null]], "cupynumeric.array": [[34, null]], "cupynumeric.array_equal": [[35, null]], "cupynumeric.array_split": [[36, null]], "cupynumeric.asarray": [[37, null]], "cupynumeric.atleast_1d": [[38, null]], "cupynumeric.atleast_2d": [[39, null]], "cupynumeric.atleast_3d": [[40, null]], "cupynumeric.average": [[41, null]], "cupynumeric.bartlett": [[42, null]], "cupynumeric.bincount": [[43, null]], "cupynumeric.bitwise_and": [[44, null]], "cupynumeric.bitwise_or": [[45, null]], "cupynumeric.bitwise_xor": [[46, null]], "cupynumeric.blackman": [[47, null]], "cupynumeric.block": [[48, null]], "cupynumeric.broadcast": [[6, null]], "cupynumeric.broadcast_arrays": [[49, null]], "cupynumeric.broadcast_shapes": [[50, null]], "cupynumeric.broadcast_to": [[51, null]], "cupynumeric.cbrt": [[52, null]], "cupynumeric.ceil": [[53, null]], "cupynumeric.choose": [[54, null]], "cupynumeric.clip": [[55, null]], "cupynumeric.column_stack": [[56, null]], "cupynumeric.compress": [[57, null]], "cupynumeric.concatenate": [[58, null]], "cupynumeric.conj": [[59, null]], "cupynumeric.conjugate": [[60, null]], "cupynumeric.convolve": [[61, null]], "cupynumeric.copy": [[62, null]], "cupynumeric.copysign": [[63, null]], "cupynumeric.cos": [[64, null]], "cupynumeric.cosh": [[65, null]], "cupynumeric.count_nonzero": [[66, null]], "cupynumeric.cov": [[67, null]], "cupynumeric.cumprod": [[68, null]], "cupynumeric.cumsum": [[69, null]], "cupynumeric.deg2rad": [[70, null]], "cupynumeric.degrees": [[71, null]], "cupynumeric.diag": [[72, null]], "cupynumeric.diag_indices": [[73, null]], "cupynumeric.diag_indices_from": [[74, null]], "cupynumeric.diagonal": [[75, null]], "cupynumeric.diff": [[76, null]], "cupynumeric.digitize": [[77, null]], "cupynumeric.divide": [[78, null]], "cupynumeric.dot": [[79, null]], "cupynumeric.dsplit": [[80, null]], "cupynumeric.dstack": [[81, null]], "cupynumeric.einsum": [[82, null]], "cupynumeric.einsum_path": [[83, null]], "cupynumeric.empty": [[84, null]], "cupynumeric.empty_like": [[85, null]], "cupynumeric.equal": [[86, null]], "cupynumeric.exp": [[87, null]], "cupynumeric.exp2": [[88, null]], "cupynumeric.expand_dims": [[89, null]], "cupynumeric.expm1": [[90, null]], "cupynumeric.extract": [[91, null]], "cupynumeric.eye": [[92, null]], "cupynumeric.fabs": [[93, null]], "cupynumeric.fft.fft": [[94, null]], "cupynumeric.fft.fft2": [[95, null]], "cupynumeric.fft.fftn": [[96, null]], "cupynumeric.fft.fftshift": [[97, null]], "cupynumeric.fft.hfft": [[98, null]], "cupynumeric.fft.ifft": [[99, null]], "cupynumeric.fft.ifft2": [[100, null]], "cupynumeric.fft.ifftn": [[101, null]], "cupynumeric.fft.ifftshift": [[102, null]], "cupynumeric.fft.ihfft": [[103, null]], "cupynumeric.fft.irfft": [[104, null]], "cupynumeric.fft.irfft2": [[105, null]], "cupynumeric.fft.irfftn": [[106, null]], "cupynumeric.fft.rfft": [[107, null]], "cupynumeric.fft.rfft2": [[108, null]], "cupynumeric.fft.rfftn": [[109, null]], "cupynumeric.fill_diagonal": [[110, null]], "cupynumeric.find_common_type": [[111, null]], "cupynumeric.flatnonzero": [[112, null]], "cupynumeric.flip": [[113, null]], "cupynumeric.fliplr": [[114, null]], "cupynumeric.flipud": [[115, null]], "cupynumeric.float_power": [[116, null]], "cupynumeric.floor": [[117, null]], "cupynumeric.floor_divide": [[118, null]], "cupynumeric.fmax": [[119, null]], "cupynumeric.fmin": [[120, null]], "cupynumeric.fmod": [[121, null]], "cupynumeric.frexp": [[122, null]], "cupynumeric.full": [[123, null]], "cupynumeric.full_like": [[124, null]], "cupynumeric.gcd": [[125, null]], "cupynumeric.gradient": [[126, null]], "cupynumeric.greater": [[127, null]], "cupynumeric.greater_equal": [[128, null]], "cupynumeric.hamming": [[129, null]], "cupynumeric.hanning": [[130, null]], "cupynumeric.histogram": [[131, null]], "cupynumeric.hsplit": [[132, null]], "cupynumeric.hstack": [[133, null]], "cupynumeric.hypot": [[134, null]], "cupynumeric.identity": [[135, null]], "cupynumeric.imag": [[136, null]], "cupynumeric.indices": [[137, null]], "cupynumeric.inner": [[138, null]], "cupynumeric.invert": [[139, null]], "cupynumeric.isclose": [[140, null]], "cupynumeric.iscomplex": [[141, null]], "cupynumeric.iscomplexobj": [[142, null]], "cupynumeric.isfinite": [[143, null]], "cupynumeric.isinf": [[144, null]], "cupynumeric.isnan": [[145, null]], "cupynumeric.isneginf": [[146, null]], "cupynumeric.isposinf": [[147, null]], "cupynumeric.isreal": [[148, null]], "cupynumeric.isrealobj": [[149, null]], "cupynumeric.isscalar": [[150, null]], "cupynumeric.ix_": [[151, null]], "cupynumeric.kaiser": [[152, null]], "cupynumeric.lcm": [[153, null]], "cupynumeric.ldexp": [[154, null]], "cupynumeric.left_shift": [[155, null]], "cupynumeric.less": [[156, null]], "cupynumeric.less_equal": [[157, null]], "cupynumeric.linalg.cholesky": [[158, null]], "cupynumeric.linalg.eig": [[159, null]], "cupynumeric.linalg.eigvals": [[160, null]], "cupynumeric.linalg.expm": [[161, null]], "cupynumeric.linalg.matrix_power": [[162, null]], "cupynumeric.linalg.multi_dot": [[163, null]], "cupynumeric.linalg.norm": [[164, null]], "cupynumeric.linalg.qr": [[165, null]], "cupynumeric.linalg.solve": [[166, null]], "cupynumeric.linalg.svd": [[167, null]], "cupynumeric.linspace": [[168, null]], "cupynumeric.load": [[169, null]], "cupynumeric.log": [[170, null]], "cupynumeric.log10": [[171, null]], "cupynumeric.log1p": [[172, null]], "cupynumeric.log2": [[173, null]], "cupynumeric.logaddexp": [[174, null]], "cupynumeric.logaddexp2": [[175, null]], "cupynumeric.logical_and": [[176, null]], "cupynumeric.logical_not": [[177, null]], "cupynumeric.logical_or": [[178, null]], "cupynumeric.logical_xor": [[179, null]], "cupynumeric.mask_indices": [[180, null]], "cupynumeric.matmul": [[181, null]], "cupynumeric.maximum": [[182, null]], "cupynumeric.mean": [[183, null]], "cupynumeric.median": [[184, null]], "cupynumeric.meshgrid": [[185, null]], "cupynumeric.minimum": [[186, null]], "cupynumeric.mod": [[187, null]], "cupynumeric.modf": [[188, null]], "cupynumeric.moveaxis": [[189, null]], "cupynumeric.msort": [[190, null]], "cupynumeric.multiply": [[191, null]], "cupynumeric.nanargmax": [[192, null]], "cupynumeric.nanargmin": [[193, null]], "cupynumeric.nancumprod": [[194, null]], "cupynumeric.nancumsum": [[195, null]], "cupynumeric.nanmax": [[196, null]], "cupynumeric.nanmean": [[197, null]], "cupynumeric.nanmedian": [[198, null]], "cupynumeric.nanmin": [[199, null]], "cupynumeric.nanpercentile": [[200, null]], "cupynumeric.nanprod": [[201, null]], "cupynumeric.nanquantile": [[202, null]], "cupynumeric.nansum": [[203, null]], "cupynumeric.ndarray": [[4, null]], "cupynumeric.ndarray.T": [[204, null]], "cupynumeric.ndarray.__abs__": [[205, null]], "cupynumeric.ndarray.__add__": [[206, null]], "cupynumeric.ndarray.__and__": [[207, null]], "cupynumeric.ndarray.__array__": [[208, null]], "cupynumeric.ndarray.__bool__": [[209, null]], "cupynumeric.ndarray.__complex__": [[210, null]], "cupynumeric.ndarray.__contains__": [[211, null]], "cupynumeric.ndarray.__copy__": [[212, null]], "cupynumeric.ndarray.__deepcopy__": [[213, null]], "cupynumeric.ndarray.__divmod__": [[214, null]], "cupynumeric.ndarray.__eq__": [[215, null]], "cupynumeric.ndarray.__float__": [[216, null]], "cupynumeric.ndarray.__floordiv__": [[217, null]], "cupynumeric.ndarray.__ge__": [[218, null]], "cupynumeric.ndarray.__getitem__": [[219, null]], "cupynumeric.ndarray.__gt__": [[220, null]], "cupynumeric.ndarray.__iadd__": [[221, null]], "cupynumeric.ndarray.__iand__": [[222, null]], "cupynumeric.ndarray.__ifloordiv__": [[223, null]], "cupynumeric.ndarray.__ilshift__": [[224, null]], "cupynumeric.ndarray.__imatmul__": [[225, null]], "cupynumeric.ndarray.__imod__": [[226, null]], "cupynumeric.ndarray.__imul__": [[227, null]], "cupynumeric.ndarray.__index__": [[228, null]], "cupynumeric.ndarray.__int__": [[229, null]], "cupynumeric.ndarray.__invert__": [[230, null]], "cupynumeric.ndarray.__ior__": [[231, null]], "cupynumeric.ndarray.__ipow__": [[232, null]], "cupynumeric.ndarray.__irshift__": [[233, null]], "cupynumeric.ndarray.__isub__": [[234, null]], "cupynumeric.ndarray.__itruediv__": [[235, null]], "cupynumeric.ndarray.__ixor__": [[236, null]], "cupynumeric.ndarray.__le__": [[237, null]], "cupynumeric.ndarray.__len__": [[238, null]], "cupynumeric.ndarray.__lshift__": [[239, null]], "cupynumeric.ndarray.__lt__": [[240, null]], "cupynumeric.ndarray.__matmul__": [[241, null]], "cupynumeric.ndarray.__mod__": [[242, null]], "cupynumeric.ndarray.__mul__": [[243, null]], "cupynumeric.ndarray.__ne__": [[244, null]], "cupynumeric.ndarray.__neg__": [[245, null]], "cupynumeric.ndarray.__new__": [[246, null]], "cupynumeric.ndarray.__or__": [[247, null]], "cupynumeric.ndarray.__pos__": [[248, null]], "cupynumeric.ndarray.__pow__": [[249, null]], "cupynumeric.ndarray.__reduce__": [[250, null]], "cupynumeric.ndarray.__repr__": [[251, null]], "cupynumeric.ndarray.__rmatmul__": [[252, null]], "cupynumeric.ndarray.__rshift__": [[253, null]], "cupynumeric.ndarray.__setitem__": [[254, null]], "cupynumeric.ndarray.__setstate__": [[255, null]], "cupynumeric.ndarray.__str__": [[256, null]], "cupynumeric.ndarray.__sub__": [[257, null]], "cupynumeric.ndarray.__truediv__": [[258, null]], "cupynumeric.ndarray.__xor__": [[259, null]], "cupynumeric.ndarray.all": [[260, null]], "cupynumeric.ndarray.any": [[261, null]], "cupynumeric.ndarray.argmax": [[262, null]], "cupynumeric.ndarray.argmin": [[263, null]], "cupynumeric.ndarray.argpartition": [[264, null]], "cupynumeric.ndarray.argsort": [[265, null]], "cupynumeric.ndarray.astype": [[266, null]], "cupynumeric.ndarray.base": [[267, null]], "cupynumeric.ndarray.choose": [[268, null]], "cupynumeric.ndarray.clip": [[269, null]], "cupynumeric.ndarray.compress": [[270, null]], "cupynumeric.ndarray.conj": [[271, null]], "cupynumeric.ndarray.conjugate": [[272, null]], "cupynumeric.ndarray.copy": [[273, null]], "cupynumeric.ndarray.ctypes": [[274, null]], "cupynumeric.ndarray.cumprod": [[275, null]], "cupynumeric.ndarray.cumsum": [[276, null]], "cupynumeric.ndarray.data": [[277, null]], "cupynumeric.ndarray.diagonal": [[278, null]], "cupynumeric.ndarray.dot": [[279, null]], "cupynumeric.ndarray.dtype": [[280, null]], "cupynumeric.ndarray.dump": [[281, null]], "cupynumeric.ndarray.dumps": [[282, null]], "cupynumeric.ndarray.fill": [[283, null]], "cupynumeric.ndarray.flags": [[284, null]], "cupynumeric.ndarray.flat": [[285, null]], "cupynumeric.ndarray.flatten": [[286, null]], "cupynumeric.ndarray.flip": [[287, null]], "cupynumeric.ndarray.getfield": [[288, null]], "cupynumeric.ndarray.imag": [[289, null]], "cupynumeric.ndarray.item": [[290, null]], "cupynumeric.ndarray.itemset": [[291, null]], "cupynumeric.ndarray.itemsize": [[292, null]], "cupynumeric.ndarray.max": [[293, null]], "cupynumeric.ndarray.mean": [[294, null]], "cupynumeric.ndarray.min": [[295, null]], "cupynumeric.ndarray.nbytes": [[296, null]], "cupynumeric.ndarray.ndim": [[297, null]], "cupynumeric.ndarray.nonzero": [[298, null]], "cupynumeric.ndarray.partition": [[299, null]], "cupynumeric.ndarray.prod": [[300, null]], "cupynumeric.ndarray.put": [[301, null]], "cupynumeric.ndarray.ravel": [[302, null]], "cupynumeric.ndarray.real": [[303, null]], "cupynumeric.ndarray.reshape": [[304, null]], "cupynumeric.ndarray.searchsorted": [[305, null]], "cupynumeric.ndarray.setfield": [[306, null]], "cupynumeric.ndarray.setflags": [[307, null]], "cupynumeric.ndarray.shape": [[308, null]], "cupynumeric.ndarray.size": [[309, null]], "cupynumeric.ndarray.sort": [[310, null]], "cupynumeric.ndarray.squeeze": [[311, null]], "cupynumeric.ndarray.strides": [[312, null]], "cupynumeric.ndarray.sum": [[313, null]], "cupynumeric.ndarray.swapaxes": [[314, null]], "cupynumeric.ndarray.take": [[315, null]], "cupynumeric.ndarray.tobytes": [[316, null]], "cupynumeric.ndarray.tofile": [[317, null]], "cupynumeric.ndarray.tolist": [[318, null]], "cupynumeric.ndarray.tostring": [[319, null]], "cupynumeric.ndarray.trace": [[320, null]], "cupynumeric.ndarray.transpose": [[321, null]], "cupynumeric.ndarray.unique": [[322, null]], "cupynumeric.ndarray.var": [[323, null]], "cupynumeric.ndarray.view": [[324, null]], "cupynumeric.ndim": [[325, null]], "cupynumeric.negative": [[326, null]], "cupynumeric.nextafter": [[327, null]], "cupynumeric.nonzero": [[328, null]], "cupynumeric.not_equal": [[329, null]], "cupynumeric.ones": [[330, null]], "cupynumeric.ones_like": [[331, null]], "cupynumeric.outer": [[332, null]], "cupynumeric.packbits": [[333, null]], "cupynumeric.partition": [[334, null]], "cupynumeric.percentile": [[335, null]], "cupynumeric.place": [[336, null]], "cupynumeric.positive": [[337, null]], "cupynumeric.power": [[338, null]], "cupynumeric.prod": [[339, null]], "cupynumeric.put": [[340, null]], "cupynumeric.put_along_axis": [[341, null]], "cupynumeric.putmask": [[342, null]], "cupynumeric.quantile": [[343, null]], "cupynumeric.rad2deg": [[344, null]], "cupynumeric.radians": [[345, null]], "cupynumeric.random.BitGenerator": [[1, null]], "cupynumeric.random.Generator": [[2, null]], "cupynumeric.random.beta": [[346, null]], "cupynumeric.random.binomial": [[347, null]], "cupynumeric.random.bytes": [[348, null]], "cupynumeric.random.chisquare": [[349, null]], "cupynumeric.random.default_rng": [[350, null]], "cupynumeric.random.exponential": [[351, null]], "cupynumeric.random.f": [[352, null]], "cupynumeric.random.gamma": [[353, null]], "cupynumeric.random.geometric": [[354, null]], "cupynumeric.random.gumbel": [[355, null]], "cupynumeric.random.hypergeometric": [[356, null]], "cupynumeric.random.laplace": [[357, null]], "cupynumeric.random.logistic": [[358, null]], "cupynumeric.random.lognormal": [[359, null]], "cupynumeric.random.logseries": [[360, null]], "cupynumeric.random.negative_binomial": [[361, null]], "cupynumeric.random.noncentral_chisquare": [[362, null]], "cupynumeric.random.noncentral_f": [[363, null]], "cupynumeric.random.normal": [[364, null]], "cupynumeric.random.pareto": [[365, null]], "cupynumeric.random.poisson": [[366, null]], "cupynumeric.random.power": [[367, null]], "cupynumeric.random.rand": [[368, null]], "cupynumeric.random.randint": [[369, null]], "cupynumeric.random.randn": [[370, null]], "cupynumeric.random.random": [[371, null]], "cupynumeric.random.random_integers": [[372, null]], "cupynumeric.random.random_sample": [[373, null]], "cupynumeric.random.ranf": [[374, null]], "cupynumeric.random.rayleigh": [[375, null]], "cupynumeric.random.sample": [[376, null]], "cupynumeric.random.seed": [[377, null]], "cupynumeric.random.standard_cauchy": [[378, null]], "cupynumeric.random.standard_exponential": [[379, null]], "cupynumeric.random.standard_gamma": [[380, null]], "cupynumeric.random.standard_t": [[381, null]], "cupynumeric.random.triangular": [[382, null]], "cupynumeric.random.uniform": [[383, null]], "cupynumeric.random.vonmises": [[384, null]], "cupynumeric.random.wald": [[385, null]], "cupynumeric.random.weibull": [[386, null]], "cupynumeric.random.zipf": [[387, null]], "cupynumeric.ravel": [[388, null]], "cupynumeric.real": [[389, null]], "cupynumeric.reciprocal": [[390, null]], "cupynumeric.remainder": [[391, null]], "cupynumeric.repeat": [[392, null]], "cupynumeric.reshape": [[393, null]], "cupynumeric.right_shift": [[394, null]], "cupynumeric.rint": [[395, null]], "cupynumeric.roll": [[396, null]], "cupynumeric.rot90": [[397, null]], "cupynumeric.round": [[398, null]], "cupynumeric.row_stack": [[399, null]], "cupynumeric.searchsorted": [[400, null]], "cupynumeric.select": [[401, null]], "cupynumeric.shape": [[402, null]], "cupynumeric.sign": [[403, null]], "cupynumeric.signbit": [[404, null]], "cupynumeric.sin": [[405, null]], "cupynumeric.sinh": [[406, null]], "cupynumeric.sort": [[407, null]], "cupynumeric.sort_complex": [[408, null]], "cupynumeric.split": [[409, null]], "cupynumeric.sqrt": [[410, null]], "cupynumeric.square": [[411, null]], "cupynumeric.squeeze": [[412, null]], "cupynumeric.stack": [[413, null]], "cupynumeric.subtract": [[414, null]], "cupynumeric.sum": [[415, null]], "cupynumeric.swapaxes": [[416, null]], "cupynumeric.take": [[417, null]], "cupynumeric.take_along_axis": [[418, null]], "cupynumeric.tan": [[419, null]], "cupynumeric.tanh": [[420, null]], "cupynumeric.tensordot": [[421, null]], "cupynumeric.tile": [[422, null]], "cupynumeric.trace": [[423, null]], "cupynumeric.transpose": [[424, null]], "cupynumeric.tri": [[425, null]], "cupynumeric.tril": [[426, null]], "cupynumeric.tril_indices": [[427, null]], "cupynumeric.tril_indices_from": [[428, null]], "cupynumeric.triu": [[429, null]], "cupynumeric.triu_indices": [[430, null]], "cupynumeric.triu_indices_from": [[431, null]], "cupynumeric.true_divide": [[432, null]], "cupynumeric.trunc": [[433, null]], "cupynumeric.unique": [[434, null]], "cupynumeric.unpackbits": [[435, null]], "cupynumeric.unravel_index": [[436, null]], "cupynumeric.var": [[437, null]], "cupynumeric.vdot": [[438, null]], "cupynumeric.vsplit": [[439, null]], "cupynumeric.vstack": [[440, null]], "cupynumeric.where": [[441, null]], "cupynumeric.zeros": [[442, null]], "cupynumeric.zeros_like": [[443, null]], "fast_math": [[455, "fast-math"]], "force_thunk": [[455, "force-thunk"]], "matmul_cache_size": [[455, "matmul-cache-size"]], "min_cpu_chunk": [[455, "min-cpu-chunk"]], "min_gpu_chunk": [[455, "min-gpu-chunk"]], "min_omp_chunk": [[455, "min-omp-chunk"]], "numpy_compat": [[455, "numpy-compat"]], "preload_cudalibs": [[455, "preload-cudalibs"]], "report_coverage": [[455, "report-coverage"]], "report_dump_callstack": [[455, "report-dump-callstack"]], "report_dump_csv": [[455, "report-dump-csv"]], "warn": [[455, "warn"]]}, "docnames": ["_implemented", "api/_bitgenerator", "api/_generator", "api/_grouped", "api/_ndarray", "api/binary", "api/broadcast", "api/classes", "api/comparison", "api/creation", "api/datatype", "api/fft", "api/generated/cupynumeric.absolute", "api/generated/cupynumeric.add", "api/generated/cupynumeric.all", "api/generated/cupynumeric.allclose", "api/generated/cupynumeric.amax", "api/generated/cupynumeric.amin", "api/generated/cupynumeric.angle", "api/generated/cupynumeric.any", "api/generated/cupynumeric.append", "api/generated/cupynumeric.arange", "api/generated/cupynumeric.arccos", "api/generated/cupynumeric.arccosh", "api/generated/cupynumeric.arcsin", "api/generated/cupynumeric.arcsinh", "api/generated/cupynumeric.arctan", "api/generated/cupynumeric.arctan2", "api/generated/cupynumeric.arctanh", "api/generated/cupynumeric.argmax", "api/generated/cupynumeric.argmin", "api/generated/cupynumeric.argpartition", "api/generated/cupynumeric.argsort", "api/generated/cupynumeric.argwhere", "api/generated/cupynumeric.array", "api/generated/cupynumeric.array_equal", "api/generated/cupynumeric.array_split", "api/generated/cupynumeric.asarray", "api/generated/cupynumeric.atleast_1d", "api/generated/cupynumeric.atleast_2d", "api/generated/cupynumeric.atleast_3d", "api/generated/cupynumeric.average", "api/generated/cupynumeric.bartlett", "api/generated/cupynumeric.bincount", "api/generated/cupynumeric.bitwise_and", "api/generated/cupynumeric.bitwise_or", "api/generated/cupynumeric.bitwise_xor", "api/generated/cupynumeric.blackman", "api/generated/cupynumeric.block", "api/generated/cupynumeric.broadcast_arrays", "api/generated/cupynumeric.broadcast_shapes", "api/generated/cupynumeric.broadcast_to", "api/generated/cupynumeric.cbrt", "api/generated/cupynumeric.ceil", "api/generated/cupynumeric.choose", "api/generated/cupynumeric.clip", "api/generated/cupynumeric.column_stack", "api/generated/cupynumeric.compress", "api/generated/cupynumeric.concatenate", "api/generated/cupynumeric.conj", "api/generated/cupynumeric.conjugate", "api/generated/cupynumeric.convolve", "api/generated/cupynumeric.copy", "api/generated/cupynumeric.copysign", "api/generated/cupynumeric.cos", "api/generated/cupynumeric.cosh", "api/generated/cupynumeric.count_nonzero", "api/generated/cupynumeric.cov", "api/generated/cupynumeric.cumprod", "api/generated/cupynumeric.cumsum", "api/generated/cupynumeric.deg2rad", "api/generated/cupynumeric.degrees", "api/generated/cupynumeric.diag", "api/generated/cupynumeric.diag_indices", "api/generated/cupynumeric.diag_indices_from", "api/generated/cupynumeric.diagonal", "api/generated/cupynumeric.diff", "api/generated/cupynumeric.digitize", "api/generated/cupynumeric.divide", "api/generated/cupynumeric.dot", "api/generated/cupynumeric.dsplit", "api/generated/cupynumeric.dstack", "api/generated/cupynumeric.einsum", "api/generated/cupynumeric.einsum_path", "api/generated/cupynumeric.empty", "api/generated/cupynumeric.empty_like", "api/generated/cupynumeric.equal", "api/generated/cupynumeric.exp", "api/generated/cupynumeric.exp2", "api/generated/cupynumeric.expand_dims", "api/generated/cupynumeric.expm1", "api/generated/cupynumeric.extract", "api/generated/cupynumeric.eye", "api/generated/cupynumeric.fabs", "api/generated/cupynumeric.fft.fft", "api/generated/cupynumeric.fft.fft2", "api/generated/cupynumeric.fft.fftn", "api/generated/cupynumeric.fft.fftshift", "api/generated/cupynumeric.fft.hfft", "api/generated/cupynumeric.fft.ifft", "api/generated/cupynumeric.fft.ifft2", "api/generated/cupynumeric.fft.ifftn", "api/generated/cupynumeric.fft.ifftshift", "api/generated/cupynumeric.fft.ihfft", "api/generated/cupynumeric.fft.irfft", "api/generated/cupynumeric.fft.irfft2", "api/generated/cupynumeric.fft.irfftn", "api/generated/cupynumeric.fft.rfft", "api/generated/cupynumeric.fft.rfft2", "api/generated/cupynumeric.fft.rfftn", "api/generated/cupynumeric.fill_diagonal", "api/generated/cupynumeric.find_common_type", "api/generated/cupynumeric.flatnonzero", "api/generated/cupynumeric.flip", "api/generated/cupynumeric.fliplr", "api/generated/cupynumeric.flipud", "api/generated/cupynumeric.float_power", "api/generated/cupynumeric.floor", "api/generated/cupynumeric.floor_divide", "api/generated/cupynumeric.fmax", "api/generated/cupynumeric.fmin", "api/generated/cupynumeric.fmod", "api/generated/cupynumeric.frexp", "api/generated/cupynumeric.full", "api/generated/cupynumeric.full_like", "api/generated/cupynumeric.gcd", "api/generated/cupynumeric.gradient", "api/generated/cupynumeric.greater", "api/generated/cupynumeric.greater_equal", "api/generated/cupynumeric.hamming", "api/generated/cupynumeric.hanning", "api/generated/cupynumeric.histogram", "api/generated/cupynumeric.hsplit", "api/generated/cupynumeric.hstack", "api/generated/cupynumeric.hypot", "api/generated/cupynumeric.identity", "api/generated/cupynumeric.imag", "api/generated/cupynumeric.indices", "api/generated/cupynumeric.inner", "api/generated/cupynumeric.invert", "api/generated/cupynumeric.isclose", "api/generated/cupynumeric.iscomplex", "api/generated/cupynumeric.iscomplexobj", "api/generated/cupynumeric.isfinite", "api/generated/cupynumeric.isinf", "api/generated/cupynumeric.isnan", "api/generated/cupynumeric.isneginf", "api/generated/cupynumeric.isposinf", "api/generated/cupynumeric.isreal", "api/generated/cupynumeric.isrealobj", "api/generated/cupynumeric.isscalar", "api/generated/cupynumeric.ix_", "api/generated/cupynumeric.kaiser", "api/generated/cupynumeric.lcm", "api/generated/cupynumeric.ldexp", "api/generated/cupynumeric.left_shift", "api/generated/cupynumeric.less", "api/generated/cupynumeric.less_equal", "api/generated/cupynumeric.linalg.cholesky", "api/generated/cupynumeric.linalg.eig", "api/generated/cupynumeric.linalg.eigvals", "api/generated/cupynumeric.linalg.expm", "api/generated/cupynumeric.linalg.matrix_power", "api/generated/cupynumeric.linalg.multi_dot", "api/generated/cupynumeric.linalg.norm", "api/generated/cupynumeric.linalg.qr", "api/generated/cupynumeric.linalg.solve", "api/generated/cupynumeric.linalg.svd", "api/generated/cupynumeric.linspace", "api/generated/cupynumeric.load", "api/generated/cupynumeric.log", "api/generated/cupynumeric.log10", "api/generated/cupynumeric.log1p", "api/generated/cupynumeric.log2", "api/generated/cupynumeric.logaddexp", "api/generated/cupynumeric.logaddexp2", "api/generated/cupynumeric.logical_and", "api/generated/cupynumeric.logical_not", "api/generated/cupynumeric.logical_or", "api/generated/cupynumeric.logical_xor", "api/generated/cupynumeric.mask_indices", "api/generated/cupynumeric.matmul", "api/generated/cupynumeric.maximum", "api/generated/cupynumeric.mean", "api/generated/cupynumeric.median", "api/generated/cupynumeric.meshgrid", "api/generated/cupynumeric.minimum", "api/generated/cupynumeric.mod", "api/generated/cupynumeric.modf", "api/generated/cupynumeric.moveaxis", "api/generated/cupynumeric.msort", "api/generated/cupynumeric.multiply", "api/generated/cupynumeric.nanargmax", "api/generated/cupynumeric.nanargmin", "api/generated/cupynumeric.nancumprod", "api/generated/cupynumeric.nancumsum", "api/generated/cupynumeric.nanmax", "api/generated/cupynumeric.nanmean", "api/generated/cupynumeric.nanmedian", "api/generated/cupynumeric.nanmin", "api/generated/cupynumeric.nanpercentile", "api/generated/cupynumeric.nanprod", "api/generated/cupynumeric.nanquantile", "api/generated/cupynumeric.nansum", "api/generated/cupynumeric.ndarray.T", "api/generated/cupynumeric.ndarray.__abs__", "api/generated/cupynumeric.ndarray.__add__", "api/generated/cupynumeric.ndarray.__and__", "api/generated/cupynumeric.ndarray.__array__", "api/generated/cupynumeric.ndarray.__bool__", "api/generated/cupynumeric.ndarray.__complex__", "api/generated/cupynumeric.ndarray.__contains__", "api/generated/cupynumeric.ndarray.__copy__", "api/generated/cupynumeric.ndarray.__deepcopy__", "api/generated/cupynumeric.ndarray.__divmod__", "api/generated/cupynumeric.ndarray.__eq__", "api/generated/cupynumeric.ndarray.__float__", "api/generated/cupynumeric.ndarray.__floordiv__", "api/generated/cupynumeric.ndarray.__ge__", "api/generated/cupynumeric.ndarray.__getitem__", "api/generated/cupynumeric.ndarray.__gt__", "api/generated/cupynumeric.ndarray.__iadd__", "api/generated/cupynumeric.ndarray.__iand__", "api/generated/cupynumeric.ndarray.__ifloordiv__", "api/generated/cupynumeric.ndarray.__ilshift__", "api/generated/cupynumeric.ndarray.__imatmul__", "api/generated/cupynumeric.ndarray.__imod__", "api/generated/cupynumeric.ndarray.__imul__", "api/generated/cupynumeric.ndarray.__index__", "api/generated/cupynumeric.ndarray.__int__", "api/generated/cupynumeric.ndarray.__invert__", "api/generated/cupynumeric.ndarray.__ior__", "api/generated/cupynumeric.ndarray.__ipow__", "api/generated/cupynumeric.ndarray.__irshift__", "api/generated/cupynumeric.ndarray.__isub__", "api/generated/cupynumeric.ndarray.__itruediv__", "api/generated/cupynumeric.ndarray.__ixor__", "api/generated/cupynumeric.ndarray.__le__", "api/generated/cupynumeric.ndarray.__len__", "api/generated/cupynumeric.ndarray.__lshift__", "api/generated/cupynumeric.ndarray.__lt__", "api/generated/cupynumeric.ndarray.__matmul__", "api/generated/cupynumeric.ndarray.__mod__", "api/generated/cupynumeric.ndarray.__mul__", "api/generated/cupynumeric.ndarray.__ne__", "api/generated/cupynumeric.ndarray.__neg__", "api/generated/cupynumeric.ndarray.__new__", "api/generated/cupynumeric.ndarray.__or__", "api/generated/cupynumeric.ndarray.__pos__", "api/generated/cupynumeric.ndarray.__pow__", "api/generated/cupynumeric.ndarray.__reduce__", "api/generated/cupynumeric.ndarray.__repr__", "api/generated/cupynumeric.ndarray.__rmatmul__", "api/generated/cupynumeric.ndarray.__rshift__", "api/generated/cupynumeric.ndarray.__setitem__", "api/generated/cupynumeric.ndarray.__setstate__", "api/generated/cupynumeric.ndarray.__str__", "api/generated/cupynumeric.ndarray.__sub__", "api/generated/cupynumeric.ndarray.__truediv__", "api/generated/cupynumeric.ndarray.__xor__", "api/generated/cupynumeric.ndarray.all", "api/generated/cupynumeric.ndarray.any", "api/generated/cupynumeric.ndarray.argmax", "api/generated/cupynumeric.ndarray.argmin", "api/generated/cupynumeric.ndarray.argpartition", "api/generated/cupynumeric.ndarray.argsort", "api/generated/cupynumeric.ndarray.astype", "api/generated/cupynumeric.ndarray.base", "api/generated/cupynumeric.ndarray.choose", "api/generated/cupynumeric.ndarray.clip", "api/generated/cupynumeric.ndarray.compress", "api/generated/cupynumeric.ndarray.conj", "api/generated/cupynumeric.ndarray.conjugate", "api/generated/cupynumeric.ndarray.copy", "api/generated/cupynumeric.ndarray.ctypes", "api/generated/cupynumeric.ndarray.cumprod", "api/generated/cupynumeric.ndarray.cumsum", "api/generated/cupynumeric.ndarray.data", "api/generated/cupynumeric.ndarray.diagonal", "api/generated/cupynumeric.ndarray.dot", "api/generated/cupynumeric.ndarray.dtype", "api/generated/cupynumeric.ndarray.dump", "api/generated/cupynumeric.ndarray.dumps", "api/generated/cupynumeric.ndarray.fill", "api/generated/cupynumeric.ndarray.flags", "api/generated/cupynumeric.ndarray.flat", "api/generated/cupynumeric.ndarray.flatten", "api/generated/cupynumeric.ndarray.flip", "api/generated/cupynumeric.ndarray.getfield", "api/generated/cupynumeric.ndarray.imag", "api/generated/cupynumeric.ndarray.item", "api/generated/cupynumeric.ndarray.itemset", "api/generated/cupynumeric.ndarray.itemsize", "api/generated/cupynumeric.ndarray.max", "api/generated/cupynumeric.ndarray.mean", "api/generated/cupynumeric.ndarray.min", "api/generated/cupynumeric.ndarray.nbytes", "api/generated/cupynumeric.ndarray.ndim", "api/generated/cupynumeric.ndarray.nonzero", "api/generated/cupynumeric.ndarray.partition", "api/generated/cupynumeric.ndarray.prod", "api/generated/cupynumeric.ndarray.put", "api/generated/cupynumeric.ndarray.ravel", "api/generated/cupynumeric.ndarray.real", "api/generated/cupynumeric.ndarray.reshape", "api/generated/cupynumeric.ndarray.searchsorted", "api/generated/cupynumeric.ndarray.setfield", "api/generated/cupynumeric.ndarray.setflags", "api/generated/cupynumeric.ndarray.shape", "api/generated/cupynumeric.ndarray.size", "api/generated/cupynumeric.ndarray.sort", "api/generated/cupynumeric.ndarray.squeeze", "api/generated/cupynumeric.ndarray.strides", "api/generated/cupynumeric.ndarray.sum", "api/generated/cupynumeric.ndarray.swapaxes", "api/generated/cupynumeric.ndarray.take", "api/generated/cupynumeric.ndarray.tobytes", "api/generated/cupynumeric.ndarray.tofile", "api/generated/cupynumeric.ndarray.tolist", "api/generated/cupynumeric.ndarray.tostring", "api/generated/cupynumeric.ndarray.trace", "api/generated/cupynumeric.ndarray.transpose", "api/generated/cupynumeric.ndarray.unique", "api/generated/cupynumeric.ndarray.var", "api/generated/cupynumeric.ndarray.view", "api/generated/cupynumeric.ndim", "api/generated/cupynumeric.negative", "api/generated/cupynumeric.nextafter", "api/generated/cupynumeric.nonzero", "api/generated/cupynumeric.not_equal", "api/generated/cupynumeric.ones", "api/generated/cupynumeric.ones_like", "api/generated/cupynumeric.outer", "api/generated/cupynumeric.packbits", "api/generated/cupynumeric.partition", "api/generated/cupynumeric.percentile", "api/generated/cupynumeric.place", "api/generated/cupynumeric.positive", "api/generated/cupynumeric.power", "api/generated/cupynumeric.prod", "api/generated/cupynumeric.put", "api/generated/cupynumeric.put_along_axis", "api/generated/cupynumeric.putmask", "api/generated/cupynumeric.quantile", "api/generated/cupynumeric.rad2deg", "api/generated/cupynumeric.radians", "api/generated/cupynumeric.random.beta", "api/generated/cupynumeric.random.binomial", "api/generated/cupynumeric.random.bytes", "api/generated/cupynumeric.random.chisquare", "api/generated/cupynumeric.random.default_rng", "api/generated/cupynumeric.random.exponential", "api/generated/cupynumeric.random.f", "api/generated/cupynumeric.random.gamma", "api/generated/cupynumeric.random.geometric", "api/generated/cupynumeric.random.gumbel", "api/generated/cupynumeric.random.hypergeometric", "api/generated/cupynumeric.random.laplace", "api/generated/cupynumeric.random.logistic", "api/generated/cupynumeric.random.lognormal", "api/generated/cupynumeric.random.logseries", "api/generated/cupynumeric.random.negative_binomial", "api/generated/cupynumeric.random.noncentral_chisquare", "api/generated/cupynumeric.random.noncentral_f", "api/generated/cupynumeric.random.normal", "api/generated/cupynumeric.random.pareto", "api/generated/cupynumeric.random.poisson", "api/generated/cupynumeric.random.power", "api/generated/cupynumeric.random.rand", "api/generated/cupynumeric.random.randint", "api/generated/cupynumeric.random.randn", "api/generated/cupynumeric.random.random", "api/generated/cupynumeric.random.random_integers", "api/generated/cupynumeric.random.random_sample", "api/generated/cupynumeric.random.ranf", "api/generated/cupynumeric.random.rayleigh", "api/generated/cupynumeric.random.sample", "api/generated/cupynumeric.random.seed", "api/generated/cupynumeric.random.standard_cauchy", "api/generated/cupynumeric.random.standard_exponential", "api/generated/cupynumeric.random.standard_gamma", "api/generated/cupynumeric.random.standard_t", "api/generated/cupynumeric.random.triangular", "api/generated/cupynumeric.random.uniform", "api/generated/cupynumeric.random.vonmises", "api/generated/cupynumeric.random.wald", "api/generated/cupynumeric.random.weibull", "api/generated/cupynumeric.random.zipf", "api/generated/cupynumeric.ravel", "api/generated/cupynumeric.real", "api/generated/cupynumeric.reciprocal", "api/generated/cupynumeric.remainder", "api/generated/cupynumeric.repeat", "api/generated/cupynumeric.reshape", "api/generated/cupynumeric.right_shift", "api/generated/cupynumeric.rint", "api/generated/cupynumeric.roll", "api/generated/cupynumeric.rot90", "api/generated/cupynumeric.round", "api/generated/cupynumeric.row_stack", "api/generated/cupynumeric.searchsorted", "api/generated/cupynumeric.select", "api/generated/cupynumeric.shape", "api/generated/cupynumeric.sign", "api/generated/cupynumeric.signbit", "api/generated/cupynumeric.sin", "api/generated/cupynumeric.sinh", "api/generated/cupynumeric.sort", "api/generated/cupynumeric.sort_complex", "api/generated/cupynumeric.split", "api/generated/cupynumeric.sqrt", "api/generated/cupynumeric.square", "api/generated/cupynumeric.squeeze", "api/generated/cupynumeric.stack", "api/generated/cupynumeric.subtract", "api/generated/cupynumeric.sum", "api/generated/cupynumeric.swapaxes", "api/generated/cupynumeric.take", "api/generated/cupynumeric.take_along_axis", "api/generated/cupynumeric.tan", "api/generated/cupynumeric.tanh", "api/generated/cupynumeric.tensordot", "api/generated/cupynumeric.tile", "api/generated/cupynumeric.trace", "api/generated/cupynumeric.transpose", "api/generated/cupynumeric.tri", "api/generated/cupynumeric.tril", "api/generated/cupynumeric.tril_indices", "api/generated/cupynumeric.tril_indices_from", "api/generated/cupynumeric.triu", "api/generated/cupynumeric.triu_indices", "api/generated/cupynumeric.triu_indices_from", "api/generated/cupynumeric.true_divide", "api/generated/cupynumeric.trunc", "api/generated/cupynumeric.unique", "api/generated/cupynumeric.unpackbits", "api/generated/cupynumeric.unravel_index", "api/generated/cupynumeric.var", "api/generated/cupynumeric.vdot", "api/generated/cupynumeric.vsplit", "api/generated/cupynumeric.vstack", "api/generated/cupynumeric.where", "api/generated/cupynumeric.zeros", "api/generated/cupynumeric.zeros_like", "api/index", "api/indexing", "api/io", "api/linalg", "api/logic", "api/manipulation", "api/math", "api/ndarray", "api/random", "api/routines", "api/set", "api/settings", "api/sorting", "api/statistics", "api/window", "developer/CONTRIBUTING", "developer/building", "developer/index", "developer/testing", "examples/black_scholes", "examples/cholesky", "examples/compact_finite_difference", "examples/edge_detection", "examples/index", "examples/kmeans", "examples/newton_raphson_2d", "examples/stencil", "examples/torchswe", "faqs", "index", "installation", "oss-licenses", "user/advanced", "user/differences", "user/howtos/benchmarking", "user/howtos/index", "user/howtos/measuring", "user/howtos/patching", "user/index", "user/practices", "user/tutorial", "user/usage"], "envversion": {"nbsphinx": 4, "sphinx": 64, "sphinx.domains.c": 3, "sphinx.domains.changeset": 1, "sphinx.domains.citation": 1, "sphinx.domains.cpp": 9, "sphinx.domains.index": 1, "sphinx.domains.javascript": 3, "sphinx.domains.math": 2, "sphinx.domains.python": 4, "sphinx.domains.rst": 2, "sphinx.domains.std": 2, "sphinx.ext.intersphinx": 1}, "filenames": ["_implemented.rst", "api/_bitgenerator.rst", "api/_generator.rst", "api/_grouped.rst", "api/_ndarray.rst", "api/binary.rst", "api/broadcast.rst", "api/classes.rst", "api/comparison.rst", "api/creation.rst", "api/datatype.rst", "api/fft.rst", "api/generated/cupynumeric.absolute.rst", "api/generated/cupynumeric.add.rst", "api/generated/cupynumeric.all.rst", "api/generated/cupynumeric.allclose.rst", "api/generated/cupynumeric.amax.rst", "api/generated/cupynumeric.amin.rst", "api/generated/cupynumeric.angle.rst", "api/generated/cupynumeric.any.rst", "api/generated/cupynumeric.append.rst", "api/generated/cupynumeric.arange.rst", "api/generated/cupynumeric.arccos.rst", "api/generated/cupynumeric.arccosh.rst", "api/generated/cupynumeric.arcsin.rst", "api/generated/cupynumeric.arcsinh.rst", "api/generated/cupynumeric.arctan.rst", "api/generated/cupynumeric.arctan2.rst", "api/generated/cupynumeric.arctanh.rst", "api/generated/cupynumeric.argmax.rst", "api/generated/cupynumeric.argmin.rst", "api/generated/cupynumeric.argpartition.rst", "api/generated/cupynumeric.argsort.rst", "api/generated/cupynumeric.argwhere.rst", "api/generated/cupynumeric.array.rst", "api/generated/cupynumeric.array_equal.rst", "api/generated/cupynumeric.array_split.rst", "api/generated/cupynumeric.asarray.rst", "api/generated/cupynumeric.atleast_1d.rst", "api/generated/cupynumeric.atleast_2d.rst", "api/generated/cupynumeric.atleast_3d.rst", "api/generated/cupynumeric.average.rst", "api/generated/cupynumeric.bartlett.rst", "api/generated/cupynumeric.bincount.rst", "api/generated/cupynumeric.bitwise_and.rst", "api/generated/cupynumeric.bitwise_or.rst", "api/generated/cupynumeric.bitwise_xor.rst", "api/generated/cupynumeric.blackman.rst", "api/generated/cupynumeric.block.rst", "api/generated/cupynumeric.broadcast_arrays.rst", "api/generated/cupynumeric.broadcast_shapes.rst", "api/generated/cupynumeric.broadcast_to.rst", "api/generated/cupynumeric.cbrt.rst", "api/generated/cupynumeric.ceil.rst", "api/generated/cupynumeric.choose.rst", "api/generated/cupynumeric.clip.rst", "api/generated/cupynumeric.column_stack.rst", "api/generated/cupynumeric.compress.rst", "api/generated/cupynumeric.concatenate.rst", "api/generated/cupynumeric.conj.rst", "api/generated/cupynumeric.conjugate.rst", "api/generated/cupynumeric.convolve.rst", "api/generated/cupynumeric.copy.rst", "api/generated/cupynumeric.copysign.rst", "api/generated/cupynumeric.cos.rst", "api/generated/cupynumeric.cosh.rst", "api/generated/cupynumeric.count_nonzero.rst", "api/generated/cupynumeric.cov.rst", "api/generated/cupynumeric.cumprod.rst", "api/generated/cupynumeric.cumsum.rst", "api/generated/cupynumeric.deg2rad.rst", "api/generated/cupynumeric.degrees.rst", "api/generated/cupynumeric.diag.rst", "api/generated/cupynumeric.diag_indices.rst", "api/generated/cupynumeric.diag_indices_from.rst", "api/generated/cupynumeric.diagonal.rst", "api/generated/cupynumeric.diff.rst", "api/generated/cupynumeric.digitize.rst", "api/generated/cupynumeric.divide.rst", "api/generated/cupynumeric.dot.rst", "api/generated/cupynumeric.dsplit.rst", "api/generated/cupynumeric.dstack.rst", "api/generated/cupynumeric.einsum.rst", "api/generated/cupynumeric.einsum_path.rst", "api/generated/cupynumeric.empty.rst", "api/generated/cupynumeric.empty_like.rst", "api/generated/cupynumeric.equal.rst", "api/generated/cupynumeric.exp.rst", "api/generated/cupynumeric.exp2.rst", "api/generated/cupynumeric.expand_dims.rst", "api/generated/cupynumeric.expm1.rst", "api/generated/cupynumeric.extract.rst", "api/generated/cupynumeric.eye.rst", "api/generated/cupynumeric.fabs.rst", "api/generated/cupynumeric.fft.fft.rst", "api/generated/cupynumeric.fft.fft2.rst", "api/generated/cupynumeric.fft.fftn.rst", "api/generated/cupynumeric.fft.fftshift.rst", "api/generated/cupynumeric.fft.hfft.rst", "api/generated/cupynumeric.fft.ifft.rst", "api/generated/cupynumeric.fft.ifft2.rst", "api/generated/cupynumeric.fft.ifftn.rst", "api/generated/cupynumeric.fft.ifftshift.rst", "api/generated/cupynumeric.fft.ihfft.rst", "api/generated/cupynumeric.fft.irfft.rst", "api/generated/cupynumeric.fft.irfft2.rst", "api/generated/cupynumeric.fft.irfftn.rst", "api/generated/cupynumeric.fft.rfft.rst", "api/generated/cupynumeric.fft.rfft2.rst", "api/generated/cupynumeric.fft.rfftn.rst", "api/generated/cupynumeric.fill_diagonal.rst", "api/generated/cupynumeric.find_common_type.rst", "api/generated/cupynumeric.flatnonzero.rst", "api/generated/cupynumeric.flip.rst", "api/generated/cupynumeric.fliplr.rst", "api/generated/cupynumeric.flipud.rst", "api/generated/cupynumeric.float_power.rst", "api/generated/cupynumeric.floor.rst", "api/generated/cupynumeric.floor_divide.rst", "api/generated/cupynumeric.fmax.rst", "api/generated/cupynumeric.fmin.rst", "api/generated/cupynumeric.fmod.rst", "api/generated/cupynumeric.frexp.rst", "api/generated/cupynumeric.full.rst", "api/generated/cupynumeric.full_like.rst", "api/generated/cupynumeric.gcd.rst", "api/generated/cupynumeric.gradient.rst", "api/generated/cupynumeric.greater.rst", "api/generated/cupynumeric.greater_equal.rst", "api/generated/cupynumeric.hamming.rst", "api/generated/cupynumeric.hanning.rst", "api/generated/cupynumeric.histogram.rst", "api/generated/cupynumeric.hsplit.rst", "api/generated/cupynumeric.hstack.rst", "api/generated/cupynumeric.hypot.rst", "api/generated/cupynumeric.identity.rst", "api/generated/cupynumeric.imag.rst", "api/generated/cupynumeric.indices.rst", "api/generated/cupynumeric.inner.rst", "api/generated/cupynumeric.invert.rst", "api/generated/cupynumeric.isclose.rst", "api/generated/cupynumeric.iscomplex.rst", "api/generated/cupynumeric.iscomplexobj.rst", "api/generated/cupynumeric.isfinite.rst", "api/generated/cupynumeric.isinf.rst", "api/generated/cupynumeric.isnan.rst", "api/generated/cupynumeric.isneginf.rst", "api/generated/cupynumeric.isposinf.rst", "api/generated/cupynumeric.isreal.rst", "api/generated/cupynumeric.isrealobj.rst", "api/generated/cupynumeric.isscalar.rst", "api/generated/cupynumeric.ix_.rst", "api/generated/cupynumeric.kaiser.rst", "api/generated/cupynumeric.lcm.rst", "api/generated/cupynumeric.ldexp.rst", "api/generated/cupynumeric.left_shift.rst", "api/generated/cupynumeric.less.rst", "api/generated/cupynumeric.less_equal.rst", "api/generated/cupynumeric.linalg.cholesky.rst", "api/generated/cupynumeric.linalg.eig.rst", "api/generated/cupynumeric.linalg.eigvals.rst", "api/generated/cupynumeric.linalg.expm.rst", "api/generated/cupynumeric.linalg.matrix_power.rst", "api/generated/cupynumeric.linalg.multi_dot.rst", "api/generated/cupynumeric.linalg.norm.rst", "api/generated/cupynumeric.linalg.qr.rst", "api/generated/cupynumeric.linalg.solve.rst", "api/generated/cupynumeric.linalg.svd.rst", "api/generated/cupynumeric.linspace.rst", "api/generated/cupynumeric.load.rst", "api/generated/cupynumeric.log.rst", "api/generated/cupynumeric.log10.rst", "api/generated/cupynumeric.log1p.rst", "api/generated/cupynumeric.log2.rst", "api/generated/cupynumeric.logaddexp.rst", "api/generated/cupynumeric.logaddexp2.rst", "api/generated/cupynumeric.logical_and.rst", "api/generated/cupynumeric.logical_not.rst", "api/generated/cupynumeric.logical_or.rst", "api/generated/cupynumeric.logical_xor.rst", "api/generated/cupynumeric.mask_indices.rst", "api/generated/cupynumeric.matmul.rst", "api/generated/cupynumeric.maximum.rst", "api/generated/cupynumeric.mean.rst", "api/generated/cupynumeric.median.rst", "api/generated/cupynumeric.meshgrid.rst", "api/generated/cupynumeric.minimum.rst", "api/generated/cupynumeric.mod.rst", "api/generated/cupynumeric.modf.rst", "api/generated/cupynumeric.moveaxis.rst", "api/generated/cupynumeric.msort.rst", "api/generated/cupynumeric.multiply.rst", "api/generated/cupynumeric.nanargmax.rst", "api/generated/cupynumeric.nanargmin.rst", "api/generated/cupynumeric.nancumprod.rst", "api/generated/cupynumeric.nancumsum.rst", "api/generated/cupynumeric.nanmax.rst", "api/generated/cupynumeric.nanmean.rst", "api/generated/cupynumeric.nanmedian.rst", "api/generated/cupynumeric.nanmin.rst", "api/generated/cupynumeric.nanpercentile.rst", "api/generated/cupynumeric.nanprod.rst", "api/generated/cupynumeric.nanquantile.rst", "api/generated/cupynumeric.nansum.rst", "api/generated/cupynumeric.ndarray.T.rst", "api/generated/cupynumeric.ndarray.__abs__.rst", "api/generated/cupynumeric.ndarray.__add__.rst", "api/generated/cupynumeric.ndarray.__and__.rst", "api/generated/cupynumeric.ndarray.__array__.rst", "api/generated/cupynumeric.ndarray.__bool__.rst", "api/generated/cupynumeric.ndarray.__complex__.rst", "api/generated/cupynumeric.ndarray.__contains__.rst", "api/generated/cupynumeric.ndarray.__copy__.rst", "api/generated/cupynumeric.ndarray.__deepcopy__.rst", "api/generated/cupynumeric.ndarray.__divmod__.rst", "api/generated/cupynumeric.ndarray.__eq__.rst", "api/generated/cupynumeric.ndarray.__float__.rst", "api/generated/cupynumeric.ndarray.__floordiv__.rst", "api/generated/cupynumeric.ndarray.__ge__.rst", "api/generated/cupynumeric.ndarray.__getitem__.rst", "api/generated/cupynumeric.ndarray.__gt__.rst", "api/generated/cupynumeric.ndarray.__iadd__.rst", "api/generated/cupynumeric.ndarray.__iand__.rst", "api/generated/cupynumeric.ndarray.__ifloordiv__.rst", "api/generated/cupynumeric.ndarray.__ilshift__.rst", "api/generated/cupynumeric.ndarray.__imatmul__.rst", "api/generated/cupynumeric.ndarray.__imod__.rst", "api/generated/cupynumeric.ndarray.__imul__.rst", "api/generated/cupynumeric.ndarray.__index__.rst", "api/generated/cupynumeric.ndarray.__int__.rst", "api/generated/cupynumeric.ndarray.__invert__.rst", "api/generated/cupynumeric.ndarray.__ior__.rst", "api/generated/cupynumeric.ndarray.__ipow__.rst", "api/generated/cupynumeric.ndarray.__irshift__.rst", "api/generated/cupynumeric.ndarray.__isub__.rst", "api/generated/cupynumeric.ndarray.__itruediv__.rst", "api/generated/cupynumeric.ndarray.__ixor__.rst", "api/generated/cupynumeric.ndarray.__le__.rst", "api/generated/cupynumeric.ndarray.__len__.rst", "api/generated/cupynumeric.ndarray.__lshift__.rst", "api/generated/cupynumeric.ndarray.__lt__.rst", "api/generated/cupynumeric.ndarray.__matmul__.rst", "api/generated/cupynumeric.ndarray.__mod__.rst", "api/generated/cupynumeric.ndarray.__mul__.rst", "api/generated/cupynumeric.ndarray.__ne__.rst", "api/generated/cupynumeric.ndarray.__neg__.rst", "api/generated/cupynumeric.ndarray.__new__.rst", "api/generated/cupynumeric.ndarray.__or__.rst", "api/generated/cupynumeric.ndarray.__pos__.rst", "api/generated/cupynumeric.ndarray.__pow__.rst", "api/generated/cupynumeric.ndarray.__reduce__.rst", "api/generated/cupynumeric.ndarray.__repr__.rst", "api/generated/cupynumeric.ndarray.__rmatmul__.rst", "api/generated/cupynumeric.ndarray.__rshift__.rst", "api/generated/cupynumeric.ndarray.__setitem__.rst", "api/generated/cupynumeric.ndarray.__setstate__.rst", "api/generated/cupynumeric.ndarray.__str__.rst", "api/generated/cupynumeric.ndarray.__sub__.rst", "api/generated/cupynumeric.ndarray.__truediv__.rst", "api/generated/cupynumeric.ndarray.__xor__.rst", "api/generated/cupynumeric.ndarray.all.rst", "api/generated/cupynumeric.ndarray.any.rst", "api/generated/cupynumeric.ndarray.argmax.rst", "api/generated/cupynumeric.ndarray.argmin.rst", "api/generated/cupynumeric.ndarray.argpartition.rst", "api/generated/cupynumeric.ndarray.argsort.rst", "api/generated/cupynumeric.ndarray.astype.rst", "api/generated/cupynumeric.ndarray.base.rst", "api/generated/cupynumeric.ndarray.choose.rst", "api/generated/cupynumeric.ndarray.clip.rst", "api/generated/cupynumeric.ndarray.compress.rst", "api/generated/cupynumeric.ndarray.conj.rst", "api/generated/cupynumeric.ndarray.conjugate.rst", "api/generated/cupynumeric.ndarray.copy.rst", "api/generated/cupynumeric.ndarray.ctypes.rst", "api/generated/cupynumeric.ndarray.cumprod.rst", "api/generated/cupynumeric.ndarray.cumsum.rst", "api/generated/cupynumeric.ndarray.data.rst", "api/generated/cupynumeric.ndarray.diagonal.rst", "api/generated/cupynumeric.ndarray.dot.rst", "api/generated/cupynumeric.ndarray.dtype.rst", "api/generated/cupynumeric.ndarray.dump.rst", "api/generated/cupynumeric.ndarray.dumps.rst", "api/generated/cupynumeric.ndarray.fill.rst", "api/generated/cupynumeric.ndarray.flags.rst", "api/generated/cupynumeric.ndarray.flat.rst", "api/generated/cupynumeric.ndarray.flatten.rst", "api/generated/cupynumeric.ndarray.flip.rst", "api/generated/cupynumeric.ndarray.getfield.rst", "api/generated/cupynumeric.ndarray.imag.rst", "api/generated/cupynumeric.ndarray.item.rst", "api/generated/cupynumeric.ndarray.itemset.rst", "api/generated/cupynumeric.ndarray.itemsize.rst", "api/generated/cupynumeric.ndarray.max.rst", "api/generated/cupynumeric.ndarray.mean.rst", "api/generated/cupynumeric.ndarray.min.rst", "api/generated/cupynumeric.ndarray.nbytes.rst", "api/generated/cupynumeric.ndarray.ndim.rst", "api/generated/cupynumeric.ndarray.nonzero.rst", "api/generated/cupynumeric.ndarray.partition.rst", "api/generated/cupynumeric.ndarray.prod.rst", "api/generated/cupynumeric.ndarray.put.rst", "api/generated/cupynumeric.ndarray.ravel.rst", "api/generated/cupynumeric.ndarray.real.rst", "api/generated/cupynumeric.ndarray.reshape.rst", "api/generated/cupynumeric.ndarray.searchsorted.rst", "api/generated/cupynumeric.ndarray.setfield.rst", "api/generated/cupynumeric.ndarray.setflags.rst", "api/generated/cupynumeric.ndarray.shape.rst", "api/generated/cupynumeric.ndarray.size.rst", "api/generated/cupynumeric.ndarray.sort.rst", "api/generated/cupynumeric.ndarray.squeeze.rst", "api/generated/cupynumeric.ndarray.strides.rst", "api/generated/cupynumeric.ndarray.sum.rst", "api/generated/cupynumeric.ndarray.swapaxes.rst", "api/generated/cupynumeric.ndarray.take.rst", "api/generated/cupynumeric.ndarray.tobytes.rst", "api/generated/cupynumeric.ndarray.tofile.rst", "api/generated/cupynumeric.ndarray.tolist.rst", "api/generated/cupynumeric.ndarray.tostring.rst", "api/generated/cupynumeric.ndarray.trace.rst", "api/generated/cupynumeric.ndarray.transpose.rst", "api/generated/cupynumeric.ndarray.unique.rst", "api/generated/cupynumeric.ndarray.var.rst", "api/generated/cupynumeric.ndarray.view.rst", "api/generated/cupynumeric.ndim.rst", "api/generated/cupynumeric.negative.rst", "api/generated/cupynumeric.nextafter.rst", "api/generated/cupynumeric.nonzero.rst", "api/generated/cupynumeric.not_equal.rst", "api/generated/cupynumeric.ones.rst", "api/generated/cupynumeric.ones_like.rst", "api/generated/cupynumeric.outer.rst", "api/generated/cupynumeric.packbits.rst", "api/generated/cupynumeric.partition.rst", "api/generated/cupynumeric.percentile.rst", "api/generated/cupynumeric.place.rst", "api/generated/cupynumeric.positive.rst", "api/generated/cupynumeric.power.rst", "api/generated/cupynumeric.prod.rst", "api/generated/cupynumeric.put.rst", "api/generated/cupynumeric.put_along_axis.rst", "api/generated/cupynumeric.putmask.rst", "api/generated/cupynumeric.quantile.rst", "api/generated/cupynumeric.rad2deg.rst", "api/generated/cupynumeric.radians.rst", "api/generated/cupynumeric.random.beta.rst", "api/generated/cupynumeric.random.binomial.rst", "api/generated/cupynumeric.random.bytes.rst", "api/generated/cupynumeric.random.chisquare.rst", "api/generated/cupynumeric.random.default_rng.rst", "api/generated/cupynumeric.random.exponential.rst", "api/generated/cupynumeric.random.f.rst", "api/generated/cupynumeric.random.gamma.rst", "api/generated/cupynumeric.random.geometric.rst", "api/generated/cupynumeric.random.gumbel.rst", "api/generated/cupynumeric.random.hypergeometric.rst", "api/generated/cupynumeric.random.laplace.rst", "api/generated/cupynumeric.random.logistic.rst", "api/generated/cupynumeric.random.lognormal.rst", "api/generated/cupynumeric.random.logseries.rst", "api/generated/cupynumeric.random.negative_binomial.rst", "api/generated/cupynumeric.random.noncentral_chisquare.rst", "api/generated/cupynumeric.random.noncentral_f.rst", "api/generated/cupynumeric.random.normal.rst", "api/generated/cupynumeric.random.pareto.rst", "api/generated/cupynumeric.random.poisson.rst", "api/generated/cupynumeric.random.power.rst", "api/generated/cupynumeric.random.rand.rst", "api/generated/cupynumeric.random.randint.rst", "api/generated/cupynumeric.random.randn.rst", "api/generated/cupynumeric.random.random.rst", "api/generated/cupynumeric.random.random_integers.rst", "api/generated/cupynumeric.random.random_sample.rst", "api/generated/cupynumeric.random.ranf.rst", "api/generated/cupynumeric.random.rayleigh.rst", "api/generated/cupynumeric.random.sample.rst", "api/generated/cupynumeric.random.seed.rst", "api/generated/cupynumeric.random.standard_cauchy.rst", "api/generated/cupynumeric.random.standard_exponential.rst", "api/generated/cupynumeric.random.standard_gamma.rst", "api/generated/cupynumeric.random.standard_t.rst", "api/generated/cupynumeric.random.triangular.rst", "api/generated/cupynumeric.random.uniform.rst", "api/generated/cupynumeric.random.vonmises.rst", "api/generated/cupynumeric.random.wald.rst", "api/generated/cupynumeric.random.weibull.rst", "api/generated/cupynumeric.random.zipf.rst", "api/generated/cupynumeric.ravel.rst", "api/generated/cupynumeric.real.rst", "api/generated/cupynumeric.reciprocal.rst", "api/generated/cupynumeric.remainder.rst", "api/generated/cupynumeric.repeat.rst", "api/generated/cupynumeric.reshape.rst", "api/generated/cupynumeric.right_shift.rst", "api/generated/cupynumeric.rint.rst", "api/generated/cupynumeric.roll.rst", "api/generated/cupynumeric.rot90.rst", "api/generated/cupynumeric.round.rst", "api/generated/cupynumeric.row_stack.rst", "api/generated/cupynumeric.searchsorted.rst", "api/generated/cupynumeric.select.rst", "api/generated/cupynumeric.shape.rst", "api/generated/cupynumeric.sign.rst", "api/generated/cupynumeric.signbit.rst", "api/generated/cupynumeric.sin.rst", "api/generated/cupynumeric.sinh.rst", "api/generated/cupynumeric.sort.rst", "api/generated/cupynumeric.sort_complex.rst", "api/generated/cupynumeric.split.rst", "api/generated/cupynumeric.sqrt.rst", "api/generated/cupynumeric.square.rst", "api/generated/cupynumeric.squeeze.rst", "api/generated/cupynumeric.stack.rst", "api/generated/cupynumeric.subtract.rst", "api/generated/cupynumeric.sum.rst", "api/generated/cupynumeric.swapaxes.rst", "api/generated/cupynumeric.take.rst", "api/generated/cupynumeric.take_along_axis.rst", "api/generated/cupynumeric.tan.rst", "api/generated/cupynumeric.tanh.rst", "api/generated/cupynumeric.tensordot.rst", "api/generated/cupynumeric.tile.rst", "api/generated/cupynumeric.trace.rst", "api/generated/cupynumeric.transpose.rst", "api/generated/cupynumeric.tri.rst", "api/generated/cupynumeric.tril.rst", "api/generated/cupynumeric.tril_indices.rst", "api/generated/cupynumeric.tril_indices_from.rst", "api/generated/cupynumeric.triu.rst", "api/generated/cupynumeric.triu_indices.rst", "api/generated/cupynumeric.triu_indices_from.rst", "api/generated/cupynumeric.true_divide.rst", "api/generated/cupynumeric.trunc.rst", "api/generated/cupynumeric.unique.rst", "api/generated/cupynumeric.unpackbits.rst", "api/generated/cupynumeric.unravel_index.rst", "api/generated/cupynumeric.var.rst", "api/generated/cupynumeric.vdot.rst", "api/generated/cupynumeric.vsplit.rst", "api/generated/cupynumeric.vstack.rst", "api/generated/cupynumeric.where.rst", "api/generated/cupynumeric.zeros.rst", "api/generated/cupynumeric.zeros_like.rst", "api/index.rst", "api/indexing.rst", "api/io.rst", "api/linalg.rst", "api/logic.rst", "api/manipulation.rst", "api/math.rst", "api/ndarray.rst", "api/random.rst", "api/routines.rst", "api/set.rst", "api/settings.rst", "api/sorting.rst", "api/statistics.rst", "api/window.rst", "developer/CONTRIBUTING.md", "developer/building.rst", "developer/index.rst", "developer/testing.rst", "examples/black_scholes.ipynb", "examples/cholesky.ipynb", "examples/compact_finite_difference.ipynb", "examples/edge_detection.ipynb", "examples/index.rst", "examples/kmeans.ipynb", "examples/newton_raphson_2d.ipynb", "examples/stencil.ipynb", "examples/torchswe.ipynb", "faqs.rst", "index.rst", "installation.rst", "oss-licenses.rst", "user/advanced.rst", "user/differences.rst", "user/howtos/benchmarking.rst", "user/howtos/index.rst", "user/howtos/measuring.rst", "user/howtos/patching.rst", "user/index.rst", "user/practices.rst", "user/tutorial.rst", "user/usage.rst"], "indexentries": {"__abs__() (cupynumeric.ndarray method)": [[205, "cupynumeric.ndarray.__abs__", false]], "__add__() (cupynumeric.ndarray method)": [[206, "cupynumeric.ndarray.__add__", false]], "__and__() (cupynumeric.ndarray method)": [[207, "cupynumeric.ndarray.__and__", false]], "__array__() (cupynumeric.ndarray method)": [[208, "cupynumeric.ndarray.__array__", false]], "__bool__() (cupynumeric.ndarray method)": [[209, "cupynumeric.ndarray.__bool__", false]], "__complex__() (cupynumeric.ndarray method)": [[210, "cupynumeric.ndarray.__complex__", false]], "__contains__() (cupynumeric.ndarray method)": [[211, "cupynumeric.ndarray.__contains__", false]], "__copy__() (cupynumeric.ndarray method)": [[212, "cupynumeric.ndarray.__copy__", false]], "__deepcopy__() (cupynumeric.ndarray method)": [[213, "cupynumeric.ndarray.__deepcopy__", false]], "__divmod__() (cupynumeric.ndarray method)": [[214, "cupynumeric.ndarray.__divmod__", false]], "__eq__() (cupynumeric.ndarray method)": [[215, "cupynumeric.ndarray.__eq__", false]], "__float__() (cupynumeric.ndarray method)": [[216, "cupynumeric.ndarray.__float__", false]], "__floordiv__() (cupynumeric.ndarray method)": [[217, "cupynumeric.ndarray.__floordiv__", false]], "__ge__() (cupynumeric.ndarray method)": [[218, "cupynumeric.ndarray.__ge__", false]], "__getitem__() (cupynumeric.ndarray method)": [[219, "cupynumeric.ndarray.__getitem__", false]], "__gt__() (cupynumeric.ndarray method)": [[220, "cupynumeric.ndarray.__gt__", false]], "__iadd__() (cupynumeric.ndarray method)": [[221, "cupynumeric.ndarray.__iadd__", false]], "__iand__() (cupynumeric.ndarray method)": [[222, "cupynumeric.ndarray.__iand__", false]], "__ifloordiv__() (cupynumeric.ndarray method)": [[223, "cupynumeric.ndarray.__ifloordiv__", false]], "__ilshift__() (cupynumeric.ndarray method)": [[224, "cupynumeric.ndarray.__ilshift__", false]], "__imatmul__() (cupynumeric.ndarray method)": [[225, "cupynumeric.ndarray.__imatmul__", false]], "__imod__() (cupynumeric.ndarray method)": [[226, "cupynumeric.ndarray.__imod__", false]], "__imul__() (cupynumeric.ndarray method)": [[227, "cupynumeric.ndarray.__imul__", false]], "__index__() (cupynumeric.ndarray method)": [[228, "cupynumeric.ndarray.__index__", false]], "__init__() (cupynumeric.ndarray method)": [[4, "cupynumeric.ndarray.__init__", false]], "__init__() (cupynumeric.random.bitgenerator method)": [[1, "cupynumeric.random.BitGenerator.__init__", false]], "__init__() (cupynumeric.random.generator method)": [[2, "cupynumeric.random.Generator.__init__", false]], "__int__() (cupynumeric.ndarray method)": [[229, "cupynumeric.ndarray.__int__", false]], "__invert__() (cupynumeric.ndarray method)": [[230, "cupynumeric.ndarray.__invert__", false]], "__ior__() (cupynumeric.ndarray method)": [[231, "cupynumeric.ndarray.__ior__", false]], "__ipow__() (cupynumeric.ndarray method)": [[232, "cupynumeric.ndarray.__ipow__", false]], "__irshift__() (cupynumeric.ndarray method)": [[233, "cupynumeric.ndarray.__irshift__", false]], "__isub__() (cupynumeric.ndarray method)": [[234, "cupynumeric.ndarray.__isub__", false]], "__itruediv__() (cupynumeric.ndarray method)": [[235, "cupynumeric.ndarray.__itruediv__", false]], "__ixor__() (cupynumeric.ndarray method)": [[236, "cupynumeric.ndarray.__ixor__", false]], "__le__() (cupynumeric.ndarray method)": [[237, "cupynumeric.ndarray.__le__", false]], "__len__() (cupynumeric.ndarray method)": [[238, "cupynumeric.ndarray.__len__", false]], "__lshift__() (cupynumeric.ndarray method)": [[239, "cupynumeric.ndarray.__lshift__", false]], "__lt__() (cupynumeric.ndarray method)": [[240, "cupynumeric.ndarray.__lt__", false]], "__matmul__() (cupynumeric.ndarray method)": [[241, "cupynumeric.ndarray.__matmul__", false]], "__mod__() (cupynumeric.ndarray method)": [[242, "cupynumeric.ndarray.__mod__", false]], "__mul__() (cupynumeric.ndarray method)": [[243, "cupynumeric.ndarray.__mul__", false]], "__ne__() (cupynumeric.ndarray method)": [[244, "cupynumeric.ndarray.__ne__", false]], "__neg__() (cupynumeric.ndarray method)": [[245, "cupynumeric.ndarray.__neg__", false]], "__new__() (cupynumeric.ndarray method)": [[246, "cupynumeric.ndarray.__new__", false]], "__or__() (cupynumeric.ndarray method)": [[247, "cupynumeric.ndarray.__or__", false]], "__pos__() (cupynumeric.ndarray method)": [[248, "cupynumeric.ndarray.__pos__", false]], "__pow__() (cupynumeric.ndarray method)": [[249, "cupynumeric.ndarray.__pow__", false]], "__reduce__() (cupynumeric.ndarray method)": [[250, "cupynumeric.ndarray.__reduce__", false]], "__repr__() (cupynumeric.ndarray method)": [[251, "cupynumeric.ndarray.__repr__", false]], "__rmatmul__() (cupynumeric.ndarray method)": [[252, "cupynumeric.ndarray.__rmatmul__", false]], "__rshift__() (cupynumeric.ndarray method)": [[253, "cupynumeric.ndarray.__rshift__", false]], "__setitem__() (cupynumeric.ndarray method)": [[254, "cupynumeric.ndarray.__setitem__", false]], "__setstate__() (cupynumeric.ndarray method)": [[255, "cupynumeric.ndarray.__setstate__", false]], "__str__() (cupynumeric.ndarray method)": [[256, "cupynumeric.ndarray.__str__", false]], "__sub__() (cupynumeric.ndarray method)": [[257, "cupynumeric.ndarray.__sub__", false]], "__truediv__() (cupynumeric.ndarray method)": [[258, "cupynumeric.ndarray.__truediv__", false]], "__xor__() (cupynumeric.ndarray method)": [[259, "cupynumeric.ndarray.__xor__", false]], "absolute() (in module cupynumeric)": [[12, "cupynumeric.absolute", false]], "add() (in module cupynumeric)": [[13, "cupynumeric.add", false]], "aligned (in module cupynumeric)": [[284, "cupynumeric.ALIGNED", false]], "all() (cupynumeric.ndarray method)": [[260, "cupynumeric.ndarray.all", false]], "all() (in module cupynumeric)": [[14, "cupynumeric.all", false]], "allclose() (in module cupynumeric)": [[15, "cupynumeric.allclose", false]], "amax() (in module cupynumeric)": [[16, "cupynumeric.amax", false]], "amin() (in module cupynumeric)": [[17, "cupynumeric.amin", false]], "angle() (in module cupynumeric)": [[18, "cupynumeric.angle", false]], "any() (cupynumeric.ndarray method)": [[261, "cupynumeric.ndarray.any", false]], "any() (in module cupynumeric)": [[19, "cupynumeric.any", false]], "append() (in module cupynumeric)": [[20, "cupynumeric.append", false]], "arange() (in module cupynumeric)": [[21, "cupynumeric.arange", false]], "arccos() (in module cupynumeric)": [[22, "cupynumeric.arccos", false]], "arccosh() (in module cupynumeric)": [[23, "cupynumeric.arccosh", false]], "arcsin() (in module cupynumeric)": [[24, "cupynumeric.arcsin", false]], "arcsinh() (in module cupynumeric)": [[25, "cupynumeric.arcsinh", false]], "arctan() (in module cupynumeric)": [[26, "cupynumeric.arctan", false]], "arctan2() (in module cupynumeric)": [[27, "cupynumeric.arctan2", false]], "arctanh() (in module cupynumeric)": [[28, "cupynumeric.arctanh", false]], "argmax() (cupynumeric.ndarray method)": [[262, "cupynumeric.ndarray.argmax", false]], "argmax() (in module cupynumeric)": [[29, "cupynumeric.argmax", false]], "argmin() (cupynumeric.ndarray method)": [[263, "cupynumeric.ndarray.argmin", false]], "argmin() (in module cupynumeric)": [[30, "cupynumeric.argmin", false]], "argpartition() (cupynumeric.ndarray method)": [[264, "cupynumeric.ndarray.argpartition", false]], "argpartition() (in module cupynumeric)": [[31, "cupynumeric.argpartition", false]], "argsort() (cupynumeric.ndarray method)": [[265, "cupynumeric.ndarray.argsort", false]], "argsort() (in module cupynumeric)": [[32, "cupynumeric.argsort", false]], "argwhere() (in module cupynumeric)": [[33, "cupynumeric.argwhere", false]], "array() (in module cupynumeric)": [[34, "cupynumeric.array", false]], "array_equal() (in module cupynumeric)": [[35, "cupynumeric.array_equal", false]], "array_split() (in module cupynumeric)": [[36, "cupynumeric.array_split", false]], "asarray() (in module cupynumeric)": [[37, "cupynumeric.asarray", false]], "astype() (cupynumeric.ndarray method)": [[266, "cupynumeric.ndarray.astype", false]], "atleast_1d() (in module cupynumeric)": [[38, "cupynumeric.atleast_1d", false]], "atleast_2d() (in module cupynumeric)": [[39, "cupynumeric.atleast_2d", false]], "atleast_3d() (in module cupynumeric)": [[40, "cupynumeric.atleast_3d", false]], "average() (in module cupynumeric)": [[41, "cupynumeric.average", false]], "bartlett() (in module cupynumeric)": [[42, "cupynumeric.bartlett", false]], "base (cupynumeric.ndarray property)": [[267, "cupynumeric.ndarray.base", false]], "behaved (in module cupynumeric)": [[284, "cupynumeric.BEHAVED", false]], "beta() (in module cupynumeric.random)": [[346, "cupynumeric.random.beta", false]], "bincount() (in module cupynumeric)": [[43, "cupynumeric.bincount", false]], "binomial() (in module cupynumeric.random)": [[347, "cupynumeric.random.binomial", false]], "bitgenerator (class in cupynumeric.random)": [[1, "cupynumeric.random.BitGenerator", false]], "bitwise_and() (in module cupynumeric)": [[44, "cupynumeric.bitwise_and", false]], "bitwise_or() (in module cupynumeric)": [[45, "cupynumeric.bitwise_or", false]], "bitwise_xor() (in module cupynumeric)": [[46, "cupynumeric.bitwise_xor", false]], "blackman() (in module cupynumeric)": [[47, "cupynumeric.blackman", false]], "block() (in module cupynumeric)": [[48, "cupynumeric.block", false]], "broadcast (class in cupynumeric)": [[6, "cupynumeric.broadcast", false]], "broadcast_arrays() (in module cupynumeric)": [[49, "cupynumeric.broadcast_arrays", false]], "broadcast_shapes() (in module cupynumeric)": [[50, "cupynumeric.broadcast_shapes", false]], "broadcast_to() (in module cupynumeric)": [[51, "cupynumeric.broadcast_to", false]], "bytes() (in module cupynumeric.random)": [[348, "cupynumeric.random.bytes", false]], "c_contiguous (cupynumeric.ndarray attribute)": [[284, "cupynumeric.ndarray.C_CONTIGUOUS", false]], "carray (in module cupynumeric)": [[284, "cupynumeric.CARRAY", false]], "cbrt() (in module cupynumeric)": [[52, "cupynumeric.cbrt", false]], "ceil() (in module cupynumeric)": [[53, "cupynumeric.ceil", false]], "chisquare() (in module cupynumeric.random)": [[349, "cupynumeric.random.chisquare", false]], "cholesky() (in module cupynumeric.linalg)": [[158, "cupynumeric.linalg.cholesky", false]], "choose() (cupynumeric.ndarray method)": [[268, "cupynumeric.ndarray.choose", false]], "choose() (in module cupynumeric)": [[54, "cupynumeric.choose", false]], "clip() (cupynumeric.ndarray method)": [[269, "cupynumeric.ndarray.clip", false]], "clip() (in module cupynumeric)": [[55, "cupynumeric.clip", false]], "column_stack() (in module cupynumeric)": [[56, "cupynumeric.column_stack", false]], "compress() (cupynumeric.ndarray method)": [[270, "cupynumeric.ndarray.compress", false]], "compress() (in module cupynumeric)": [[57, "cupynumeric.compress", false]], "concatenate() (in module cupynumeric)": [[58, "cupynumeric.concatenate", false]], "conj() (cupynumeric.ndarray method)": [[271, "cupynumeric.ndarray.conj", false]], "conj() (in module cupynumeric)": [[59, "cupynumeric.conj", false]], "conjugate() (cupynumeric.ndarray method)": [[272, "cupynumeric.ndarray.conjugate", false]], "conjugate() (in module cupynumeric)": [[60, "cupynumeric.conjugate", false]], "convolve() (in module cupynumeric)": [[61, "cupynumeric.convolve", false]], "copy() (cupynumeric.ndarray method)": [[273, "cupynumeric.ndarray.copy", false]], "copy() (in module cupynumeric)": [[62, "cupynumeric.copy", false]], "copysign() (in module cupynumeric)": [[63, "cupynumeric.copysign", false]], "cos() (in module cupynumeric)": [[64, "cupynumeric.cos", false]], "cosh() (in module cupynumeric)": [[65, "cupynumeric.cosh", false]], "count_nonzero() (in module cupynumeric)": [[66, "cupynumeric.count_nonzero", false]], "cov() (in module cupynumeric)": [[67, "cupynumeric.cov", false]], "ctypes (cupynumeric.ndarray property)": [[274, "cupynumeric.ndarray.ctypes", false]], "cumprod() (cupynumeric.ndarray method)": [[275, "cupynumeric.ndarray.cumprod", false]], "cumprod() (in module cupynumeric)": [[68, "cupynumeric.cumprod", false]], "cumsum() (cupynumeric.ndarray method)": [[276, "cupynumeric.ndarray.cumsum", false]], "cumsum() (in module cupynumeric)": [[69, "cupynumeric.cumsum", false]], "cupynumeric.fft": [[11, "module-cupynumeric.fft", false]], "cupynumeric.linalg": [[447, "module-cupynumeric.linalg", false]], "cupynumeric.random": [[452, "module-cupynumeric.random", false]], "data (cupynumeric.ndarray property)": [[277, "cupynumeric.ndarray.data", false]], "default_rng() (in module cupynumeric.random)": [[350, "cupynumeric.random.default_rng", false]], "deg2rad() (in module cupynumeric)": [[70, "cupynumeric.deg2rad", false]], "degrees() (in module cupynumeric)": [[71, "cupynumeric.degrees", false]], "diag() (in module cupynumeric)": [[72, "cupynumeric.diag", false]], "diag_indices() (in module cupynumeric)": [[73, "cupynumeric.diag_indices", false]], "diag_indices_from() (in module cupynumeric)": [[74, "cupynumeric.diag_indices_from", false]], "diagonal() (cupynumeric.ndarray method)": [[278, "cupynumeric.ndarray.diagonal", false]], "diagonal() (in module cupynumeric)": [[75, "cupynumeric.diagonal", false]], "diff() (in module cupynumeric)": [[76, "cupynumeric.diff", false]], "digitize() (in module cupynumeric)": [[77, "cupynumeric.digitize", false]], "divide() (in module cupynumeric)": [[78, "cupynumeric.divide", false]], "dot() (cupynumeric.ndarray method)": [[279, "cupynumeric.ndarray.dot", false]], "dot() (in module cupynumeric)": [[79, "cupynumeric.dot", false]], "dsplit() (in module cupynumeric)": [[80, "cupynumeric.dsplit", false]], "dstack() (in module cupynumeric)": [[81, "cupynumeric.dstack", false]], "dtype (cupynumeric.ndarray property)": [[280, "cupynumeric.ndarray.dtype", false]], "dump() (cupynumeric.ndarray method)": [[281, "cupynumeric.ndarray.dump", false]], "dumps() (cupynumeric.ndarray method)": [[282, "cupynumeric.ndarray.dumps", false]], "eig() (in module cupynumeric.linalg)": [[159, "cupynumeric.linalg.eig", false]], "eigvals() (in module cupynumeric.linalg)": [[160, "cupynumeric.linalg.eigvals", false]], "einsum() (in module cupynumeric)": [[82, "cupynumeric.einsum", false]], "einsum_path() (in module cupynumeric)": [[83, "cupynumeric.einsum_path", false]], "empty() (in module cupynumeric)": [[84, "cupynumeric.empty", false]], "empty_like() (in module cupynumeric)": [[85, "cupynumeric.empty_like", false]], "equal() (in module cupynumeric)": [[86, "cupynumeric.equal", false]], "exp() (in module cupynumeric)": [[87, "cupynumeric.exp", false]], "exp2() (in module cupynumeric)": [[88, "cupynumeric.exp2", false]], "expand_dims() (in module cupynumeric)": [[89, "cupynumeric.expand_dims", false]], "expm() (in module cupynumeric.linalg)": [[161, "cupynumeric.linalg.expm", false]], "expm1() (in module cupynumeric)": [[90, "cupynumeric.expm1", false]], "exponential() (in module cupynumeric.random)": [[351, "cupynumeric.random.exponential", false]], "extract() (in module cupynumeric)": [[91, "cupynumeric.extract", false]], "eye() (in module cupynumeric)": [[92, "cupynumeric.eye", false]], "f() (in module cupynumeric.random)": [[352, "cupynumeric.random.f", false]], "f_contiguous (in module cupynumeric)": [[284, "cupynumeric.F_CONTIGUOUS", false]], "fabs() (in module cupynumeric)": [[93, "cupynumeric.fabs", false]], "farray (in module cupynumeric)": [[284, "cupynumeric.FARRAY", false]], "fft() (in module cupynumeric.fft)": [[94, "cupynumeric.fft.fft", false]], "fft2() (in module cupynumeric.fft)": [[95, "cupynumeric.fft.fft2", false]], "fftn() (in module cupynumeric.fft)": [[96, "cupynumeric.fft.fftn", false]], "fftshift() (in module cupynumeric.fft)": [[97, "cupynumeric.fft.fftshift", false]], "fill() (cupynumeric.ndarray method)": [[283, "cupynumeric.ndarray.fill", false]], "fill_diagonal() (in module cupynumeric)": [[110, "cupynumeric.fill_diagonal", false]], "find_common_type() (in module cupynumeric)": [[111, "cupynumeric.find_common_type", false]], "flags (cupynumeric.ndarray property)": [[284, "cupynumeric.ndarray.flags", false]], "flat (cupynumeric.ndarray property)": [[285, "cupynumeric.ndarray.flat", false]], "flatnonzero() (in module cupynumeric)": [[112, "cupynumeric.flatnonzero", false]], "flatten() (cupynumeric.ndarray method)": [[286, "cupynumeric.ndarray.flatten", false]], "flip() (cupynumeric.ndarray method)": [[287, "cupynumeric.ndarray.flip", false]], "flip() (in module cupynumeric)": [[113, "cupynumeric.flip", false]], "fliplr() (in module cupynumeric)": [[114, "cupynumeric.fliplr", false]], "flipud() (in module cupynumeric)": [[115, "cupynumeric.flipud", false]], "float_power() (in module cupynumeric)": [[116, "cupynumeric.float_power", false]], "floor() (in module cupynumeric)": [[117, "cupynumeric.floor", false]], "floor_divide() (in module cupynumeric)": [[118, "cupynumeric.floor_divide", false]], "fmax() (in module cupynumeric)": [[119, "cupynumeric.fmax", false]], "fmin() (in module cupynumeric)": [[120, "cupynumeric.fmin", false]], "fmod() (in module cupynumeric)": [[121, "cupynumeric.fmod", false]], "fnc (in module cupynumeric)": [[284, "cupynumeric.FNC", false]], "forc (in module cupynumeric)": [[284, "cupynumeric.FORC", false]], "frexp() (in module cupynumeric)": [[122, "cupynumeric.frexp", false]], "full() (in module cupynumeric)": [[123, "cupynumeric.full", false]], "full_like() (in module cupynumeric)": [[124, "cupynumeric.full_like", false]], "gamma() (in module cupynumeric.random)": [[353, "cupynumeric.random.gamma", false]], "gcd() (in module cupynumeric)": [[125, "cupynumeric.gcd", false]], "generator (class in cupynumeric.random)": [[2, "cupynumeric.random.Generator", false]], "geometric() (in module cupynumeric.random)": [[354, "cupynumeric.random.geometric", false]], "getfield() (cupynumeric.ndarray method)": [[288, "cupynumeric.ndarray.getfield", false]], "gradient() (in module cupynumeric)": [[126, "cupynumeric.gradient", false]], "greater() (in module cupynumeric)": [[127, "cupynumeric.greater", false]], "greater_equal() (in module cupynumeric)": [[128, "cupynumeric.greater_equal", false]], "gumbel() (in module cupynumeric.random)": [[355, "cupynumeric.random.gumbel", false]], "hamming() (in module cupynumeric)": [[129, "cupynumeric.hamming", false]], "hanning() (in module cupynumeric)": [[130, "cupynumeric.hanning", false]], "hfft() (in module cupynumeric.fft)": [[98, "cupynumeric.fft.hfft", false]], "histogram() (in module cupynumeric)": [[131, "cupynumeric.histogram", false]], "hsplit() (in module cupynumeric)": [[132, "cupynumeric.hsplit", false]], "hstack() (in module cupynumeric)": [[133, "cupynumeric.hstack", false]], "hypergeometric() (in module cupynumeric.random)": [[356, "cupynumeric.random.hypergeometric", false]], "hypot() (in module cupynumeric)": [[134, "cupynumeric.hypot", false]], "identity() (in module cupynumeric)": [[135, "cupynumeric.identity", false]], "ifft() (in module cupynumeric.fft)": [[99, "cupynumeric.fft.ifft", false]], "ifft2() (in module cupynumeric.fft)": [[100, "cupynumeric.fft.ifft2", false]], "ifftn() (in module cupynumeric.fft)": [[101, "cupynumeric.fft.ifftn", false]], "ifftshift() (in module cupynumeric.fft)": [[102, "cupynumeric.fft.ifftshift", false]], "ihfft() (in module cupynumeric.fft)": [[103, "cupynumeric.fft.ihfft", false]], "imag (cupynumeric.ndarray property)": [[289, "cupynumeric.ndarray.imag", false]], "imag() (in module cupynumeric)": [[136, "cupynumeric.imag", false]], "index (cupynumeric.broadcast property)": [[6, "cupynumeric.broadcast.index", false]], "indices() (in module cupynumeric)": [[137, "cupynumeric.indices", false]], "inner() (in module cupynumeric)": [[138, "cupynumeric.inner", false]], "invert() (in module cupynumeric)": [[139, "cupynumeric.invert", false]], "irfft() (in module cupynumeric.fft)": [[104, "cupynumeric.fft.irfft", false]], "irfft2() (in module cupynumeric.fft)": [[105, "cupynumeric.fft.irfft2", false]], "irfftn() (in module cupynumeric.fft)": [[106, "cupynumeric.fft.irfftn", false]], "isclose() (in module cupynumeric)": [[140, "cupynumeric.isclose", false]], "iscomplex() (in module cupynumeric)": [[141, "cupynumeric.iscomplex", false]], "iscomplexobj() (in module cupynumeric)": [[142, "cupynumeric.iscomplexobj", false]], "isfinite() (in module cupynumeric)": [[143, "cupynumeric.isfinite", false]], "isinf() (in module cupynumeric)": [[144, "cupynumeric.isinf", false]], "isnan() (in module cupynumeric)": [[145, "cupynumeric.isnan", false]], "isneginf() (in module cupynumeric)": [[146, "cupynumeric.isneginf", false]], "isposinf() (in module cupynumeric)": [[147, "cupynumeric.isposinf", false]], "isreal() (in module cupynumeric)": [[148, "cupynumeric.isreal", false]], "isrealobj() (in module cupynumeric)": [[149, "cupynumeric.isrealobj", false]], "isscalar() (in module cupynumeric)": [[150, "cupynumeric.isscalar", false]], "item() (cupynumeric.ndarray method)": [[290, "cupynumeric.ndarray.item", false]], "itemset() (cupynumeric.ndarray method)": [[291, "cupynumeric.ndarray.itemset", false]], "itemsize (cupynumeric.ndarray property)": [[292, "cupynumeric.ndarray.itemsize", false]], "iters (cupynumeric.broadcast property)": [[6, "cupynumeric.broadcast.iters", false]], "ix_() (in module cupynumeric)": [[151, "cupynumeric.ix_", false]], "kaiser() (in module cupynumeric)": [[152, "cupynumeric.kaiser", false]], "laplace() (in module cupynumeric.random)": [[357, "cupynumeric.random.laplace", false]], "lcm() (in module cupynumeric)": [[153, "cupynumeric.lcm", false]], "ldexp() (in module cupynumeric)": [[154, "cupynumeric.ldexp", false]], "left_shift() (in module cupynumeric)": [[155, "cupynumeric.left_shift", false]], "less() (in module cupynumeric)": [[156, "cupynumeric.less", false]], "less_equal() (in module cupynumeric)": [[157, "cupynumeric.less_equal", false]], "linspace() (in module cupynumeric)": [[168, "cupynumeric.linspace", false]], "load() (in module cupynumeric)": [[169, "cupynumeric.load", false]], "log() (in module cupynumeric)": [[170, "cupynumeric.log", false]], "log10() (in module cupynumeric)": [[171, "cupynumeric.log10", false]], "log1p() (in module cupynumeric)": [[172, "cupynumeric.log1p", false]], "log2() (in module cupynumeric)": [[173, "cupynumeric.log2", false]], "logaddexp() (in module cupynumeric)": [[174, "cupynumeric.logaddexp", false]], "logaddexp2() (in module cupynumeric)": [[175, "cupynumeric.logaddexp2", false]], "logical_and() (in module cupynumeric)": [[176, "cupynumeric.logical_and", false]], "logical_not() (in module cupynumeric)": [[177, "cupynumeric.logical_not", false]], "logical_or() (in module cupynumeric)": [[178, "cupynumeric.logical_or", false]], "logical_xor() (in module cupynumeric)": [[179, "cupynumeric.logical_xor", false]], "logistic() (in module cupynumeric.random)": [[358, "cupynumeric.random.logistic", false]], "lognormal() (in module cupynumeric.random)": [[359, "cupynumeric.random.lognormal", false]], "logseries() (in module cupynumeric.random)": [[360, "cupynumeric.random.logseries", false]], "mask_indices() (in module cupynumeric)": [[180, "cupynumeric.mask_indices", false]], "matmul() (in module cupynumeric)": [[181, "cupynumeric.matmul", false]], "matrix_power() (in module cupynumeric.linalg)": [[162, "cupynumeric.linalg.matrix_power", false]], "max() (cupynumeric.ndarray method)": [[293, "cupynumeric.ndarray.max", false]], "maximum() (in module cupynumeric)": [[182, "cupynumeric.maximum", false]], "mean() (cupynumeric.ndarray method)": [[294, "cupynumeric.ndarray.mean", false]], "mean() (in module cupynumeric)": [[183, "cupynumeric.mean", false]], "median() (in module cupynumeric)": [[184, "cupynumeric.median", false]], "meshgrid() (in module cupynumeric)": [[185, "cupynumeric.meshgrid", false]], "min() (cupynumeric.ndarray method)": [[295, "cupynumeric.ndarray.min", false]], "minimum() (in module cupynumeric)": [[186, "cupynumeric.minimum", false]], "mod() (in module cupynumeric)": [[187, "cupynumeric.mod", false]], "modf() (in module cupynumeric)": [[188, "cupynumeric.modf", false]], "module": [[11, "module-cupynumeric.fft", false], [447, "module-cupynumeric.linalg", false], [452, "module-cupynumeric.random", false]], "moveaxis() (in module cupynumeric)": [[189, "cupynumeric.moveaxis", false]], "msort() (in module cupynumeric)": [[190, "cupynumeric.msort", false]], "multi_dot() (in module cupynumeric.linalg)": [[163, "cupynumeric.linalg.multi_dot", false]], "multiply() (in module cupynumeric)": [[191, "cupynumeric.multiply", false]], "nanargmax() (in module cupynumeric)": [[192, "cupynumeric.nanargmax", false]], "nanargmin() (in module cupynumeric)": [[193, "cupynumeric.nanargmin", false]], "nancumprod() (in module cupynumeric)": [[194, "cupynumeric.nancumprod", false]], "nancumsum() (in module cupynumeric)": [[195, "cupynumeric.nancumsum", false]], "nanmax() (in module cupynumeric)": [[196, "cupynumeric.nanmax", false]], "nanmean() (in module cupynumeric)": [[197, "cupynumeric.nanmean", false]], "nanmedian() (in module cupynumeric)": [[198, "cupynumeric.nanmedian", false]], "nanmin() (in module cupynumeric)": [[199, "cupynumeric.nanmin", false]], "nanpercentile() (in module cupynumeric)": [[200, "cupynumeric.nanpercentile", false]], "nanprod() (in module cupynumeric)": [[201, "cupynumeric.nanprod", false]], "nanquantile() (in module cupynumeric)": [[202, "cupynumeric.nanquantile", false]], "nansum() (in module cupynumeric)": [[203, "cupynumeric.nansum", false]], "nbytes (cupynumeric.ndarray property)": [[296, "cupynumeric.ndarray.nbytes", false]], "nd (cupynumeric.broadcast property)": [[6, "cupynumeric.broadcast.nd", false]], "ndarray (class in cupynumeric)": [[4, "cupynumeric.ndarray", false]], "ndim (cupynumeric.broadcast property)": [[6, "cupynumeric.broadcast.ndim", false]], "ndim (cupynumeric.ndarray property)": [[297, "cupynumeric.ndarray.ndim", false]], "ndim() (in module cupynumeric)": [[325, "cupynumeric.ndim", false]], "negative() (in module cupynumeric)": [[326, "cupynumeric.negative", false]], "negative_binomial() (in module cupynumeric.random)": [[361, "cupynumeric.random.negative_binomial", false]], "nextafter() (in module cupynumeric)": [[327, "cupynumeric.nextafter", false]], "noncentral_chisquare() (in module cupynumeric.random)": [[362, "cupynumeric.random.noncentral_chisquare", false]], "noncentral_f() (in module cupynumeric.random)": [[363, "cupynumeric.random.noncentral_f", false]], "nonzero() (cupynumeric.ndarray method)": [[298, "cupynumeric.ndarray.nonzero", false]], "nonzero() (in module cupynumeric)": [[328, "cupynumeric.nonzero", false]], "norm() (in module cupynumeric.linalg)": [[164, "cupynumeric.linalg.norm", false]], "normal() (in module cupynumeric.random)": [[364, "cupynumeric.random.normal", false]], "not_equal() (in module cupynumeric)": [[329, "cupynumeric.not_equal", false]], "numiter (cupynumeric.broadcast property)": [[6, "cupynumeric.broadcast.numiter", false]], "ones() (in module cupynumeric)": [[330, "cupynumeric.ones", false]], "ones_like() (in module cupynumeric)": [[331, "cupynumeric.ones_like", false]], "outer() (in module cupynumeric)": [[332, "cupynumeric.outer", false]], "owndata (in module cupynumeric)": [[284, "cupynumeric.OWNDATA", false]], "packbits() (in module cupynumeric)": [[333, "cupynumeric.packbits", false]], "pareto() (in module cupynumeric.random)": [[365, "cupynumeric.random.pareto", false]], "partition() (cupynumeric.ndarray method)": [[299, "cupynumeric.ndarray.partition", false]], "partition() (in module cupynumeric)": [[334, "cupynumeric.partition", false]], "percentile() (in module cupynumeric)": [[335, "cupynumeric.percentile", false]], "place() (in module cupynumeric)": [[336, "cupynumeric.place", false]], "poisson() (in module cupynumeric.random)": [[366, "cupynumeric.random.poisson", false]], "positive() (in module cupynumeric)": [[337, "cupynumeric.positive", false]], "power() (in module cupynumeric)": [[338, "cupynumeric.power", false]], "power() (in module cupynumeric.random)": [[367, "cupynumeric.random.power", false]], "prod() (cupynumeric.ndarray method)": [[300, "cupynumeric.ndarray.prod", false]], "prod() (in module cupynumeric)": [[339, "cupynumeric.prod", false]], "put() (cupynumeric.ndarray method)": [[301, "cupynumeric.ndarray.put", false]], "put() (in module cupynumeric)": [[340, "cupynumeric.put", false]], "put_along_axis() (in module cupynumeric)": [[341, "cupynumeric.put_along_axis", false]], "putmask() (in module cupynumeric)": [[342, "cupynumeric.putmask", false]], "qr() (in module cupynumeric.linalg)": [[165, "cupynumeric.linalg.qr", false]], "quantile() (in module cupynumeric)": [[343, "cupynumeric.quantile", false]], "rad2deg() (in module cupynumeric)": [[344, "cupynumeric.rad2deg", false]], "radians() (in module cupynumeric)": [[345, "cupynumeric.radians", false]], "rand() (in module cupynumeric.random)": [[368, "cupynumeric.random.rand", false]], "randint() (in module cupynumeric.random)": [[369, "cupynumeric.random.randint", false]], "randn() (in module cupynumeric.random)": [[370, "cupynumeric.random.randn", false]], "random() (in module cupynumeric.random)": [[371, "cupynumeric.random.random", false]], "random_integers() (in module cupynumeric.random)": [[372, "cupynumeric.random.random_integers", false]], "random_sample() (in module cupynumeric.random)": [[373, "cupynumeric.random.random_sample", false]], "ranf() (in module cupynumeric.random)": [[374, "cupynumeric.random.ranf", false]], "ravel() (cupynumeric.ndarray method)": [[302, "cupynumeric.ndarray.ravel", false]], "ravel() (in module cupynumeric)": [[388, "cupynumeric.ravel", false]], "rayleigh() (in module cupynumeric.random)": [[375, "cupynumeric.random.rayleigh", false]], "real (cupynumeric.ndarray property)": [[303, "cupynumeric.ndarray.real", false]], "real() (in module cupynumeric)": [[389, "cupynumeric.real", false]], "reciprocal() (in module cupynumeric)": [[390, "cupynumeric.reciprocal", false]], "remainder() (in module cupynumeric)": [[391, "cupynumeric.remainder", false]], "repeat() (in module cupynumeric)": [[392, "cupynumeric.repeat", false]], "reset() (cupynumeric.broadcast method)": [[6, "cupynumeric.broadcast.reset", false]], "reshape() (cupynumeric.ndarray method)": [[304, "cupynumeric.ndarray.reshape", false]], "reshape() (in module cupynumeric)": [[393, "cupynumeric.reshape", false]], "rfft() (in module cupynumeric.fft)": [[107, "cupynumeric.fft.rfft", false]], "rfft2() (in module cupynumeric.fft)": [[108, "cupynumeric.fft.rfft2", false]], "rfftn() (in module cupynumeric.fft)": [[109, "cupynumeric.fft.rfftn", false]], "right_shift() (in module cupynumeric)": [[394, "cupynumeric.right_shift", false]], "rint() (in module cupynumeric)": [[395, "cupynumeric.rint", false]], "roll() (in module cupynumeric)": [[396, "cupynumeric.roll", false]], "rot90() (in module cupynumeric)": [[397, "cupynumeric.rot90", false]], "round() (in module cupynumeric)": [[398, "cupynumeric.round", false]], "row_stack() (in module cupynumeric)": [[399, "cupynumeric.row_stack", false]], "sample() (in module cupynumeric.random)": [[376, "cupynumeric.random.sample", false]], "searchsorted() (cupynumeric.ndarray method)": [[305, "cupynumeric.ndarray.searchsorted", false]], "searchsorted() (in module cupynumeric)": [[400, "cupynumeric.searchsorted", false]], "seed() (in module cupynumeric.random)": [[377, "cupynumeric.random.seed", false]], "select() (in module cupynumeric)": [[401, "cupynumeric.select", false]], "setfield() (cupynumeric.ndarray method)": [[306, "cupynumeric.ndarray.setfield", false]], "setflags() (cupynumeric.ndarray method)": [[307, "cupynumeric.ndarray.setflags", false]], "shape (cupynumeric.broadcast property)": [[6, "cupynumeric.broadcast.shape", false]], "shape (cupynumeric.ndarray property)": [[308, "cupynumeric.ndarray.shape", false]], "shape() (in module cupynumeric)": [[402, "cupynumeric.shape", false]], "sign() (in module cupynumeric)": [[403, "cupynumeric.sign", false]], "signbit() (in module cupynumeric)": [[404, "cupynumeric.signbit", false]], "sin() (in module cupynumeric)": [[405, "cupynumeric.sin", false]], "sinh() (in module cupynumeric)": [[406, "cupynumeric.sinh", false]], "size (cupynumeric.broadcast property)": [[6, "cupynumeric.broadcast.size", false]], "size (cupynumeric.ndarray property)": [[309, "cupynumeric.ndarray.size", false]], "solve() (in module cupynumeric.linalg)": [[166, "cupynumeric.linalg.solve", false]], "sort() (cupynumeric.ndarray method)": [[310, "cupynumeric.ndarray.sort", false]], "sort() (in module cupynumeric)": [[407, "cupynumeric.sort", false]], "sort_complex() (in module cupynumeric)": [[408, "cupynumeric.sort_complex", false]], "split() (in module cupynumeric)": [[409, "cupynumeric.split", false]], "sqrt() (in module cupynumeric)": [[410, "cupynumeric.sqrt", false]], "square() (in module cupynumeric)": [[411, "cupynumeric.square", false]], "squeeze() (cupynumeric.ndarray method)": [[311, "cupynumeric.ndarray.squeeze", false]], "squeeze() (in module cupynumeric)": [[412, "cupynumeric.squeeze", false]], "stack() (in module cupynumeric)": [[413, "cupynumeric.stack", false]], "standard_cauchy() (in module cupynumeric.random)": [[378, "cupynumeric.random.standard_cauchy", false]], "standard_exponential() (in module cupynumeric.random)": [[379, "cupynumeric.random.standard_exponential", false]], "standard_gamma() (in module cupynumeric.random)": [[380, "cupynumeric.random.standard_gamma", false]], "standard_t() (in module cupynumeric.random)": [[381, "cupynumeric.random.standard_t", false]], "strides (cupynumeric.ndarray property)": [[312, "cupynumeric.ndarray.strides", false]], "subtract() (in module cupynumeric)": [[414, "cupynumeric.subtract", false]], "sum() (cupynumeric.ndarray method)": [[313, "cupynumeric.ndarray.sum", false]], "sum() (in module cupynumeric)": [[415, "cupynumeric.sum", false]], "svd() (in module cupynumeric.linalg)": [[167, "cupynumeric.linalg.svd", false]], "swapaxes() (cupynumeric.ndarray method)": [[314, "cupynumeric.ndarray.swapaxes", false]], "swapaxes() (in module cupynumeric)": [[416, "cupynumeric.swapaxes", false]], "t (cupynumeric.ndarray property)": [[204, "cupynumeric.ndarray.T", false]], "take() (cupynumeric.ndarray method)": [[315, "cupynumeric.ndarray.take", false]], "take() (in module cupynumeric)": [[417, "cupynumeric.take", false]], "take_along_axis() (in module cupynumeric)": [[418, "cupynumeric.take_along_axis", false]], "tan() (in module cupynumeric)": [[419, "cupynumeric.tan", false]], "tanh() (in module cupynumeric)": [[420, "cupynumeric.tanh", false]], "tensordot() (in module cupynumeric)": [[421, "cupynumeric.tensordot", false]], "tile() (in module cupynumeric)": [[422, "cupynumeric.tile", false]], "tobytes() (cupynumeric.ndarray method)": [[316, "cupynumeric.ndarray.tobytes", false]], "tofile() (cupynumeric.ndarray method)": [[317, "cupynumeric.ndarray.tofile", false]], "tolist() (cupynumeric.ndarray method)": [[318, "cupynumeric.ndarray.tolist", false]], "tostring() (cupynumeric.ndarray method)": [[319, "cupynumeric.ndarray.tostring", false]], "trace() (cupynumeric.ndarray method)": [[320, "cupynumeric.ndarray.trace", false]], "trace() (in module cupynumeric)": [[423, "cupynumeric.trace", false]], "transpose() (cupynumeric.ndarray method)": [[321, "cupynumeric.ndarray.transpose", false]], "transpose() (in module cupynumeric)": [[424, "cupynumeric.transpose", false]], "tri() (in module cupynumeric)": [[425, "cupynumeric.tri", false]], "triangular() (in module cupynumeric.random)": [[382, "cupynumeric.random.triangular", false]], "tril() (in module cupynumeric)": [[426, "cupynumeric.tril", false]], "tril_indices() (in module cupynumeric)": [[427, "cupynumeric.tril_indices", false]], "tril_indices_from() (in module cupynumeric)": [[428, "cupynumeric.tril_indices_from", false]], "triu() (in module cupynumeric)": [[429, "cupynumeric.triu", false]], "triu_indices() (in module cupynumeric)": [[430, "cupynumeric.triu_indices", false]], "triu_indices_from() (in module cupynumeric)": [[431, "cupynumeric.triu_indices_from", false]], "true_divide() (in module cupynumeric)": [[432, "cupynumeric.true_divide", false]], "trunc() (in module cupynumeric)": [[433, "cupynumeric.trunc", false]], "uniform() (in module cupynumeric.random)": [[383, "cupynumeric.random.uniform", false]], "unique() (cupynumeric.ndarray method)": [[322, "cupynumeric.ndarray.unique", false]], "unique() (in module cupynumeric)": [[434, "cupynumeric.unique", false]], "unpackbits() (in module cupynumeric)": [[435, "cupynumeric.unpackbits", false]], "unravel_index() (in module cupynumeric)": [[436, "cupynumeric.unravel_index", false]], "var() (cupynumeric.ndarray method)": [[323, "cupynumeric.ndarray.var", false]], "var() (in module cupynumeric)": [[437, "cupynumeric.var", false]], "vdot() (in module cupynumeric)": [[438, "cupynumeric.vdot", false]], "view() (cupynumeric.ndarray method)": [[324, "cupynumeric.ndarray.view", false]], "vonmises() (in module cupynumeric.random)": [[384, "cupynumeric.random.vonmises", false]], "vsplit() (in module cupynumeric)": [[439, "cupynumeric.vsplit", false]], "vstack() (in module cupynumeric)": [[440, "cupynumeric.vstack", false]], "wald() (in module cupynumeric.random)": [[385, "cupynumeric.random.wald", false]], "weibull() (in module cupynumeric.random)": [[386, "cupynumeric.random.weibull", false]], "where() (in module cupynumeric)": [[441, "cupynumeric.where", false]], "writeable (in module cupynumeric)": [[284, "cupynumeric.WRITEABLE", false]], "writebackifcopy (in module cupynumeric)": [[284, "cupynumeric.WRITEBACKIFCOPY", false]], "zeros() (in module cupynumeric)": [[442, "cupynumeric.zeros", false]], "zeros_like() (in module cupynumeric)": [[443, "cupynumeric.zeros_like", false]], "zipf() (in module cupynumeric.random)": [[387, "cupynumeric.random.zipf", false]]}, "objects": {"cupynumeric": [[284, 0, 1, "", "ALIGNED"], [284, 0, 1, "", "BEHAVED"], [284, 0, 1, "", "CARRAY"], [284, 0, 1, "", "FARRAY"], [284, 0, 1, "", "FNC"], [284, 0, 1, "", "FORC"], [284, 0, 1, "", "F_CONTIGUOUS"], [284, 0, 1, "", "OWNDATA"], [284, 0, 1, "", "WRITEABLE"], [284, 0, 1, "", "WRITEBACKIFCOPY"], [12, 1, 1, "", "absolute"], [13, 1, 1, "", "add"], [14, 1, 1, "", "all"], [15, 1, 1, "", "allclose"], [16, 1, 1, "", "amax"], [17, 1, 1, "", "amin"], [18, 1, 1, "", "angle"], [19, 1, 1, "", "any"], [20, 1, 1, "", "append"], [21, 1, 1, "", "arange"], [22, 1, 1, "", "arccos"], [23, 1, 1, "", "arccosh"], [24, 1, 1, "", "arcsin"], [25, 1, 1, "", "arcsinh"], [26, 1, 1, "", "arctan"], [27, 1, 1, "", "arctan2"], [28, 1, 1, "", "arctanh"], [29, 1, 1, "", "argmax"], [30, 1, 1, "", "argmin"], [31, 1, 1, "", "argpartition"], [32, 1, 1, "", "argsort"], [33, 1, 1, "", "argwhere"], [34, 1, 1, "", "array"], [35, 1, 1, "", "array_equal"], [36, 1, 1, "", "array_split"], [37, 1, 1, "", "asarray"], [38, 1, 1, "", "atleast_1d"], [39, 1, 1, "", "atleast_2d"], [40, 1, 1, "", "atleast_3d"], [41, 1, 1, "", "average"], [42, 1, 1, "", "bartlett"], [43, 1, 1, "", "bincount"], [44, 1, 1, "", "bitwise_and"], [45, 1, 1, "", "bitwise_or"], [46, 1, 1, "", "bitwise_xor"], [47, 1, 1, "", "blackman"], [48, 1, 1, "", "block"], [6, 2, 1, "", "broadcast"], [49, 1, 1, "", "broadcast_arrays"], [50, 1, 1, "", "broadcast_shapes"], [51, 1, 1, "", "broadcast_to"], [52, 1, 1, "", "cbrt"], [53, 1, 1, "", "ceil"], [54, 1, 1, "", "choose"], [55, 1, 1, "", "clip"], [56, 1, 1, "", "column_stack"], [57, 1, 1, "", "compress"], [58, 1, 1, "", "concatenate"], [59, 1, 1, "", "conj"], [60, 1, 1, "", "conjugate"], [61, 1, 1, "", "convolve"], [62, 1, 1, "", "copy"], [63, 1, 1, "", "copysign"], [64, 1, 1, "", "cos"], [65, 1, 1, "", "cosh"], [66, 1, 1, "", "count_nonzero"], [67, 1, 1, "", "cov"], [68, 1, 1, "", "cumprod"], [69, 1, 1, "", "cumsum"], [70, 1, 1, "", "deg2rad"], [71, 1, 1, "", "degrees"], [72, 1, 1, "", "diag"], [73, 1, 1, "", "diag_indices"], [74, 1, 1, "", "diag_indices_from"], [75, 1, 1, "", "diagonal"], [76, 1, 1, "", "diff"], [77, 1, 1, "", "digitize"], [78, 1, 1, "", "divide"], [79, 1, 1, "", "dot"], [80, 1, 1, "", "dsplit"], [81, 1, 1, "", "dstack"], [82, 1, 1, "", "einsum"], [83, 1, 1, "", "einsum_path"], [84, 1, 1, "", "empty"], [85, 1, 1, "", "empty_like"], [86, 1, 1, "", "equal"], [87, 1, 1, "", "exp"], [88, 1, 1, "", "exp2"], [89, 1, 1, "", "expand_dims"], [90, 1, 1, "", "expm1"], [91, 1, 1, "", "extract"], [92, 1, 1, "", "eye"], [93, 1, 1, "", "fabs"], [11, 5, 0, "-", "fft"], [110, 1, 1, "", "fill_diagonal"], [111, 1, 1, "", "find_common_type"], [112, 1, 1, "", "flatnonzero"], [113, 1, 1, "", "flip"], [114, 1, 1, "", "fliplr"], [115, 1, 1, "", "flipud"], [116, 1, 1, "", "float_power"], [117, 1, 1, "", "floor"], [118, 1, 1, "", "floor_divide"], [119, 1, 1, "", "fmax"], [120, 1, 1, "", "fmin"], [121, 1, 1, "", "fmod"], [122, 1, 1, "", "frexp"], [123, 1, 1, "", "full"], [124, 1, 1, "", "full_like"], [125, 1, 1, "", "gcd"], [126, 1, 1, "", "gradient"], [127, 1, 1, "", "greater"], [128, 1, 1, "", "greater_equal"], [129, 1, 1, "", "hamming"], [130, 1, 1, "", "hanning"], [131, 1, 1, "", "histogram"], [132, 1, 1, "", "hsplit"], [133, 1, 1, "", "hstack"], [134, 1, 1, "", "hypot"], [135, 1, 1, "", "identity"], [136, 1, 1, "", "imag"], [137, 1, 1, "", "indices"], [138, 1, 1, "", "inner"], [139, 1, 1, "", "invert"], [140, 1, 1, "", "isclose"], [141, 1, 1, "", "iscomplex"], [142, 1, 1, "", "iscomplexobj"], [143, 1, 1, "", "isfinite"], [144, 1, 1, "", "isinf"], [145, 1, 1, "", "isnan"], [146, 1, 1, "", "isneginf"], [147, 1, 1, "", "isposinf"], [148, 1, 1, "", "isreal"], [149, 1, 1, "", "isrealobj"], [150, 1, 1, "", "isscalar"], [151, 1, 1, "", "ix_"], [152, 1, 1, "", "kaiser"], [153, 1, 1, "", "lcm"], [154, 1, 1, "", "ldexp"], [155, 1, 1, "", "left_shift"], [156, 1, 1, "", "less"], [157, 1, 1, "", "less_equal"], [447, 5, 0, "-", "linalg"], [168, 1, 1, "", "linspace"], [169, 1, 1, "", "load"], [170, 1, 1, "", "log"], [171, 1, 1, "", "log10"], [172, 1, 1, "", "log1p"], [173, 1, 1, "", "log2"], [174, 1, 1, "", "logaddexp"], [175, 1, 1, "", "logaddexp2"], [176, 1, 1, "", "logical_and"], [177, 1, 1, "", "logical_not"], [178, 1, 1, "", "logical_or"], [179, 1, 1, "", "logical_xor"], [180, 1, 1, "", "mask_indices"], [181, 1, 1, "", "matmul"], [182, 1, 1, "", "maximum"], [183, 1, 1, "", "mean"], [184, 1, 1, "", "median"], [185, 1, 1, "", "meshgrid"], [186, 1, 1, "", "minimum"], [187, 1, 1, "", "mod"], [188, 1, 1, "", "modf"], [189, 1, 1, "", "moveaxis"], [190, 1, 1, "", "msort"], [191, 1, 1, "", "multiply"], [192, 1, 1, "", "nanargmax"], [193, 1, 1, "", "nanargmin"], [194, 1, 1, "", "nancumprod"], [195, 1, 1, "", "nancumsum"], [196, 1, 1, "", "nanmax"], [197, 1, 1, "", "nanmean"], [198, 1, 1, "", "nanmedian"], [199, 1, 1, "", "nanmin"], [200, 1, 1, "", "nanpercentile"], [201, 1, 1, "", "nanprod"], [202, 1, 1, "", "nanquantile"], [203, 1, 1, "", "nansum"], [4, 2, 1, "", "ndarray"], [325, 1, 1, "", "ndim"], [326, 1, 1, "", "negative"], [327, 1, 1, "", "nextafter"], [328, 1, 1, "", "nonzero"], [329, 1, 1, "", "not_equal"], [330, 1, 1, "", "ones"], [331, 1, 1, "", "ones_like"], [332, 1, 1, "", "outer"], [333, 1, 1, "", "packbits"], [334, 1, 1, "", "partition"], [335, 1, 1, "", "percentile"], [336, 1, 1, "", "place"], [337, 1, 1, "", "positive"], [338, 1, 1, "", "power"], [339, 1, 1, "", "prod"], [340, 1, 1, "", "put"], [341, 1, 1, "", "put_along_axis"], [342, 1, 1, "", "putmask"], [343, 1, 1, "", "quantile"], [344, 1, 1, "", "rad2deg"], [345, 1, 1, "", "radians"], [452, 5, 0, "-", "random"], [388, 1, 1, "", "ravel"], [389, 1, 1, "", "real"], [390, 1, 1, "", "reciprocal"], [391, 1, 1, "", "remainder"], [392, 1, 1, "", "repeat"], [393, 1, 1, "", "reshape"], [394, 1, 1, "", "right_shift"], [395, 1, 1, "", "rint"], [396, 1, 1, "", "roll"], [397, 1, 1, "", "rot90"], [398, 1, 1, "", "round"], [399, 1, 1, "", "row_stack"], [400, 1, 1, "", "searchsorted"], [401, 1, 1, "", "select"], [402, 1, 1, "", "shape"], [403, 1, 1, "", "sign"], [404, 1, 1, "", "signbit"], [405, 1, 1, "", "sin"], [406, 1, 1, "", "sinh"], [407, 1, 1, "", "sort"], [408, 1, 1, "", "sort_complex"], [409, 1, 1, "", "split"], [410, 1, 1, "", "sqrt"], [411, 1, 1, "", "square"], [412, 1, 1, "", "squeeze"], [413, 1, 1, "", "stack"], [414, 1, 1, "", "subtract"], [415, 1, 1, "", "sum"], [416, 1, 1, "", "swapaxes"], [417, 1, 1, "", "take"], [418, 1, 1, "", "take_along_axis"], [419, 1, 1, "", "tan"], [420, 1, 1, "", "tanh"], [421, 1, 1, "", "tensordot"], [422, 1, 1, "", "tile"], [423, 1, 1, "", "trace"], [424, 1, 1, "", "transpose"], [425, 1, 1, "", "tri"], [426, 1, 1, "", "tril"], [427, 1, 1, "", "tril_indices"], [428, 1, 1, "", "tril_indices_from"], [429, 1, 1, "", "triu"], [430, 1, 1, "", "triu_indices"], [431, 1, 1, "", "triu_indices_from"], [432, 1, 1, "", "true_divide"], [433, 1, 1, "", "trunc"], [434, 1, 1, "", "unique"], [435, 1, 1, "", "unpackbits"], [436, 1, 1, "", "unravel_index"], [437, 1, 1, "", "var"], [438, 1, 1, "", "vdot"], [439, 1, 1, "", "vsplit"], [440, 1, 1, "", "vstack"], [441, 1, 1, "", "where"], [442, 1, 1, "", "zeros"], [443, 1, 1, "", "zeros_like"]], "cupynumeric.broadcast": [[6, 3, 1, "", "index"], [6, 3, 1, "", "iters"], [6, 3, 1, "", "nd"], [6, 3, 1, "", "ndim"], [6, 3, 1, "", "numiter"], [6, 4, 1, "", "reset"], [6, 3, 1, "", "shape"], [6, 3, 1, "", "size"]], "cupynumeric.fft": [[94, 1, 1, "", "fft"], [95, 1, 1, "", "fft2"], [96, 1, 1, "", "fftn"], [97, 1, 1, "", "fftshift"], [98, 1, 1, "", "hfft"], [99, 1, 1, "", "ifft"], [100, 1, 1, "", "ifft2"], [101, 1, 1, "", "ifftn"], [102, 1, 1, "", "ifftshift"], [103, 1, 1, "", "ihfft"], [104, 1, 1, "", "irfft"], [105, 1, 1, "", "irfft2"], [106, 1, 1, "", "irfftn"], [107, 1, 1, "", "rfft"], [108, 1, 1, "", "rfft2"], [109, 1, 1, "", "rfftn"]], "cupynumeric.linalg": [[158, 1, 1, "", "cholesky"], [159, 1, 1, "", "eig"], [160, 1, 1, "", "eigvals"], [161, 1, 1, "", "expm"], [162, 1, 1, "", "matrix_power"], [163, 1, 1, "", "multi_dot"], [164, 1, 1, "", "norm"], [165, 1, 1, "", "qr"], [166, 1, 1, "", "solve"], [167, 1, 1, "", "svd"]], "cupynumeric.ndarray": [[284, 0, 1, "", "C_CONTIGUOUS"], [204, 3, 1, "", "T"], [205, 4, 1, "", "__abs__"], [206, 4, 1, "", "__add__"], [207, 4, 1, "", "__and__"], [208, 4, 1, "", "__array__"], [209, 4, 1, "", "__bool__"], [210, 4, 1, "", "__complex__"], [211, 4, 1, "", "__contains__"], [212, 4, 1, "", "__copy__"], [213, 4, 1, "", "__deepcopy__"], [214, 4, 1, "", "__divmod__"], [215, 4, 1, "", "__eq__"], [216, 4, 1, "", "__float__"], [217, 4, 1, "", "__floordiv__"], [218, 4, 1, "", "__ge__"], [219, 4, 1, "", "__getitem__"], [220, 4, 1, "", "__gt__"], [221, 4, 1, "", "__iadd__"], [222, 4, 1, "", "__iand__"], [223, 4, 1, "", "__ifloordiv__"], [224, 4, 1, "", "__ilshift__"], [225, 4, 1, "", "__imatmul__"], [226, 4, 1, "", "__imod__"], [227, 4, 1, "", "__imul__"], [228, 4, 1, "", "__index__"], [4, 4, 1, "", "__init__"], [229, 4, 1, "", "__int__"], [230, 4, 1, "", "__invert__"], [231, 4, 1, "", "__ior__"], [232, 4, 1, "", "__ipow__"], [233, 4, 1, "", "__irshift__"], [234, 4, 1, "", "__isub__"], [235, 4, 1, "", "__itruediv__"], [236, 4, 1, "", "__ixor__"], [237, 4, 1, "", "__le__"], [238, 4, 1, "", "__len__"], [239, 4, 1, "", "__lshift__"], [240, 4, 1, "", "__lt__"], [241, 4, 1, "", "__matmul__"], [242, 4, 1, "", "__mod__"], [243, 4, 1, "", "__mul__"], [244, 4, 1, "", "__ne__"], [245, 4, 1, "", "__neg__"], [246, 4, 1, "", "__new__"], [247, 4, 1, "", "__or__"], [248, 4, 1, "", "__pos__"], [249, 4, 1, "", "__pow__"], [250, 4, 1, "", "__reduce__"], [251, 4, 1, "", "__repr__"], [252, 4, 1, "", "__rmatmul__"], [253, 4, 1, "", "__rshift__"], [254, 4, 1, "", "__setitem__"], [255, 4, 1, "", "__setstate__"], [256, 4, 1, "", "__str__"], [257, 4, 1, "", "__sub__"], [258, 4, 1, "", "__truediv__"], [259, 4, 1, "", "__xor__"], [260, 4, 1, "", "all"], [261, 4, 1, "", "any"], [262, 4, 1, "", "argmax"], [263, 4, 1, "", "argmin"], [264, 4, 1, "", "argpartition"], [265, 4, 1, "", "argsort"], [266, 4, 1, "", "astype"], [267, 3, 1, "", "base"], [268, 4, 1, "", "choose"], [269, 4, 1, "", "clip"], [270, 4, 1, "", "compress"], [271, 4, 1, "", "conj"], [272, 4, 1, "", "conjugate"], [273, 4, 1, "", "copy"], [274, 3, 1, "", "ctypes"], [275, 4, 1, "", "cumprod"], [276, 4, 1, "", "cumsum"], [277, 3, 1, "", "data"], [278, 4, 1, "", "diagonal"], [279, 4, 1, "", "dot"], [280, 3, 1, "", "dtype"], [281, 4, 1, "", "dump"], [282, 4, 1, "", "dumps"], [283, 4, 1, "", "fill"], [284, 3, 1, "", "flags"], [285, 3, 1, "", "flat"], [286, 4, 1, "", "flatten"], [287, 4, 1, "", "flip"], [288, 4, 1, "", "getfield"], [289, 3, 1, "", "imag"], [290, 4, 1, "", "item"], [291, 4, 1, "", "itemset"], [292, 3, 1, "", "itemsize"], [293, 4, 1, "", "max"], [294, 4, 1, "", "mean"], [295, 4, 1, "", "min"], [296, 3, 1, "", "nbytes"], [297, 3, 1, "", "ndim"], [298, 4, 1, "", "nonzero"], [299, 4, 1, "", "partition"], [300, 4, 1, "", "prod"], [301, 4, 1, "", "put"], [302, 4, 1, "", "ravel"], [303, 3, 1, "", "real"], [304, 4, 1, "", "reshape"], [305, 4, 1, "", "searchsorted"], [306, 4, 1, "", "setfield"], [307, 4, 1, "", "setflags"], [308, 3, 1, "", "shape"], [309, 3, 1, "", "size"], [310, 4, 1, "", "sort"], [311, 4, 1, "", "squeeze"], [312, 3, 1, "", "strides"], [313, 4, 1, "", "sum"], [314, 4, 1, "", "swapaxes"], [315, 4, 1, "", "take"], [316, 4, 1, "", "tobytes"], [317, 4, 1, "", "tofile"], [318, 4, 1, "", "tolist"], [319, 4, 1, "", "tostring"], [320, 4, 1, "", "trace"], [321, 4, 1, "", "transpose"], [322, 4, 1, "", "unique"], [323, 4, 1, "", "var"], [324, 4, 1, "", "view"]], "cupynumeric.random": [[1, 2, 1, "", "BitGenerator"], [2, 2, 1, "", "Generator"], [346, 1, 1, "", "beta"], [347, 1, 1, "", "binomial"], [348, 1, 1, "", "bytes"], [349, 1, 1, "", "chisquare"], [350, 1, 1, "", "default_rng"], [351, 1, 1, "", "exponential"], [352, 1, 1, "", "f"], [353, 1, 1, "", "gamma"], [354, 1, 1, "", "geometric"], [355, 1, 1, "", "gumbel"], [356, 1, 1, "", "hypergeometric"], [357, 1, 1, "", "laplace"], [358, 1, 1, "", "logistic"], [359, 1, 1, "", "lognormal"], [360, 1, 1, "", "logseries"], [361, 1, 1, "", "negative_binomial"], [362, 1, 1, "", "noncentral_chisquare"], [363, 1, 1, "", "noncentral_f"], [364, 1, 1, "", "normal"], [365, 1, 1, "", "pareto"], [366, 1, 1, "", "poisson"], [367, 1, 1, "", "power"], [368, 1, 1, "", "rand"], [369, 1, 1, "", "randint"], [370, 1, 1, "", "randn"], [371, 1, 1, "", "random"], [372, 1, 1, "", "random_integers"], [373, 1, 1, "", "random_sample"], [374, 1, 1, "", "ranf"], [375, 1, 1, "", "rayleigh"], [376, 1, 1, "", "sample"], [377, 1, 1, "", "seed"], [378, 1, 1, "", "standard_cauchy"], [379, 1, 1, "", "standard_exponential"], [380, 1, 1, "", "standard_gamma"], [381, 1, 1, "", "standard_t"], [382, 1, 1, "", "triangular"], [383, 1, 1, "", "uniform"], [384, 1, 1, "", "vonmises"], [385, 1, 1, "", "wald"], [386, 1, 1, "", "weibull"], [387, 1, 1, "", "zipf"]], "cupynumeric.random.BitGenerator": [[1, 4, 1, "", "__init__"]], "cupynumeric.random.Generator": [[2, 4, 1, "", "__init__"]]}, "objnames": {"0": ["py", "attribute", "Python attribute"], "1": ["py", "function", "Python function"], "2": ["py", "class", "Python class"], "3": ["py", "property", "Python property"], "4": ["py", "method", "Python method"], "5": ["py", "module", "Python module"]}, "objtypes": {"0": "py:attribute", "1": "py:function", "2": "py:class", "3": "py:property", "4": "py:method", "5": "py:module"}, "terms": {"": [2, 6, 14, 15, 29, 30, 35, 61, 68, 69, 75, 95, 96, 100, 101, 105, 106, 108, 109, 110, 111, 140, 150, 164, 167, 194, 195, 196, 199, 200, 202, 277, 280, 290, 291, 309, 316, 317, 321, 335, 343, 381, 387, 421, 422, 455, 459, 460, 463, 464, 465, 466, 468, 469, 470, 471, 472, 475, 478, 480, 483, 484], "0": [3, 4, 14, 19, 21, 36, 41, 43, 48, 54, 55, 58, 67, 68, 72, 73, 75, 76, 77, 79, 92, 95, 96, 97, 99, 100, 101, 106, 109, 112, 115, 135, 137, 162, 164, 168, 180, 185, 196, 200, 202, 209, 255, 278, 284, 288, 305, 306, 312, 313, 318, 320, 321, 323, 333, 335, 343, 346, 347, 349, 351, 352, 353, 355, 357, 358, 359, 360, 361, 362, 363, 364, 366, 367, 368, 369, 370, 371, 373, 374, 375, 376, 378, 381, 383, 384, 385, 386, 397, 398, 400, 401, 409, 413, 415, 423, 425, 426, 427, 428, 429, 430, 431, 435, 437, 439, 455, 459, 462, 463, 464, 465, 466, 468, 469, 470, 471, 472, 478, 480, 481, 483, 484, 485], "00": 484, "000": 484, "000001": 468, "000028": 472, "000029": 472, "0021705301478625403": 465, "01": [68, 484], "012924932": 484, "017": 474, "03": 462, "05": [15, 140, 463, 484], "07": [464, 478, 483], "075726": 462, "08": [15, 140, 462], "0b00000011": [333, 435], "0d": 477, "0x11403f190": 465, "1": [2, 3, 14, 16, 17, 19, 21, 31, 32, 36, 38, 40, 41, 43, 48, 54, 55, 56, 57, 61, 67, 68, 69, 72, 73, 75, 76, 77, 79, 81, 90, 91, 94, 95, 96, 98, 99, 100, 101, 103, 104, 105, 106, 107, 108, 109, 114, 126, 131, 132, 133, 137, 138, 151, 163, 164, 165, 168, 181, 185, 194, 195, 199, 200, 202, 203, 264, 265, 273, 284, 285, 286, 290, 291, 299, 300, 305, 310, 312, 321, 332, 333, 334, 335, 336, 341, 343, 346, 347, 349, 351, 353, 354, 355, 356, 357, 358, 359, 360, 361, 363, 364, 365, 366, 367, 368, 370, 371, 372, 373, 374, 375, 376, 379, 380, 383, 385, 386, 387, 388, 393, 397, 399, 400, 407, 409, 412, 413, 418, 421, 422, 425, 434, 435, 438, 440, 455, 459, 460, 463, 464, 465, 466, 468, 469, 470, 471, 472, 474, 477, 478, 480, 481, 483, 485], "10": [76, 77, 131, 171, 463, 465, 468, 471, 472, 474, 481, 483, 484], "100": [68, 200, 335, 462, 463, 464, 465, 468, 470, 480, 481, 484], "1000": [463, 464, 470, 478, 484], "10000": [169, 484], "100000": 484, "1000000": [463, 484], "100000000": 484, "1000000k": 484, "100000k": 484, "10000k": 484, "1024": [455, 471], "1083": 484, "10k": 474, "11": 483, "1100": 484, "11432": 484, "11680": 484, "12": [3, 77, 474, 475, 477, 483, 484], "12000": 484, "1202": 484, "1241": 484, "125": 364, "126": 471, "128": 471, "129": 474, "13": 469, "1300": 484, "13012": 484, "134217728": 455, "135": 462, "14": [3, 469], "14000": 484, "141": 484, "15": [77, 164, 470, 484], "150": 484, "15000": 484, "15000x15000": 484, "15973827": 477, "16": [3, 8, 462, 466, 484], "16000": 484, "16969": 484, "17": 3, "17617": 484, "18": [3, 8, 161, 292, 472], "19": 3, "1956": 385, "196": 462, "1970": 484, "1984": 475, "1985": 164, "1992": 465, "1995": 475, "1996": [200, 202, 335, 343], "1997": 463, "1998": 475, "1d": [41, 57, 341, 392, 418, 422], "1d00000000000001": 472, "1e": [15, 140, 464, 465, 469], "1e00000000000000": 472, "2": [3, 39, 40, 48, 56, 67, 72, 73, 74, 75, 76, 77, 79, 80, 81, 88, 92, 95, 98, 99, 100, 103, 104, 105, 106, 107, 108, 109, 110, 114, 115, 126, 151, 154, 159, 160, 163, 164, 165, 167, 173, 175, 181, 185, 200, 202, 312, 321, 335, 343, 351, 354, 362, 386, 397, 399, 409, 421, 422, 423, 440, 455, 459, 462, 463, 464, 465, 466, 468, 469, 470, 471, 474, 475, 476, 477, 483, 485], "20": [77, 312, 365, 469, 471, 484], "200": [364, 484], "2000": [475, 484], "20000": 484, "2000000": 484, "2000000k": 484, "2001": [351, 364], "2004": [459, 475], "2005": 475, "2006": 459, "2015": 475, "2017": 475, "2020": 484, "2024": [463, 464, 470], "2025": 475, "2048": 473, "21": [3, 8, 292, 484], "2193": 484, "22": [3, 484], "225": 484, "22500x22500": 484, "23": [3, 478, 483], "2316419": 463, "2350": 484, "24": [472, 474], "24000": 484, "243": [3, 8], "2461": 470, "25": 471, "25001932": 484, "255": [76, 466, 484], "256": 468, "259": 484, "2593": 484, "26": [463, 480], "27": 480, "273": 470, "275": 484, "277": 464, "28": [3, 480], "280": 463, "29": 3, "294165": 484, "2960": 484, "2d": [110, 321, 397, 471, 483], "2x": 469, "2x2": 469, "2y": 469, "3": [40, 76, 77, 79, 80, 81, 126, 133, 151, 181, 185, 200, 202, 312, 333, 335, 343, 351, 399, 409, 417, 421, 422, 435, 440, 463, 464, 465, 466, 468, 469, 470, 474, 475, 477, 483, 485], "30": 484, "300": 484, "30000": 484, "30000x30000": 484, "31": [464, 480], "3110": 484, "31938153": 463, "32": [201, 312, 460, 471, 484], "320": 468, "33": 480, "330274429": 463, "35": [3, 484], "3550": 484, "356563782": 463, "36": 465, "361": [200, 202, 335, 343], "365": [200, 202, 335, 343], "37": 68, "38000": 484, "39": 469, "39894228040143267793994605993438": 463, "3d": 483, "3e": 68, "3rd": 80, "4": [3, 76, 77, 79, 138, 181, 200, 202, 312, 335, 343, 421, 422, 438, 463, 464, 465, 466, 468, 469, 470, 471, 472, 477, 481, 483, 484, 485], "40": [312, 470, 484], "40000": 484, "4096": 455, "42": [3, 8, 468, 483], "434": 484, "4378": 484, "445": [3, 8], "45": 463, "457": 484, "466": 484, "47": [3, 8], "48000": 484, "49": 484, "4f": 484, "4th": [351, 364], "4x": 484, "4y": 469, "5": [76, 77, 79, 151, 181, 200, 202, 312, 335, 343, 422, 463, 464, 465, 466, 468, 470, 472, 483, 484], "50": [168, 200, 202, 335, 343, 484], "500": 484, "50000": 484, "50000x50000": 484, "5050": 484, "50625": 484, "50e": 484, "51": 364, "53": 8, "5384": 484, "5460": 484, "5596": 484, "57": 351, "6": [3, 76, 77, 200, 202, 312, 335, 343, 462, 463, 464, 465, 468, 469, 470], "600": 471, "6040": 484, "62": [3, 8], "6368": 484, "64": [201, 484], "65536": 455, "659": 463, "69664": 484, "7": [3, 76, 181, 200, 202, 307, 312, 335, 343, 463, 465, 468, 469], "70": 484, "70000": 484, "713": 484, "725": 484, "75625": 484, "75625x75625": 484, "767": 484, "781477937": 463, "7f0524da9740": 472, "7fda18f26000": 472, "7fe90fa7d740": 472, "8": [76, 165, 200, 202, 312, 335, 343, 465, 468, 475, 484], "80": 365, "8000": 484, "805182": 472, "8192": 455, "821255978": 463, "8388608": 472, "875": 470, "8850": 484, "9": [8, 181, 200, 202, 312, 335, 343, 465, 466, 468, 484], "90": 397, "919": 484, "961": 484, "993": 484, "A": [1, 8, 12, 13, 14, 18, 19, 20, 22, 23, 24, 25, 26, 27, 28, 34, 43, 44, 45, 46, 51, 52, 53, 57, 59, 60, 61, 63, 64, 65, 67, 68, 69, 70, 71, 78, 83, 86, 87, 88, 90, 93, 95, 99, 100, 111, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 125, 126, 127, 128, 134, 139, 143, 144, 145, 146, 147, 153, 154, 155, 156, 157, 161, 164, 165, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 184, 186, 187, 188, 191, 194, 195, 198, 201, 203, 266, 281, 284, 285, 286, 287, 290, 307, 312, 316, 319, 326, 327, 329, 332, 337, 338, 344, 345, 350, 366, 370, 381, 388, 390, 391, 393, 394, 395, 397, 398, 403, 404, 405, 406, 409, 410, 411, 414, 417, 419, 420, 422, 424, 432, 433, 435, 437, 464, 465, 468, 472, 475, 478, 484], "AND": [14, 44, 176, 475], "AS": [463, 464, 470, 475], "And": [469, 485], "As": [312, 317, 381, 385, 459, 470, 477, 483, 484], "At": [12, 13, 22, 23, 24, 25, 26, 27, 28, 44, 45, 46, 52, 53, 59, 60, 63, 64, 65, 70, 71, 78, 86, 87, 88, 90, 93, 116, 117, 118, 119, 120, 121, 122, 125, 127, 128, 134, 139, 143, 144, 145, 153, 154, 155, 156, 157, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 182, 186, 187, 188, 191, 326, 327, 329, 337, 338, 344, 345, 390, 391, 394, 395, 403, 404, 405, 406, 410, 411, 414, 419, 420, 432, 433, 464], "BE": 475, "BUT": 475, "BY": 475, "But": 483, "By": [16, 17, 29, 30, 31, 32, 37, 67, 95, 100, 109, 161, 168, 192, 193, 196, 201, 266, 334, 388, 392, 396, 407, 417, 424, 425, 427, 430, 437, 455, 459, 471, 484, 485], "FOR": 475, "For": [12, 13, 21, 22, 23, 24, 25, 26, 27, 28, 36, 40, 44, 45, 46, 52, 53, 55, 59, 60, 61, 63, 64, 65, 68, 69, 70, 71, 73, 76, 77, 78, 81, 82, 86, 87, 88, 90, 93, 94, 98, 99, 101, 104, 105, 107, 108, 110, 114, 115, 116, 117, 118, 119, 120, 121, 122, 125, 127, 128, 133, 134, 139, 140, 143, 144, 145, 153, 154, 155, 156, 157, 162, 164, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 182, 183, 185, 186, 187, 188, 191, 192, 193, 194, 195, 197, 201, 250, 255, 292, 312, 321, 326, 327, 329, 337, 338, 344, 345, 364, 390, 391, 394, 395, 399, 403, 404, 405, 406, 409, 410, 411, 413, 414, 419, 420, 432, 433, 437, 440, 451, 459, 465, 466, 468, 471, 472, 473, 474, 478, 481, 484, 485], "IF": 475, "IN": 475, "ITS": 475, "If": [1, 2, 12, 13, 14, 15, 16, 17, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 34, 35, 37, 41, 42, 43, 44, 45, 46, 47, 48, 49, 52, 53, 54, 55, 57, 58, 59, 60, 61, 63, 64, 65, 67, 68, 69, 70, 71, 72, 75, 76, 77, 78, 79, 82, 83, 86, 87, 88, 90, 92, 93, 94, 95, 96, 98, 99, 100, 101, 103, 104, 106, 107, 109, 110, 113, 116, 117, 118, 119, 120, 121, 122, 125, 126, 127, 128, 129, 130, 131, 134, 136, 137, 138, 139, 140, 143, 144, 145, 146, 147, 148, 152, 153, 154, 155, 156, 157, 159, 160, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 181, 182, 183, 184, 185, 186, 187, 188, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 255, 266, 287, 291, 305, 317, 318, 321, 325, 326, 327, 329, 332, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 372, 373, 374, 375, 376, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 389, 390, 391, 393, 394, 395, 396, 398, 400, 403, 404, 405, 406, 407, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 425, 432, 433, 434, 437, 438, 459, 460, 465, 468, 469, 472, 480, 483, 484], "In": [2, 61, 68, 69, 82, 99, 100, 101, 104, 106, 158, 168, 180, 185, 194, 195, 200, 201, 202, 203, 334, 335, 339, 340, 343, 365, 383, 385, 393, 407, 415, 425, 459, 463, 464, 465, 467, 468, 471, 478, 483, 484], "It": [6, 14, 19, 20, 21, 29, 30, 31, 32, 42, 47, 51, 54, 55, 68, 69, 77, 118, 184, 192, 193, 194, 195, 198, 200, 202, 203, 284, 291, 335, 339, 342, 343, 346, 351, 354, 357, 365, 384, 398, 401, 415, 417, 418, 437, 465, 471, 476, 483, 484], "Its": [55, 57, 341, 351, 423], "NO": 475, "NOT": [139, 177, 377, 475, 484], "No": [37, 158], "Not": [55, 143, 194, 195, 201, 203, 483], "OF": [463, 464, 470, 475], "ON": [460, 475], "OR": [19, 45, 178, 463, 464, 470, 474, 475], "On": 472, "One": [38, 39, 40, 201, 269, 393, 472, 483], "Ones": [34, 194], "Or": 421, "SUCH": 475, "Such": 472, "THE": 475, "TO": 475, "That": 180, "The": [2, 6, 7, 14, 15, 16, 17, 18, 19, 20, 21, 31, 32, 34, 36, 41, 42, 43, 47, 48, 49, 50, 51, 54, 55, 56, 58, 61, 66, 67, 68, 69, 72, 73, 75, 76, 77, 79, 81, 82, 83, 85, 89, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 111, 113, 116, 123, 124, 126, 129, 130, 131, 133, 135, 136, 137, 138, 140, 142, 146, 147, 149, 152, 158, 159, 160, 162, 163, 164, 165, 167, 168, 169, 180, 181, 183, 184, 185, 189, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 255, 266, 274, 281, 284, 286, 287, 289, 291, 292, 303, 307, 312, 316, 317, 318, 325, 330, 331, 333, 334, 335, 339, 340, 341, 343, 346, 350, 351, 352, 353, 354, 355, 357, 362, 364, 365, 366, 368, 369, 370, 372, 375, 378, 382, 383, 384, 385, 386, 387, 388, 389, 392, 393, 396, 397, 398, 399, 401, 402, 407, 409, 412, 413, 415, 417, 418, 421, 422, 423, 425, 427, 428, 430, 431, 434, 435, 436, 437, 438, 440, 442, 443, 444, 460, 461, 462, 463, 465, 466, 468, 469, 471, 472, 474, 475, 477, 480, 481, 483, 484], "Then": [54, 180, 291, 485], "There": [168, 291, 307, 434, 460, 462, 469, 483, 484], "These": [20, 49, 67, 82, 83, 185, 189, 284, 307, 341, 418, 471, 477, 484], "To": [98, 104, 106, 321, 373, 374, 376, 459, 463, 464, 465, 468, 469, 470, 474, 481, 484], "WITH": 475, "With": [14, 16, 17, 19, 29, 30, 41, 164, 183, 184, 192, 193, 196, 197, 198, 199, 200, 201, 202, 203, 335, 339, 343, 415, 437, 471, 473, 484], "_": [465, 483, 484], "__abs__": 0, "__add__": 0, "__and__": 0, "__array__": [0, 34, 324], "__array_function__": [0, 425], "__array_ufunc__": 0, "__bool__": 0, "__buffer__": 0, "__complex__": 0, "__contains__": 0, "__copy__": 0, "__deepcopy__": 0, "__divmod__": 0, "__eq__": 0, "__float__": 0, "__floordiv__": 0, "__format__": 0, "__ge__": 0, "__getitem__": 0, "__gt__": 0, "__hash__": 0, "__iadd__": 0, "__iand__": 0, "__ifloordiv__": 0, "__ilshift__": 0, "__imatmul__": 0, "__imod__": 0, "__imul__": 0, "__index__": 0, "__init__": [0, 1, 2, 4, 480], "__int__": 0, "__invert__": 0, "__ior__": 0, "__ipow__": 0, "__irshift__": 0, "__isub__": 0, "__iter__": 0, "__itruediv__": 0, "__ixor__": 0, "__le__": 0, "__len__": 0, "__lshift__": 0, "__lt__": 0, "__main__": 484, "__matmul__": 0, "__mod__": 0, "__mul__": 0, "__name__": [466, 484], "__ne__": 0, "__neg__": 0, "__or__": 0, "__pos__": 0, "__pow__": 0, "__radd__": 0, "__rand__": 0, "__rdivmod__": 0, "__reduce__": 0, "__reduce_ex__": 0, "__repr__": 0, "__rfloordiv__": 0, "__rmatmul__": 0, "__rmod__": 0, "__rmul__": 0, "__ror__": 0, "__rpow__": 0, "__rshift__": 0, "__rsub__": 0, "__rtruediv__": 0, "__rxor__": 0, "__setitem__": 0, "__setstate__": 0, "__sizeof__": 0, "__str__": 0, "__sub__": 0, "__truediv__": 0, "__xor__": 0, "_f": 164, "a0": 332, "a1": [35, 58, 332, 463, 465], "a100": 473, "a2": [35, 58, 463, 465], "a3": 463, "a4": 463, "a5": 463, "a_": [164, 465], "a_ax": 421, "a_max": 55, "a_min": 55, "a_swap": 416, "aand": 463, "aarch64": [474, 484], "ab": [15, 162, 164, 205, 463], "abandon": 459, "abil": 484, "abl": [164, 459, 484], "about": [99, 284, 307, 459, 464, 468, 474, 478, 484], "abov": [54, 72, 96, 101, 106, 109, 183, 197, 201, 203, 339, 365, 369, 372, 425, 426, 437, 463, 471, 472, 475, 484], "abramowitz": 463, "abrupt": 466, "absolut": [0, 3, 8, 15, 93, 140], "abstract": 471, "ac": [463, 466], "acceler": [455, 472, 473, 484], "accept": [347, 459, 477, 483], "access": [73, 74, 180, 284, 290, 307, 471, 472, 484], "accomod": 465, "accord": [41, 109, 159, 160, 307, 424], "accordingli": 181, "account": [388, 393, 471, 472, 484], "acct": 484, "acct_nam": 484, "accumul": [68, 69, 194, 195, 201, 203, 339, 415, 423, 477], "accur": [126, 464, 465, 472], "accuraci": [99, 100, 101, 104, 106, 465, 469, 484], "achiev": [321, 354, 471, 473], "across": [468, 471, 484], "action": 475, "activ": [474, 484], "actual": [158, 307, 466, 471, 472, 478, 484], "ad": [15, 321, 365, 471, 480], "adapt": 475, "add": [0, 3, 8, 373, 374, 376, 435, 459, 477, 483, 484, 485], "add_argu": 484, "addit": [2, 67, 158, 161, 321, 434, 455, 462, 465, 466, 469, 471, 472, 474, 483, 484], "addition": [350, 460, 477, 484], "address": [417, 459, 484], "adjac": [21, 471, 484], "advanc": [461, 472, 477, 482], "advantag": 484, "advis": 475, "affect": [21, 307, 465], "afford": [472, 484], "after": [81, 110, 181, 200, 202, 312, 327, 335, 343, 396, 399, 440, 459, 462, 471, 480, 483], "again": 324, "against": [6, 14, 15, 16, 17, 19, 29, 30, 41, 49, 50, 164, 183, 184, 192, 193, 196, 197, 198, 199, 200, 201, 202, 203, 335, 339, 341, 343, 415, 418, 437], "aggreg": 484, "agre": [459, 463, 464, 470], "ai": 484, "aim": 473, "alaska": 475, "algebra": [82, 444, 453, 460], "algo_canny_edge_detector": 466, "algorithm": [1, 32, 82, 83, 94, 99, 107, 407, 465, 466, 467, 469, 484], "alia": [319, 371], "alias": 99, "align": [284, 307, 484], "all": [0, 3, 8, 16, 17, 19, 41, 48, 54, 56, 67, 76, 77, 81, 82, 83, 87, 88, 90, 92, 96, 97, 101, 102, 106, 109, 110, 113, 126, 133, 135, 150, 151, 158, 168, 180, 181, 183, 185, 192, 193, 194, 195, 196, 197, 199, 201, 203, 266, 271, 283, 284, 287, 307, 318, 339, 383, 396, 399, 401, 412, 415, 417, 423, 437, 440, 455, 459, 460, 462, 468, 470, 471, 475, 480, 484, 485], "allclos": [0, 3, 8, 480], "allevi": 484, "alloc": [12, 13, 22, 23, 24, 25, 26, 27, 28, 44, 45, 46, 52, 53, 59, 60, 63, 64, 65, 70, 71, 78, 86, 87, 88, 90, 93, 116, 117, 118, 119, 120, 121, 122, 125, 127, 128, 134, 139, 143, 144, 145, 146, 147, 153, 154, 155, 156, 157, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 182, 186, 187, 188, 191, 266, 326, 327, 329, 337, 338, 344, 345, 390, 391, 394, 395, 403, 404, 405, 406, 410, 411, 414, 419, 420, 432, 433, 472, 482, 485], "allow": [16, 17, 36, 48, 79, 82, 131, 138, 169, 181, 184, 196, 198, 199, 200, 202, 266, 335, 343, 417, 421, 425, 438, 459, 466, 471, 484], "alon": 484, "along": [6, 14, 16, 17, 19, 20, 29, 30, 31, 32, 41, 48, 57, 58, 66, 68, 69, 73, 76, 80, 81, 94, 95, 96, 98, 99, 100, 101, 103, 104, 106, 107, 109, 110, 113, 114, 115, 126, 132, 133, 137, 164, 168, 183, 184, 185, 190, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 262, 263, 270, 287, 293, 294, 295, 312, 315, 320, 323, 335, 339, 341, 343, 392, 396, 397, 399, 408, 409, 413, 415, 417, 418, 421, 422, 423, 427, 428, 430, 431, 434, 435, 437, 439, 440, 484], "alpha": [346, 465, 468], "alreadi": [37, 39, 40, 184, 198, 284, 325, 332, 434, 459], "also": [21, 67, 76, 82, 96, 101, 106, 109, 161, 181, 189, 284, 291, 324, 347, 352, 358, 365, 367, 375, 378, 384, 387, 417, 434, 449, 451, 459, 462, 464, 469, 470, 471, 472, 474, 476, 477, 481, 483, 484], "alter": 284, "altern": [14, 16, 17, 19, 68, 69, 183, 184, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 335, 339, 343, 351, 398, 415, 437], "although": [102, 318, 471], "alwai": [54, 75, 80, 116, 132, 150, 159, 160, 169, 317, 412, 439, 455, 459, 472], "am": [332, 459], "amax": [0, 3, 8, 43, 196, 293], "amd": 484, "american": [200, 202, 335, 343], "amin": [0, 3, 8, 199, 295], "among": [274, 291, 484], "amongst": 6, "amount": [472, 484], "an": [2, 6, 12, 13, 14, 16, 17, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 34, 36, 37, 38, 39, 40, 41, 42, 44, 45, 46, 47, 48, 51, 52, 53, 54, 55, 57, 58, 59, 60, 61, 62, 63, 64, 65, 67, 68, 69, 70, 71, 73, 74, 75, 77, 78, 79, 82, 83, 86, 87, 88, 89, 90, 91, 92, 93, 95, 96, 98, 99, 100, 101, 104, 106, 107, 109, 110, 113, 116, 117, 118, 119, 120, 121, 122, 125, 126, 127, 128, 129, 130, 131, 132, 134, 137, 138, 139, 142, 143, 144, 145, 149, 151, 152, 153, 154, 155, 156, 157, 164, 166, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 212, 213, 255, 268, 269, 270, 274, 282, 287, 290, 291, 299, 304, 305, 309, 310, 312, 315, 317, 318, 321, 322, 324, 325, 326, 327, 329, 331, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 347, 349, 351, 352, 354, 363, 368, 370, 385, 387, 388, 390, 391, 392, 393, 394, 395, 396, 397, 398, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 429, 430, 432, 433, 434, 436, 437, 439, 441, 443, 451, 455, 459, 460, 462, 463, 464, 466, 468, 469, 470, 471, 472, 474, 475, 477, 478, 480, 484], "analog": [100, 101], "analogu": [351, 384], "analysi": 472, "angl": [0, 3, 8, 70, 71, 344, 345], "ani": [0, 3, 4, 6, 8, 12, 13, 14, 16, 17, 20, 21, 22, 23, 24, 25, 26, 27, 28, 34, 36, 37, 44, 45, 46, 48, 49, 52, 53, 54, 59, 60, 63, 64, 65, 67, 68, 69, 70, 71, 76, 77, 78, 82, 83, 86, 87, 88, 90, 93, 95, 96, 100, 101, 106, 109, 110, 111, 116, 117, 118, 119, 120, 121, 122, 123, 125, 126, 127, 128, 133, 134, 139, 141, 142, 143, 144, 145, 148, 149, 150, 151, 153, 154, 155, 156, 157, 162, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 181, 182, 183, 186, 187, 188, 191, 192, 193, 194, 195, 196, 197, 199, 201, 203, 266, 267, 274, 275, 276, 280, 284, 285, 287, 288, 293, 295, 300, 306, 313, 316, 318, 326, 327, 329, 337, 338, 339, 344, 345, 383, 390, 391, 392, 394, 395, 401, 403, 404, 405, 406, 410, 411, 414, 415, 419, 420, 423, 432, 433, 437, 459, 462, 463, 464, 470, 471, 475, 481, 483], "anoth": [6, 284, 307, 472, 484], "anova": 352, "answer": 484, "anti": 483, "anyth": [292, 462], "ap": 463, "apach": [459, 463, 464, 470], "api": [284, 307, 371, 455, 460, 465, 466, 469, 472, 473, 478, 479, 481, 482, 484], "appear": [42, 47, 89, 114, 115, 129, 130, 152, 266, 291, 434, 459], "append": [0, 3, 8, 75, 76, 83, 181, 471, 483, 484], "appli": [41, 111, 421, 465, 466, 477, 483, 484], "applic": [463, 464, 470, 471, 478, 480, 482, 484, 485], "apply_along_axi": [3, 8], "apply_over_ax": [3, 8], "approach": [385, 459, 471, 483, 484], "appropri": [29, 30, 48, 54, 77, 192, 193, 284, 307, 369, 372, 417, 451, 459, 471, 484], "approx": 484, "approxim": [463, 465], "ar": [13, 14, 15, 16, 17, 19, 20, 21, 27, 29, 30, 33, 35, 38, 39, 40, 41, 42, 44, 45, 46, 48, 49, 54, 55, 56, 57, 58, 61, 63, 67, 68, 69, 72, 75, 76, 77, 78, 79, 82, 83, 86, 92, 95, 96, 98, 99, 100, 101, 104, 106, 109, 112, 113, 114, 115, 116, 118, 119, 120, 121, 125, 127, 128, 131, 134, 138, 140, 153, 154, 155, 156, 157, 158, 162, 164, 167, 168, 174, 175, 176, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 266, 269, 284, 287, 290, 298, 305, 307, 317, 318, 321, 325, 327, 328, 329, 335, 336, 338, 339, 340, 341, 343, 346, 347, 349, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 369, 370, 372, 373, 374, 375, 376, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 391, 394, 396, 398, 400, 401, 413, 414, 415, 417, 421, 423, 425, 428, 431, 432, 434, 435, 436, 437, 459, 460, 462, 463, 465, 466, 468, 469, 471, 474, 475, 477, 478, 480, 483, 484], "arang": [0, 3, 8], "arbitrari": [84, 85, 284, 309], "arbitrarili": 284, "arc": 27, "arcco": [0, 3, 8], "arccosh": [0, 3, 8], "architectur": [471, 484], "archiv": 317, "arcsin": [0, 3, 8], "arcsinh": [0, 3, 8], "arctan": [0, 3, 8], "arctan2": [0, 3, 8, 18], "arctanh": [0, 3, 8], "area": [284, 307, 471], "arg": [12, 13, 22, 23, 24, 25, 26, 27, 28, 44, 45, 46, 49, 50, 52, 53, 59, 60, 63, 64, 65, 70, 71, 78, 86, 87, 88, 90, 93, 111, 116, 117, 118, 119, 120, 121, 122, 125, 127, 128, 134, 139, 143, 144, 145, 151, 153, 154, 155, 156, 157, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 182, 186, 187, 188, 191, 290, 291, 326, 327, 329, 337, 338, 344, 345, 390, 391, 394, 395, 403, 404, 405, 406, 410, 411, 414, 419, 420, 432, 433, 463, 484], "argmax": [0, 3, 8], "argmin": [0, 3, 8, 468], "argpars": 484, "argpartit": [0, 3, 8, 341, 418], "argsort": [0, 3, 8, 31, 305, 341, 400, 418], "argument": [2, 12, 13, 18, 21, 22, 23, 24, 25, 26, 27, 28, 44, 45, 46, 52, 53, 55, 58, 59, 60, 61, 63, 64, 65, 70, 71, 77, 78, 79, 83, 86, 87, 88, 90, 93, 111, 116, 117, 118, 119, 120, 121, 122, 125, 127, 128, 131, 134, 136, 138, 139, 143, 144, 145, 146, 147, 150, 153, 154, 155, 156, 157, 163, 168, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 185, 186, 187, 188, 191, 255, 266, 274, 290, 291, 321, 324, 326, 327, 329, 337, 338, 344, 345, 368, 370, 389, 390, 391, 394, 395, 403, 404, 405, 406, 410, 411, 413, 414, 419, 420, 421, 425, 432, 433, 434, 438, 482, 484], "argumentpars": 484, "argwher": [0, 3, 8], "ari": [38, 39, 40, 409], "aris": [352, 475], "arithmet": [7, 54, 183, 197, 290, 453], "around": [3, 8, 340, 417, 484], "arr": [20, 51, 62, 74, 91, 184, 198, 284, 336, 341, 417, 418, 428, 431, 477], "arr_t": 266, "arrai": [0, 2, 6, 7, 12, 13, 14, 15, 16, 17, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 151, 152, 153, 154, 155, 156, 157, 159, 160, 161, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 208, 212, 213, 255, 264, 265, 266, 268, 269, 270, 273, 274, 277, 279, 280, 281, 282, 283, 284, 285, 286, 287, 289, 290, 291, 294, 296, 297, 299, 300, 301, 302, 303, 304, 305, 307, 308, 309, 310, 312, 313, 314, 315, 316, 317, 318, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 359, 368, 369, 370, 372, 373, 374, 376, 383, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 453, 455, 464, 465, 466, 468, 469, 470, 471, 472, 477, 478, 480, 485], "array2str": [3, 8], "array_equ": [0, 3, 8], "array_equiv": [3, 8], "array_lik": [6, 12, 13, 14, 15, 16, 17, 18, 19, 20, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 37, 38, 39, 40, 41, 43, 44, 45, 46, 48, 49, 51, 52, 53, 55, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 74, 75, 76, 77, 78, 79, 82, 83, 85, 86, 87, 88, 89, 90, 91, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 109, 110, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 124, 125, 126, 127, 128, 131, 134, 136, 138, 139, 140, 141, 143, 144, 145, 146, 147, 148, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 181, 182, 183, 184, 185, 186, 187, 188, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 287, 305, 325, 326, 327, 328, 329, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 400, 402, 403, 404, 405, 406, 407, 408, 410, 411, 412, 413, 414, 415, 416, 417, 419, 420, 421, 422, 423, 424, 425, 426, 428, 432, 433, 434, 436, 437, 438, 441, 443], "array_of_diagon": 75, "array_repr": [3, 8], "array_split": [0, 3, 8], "array_str": [3, 8], "array_typ": 41, "arraylik": [55, 131, 401, 441], "articl": 459, "asanyarrai": 3, "asarrai": [0, 3, 8], "asarray_chkfinit": [3, 8], "ascend": [305, 400], "ascontiguousarrai": 3, "asfarrai": [3, 8], "asfortranarrai": 3, "ask": [459, 473], "asmatrix": [3, 8], "aspect": 484, "aspir": 472, "assembl": 48, "assert": [465, 468, 483], "assign": [67, 283, 284, 291, 471, 477], "assoc": 468, "associ": [41, 131, 468, 475, 478, 483], "assum": [41, 83, 161, 180, 460], "ast": 169, "astyp": [0, 8, 76, 280, 466, 472, 484], "asynchron": [341, 477, 478], "atleast2d": 321, "atleast_1d": [0, 3, 8, 89], "atleast_2d": [0, 3, 8, 89], "atleast_3d": [0, 3, 8, 89], "atol": [15, 140], "attempt": [41, 77, 183, 196, 197, 199, 203, 284, 325, 437, 455, 484], "attribut": [4, 7, 85, 124, 274, 284, 291, 296, 331, 443], "author": 475, "auto": 61, "autom": 459, "automat": [61, 163, 459, 460, 471, 474, 484], "avail": [1, 2, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 205, 206, 207, 211, 212, 213, 214, 215, 217, 218, 220, 221, 222, 223, 224, 225, 226, 227, 230, 231, 232, 233, 234, 235, 236, 237, 239, 240, 241, 242, 243, 244, 245, 247, 248, 249, 251, 252, 253, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 268, 269, 270, 271, 272, 273, 278, 279, 281, 282, 283, 285, 286, 287, 290, 291, 293, 294, 295, 298, 299, 300, 301, 302, 304, 305, 307, 310, 311, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 459, 460, 474, 483, 484, 485], "averag": [0, 3, 8, 67, 183, 197, 294, 453, 470, 471, 484], "averaged_inverted_cdf": [200, 202, 335, 343], "avg": 41, "avoid": [39, 40, 266, 291, 468, 472, 477], "aweight": 67, "ax": [14, 16, 17, 19, 29, 30, 41, 48, 66, 75, 76, 89, 95, 96, 97, 100, 101, 102, 105, 106, 108, 109, 113, 126, 138, 164, 166, 183, 184, 189, 192, 193, 196, 197, 198, 199, 200, 201, 202, 203, 287, 311, 321, 335, 339, 343, 396, 397, 415, 416, 421, 422, 423, 424, 437, 466, 484], "axi": [14, 16, 17, 18, 19, 20, 29, 30, 31, 32, 36, 41, 57, 58, 66, 68, 69, 75, 76, 79, 80, 81, 89, 94, 95, 96, 98, 99, 100, 101, 103, 104, 105, 106, 107, 108, 109, 113, 114, 115, 126, 132, 133, 137, 164, 168, 183, 184, 190, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 260, 261, 262, 263, 264, 265, 270, 275, 276, 287, 293, 294, 295, 299, 300, 310, 311, 312, 313, 315, 321, 323, 333, 334, 335, 339, 341, 343, 388, 392, 393, 396, 397, 399, 407, 408, 409, 412, 413, 415, 416, 417, 418, 422, 423, 434, 435, 437, 439, 440, 468], "axis1": [75, 278, 314, 320, 416, 423], "axis2": [75, 278, 314, 320, 416, 423], "b": [6, 15, 35, 48, 79, 81, 118, 133, 138, 140, 166, 181, 284, 332, 346, 373, 374, 376, 399, 421, 438, 440, 459, 460, 465, 484], "b0": 332, "b1": 332, "b_ax": 421, "ba": 54, "back": [31, 54, 150, 281, 282, 334, 388, 393, 455, 463, 469, 472, 480, 484], "backward": [75, 94, 95, 96, 98, 99, 100, 101, 103, 104, 105, 106, 107, 108, 109, 126, 266, 388], "bad": 356, "balanc": 484, "baltimor": 164, "bar": 483, "barba": 471, "bartlett": [0, 3, 8], "base": [1, 34, 37, 61, 82, 171, 173, 175, 266, 284, 307, 336, 342, 455, 459, 460, 468, 471, 472, 477], "base_repr": [3, 8], "bash": 484, "bashrc": 484, "basi": [455, 463, 464, 470], "basic": [32, 407, 451, 453, 461, 471, 482, 483], "batch": [94, 95, 96, 98, 99, 100, 101, 103, 104, 105, 106, 107, 108, 109, 159, 160, 455], "bayesian": 346, "bbox_to_anchor": 465, "bchoic": 54, "becaus": [21, 290, 364, 385, 463, 464, 470, 472, 477, 483], "becom": [13, 27, 40, 44, 45, 46, 54, 55, 63, 78, 86, 116, 118, 119, 120, 121, 125, 127, 128, 134, 153, 154, 155, 156, 157, 174, 175, 176, 178, 179, 182, 186, 187, 191, 321, 327, 329, 338, 385, 391, 394, 414, 432, 484, 485], "been": [81, 341, 372, 399, 418, 440, 472], "befor": [14, 16, 17, 19, 20, 41, 58, 61, 114, 115, 183, 196, 197, 203, 284, 305, 339, 361, 396, 400, 415, 422, 437, 438, 469, 472, 474, 483, 484], "begin": [168, 461, 469, 484], "behav": [284, 340, 417], "behavior": [61, 77, 181, 316, 319, 341, 342, 369, 372, 422, 455, 471, 474, 482, 484], "being": [21, 412, 459, 472, 484], "bell": 364, "belong": [77, 468], "below": [67, 72, 104, 164, 307, 425, 426, 429, 460, 463, 465, 469, 471, 480, 481, 483, 484, 485], "benchmark": [462, 472, 479, 482, 484], "bernoulli": 354, "bessel": 152, "best": [83, 459, 472, 482], "beta": [0, 3, 8, 152, 351, 468], "better": [21, 54, 478, 484], "between": [15, 21, 36, 76, 126, 168, 200, 202, 317, 335, 343, 351, 357, 372, 385, 465, 466, 468, 469, 471, 483, 484], "beyond": [77, 396], "bham": 463, "bia": 67, "big": [161, 333, 435, 463], "bigger": 484, "billion": 471, "bin": [43, 77, 131, 333, 435, 468, 474, 484], "bin_edg": 131, "binari": [169, 255, 317, 333, 435, 444, 453, 475], "binary_repr": [3, 8], "binaryio": 169, "binaryoptask": 472, "bincount": [0, 3, 8, 468], "binomi": [0, 3, 8, 361, 366], "bit": [1, 44, 45, 46, 139, 155, 177, 201, 312, 333, 394, 435, 453], "bit_gener": 2, "bitgener": [2, 3, 8, 350], "bitord": [333, 435], "bitwise_and": [0, 3, 8], "bitwise_or": [0, 3, 8], "bitwise_xor": [0, 3, 8], "bla": 460, "black": [467, 468, 474], "black_schol": [462, 463, 474, 484], "blackman": [0, 3, 8], "block": [0, 3, 8, 81, 133, 312, 399, 440, 471], "block_arrai": 48, "blog": 472, "blue": [465, 468], "bmat": [3, 8], "bmatrix": 469, "bn": 332, "boilerpl": 484, "boldsymbol": 484, "bond": 484, "bool": [1, 4, 12, 13, 14, 15, 16, 17, 18, 19, 22, 23, 24, 25, 26, 27, 28, 29, 30, 34, 35, 36, 41, 44, 45, 46, 49, 51, 52, 53, 57, 59, 60, 63, 64, 65, 67, 70, 71, 77, 78, 82, 83, 86, 87, 88, 90, 93, 110, 116, 117, 118, 119, 120, 121, 122, 125, 127, 128, 131, 134, 137, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 153, 154, 155, 156, 157, 164, 167, 168, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 182, 183, 184, 185, 186, 187, 188, 191, 192, 193, 196, 197, 198, 199, 200, 201, 202, 203, 255, 266, 293, 295, 300, 307, 313, 326, 327, 329, 335, 337, 338, 339, 343, 344, 345, 390, 391, 394, 395, 401, 403, 404, 405, 406, 410, 411, 414, 415, 419, 420, 432, 433, 434, 437, 441, 451, 455, 483], "bool_": [3, 8], "boolean": [14, 19, 76, 140, 145, 146, 147, 148, 151, 180, 307, 333, 342, 437, 468], "boolean_sequ": 151, "borrow": 284, "both": [13, 15, 20, 27, 41, 44, 45, 46, 61, 63, 67, 78, 79, 86, 100, 116, 118, 119, 120, 121, 125, 127, 128, 134, 138, 140, 153, 154, 155, 156, 157, 164, 174, 175, 176, 178, 179, 181, 182, 185, 186, 187, 191, 284, 327, 329, 338, 352, 353, 363, 364, 391, 394, 414, 421, 423, 432, 460, 469, 472, 483], "bottleneck": 484, "bound": [57, 77, 340, 417], "boundari": [68, 69, 126, 194, 195, 383, 465, 470, 471, 478], "boundsmod": [54, 417], "break": [468, 469, 483], "bright": 484, "broadcast": [3, 7, 8, 12, 13, 14, 16, 17, 19, 22, 23, 24, 25, 26, 27, 28, 29, 30, 41, 44, 45, 46, 48, 49, 50, 51, 52, 53, 54, 55, 59, 60, 63, 64, 65, 70, 71, 78, 79, 86, 87, 88, 90, 93, 116, 117, 118, 119, 120, 121, 122, 125, 127, 128, 134, 138, 139, 143, 144, 145, 146, 147, 153, 154, 155, 156, 157, 164, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 181, 182, 183, 184, 185, 186, 187, 188, 191, 192, 193, 196, 197, 198, 199, 200, 201, 202, 203, 326, 327, 329, 335, 337, 338, 339, 341, 343, 344, 345, 366, 390, 391, 392, 394, 395, 403, 404, 405, 406, 410, 411, 414, 415, 418, 419, 420, 421, 432, 433, 437, 438, 441, 444, 477, 484], "broadcast_arrai": [0, 3, 8], "broadcast_shap": [0, 3, 8], "broadcast_to": [0, 3, 8], "brownian": 385, "bryan": 463, "bsd": 475, "buffer": [4, 16, 17, 54, 68, 69, 184, 194, 195, 196, 198, 199, 277, 284, 290, 307], "build": [377, 453, 461, 468, 477, 484], "built": [21, 460, 464, 472, 473, 484], "builtin": 318, "bundl": 474, "busday_count": [3, 8], "busday_offset": [3, 8], "busdaycalendar": [3, 8], "busi": 475, "bypass": [317, 484], "byte": [0, 3, 8, 82, 169, 181, 266, 296, 312, 316, 319, 333, 472], "byte_bound": [3, 8], "bytes_": [3, 8], "bytesio": 317, "byteswap": 8, "c": [34, 48, 57, 164, 181, 266, 274, 284, 286, 302, 304, 307, 316, 317, 319, 372, 385, 388, 393, 422, 436, 459, 460, 463, 468, 474, 475, 484], "c_": 67, "c_contigu": 284, "ca": 284, "calcul": [7, 12, 41, 61, 76, 82, 87, 88, 90, 102, 126, 164, 168, 181, 184, 198, 200, 202, 309, 335, 339, 343, 437, 438, 460, 463, 468, 484], "calculate_dist": 468, "call": [54, 77, 107, 163, 180, 184, 198, 212, 213, 274, 284, 307, 364, 417, 422, 455, 463, 464, 469, 472, 484], "call_result": 463, "callabl": 180, "can": [14, 19, 20, 37, 41, 48, 67, 73, 75, 82, 83, 94, 95, 96, 99, 100, 101, 126, 133, 142, 149, 150, 151, 161, 162, 164, 168, 181, 184, 198, 200, 201, 202, 266, 274, 281, 284, 290, 292, 307, 312, 317, 324, 335, 341, 343, 365, 393, 417, 418, 421, 423, 434, 451, 455, 459, 460, 462, 463, 464, 465, 466, 469, 470, 471, 473, 474, 476, 477, 481, 483, 484], "can_cast": [3, 8], "cannot": [58, 169, 192, 193, 284, 317, 472], "canon": [463, 469, 472], "capabl": [41, 474, 484], "care": 484, "carrai": 284, "cartesian": 185, "case": [14, 19, 21, 31, 32, 34, 41, 54, 61, 68, 69, 75, 76, 77, 79, 98, 126, 137, 168, 180, 185, 194, 195, 200, 201, 202, 203, 290, 291, 307, 309, 333, 334, 335, 339, 340, 341, 343, 346, 369, 372, 373, 374, 375, 376, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 393, 407, 415, 418, 421, 425, 459, 467, 477, 480, 483], "cast": [0, 3, 8, 12, 13, 22, 23, 24, 25, 26, 27, 28, 44, 45, 46, 52, 53, 58, 59, 60, 63, 64, 65, 68, 69, 70, 71, 76, 78, 82, 86, 87, 88, 90, 93, 116, 117, 118, 119, 120, 121, 122, 125, 127, 128, 134, 138, 139, 143, 144, 145, 153, 154, 155, 156, 157, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 181, 182, 183, 184, 186, 187, 188, 191, 194, 195, 197, 198, 201, 203, 266, 280, 291, 326, 327, 329, 332, 337, 338, 339, 344, 345, 390, 391, 394, 395, 398, 403, 404, 405, 406, 410, 411, 414, 415, 419, 420, 421, 432, 433, 437, 438, 469], "castingkind": [12, 13, 22, 23, 24, 25, 26, 27, 28, 44, 45, 46, 52, 53, 58, 59, 60, 63, 64, 65, 70, 71, 78, 82, 86, 87, 88, 90, 93, 116, 117, 118, 119, 120, 121, 122, 125, 127, 128, 134, 139, 143, 144, 145, 153, 154, 155, 156, 157, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 181, 182, 186, 187, 188, 191, 326, 327, 329, 337, 338, 344, 345, 390, 391, 394, 395, 403, 404, 405, 406, 410, 411, 414, 419, 420, 432, 433], "cat": 472, "cauchi": 378, "caus": [277, 471, 475, 483], "cbrt": [0, 3, 8], "cdot": [469, 484], "cdoubl": [3, 8], "ceil": [0, 3, 8, 21], "cell": 471, "center": [61, 97, 384, 465, 468, 470, 484], "centr": 364, "central": [126, 362, 363, 364], "centroid": 468, "centroid_dot": 468, "centroid_mask": 468, "certain": [180, 312, 455], "certif": 461, "certifi": 459, "cfd": 473, "cfloat": [3, 8], "cg": [462, 484], "chain": 163, "challeng": [471, 484], "chanc": 459, "chang": [63, 82, 168, 181, 194, 195, 266, 284, 307, 321, 336, 341, 342, 388, 393, 453, 459, 466, 469, 473, 479, 482, 483, 484, 485], "channel": [81, 133, 399, 440, 471, 474], "charact": [3, 8, 480], "characterist": 364, "chararrai": [3, 8], "charg": 475, "check": [69, 77, 142, 149, 158, 194, 195, 459, 466, 468, 469, 472, 474, 483, 484], "chi": [349, 352, 362, 375], "chisquar": [0, 3, 8], "choic": [3, 8, 54, 268, 317], "choicelist": 401, "choleski": [0, 3, 8, 462, 467, 481], "cholesky_tim": 464, "choos": [0, 3, 8, 27, 61, 83, 441, 472, 484], "chosen": [131, 441], "chuang": 471, "circl": 384, "circular": 384, "circumst": 284, "claim": [385, 475], "class": [1, 2, 4, 6, 14, 16, 17, 19, 34, 37, 92, 135, 137, 183, 196, 199, 201, 266, 324, 330, 339, 374, 376, 415, 425, 444], "classic": [82, 365], "claus": [475, 483], "clean": 471, "clear": 284, "clearli": 484, "clip": [0, 3, 8, 54, 340, 417], "clipped_arrai": 55, "clongdoubl": [3, 8, 290], "clongfloat": [3, 8], "close": [47, 168, 266, 372, 459, 472], "closest": 317, "closest_observ": [200, 202, 335, 343], "cluster": [467, 472, 473, 482], "cmap": [466, 484], "cnd": 463, "cnd_d1": 463, "cnd_d2": 463, "co": [0, 3, 8, 65, 465], "coastal": 471, "code": [32, 48, 185, 291, 407, 455, 461, 462, 471, 473, 475, 479, 482], "codebas": 481, "coeffici": [166, 463], "coercion": 111, "coin": 354, "collaps": [285, 286], "collect": [75, 277, 484], "color": [462, 465, 468], "colorama": 462, "column": [8, 34, 56, 67, 92, 110, 114, 115, 132, 133, 135, 159, 163, 165, 286, 312, 321, 388, 425, 427, 430, 436, 480, 484], "column_stack": [0, 3, 8], "com": [459, 466, 472, 475, 477, 484, 485], "combin": [89, 96, 101, 106, 109, 126, 462, 478, 484], "combinatori": 83, "come": [434, 484], "comm": 471, "comm_world": 471, "comma": [82, 462], "comman": 472, "command": [462, 472, 474, 476, 480, 484], "comment": 459, "commit": [459, 471], "common": [13, 27, 44, 45, 46, 54, 63, 78, 82, 86, 111, 116, 118, 119, 120, 121, 125, 127, 128, 134, 153, 154, 155, 156, 157, 174, 175, 176, 178, 179, 182, 186, 187, 191, 327, 329, 338, 351, 386, 391, 394, 414, 432, 484], "common_typ": [3, 8], "commonli": [364, 472, 483], "commun": [459, 471, 472, 483, 484], "compact": 467, "compactli": 465, "compar": [15, 16, 17, 35, 140, 196, 199, 291, 465, 484], "comparison": [7, 444, 453], "compat": [75, 266, 318, 319, 388, 393, 425, 484], "compil": [166, 307, 460], "complet": [83, 200, 202, 335, 343, 460, 471, 473, 480, 484], "complex": [18, 35, 43, 59, 60, 68, 69, 77, 79, 94, 95, 96, 99, 100, 101, 103, 104, 107, 109, 136, 138, 141, 142, 148, 149, 159, 160, 194, 195, 200, 202, 271, 272, 335, 343, 389, 398, 408, 438, 451, 453, 471, 484], "complex128": [3, 8], "complex256": [3, 8], "complex64": [3, 8], "complex_": [3, 8], "complexflo": [3, 8], "compli": 459, "complianc": [463, 464, 470], "complic": [291, 471], "compon": [6, 35, 48, 97, 136, 389, 421, 483, 484], "compos": 472, "compound": 463, "compress": [0, 3, 8, 317], "compressed_arrai": 57, "compuat": 480, "comput": [16, 17, 18, 41, 44, 45, 46, 61, 68, 69, 82, 93, 94, 95, 96, 98, 99, 100, 101, 103, 104, 105, 106, 107, 108, 109, 126, 131, 137, 139, 159, 160, 162, 163, 164, 165, 166, 167, 176, 177, 178, 179, 183, 184, 194, 195, 196, 197, 198, 199, 200, 201, 202, 332, 335, 343, 419, 420, 421, 437, 455, 463, 464, 465, 466, 468, 469, 471, 472, 473, 477, 478, 483], "computat": 484, "computation": 161, "compute_uv": 167, "concaten": [0, 3, 8, 48, 81, 133, 399, 440], "concern": 484, "conclud": [459, 471], "conclus": 471, "cond": [8, 483, 484], "conda": 460, "conda_override_cuda": 474, "condit": [12, 13, 22, 23, 24, 25, 26, 27, 28, 44, 45, 46, 52, 53, 57, 59, 60, 63, 64, 65, 70, 71, 78, 86, 87, 88, 90, 91, 93, 116, 117, 118, 119, 120, 121, 122, 125, 127, 128, 134, 139, 143, 144, 145, 153, 154, 155, 156, 157, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 182, 186, 187, 188, 191, 266, 270, 326, 327, 329, 336, 337, 338, 342, 344, 345, 382, 390, 391, 394, 395, 401, 403, 404, 405, 406, 410, 411, 414, 419, 420, 432, 433, 441, 463, 464, 465, 470, 471, 475, 478, 483, 484], "condition": 483, "condlist": 401, "conduct": 484, "configur": [455, 460, 461, 472], "configurt": 472, "conj": [0, 3, 8], "conjug": [0, 3, 8, 59, 79, 104, 138, 158, 271, 438, 464], "connect": [475, 484], "consecut": 76, "consequ": [18, 438, 472], "consequenti": 475, "conserv": 185, "consid": [15, 35, 67, 68, 82, 83, 140, 365, 465, 469, 484], "consider": 484, "consist": [14, 21, 61, 76, 168, 418, 459, 471], "const": [483, 484], "constant": [126, 287], "constraint": [41, 484], "construct": [7, 48, 54, 72, 113, 114, 115, 151, 268, 316, 350, 422], "constructor": [2, 451], "consum": [161, 296], "contact": 472, "contain": [2, 29, 30, 41, 43, 54, 55, 57, 67, 75, 76, 99, 112, 126, 131, 137, 183, 184, 192, 193, 196, 197, 198, 199, 200, 202, 203, 255, 280, 304, 316, 317, 328, 335, 343, 388, 398, 421, 427, 428, 430, 431, 434, 437, 451, 484], "content": [43, 184, 198, 200, 202, 284, 307, 316, 317, 335, 343, 453], "context": [463, 471], "contigu": [49, 51, 185, 266, 284, 286, 312, 316, 388, 393], "continu": [351, 352, 373, 374, 376, 382, 384, 463], "contour": 484, "contract": [82, 83, 460, 475], "contribut": [8, 41, 131, 461, 484], "contributor": [459, 475], "control": [58, 82, 181, 266, 316, 462, 485], "conveni": 317, "convent": [18, 82, 101, 181, 185], "converg": [159, 160, 167, 468, 469, 483, 484], "convers": [41, 82, 181, 183, 196, 197, 199, 203, 266, 324, 325, 437], "convert": [14, 19, 37, 38, 39, 40, 70, 71, 184, 198, 200, 202, 282, 317, 318, 321, 324, 335, 343, 344, 345, 436, 465, 477, 484], "convolut": [61, 466, 484], "convolv": [0, 8, 466, 484], "convolve_nd": [466, 484], "convolvemethodtyp": 61, "convolvemod": 61, "coordin": [126, 185, 436, 468], "copi": [0, 3, 8, 20, 34, 37, 38, 39, 40, 48, 49, 57, 72, 75, 185, 190, 212, 213, 266, 284, 285, 286, 290, 307, 316, 318, 334, 388, 393, 397, 407, 408, 426, 429, 459, 463, 464, 470, 472, 475, 482, 484], "copyright": [459, 463, 464, 470, 475], "copysign": [0, 3, 8], "copyto": [3, 8, 336], "core": [2, 455, 462, 463, 472, 484, 485], "corner": [100, 101, 484], "corpor": [463, 464, 470], "corrcoef": [3, 8], "correct": [20, 58, 413, 471], "correctli": [14, 16, 17, 19, 27, 29, 30, 41, 164, 183, 184, 192, 193, 196, 197, 198, 199, 200, 201, 202, 203, 335, 339, 343, 415, 437, 484], "correl": [8, 453], "correspond": [8, 54, 58, 75, 95, 96, 100, 101, 104, 106, 109, 126, 137, 146, 147, 151, 159, 180, 192, 193, 200, 202, 305, 333, 335, 343, 396, 400, 401, 402, 465, 466, 474, 477, 483, 484], "correspondingli": [409, 472], "cosh": [3, 8], "cosin": [22, 23, 47, 64, 65, 129, 130], "cost": [83, 471], "costli": 83, "could": 483, "count": [14, 19, 41, 43, 66, 113, 126, 131, 203, 287, 339, 415, 435, 444, 453, 468], "count_nonzero": [0, 3, 8], "counterclockwis": [18, 397], "cours": 473, "cov": [0, 3, 8], "covari": 67, "cover": [3, 8, 385, 459], "coverag": [455, 479, 481, 482], "cp": 471, "cpu": [1, 2, 3, 8, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 97, 102, 110, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 205, 206, 207, 211, 212, 213, 214, 215, 217, 218, 220, 221, 222, 223, 224, 225, 226, 227, 230, 231, 232, 233, 234, 235, 236, 237, 239, 240, 241, 242, 243, 244, 245, 247, 248, 249, 251, 252, 253, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 268, 269, 270, 271, 272, 273, 278, 279, 281, 282, 283, 285, 286, 287, 290, 291, 293, 294, 295, 298, 299, 300, 301, 302, 304, 305, 307, 310, 311, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 455, 460, 462, 469, 472, 473, 481, 483, 485], "cputsc": 476, "creat": [12, 13, 22, 23, 24, 25, 26, 27, 28, 34, 44, 45, 46, 52, 53, 54, 59, 60, 63, 64, 65, 70, 71, 78, 83, 86, 87, 88, 90, 93, 116, 117, 118, 119, 120, 121, 122, 125, 127, 128, 134, 139, 143, 144, 145, 153, 154, 155, 156, 157, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 182, 186, 187, 188, 191, 274, 280, 284, 326, 327, 329, 337, 338, 341, 344, 345, 368, 390, 391, 394, 395, 398, 403, 404, 405, 406, 410, 411, 414, 416, 419, 420, 432, 433, 459, 465, 470, 471, 474, 483, 484], "create_subarrai": 471, "creation": [83, 284, 425, 444, 451, 453], "critic": [471, 484], "crop": [94, 95, 96, 98, 99, 100, 101, 103, 104, 106, 107, 109], "cross": [3, 8, 151], "crucial": 484, "csingl": [3, 8], "csv": [455, 472, 480], "ct": 94, "cube": 52, "cubic": 83, "cubla": 455, "cuda": [455, 460, 462, 471, 474, 484], "cumbersom": 484, "cumprod": [0, 3, 8, 69, 194, 195, 477], "cumsum": [0, 3, 8], "cumul": [68, 69, 194, 195, 463, 484], "cunumer": 472, "cupi": 471, "cupynumer": [0, 3, 7, 444, 449, 453, 455, 460, 462, 463, 464, 466, 468, 469, 470, 471, 474, 476, 477, 478, 480, 481, 482, 485], "cupynumeric_fast_math": 455, "cupynumeric_force_thunk": 455, "cupynumeric_matmul_cache_s": 455, "cupynumeric_min_cpu_chunk": 455, "cupynumeric_min_gpu_chunk": 455, "cupynumeric_min_omp_chunk": 455, "cupynumeric_numpy_compat": [192, 193, 196, 199, 455], "cupynumeric_preload_cudalib": 455, "cupynumeric_report_coverag": [455, 480, 481], "cupynumeric_report_dump_callstack": [455, 480], "cupynumeric_report_dump_csv": [455, 480], "cupynumeric_root": 460, "cupynumeric_warn": 455, "curand": 377, "curiou": 465, "current": [6, 31, 32, 61, 158, 165, 167, 169, 208, 284, 324, 334, 341, 392, 407, 425, 434, 455, 463, 472, 476, 477, 480, 483, 484, 485], "curv": [364, 465], "cusolv": 455, "cusolvermp": 166, "custom": [451, 460, 471], "cycl": 151, "d": [2, 40, 41, 43, 56, 57, 61, 67, 68, 69, 72, 74, 75, 79, 81, 92, 105, 108, 110, 114, 115, 133, 137, 138, 151, 163, 164, 181, 185, 194, 195, 196, 203, 273, 285, 286, 305, 321, 333, 336, 388, 393, 399, 400, 409, 415, 422, 423, 434, 435, 438, 440, 459, 460, 463, 464, 484], "d0": [368, 370], "d1": [368, 370, 463], "d2": 463, "d_1": 484, "d_2": 484, "damag": 475, "data": [16, 17, 21, 33, 34, 37, 41, 58, 62, 67, 81, 82, 84, 85, 92, 94, 95, 96, 98, 99, 100, 101, 103, 104, 105, 106, 107, 108, 109, 111, 123, 124, 131, 133, 135, 137, 149, 159, 160, 168, 169, 180, 181, 183, 184, 197, 198, 200, 201, 202, 203, 208, 255, 266, 274, 280, 284, 290, 292, 304, 307, 316, 317, 318, 321, 324, 330, 331, 335, 336, 339, 340, 341, 343, 388, 393, 398, 399, 412, 415, 418, 423, 425, 426, 437, 440, 442, 443, 444, 453, 468, 469, 471, 475, 478, 483, 484], "data_magnitude_squar": 468, "dataset": [131, 484], "datasourc": [3, 8], "datatyp": [111, 471, 482], "date": 484, "datetim": [463, 464, 470], "datetime64": [3, 8], "datetime_as_str": [3, 8], "ddof": [67, 323, 437], "de": 364, "deadlock": 471, "deal": [475, 484], "dealloc": 284, "deb": 484, "debian": 475, "debug": [462, 471], "decai": 357, "decid": 455, "decim": 398, "decompos": [122, 464, 471], "decomposit": [158, 167, 453, 467, 471], "decreas": [77, 463, 469, 472], "decreasingli": [100, 101], "dedic": 472, "deep": [48, 213, 318, 471], "deepcopi": 213, "def": [463, 464, 466, 468, 469, 470, 471, 483, 484], "default": [2, 12, 13, 14, 16, 17, 18, 19, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 34, 37, 41, 44, 45, 46, 52, 53, 54, 57, 58, 59, 60, 61, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 75, 76, 77, 78, 82, 83, 84, 86, 87, 88, 90, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 113, 116, 117, 118, 119, 120, 121, 122, 123, 125, 126, 127, 128, 131, 134, 135, 137, 139, 143, 144, 145, 153, 154, 155, 156, 157, 161, 164, 167, 168, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 181, 182, 183, 184, 185, 186, 187, 188, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 255, 266, 286, 287, 316, 317, 326, 327, 329, 330, 333, 334, 335, 337, 338, 339, 343, 344, 345, 346, 347, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 369, 372, 373, 374, 375, 376, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 390, 391, 392, 394, 395, 396, 397, 398, 401, 403, 404, 405, 406, 407, 409, 410, 411, 414, 415, 417, 419, 420, 423, 424, 425, 426, 427, 430, 432, 433, 434, 435, 437, 439, 442, 455, 462, 466, 468, 477, 484, 485], "default_rng": [0, 2, 3, 8, 468], "defer": [4, 455, 463, 464, 470, 472, 477], "defin": [54, 85, 124, 131, 164, 200, 202, 290, 291, 331, 335, 343, 382, 397, 425, 443, 459, 460, 463, 464, 466, 468, 469, 470, 483, 484], "definit": [61, 99, 101, 158, 464, 484], "deg": [18, 161], "deg2rad": [0, 3, 8, 345], "degre": [3, 8, 18, 70, 344, 345, 349, 352, 362, 363, 381, 397, 437, 484], "delai": [483, 484], "delet": [3, 8], "delta": [437, 468], "demand": 471, "democrat": 484, "demonstr": [481, 484], "denomin": [352, 363], "denot": 8, "dens": [137, 465], "densiti": [131, 351, 364], "dep": 460, "depend": [43, 72, 164, 166, 168, 181, 201, 372, 401, 441, 461, 472, 483, 484], "depict": 484, "deprec": [3, 8, 372], "deprecate_with_doc": [3, 8], "depth": [48, 80, 81, 318], "deriv": [126, 359, 364, 463, 465, 466, 475, 483, 484], "derivative_exact": 465, "descend": 167, "describ": [164, 307, 351, 364, 465, 472, 483], "descript": [99, 101, 131, 266, 462], "descriptor": 324, "design": [47, 353, 380, 482, 484], "desir": [34, 51, 76, 84, 123, 183, 196, 197, 199, 203, 330, 369, 422, 437, 442, 474], "despit": 319, "dest": 471, "destin": [58, 189, 341, 413], "det": [3, 8], "detail": [16, 17, 68, 69, 72, 74, 94, 99, 104, 105, 107, 108, 169, 185, 194, 195, 196, 199, 201, 203, 263, 274, 312, 339, 415, 427, 428, 429, 430, 431, 434, 451, 459, 462, 471, 472, 474, 483, 484], "detect": [467, 474], "detector": 466, "determin": [34, 61, 68, 69, 75, 111, 166, 194, 195, 201, 307, 401, 423, 436, 466, 468, 469, 471, 484], "determinist": [468, 477], "develop": [460, 471, 472, 473, 475, 484], "developercertif": 459, "deviat": [359, 364, 483], "devic": [471, 484], "devin": 475, "df": [349, 362, 381], "dfden": [352, 363], "dfnum": [352, 363], "dft": [94, 99, 107], "dgx": 473, "diag": [0, 3, 8, 465, 477], "diag_indic": [0, 3, 8, 74], "diag_indices_from": [0, 3, 8], "diagflat": [3, 8], "diagon": [0, 3, 8, 72, 73, 74, 92, 110, 135, 158, 320, 423, 425, 426, 427, 428, 429, 430, 431, 465], "diagram": [460, 484], "dictionari": 284, "did": 469, "diff": [0, 3, 8], "differ": [1, 15, 29, 30, 36, 68, 69, 76, 94, 99, 102, 104, 105, 107, 108, 114, 115, 116, 126, 164, 181, 185, 194, 195, 208, 280, 317, 341, 342, 357, 397, 418, 438, 453, 459, 460, 462, 467, 469, 470, 471, 478, 482, 483, 484], "differenc": 76, "differenti": [468, 484], "difficult": [471, 484], "diffus": 484, "digit": [0, 3, 8], "dim": 284, "dimens": [6, 14, 16, 17, 19, 29, 30, 34, 38, 39, 40, 41, 48, 54, 56, 57, 58, 61, 73, 75, 76, 80, 81, 89, 110, 126, 132, 133, 137, 138, 146, 147, 151, 159, 160, 164, 165, 167, 181, 183, 184, 185, 192, 193, 196, 197, 198, 199, 200, 201, 202, 203, 284, 285, 286, 297, 308, 309, 312, 321, 325, 328, 333, 335, 339, 341, 343, 368, 370, 393, 396, 397, 399, 402, 409, 412, 413, 415, 418, 421, 422, 423, 424, 427, 428, 430, 431, 434, 435, 436, 437, 439, 440, 453, 467, 468, 471, 477], "dimension": [7, 38, 43, 48, 61, 67, 74, 77, 82, 94, 95, 96, 99, 100, 101, 104, 106, 107, 108, 109, 110, 126, 161, 185, 284, 325, 332, 412, 422, 444, 466, 468, 470, 477, 483, 484], "dimenson": 185, "direct": [61, 76, 94, 95, 96, 98, 99, 100, 101, 103, 104, 105, 106, 107, 108, 109, 114, 115, 284, 397, 466, 475, 484], "directli": [61, 76, 317, 382, 459, 474, 476, 480], "directori": [460, 484], "dirichlet": [3, 8, 346], "disabl": [82, 417, 484], "disclaim": 475, "discontinu": [200, 202, 335, 343], "discourag": [291, 478], "discret": [61, 76, 94, 95, 96, 99, 100, 101, 104, 106, 107, 109, 369, 372, 387, 444, 453, 465], "discuss": [459, 472], "disp": [3, 8], "dispers": 384, "displai": [462, 472, 484], "distanc": [21, 126, 385, 468], "distance_sum": 468, "distribu": 484, "distribut": [2, 277, 346, 347, 349, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 372, 373, 374, 375, 376, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 437, 453, 455, 459, 463, 464, 470, 471, 472, 473, 475, 477, 484], "disturb": 364, "dive": 471, "divid": [3, 8, 36, 81, 133, 399, 409, 440, 468, 471], "divis": [78, 118, 121, 187, 391, 409, 432], "divisor": [125, 437], "divmod": [3, 8, 214], "dn": [368, 370], "do": [61, 77, 180, 184, 198, 290, 291, 317, 460, 468, 475, 477, 478, 483, 484, 485], "doc": [12, 13, 22, 23, 24, 25, 26, 27, 28, 44, 45, 46, 52, 53, 55, 59, 60, 63, 64, 65, 70, 71, 78, 86, 87, 88, 90, 93, 116, 117, 118, 119, 120, 121, 122, 125, 127, 128, 134, 139, 143, 144, 145, 153, 154, 155, 156, 157, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 182, 186, 187, 188, 191, 326, 327, 329, 337, 338, 344, 345, 390, 391, 394, 395, 403, 404, 405, 406, 410, 411, 414, 419, 420, 432, 433, 466, 472, 485], "docstr": 483, "document": [36, 72, 80, 132, 260, 261, 262, 263, 264, 265, 268, 269, 270, 271, 272, 278, 279, 293, 294, 295, 298, 299, 300, 301, 302, 304, 310, 311, 313, 314, 315, 320, 322, 323, 429, 439, 459, 472, 474, 475, 483, 484], "doe": [14, 16, 17, 19, 21, 36, 77, 110, 159, 160, 165, 167, 169, 183, 194, 195, 196, 199, 201, 266, 284, 290, 296, 321, 324, 339, 350, 409, 415, 417, 438, 459, 466, 477, 480, 483, 484], "doesn": [77, 113, 114, 115, 340, 477, 483], "dollar": 484, "domain": [42, 460, 465, 471], "don": [284, 462, 468, 483, 484], "done": [82, 181, 266, 287, 307, 333, 435, 483], "dot": [0, 3, 8, 163, 181, 421, 438, 464, 468, 469, 480, 484], "dot_product": 484, "doubl": [3, 8, 41, 357, 471], "down": [115, 483, 484], "download": [460, 474, 484], "dr": 471, "draft": 459, "draw": [346, 347, 349, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 375, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387], "drawn": [2, 346, 347, 349, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 369, 372, 373, 374, 375, 376, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 401], "driver": [462, 476, 484], "drop": [464, 472, 473, 484], "dry": 462, "dsplit": [0, 3, 8, 81], "dstack": [0, 3, 8], "dt": [346, 463], "dtype": [3, 4, 8, 12, 13, 14, 16, 17, 18, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 34, 35, 37, 41, 44, 45, 46, 52, 53, 54, 58, 59, 60, 63, 64, 65, 67, 68, 69, 70, 71, 76, 77, 78, 79, 82, 84, 85, 86, 87, 88, 90, 92, 93, 111, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 127, 128, 134, 135, 137, 138, 139, 143, 144, 145, 153, 154, 155, 156, 157, 159, 160, 163, 168, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 181, 182, 183, 186, 187, 188, 190, 191, 192, 193, 194, 195, 196, 197, 201, 203, 208, 255, 266, 275, 276, 288, 291, 294, 300, 306, 312, 313, 320, 323, 324, 326, 327, 329, 330, 331, 332, 334, 337, 338, 339, 344, 345, 369, 374, 376, 390, 391, 394, 395, 403, 404, 405, 406, 407, 410, 411, 414, 415, 417, 419, 420, 421, 423, 425, 432, 433, 437, 438, 442, 443, 464, 468, 481], "dtypelik": [4, 58, 92, 123, 124, 135, 137, 168, 306, 324, 330, 331, 374, 376, 425, 443], "due": [383, 477], "dump": [0, 8], "dump_data": 478, "duplic": [341, 477, 484], "dure": [455, 460, 472, 484], "dx": 126, "dy": 126, "dynam": 471, "dz": 126, "e": [14, 19, 43, 54, 75, 77, 79, 95, 98, 99, 100, 101, 104, 106, 126, 137, 138, 166, 181, 309, 317, 324, 346, 347, 349, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 369, 372, 373, 374, 375, 376, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 421, 423, 438, 455, 459, 460, 463, 477, 481, 483, 484, 485], "each": [2, 38, 39, 40, 41, 43, 49, 50, 54, 57, 67, 73, 77, 83, 95, 96, 100, 101, 106, 109, 114, 115, 126, 131, 151, 159, 160, 161, 189, 291, 312, 317, 328, 341, 342, 347, 349, 356, 361, 364, 392, 396, 413, 418, 422, 427, 428, 430, 431, 434, 435, 436, 460, 465, 466, 468, 469, 471, 472, 483, 484], "eager": [4, 455, 462, 472, 484], "eagerli": 469, "earli": 484, "earlier": 468, "eas": [371, 484], "easi": [459, 484], "easier": [274, 417, 484], "easiest": [459, 460], "east": [470, 484], "economist": 484, "ed": [351, 364, 466], "edg": [55, 77, 131, 467], "edge_ord": 126, "edgecolor": 468, "ediff1d": [3, 8], "edit": [460, 484], "effect": [83, 185, 321, 377, 435, 470, 484], "effici": [94, 107, 463, 471, 484], "effort": [459, 471], "effortlessli": 471, "eig": [0, 3, 8], "eigenvalu": [159, 160], "eigenvector": 159, "eigh": [3, 8], "eight": [164, 435], "eigval": [0, 3, 8], "eigvalsh": [3, 8], "einstein": 82, "einsum": [0, 8, 83, 462], "einsum_path": [0, 3, 8, 82], "either": [35, 41, 61, 79, 126, 164, 181, 201, 208, 291, 305, 400, 435, 463, 464, 465, 470, 472, 484], "elaps": [462, 463, 464, 470, 474, 478, 484], "elapsed_millisec": 478, "elapsed_tim": 484, "element": [12, 13, 14, 15, 16, 17, 19, 21, 22, 23, 24, 25, 26, 27, 28, 33, 35, 41, 43, 44, 45, 46, 48, 49, 51, 52, 53, 54, 55, 59, 60, 61, 63, 64, 65, 67, 68, 69, 75, 76, 78, 86, 87, 90, 91, 92, 93, 95, 100, 106, 109, 112, 113, 114, 115, 116, 117, 119, 120, 121, 122, 127, 128, 131, 135, 136, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 150, 154, 156, 157, 158, 162, 170, 171, 172, 176, 177, 178, 179, 181, 182, 183, 184, 185, 186, 187, 188, 191, 194, 195, 196, 197, 198, 199, 201, 203, 255, 260, 261, 266, 271, 272, 280, 283, 284, 286, 287, 290, 291, 292, 294, 296, 298, 300, 301, 305, 309, 312, 313, 315, 318, 322, 323, 326, 327, 328, 329, 333, 336, 337, 338, 339, 340, 342, 388, 389, 390, 391, 392, 393, 395, 396, 397, 400, 401, 402, 403, 404, 405, 406, 410, 411, 414, 415, 417, 419, 420, 421, 423, 426, 429, 432, 433, 434, 435, 436, 437, 441, 451, 453, 465, 468, 484], "elementwis": 453, "elimin": 471, "els": [469, 483, 484], "elsewher": [12, 13, 22, 23, 24, 25, 26, 27, 28, 44, 45, 46, 52, 53, 59, 60, 63, 64, 65, 70, 71, 78, 86, 87, 88, 90, 92, 93, 116, 117, 118, 119, 120, 121, 122, 125, 127, 128, 134, 139, 143, 144, 145, 153, 154, 155, 156, 157, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 182, 186, 187, 188, 191, 326, 327, 329, 337, 338, 344, 345, 351, 390, 391, 394, 395, 403, 404, 405, 406, 410, 411, 414, 419, 420, 425, 432, 433, 441], "email": 459, "emerg": 484, "emploi": 459, "empti": [0, 3, 8, 16, 17, 42, 47, 48, 129, 130, 152, 192, 193, 194, 195, 196, 199, 201, 203, 317, 336, 409], "empty_lik": [0, 3, 8], "en": [351, 459], "enabl": [455, 460, 462, 471, 472, 484], "encapsul": 6, "encount": [194, 195, 196, 199, 401, 459, 472, 483, 484], "encumbr": 459, "end": [20, 21, 42, 75, 77, 83, 168, 333, 435, 459, 465, 469, 470, 478, 484], "end_tim": 484, "endian": 317, "endors": 475, "endpoint": [168, 465], "energi": 484, "enhanc": [459, 471, 484], "enough": [161, 460, 478, 483], "ensur": [425, 459, 471, 478, 483, 484], "enter": 462, "entir": [277, 435, 484], "entri": [57, 84, 91, 110, 113, 114, 115, 284, 287, 317, 340, 341, 409, 412], "entropi": [1, 350], "env": [455, 460], "environ": [192, 193, 196, 199, 455, 460, 471, 472, 474, 476, 480, 484], "epyc": 484, "eq": 463, "eqn": 465, "eqnarrai": 484, "equal": [0, 3, 8, 12, 13, 15, 22, 23, 24, 25, 26, 27, 28, 35, 36, 41, 42, 43, 44, 45, 46, 48, 52, 53, 59, 60, 63, 64, 65, 70, 71, 75, 78, 80, 87, 88, 90, 92, 93, 116, 117, 118, 119, 120, 121, 122, 125, 126, 127, 128, 131, 134, 139, 140, 142, 143, 144, 145, 149, 153, 154, 155, 156, 157, 168, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 182, 186, 187, 188, 191, 309, 326, 327, 329, 337, 338, 344, 345, 347, 353, 356, 361, 375, 383, 385, 390, 391, 394, 395, 403, 404, 405, 406, 409, 410, 411, 414, 419, 420, 425, 427, 430, 432, 433], "equal_nan": [15, 35, 140], "equat": [15, 140, 166, 383, 453, 465, 469, 471, 484], "equiv": [58, 82, 181, 266], "equival": [21, 41, 57, 77, 79, 80, 81, 83, 112, 118, 132, 133, 140, 151, 212, 260, 261, 262, 263, 264, 265, 268, 269, 270, 271, 272, 278, 279, 291, 293, 294, 295, 298, 299, 300, 301, 302, 304, 308, 310, 311, 313, 314, 315, 317, 320, 321, 322, 323, 324, 325, 399, 417, 439, 440, 483], "erf": 463, "error": [184, 198, 340, 409, 412, 417, 465, 468, 471, 477, 484], "errstat": [3, 8], "especi": 483, "essenti": [483, 484], "estim": [61, 67, 200, 202, 335, 343, 484], "etc": [34, 95, 96, 100, 101, 106, 109, 274, 284, 455, 471, 477, 483, 485], "european": 463, "evalu": [14, 19, 57, 82, 83, 142, 149, 163, 185, 260, 261, 401, 477, 483], "even": [67, 97, 99, 102, 107, 142, 149, 159, 160, 284, 459, 462, 475], "evenli": [21, 168, 398], "event": [366, 475], "everi": [61, 106, 459, 463, 468, 483], "every_nit": 483, "everyon": 459, "evid": 484, "evolv": 459, "exact": [79, 138, 166, 421, 438, 465], "exactli": [319, 459, 464, 469, 480, 484], "examin": 67, "exampl": [40, 55, 68, 69, 76, 77, 194, 195, 312, 321, 354, 364, 409, 413, 459, 460, 462, 465, 466, 468, 469, 471, 472, 473, 474, 476, 478, 481, 482, 483, 485], "exce": [409, 435, 455], "exceed": 471, "except": [14, 16, 17, 19, 21, 34, 42, 54, 58, 76, 79, 92, 106, 133, 183, 196, 199, 201, 284, 290, 307, 339, 388, 392, 415, 418, 421, 463, 464, 470, 475], "exchang": 471, "exclud": [20, 21, 168, 383, 478], "exclus": 369, "execut": [455, 460, 462, 463, 464, 469, 470, 478, 480, 481, 482, 483, 484], "exemplari": 475, "exercis": [459, 484], "exhibit": 316, "exist": [58, 89, 169, 453, 460, 474, 481, 484], "exit": 462, "exp": [0, 3, 8, 90, 161, 351, 463], "exp2": [0, 3, 8], "exp_rt": 463, "expand": [76, 89], "expand_dim": [0, 3, 8], "expans": 463, "expect": [14, 16, 17, 19, 68, 69, 104, 138, 180, 183, 184, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 332, 335, 339, 343, 366, 398, 415, 421, 437, 438, 459, 472], "expens": 317, "experi": [354, 484], "expertis": 471, "expir": [463, 484], "explain": [96, 101, 106, 109], "explan": [69, 194, 195, 312, 459], "explicit": [82, 161, 471, 483, 484], "explicitli": [131, 137, 169, 459, 465, 472, 484], "explor": 83, "expm1": [0, 3, 8], "expon": [122, 162, 367, 453], "exponenti": [0, 3, 8, 83, 87, 161, 174, 175, 357, 379], "exponential_distribut": 351, "expos": [2, 34, 284, 307], "expr": [82, 83], "express": [82, 83, 185, 463, 464, 465, 470, 475, 477], "extend": [465, 471, 477], "extra": 484, "extract": [0, 3, 8, 57, 72, 336, 417], "extrema": 453, "ey": [0, 3, 8, 464, 481], "f": [0, 3, 8, 34, 114, 126, 164, 200, 202, 266, 284, 286, 316, 335, 343, 346, 351, 354, 363, 388, 393, 436, 463, 464, 465, 469, 470, 484], "f_": [465, 469], "f_contigu": 284, "f_interior": 465, "fa": 284, "fab": [0, 3, 8], "facilit": 481, "factor": [94, 95, 96, 98, 99, 100, 101, 103, 104, 105, 106, 107, 108, 109, 158, 165, 464, 484], "fail": [158, 165, 472, 483], "failur": [354, 361, 462], "fall": [31, 77, 150, 334, 455, 463, 469, 472, 480], "fallback": 477, "fals": [1, 12, 13, 14, 15, 16, 17, 18, 19, 22, 23, 24, 25, 26, 27, 28, 29, 30, 34, 35, 36, 41, 44, 45, 46, 49, 51, 52, 53, 57, 59, 60, 63, 64, 65, 67, 70, 71, 76, 77, 78, 82, 83, 86, 87, 88, 90, 93, 110, 116, 117, 118, 119, 120, 121, 122, 125, 127, 128, 131, 134, 137, 139, 140, 143, 144, 145, 146, 147, 149, 150, 153, 154, 155, 156, 157, 164, 167, 168, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 182, 183, 184, 185, 186, 187, 188, 191, 192, 193, 196, 197, 198, 199, 200, 201, 202, 203, 260, 261, 266, 284, 293, 294, 295, 300, 313, 323, 326, 327, 329, 335, 337, 338, 339, 343, 344, 345, 390, 391, 394, 395, 401, 403, 404, 405, 406, 410, 411, 414, 415, 419, 420, 432, 433, 434, 437, 455, 465, 469], "familiar": [473, 484], "fan": [200, 202, 335, 343], "fanci": 417, "farrai": 284, "fashion": 82, "fast": [94, 95, 96, 100, 101, 106, 107, 109], "fast_math": 444, "faster": [61, 77, 291, 484], "fastest": [163, 388, 393], "fatter": 357, "fbmem": [462, 484], "featur": [459, 462, 484], "feedback": 459, "feel": 459, "fetch": 483, "few": [478, 483], "fewer": 472, "fft": [0, 3, 8, 61, 444, 453], "fft2": [0, 3, 8, 100], "fftfreq": [3, 8], "fftn": [0, 3, 8, 94, 101], "fftshift": [0, 3, 8, 102], "fid": 317, "fidel": 471, "field": [185, 290, 435], "fig": [466, 484], "figsiz": [466, 484], "file": [169, 281, 312, 317, 453, 455, 459, 460, 462, 463, 464, 470, 475, 480, 484], "filenam": 317, "fileno": 317, "fill": [0, 2, 8, 110, 123, 124, 185, 330, 365, 370, 425, 442], "fill_diagon": [0, 3, 8], "fill_valu": [123, 124], "final": [106, 109, 471, 473, 484], "find": [33, 305, 322, 400, 434, 453, 468, 469, 472, 474, 483, 484], "find_centroid": 468, "find_common_typ": [0, 3, 8], "find_cupynumeric_cpp": 460, "finfo": [3, 8], "finish": [462, 463, 464, 470], "finit": [140, 143, 467], "first": [14, 19, 41, 42, 47, 49, 54, 56, 58, 61, 75, 76, 79, 81, 83, 100, 101, 113, 116, 126, 131, 133, 163, 181, 184, 185, 190, 198, 200, 202, 203, 287, 291, 305, 317, 332, 335, 336, 338, 339, 340, 343, 364, 385, 388, 393, 396, 397, 399, 400, 401, 408, 413, 415, 416, 418, 421, 423, 434, 438, 439, 440, 459, 460, 465, 470, 483, 484], "first_cond": 483, "fisher": [352, 363, 484], "fit": [392, 475], "five": 472, "fix": [3, 8, 292, 309, 366, 463], "flag": [161, 307, 455, 460], "flat": [286, 290, 302, 342, 392, 436, 477], "flatit": [3, 8, 285], "flatnonzero": [0, 3, 8], "flatten": [0, 3, 8, 16, 17, 20, 29, 30, 31, 32, 57, 58, 66, 68, 69, 110, 112, 131, 183, 184, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 285, 302, 332, 333, 334, 335, 340, 341, 343, 388, 392, 396, 407, 417, 418, 434, 435, 436, 437, 438], "flexibl": [3, 8, 82, 292], "flip": [0, 3, 8, 114, 115, 354, 397, 477, 483], "fliplr": [0, 3, 8, 397], "flipud": [0, 3, 8, 397], "float": [14, 15, 16, 17, 19, 21, 43, 55, 68, 69, 79, 82, 84, 116, 124, 131, 135, 136, 140, 152, 162, 164, 168, 181, 183, 184, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 216, 293, 295, 300, 313, 327, 335, 339, 343, 346, 347, 349, 351, 352, 353, 354, 355, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 370, 371, 373, 374, 375, 376, 379, 380, 381, 382, 383, 384, 385, 386, 387, 389, 398, 400, 415, 421, 425, 437, 442, 451, 453, 455, 477], "float128": [3, 8, 477], "float16": [3, 8, 116], "float32": [3, 8, 68, 82, 116, 181, 266, 324, 481], "float64": [3, 4, 8, 18, 41, 67, 82, 84, 92, 116, 181, 183, 184, 197, 198, 200, 202, 266, 330, 335, 343, 374, 376, 437, 442, 464, 477], "float_": [3, 8], "float_pow": [0, 3, 8], "flood": 471, "floor": [0, 3, 8], "floor_divid": [0, 3, 8], "flop": 464, "flow": 471, "fluid": 471, "fmax": [3, 8, 196], "fmin": [3, 8], "fmod": [0, 3, 8], "fnc": 284, "focu": [471, 484], "follow": [15, 18, 34, 41, 54, 61, 77, 104, 111, 140, 164, 181, 185, 200, 202, 255, 335, 343, 455, 460, 465, 466, 468, 469, 471, 472, 474, 475, 476, 483, 484], "forc": [34, 82, 181, 266, 284, 455, 474], "force_thunk": [4, 444], "forcebuild": 1, "foremost": 484, "forg": [460, 474, 484], "fork": 459, "form": [37, 47, 56, 67, 75, 81, 82, 104, 129, 130, 133, 151, 152, 399, 440, 465, 475, 483, 484], "format": [317, 461, 472, 484], "format_float_posit": [3, 8], "format_float_scientif": [3, 8], "format_pars": [3, 8], "former": [341, 418], "formula": [463, 484], "forset": 308, "fortran": [34, 266, 284, 286, 316, 388, 393, 436, 460], "fortun": 459, "forum": 472, "forumula": 484, "forward": [94, 95, 96, 98, 99, 100, 101, 103, 104, 105, 106, 107, 108, 109, 126, 371], "found": [43, 305, 312, 400, 471, 484], "foundat": [459, 472], "four": [307, 462, 484], "fourier": [61, 94, 95, 96, 99, 100, 101, 104, 106, 107, 109, 444, 453], "frac": [346, 351, 463, 469], "frac12": 463, "fraction": 188, "frame": [459, 480], "framebuff": [462, 472, 484], "framework": [459, 473], "free": [459, 463, 471, 472, 475, 484], "freed": 471, "freedom": [349, 352, 362, 363, 381, 437], "frequenc": [42, 67, 97, 99, 100, 101, 104, 387, 483], "frequent": 473, "fresh": [1, 350], "freshli": [12, 13, 22, 23, 24, 25, 26, 27, 28, 44, 45, 46, 52, 53, 59, 60, 63, 64, 65, 70, 71, 78, 86, 87, 88, 90, 93, 116, 117, 118, 119, 120, 121, 122, 125, 127, 128, 134, 139, 143, 144, 145, 146, 147, 153, 154, 155, 156, 157, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 182, 186, 187, 188, 191, 326, 327, 329, 337, 338, 344, 345, 390, 391, 394, 395, 403, 404, 405, 406, 410, 411, 414, 419, 420, 432, 433], "frexp": [0, 3, 8], "fro": 164, "frobeniu": 164, "frohn": 475, "from": [1, 2, 14, 18, 19, 21, 29, 30, 37, 41, 48, 54, 57, 61, 68, 69, 70, 71, 75, 91, 99, 109, 111, 113, 114, 115, 116, 126, 138, 151, 165, 168, 169, 181, 185, 194, 195, 203, 208, 267, 268, 284, 287, 311, 315, 332, 338, 339, 342, 344, 345, 346, 347, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 372, 373, 374, 375, 376, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 393, 397, 401, 412, 415, 417, 418, 421, 423, 434, 435, 438, 441, 453, 459, 461, 463, 464, 465, 466, 468, 469, 470, 471, 473, 475, 477, 478, 483, 484], "frombuff": 3, "fromfil": [3, 317], "fromfunct": [3, 8], "fromit": 3, "frompyfunc": 3, "fromregex": [3, 8], "fromstr": 3, "front": [137, 455], "fulfil": [382, 455], "full": [0, 3, 8, 61, 74, 124, 166, 260, 261, 262, 264, 265, 268, 269, 270, 271, 272, 278, 279, 293, 294, 295, 298, 299, 300, 301, 302, 304, 307, 310, 311, 313, 314, 315, 320, 322, 323, 333, 428, 431, 459, 462, 471, 480, 484], "full_lik": [0, 3, 8], "full_matric": 167, "fulli": [184, 185, 198], "func": 463, "function": [2, 8, 18, 21, 36, 72, 81, 94, 95, 96, 97, 99, 100, 101, 102, 104, 106, 107, 109, 110, 116, 118, 126, 131, 133, 150, 151, 152, 163, 164, 180, 185, 200, 202, 260, 261, 262, 263, 264, 265, 268, 269, 270, 271, 272, 278, 279, 284, 290, 293, 294, 295, 298, 299, 300, 301, 302, 304, 307, 308, 310, 311, 313, 314, 315, 317, 318, 320, 321, 322, 323, 335, 341, 343, 346, 350, 351, 354, 364, 367, 372, 377, 399, 417, 418, 422, 438, 440, 444, 451, 453, 463, 464, 465, 469, 470, 471, 472, 477, 480, 481, 484], "function_nam": 480, "function_valu": 465, "fundament": 484, "funtion": 481, "furnish": 475, "further": [82, 200, 202, 309, 335, 343, 429, 459, 471], "furthermor": [49, 51, 185], "futur": 463, "fweight": 67, "g": [14, 19, 79, 81, 133, 138, 164, 181, 317, 324, 346, 347, 349, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 369, 372, 373, 374, 375, 376, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 399, 421, 438, 440, 459, 460, 470, 477, 481, 483, 484, 485], "gamma": [0, 3, 8, 346, 380], "gasnet": 484, "gather": 484, "gauss": 364, "gaussian": [357, 364, 370, 385], "gb": 484, "gcd": [0, 3, 8], "gemm": 468, "gener": [1, 3, 8, 21, 41, 42, 81, 99, 133, 168, 284, 291, 350, 362, 365, 370, 375, 377, 383, 399, 440, 453, 460, 465, 468, 470, 472, 477, 478, 480, 482, 484], "genfromtxt": [3, 8], "geometr": [0, 3, 8, 351], "geomspac": [3, 8], "get": [98, 104, 106, 110, 168, 273, 312, 381, 460, 462, 463, 464, 465, 468, 469, 470, 472, 483], "get_bit_gener": [3, 8], "get_includ": [3, 8], "get_printopt": [3, 8], "get_rank": 471, "get_siz": 471, "get_stat": [3, 8], "getbufs": [3, 8], "getdevicecount": 471, "geterr": [3, 8], "geterrcal": [3, 8], "getfield": [0, 8], "getter": 308, "git": 459, "github": [459, 471, 484], "give": [43, 82, 181, 185, 321, 342, 393, 402, 434, 459, 472], "given": [14, 15, 16, 17, 19, 20, 21, 31, 34, 35, 41, 48, 51, 54, 55, 56, 57, 62, 66, 67, 68, 69, 75, 76, 79, 81, 83, 84, 85, 94, 95, 96, 98, 99, 100, 101, 103, 104, 106, 107, 109, 110, 113, 123, 124, 126, 131, 133, 134, 138, 140, 164, 168, 180, 181, 184, 185, 194, 195, 198, 199, 200, 201, 202, 203, 208, 262, 263, 266, 269, 270, 284, 287, 293, 294, 295, 300, 301, 305, 313, 321, 323, 330, 331, 332, 335, 339, 340, 343, 346, 347, 349, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 372, 373, 374, 375, 376, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 392, 396, 397, 398, 399, 400, 409, 415, 417, 421, 422, 423, 424, 425, 434, 438, 440, 442, 443, 459, 471, 483, 484], "global": [350, 471], "gmail": 475, "gninja": 460, "gnx": 471, "gny": 471, "go": [418, 484], "goal": 484, "golub": 164, "good": [180, 317, 356, 473, 475], "gop": 464, "govern": [463, 464, 470, 484], "gpu": [1, 2, 3, 8, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 205, 206, 207, 211, 212, 213, 214, 215, 217, 218, 220, 221, 222, 223, 224, 225, 226, 227, 230, 231, 232, 233, 234, 235, 236, 237, 239, 240, 241, 242, 243, 244, 245, 247, 248, 249, 251, 252, 253, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 268, 269, 270, 271, 272, 273, 278, 279, 282, 283, 286, 287, 290, 291, 293, 294, 295, 298, 299, 300, 301, 302, 304, 305, 307, 310, 311, 313, 314, 315, 316, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 455, 462, 469, 471, 473, 483, 485], "grad_i": [466, 484], "grad_x": [466, 484], "gradient": [0, 3, 8, 466], "grai": [466, 468, 484], "grant": 475, "granular": [472, 478], "grasmair": 469, "grate": 459, "grayscal": [466, 484], "greater": [0, 3, 8, 21, 54, 80, 352, 365, 383, 387, 412], "greater_equ": [0, 3, 8], "greatest": [48, 125], "greedi": [82, 83], "green": [465, 468], "grep": 472, "grid": [137, 185, 465, 470, 471, 484], "group": [33, 460, 484], "gt": 465, "guarante": [340, 393], "guess": 469, "guid": [312, 473], "guidelin": 482, "gumbel": [0, 3, 8], "gzipfil": 317, "h": [158, 164, 200, 202, 335, 343, 465, 471, 483, 484], "h5py": 483, "ha": [6, 29, 30, 31, 32, 57, 67, 68, 69, 75, 77, 98, 103, 126, 136, 141, 142, 148, 149, 192, 193, 194, 195, 201, 203, 274, 284, 321, 333, 339, 342, 346, 357, 365, 372, 384, 389, 392, 401, 413, 415, 417, 422, 423, 436, 455, 459, 463, 464, 468, 469, 471, 472, 475, 484], "had": [341, 418, 485], "hadamard": 83, "half": [3, 8, 21, 97, 100, 101, 168, 369, 371, 373, 374, 376, 383], "halo": 471, "ham": [0, 3, 8], "han": [0, 3, 8], "hand": 465, "handl": [434, 438, 453, 455, 471, 477, 480, 484], "happen": [41, 459, 477], "har": 484, "hardwar": [284, 307, 482, 485], "have": [12, 13, 14, 19, 22, 23, 24, 25, 26, 27, 28, 33, 34, 35, 39, 40, 41, 44, 45, 46, 47, 52, 53, 54, 56, 58, 59, 60, 63, 64, 65, 67, 68, 69, 70, 71, 78, 79, 81, 82, 86, 87, 88, 90, 93, 100, 101, 109, 116, 117, 118, 119, 120, 121, 122, 125, 127, 128, 133, 134, 138, 139, 143, 144, 145, 146, 147, 153, 154, 155, 156, 157, 163, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 191, 194, 195, 197, 198, 200, 201, 202, 203, 312, 324, 326, 327, 329, 335, 336, 337, 338, 339, 341, 343, 344, 345, 390, 391, 394, 395, 398, 399, 403, 404, 405, 406, 410, 411, 413, 414, 415, 419, 420, 421, 422, 432, 433, 437, 438, 440, 451, 459, 460, 462, 463, 465, 466, 468, 469, 473, 480, 483, 484], "hazen": [200, 202, 335, 343], "header": [169, 460], "heapsort": [32, 407], "heat": 484, "heavisid": [3, 8], "height": [81, 133, 399, 440, 471, 484], "help": [459, 462, 466, 472, 481, 484], "helper": [453, 464, 470], "henc": 126, "here": [8, 104, 386, 459, 460, 465, 471, 478, 481, 483, 484], "herebi": 475, "herein": 475, "hermitian": [98, 103, 104, 158, 167, 453, 464], "hfft": [0, 3, 8], "high": [369, 372, 383, 460, 471, 484], "higher": [38, 76, 138, 200, 202, 284, 335, 343, 484], "highest": [369, 372], "highli": 483, "highlight": [471, 483, 484], "hipr2": 466, "hist": 131, "histogram": [0, 3, 8, 453], "histogram2d": [3, 8], "histogram_bin_edg": [3, 8], "histogramdd": [3, 8], "hold": [34, 55, 57, 68, 69, 164, 184, 194, 195, 198, 201, 203, 284, 423, 471], "holder": 475, "home": 463, "homepag": 466, "hope": 459, "hopkin": 164, "horizont": [132, 133, 397], "host": 180, "hous": 466, "how": [54, 307, 312, 321, 340, 417, 460, 461, 464, 465, 469, 478, 484], "howev": [14, 16, 17, 19, 68, 161, 183, 196, 199, 201, 284, 291, 339, 415, 417, 459, 475, 484], "howto": 482, "hpc": [471, 482], "hsplit": [0, 3, 8, 133], "hstack": [0, 3, 8, 56, 483], "htm": 466, "html": [466, 472, 475, 485], "http": [351, 459, 463, 464, 466, 470, 472, 475, 477, 484, 485], "hull": 463, "hundr": [471, 483], "hyndman": [200, 202, 335, 343], "hyperbol": [23, 25, 28, 65, 381, 406, 420, 453], "hypergeometr": [0, 3, 8], "hypot": [0, 3, 8], "hypotenus": 134, "hypothesi": 349, "i": [2, 8, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 41, 42, 43, 44, 45, 46, 47, 48, 49, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 103, 104, 105, 106, 107, 108, 109, 110, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 168, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 208, 212, 213, 255, 266, 267, 284, 286, 287, 290, 291, 292, 305, 307, 309, 312, 316, 317, 318, 321, 324, 325, 326, 327, 329, 330, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 403, 404, 405, 406, 407, 409, 410, 411, 412, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 430, 432, 433, 434, 435, 437, 438, 439, 440, 441, 442, 455, 460, 462, 463, 464, 465, 466, 468, 469, 470, 471, 473, 474, 475, 476, 477, 478, 480, 481, 484, 485], "i0": [3, 8, 137], "i1": 137, "i16_arr": 76, "iN": 137, "idea": 459, "ident": [0, 3, 8, 102, 110, 162, 166, 192, 193, 196, 199, 357, 379, 464], "identifi": 466, "identit": 464, "idiomat": 472, "idx": 468, "ieee": 455, "ifft": [0, 3, 8, 100, 101], "ifft2": [0, 3, 8], "ifftn": [0, 3, 8, 99, 106], "ifftshift": [0, 3, 8], "ignor": [49, 51, 131, 192, 193, 196, 197, 198, 199, 200, 202, 477], "ihfft": [0, 3, 8], "ii": [67, 365], "iinfo": [3, 8], "ij": [67, 185], "ik": 137, "illeg": 48, "illustr": [185, 460, 483, 484], "imag": [0, 3, 8, 466, 470, 484], "image_np": 484, "imagin": 312, "imaginari": [18, 35, 136, 141, 142, 149, 159, 160, 289, 398, 408], "imbal": 484, "immedi": 464, "impact": 483, "imper": 484, "implement": [8, 14, 16, 17, 19, 29, 30, 31, 61, 68, 69, 75, 79, 113, 114, 115, 138, 158, 161, 181, 183, 194, 195, 196, 199, 201, 334, 339, 415, 421, 438, 460, 463, 464, 471, 472, 475, 477, 480, 483, 484], "impli": [67, 333, 435, 463, 464, 470, 475], "implic": 469, "implicit": [82, 161], "implment": 480, "import": [67, 181, 463, 464, 465, 466, 468, 469, 470, 471, 478, 481, 483, 484, 485], "importantli": 77, "improp": 484, "improv": 484, "imshow": [466, 484], "in1d": [3, 8], "inappropri": 349, "incident": 475, "includ": [21, 37, 77, 82, 131, 168, 183, 197, 201, 203, 296, 339, 383, 386, 415, 437, 459, 460, 462, 465, 471, 475, 477, 480, 483], "inclus": [200, 202, 335, 343, 369, 372], "incorpor": 475, "incorrect": 471, "increas": [77, 89, 99, 104, 131, 291, 465, 472, 484], "incur": 483, "ind": [77, 427, 428, 430, 431], "indefinit": 459, "independ": [317, 349, 357, 364, 460, 484], "index": [6, 29, 30, 31, 32, 43, 54, 57, 75, 77, 92, 95, 100, 137, 151, 181, 185, 192, 193, 268, 290, 291, 305, 334, 340, 341, 388, 393, 400, 407, 409, 413, 417, 418, 434, 436, 444, 451, 453, 465, 468, 473, 482], "index_arrai": [29, 30, 32, 33, 192, 193], "indexerror": 77, "indic": [0, 3, 8, 29, 30, 31, 32, 33, 36, 54, 61, 67, 73, 74, 77, 80, 82, 83, 91, 94, 95, 96, 98, 99, 100, 101, 103, 104, 105, 106, 107, 108, 109, 110, 112, 132, 180, 192, 193, 262, 263, 264, 265, 298, 301, 305, 315, 321, 328, 340, 341, 400, 403, 409, 417, 418, 427, 428, 430, 431, 434, 436, 439, 459, 465, 468, 469, 472, 475, 477, 483, 484], "indices_or_sect": [36, 409], "indirect": [31, 475], "individu": [354, 480], "inexact": [3, 8, 116, 201], "inf": [15, 68, 69, 164, 192, 193, 194, 195, 466, 477], "infer": [21, 37, 168, 346, 393], "infin": [143, 144, 146, 147, 385], "infinit": 164, "influenc": 364, "info": [3, 8], "inform": [82, 284, 290, 307, 317, 459, 464, 465, 466, 469, 472, 474, 480, 484, 485], "infti": 463, "inher": 484, "inherit": 284, "init": [377, 468, 478, 484], "initi": [1, 16, 17, 84, 196, 199, 201, 203, 260, 261, 293, 295, 300, 313, 339, 350, 415, 455, 465, 468, 469, 471, 478], "inner": [0, 3, 8, 79, 83, 421], "innermost": 48, "input": [4, 6, 12, 13, 14, 15, 16, 17, 19, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 37, 38, 39, 40, 41, 43, 44, 45, 46, 48, 50, 52, 53, 55, 58, 59, 60, 61, 62, 63, 64, 65, 68, 69, 70, 71, 76, 77, 78, 82, 83, 86, 87, 88, 89, 90, 91, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 125, 126, 127, 128, 131, 134, 136, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 153, 154, 155, 156, 157, 158, 161, 164, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 266, 286, 287, 324, 325, 326, 327, 328, 329, 332, 333, 334, 335, 336, 337, 338, 339, 341, 342, 343, 344, 345, 347, 388, 389, 390, 391, 392, 394, 395, 396, 398, 400, 402, 403, 404, 405, 406, 407, 408, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 426, 432, 433, 434, 435, 437, 438, 444, 453, 463, 466, 472, 481, 483, 484], "insert": [3, 8, 29, 30, 48, 54, 75, 89, 168, 192, 193, 291, 305, 333, 341, 400, 401, 453, 484], "insid": [291, 483], "instal": [459, 460, 462, 473, 482], "instanc": [48, 81, 98, 133, 309, 350, 399, 440, 460, 474, 484], "instanti": [2, 350, 460], "instead": [14, 16, 17, 19, 41, 43, 48, 131, 137, 181, 183, 184, 196, 197, 198, 200, 202, 203, 266, 290, 335, 339, 343, 372, 415, 437, 463, 464, 465, 466, 470, 471, 472, 481, 482, 484], "instruct": [459, 460, 474, 484], "int": [1, 4, 6, 14, 16, 17, 19, 20, 21, 29, 30, 31, 32, 34, 36, 41, 42, 43, 47, 50, 51, 54, 55, 57, 58, 66, 67, 68, 69, 72, 73, 75, 76, 77, 80, 83, 84, 85, 89, 92, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 113, 123, 124, 126, 129, 130, 131, 132, 135, 137, 152, 162, 164, 168, 169, 180, 183, 184, 189, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 228, 229, 255, 287, 288, 291, 292, 293, 295, 296, 297, 300, 305, 306, 308, 309, 312, 313, 321, 325, 330, 331, 333, 334, 335, 339, 341, 343, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 392, 393, 396, 397, 398, 400, 402, 407, 409, 412, 413, 415, 416, 417, 418, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 434, 435, 436, 437, 439, 442, 443, 451, 455, 465, 466, 468, 484], "int16": [3, 8, 76, 324], "int32": [3, 8, 201, 312], "int32_t": 460, "int64": [3, 8, 201], "int64_t": 460, "int8": [3, 8], "int_": [3, 8, 309, 372, 422, 463], "int_0": 346, "int_lik": 370, "int_typ": 290, "intc": [3, 8], "integ": [2, 3, 8, 21, 36, 51, 54, 67, 68, 69, 76, 116, 118, 151, 155, 162, 164, 183, 184, 194, 195, 197, 198, 200, 201, 202, 203, 305, 309, 312, 333, 335, 339, 340, 343, 347, 354, 369, 372, 393, 394, 395, 397, 400, 409, 415, 423, 434, 436, 437], "integer_lik": 421, "integr": [41, 131, 188, 462, 471, 484], "intel": 484, "intellectu": 459, "intend": [185, 317, 469], "intens": [161, 466, 484], "intensity_max": [466, 484], "intensity_min": [466, 484], "intent": 116, "inter": 471, "interact": [274, 484], "interchang": [314, 416], "interest": [463, 464, 484], "interfac": [34, 284, 307, 484], "interior": 126, "intermedi": [82, 83, 183, 197, 200, 202, 335, 343, 483], "intern": 68, "interoper": 472, "interp": [3, 8], "interpolated_inverted_cdf": [200, 202, 335, 343], "interpret": [37, 51, 62, 151, 180, 290, 307, 340, 469], "interrupt": 475, "intersect1d": [3, 8], "interv": [21, 55, 77, 168, 347, 361, 366, 369, 371, 372, 373, 374, 376, 382, 383, 384], "intp": [3, 8, 201], "introduc": [396, 468, 484], "introduct": 482, "introselect": [31, 264, 299, 334], "inund": 471, "inv": [3, 8, 469], "invas": 483, "invers": [22, 23, 24, 25, 26, 28, 89, 99, 100, 101, 102, 103, 104, 105, 106, 139, 162, 177, 351, 385, 387, 469], "invert": [0, 3, 8, 177, 453], "inverted_cdf": [200, 202, 335, 343], "invest": 484, "invoc": [484, 485], "invok": [460, 469, 481], "involv": [459, 471], "irecv": 471, "irfft": [0, 3, 8, 106], "irfft2": [0, 3, 8], "irfftn": [0, 3, 8, 104, 105], "is_busdai": [3, 8], "isclos": [0, 3, 8], "iscomplex": [0, 3, 8], "iscomplexobj": [0, 3, 8], "isend": 471, "isfinit": [0, 3, 8, 196, 203], "isfortran": [3, 8, 255], "isin": [3, 8], "isinf": [0, 3, 8], "isnan": [0, 3, 8, 196, 199, 201, 203], "isnat": [3, 8], "isneginf": [0, 3, 8], "isol": 460, "isposinf": [0, 3, 8], "isreal": [0, 3, 8], "isrealobj": [0, 3, 8], "isscalar": [0, 3, 8], "issctyp": [3, 8], "issu": [99, 100, 101, 455, 459, 472, 484], "issubclass_": [3, 8], "issubdtyp": [3, 8], "issubsctyp": [3, 8], "item": [0, 8, 33, 291, 317, 318, 356, 387, 434, 468], "items": 284, "itemset": [0, 8], "iter": [6, 83, 200, 202, 273, 285, 286, 291, 302, 335, 341, 343, 418, 468, 469, 470, 471, 478, 484], "ith": 137, "its": [12, 13, 14, 19, 22, 23, 24, 25, 26, 27, 28, 41, 43, 44, 45, 46, 52, 53, 54, 59, 60, 63, 64, 65, 70, 71, 72, 78, 86, 87, 88, 90, 93, 116, 117, 118, 119, 120, 121, 122, 125, 127, 128, 131, 134, 135, 138, 139, 143, 144, 145, 153, 154, 155, 156, 157, 159, 160, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 181, 182, 186, 187, 188, 191, 284, 307, 319, 321, 326, 327, 329, 332, 337, 338, 344, 345, 364, 372, 387, 390, 391, 393, 394, 395, 403, 404, 405, 406, 410, 411, 414, 419, 420, 421, 423, 424, 425, 432, 433, 438, 459, 464, 468, 471, 475, 483, 484], "itself": [54, 359, 412, 460], "ivan": 475, "ix_": [0, 3, 8], "j": [79, 164, 185, 200, 202, 321, 332, 335, 341, 343, 418, 425, 465, 469, 471, 483, 484], "j0": 54, "j1": 54, "jacobi": 467, "jacobi_stencil": 484, "jacobian": 469, "jcp": 465, "jm": 54, "john": [164, 463], "join": [58, 413, 453], "jr": [351, 364], "jsrun": 476, "june": 475, "just": [56, 386, 459, 463, 464, 470], "k": [12, 13, 22, 23, 24, 25, 26, 27, 28, 34, 44, 45, 46, 52, 53, 59, 60, 63, 64, 65, 70, 71, 72, 78, 79, 86, 87, 88, 90, 92, 93, 116, 117, 118, 119, 120, 121, 122, 125, 127, 128, 134, 137, 139, 143, 144, 145, 153, 154, 155, 156, 157, 165, 166, 167, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 186, 187, 188, 191, 212, 266, 286, 326, 327, 329, 337, 338, 344, 345, 346, 347, 349, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 369, 372, 373, 374, 375, 376, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 390, 391, 394, 395, 397, 403, 404, 405, 406, 410, 411, 414, 419, 420, 425, 426, 427, 428, 429, 430, 431, 432, 433, 455, 463, 465, 467, 469, 484], "kaiser": [0, 3, 8, 47], "kappa": 384, "ke": 484, "keep": [455, 463, 468], "keepdim": [14, 16, 17, 19, 29, 30, 41, 164, 183, 184, 192, 193, 196, 197, 198, 199, 200, 201, 202, 203, 260, 261, 293, 294, 295, 300, 313, 323, 335, 339, 343, 415, 437], "kei": [211, 219, 254, 472, 484], "kern": 475, "kernel": [466, 484], "kernel_i": [466, 484], "kernel_x": [466, 484], "keyword": [2, 12, 13, 22, 23, 24, 25, 26, 27, 28, 44, 45, 46, 52, 53, 55, 59, 60, 63, 64, 65, 67, 70, 71, 78, 86, 87, 88, 90, 93, 116, 117, 118, 119, 120, 121, 122, 125, 127, 128, 134, 139, 143, 144, 145, 153, 154, 155, 156, 157, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 182, 185, 186, 187, 188, 191, 326, 327, 329, 337, 338, 344, 345, 390, 391, 394, 395, 403, 404, 405, 406, 410, 411, 414, 419, 420, 432, 433, 434], "kill": 158, "kind": [31, 32, 58, 82, 181, 264, 265, 266, 299, 310, 334, 407, 453, 463, 464, 470, 472, 475], "know": [459, 469, 472, 483], "knowledg": [459, 471], "known": [312, 352, 365, 367, 378, 384, 387, 484], "kron": [3, 8], "kth": [31, 264, 299, 334], "kwarg": [12, 13, 22, 23, 24, 25, 26, 27, 28, 44, 45, 46, 52, 53, 55, 59, 60, 63, 64, 65, 70, 71, 78, 86, 87, 88, 90, 93, 116, 117, 118, 119, 120, 121, 122, 125, 127, 128, 134, 139, 143, 144, 145, 153, 154, 155, 156, 157, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 182, 186, 187, 188, 191, 246, 326, 327, 329, 337, 338, 344, 345, 390, 391, 394, 395, 403, 404, 405, 406, 410, 411, 414, 419, 420, 432, 433, 434, 463], "l": [36, 158, 464, 475, 484], "l2": [465, 469], "l2_norm": 469, "label": [82, 460, 463, 465, 468], "label_color": 468, "label_color_map": 468, "label_valu": 468, "lam": 366, "lambda": [351, 357, 386], "languag": [463, 464, 470], "laplac": [0, 3, 8, 364], "laptop": 484, "larg": [61, 67, 169, 364, 366, 381, 417, 471, 478, 483, 484], "larger": [43, 55, 76, 94, 95, 96, 99, 100, 101, 103, 106, 107, 109, 169, 382, 423, 435, 478, 484], "larger_imag": 484, "largest": [43, 83, 118, 164, 369, 372], "last": [14, 19, 21, 31, 32, 41, 42, 48, 76, 79, 94, 95, 96, 98, 99, 100, 101, 103, 104, 105, 106, 107, 109, 113, 126, 138, 163, 168, 181, 203, 287, 291, 305, 334, 339, 388, 393, 396, 400, 407, 408, 413, 415, 417, 421], "latenc": 484, "later": [364, 484], "latest": [472, 474, 484, 485], "latter": [341, 418, 483], "launch": [460, 478, 483], "launcher": [472, 476, 484], "law": [387, 463, 464, 470], "layout": [34, 266, 284, 316, 388, 393], "lcm": [0, 3, 8], "ldexp": [0, 3, 8], "lead": [48, 185, 194, 195, 472, 484], "leakag": 47, "learn": 472, "least": [38, 39, 40, 41, 43, 61, 67, 74, 81, 83, 110, 114, 142, 159, 160, 165, 167, 291, 356, 399, 440, 460, 483, 484], "left": [14, 16, 17, 19, 29, 30, 41, 77, 114, 155, 164, 183, 184, 192, 193, 196, 197, 198, 199, 200, 201, 202, 203, 305, 335, 339, 343, 382, 398, 400, 415, 437, 465, 471], "left_shift": [0, 3, 8], "leg": 134, "legaci": 377, "legal": [459, 475], "legales": 461, "legat": [340, 455, 460, 462, 463, 464, 470, 473, 474, 477, 480, 481, 484, 485], "legate_auto_config": 484, "legate_config": [472, 481], "legate_limit_stdout": 484, "legate_root": 460, "legate_test": 472, "legend": [463, 465], "legion": [482, 484], "legion_default_arg": 476, "lele": 465, "len": [57, 77, 96, 97, 101, 104, 106, 109, 137, 185, 238, 468], "length": [12, 13, 16, 17, 21, 22, 23, 24, 25, 26, 27, 28, 36, 41, 43, 44, 45, 46, 52, 53, 57, 59, 60, 63, 64, 65, 68, 69, 70, 71, 76, 78, 86, 87, 88, 90, 93, 94, 95, 96, 98, 99, 100, 101, 102, 103, 104, 106, 107, 109, 116, 117, 118, 119, 120, 121, 122, 125, 126, 127, 128, 131, 133, 134, 137, 139, 143, 144, 145, 153, 154, 155, 156, 157, 159, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 182, 184, 185, 186, 187, 188, 191, 194, 195, 196, 198, 199, 305, 311, 326, 327, 329, 337, 338, 341, 344, 345, 348, 390, 391, 393, 394, 395, 399, 400, 401, 402, 403, 404, 405, 406, 410, 411, 412, 414, 418, 419, 420, 421, 422, 432, 433, 440, 460, 465], "less": [0, 3, 8, 42, 47, 57, 67, 68, 69, 75, 110, 129, 130, 152, 157, 161, 194, 195, 201, 203, 339, 356, 383, 404, 415, 423, 469, 472, 483], "less_equ": [3, 8], "let": [459, 463, 464, 469, 470, 484], "letter": 307, "level": [48, 67, 318, 451, 460, 477, 483, 484], "leverag": 484, "lexsort": [3, 8], "lgpatch": 481, "lh": 465, "liabil": 475, "liabl": 475, "liber": [79, 82, 138, 181, 421, 438], "librari": [274, 451, 455, 460, 472, 473, 475, 484], "licens": [459, 463, 464, 470, 475], "lifespan": 471, "lightweight": 459, "like": [39, 40, 48, 56, 82, 106, 110, 165, 167, 168, 169, 180, 181, 185, 266, 284, 309, 317, 341, 383, 385, 388, 393, 418, 425, 453, 455, 459, 464, 465, 469, 470, 471, 476, 483, 484, 485], "limit": [55, 94, 95, 96, 98, 99, 100, 101, 103, 104, 105, 106, 107, 108, 109, 159, 160, 269, 364, 366, 382, 383, 463, 464, 470, 475, 484], "linalg": [0, 3, 8, 444, 453, 464, 465, 468, 469, 481, 483], "linalgerror": [8, 159, 160, 165, 166, 167], "line": [459, 462, 471, 472, 480, 484], "linear": [61, 82, 166, 200, 202, 335, 343, 444, 453, 460, 465, 469, 484], "linearli": 483, "link": [477, 484], "linspac": [0, 3, 8, 21, 463, 465, 483], "linux": [459, 472, 474, 482], "list": [8, 21, 31, 32, 36, 37, 38, 39, 40, 48, 49, 54, 80, 82, 83, 89, 97, 110, 111, 126, 132, 255, 318, 334, 401, 407, 409, 421, 424, 439, 460, 462, 468, 475], "liter": [4, 82], "literal_ev": 169, "littl": [79, 138, 181, 333, 421, 435, 438, 464], "ll": [468, 476], "ln": [386, 484], "load": [0, 3, 8, 281, 282, 484], "loadtxt": [3, 8], "loan": 164, "loc": [355, 357, 358, 364, 465], "local": [291, 471, 472, 484], "local_grid": 471, "local_ni": 471, "local_nx": 471, "local_rank": 471, "locat": [12, 13, 22, 23, 24, 25, 26, 27, 28, 44, 45, 46, 49, 51, 52, 53, 59, 60, 63, 64, 65, 70, 71, 78, 86, 87, 88, 90, 93, 110, 116, 117, 118, 119, 120, 121, 122, 125, 127, 128, 134, 139, 143, 144, 145, 146, 147, 153, 154, 155, 156, 157, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 185, 186, 187, 188, 191, 291, 305, 326, 327, 329, 332, 337, 338, 344, 345, 355, 357, 358, 365, 390, 391, 394, 395, 400, 403, 404, 405, 406, 410, 411, 414, 419, 420, 432, 433, 466, 468, 480, 481, 484], "lock": 284, "log": [0, 3, 8, 359, 360, 463], "log10": [0, 3, 8], "log1p": [0, 3, 8], "log2": [0, 3, 8], "logaddexp": [0, 3, 8], "logaddexp2": [0, 3, 8], "logarithm": [170, 171, 172, 173, 174, 175, 360, 453], "logic": [14, 19, 333, 444, 453, 471], "logical_and": [0, 3, 8, 483], "logical_not": [3, 8], "logical_or": [0, 3, 8], "logical_xor": [0, 3, 8], "logist": [0, 3, 8], "lognorm": [0, 3, 8], "logseri": [0, 3, 8], "logspac": [3, 8], "lomax": 365, "long": [372, 484], "longcomplex": [3, 8], "longdoubl": [3, 8, 290], "longer": [43, 61, 98, 104, 483], "longfloat": [3, 8], "longlong": [3, 8], "look": [291, 418, 459, 470, 472], "lookfor": [3, 8], "loop": [291, 469, 471], "lorena": 471, "lorentz": 378, "lose": [290, 318], "loss": 475, "lost": 317, "low": [100, 101, 369, 372, 383, 451], "lower": [55, 92, 131, 158, 200, 202, 335, 343, 382, 383, 425, 426, 427, 428, 464, 471], "lowercas": 284, "lowest": [41, 83, 153, 365, 369, 372], "lstsq": [3, 8], "lt": 465, "m": [40, 42, 47, 61, 67, 79, 81, 92, 95, 96, 98, 100, 101, 104, 106, 109, 113, 114, 115, 129, 130, 152, 158, 159, 160, 161, 162, 165, 166, 167, 181, 183, 185, 197, 287, 332, 341, 346, 347, 349, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 369, 372, 373, 374, 375, 376, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 397, 401, 417, 418, 425, 426, 427, 429, 430, 437, 460, 463, 464, 470, 474, 484], "machin": [317, 460, 472, 484, 485], "maco": 472, "made": [34, 38, 266, 284, 307, 388], "magenta": 468, "magnitud": [18, 468, 484], "mai": [6, 14, 19, 21, 29, 30, 49, 51, 54, 55, 58, 68, 69, 82, 126, 164, 169, 181, 185, 194, 195, 266, 284, 309, 318, 341, 347, 383, 384, 455, 459, 462, 463, 464, 465, 469, 470, 472, 475, 477, 480, 481, 484], "main": [72, 73, 74, 75, 92, 110, 135, 423, 425, 426, 465, 476, 484, 485], "maintain": [75, 459, 471], "mainten": 471, "major": [34, 286, 388, 436, 472], "make": [48, 49, 56, 81, 133, 185, 274, 284, 356, 399, 440, 453, 459, 460, 464, 468, 471, 472, 477, 478, 481, 483, 484], "make_grid": 470, "manag": [350, 455, 471, 484], "mani": [82, 312, 351, 435, 460, 484], "manifest": 483, "manipul": [444, 453], "manner": [477, 484], "mantissa": 122, "manual": [422, 459, 471, 474, 478, 484], "map": [54, 468, 471], "mapper": 472, "margin": 77, "mark": 459, "marker": 468, "marku": 469, "mask": [151, 180, 336, 342, 468], "mask_func": 180, "mask_funct": 180, "mask_indic": [0, 3, 8], "mass": [131, 354], "master": 484, "mat": [3, 8], "match": [37, 48, 55, 58, 76, 126, 181, 341, 413, 418, 437, 455, 465], "materi": [180, 284, 466, 468, 475], "math": [290, 455, 475], "mathbf": [465, 469, 484], "mathemat": [164, 444, 453, 484], "mathtt": 463, "matmul": [0, 3, 8, 455, 484], "matmul_cache_s": 444, "matplotlib": [463, 465, 466, 468, 470, 484], "matric": [48, 110, 159, 160, 161, 163, 164, 181, 185, 388, 453, 464, 465, 484], "matrix": [7, 8, 67, 75, 79, 158, 159, 160, 161, 162, 164, 165, 166, 181, 185, 321, 324, 388, 429, 438, 453, 464, 465, 469], "matrix_pow": [0, 8], "matrix_rank": [3, 8], "matter": 472, "matthew": 475, "max": [0, 131, 164, 199, 269, 422, 466, 468, 483, 484], "max_header_s": 169, "maxim": 484, "maximum": [0, 3, 8, 16, 17, 29, 42, 47, 55, 83, 119, 129, 130, 152, 169, 192, 196, 199, 262, 293, 468, 477, 483], "maximum_sctyp": [3, 8], "may_share_memori": [3, 8], "mayb": 459, "mb": [462, 484], "md": 164, "me": 459, "mean": [0, 3, 8, 48, 66, 82, 95, 96, 100, 101, 106, 107, 109, 123, 126, 164, 181, 197, 266, 286, 316, 321, 349, 357, 358, 359, 363, 364, 370, 385, 388, 393, 397, 417, 435, 467, 469, 484], "measur": [351, 437, 472, 478, 479, 481, 482, 484], "mechan": 459, "median": [0, 3, 8, 198, 358], "median_unbias": [200, 202, 335, 343], "meet": [34, 459, 483, 484], "memavail": 472, "meminfo": 472, "memmap": [3, 8], "memo": 213, "memori": [34, 49, 51, 161, 180, 184, 185, 198, 200, 202, 266, 267, 277, 284, 286, 296, 307, 312, 316, 335, 343, 388, 393, 462, 465, 471, 484], "memoryview": 277, "mention": [468, 472, 483, 484], "merchant": 475, "merg": [54, 459, 475, 478], "merged_arrai": 54, "mergesort": [32, 407], "merton": 484, "mesh": [151, 471, 478], "meshgrid": [0, 3, 8, 151], "messag": [472, 478], "met": [475, 483], "method": [1, 2, 4, 7, 14, 16, 17, 19, 34, 61, 161, 169, 183, 196, 199, 200, 201, 202, 290, 291, 308, 309, 317, 325, 335, 339, 343, 415, 463, 467, 477, 484], "mgrid": 151, "microsecond": 483, "middl": [100, 101], "midpoint": [200, 202, 335, 343], "might": [32, 68, 82, 180, 407, 469, 472, 478, 483, 484], "million": [463, 471], "millisecond": [478, 483], "mimic": [333, 435, 471], "mimick": 471, "min": [0, 131, 164, 165, 167, 199, 269], "min_cpu_chunk": 444, "min_gpu_chunk": 444, "min_omp_chunk": 444, "min_scalar_typ": [3, 8], "miniforg": 484, "miniforge3": 484, "minim": [47, 484], "minimum": [0, 3, 8, 16, 17, 30, 34, 43, 55, 116, 120, 193, 196, 199, 263, 295, 484], "minlength": [43, 468], "mintypecod": [3, 8], "mirror": 471, "miscellan": 453, "mise": 384, "mismatch": [48, 54, 57], "mitig": 483, "mkdir": 484, "mod": [3, 8, 54], "mode": [54, 61, 82, 94, 95, 96, 98, 99, 100, 101, 103, 104, 105, 106, 107, 108, 109, 165, 169, 268, 301, 315, 340, 355, 375, 378, 382, 384, 417, 455, 466, 484], "model": [354, 460, 463, 464, 470, 471, 484], "modf": [0, 3, 8], "modif": [459, 471, 475], "modifi": [110, 184, 198, 200, 202, 335, 343, 459, 465, 475], "modul": [274, 484], "modular": 54, "moivr": 364, "monoton": [77, 131], "more": [38, 39, 40, 49, 51, 55, 68, 69, 72, 75, 77, 79, 81, 82, 94, 99, 104, 105, 107, 108, 133, 138, 161, 163, 181, 185, 194, 195, 201, 312, 385, 386, 397, 399, 413, 421, 423, 434, 438, 440, 462, 464, 465, 466, 468, 471, 474, 477, 483, 484, 485], "moshier": 475, "most": [34, 76, 81, 82, 83, 99, 133, 356, 399, 418, 440, 459, 471, 477, 484], "mostli": 472, "motion": 385, "move": [189, 312, 484], "moveaxi": [0, 3, 8], "mpi": [471, 484], "mpi4pi": [471, 478], "mpi_fin": 471, "mpirun": 476, "msg00295": 475, "msort": [0, 3, 8], "mt19937": [3, 8], "mu": [357, 365, 384], "much": [42, 459, 483], "multi": [3, 82, 94, 95, 96, 98, 99, 100, 101, 103, 104, 105, 106, 107, 108, 109, 159, 160, 161, 166, 471, 472, 473, 474, 482, 483], "multi_dot": [0, 8], "multidimension": 438, "multinomi": [3, 8], "multipl": [1, 2, 7, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 112, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 166, 168, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 205, 206, 207, 211, 212, 213, 214, 215, 217, 218, 220, 221, 222, 223, 224, 225, 226, 227, 230, 231, 232, 233, 234, 235, 236, 237, 239, 240, 241, 242, 243, 244, 245, 247, 248, 249, 251, 252, 253, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 268, 269, 270, 271, 272, 273, 278, 279, 282, 283, 286, 290, 291, 293, 294, 295, 298, 299, 300, 301, 302, 304, 305, 307, 310, 311, 313, 314, 315, 316, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 462, 469, 471, 472, 474, 483, 485], "multipli": [0, 3, 8, 68, 79, 181, 194, 339, 365, 373, 374, 376, 483], "multivariate_norm": [3, 8], "must": [1, 12, 13, 14, 16, 17, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 41, 44, 45, 46, 48, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 63, 64, 65, 68, 69, 70, 71, 76, 77, 78, 79, 81, 86, 87, 88, 90, 93, 98, 104, 106, 114, 116, 117, 118, 119, 120, 121, 122, 125, 126, 127, 128, 131, 133, 134, 138, 139, 143, 144, 145, 146, 147, 153, 154, 155, 156, 157, 158, 163, 164, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 181, 182, 183, 184, 186, 187, 188, 189, 191, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 255, 269, 284, 291, 321, 326, 327, 329, 335, 336, 337, 338, 339, 341, 343, 344, 345, 349, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 362, 363, 364, 365, 366, 367, 368, 370, 375, 380, 381, 382, 385, 386, 387, 390, 391, 394, 395, 396, 397, 398, 399, 400, 403, 404, 405, 406, 410, 411, 413, 414, 415, 418, 419, 420, 421, 423, 432, 433, 435, 437, 438, 440, 460, 471, 475, 476, 484], "my": 459, "myenv": [474, 484], "myron": 484, "n": [7, 33, 36, 40, 43, 54, 61, 67, 73, 74, 76, 77, 79, 81, 92, 94, 95, 96, 98, 99, 100, 101, 103, 104, 106, 107, 109, 110, 126, 135, 137, 151, 162, 164, 165, 167, 180, 181, 185, 305, 312, 321, 332, 336, 342, 346, 347, 349, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 369, 372, 373, 374, 375, 376, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 399, 400, 409, 421, 425, 426, 427, 430, 431, 437, 440, 444, 463, 464, 465, 468, 470, 474, 476, 484], "n1": 185, "n2": 185, "n3": 185, "n_centroid": 468, "n_dim": 468, "n_element": 468, "n_gpu": 471, "n_iter": 468, "n_iter_check": 468, "n_point": 465, "n_stencil": 465, "n_warmup_it": 478, "naiv": [483, 484], "name": [281, 284, 307, 319, 385, 459, 475, 481, 484], "nan": [15, 29, 30, 35, 140, 145, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 477], "nan_to_num": [3, 8], "nanargmax": [0, 3, 8, 193, 455], "nanargmin": [0, 3, 8, 192, 455], "nancumprod": [0, 3, 8], "nancumsum": [0, 3, 8], "nanmax": [0, 3, 8, 199, 455], "nanmean": [0, 3, 8], "nanmedian": [0, 3, 8], "nanmin": [0, 3, 8, 196, 455], "nanpercentil": [0, 3, 8], "nanprod": [0, 3, 8], "nanquantil": [0, 3, 8], "nanstd": [3, 8], "nansum": [0, 3, 8], "nanvar": [3, 8], "nation": 484, "nativ": [455, 477], "natur": [170, 172, 364, 484], "navier": 471, "nbad": 356, "nd": [6, 48, 290], "ndarrai": [0, 7, 8, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 349, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 372, 373, 374, 375, 376, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 449, 455, 466, 468, 469, 477, 480, 484], "ndenumer": [3, 8], "ndim": [0, 3, 6, 8, 16, 17, 33, 38, 39, 40, 48, 73, 75, 110, 164, 199, 318, 418, 422], "ndimag": 466, "ndindex": [3, 8], "nditer": [3, 8], "ndmin": 34, "ndshape": [6, 50, 402, 436], "ndshapelik": [50, 51, 113, 123, 124, 330, 331, 374, 376, 393, 412, 443], "nearest": [200, 202, 318, 335, 343, 395], "necessari": [38, 43, 48, 54, 68, 69, 98, 104, 106, 110, 183, 184, 194, 195, 197, 198, 201, 203, 339, 340, 398, 415, 437, 471, 480], "necessarili": [54, 463, 464, 470], "need": [34, 49, 77, 184, 185, 198, 388, 417, 418, 441, 455, 460, 464, 468, 471, 472, 483, 484], "neg": [0, 3, 8, 14, 19, 41, 43, 54, 75, 92, 99, 100, 101, 104, 113, 116, 126, 144, 146, 162, 168, 203, 287, 339, 351, 353, 355, 357, 358, 359, 361, 362, 364, 367, 368, 370, 375, 380, 388, 398, 410, 415, 417, 421, 423, 435], "negative_binomi": [0, 3, 8], "neglig": 475, "neighbor": [465, 471, 484], "neither": 475, "nersc": 484, "nest": [34, 48, 318, 471, 483], "nested_it": 3, "never": [61, 307], "new": [14, 19, 51, 54, 68, 69, 75, 84, 85, 89, 113, 114, 115, 123, 168, 180, 183, 184, 189, 194, 195, 197, 198, 201, 203, 208, 266, 268, 280, 304, 321, 324, 330, 350, 371, 393, 398, 413, 416, 422, 437, 442, 451, 468, 474, 484], "new_label": 468, "newaxi": [321, 468], "newbyteord": 8, "newli": [34, 266], "newshap": 393, "newton": 467, "next": [312, 327, 459, 484], "nextaft": [0, 3, 8], "ngood": 356, "ni": [185, 341, 417, 418], "ninja": 460, "niter": [469, 478, 483], "nj": [341, 417, 418], "nk": [341, 417, 418], "nn": 185, "nnewton": 469, "nnode": 484, "node": [284, 462, 471, 472, 473, 474, 482, 485], "non": [14, 16, 17, 19, 21, 33, 39, 40, 41, 43, 66, 112, 131, 141, 151, 164, 168, 180, 183, 185, 196, 199, 201, 284, 296, 298, 328, 336, 339, 351, 353, 355, 357, 358, 359, 362, 363, 364, 367, 368, 370, 375, 380, 410, 415, 421, 435, 471, 477], "nonc": [362, 363], "noncentr": [362, 363], "noncentral_chisquar": [0, 3, 8], "noncentral_f": [0, 3, 8], "none": [1, 2, 4, 6, 12, 13, 14, 16, 17, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 34, 37, 41, 43, 44, 45, 46, 52, 53, 54, 55, 57, 58, 59, 60, 63, 64, 65, 66, 67, 68, 69, 70, 71, 75, 76, 78, 79, 82, 85, 86, 87, 88, 90, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 113, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 131, 134, 138, 139, 143, 144, 145, 146, 147, 153, 154, 155, 156, 157, 163, 164, 166, 168, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 181, 182, 183, 184, 186, 187, 188, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 260, 261, 262, 263, 264, 265, 267, 268, 269, 270, 274, 275, 276, 278, 279, 282, 287, 288, 290, 293, 294, 295, 299, 300, 301, 305, 306, 307, 310, 311, 313, 315, 318, 320, 321, 323, 324, 326, 327, 329, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 343, 344, 345, 346, 347, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 369, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 390, 391, 392, 394, 395, 396, 398, 400, 403, 404, 405, 406, 407, 410, 411, 412, 413, 414, 415, 417, 418, 419, 420, 421, 423, 424, 425, 427, 430, 432, 433, 434, 435, 437, 438, 441, 443, 455, 468], "noninfring": 475, "nonneg": [356, 386], "nonzero": [0, 3, 8, 91, 112, 151, 333, 483, 484], "nor": 475, "norm": [0, 8, 94, 95, 96, 98, 99, 100, 101, 103, 104, 105, 106, 107, 108, 109, 161, 453, 465, 468, 469, 483], "normal": [0, 3, 8, 42, 47, 48, 67, 94, 95, 96, 98, 99, 100, 101, 103, 104, 105, 106, 107, 108, 109, 129, 130, 131, 152, 159, 346, 349, 357, 359, 370, 381, 384, 463, 466, 468, 484], "normal_unbias": [200, 202, 335, 343], "north": [470, 484], "not_equ": [0, 3, 8, 468], "note": [12, 13, 15, 18, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 34, 44, 45, 46, 52, 53, 54, 59, 60, 61, 63, 64, 65, 67, 68, 69, 70, 71, 75, 76, 77, 78, 79, 82, 83, 86, 87, 88, 90, 93, 94, 95, 96, 97, 98, 99, 100, 101, 103, 104, 105, 106, 107, 108, 109, 110, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 125, 127, 128, 131, 134, 137, 138, 139, 140, 143, 144, 145, 150, 153, 154, 155, 156, 157, 158, 159, 160, 161, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 185, 186, 187, 188, 191, 194, 195, 196, 199, 266, 277, 284, 290, 291, 296, 307, 309, 312, 317, 318, 324, 326, 327, 329, 334, 337, 338, 344, 345, 350, 359, 388, 390, 391, 392, 393, 394, 395, 396, 403, 404, 405, 406, 410, 411, 414, 417, 419, 420, 421, 425, 427, 428, 430, 431, 432, 433, 434, 438, 465, 466, 469, 472, 483, 484], "notic": [463, 469, 472, 474], "now": [54, 460, 463, 464, 466, 470, 484], "np": [12, 13, 16, 17, 22, 23, 24, 25, 26, 27, 28, 44, 45, 46, 48, 52, 53, 59, 60, 63, 64, 65, 68, 69, 70, 71, 76, 77, 78, 82, 86, 87, 88, 90, 93, 111, 112, 116, 117, 118, 119, 120, 121, 122, 125, 127, 128, 134, 139, 143, 144, 145, 151, 153, 154, 155, 156, 157, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 184, 185, 186, 187, 188, 191, 194, 195, 198, 285, 309, 312, 321, 326, 327, 329, 337, 338, 339, 344, 345, 372, 390, 391, 394, 395, 403, 404, 405, 406, 410, 411, 414, 415, 417, 419, 420, 422, 432, 433, 463, 464, 465, 466, 468, 469, 470, 471, 476, 477, 478, 481, 483, 484, 485], "npoint": 465, "npt": [4, 36, 55, 58, 92, 123, 124, 131, 135, 137, 141, 142, 148, 150, 168, 267, 285, 306, 324, 330, 331, 374, 376, 401, 422, 425, 441, 443], "npy": [169, 453], "npz": [169, 453], "nsampl": 356, "ntask": 484, "nuc": 164, "nuclear": 164, "null": 418, "num": [168, 483, 484], "num_parallel": 460, "num_timestep": 471, "numa": 460, "number": [2, 3, 6, 8, 12, 13, 15, 18, 22, 23, 24, 25, 26, 27, 28, 33, 34, 41, 42, 43, 44, 45, 46, 47, 49, 52, 53, 54, 59, 60, 63, 64, 65, 66, 67, 70, 71, 73, 76, 78, 83, 86, 87, 88, 89, 90, 92, 93, 96, 98, 99, 100, 101, 103, 104, 106, 107, 109, 116, 117, 118, 119, 120, 121, 122, 125, 126, 127, 128, 129, 130, 131, 134, 135, 137, 139, 142, 143, 144, 145, 149, 151, 152, 153, 154, 155, 156, 157, 164, 168, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 182, 183, 186, 187, 188, 191, 194, 195, 196, 197, 199, 201, 203, 292, 297, 309, 325, 326, 327, 329, 333, 336, 337, 338, 344, 345, 347, 348, 349, 354, 356, 361, 364, 366, 377, 390, 391, 392, 394, 395, 396, 397, 398, 403, 404, 405, 406, 410, 411, 414, 417, 419, 420, 422, 425, 432, 433, 434, 435, 437, 438, 453, 455, 462, 463, 465, 469, 471, 472, 476, 477, 484], "number_of_dimens": 325, "numer": [99, 100, 101, 104, 106, 146, 147, 164, 326, 337, 352, 363, 453, 471, 477], "numit": 6, "numpi": [1, 2, 3, 4, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 90, 91, 92, 93, 94, 95, 96, 98, 99, 100, 101, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 152, 153, 154, 155, 156, 157, 158, 159, 160, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 266, 274, 280, 284, 307, 312, 324, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 399, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 453, 455, 462, 463, 464, 465, 466, 468, 469, 470, 471, 473, 479, 480, 482, 485], "numpy_compat": 444, "numpythunk": 4, "nvidia": [463, 464, 466, 470, 472, 474, 484, 485], "nx": [185, 471, 483, 484], "ny": [185, 471, 483, 484], "nyquist": [97, 99, 100, 101], "o": [1, 284, 350, 468, 478, 484], "obj": 34, "obj2sctyp": [3, 8], "object": [6, 14, 19, 34, 62, 150, 158, 164, 169, 184, 198, 200, 202, 255, 267, 274, 277, 284, 290, 292, 296, 316, 317, 318, 324, 335, 343, 350, 393, 421, 425, 434], "object_": [3, 8], "observ": 67, "obtain": [137, 309, 365, 463, 464, 470, 475], "occas": 459, "occasion": 477, "occur": [58, 68, 69, 82, 181, 194, 195, 266, 286, 361, 364, 366, 382, 388, 483, 484], "occurr": [43, 434], "odd": [42, 47, 98, 102, 104, 106, 107, 129, 130, 152], "ofc": 68, "off": [21, 435, 459, 465], "offer": [472, 474], "offload": 455, "offset": [4, 75, 180, 278, 288, 306, 312, 320, 423, 427, 428, 430, 431, 455, 478], "often": [21, 42, 346, 349, 364, 459, 468, 483, 484], "ogrid": 151, "omiss": 324, "omit": [255, 324], "omp": [462, 472, 484], "ompthread": [462, 484], "onc": [459, 460, 471, 484], "one": [6, 14, 16, 17, 19, 29, 30, 38, 41, 42, 43, 47, 49, 51, 54, 55, 82, 92, 94, 95, 98, 99, 100, 102, 103, 104, 106, 107, 126, 129, 130, 135, 137, 142, 151, 152, 164, 172, 183, 184, 185, 192, 193, 194, 196, 197, 198, 199, 200, 201, 202, 203, 277, 284, 285, 286, 290, 291, 311, 312, 328, 335, 339, 343, 354, 365, 369, 401, 412, 413, 415, 427, 428, 430, 431, 437, 451, 459, 463, 471, 472, 474, 478, 483, 484], "ones": [0, 3, 8, 79, 89, 92, 135, 138, 146, 147, 180, 181, 194, 201, 203, 331, 421, 425, 438, 465, 468, 471, 477, 483], "ones_lik": [0, 3, 8], "onli": [12, 13, 22, 23, 24, 25, 26, 27, 28, 34, 36, 38, 41, 42, 44, 45, 46, 47, 52, 53, 55, 59, 60, 61, 63, 64, 65, 70, 71, 78, 79, 82, 83, 86, 87, 88, 90, 93, 97, 116, 117, 118, 119, 120, 121, 122, 125, 126, 127, 128, 129, 130, 131, 134, 137, 139, 143, 144, 145, 152, 153, 154, 155, 156, 157, 158, 164, 166, 168, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 181, 182, 186, 187, 188, 191, 192, 193, 196, 199, 266, 284, 290, 291, 307, 326, 327, 329, 336, 337, 338, 341, 344, 345, 377, 388, 390, 391, 392, 393, 394, 395, 403, 404, 405, 406, 410, 411, 414, 418, 419, 420, 421, 432, 433, 434, 435, 438, 451, 455, 459, 466, 468, 471, 474, 477, 478, 483, 484], "onto": [284, 472], "oom": 472, "op": 377, "open": [21, 77, 151, 168, 169, 317, 369, 371, 373, 374, 376, 383, 459, 466, 472, 474, 484], "openmp": [455, 460, 462, 484], "oper": [7, 16, 17, 81, 82, 83, 89, 118, 133, 138, 158, 196, 287, 332, 341, 392, 399, 421, 434, 438, 440, 444, 453, 455, 465, 466, 471, 477, 478], "operand": [82, 83], "opposit": [266, 284], "optim": [47, 82, 83, 163, 290, 455, 465, 471, 480, 484], "option": [1, 12, 13, 14, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 34, 37, 41, 43, 44, 45, 46, 49, 51, 52, 53, 54, 55, 57, 58, 59, 60, 61, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 75, 76, 77, 78, 79, 82, 84, 85, 86, 87, 88, 90, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 113, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 131, 134, 135, 137, 138, 139, 143, 144, 145, 146, 147, 153, 154, 155, 156, 157, 163, 164, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 255, 266, 286, 287, 305, 307, 316, 324, 326, 327, 329, 330, 331, 332, 333, 334, 335, 337, 338, 339, 340, 343, 344, 345, 346, 347, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 372, 373, 374, 375, 376, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 390, 391, 392, 393, 394, 395, 396, 398, 400, 401, 403, 404, 405, 406, 407, 409, 410, 411, 412, 413, 414, 415, 417, 419, 420, 421, 423, 424, 425, 426, 427, 428, 430, 431, 432, 433, 434, 435, 436, 437, 438, 442, 443, 459, 460, 462, 467, 472, 474, 476, 480, 481, 483], "ord": [164, 468], "order": [4, 12, 13, 22, 23, 24, 25, 26, 27, 28, 31, 32, 34, 44, 45, 46, 52, 53, 59, 60, 63, 64, 65, 70, 71, 75, 77, 78, 82, 83, 86, 87, 88, 90, 93, 99, 100, 101, 104, 106, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 125, 126, 127, 128, 134, 139, 143, 144, 145, 153, 154, 155, 156, 157, 163, 164, 167, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 181, 182, 185, 186, 187, 188, 189, 191, 212, 264, 265, 266, 286, 287, 299, 302, 304, 305, 310, 316, 317, 319, 321, 326, 327, 329, 333, 334, 337, 338, 340, 344, 345, 346, 354, 388, 390, 391, 393, 394, 395, 397, 400, 403, 404, 405, 406, 407, 410, 411, 414, 419, 420, 421, 432, 433, 435, 436, 453, 463, 464, 465, 482, 483, 484], "ordertyp": [4, 388, 393, 436], "ordin": 166, "ordinari": [138, 158], "org": [351, 459, 463, 464, 470, 475], "organ": 475, "orient": [341, 418], "origin": [12, 13, 22, 23, 24, 25, 26, 27, 28, 41, 44, 45, 46, 49, 51, 52, 53, 59, 60, 63, 64, 65, 70, 71, 78, 86, 87, 88, 90, 93, 116, 117, 118, 119, 120, 121, 122, 125, 127, 128, 134, 139, 143, 144, 145, 153, 154, 155, 156, 157, 164, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 182, 184, 185, 186, 187, 188, 189, 191, 198, 200, 202, 326, 327, 329, 335, 337, 338, 343, 344, 345, 390, 391, 393, 394, 395, 396, 403, 404, 405, 406, 410, 411, 414, 419, 420, 432, 433, 434, 461, 466, 471, 481, 484], "ortho": [94, 95, 96, 98, 99, 100, 101, 103, 104, 105, 106, 107, 108, 109], "orthonorm": 165, "oserror": 169, "other": [6, 12, 13, 21, 22, 23, 24, 25, 26, 27, 28, 34, 44, 45, 46, 49, 50, 52, 53, 54, 55, 59, 60, 61, 63, 64, 65, 70, 71, 76, 78, 82, 86, 87, 88, 90, 93, 99, 100, 101, 104, 106, 116, 117, 118, 119, 120, 121, 122, 125, 127, 128, 134, 135, 139, 143, 144, 145, 153, 154, 155, 156, 157, 163, 164, 168, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 182, 186, 187, 188, 189, 191, 200, 202, 266, 267, 274, 284, 291, 307, 309, 312, 326, 327, 329, 335, 337, 338, 343, 344, 345, 365, 382, 383, 390, 391, 394, 395, 403, 404, 405, 406, 410, 411, 414, 419, 420, 425, 432, 433, 453, 459, 463, 472, 475, 478, 483], "otherwis": [15, 29, 30, 34, 35, 41, 66, 67, 76, 138, 168, 183, 184, 192, 193, 196, 197, 198, 199, 200, 202, 266, 286, 316, 335, 343, 377, 388, 393, 400, 416, 423, 424, 425, 437, 441, 471, 475], "our": [459, 466, 470, 472, 477, 483, 484], "out": [12, 13, 14, 16, 17, 19, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 34, 37, 42, 43, 44, 45, 46, 47, 52, 53, 54, 55, 57, 58, 59, 60, 61, 63, 64, 65, 67, 68, 69, 70, 71, 72, 76, 78, 79, 82, 84, 85, 86, 87, 88, 90, 93, 94, 95, 96, 98, 99, 100, 101, 103, 104, 105, 106, 107, 108, 109, 113, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 127, 128, 129, 130, 134, 135, 136, 138, 139, 141, 143, 144, 145, 146, 147, 148, 151, 152, 153, 154, 155, 156, 157, 163, 166, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 186, 187, 188, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 260, 261, 262, 263, 268, 269, 270, 275, 276, 279, 287, 293, 294, 295, 300, 313, 315, 320, 321, 323, 326, 327, 329, 330, 331, 332, 334, 335, 337, 338, 339, 340, 343, 344, 345, 346, 347, 348, 349, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 372, 373, 374, 375, 376, 379, 380, 381, 382, 383, 384, 385, 386, 387, 389, 390, 391, 394, 395, 398, 403, 404, 405, 406, 407, 408, 410, 411, 413, 414, 415, 417, 418, 419, 420, 421, 423, 432, 433, 437, 438, 441, 442, 443, 462, 464, 470, 475, 480, 483, 484], "outcom": [354, 484], "outer": [0, 3, 8, 83], "outermost": [48, 54], "outlin": 471, "output": [12, 13, 14, 15, 16, 17, 19, 21, 22, 23, 24, 25, 26, 27, 28, 42, 43, 44, 45, 46, 47, 48, 52, 53, 55, 57, 59, 60, 61, 63, 64, 65, 68, 69, 70, 71, 76, 77, 78, 79, 82, 83, 84, 86, 87, 88, 90, 92, 93, 94, 95, 96, 98, 99, 100, 101, 104, 105, 106, 112, 116, 117, 118, 119, 120, 121, 122, 125, 127, 128, 129, 130, 134, 135, 136, 137, 138, 139, 140, 141, 143, 144, 145, 151, 152, 153, 154, 155, 156, 157, 163, 166, 168, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 181, 182, 183, 184, 185, 186, 187, 188, 191, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 317, 326, 327, 329, 332, 333, 335, 337, 338, 339, 343, 344, 345, 346, 347, 349, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 369, 372, 373, 374, 375, 376, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 389, 390, 391, 392, 394, 395, 396, 398, 401, 403, 404, 405, 406, 410, 411, 414, 415, 419, 420, 421, 422, 423, 432, 433, 434, 435, 437, 438, 444, 453, 462, 471, 472, 480, 484], "outsid": [54, 55, 77, 131, 465], "over": [12, 13, 14, 16, 17, 19, 22, 23, 24, 25, 26, 27, 28, 41, 44, 45, 46, 52, 53, 59, 60, 63, 64, 65, 68, 69, 70, 71, 78, 79, 82, 83, 86, 87, 88, 90, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 113, 116, 117, 118, 119, 120, 121, 122, 125, 127, 128, 131, 134, 138, 139, 143, 144, 145, 153, 154, 155, 156, 157, 164, 168, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 182, 183, 185, 186, 187, 188, 191, 194, 195, 196, 197, 201, 203, 285, 286, 287, 300, 313, 326, 327, 329, 333, 337, 338, 339, 341, 344, 345, 347, 351, 366, 368, 373, 374, 376, 382, 383, 386, 390, 391, 394, 395, 396, 403, 404, 405, 406, 410, 411, 414, 415, 417, 418, 419, 420, 421, 432, 433, 435, 437, 455, 470, 471, 484], "overal": [455, 462, 471, 484], "overcom": 317, "overflow": [21, 116, 309], "overhead": [455, 471, 478], "overlap": 465, "overrid": [85, 124, 331, 443, 474], "overridden": [1, 67], "oversubscrib": 472, "overwrite_input": [184, 198, 200, 202, 335, 343], "own": [284, 307, 364, 459, 484], "owndata": 284, "owner": [284, 307, 475], "p": [88, 185, 347, 351, 354, 360, 361, 364, 424, 484], "pack": [333, 388, 435, 453], "packag": [200, 202, 335, 343, 466, 469, 472, 478, 484], "packbit": [0, 3, 8], "pad": [8, 61, 94, 95, 96, 98, 99, 100, 101, 103, 104, 106, 107, 109, 333, 435], "pade": 161, "page": [351, 459, 473], "pair": [83, 94, 95, 96, 98, 99, 100, 101, 103, 104, 105, 106, 107, 108, 109, 118], "pairwis": 468, "pairwise_dist": 468, "paper": [200, 202, 335, 343, 465], "parallel": [29, 30, 68, 69, 94, 95, 96, 98, 99, 100, 101, 103, 104, 105, 106, 107, 108, 109, 159, 160, 194, 195, 460, 471, 476, 484], "paramet": [1, 2, 6, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 255, 266, 274, 281, 282, 283, 286, 287, 290, 291, 305, 307, 316, 317, 318, 321, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 372, 373, 374, 375, 376, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 430, 431, 432, 433, 434, 435, 436, 437, 438, 440, 441, 442, 443, 462, 483, 484], "parameter": [346, 347, 349, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 375, 380, 381, 382, 383, 384, 385, 386, 387], "parenthes": 163, "pareto": [0, 3, 8], "parse_arg": 484, "parser": 484, "part": [18, 57, 136, 141, 142, 148, 149, 159, 160, 188, 289, 303, 389, 398, 408, 459], "parti": 474, "partial": [184, 198, 469, 484], "particular": [291, 475], "particularli": 484, "partit": [0, 3, 8, 31, 68, 264, 471, 478, 484], "pass": [14, 16, 17, 18, 19, 34, 48, 151, 169, 180, 183, 196, 199, 201, 266, 339, 350, 415, 425, 460, 462, 478, 482, 484], "past": 484, "patch": 481, "path": [83, 169, 281, 317, 460], "pathlib": [169, 281, 317], "pathlik": 169, "pattern": [41, 483], "pcg64": [3, 8], "pcg64dxsm": [3, 8], "pcolor": 470, "pdf": [382, 463], "peak": [357, 382], "peebl": [351, 364], "pend": [34, 422], "pentadiagon": 465, "per": [455, 460, 462, 466, 471, 484], "percent": 365, "percentag": [455, 472, 480, 484], "percentil": [0, 3, 8, 200], "perform": [14, 19, 31, 37, 41, 54, 55, 61, 76, 82, 95, 96, 100, 101, 106, 109, 113, 158, 161, 180, 183, 197, 203, 287, 339, 341, 415, 437, 438, 463, 464, 466, 469, 471, 472, 479, 482, 484], "performa": 484, "perhap": 77, "period": 465, "perlmutt": 484, "permiss": [54, 463, 464, 470, 475], "permit": [459, 466, 475, 483], "permut": [3, 8, 321, 424], "person": [459, 475], "peyton": 351, "pg": 164, "phase": 484, "philox": [3, 8], "pi": [18, 384, 463, 465, 471], "pick": [460, 466], "pickl": [169, 250, 255, 281, 282], "piec": 484, "piecewis": [3, 8], "pil": [466, 484], "pillow": 484, "pin": 472, "pinv": [3, 8], "pip": 474, "pipe": 480, "pixel": [81, 133, 399, 440, 470], "place": [0, 3, 8, 14, 15, 16, 17, 19, 55, 58, 68, 69, 89, 110, 137, 183, 184, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 291, 299, 310, 321, 335, 339, 340, 341, 343, 393, 396, 398, 413, 415, 417, 423, 437, 451, 476], "plai": 484, "plain": [462, 464], "plan": 462, "plane": [18, 397], "platform": [68, 69, 194, 195, 201, 203, 339, 372, 415, 474], "pleas": [36, 80, 132, 185, 429, 439, 459, 469, 472, 474], "plot": [463, 465, 466, 468, 484], "plt": [463, 465, 466, 468, 470, 484], "plu": 172, "png": [466, 484], "point": [21, 42, 47, 68, 69, 79, 82, 94, 98, 99, 103, 104, 106, 107, 126, 129, 130, 140, 152, 162, 181, 183, 194, 195, 197, 277, 305, 327, 370, 383, 398, 400, 421, 453, 455, 460, 464, 465, 468, 471, 477, 484], "poisson": [0, 3, 8, 351], "poisson_process": 351, "poli": [3, 8], "poly1d": [3, 8], "polyadd": [3, 8], "polyd": [3, 8], "polydiv": [3, 8], "polyfit": [3, 8], "polyint": [3, 8], "polymul": [3, 8], "polysub": [3, 8], "polyv": [3, 8], "pool": 472, "popul": 368, "port": [371, 471], "portion": [475, 484], "posit": [0, 3, 8, 15, 18, 21, 43, 54, 75, 89, 92, 99, 100, 101, 104, 116, 144, 147, 158, 162, 189, 312, 346, 354, 357, 365, 367, 370, 396, 398, 401, 423, 464, 484], "possess": [6, 274], "possibl": [12, 13, 22, 23, 24, 25, 26, 27, 28, 39, 40, 44, 45, 46, 47, 52, 53, 59, 60, 63, 64, 65, 70, 71, 78, 83, 86, 87, 88, 90, 93, 116, 117, 118, 119, 120, 121, 122, 125, 127, 128, 131, 134, 139, 143, 144, 145, 153, 154, 155, 156, 157, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 182, 186, 187, 188, 191, 266, 284, 291, 326, 327, 329, 337, 338, 344, 345, 390, 391, 393, 394, 395, 403, 404, 405, 406, 409, 410, 411, 414, 419, 420, 424, 432, 433, 459, 462, 472, 475, 476, 478, 483], "possibli": [318, 477], "post": 472, "potenti": [277, 477, 483], "pow": 249, "power": [0, 3, 8, 116, 162, 484], "pp": [200, 202, 335, 343, 364], "pr": 459, "practic": [472, 482], "pre": [34, 422, 459, 460], "precis": [41, 67, 68, 69, 82, 116, 180, 194, 195, 201, 203, 309, 317, 318, 339, 372, 415, 423, 455, 477, 484], "predict": 471, "prefer": [79, 472], "preload": 455, "preload_cudalib": 444, "prepend": [48, 76, 137, 181, 422], "prescrib": 472, "present": [16, 17, 79, 138, 196, 199, 421, 438], "preserv": [14, 19, 34, 38, 39, 40, 55, 57, 76, 82, 113, 114, 115, 181, 184, 198, 266, 287, 305, 324, 400, 423], "press": 164, "pressur": 266, "prevent": [459, 484], "previou": [41, 459], "previous": [284, 484], "price": [467, 484], "primarili": 48, "principl": [351, 364], "print": [77, 455, 462, 463, 464, 465, 468, 469, 470, 480, 484, 485], "printabl": 83, "printopt": [3, 8], "prior": [76, 460, 475, 484], "prior_distance_sum": 468, "probabl": [2, 67, 131, 184, 198, 346, 347, 351, 352, 354, 361, 364, 382, 384, 387], "problem": [291, 317, 459, 469, 471, 472, 478, 483, 484], "proc": 472, "proce": 484, "process": [42, 158, 351, 461, 472, 483, 484], "processor": [462, 471, 472, 483, 484], "procur": 475, "prod": [0, 3, 8, 201, 309], "produc": [6, 284, 316, 317, 341, 418, 470, 477, 484], "product": [68, 79, 83, 138, 151, 163, 181, 194, 201, 203, 279, 300, 309, 332, 339, 421, 438, 453, 464, 471, 473, 475, 484], "product_along_axi": 339, "prof": 471, "profil": 465, "profit": 475, "program": [460, 471, 472, 473, 476, 481, 484, 485], "project": [444, 459, 463, 474], "promot": [111, 116, 181, 422, 475], "prone": [471, 484], "propag": [68, 69, 194, 195, 477], "proper": [453, 471], "properli": [307, 484], "properti": [6, 204, 267, 274, 277, 280, 284, 285, 289, 292, 296, 297, 303, 308, 309, 312, 321, 449], "proport": 387, "propos": 459, "protocol": 425, "prototyp": 85, "provid": [1, 8, 12, 13, 22, 23, 24, 25, 26, 27, 28, 29, 30, 44, 45, 46, 52, 53, 54, 58, 59, 60, 63, 64, 65, 70, 71, 78, 80, 81, 82, 83, 86, 87, 88, 90, 93, 116, 117, 118, 119, 120, 121, 122, 125, 127, 128, 131, 133, 134, 139, 143, 144, 145, 146, 147, 153, 154, 155, 156, 157, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 181, 182, 183, 186, 187, 188, 191, 192, 193, 197, 201, 208, 291, 307, 321, 326, 327, 329, 337, 338, 344, 345, 369, 370, 372, 390, 391, 394, 395, 399, 403, 404, 405, 406, 410, 411, 413, 414, 417, 419, 420, 432, 433, 434, 435, 440, 459, 472, 473, 475, 483, 484], "pseudonym": 459, "ptp": [3, 8], "public": 459, "publish": [472, 475], "pull": [1, 350, 459, 460], "purpos": [164, 475], "put": [0, 3, 8, 336, 341, 342, 463, 484], "put_along_axi": [0, 3, 8], "put_result": 463, "putmask": [0, 3, 8], "pwd": 460, "py": [460, 462, 463, 472, 474, 475, 476, 480, 481, 484, 485], "pyarray_resolvewritebackifcopi": [284, 307], "pypi": 484, "pyplot": [463, 465, 466, 468, 470, 484], "python": [21, 118, 277, 290, 309, 316, 317, 318, 460, 463, 464, 470, 473, 474, 476, 477, 478, 483, 484, 485], "python3": 460, "q": [165, 200, 202, 335, 343], "qo": 484, "qr": [0, 3, 8], "quadrant": 27, "quadrat": 484, "quantil": [0, 3, 8, 200, 202, 335], "quantiti": 484, "queri": [472, 484], "question": [72, 473, 477], "quick": [317, 481], "quickli": [151, 464], "quicksort": [32, 407], "r": [81, 133, 165, 200, 202, 335, 343, 364, 399, 440, 463, 484], "r0": 137, "rad2deg": [0, 3, 8, 71], "radian": [3, 8, 18, 70, 71, 344], "raindrop": 351, "rainstorm": 351, "rais": [14, 16, 17, 19, 41, 43, 48, 54, 57, 75, 77, 110, 116, 159, 160, 162, 164, 165, 166, 167, 169, 183, 184, 192, 193, 196, 198, 199, 200, 201, 202, 268, 284, 301, 315, 335, 338, 339, 340, 343, 349, 367, 409, 412, 415, 417, 423], "ram": 485, "ran": 472, "rand": [0, 3, 8, 484], "randint": [0, 3, 8, 372], "randn": [0, 3, 8, 484], "random": [0, 444, 453, 468, 484], "random_integ": [0, 3, 8], "random_sampl": [0, 3, 8, 371, 374, 376, 383], "random_se": 468, "randomli": [356, 370, 468], "randomst": [3, 8], "ranf": [3, 8], "rang": [18, 21, 54, 77, 131, 185, 340, 360, 365, 417, 453, 468, 469, 470, 471, 478, 483, 484], "rank": [91, 166, 387, 471, 474, 484], "rankwarn": [3, 8], "raphson": 467, "rare": 459, "rate": [351, 463, 484], "rather": [21, 75, 284, 455, 478, 483], "ratio": 352, "ration": 453, "ravel": [0, 3, 8, 112, 164, 286], "ravel_multi_index": [3, 8], "raw": 316, "rawdata": 255, "rayleigh": [0, 3, 8], "rbf": 466, "re": [20, 39, 40, 58, 112, 396, 484], "reach": [48, 361, 459], "read": [169, 281, 284, 388, 393, 455, 466, 484], "readi": 459, "readonli": 51, "real": [0, 3, 8, 18, 35, 98, 104, 105, 106, 107, 108, 109, 136, 148, 158, 398, 408, 453, 459, 471], "real_if_clos": [3, 8], "realli": [94, 99, 104, 105, 107, 108, 459, 483], "realm": 482, "realm_default_arg": 476, "rearrang": 453, "reason": [34, 106, 459], "rebuild": [81, 133, 399, 440], "recarrai": [3, 8], "receiv": 471, "reciproc": [0, 3, 8], "recommend": [2, 54, 478, 482, 484], "reconstruct": 434, "record": [3, 8, 459], "recov": 317, "recreat": 318, "recurs": 76, "recv": 471, "recv_typ": 471, "red": [465, 468], "redistribut": [459, 475], "reduc": [14, 16, 17, 19, 29, 30, 41, 183, 184, 185, 192, 193, 196, 197, 198, 199, 200, 201, 202, 203, 266, 335, 339, 343, 415, 437, 465, 471, 472, 484], "reduct": [14, 19, 200, 202, 335, 343, 437, 482, 484], "refer": [14, 19, 36, 49, 51, 68, 69, 80, 92, 95, 96, 100, 101, 106, 109, 132, 146, 147, 164, 183, 185, 194, 195, 197, 200, 202, 208, 260, 261, 262, 263, 264, 265, 268, 269, 270, 271, 272, 278, 279, 284, 293, 294, 295, 298, 299, 300, 301, 302, 304, 310, 311, 312, 313, 314, 315, 320, 322, 323, 335, 339, 343, 351, 364, 385, 388, 393, 398, 415, 425, 429, 437, 439, 468, 471, 472, 473, 483, 484], "referenc": 307, "reflect": [284, 472], "regard": 474, "regardless": [19, 132, 439, 472], "region": 472, "reinterpret": 324, "reject": 459, "rel": [15, 67, 140], "relabel": 468, "relat": [346, 471, 483, 484], "relationship": [67, 385], "releas": [459, 475, 478, 484], "relev": [168, 309], "reli": 61, "remain": [12, 13, 19, 22, 23, 24, 25, 26, 27, 28, 44, 45, 46, 52, 53, 59, 60, 63, 64, 65, 70, 71, 78, 86, 87, 88, 90, 93, 109, 116, 117, 118, 119, 120, 121, 122, 125, 127, 128, 131, 134, 139, 143, 144, 145, 153, 154, 155, 156, 157, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 182, 186, 187, 188, 189, 191, 200, 202, 284, 326, 327, 329, 335, 337, 338, 343, 344, 345, 365, 390, 391, 393, 394, 395, 403, 404, 405, 406, 410, 411, 414, 419, 420, 432, 433], "remaind": [0, 3, 8, 118, 121, 187], "remot": 484, "remov": [29, 30, 75, 89, 181, 192, 193, 196, 311, 339, 412, 415, 423, 471, 477], "reopen": 459, "reorder": [113, 189, 287], "rep": 422, "repeat": [0, 3, 8, 67, 95, 96, 100, 101, 106, 110, 159, 160, 162, 185, 336, 340, 342, 422, 484], "repeated_arrai": 392, "repeatedli": [470, 484], "repetit": [392, 422], "replac": [55, 194, 195, 301, 340, 417, 464, 472, 473, 484, 485], "replic": 422, "repo": 459, "report": 455, "report_coverag": 444, "report_dump_callstack": 444, "report_dump_csv": 444, "repositori": [459, 471], "repr": 251, "repres": [41, 67, 82, 99, 137, 146, 147, 185, 333, 357, 435, 437, 465, 466, 468, 471, 472, 477], "represent": [83, 137, 451], "reproduc": [468, 475], "req": 471, "request": [351, 366, 459, 468, 471, 472], "requir": [3, 8, 34, 169, 455, 460, 461, 463, 464, 470, 471, 472, 474, 480, 482, 483], "requri": 484, "res2": [39, 40], "rese": 377, "research": [463, 471, 484], "resembl": 381, "reserv": [462, 472, 475, 484], "reset": 6, "reshap": [0, 3, 8, 81, 89, 308, 321, 399, 440, 472, 477], "reshaped_arrai": 393, "resid": 181, "resiz": [3, 8, 89, 484], "resolut": [465, 471], "resourc": [463, 472, 482, 485], "respect": [61, 126, 181, 307, 465, 472, 484], "respons": [459, 471, 484], "rest": 36, "restor": 396, "restrict": 475, "result": [6, 12, 13, 14, 16, 17, 18, 19, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 34, 41, 43, 44, 45, 46, 52, 53, 54, 55, 58, 59, 60, 63, 64, 65, 67, 68, 69, 70, 71, 72, 75, 76, 77, 78, 83, 85, 86, 87, 88, 89, 90, 91, 93, 105, 108, 111, 116, 117, 118, 119, 120, 121, 122, 124, 125, 127, 128, 131, 134, 137, 138, 139, 143, 144, 145, 146, 147, 153, 154, 155, 156, 157, 159, 160, 164, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 266, 305, 317, 324, 326, 327, 329, 331, 332, 333, 334, 335, 337, 338, 339, 341, 343, 344, 345, 349, 369, 372, 373, 374, 376, 381, 390, 391, 393, 394, 395, 398, 400, 403, 404, 405, 406, 407, 409, 410, 411, 413, 414, 415, 417, 418, 419, 420, 421, 422, 423, 425, 432, 433, 434, 437, 438, 443, 455, 462, 463, 464, 465, 470, 471, 477, 478, 484], "result_typ": [3, 8, 463], "ret": 38, "retain": [12, 13, 22, 23, 24, 25, 26, 27, 28, 44, 45, 46, 52, 53, 59, 60, 63, 64, 65, 70, 71, 78, 86, 87, 88, 90, 93, 116, 117, 118, 119, 120, 121, 122, 125, 127, 128, 134, 139, 143, 144, 145, 153, 154, 155, 156, 157, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 182, 186, 187, 188, 191, 326, 327, 329, 337, 338, 344, 345, 390, 391, 394, 395, 403, 404, 405, 406, 410, 411, 414, 419, 420, 432, 433, 475], "retstep": 168, "return": [2, 6, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 205, 206, 207, 208, 209, 211, 212, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 247, 248, 249, 251, 252, 253, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 269, 270, 272, 274, 278, 279, 282, 285, 286, 287, 290, 293, 294, 295, 298, 300, 302, 304, 305, 309, 313, 314, 316, 318, 319, 320, 321, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 337, 338, 339, 341, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 440, 441, 442, 443, 451, 463, 464, 466, 468, 469, 470, 472, 482, 484], "return_count": 434, "return_index": 434, "return_invers": 434, "retval": 41, "revers": [77, 113, 114, 115, 287, 321, 333, 388, 397, 424, 435], "review": [461, 472, 474], "rf": 484, "rfft": [0, 3, 8, 104, 109], "rfft2": [0, 3, 8, 105], "rfftfreq": [3, 8], "rfftn": [0, 3, 8, 106, 107, 108], "rh": [279, 465], "right": [55, 57, 75, 77, 114, 134, 159, 305, 382, 394, 400, 423, 459, 465, 471, 474, 475], "right_shift": [0, 3, 8], "rightmost": 131, "rint": [0, 3, 8], "rippl": 42, "risk": [463, 471, 484], "river": 471, "rk_hypergeometric_hrua": 475, "rk_hypergeometric_hyp": 475, "rk_triangular": 475, "rm": 484, "rn": 137, "rng": 468, "rober": 484, "robert": 475, "roll": [0, 3, 8], "rollaxi": [3, 8], "root": [3, 8, 52, 410, 460], "rot90": [0, 3, 8], "rotat": 397, "roughli": 484, "round": [0, 21, 383, 395, 453], "round_": [3, 8], "rounded_arrai": 398, "roundoff": 118, "routin": [444, 451, 455, 460], "row": [34, 67, 92, 114, 115, 135, 163, 286, 312, 388, 399, 425, 427, 436, 439, 440, 466, 471, 484], "row_stack": [3, 8], "rowvar": 67, "rsqrt2pi": 463, "rst": 312, "rt": 484, "rtol": [15, 140], "rule": [21, 41, 48, 111, 365, 478], "run": [180, 354, 459, 460, 461, 470, 472, 473, 474, 476, 480, 481, 482, 483, 485], "run_kmean": 468, "runfil": 484, "runtim": [196, 199, 455, 462, 471, 472, 476, 478, 481, 483], "runtimeerror": 284, "runtimewarn": [463, 469, 472], "rv": 475, "s0": 484, "s_0": 484, "s_0n": 484, "safe": [58, 82, 169, 181, 266], "sai": [472, 478], "salloc": 484, "same": [14, 15, 16, 17, 19, 20, 29, 30, 31, 32, 34, 35, 41, 43, 48, 54, 56, 58, 61, 67, 68, 69, 75, 76, 77, 81, 85, 91, 99, 100, 101, 106, 124, 126, 131, 133, 146, 147, 148, 162, 163, 183, 184, 190, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 266, 280, 304, 305, 309, 312, 319, 321, 324, 331, 333, 334, 335, 336, 339, 342, 343, 388, 392, 396, 398, 399, 400, 401, 407, 408, 413, 415, 417, 421, 423, 426, 428, 431, 435, 436, 437, 440, 443, 459, 463, 464, 466, 468, 469, 470, 472, 474, 481, 483, 484], "same_kind": [12, 13, 22, 23, 24, 25, 26, 27, 28, 44, 45, 46, 52, 53, 58, 59, 60, 63, 64, 65, 70, 71, 78, 82, 86, 87, 88, 90, 93, 116, 117, 118, 119, 120, 121, 122, 125, 127, 128, 134, 139, 143, 144, 145, 153, 154, 155, 156, 157, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 181, 182, 186, 187, 188, 191, 266, 326, 327, 329, 337, 338, 344, 345, 390, 391, 394, 395, 403, 404, 405, 406, 410, 411, 414, 419, 420, 432, 433], "sampl": [42, 47, 67, 102, 126, 129, 131, 152, 168, 200, 202, 335, 343, 346, 347, 349, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 372, 373, 374, 375, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 444, 453], "satisfi": [34, 77, 91, 266, 387, 401, 469, 472, 483], "save": [3, 8, 184, 198, 200, 202, 335, 343, 455, 459, 465, 480], "savetxt": [3, 8], "savez": [3, 8], "savez_compress": [3, 8], "scalabl": [471, 472, 483, 484], "scalar": [12, 13, 15, 16, 17, 18, 22, 23, 24, 25, 26, 27, 28, 35, 38, 44, 45, 46, 48, 52, 53, 55, 59, 60, 63, 64, 65, 70, 71, 76, 78, 79, 86, 87, 88, 90, 93, 110, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 131, 134, 136, 138, 139, 140, 143, 144, 145, 150, 153, 154, 155, 156, 157, 166, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 185, 186, 187, 188, 191, 196, 199, 200, 201, 202, 203, 283, 290, 291, 305, 318, 325, 326, 327, 329, 335, 337, 338, 339, 343, 344, 345, 346, 347, 349, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 375, 378, 380, 381, 382, 383, 384, 385, 386, 387, 389, 390, 391, 394, 395, 400, 401, 403, 404, 405, 406, 410, 411, 414, 415, 417, 419, 420, 421, 432, 433, 451, 482, 483], "scale": [83, 94, 95, 96, 98, 99, 100, 101, 103, 104, 105, 106, 107, 108, 109, 351, 353, 355, 357, 358, 364, 365, 375, 379, 380, 385, 386, 466, 471, 472, 473, 483, 484], "scatter": [468, 484], "schedul": [463, 464, 470, 472], "scheme": 467, "schole": [467, 474], "scientif": [471, 472, 484], "scientist": 471, "scikit": 460, "scipi": [161, 365, 466, 484], "scp": 484, "script": [460, 462, 472, 476, 481, 485], "sctype2char": [3, 8], "seamlessli": 472, "search": [83, 444, 453, 473], "searchsort": [0, 3, 8, 77], "second": [41, 48, 61, 75, 79, 81, 83, 100, 101, 116, 126, 131, 132, 133, 146, 147, 180, 181, 185, 332, 338, 397, 399, 408, 416, 421, 423, 438, 440, 465, 483, 484], "second_cond": 483, "section": [34, 36, 96, 101, 106, 109, 472, 484], "secur": [169, 484], "see": [12, 13, 15, 16, 17, 22, 23, 24, 25, 26, 27, 28, 34, 44, 45, 46, 48, 52, 53, 55, 59, 60, 63, 64, 65, 67, 68, 69, 70, 71, 72, 74, 78, 82, 86, 87, 88, 90, 93, 94, 95, 96, 98, 99, 100, 101, 103, 104, 105, 106, 107, 108, 109, 116, 117, 118, 119, 120, 121, 122, 125, 127, 128, 131, 134, 139, 140, 143, 144, 145, 153, 154, 155, 156, 157, 164, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 182, 185, 186, 187, 188, 191, 194, 195, 196, 199, 201, 203, 266, 274, 307, 321, 326, 327, 329, 337, 338, 339, 344, 345, 369, 372, 390, 391, 394, 395, 403, 404, 405, 406, 410, 411, 414, 415, 419, 420, 427, 428, 430, 431, 432, 433, 434, 437, 449, 451, 460, 462, 463, 464, 465, 466, 469, 470, 472, 474, 475, 477, 484, 485], "seed": [0, 1, 3, 8, 350, 453, 468], "seedsequ": [3, 8], "seek": [169, 469], "seem": 459, "seen": 346, "segment": 284, "seldom": 116, "select": [0, 3, 8, 16, 17, 57, 163, 196, 270, 291, 356, 412, 417, 437, 468, 471, 484], "selectkind": [31, 334], "selector": 161, "self": [6, 204, 205, 206, 207, 208, 209, 211, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 247, 248, 249, 251, 252, 253, 254, 256, 257, 258, 259, 270, 284], "sell": 475, "semant": 131, "send": 471, "send_typ": 471, "sens": [81, 133, 399, 440, 477], "sep": 317, "separ": [82, 317, 398, 460, 462, 480, 483, 484], "sequenc": [18, 31, 34, 39, 40, 48, 50, 54, 56, 58, 81, 83, 95, 96, 100, 101, 105, 106, 108, 109, 131, 133, 137, 151, 163, 168, 184, 189, 198, 200, 202, 255, 334, 335, 336, 343, 366, 397, 399, 401, 413, 421, 422, 440, 478], "seri": 360, "serial": 460, "servic": [462, 475], "session": 484, "set": [12, 13, 14, 16, 17, 19, 22, 23, 24, 25, 26, 27, 28, 29, 30, 41, 44, 45, 46, 52, 53, 59, 60, 63, 64, 65, 67, 70, 71, 73, 78, 86, 87, 88, 90, 93, 116, 117, 118, 119, 120, 121, 122, 125, 127, 128, 134, 135, 139, 143, 144, 145, 153, 154, 155, 156, 157, 164, 168, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 182, 183, 184, 186, 187, 188, 191, 192, 193, 196, 197, 198, 199, 200, 201, 202, 203, 254, 266, 268, 284, 291, 307, 308, 324, 326, 327, 329, 335, 337, 338, 339, 342, 343, 344, 345, 356, 365, 390, 391, 394, 395, 403, 404, 405, 406, 410, 411, 414, 415, 419, 420, 432, 433, 437, 444, 453, 459, 460, 465, 469, 471, 472, 477, 478, 483, 484], "set_bit_gener": [3, 8], "set_devic": 471, "set_printopt": [3, 8], "set_stat": [3, 8], "set_string_funct": [3, 8], "set_titl": [466, 484], "set_xtick": [466, 484], "set_ytick": [466, 484], "setbufs": [3, 8], "setdevic": 471, "setdiff1d": [3, 8], "seterr": [3, 8], "seterrcal": [3, 8], "setfield": [0, 8], "setflag": [0, 8, 284], "setup": 469, "setxor1d": [3, 8], "sever": [460, 472, 484], "sfc64": [3, 8], "sh": [460, 484], "shall": 475, "shallow": 471, "shape": [0, 2, 3, 4, 6, 8, 12, 13, 14, 16, 17, 19, 20, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 40, 41, 43, 44, 45, 46, 48, 50, 51, 52, 53, 54, 55, 57, 58, 59, 60, 63, 64, 65, 68, 69, 70, 71, 73, 75, 76, 77, 78, 79, 81, 84, 85, 86, 87, 88, 89, 90, 92, 93, 95, 96, 97, 100, 101, 102, 105, 106, 108, 109, 113, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 131, 133, 134, 137, 138, 139, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 161, 162, 163, 166, 167, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 255, 266, 274, 284, 287, 304, 305, 309, 321, 325, 326, 327, 329, 330, 331, 333, 334, 335, 337, 338, 339, 341, 342, 343, 344, 345, 346, 347, 349, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 372, 373, 374, 375, 376, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 390, 391, 392, 393, 394, 395, 396, 398, 399, 400, 403, 404, 405, 406, 407, 408, 410, 411, 412, 413, 414, 415, 417, 419, 420, 421, 422, 423, 425, 426, 431, 432, 433, 435, 436, 437, 438, 440, 441, 442, 443, 453, 464, 468, 482, 483, 484], "share": [274, 471, 472, 484], "shares_memori": [3, 8], "sharp": 484, "sharper": 357, "shift": [97, 102, 155, 365, 394, 396], "short": [3, 8, 284, 316], "shorter": [98, 104, 340], "should": [29, 30, 34, 36, 48, 54, 67, 75, 76, 82, 83, 99, 100, 101, 106, 151, 181, 189, 192, 193, 266, 291, 333, 393, 417, 423, 435, 436, 438, 463, 464, 465, 470, 478, 483, 484], "show": [316, 460, 465, 468, 480, 484], "show_config": [3, 8], "show_runtim": [3, 8], "showcas": 484, "shown": [465, 469, 481, 483, 484], "shuffl": [3, 8], "side": [77, 126, 305, 400, 465, 471], "sigma": [359, 484], "sign": [0, 3, 8, 15, 54, 63, 203, 339, 369, 372, 415], "signal": [42, 98, 103, 351, 364, 466, 484], "signatur": [180, 181, 459], "signbit": [0, 3, 8], "signedinteg": [3, 8], "signific": 471, "significantli": [463, 469, 471, 472, 484], "signoff": 459, "similar": [34, 42, 180, 290, 357, 477, 478, 484], "similarli": 471, "simpl": [67, 82, 318, 453, 464, 471, 484, 485], "simple_mm": 484, "simpler": [472, 484], "simplest": 462, "simpli": [131, 321, 459, 460, 484], "simplifi": [274, 365, 471, 484], "simul": 471, "simultan": [284, 396], "sin": [0, 3, 8, 465], "sinc": [3, 8, 104, 287, 318, 341, 465, 466, 472, 477, 483, 484], "sine": [24, 25, 405, 406, 465], "sing": 164, "singl": [2, 3, 8, 14, 16, 17, 19, 41, 48, 49, 50, 51, 56, 67, 83, 113, 114, 115, 126, 140, 163, 165, 166, 167, 169, 183, 185, 196, 197, 200, 202, 203, 281, 284, 285, 287, 290, 291, 299, 307, 317, 335, 339, 343, 346, 347, 349, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 372, 373, 374, 375, 376, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 397, 412, 415, 421, 437, 455, 469, 472, 473, 483], "singlecomplex": [3, 8], "singleton": 89, "singular": [164, 166, 167], "sinh": [0, 3, 8], "site": 480, "situat": [351, 459, 472], "sixth": 465, "size": [2, 6, 14, 16, 17, 19, 21, 29, 30, 36, 41, 43, 48, 57, 61, 68, 69, 73, 75, 77, 83, 91, 126, 164, 168, 169, 180, 183, 184, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 290, 291, 292, 317, 335, 336, 339, 342, 343, 346, 347, 349, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 369, 371, 372, 373, 374, 375, 376, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 396, 415, 430, 435, 437, 455, 465, 471, 472, 478, 484], "skbuild_build_opt": 460, "skip": 312, "slice": [16, 17, 57, 161, 192, 193, 194, 195, 196, 199, 201, 203, 270, 284, 341, 418, 455, 465, 471], "slide": 484, "slightli": [47, 161], "slogdet": [3, 8], "slower": 483, "slowest": [388, 393], "small": [15, 161, 470, 472, 478, 481, 483], "smaller": [55, 67, 76, 94, 95, 96, 99, 100, 101, 103, 106, 107, 109, 118, 131, 184, 198, 200, 202, 335, 336, 342, 343, 455], "smallest": [164, 365], "smi": 472, "snippet": [185, 471], "so": [19, 48, 76, 116, 118, 131, 149, 168, 185, 284, 307, 317, 333, 422, 468, 475, 483, 484], "sobel": [466, 484], "sobol": 466, "softwar": [463, 464, 470, 472, 474, 475], "solut": [166, 465, 469, 471], "solv": [0, 3, 8, 453, 465, 469, 471, 484], "solver": 471, "some": [21, 34, 91, 267, 284, 291, 307, 317, 385, 441, 455, 459, 460, 464, 470, 472, 477, 478, 483, 484], "somebodi": 459, "sometim": [318, 353, 380, 477], "soon": 459, "sort": [0, 8, 32, 167, 184, 190, 198, 200, 202, 265, 305, 334, 335, 343, 400, 408, 409, 418, 434, 444, 453, 484], "sort_complex": [0, 3, 8], "sorter": [305, 400], "sortsid": 400, "sorttyp": [32, 407], "sourc": [3, 8, 189, 417, 418, 459, 461, 471, 475, 481, 484], "south": [470, 484], "space": [3, 8, 21, 97, 126, 168, 455, 465], "sparingli": 483, "spars": [137, 185], "speak": 164, "spec": 472, "special": [7, 346, 381, 388, 471, 475], "specif": [2, 79, 455, 463, 464, 470, 471, 475, 484], "specifi": [14, 19, 20, 21, 29, 30, 31, 32, 34, 41, 43, 54, 55, 58, 67, 68, 69, 75, 82, 83, 94, 95, 96, 98, 99, 100, 101, 103, 104, 106, 107, 109, 113, 126, 164, 168, 181, 183, 184, 192, 193, 194, 195, 196, 197, 198, 200, 201, 202, 203, 266, 278, 281, 287, 290, 291, 301, 324, 335, 339, 340, 341, 343, 347, 352, 353, 355, 356, 357, 358, 359, 360, 361, 363, 365, 369, 380, 384, 387, 388, 397, 398, 413, 415, 417, 418, 421, 423, 434, 435, 437, 455, 462, 468, 469, 472, 476, 480, 484], "spectral": 465, "spectrum": [97, 98], "speed": [290, 291, 317], "spelt": 48, "spent": 478, "split": [0, 3, 8, 36, 80, 132, 439, 453], "spread": [364, 437, 484], "sqrt": [0, 3, 8, 463, 466, 484], "sqrt_t": 463, "squar": [0, 3, 8, 135, 158, 159, 160, 162, 166, 180, 349, 352, 362, 363, 410, 468], "squeez": [0, 3, 8, 89], "srun": [476, 484], "ssh": 484, "stabl": [32, 161, 407], "stack": [0, 3, 8, 56, 81, 133, 181, 399, 440, 455, 472], "stackoverflow": 477, "stage": 461, "standard": [290, 309, 321, 349, 359, 364, 365, 370, 378, 379, 380, 381, 451, 453, 459, 463, 464, 470, 476, 478, 481, 484], "standard_cauchi": [0, 3, 8], "standard_exponenti": [0, 3, 8], "standard_gamma": [0, 3, 8], "standard_norm": [3, 8, 381], "standard_t": [0, 3, 8], "start": [21, 83, 99, 168, 201, 203, 277, 339, 415, 459, 462, 463, 464, 465, 470, 471, 478, 483, 484], "start_tim": 484, "state": [255, 373, 374, 376, 453], "statement": [466, 469, 477, 483, 485], "statist": [200, 202, 335, 343, 346, 444, 453], "statistician": [200, 202, 335, 343], "std": [3, 8], "stdout": 462, "stecil": 465, "stegun": 463, "stencil": [465, 467, 471], "step": [21, 83, 168, 312, 459, 460, 471, 477, 478, 483, 484], "stephen": 475, "still": [41, 164, 185, 484], "stock": [463, 484], "stoke": 471, "stop": [21, 168, 463, 464, 470, 483, 484], "storag": 317, "store": [12, 13, 22, 23, 24, 25, 26, 27, 28, 44, 45, 46, 52, 53, 59, 60, 63, 64, 65, 70, 71, 78, 86, 87, 88, 90, 93, 116, 117, 118, 119, 120, 121, 122, 125, 127, 128, 134, 139, 143, 144, 145, 146, 147, 153, 154, 155, 156, 157, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 181, 182, 186, 187, 188, 191, 312, 326, 327, 329, 332, 337, 338, 344, 345, 390, 391, 394, 395, 403, 404, 405, 406, 410, 411, 414, 419, 420, 432, 433, 465, 484], "str": [12, 13, 22, 23, 24, 25, 26, 27, 28, 31, 32, 44, 45, 46, 52, 53, 58, 59, 60, 63, 64, 65, 70, 71, 78, 82, 83, 86, 87, 88, 90, 93, 94, 95, 96, 98, 99, 100, 101, 103, 104, 105, 106, 107, 108, 109, 116, 117, 118, 119, 120, 121, 122, 125, 127, 128, 134, 139, 143, 144, 145, 153, 154, 155, 156, 157, 161, 164, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 182, 185, 186, 187, 188, 191, 200, 202, 255, 256, 266, 281, 301, 317, 319, 326, 327, 329, 334, 335, 337, 338, 340, 343, 344, 345, 390, 391, 394, 395, 403, 404, 405, 406, 407, 410, 411, 414, 419, 420, 432, 433, 455, 466, 468, 484], "str_": [3, 8], "straightforward": [483, 484], "strategi": [455, 484], "stream": 1, "streamlin": 484, "strict": [455, 475], "strictli": 164, "stride": [4, 274, 284, 307, 388, 460], "strike": [463, 484], "string": [61, 161, 169, 185, 255, 281, 282, 284, 307, 317, 348, 451, 460], "string_": [3, 8], "string_repr": 83, "strong": 459, "structur": [434, 471, 478, 483, 484], "student": 381, "studi": [385, 467], "style": [284, 286, 388, 436], "sub": [14, 16, 17, 19, 34, 36, 75, 80, 132, 183, 196, 199, 201, 266, 324, 339, 409, 415, 423, 425, 439], "subarrai": [137, 434], "subclass": 37, "subdomain": 471, "subgrid": 471, "subject": 475, "sublicens": 475, "submit": 459, "subok": [34, 49, 51, 266], "subplot": [466, 484], "subscript": [82, 83], "subsequ": 284, "subset": [356, 412, 478], "substanti": [471, 475], "substitut": [469, 475], "subtract": [0, 3, 8, 483], "subtyp": 388, "succe": 483, "success": [347, 354, 361], "suggest": [309, 459, 472, 484], "suit": [462, 484], "suitabl": [290, 305, 321, 341, 400, 418, 484], "sum": [0, 3, 8, 41, 61, 69, 79, 99, 131, 138, 164, 174, 175, 195, 201, 203, 312, 320, 349, 356, 363, 421, 423, 453, 468, 469, 484], "sum_": 164, "sum_along_axi": 415, "sum_along_diagon": 423, "sum_of_weight": 41, "summar": [200, 202, 335, 343], "summari": [3, 8, 462], "summat": [47, 82, 83], "supercomputerloc": 484, "superpod": 473, "suppli": [146, 147, 161, 163, 370], "support": [31, 32, 61, 77, 79, 82, 165, 167, 169, 181, 185, 284, 317, 324, 334, 341, 354, 392, 396, 407, 421, 425, 434, 460, 466, 474, 476, 482, 484], "suppos": 54, "sure": [291, 468, 478], "surfac": 471, "surpris": 76, "surround": 471, "svd": [0, 8], "swap": [61, 97], "swapax": [0, 3, 8], "switch": 469, "symmetr": [104, 158, 484], "symmetri": [98, 103], "synchron": [471, 484], "syntax": 291, "sysmem": 484, "system": [166, 180, 465, 469, 471, 472, 474, 477, 484], "system_mem": 472, "t": [67, 77, 113, 114, 115, 284, 321, 340, 346, 381, 425, 449, 462, 463, 464, 468, 477, 483, 484], "tabl": [164, 387], "tack": 459, "tackl": [471, 484], "tail": 357, "take": [0, 2, 3, 8, 56, 57, 151, 180, 336, 341, 388, 393, 418, 459, 472, 484], "take_along_axi": [0, 3, 8], "taken": [41, 54, 75, 76, 83, 98, 104, 106, 108, 109, 183, 197, 356, 401, 423, 425, 427, 430, 438, 466, 478], "tall": 110, "tan": [0, 3, 8], "tangent": [26, 27, 28, 419, 420], "tanh": [0, 3, 8], "taper": [42, 47, 129, 130, 152], "target": [340, 342, 460], "task": [455, 463, 464, 470, 471, 478, 484], "taylor": 161, "tdma": 465, "teach": [465, 468, 469], "technic": 472, "techniqu": 484, "tell": [312, 472], "templat": 484, "temporari": 455, "tend": 478, "tensor": [83, 421, 455, 460], "tensordot": [0, 3, 8], "tensorinv": [3, 8], "tensorsolv": [3, 8], "term": [47, 79, 83, 99, 100, 101, 104, 138, 181, 421, 438, 465, 474], "termin": [462, 469, 484], "test": [0, 14, 19, 140, 141, 143, 144, 145, 146, 147, 284, 349, 352, 453, 455, 461, 468, 470, 471, 480, 481], "test_view": 462, "test_vstack": 462, "test_wher": 462, "test_window": 462, "testsystem": 462, "text": [317, 459], "tf32": 455, "th": [72, 76, 92, 126, 137, 200, 202, 321, 335, 343, 401, 426, 429], "than": [21, 43, 47, 49, 51, 54, 55, 57, 61, 68, 69, 75, 79, 80, 94, 95, 96, 98, 99, 100, 101, 103, 104, 106, 107, 109, 110, 114, 115, 131, 138, 161, 181, 184, 185, 194, 195, 198, 200, 201, 202, 203, 291, 335, 336, 339, 340, 342, 343, 352, 356, 365, 382, 383, 387, 404, 412, 413, 415, 421, 423, 435, 438, 455, 464, 469, 477, 478, 483, 484], "thei": [13, 15, 27, 44, 45, 46, 49, 63, 68, 69, 76, 77, 78, 86, 116, 118, 119, 120, 121, 125, 127, 128, 134, 153, 154, 155, 156, 157, 174, 175, 176, 178, 179, 181, 182, 186, 187, 191, 194, 195, 305, 327, 329, 338, 347, 388, 391, 394, 400, 414, 432, 451, 466, 468, 478, 483, 484], "them": [56, 451, 459, 468, 472, 483, 484], "themselv": [274, 465], "theorem": 364, "theoret": 484, "theori": 475, "therefor": 354, "theta": 353, "thi": [12, 13, 14, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 33, 34, 37, 41, 43, 44, 45, 46, 48, 49, 51, 52, 53, 54, 55, 58, 59, 60, 63, 64, 65, 70, 71, 72, 73, 76, 77, 78, 79, 81, 82, 83, 86, 87, 88, 90, 93, 94, 95, 96, 97, 98, 99, 100, 101, 104, 105, 106, 107, 108, 109, 110, 112, 114, 115, 116, 117, 118, 119, 120, 121, 122, 125, 127, 128, 131, 133, 134, 138, 139, 143, 144, 145, 150, 151, 153, 154, 155, 156, 157, 163, 164, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 191, 192, 193, 196, 197, 198, 199, 200, 201, 202, 203, 264, 265, 266, 274, 277, 279, 283, 284, 287, 290, 291, 292, 307, 309, 312, 316, 317, 318, 321, 324, 326, 327, 329, 332, 335, 336, 337, 338, 339, 341, 342, 343, 344, 345, 349, 350, 365, 369, 372, 377, 385, 388, 390, 391, 393, 394, 395, 397, 399, 403, 404, 405, 406, 410, 411, 412, 414, 415, 417, 418, 419, 420, 421, 422, 425, 432, 433, 434, 437, 438, 440, 455, 459, 460, 462, 463, 464, 465, 466, 468, 469, 470, 471, 474, 475, 477, 480, 481, 483, 484, 485], "thing": [417, 459, 464, 484], "think": 459, "third": [80, 81, 133, 399, 421, 440, 474, 483], "those": [55, 61, 67, 162, 341, 471, 477], "though": 43, "thought": 384, "thread": [460, 462, 469, 472, 484], "three": [40, 47, 55, 200, 202, 335, 343, 434, 472, 483], "threshold": 455, "through": [14, 16, 17, 19, 34, 151, 180, 183, 185, 196, 199, 201, 266, 339, 415, 455, 484], "throughout": 471, "thu": [54, 169, 422, 483, 484], "thumb": 478, "thunk": 4, "tile": [0, 3, 8, 453], "time": [67, 76, 82, 95, 96, 100, 101, 106, 284, 287, 351, 366, 385, 397, 422, 434, 459, 462, 463, 464, 470, 471, 474, 484], "timedelta64": [3, 8], "timer": 478, "timestep": 471, "tini": 364, "titl": [463, 465], "tobyt": [0, 8, 317, 319], "tofil": [0, 3, 8], "togeth": [15, 58, 67, 99, 151, 181], "tol": [469, 483, 484], "toler": [15, 140, 469, 483], "tolist": [0, 3, 8], "too": [42, 77, 417, 472], "took": 484, "tool": [459, 471, 472, 481], "toolkit": [460, 484], "top": [460, 473], "topic": [461, 472, 482], "topographi": 471, "torchsw": 467, "tort": 475, "tostr": [0, 8], "total": [6, 66, 296, 361, 464, 468, 484], "total_chang": 468, "toward": [131, 327, 397], "trace": [0, 3, 8], "tracker": 472, "transfer": [469, 484], "transform": [61, 94, 95, 96, 98, 99, 100, 101, 103, 104, 105, 106, 107, 108, 109, 444, 453, 483], "translat": [372, 465, 483], "transport": 317, "transpos": [0, 3, 8, 67, 158, 204, 453, 464], "trapz": [3, 8], "travers": 312, "treat": [15, 54, 163, 181, 184, 185, 194, 195, 198, 201, 203, 341, 418, 422, 434], "tree": 460, "tri": [0, 3, 8], "trial": [347, 354], "triangl": [134, 425, 426, 427, 428, 429, 430, 431], "triangular": [0, 3, 8, 42, 158, 165, 464], "tridiagon": 465, "trigger": [472, 477], "trigonometr": [22, 26, 405, 453], "tril": [0, 3, 8, 180, 427, 428, 429], "tril_indic": [0, 3, 8, 428], "tril_indices_from": [0, 3, 8], "trim": 435, "trim_zero": [3, 8], "triu": [0, 3, 8, 180, 430, 431], "triu_indic": [0, 3, 8, 431], "triu_indices_from": [0, 3, 8], "trivial": 459, "true": [4, 12, 13, 14, 15, 16, 17, 18, 19, 22, 23, 24, 25, 26, 27, 28, 29, 30, 34, 35, 41, 44, 45, 46, 52, 53, 57, 59, 60, 63, 64, 65, 67, 70, 71, 76, 77, 78, 82, 83, 86, 87, 88, 90, 91, 93, 110, 116, 117, 118, 119, 120, 121, 122, 125, 127, 128, 131, 134, 137, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 153, 154, 155, 156, 157, 161, 164, 167, 168, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 182, 183, 184, 185, 186, 187, 188, 191, 192, 193, 196, 197, 198, 199, 200, 201, 202, 203, 260, 261, 266, 284, 293, 295, 300, 307, 326, 327, 329, 335, 336, 337, 338, 339, 342, 343, 344, 345, 390, 391, 394, 395, 401, 403, 404, 405, 406, 410, 411, 414, 415, 419, 420, 432, 433, 434, 437, 441, 477, 480], "true_divid": [0, 3, 8, 78], "truli": 284, "trunc": [0, 3, 8], "truncat": [57, 94, 95, 96, 98, 99, 100, 101, 103, 104, 106, 107, 109, 347, 433], "trust": [192, 193], "truth": [127, 128, 156, 157, 176, 178, 179, 451, 453], "try": [464, 465, 466, 469, 472, 477, 479, 482, 484], "tup": [56, 81, 133, 399, 440], "tupl": [2, 4, 6, 12, 13, 14, 16, 17, 19, 22, 23, 24, 25, 26, 27, 28, 36, 37, 41, 44, 45, 46, 50, 51, 52, 53, 59, 60, 63, 64, 65, 66, 70, 71, 73, 74, 78, 83, 84, 85, 86, 87, 88, 89, 90, 93, 97, 102, 113, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 131, 134, 137, 139, 143, 144, 145, 151, 153, 154, 155, 156, 157, 159, 164, 165, 167, 168, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 182, 183, 184, 185, 186, 187, 188, 191, 196, 197, 198, 199, 200, 202, 203, 255, 287, 290, 291, 308, 312, 321, 326, 327, 328, 329, 330, 331, 335, 337, 338, 339, 343, 344, 345, 346, 347, 349, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 369, 372, 373, 374, 375, 376, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 390, 391, 393, 394, 395, 396, 402, 403, 404, 405, 406, 410, 411, 412, 414, 415, 419, 420, 421, 427, 428, 430, 431, 432, 433, 436, 437, 441, 442, 443, 468, 483, 484], "tuple_of_arrai": 328, "turn": [56, 455], "tutori": [472, 482], "tweedi": 385, "twice": 483, "two": [15, 21, 35, 39, 44, 45, 46, 48, 61, 67, 75, 76, 79, 95, 99, 100, 105, 122, 138, 140, 163, 181, 291, 332, 352, 354, 357, 397, 416, 421, 423, 427, 428, 430, 431, 438, 466, 467, 468, 470, 483, 484, 485], "type": [6, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 75, 76, 77, 78, 79, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 123, 124, 125, 126, 127, 128, 129, 130, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 160, 161, 162, 163, 164, 166, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 208, 255, 266, 274, 280, 286, 287, 290, 292, 305, 307, 309, 316, 317, 318, 321, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 337, 338, 339, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 372, 373, 374, 375, 376, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 430, 431, 432, 433, 435, 436, 437, 438, 440, 441, 442, 443, 444, 453, 455, 460, 468, 471, 472, 484], "typecod": 266, "typeerror": [43, 77, 200, 202, 335, 343], "typenam": [3, 8], "typic": [15, 49, 51, 67, 98, 305, 400, 460, 471, 478, 484], "u": [167, 201, 312, 386, 459, 464, 466, 470, 472, 475, 484], "u8_arr": 76, "ubyt": [3, 8], "ufunc": [8, 12, 13, 16, 17, 22, 23, 24, 25, 26, 27, 28, 44, 45, 46, 52, 53, 55, 59, 60, 63, 64, 65, 70, 71, 78, 86, 87, 88, 90, 93, 116, 117, 118, 119, 120, 121, 122, 125, 127, 128, 134, 139, 143, 144, 145, 153, 154, 155, 156, 157, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 182, 186, 187, 188, 191, 196, 199, 201, 203, 326, 327, 329, 337, 338, 339, 344, 345, 390, 391, 394, 395, 403, 404, 405, 406, 410, 411, 414, 415, 419, 420, 432, 433], "uic": 307, "uid": 472, "uint": [3, 8], "uint16": [3, 8], "uint32": [3, 8], "uint64": [3, 8, 468], "uint8": [3, 8, 76, 333, 435], "uintc": [3, 8], "uintp": [3, 8], "uk": [463, 466], "ulonglong": [3, 8], "ultim": [284, 307], "unabl": 472, "unalt": 350, "unari": 451, "unbias": 67, "unbound": 365, "unchang": [34, 109], "undefin": [184, 198, 200, 202, 335, 341, 343, 477], "under": [164, 284, 459, 463, 464, 470, 475], "underli": [32, 359, 388, 393, 407, 463, 484], "understand": [459, 469], "undesir": 483, "undo": 435, "unexpect": 201, "unicode_": [3, 8], "unif": [373, 374, 376], "uniform": [0, 3, 8, 131, 368, 369, 372, 373, 374, 376, 386], "uniformli": 383, "uniniti": [12, 13, 22, 23, 24, 25, 26, 27, 28, 44, 45, 46, 52, 53, 59, 60, 63, 64, 65, 70, 71, 78, 84, 85, 86, 87, 88, 90, 93, 116, 117, 118, 119, 120, 121, 122, 125, 127, 128, 134, 139, 143, 144, 145, 153, 154, 155, 156, 157, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 182, 186, 187, 188, 191, 326, 327, 329, 337, 338, 344, 345, 390, 391, 394, 395, 403, 404, 405, 406, 410, 411, 414, 419, 420, 432, 433], "union1d": [3, 8], "uniqu": [0, 3, 8, 189, 364, 468], "unique_count": 434, "unique_indic": 434, "unique_invers": 434, "unit": [151, 159, 384, 385, 477], "unitari": [126, 167, 477], "uniti": 131, "univari": 370, "univers": [164, 385], "unknown": 484, "unless": [14, 19, 34, 54, 68, 69, 75, 82, 131, 164, 168, 194, 195, 201, 203, 266, 290, 333, 339, 369, 372, 373, 374, 376, 398, 415, 434, 459, 463, 464, 470], "unlik": [61, 75, 159, 160, 382], "unmodifi": [48, 473], "unnecessari": 459, "unpack": 435, "unpackbit": [0, 3, 8], "unpickl": [255, 307], "unpredict": [1, 350], "unravel": 436, "unravel_index": [0, 3, 8], "unraveled_coord": 436, "unsaf": [58, 82, 138, 181, 266, 332, 421, 438], "unsign": [76, 203, 339, 415], "unsignedinteg": [3, 8], "unsupport": 477, "until": [48, 83, 468, 483, 484], "unwrap": [3, 8], "up": [81, 115, 118, 133, 290, 291, 399, 418, 434, 440, 455, 460, 466, 471, 472, 477, 478, 484], "updat": [284, 307, 340, 341, 469, 471, 484], "upon": 459, "upper": [55, 92, 131, 158, 165, 307, 382, 383, 429, 430, 431], "uppoer": 165, "us": [2, 6, 16, 17, 20, 21, 31, 32, 42, 47, 48, 54, 58, 61, 67, 68, 69, 72, 73, 75, 76, 79, 82, 83, 94, 95, 96, 98, 99, 100, 101, 103, 104, 106, 107, 109, 126, 129, 130, 136, 140, 151, 152, 158, 161, 163, 164, 168, 181, 183, 184, 185, 194, 195, 196, 197, 198, 200, 201, 202, 203, 212, 213, 268, 274, 284, 290, 291, 307, 309, 317, 324, 334, 335, 336, 339, 341, 343, 347, 349, 351, 372, 377, 385, 388, 389, 392, 393, 396, 401, 407, 415, 417, 418, 423, 434, 436, 437, 438, 451, 455, 459, 460, 462, 463, 464, 465, 466, 469, 470, 471, 473, 474, 475, 477, 480, 481, 482, 485], "usabl": 116, "usag": [94, 95, 96, 98, 99, 100, 101, 103, 104, 105, 106, 107, 108, 109, 159, 160, 166, 459, 461, 472, 482], "use_explicit": 161, "use_openmp": 460, "use_thread": 460, "user": [284, 307, 460, 469, 471, 472, 473, 484], "ushort": [3, 8], "usual": [73, 459, 472, 485], "util": [462, 463, 464, 470, 472, 484], "v": [48, 61, 72, 305, 400, 444, 462, 463, 465], "v1": 463, "v100": 484, "val": [110, 136, 150, 306, 333, 336, 389, 435, 483, 484], "valid": [48, 61, 180, 427, 428, 430, 431, 459, 471], "valu": [2, 12, 13, 14, 15, 16, 17, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 35, 41, 42, 43, 44, 45, 46, 47, 52, 53, 54, 55, 59, 60, 63, 64, 65, 66, 67, 68, 69, 70, 71, 76, 77, 78, 82, 86, 87, 88, 90, 91, 92, 93, 99, 107, 110, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 134, 137, 139, 140, 142, 143, 144, 145, 146, 147, 148, 149, 151, 152, 153, 154, 155, 156, 157, 158, 162, 164, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 186, 187, 188, 191, 192, 193, 194, 195, 196, 197, 199, 200, 201, 202, 203, 206, 207, 214, 215, 217, 218, 220, 221, 222, 223, 224, 225, 226, 227, 231, 232, 233, 234, 235, 236, 237, 239, 240, 241, 242, 243, 244, 245, 247, 248, 249, 252, 253, 254, 257, 258, 259, 262, 263, 266, 269, 280, 283, 291, 293, 295, 301, 305, 307, 309, 312, 326, 327, 329, 333, 336, 337, 338, 339, 340, 341, 342, 344, 345, 346, 347, 349, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 372, 373, 374, 375, 376, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 390, 391, 392, 393, 394, 395, 396, 398, 400, 403, 404, 405, 406, 410, 411, 414, 415, 417, 418, 419, 420, 423, 424, 432, 433, 434, 435, 437, 441, 451, 453, 455, 463, 465, 468, 469, 470, 471, 472, 482, 483, 484], "valuabl": 471, "valueerror": [41, 43, 48, 54, 57, 75, 77, 110, 164, 192, 193, 196, 199, 349, 367, 409, 412, 423], "van": 164, "vander": [3, 8], "vanilla": 455, "var": [0, 3, 8, 455], "vararg": 126, "vari": [32, 67, 137, 407, 465, 466, 471, 484], "variabl": [67, 166, 192, 193, 196, 199, 291, 349, 351, 357, 364, 455, 469, 471, 472, 476, 478, 480, 484], "varianc": [67, 323, 349, 370, 437, 453], "variant": 484, "variat": [200, 202, 335, 343, 352, 484], "varieti": 2, "variou": [164, 453, 471, 481], "vdot": [0, 3, 8], "vector": [3, 8, 67, 79, 138, 163, 164, 181, 185, 321, 332, 438, 453, 484, 485], "vector1": 484, "vector2": 484, "venv": [474, 484], "verbatim": 459, "verbos": [462, 469, 472, 484], "veri": [15, 42, 290, 478], "verifi": 158, "version": [66, 72, 112, 184, 198, 200, 202, 255, 335, 343, 365, 436, 459, 463, 464, 470, 471, 474, 484], "vertic": [397, 399, 439, 440, 471], "vh": 167, "via": [12, 13, 22, 23, 24, 25, 26, 27, 28, 44, 45, 46, 52, 53, 59, 60, 63, 64, 65, 70, 71, 78, 86, 87, 88, 90, 93, 116, 117, 118, 119, 120, 121, 122, 125, 127, 128, 134, 139, 143, 144, 145, 153, 154, 155, 156, 157, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 182, 186, 187, 188, 191, 284, 318, 326, 327, 329, 337, 338, 344, 345, 390, 391, 394, 395, 403, 404, 405, 406, 410, 411, 414, 419, 420, 425, 432, 433, 462, 472, 476, 484], "view": [0, 8, 39, 40, 49, 51, 72, 89, 113, 114, 115, 185, 189, 280, 284, 287, 314, 321, 341, 393, 409, 412, 416, 418, 424, 436, 472, 482], "violat": 455, "vision": 484, "visit": [459, 472], "vital": 484, "void": [3, 8, 290], "volatil": [463, 484], "von": 384, "vonmis": [0, 3, 8], "vpi": 466, "vsplit": [0, 3, 8, 399, 440], "vstack": [0, 3, 8, 399, 483], "vv": 462, "w": [160, 284, 307], "wa": [47, 79, 138, 163, 361, 385, 398, 421, 438, 459, 466, 469, 472], "wai": [83, 99, 100, 101, 106, 181, 356, 435, 459, 460, 462, 463, 464, 465, 470, 475, 476, 483], "waital": 471, "wald": [0, 3, 8], "walk": 460, "want": [459, 460, 470, 484], "warm": 478, "warn": [180, 192, 193, 196, 199, 340, 444, 469, 484], "warranti": [463, 464, 470, 475], "wasilla": 475, "water": 471, "wavenumb": 465, "we": [8, 54, 67, 312, 459, 460, 463, 464, 465, 466, 468, 469, 470, 471, 472, 483, 484], "weak": 473, "weibul": [0, 3, 8, 200, 202, 335, 343, 375], "weight": [41, 43, 67, 129, 130, 131, 365, 468], "welcom": [8, 459], "well": [82, 166, 307, 339, 462, 464, 471], "were": [58, 181, 305, 370, 400, 413, 472, 475, 480, 484], "west": [470, 484], "wget": 484, "what": [58, 72, 82, 94, 95, 96, 98, 99, 100, 101, 103, 104, 105, 106, 107, 108, 109, 138, 141, 181, 266, 332, 413, 421, 438, 470, 480, 483, 484], "wheel": 484, "when": [18, 21, 29, 30, 34, 41, 48, 57, 68, 69, 76, 106, 131, 158, 161, 164, 166, 168, 180, 181, 184, 185, 192, 193, 194, 195, 196, 198, 199, 201, 274, 290, 291, 307, 312, 317, 349, 350, 377, 388, 401, 417, 418, 455, 459, 460, 469, 471, 476, 477, 478, 480, 483, 484], "whenev": [424, 455, 483], "where": [0, 3, 8, 12, 13, 14, 16, 17, 19, 21, 22, 23, 24, 25, 26, 27, 28, 33, 39, 40, 44, 45, 46, 48, 52, 53, 54, 55, 57, 59, 60, 63, 64, 65, 67, 70, 71, 76, 78, 79, 86, 87, 88, 89, 90, 91, 92, 93, 98, 104, 106, 116, 117, 118, 119, 120, 121, 122, 125, 127, 128, 133, 134, 137, 139, 140, 141, 143, 144, 145, 146, 147, 148, 153, 154, 155, 156, 157, 158, 165, 167, 168, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 182, 183, 186, 187, 188, 191, 196, 197, 199, 201, 203, 260, 261, 293, 295, 300, 305, 313, 326, 327, 329, 332, 336, 337, 338, 339, 342, 344, 345, 346, 347, 352, 353, 354, 361, 363, 365, 382, 390, 391, 394, 395, 400, 401, 403, 404, 405, 406, 409, 410, 411, 414, 415, 419, 420, 423, 432, 433, 437, 463, 465, 466, 468, 471, 475, 477, 483, 484], "wherea": 477, "whether": [14, 15, 19, 35, 72, 77, 140, 141, 158, 168, 201, 307, 436, 459, 462, 475, 480, 483, 484], "which": [1, 12, 13, 14, 16, 17, 19, 20, 22, 23, 24, 25, 26, 27, 28, 29, 30, 34, 41, 44, 45, 46, 48, 52, 53, 54, 57, 58, 59, 60, 61, 63, 64, 65, 66, 67, 68, 69, 70, 71, 73, 75, 76, 77, 78, 82, 83, 86, 87, 88, 90, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 113, 116, 117, 118, 119, 120, 121, 122, 125, 126, 127, 128, 133, 134, 139, 143, 144, 145, 146, 147, 150, 153, 154, 155, 156, 157, 158, 159, 160, 161, 164, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 186, 187, 188, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 266, 274, 287, 290, 307, 309, 324, 326, 327, 329, 333, 335, 337, 338, 339, 340, 343, 344, 345, 351, 356, 369, 372, 373, 374, 375, 376, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 390, 391, 392, 394, 395, 396, 398, 401, 403, 404, 405, 406, 409, 410, 411, 413, 414, 415, 417, 419, 420, 423, 425, 426, 427, 430, 432, 433, 435, 437, 441, 455, 459, 466, 469, 471, 472, 475, 478, 480, 483, 484], "while": [67, 109, 163, 185, 198, 200, 202, 203, 284, 339, 365, 396, 415, 425, 468, 472, 478, 483, 484], "whilst": 38, "who": [3, 8, 459], "whole": 459, "whom": 475, "whose": [34, 75, 91, 92, 110, 180, 183, 189, 196, 197, 199, 203, 269, 333, 423, 428, 431, 436, 437], "why": [104, 459], "wide": [351, 472], "width": [81, 131, 133, 364, 399, 440, 484], "wiki": 351, "wikipedia": 351, "window": [42, 47, 129, 130, 152, 444, 453], "wise": [12, 13, 15, 22, 23, 24, 25, 26, 27, 28, 44, 45, 46, 52, 53, 59, 60, 63, 64, 65, 78, 81, 86, 93, 94, 95, 96, 98, 99, 100, 101, 103, 104, 105, 106, 107, 108, 109, 116, 117, 119, 120, 121, 127, 128, 132, 133, 139, 140, 143, 144, 145, 146, 147, 154, 156, 157, 159, 160, 170, 171, 172, 176, 177, 178, 179, 182, 186, 187, 188, 191, 272, 326, 327, 329, 337, 338, 390, 391, 399, 403, 404, 405, 406, 410, 411, 414, 419, 420, 432, 433, 439, 440, 484], "wish": 72, "within": [12, 13, 15, 21, 22, 23, 24, 25, 26, 27, 28, 44, 45, 46, 52, 53, 59, 60, 63, 64, 65, 70, 71, 78, 82, 86, 87, 88, 90, 93, 99, 100, 101, 104, 106, 116, 117, 118, 119, 120, 121, 122, 125, 127, 128, 134, 139, 140, 143, 144, 145, 153, 154, 155, 156, 157, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 181, 182, 186, 187, 188, 191, 266, 326, 327, 329, 337, 338, 344, 345, 356, 383, 390, 391, 394, 395, 403, 404, 405, 406, 410, 411, 414, 419, 420, 432, 433, 484], "without": [42, 48, 57, 79, 84, 138, 307, 321, 393, 459, 463, 464, 470, 471, 475, 479, 482, 484], "word": [21, 99, 100, 101, 104, 106, 383, 425], "work": [48, 57, 290, 340, 451, 459, 460, 463, 477, 478, 483, 484], "worker": [462, 472, 484], "workflow": 460, "workload": 484, "workstat": 484, "worri": 484, "wors": 47, "would": [32, 58, 79, 138, 163, 180, 264, 265, 290, 305, 332, 400, 409, 413, 421, 438, 455, 463, 464, 469, 470, 471, 483, 484], "wrap": [54, 110, 340, 350, 417], "wrapper": 484, "write": [49, 72, 110, 185, 307, 317, 393, 463, 464, 470, 473, 484], "writeabl": [4, 284, 307], "writebackifcopi": [284, 307], "written": [110, 284, 307, 317, 475, 483, 485], "wrong": 57, "www": [463, 464, 470], "x": [12, 22, 23, 24, 25, 26, 28, 43, 52, 53, 59, 60, 64, 65, 67, 70, 71, 76, 77, 87, 88, 90, 93, 95, 96, 97, 100, 101, 102, 109, 117, 122, 131, 135, 139, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 161, 164, 166, 170, 171, 172, 173, 177, 180, 185, 188, 284, 307, 312, 326, 337, 344, 345, 346, 351, 386, 390, 395, 403, 404, 405, 406, 410, 411, 419, 420, 433, 441, 463, 465, 466, 468, 469, 477, 483, 484, 485], "x1": [13, 27, 44, 45, 46, 63, 78, 86, 116, 118, 119, 120, 121, 125, 127, 128, 134, 153, 154, 155, 156, 157, 174, 175, 176, 178, 179, 182, 185, 186, 187, 191, 327, 329, 338, 391, 394, 414, 432], "x2": [13, 27, 44, 45, 46, 63, 78, 86, 116, 118, 119, 120, 121, 125, 127, 128, 134, 153, 154, 155, 156, 157, 174, 175, 176, 178, 179, 182, 185, 186, 187, 191, 327, 329, 338, 391, 394, 414, 432], "x86": 484, "x86_64": [474, 484], "x_": 469, "x_1": 67, "x_2": 67, "x_current": 483, "x_i": 67, "x_j": 67, "x_n": 67, "x_prev": 483, "xeon": 484, "xi": 185, "xk": 469, "xk_old": 469, "xlabel": [463, 465], "xn": 185, "xor": [46, 179], "xorwow": 350, "xv": 185, "xy": 185, "y": [13, 27, 44, 45, 46, 63, 67, 78, 86, 97, 102, 116, 118, 119, 120, 121, 125, 127, 128, 134, 140, 149, 153, 154, 155, 156, 157, 174, 175, 176, 178, 179, 182, 185, 186, 187, 191, 200, 202, 286, 318, 327, 329, 335, 338, 343, 388, 391, 394, 397, 414, 432, 441, 466, 468, 469, 483, 484, 485], "y1": [122, 188], "y2": [122, 188], "year": [364, 484], "yellow": 468, "yet": [8, 434], "yield": [29, 30, 68, 69, 194, 195, 201, 441, 478, 484], "ylabel": [463, 465], "you": [49, 72, 82, 181, 184, 185, 198, 291, 417, 459, 460, 463, 464, 465, 468, 469, 470, 471, 472, 473, 474, 481, 484, 485], "your": [459, 472, 473, 484, 485], "yueh": 471, "yv": 185, "z": [18, 290, 351, 370, 483, 485], "zero": [0, 3, 8, 18, 33, 41, 42, 47, 61, 66, 76, 92, 94, 95, 96, 97, 98, 99, 100, 101, 103, 104, 106, 107, 109, 112, 129, 130, 141, 142, 146, 147, 148, 149, 152, 159, 160, 162, 164, 180, 195, 203, 298, 325, 328, 333, 352, 365, 404, 425, 426, 429, 435, 437, 443, 465, 468, 470, 484], "zero_point": 468, "zerodivisionerror": 41, "zeros_lik": [0, 3, 8], "zeta": 387, "zipf": [0, 3, 8], "zsh": 484}, "titles": ["&lt;no title&gt;", "cupynumeric.random.BitGenerator", "cupynumeric.random.Generator", "Convolve and Correlate", "cupynumeric.ndarray", "Binary operations", "cupynumeric.broadcast", "Classes", "Project comparisons", "Array creation routines", "Data type routines", "Discrete Fourier Transform (<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">cupynumeric.fft</span></code>)", "cupynumeric.absolute", "cupynumeric.add", "cupynumeric.all", "cupynumeric.allclose", "cupynumeric.amax", "cupynumeric.amin", "cupynumeric.angle", "cupynumeric.any", "cupynumeric.append", "cupynumeric.arange", "cupynumeric.arccos", "cupynumeric.arccosh", "cupynumeric.arcsin", "cupynumeric.arcsinh", "cupynumeric.arctan", "cupynumeric.arctan2", "cupynumeric.arctanh", "cupynumeric.argmax", "cupynumeric.argmin", "cupynumeric.argpartition", "cupynumeric.argsort", "cupynumeric.argwhere", "cupynumeric.array", "cupynumeric.array_equal", "cupynumeric.array_split", "cupynumeric.asarray", "cupynumeric.atleast_1d", "cupynumeric.atleast_2d", "cupynumeric.atleast_3d", "cupynumeric.average", "cupynumeric.bartlett", "cupynumeric.bincount", "cupynumeric.bitwise_and", "cupynumeric.bitwise_or", "cupynumeric.bitwise_xor", "cupynumeric.blackman", "cupynumeric.block", "cupynumeric.broadcast_arrays", "cupynumeric.broadcast_shapes", "cupynumeric.broadcast_to", "cupynumeric.cbrt", "cupynumeric.ceil", "cupynumeric.choose", "cupynumeric.clip", "cupynumeric.column_stack", "cupynumeric.compress", "cupynumeric.concatenate", "cupynumeric.conj", "cupynumeric.conjugate", "cupynumeric.convolve", "cupynumeric.copy", "cupynumeric.copysign", "cupynumeric.cos", "cupynumeric.cosh", "cupynumeric.count_nonzero", "cupynumeric.cov", "cupynumeric.cumprod", "cupynumeric.cumsum", "cupynumeric.deg2rad", "cupynumeric.degrees", "cupynumeric.diag", "cupynumeric.diag_indices", "cupynumeric.diag_indices_from", "cupynumeric.diagonal", "cupynumeric.diff", "cupynumeric.digitize", "cupynumeric.divide", "cupynumeric.dot", "cupynumeric.dsplit", "cupynumeric.dstack", "cupynumeric.einsum", "cupynumeric.einsum_path", "cupynumeric.empty", "cupynumeric.empty_like", "cupynumeric.equal", "cupynumeric.exp", "cupynumeric.exp2", "cupynumeric.expand_dims", "cupynumeric.expm1", "cupynumeric.extract", "cupynumeric.eye", "cupynumeric.fabs", "cupynumeric.fft.fft", "cupynumeric.fft.fft2", "cupynumeric.fft.fftn", "cupynumeric.fft.fftshift", "cupynumeric.fft.hfft", "cupynumeric.fft.ifft", "cupynumeric.fft.ifft2", "cupynumeric.fft.ifftn", "cupynumeric.fft.ifftshift", "cupynumeric.fft.ihfft", "cupynumeric.fft.irfft", "cupynumeric.fft.irfft2", "cupynumeric.fft.irfftn", "cupynumeric.fft.rfft", "cupynumeric.fft.rfft2", "cupynumeric.fft.rfftn", "cupynumeric.fill_diagonal", "cupynumeric.find_common_type", "cupynumeric.flatnonzero", "cupynumeric.flip", "cupynumeric.fliplr", "cupynumeric.flipud", "cupynumeric.float_power", "cupynumeric.floor", "cupynumeric.floor_divide", "cupynumeric.fmax", "cupynumeric.fmin", "cupynumeric.fmod", "cupynumeric.frexp", "cupynumeric.full", "cupynumeric.full_like", "cupynumeric.gcd", "cupynumeric.gradient", "cupynumeric.greater", "cupynumeric.greater_equal", "cupynumeric.hamming", "cupynumeric.hanning", "cupynumeric.histogram", "cupynumeric.hsplit", "cupynumeric.hstack", "cupynumeric.hypot", "cupynumeric.identity", "cupynumeric.imag", "cupynumeric.indices", "cupynumeric.inner", "cupynumeric.invert", "cupynumeric.isclose", "cupynumeric.iscomplex", "cupynumeric.iscomplexobj", "cupynumeric.isfinite", "cupynumeric.isinf", "cupynumeric.isnan", "cupynumeric.isneginf", "cupynumeric.isposinf", "cupynumeric.isreal", "cupynumeric.isrealobj", "cupynumeric.isscalar", "cupynumeric.ix_", "cupynumeric.kaiser", "cupynumeric.lcm", "cupynumeric.ldexp", "cupynumeric.left_shift", "cupynumeric.less", "cupynumeric.less_equal", "cupynumeric.linalg.cholesky", "cupynumeric.linalg.eig", "cupynumeric.linalg.eigvals", "cupynumeric.linalg.expm", "cupynumeric.linalg.matrix_power", "cupynumeric.linalg.multi_dot", "cupynumeric.linalg.norm", "cupynumeric.linalg.qr", "cupynumeric.linalg.solve", "cupynumeric.linalg.svd", "cupynumeric.linspace", "cupynumeric.load", "cupynumeric.log", "cupynumeric.log10", "cupynumeric.log1p", "cupynumeric.log2", "cupynumeric.logaddexp", "cupynumeric.logaddexp2", "cupynumeric.logical_and", "cupynumeric.logical_not", "cupynumeric.logical_or", "cupynumeric.logical_xor", "cupynumeric.mask_indices", "cupynumeric.matmul", "cupynumeric.maximum", "cupynumeric.mean", "cupynumeric.median", "cupynumeric.meshgrid", "cupynumeric.minimum", "cupynumeric.mod", "cupynumeric.modf", "cupynumeric.moveaxis", "cupynumeric.msort", "cupynumeric.multiply", "cupynumeric.nanargmax", "cupynumeric.nanargmin", "cupynumeric.nancumprod", "cupynumeric.nancumsum", "cupynumeric.nanmax", "cupynumeric.nanmean", "cupynumeric.nanmedian", "cupynumeric.nanmin", "cupynumeric.nanpercentile", "cupynumeric.nanprod", "cupynumeric.nanquantile", "cupynumeric.nansum", "cupynumeric.ndarray.T", "cupynumeric.ndarray.__abs__", "cupynumeric.ndarray.__add__", "cupynumeric.ndarray.__and__", "cupynumeric.ndarray.__array__", "cupynumeric.ndarray.__bool__", "cupynumeric.ndarray.__complex__", "cupynumeric.ndarray.__contains__", "cupynumeric.ndarray.__copy__", "cupynumeric.ndarray.__deepcopy__", "cupynumeric.ndarray.__divmod__", "cupynumeric.ndarray.__eq__", "cupynumeric.ndarray.__float__", "cupynumeric.ndarray.__floordiv__", "cupynumeric.ndarray.__ge__", "cupynumeric.ndarray.__getitem__", "cupynumeric.ndarray.__gt__", "cupynumeric.ndarray.__iadd__", "cupynumeric.ndarray.__iand__", "cupynumeric.ndarray.__ifloordiv__", "cupynumeric.ndarray.__ilshift__", "cupynumeric.ndarray.__imatmul__", "cupynumeric.ndarray.__imod__", "cupynumeric.ndarray.__imul__", "cupynumeric.ndarray.__index__", "cupynumeric.ndarray.__int__", "cupynumeric.ndarray.__invert__", "cupynumeric.ndarray.__ior__", "cupynumeric.ndarray.__ipow__", "cupynumeric.ndarray.__irshift__", "cupynumeric.ndarray.__isub__", "cupynumeric.ndarray.__itruediv__", "cupynumeric.ndarray.__ixor__", "cupynumeric.ndarray.__le__", "cupynumeric.ndarray.__len__", "cupynumeric.ndarray.__lshift__", "cupynumeric.ndarray.__lt__", "cupynumeric.ndarray.__matmul__", "cupynumeric.ndarray.__mod__", "cupynumeric.ndarray.__mul__", "cupynumeric.ndarray.__ne__", "cupynumeric.ndarray.__neg__", "cupynumeric.ndarray.__new__", "cupynumeric.ndarray.__or__", "cupynumeric.ndarray.__pos__", "cupynumeric.ndarray.__pow__", "cupynumeric.ndarray.__reduce__", "cupynumeric.ndarray.__repr__", "cupynumeric.ndarray.__rmatmul__", "cupynumeric.ndarray.__rshift__", "cupynumeric.ndarray.__setitem__", "cupynumeric.ndarray.__setstate__", "cupynumeric.ndarray.__str__", "cupynumeric.ndarray.__sub__", "cupynumeric.ndarray.__truediv__", "cupynumeric.ndarray.__xor__", "cupynumeric.ndarray.all", "cupynumeric.ndarray.any", "cupynumeric.ndarray.argmax", "cupynumeric.ndarray.argmin", "cupynumeric.ndarray.argpartition", "cupynumeric.ndarray.argsort", "cupynumeric.ndarray.astype", "cupynumeric.ndarray.base", "cupynumeric.ndarray.choose", "cupynumeric.ndarray.clip", "cupynumeric.ndarray.compress", "cupynumeric.ndarray.conj", "cupynumeric.ndarray.conjugate", "cupynumeric.ndarray.copy", "cupynumeric.ndarray.ctypes", "cupynumeric.ndarray.cumprod", "cupynumeric.ndarray.cumsum", "cupynumeric.ndarray.data", "cupynumeric.ndarray.diagonal", "cupynumeric.ndarray.dot", "cupynumeric.ndarray.dtype", "cupynumeric.ndarray.dump", "cupynumeric.ndarray.dumps", "cupynumeric.ndarray.fill", "cupynumeric.ndarray.flags", "cupynumeric.ndarray.flat", "cupynumeric.ndarray.flatten", "cupynumeric.ndarray.flip", "cupynumeric.ndarray.getfield", "cupynumeric.ndarray.imag", "cupynumeric.ndarray.item", "cupynumeric.ndarray.itemset", "cupynumeric.ndarray.itemsize", "cupynumeric.ndarray.max", "cupynumeric.ndarray.mean", "cupynumeric.ndarray.min", "cupynumeric.ndarray.nbytes", "cupynumeric.ndarray.ndim", "cupynumeric.ndarray.nonzero", "cupynumeric.ndarray.partition", "cupynumeric.ndarray.prod", "cupynumeric.ndarray.put", "cupynumeric.ndarray.ravel", "cupynumeric.ndarray.real", "cupynumeric.ndarray.reshape", "cupynumeric.ndarray.searchsorted", "cupynumeric.ndarray.setfield", "cupynumeric.ndarray.setflags", "cupynumeric.ndarray.shape", "cupynumeric.ndarray.size", "cupynumeric.ndarray.sort", "cupynumeric.ndarray.squeeze", "cupynumeric.ndarray.strides", "cupynumeric.ndarray.sum", "cupynumeric.ndarray.swapaxes", "cupynumeric.ndarray.take", "cupynumeric.ndarray.tobytes", "cupynumeric.ndarray.tofile", "cupynumeric.ndarray.tolist", "cupynumeric.ndarray.tostring", "cupynumeric.ndarray.trace", "cupynumeric.ndarray.transpose", "cupynumeric.ndarray.unique", "cupynumeric.ndarray.var", "cupynumeric.ndarray.view", "cupynumeric.ndim", "cupynumeric.negative", "cupynumeric.nextafter", "cupynumeric.nonzero", "cupynumeric.not_equal", "cupynumeric.ones", "cupynumeric.ones_like", "cupynumeric.outer", "cupynumeric.packbits", "cupynumeric.partition", "cupynumeric.percentile", "cupynumeric.place", "cupynumeric.positive", "cupynumeric.power", "cupynumeric.prod", "cupynumeric.put", "cupynumeric.put_along_axis", "cupynumeric.putmask", "cupynumeric.quantile", "cupynumeric.rad2deg", "cupynumeric.radians", "cupynumeric.random.beta", "cupynumeric.random.binomial", "cupynumeric.random.bytes", "cupynumeric.random.chisquare", "cupynumeric.random.default_rng", "cupynumeric.random.exponential", "cupynumeric.random.f", "cupynumeric.random.gamma", "cupynumeric.random.geometric", "cupynumeric.random.gumbel", "cupynumeric.random.hypergeometric", "cupynumeric.random.laplace", "cupynumeric.random.logistic", "cupynumeric.random.lognormal", "cupynumeric.random.logseries", "cupynumeric.random.negative_binomial", "cupynumeric.random.noncentral_chisquare", "cupynumeric.random.noncentral_f", "cupynumeric.random.normal", "cupynumeric.random.pareto", "cupynumeric.random.poisson", "cupynumeric.random.power", "cupynumeric.random.rand", "cupynumeric.random.randint", "cupynumeric.random.randn", "cupynumeric.random.random", "cupynumeric.random.random_integers", "cupynumeric.random.random_sample", "cupynumeric.random.ranf", "cupynumeric.random.rayleigh", "cupynumeric.random.sample", "cupynumeric.random.seed", "cupynumeric.random.standard_cauchy", "cupynumeric.random.standard_exponential", "cupynumeric.random.standard_gamma", "cupynumeric.random.standard_t", "cupynumeric.random.triangular", "cupynumeric.random.uniform", "cupynumeric.random.vonmises", "cupynumeric.random.wald", "cupynumeric.random.weibull", "cupynumeric.random.zipf", "cupynumeric.ravel", "cupynumeric.real", "cupynumeric.reciprocal", "cupynumeric.remainder", "cupynumeric.repeat", "cupynumeric.reshape", "cupynumeric.right_shift", "cupynumeric.rint", "cupynumeric.roll", "cupynumeric.rot90", "cupynumeric.round", "cupynumeric.row_stack", "cupynumeric.searchsorted", "cupynumeric.select", "cupynumeric.shape", "cupynumeric.sign", "cupynumeric.signbit", "cupynumeric.sin", "cupynumeric.sinh", "cupynumeric.sort", "cupynumeric.sort_complex", "cupynumeric.split", "cupynumeric.sqrt", "cupynumeric.square", "cupynumeric.squeeze", "cupynumeric.stack", "cupynumeric.subtract", "cupynumeric.sum", "cupynumeric.swapaxes", "cupynumeric.take", "cupynumeric.take_along_axis", "cupynumeric.tan", "cupynumeric.tanh", "cupynumeric.tensordot", "cupynumeric.tile", "cupynumeric.trace", "cupynumeric.transpose", "cupynumeric.tri", "cupynumeric.tril", "cupynumeric.tril_indices", "cupynumeric.tril_indices_from", "cupynumeric.triu", "cupynumeric.triu_indices", "cupynumeric.triu_indices_from", "cupynumeric.true_divide", "cupynumeric.trunc", "cupynumeric.unique", "cupynumeric.unpackbits", "cupynumeric.unravel_index", "cupynumeric.var", "cupynumeric.vdot", "cupynumeric.vsplit", "cupynumeric.vstack", "cupynumeric.where", "cupynumeric.zeros", "cupynumeric.zeros_like", "API Reference", "Indexing routines", "Input and output", "Linear algebra (<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">cupynumeric.linalg</span></code>)", "Logic functions", "Array manipulation routines", "Mathematical functions", "The N-Dimensional array (<code class=\"xref py py-class docutils literal notranslate\"><span class=\"pre\">cupynumeric.ndarray</span></code>)", "Random sampling (<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">cupynumeric.random</span></code>)", "Routines", "Set routines", "Settings", "Sorting, searching, and counting", "Statistics", "Window functions", "Contributing to cuPyNumeric", "Building from source", "Developer guide", "Running tests", "Black-Scholes options pricing", "Cholesky decomposition", "Compact Finite Difference Scheme", "Edge Detection", "Examples", "K-Means Clustering Algorithm", "Newton Raphson Method In Two Dimensions", "Jacobi stencil", "TorchSWE case study", "Frequently Asked Questions", "NVIDIA cuPyNumeric", "Installation", "Third-party notices", "Advanced topics", "Differences with Numpy", "Performance Benchmarking", "Howtos", "Measure API coverage", "Trying Numpy code without changes", "User guide", "Best practices", "Tutorial", "Usage"], "titleterms": {"1": 484, "2": 484, "3": 484, "In": 469, "Of": 472, "The": [451, 459], "__abs__": 205, "__add__": 206, "__and__": 207, "__array__": 208, "__bool__": 209, "__complex__": 210, "__contains__": 211, "__copy__": 212, "__deepcopy__": 213, "__divmod__": 214, "__eq__": 215, "__float__": 216, "__floordiv__": 217, "__ge__": 218, "__getitem__": 219, "__gt__": 220, "__iadd__": 221, "__iand__": 222, "__ifloordiv__": 223, "__ilshift__": 224, "__imatmul__": 225, "__imod__": 226, "__imul__": 227, "__index__": 228, "__int__": 229, "__invert__": 230, "__ior__": 231, "__ipow__": 232, "__irshift__": 233, "__isub__": 234, "__itruediv__": 235, "__ixor__": 236, "__le__": 237, "__len__": 238, "__lshift__": 239, "__lt__": 240, "__matmul__": 241, "__mod__": 242, "__mul__": 243, "__ne__": 244, "__neg__": 245, "__new__": 246, "__or__": 247, "__pos__": 248, "__pow__": 249, "__reduce__": 250, "__repr__": 251, "__rmatmul__": 252, "__rshift__": 253, "__setitem__": 254, "__setstate__": 255, "__str__": 256, "__sub__": 257, "__truediv__": 258, "__xor__": 259, "about": 472, "absolut": 12, "add": 13, "advanc": [3, 460, 476, 483, 484], "algebra": [8, 447], "algorithm": 468, "all": [14, 260], "allclos": 15, "alloc": [483, 484], "amax": 16, "amin": 17, "an": 483, "angl": 18, "ani": [19, 261], "anoth": 483, "anti": 472, "api": [8, 444, 480, 483], "append": 20, "applic": [472, 483], "ar": 472, "arang": 21, "arcco": 22, "arccosh": 23, "arcsin": 24, "arcsinh": 25, "arctan": 26, "arctan2": 27, "arctanh": 28, "argmax": [29, 262], "argmin": [30, 263], "argpartit": [31, 264], "argsort": [32, 265], "argument": [472, 476, 477, 483], "argwher": 33, "arithmet": [450, 451], "arrai": [3, 8, 9, 34, 445, 448, 449, 451, 483, 484], "array_equ": 35, "array_split": 36, "asarrai": 37, "ask": 472, "astyp": 266, "atleast_1d": 38, "atleast_2d": 39, "atleast_3d": 40, "attribut": 451, "avail": 472, "averag": [41, 457], "avoid": [483, 484], "background": [465, 466, 468, 469], "bartlett": 42, "base": [267, 483, 484], "basic": [449, 460, 462, 484], "begin": 459, "behavior": 477, "benchmark": 478, "best": [483, 484], "beta": 346, "better": 483, "between": 472, "binari": [5, 446], "bincount": 43, "binomi": 347, "bit": [3, 5, 452], "bitgener": 1, "bitwise_and": 44, "bitwise_or": 45, "bitwise_xor": 46, "black": [463, 484], "blackman": 47, "block": [48, 483], "boolean": [483, 484], "broadcast": 6, "broadcast_arrai": 49, "broadcast_shap": 50, "broadcast_to": 51, "build": [9, 460, 474], "byte": 348, "calcul": 451, "call": 480, "can": 472, "case": 471, "cbrt": 52, "ceil": 53, "ceph": 475, "certif": 459, "chang": [449, 468, 481], "chisquar": 349, "choleski": [158, 464], "choos": [54, 268], "class": 7, "clip": [55, 269], "cluster": [468, 484], "cmake": 460, "co": 64, "code": [459, 472, 481, 484], "column_stack": 56, "compact": 465, "comparison": [8, 448, 451], "complex": 450, "compress": [57, 270], "comput": 484, "concaten": 58, "conda": [474, 484], "configur": 462, "conj": [59, 271], "conjug": [60, 272, 484], "construct": 451, "content": [448, 473], "contribut": 459, "convers": 451, "convolv": [3, 61], "copi": [62, 273, 477, 483], "copysign": 63, "correl": [3, 457], "cosh": 65, "count": [3, 456], "count_nonzero": 66, "cov": 67, "coverag": 480, "cpu": [474, 484], "creation": [3, 9], "ctype": 274, "cumprod": [68, 275], "cumsum": [69, 276], "cupi": 472, "cupynumer": [1, 2, 4, 6, 8, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 447, 451, 452, 459, 472, 473, 483, 484], "data": [9, 10, 277, 445, 451, 452], "datatyp": 477, "dco": 459, "decomposit": [447, 464], "default": 472, "default_rng": 350, "deg2rad": 70, "degre": 71, "depend": 460, "design": 483, "detail": 480, "detect": [466, 484], "determin": 472, "develop": [459, 461], "diag": 72, "diag_indic": 73, "diag_indices_from": 74, "diagon": [75, 278], "diff": 76, "differ": [450, 465, 472, 477], "digit": 77, "dimens": [449, 469], "dimension": [8, 451], "discret": [3, 8, 11], "distribut": 452, "divid": 78, "do": [459, 472], "doe": 472, "doesn": 472, "don": 472, "dot": [79, 279], "dsplit": 80, "dstack": 81, "dtype": 280, "dump": [281, 282], "edg": [466, 484], "eig": 159, "eigenvalu": 3, "eigval": 160, "einsum": [3, 82], "einsum_path": 83, "element": [449, 483], "elementwis": 5, "empti": 84, "empty_lik": 85, "equal": 86, "equat": 447, "error": 472, "exampl": [467, 484], "execut": [472, 476], "exercis": 468, "exist": 9, "exp": 87, "exp2": 88, "expand_dim": 89, "expm": 161, "expm1": 90, "expon": 450, "exponenti": 351, "extract": 91, "extrema": 450, "ey": 92, "f": 352, "fab": 93, "factor": 3, "fast_math": 455, "faster": 483, "fft": [11, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109], "fft2": 95, "fftn": 96, "fftshift": 97, "file": 446, "fill": 283, "fill_diagon": 110, "find": 450, "find_common_typ": 111, "finit": 465, "flag": 284, "flat": 285, "flatnonzero": 112, "flatten": 286, "flip": [113, 287], "fliplr": 114, "flipud": 115, "float": 450, "float_pow": 116, "floor": 117, "floor_divid": 118, "fmax": 119, "fmin": 120, "fmod": 121, "force_thunk": 455, "format": 459, "fourier": [3, 8, 11], "frequent": 472, "frexp": 122, "from": [9, 460, 472, 474], "full": 123, "full_lik": 124, "function": [3, 447, 448, 450, 458, 483], "gamma": 353, "gcd": 125, "gener": [2, 445, 452, 483], "geometr": 354, "getfield": 288, "gpu": [472, 474, 484], "gradient": [126, 484], "greater": 127, "greater_equ": 128, "guid": [461, 482], "guidelin": [478, 483], "gumbel": 355, "ham": 129, "han": 130, "handl": [450, 472], "hardwar": 484, "have": 472, "helper": 11, "hermitian": 11, "hfft": 98, "histogram": [131, 457], "how": [459, 468, 472], "howto": 479, "hpc": 484, "hsplit": 132, "hstack": 133, "hyperbol": 450, "hypergeometr": 356, "hypot": 134, "i": [459, 472, 483], "ident": 135, "ifft": 99, "ifft2": 100, "ifftn": 101, "ifftshift": 102, "ihfft": 103, "imag": [136, 289], "implement": [465, 466, 468, 469], "index": [3, 445, 477, 483, 484], "indic": [137, 473], "inner": 138, "input": [3, 446, 468], "insert": 445, "instal": [474, 484], "instead": [477, 483], "introduct": 484, "invert": [139, 447], "irfft": 104, "irfft2": 105, "irfftn": 106, "isclos": 140, "iscomplex": 141, "iscomplexobj": 142, "isfinit": 143, "isinf": 144, "isnan": 145, "isneginf": 146, "isposinf": 147, "isreal": 148, "isrealobj": 149, "isscalar": 150, "item": [290, 451], "items": 292, "itemset": 291, "iter": 483, "ix_": 151, "jacobi": [470, 484], "join": 449, "jupyt": 472, "k": 468, "kaiser": 152, "kind": 449, "kit": 475, "kmean": 468, "laplac": 357, "laptop": 472, "layout": 451, "lcm": 153, "ldexp": 154, "learn": [465, 466, 468, 469], "left_shift": 155, "legales": 459, "legat": [472, 476, 478], "legion": [472, 476], "less": 156, "less_equ": 157, "let": 468, "level": 8, "licens": 474, "like": [445, 449], "linalg": [158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 447], "linear": [8, 447], "linspac": 168, "linux": 484, "list": [483, 484], "load": 169, "log": 170, "log10": 171, "log1p": 172, "log2": 173, "logaddexp": 174, "logaddexp2": 175, "logarithm": 450, "logic": [3, 448, 483], "logical_and": 176, "logical_not": 177, "logical_or": 178, "logical_xor": 179, "logist": 358, "lognorm": 359, "logseri": 360, "loop": [483, 484], "lu": 3, "make": 454, "manag": 476, "manipul": [3, 449, 451, 483], "manual": 476, "mask": [483, 484], "mask_indic": 180, "mathemat": [3, 450, 483], "matmul": 181, "matmul_cache_s": 455, "matric": [9, 447], "matrix": [3, 447, 451, 484], "matrix_pow": 162, "max": 293, "maximum": 182, "mean": [183, 294, 468, 472], "measur": 480, "median": 184, "memori": [451, 472, 483], "merg": 483, "meshgrid": 185, "method": [451, 469], "min": 295, "min_cpu_chunk": 455, "min_gpu_chunk": 455, "min_omp_chunk": 455, "minimum": 186, "miscellan": [3, 450], "mod": 187, "modf": 188, "modul": 8, "more": 472, "moveaxi": 189, "msort": 190, "multi": [8, 476, 484], "multi_dot": 163, "multipl": [451, 484], "multipli": 191, "my": 472, "n": 451, "nanargmax": 192, "nanargmin": 193, "nancumprod": 194, "nancumsum": 195, "nanmax": 196, "nanmean": 197, "nanmedian": 198, "nanmin": 199, "nanpercentil": 200, "nanprod": 201, "nanquantil": 202, "nansum": 203, "nativ": [483, 484], "nbyte": 296, "ndarrai": [3, 4, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 451], "ndim": [297, 325], "neg": 326, "negative_binomi": 361, "newton": 469, "nextaft": 327, "node": [476, 484], "noncentral_chisquar": 362, "noncentral_f": 363, "nonzero": [298, 328], "norm": [164, 447], "normal": 364, "not_equ": 329, "notebook": 472, "notic": 475, "npy": 446, "npz": 446, "number": [447, 449, 450, 468], "numer": 9, "numpi": [8, 446, 472, 475, 477, 481, 483, 484], "numpy_compat": 455, "nvidia": 473, "o": 483, "observ": 468, "ones": 330, "ones_lik": 331, "openbla": 460, "oper": [3, 5, 445, 448, 449, 450, 451, 483, 484], "option": [463, 484], "order": [457, 477], "origin": 459, "other": [447, 451, 484], "out": 472, "outcom": [465, 466, 468, 469], "outer": 332, "output": [3, 446, 483], "overal": 480, "overhead": 483, "pack": [3, 5], "packag": 474, "packbit": 333, "pad": 3, "pareto": 365, "parti": 475, "partit": [299, 334], "pass": [472, 476], "pattern": 472, "penalti": 483, "percentil": 335, "perform": [478, 483], "pip": [460, 484], "pitfal": 483, "place": 336, "point": 450, "poisson": 366, "posit": 337, "power": [338, 367], "practic": [483, 484], "preload_cudalib": 455, "price": 463, "process": 459, "prod": [300, 339], "product": [447, 450], "program": 3, "project": 8, "proper": 454, "put": [301, 340], "put_along_axi": 341, "putmask": [342, 483], "pypi": 474, "python": 472, "qr": 165, "quantil": 343, "question": 472, "rad2deg": 344, "radian": 345, "rand": 368, "randint": 369, "randn": 370, "random": [1, 2, 3, 8, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 452, 475], "random_integ": 372, "random_sampl": 373, "ranf": 374, "rang": 9, "raphson": 469, "ration": 450, "ravel": [302, 388], "rayleigh": 375, "read": 472, "real": [11, 303, 389], "realm": [472, 476], "rearrang": 449, "reciproc": 390, "recommend": 483, "reduc": 483, "reduct": 477, "refer": 444, "relat": 3, "remaind": 391, "repeat": 392, "report": 480, "report_coverag": 455, "report_dump_callstack": 455, "report_dump_csv": 455, "requir": [459, 484], "reshap": [304, 393, 483], "resourc": 484, "result": [472, 483], "return": [477, 483], "review": 459, "rfft": 107, "rfft2": 108, "rfftn": 109, "right_shift": 394, "rint": 395, "roll": 396, "rot90": 397, "round": [398, 450], "routin": [3, 9, 10, 11, 445, 449, 450, 453, 454, 483], "row_stack": 399, "run": [462, 468, 484], "sampl": [3, 8, 376, 452, 484], "scalar": 477, "scheme": 465, "schole": [463, 484], "search": [3, 456], "searchsort": [305, 400], "see": 468, "seed": [377, 452], "select": [401, 451], "set": [3, 454, 455, 468], "setfield": 306, "setflag": 307, "setup": 484, "shape": [9, 308, 402, 449, 451, 477], "sign": [403, 459], "signbit": 404, "simpl": 452, "sin": 405, "singl": 484, "sinh": 406, "size": 309, "slower": 472, "solv": [166, 447], "sort": [3, 310, 407, 456], "sort_complex": 408, "sourc": [460, 474], "special": 451, "split": [409, 449], "sqrt": 410, "squar": 411, "squeez": [311, 412], "stack": [413, 480, 483], "stage": 462, "standard": 11, "standard_cauchi": 378, "standard_exponenti": 379, "standard_gamma": 380, "standard_t": 381, "state": 452, "statist": [3, 457], "stencil": [470, 484], "stride": 312, "studi": 471, "subtract": 414, "sum": [313, 415, 450], "support": 477, "svd": [3, 167], "swapax": [314, 416], "t": [204, 472], "tabl": 473, "take": [315, 417], "take_along_axi": 418, "tan": 419, "tanh": 420, "task": [472, 476, 483], "tbli": [460, 475], "tensordot": 421, "test": [10, 448, 462], "than": 472, "thi": 472, "third": 475, "three": 484, "through": [460, 483], "tile": [422, 449], "time": [472, 478], "tip": 484, "tobyt": 316, "tofil": 317, "tolist": 318, "tool": 478, "top": 484, "topic": [460, 476], "torchsw": 471, "tostr": 319, "trace": [320, 423], "transform": [3, 8, 11], "transpos": [321, 424, 449], "tri": 425, "triangular": 382, "trigonometr": 450, "tril": 426, "tril_indic": 427, "tril_indices_from": 428, "triu": 429, "triu_indic": 430, "triu_indices_from": 431, "true_divid": 432, "trunc": 433, "truth": 448, "try": 481, "tutori": 484, "two": 469, "type": [10, 448, 451], "ufunc": 3, "uniform": 383, "uniqu": [322, 434], "unpack": 3, "unpackbit": 435, "unravel_index": 436, "updat": 483, "us": [468, 472, 476, 478, 483, 484], "usag": [462, 485], "user": 482, "v": [8, 472, 484], "valu": [9, 448, 477], "var": [323, 437], "varianc": 457, "variant": [472, 474], "variou": 458, "vdot": 438, "vector": [447, 483], "verifi": 474, "version": 472, "view": [324, 477, 483], "vonmis": 384, "vsplit": 439, "vstack": 440, "wald": 385, "warn": [455, 472], "weibul": 386, "what": 472, "when": 472, "where": [441, 472], "why": 472, "window": 458, "wise": 483, "without": 481, "your": 474, "zero": 442, "zeros_lik": 443, "zipf": 387}})