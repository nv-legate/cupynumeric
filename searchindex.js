Search.setIndex({"alltitles": {"1. Use cuPyNumeric arrays, AVOID native lists": [[483, "use-cupynumeric-arrays-avoid-native-lists"]], "2. Use array-based operations, AVOID loops with indexing": [[483, "use-array-based-operations-avoid-loops-with-indexing"]], "3. Use boolean masks, AVOID advanced indexing": [[483, "use-boolean-masks-avoid-advanced-indexing"]], "API Reference": [[443, null]], "Advanced statistics": [[3, "advanced-statistics"]], "Advanced topics": [[459, "advanced-topics"], [475, null]], "Arithmetic operations": [[449, "arithmetic-operations"]], "Arithmetic, matrix multiplication, and comparison operations": [[450, "arithmetic-matrix-multiplication-and-comparison-operations"]], "Array Attributes": [[450, "array-attributes"]], "Array Manipulation Routine Pitfalls": [[482, "array-manipulation-routine-pitfalls"]], "Array Methods": [[450, "array-methods"]], "Array contents": [[447, "array-contents"]], "Array conversion": [[450, "array-conversion"]], "Array creation": [[3, "array-creation"]], "Array creation (ndarray)": [[3, "array-creation-ndarray"]], "Array creation routines": [[9, null]], "Array manipulation": [[3, "array-manipulation"]], "Array manipulation (ndarray)": [[3, "array-manipulation-ndarray"]], "Array manipulation routines": [[448, null]], "Array type testing": [[447, "array-type-testing"]], "Averages and variances": [[456, "averages-and-variances"]], "Avoid blocking operations": [[482, "avoid-blocking-operations"]], "Background": [[464, "Background"], [465, "Background"], [467, "Background"], [468, "Background"]], "Basic Linux installation": [[483, "basic-linux-installation"]], "Basic build": [[459, "basic-build"]], "Basic operations": [[448, "basic-operations"]], "Basic usage": [[461, "basic-usage"]], "Best practices": [[482, null], [483, "best-practices"]], "Binary operations": [[5, null]], "Bit Generators": [[451, "bit-generators"]], "Bit packing": [[5, "bit-packing"]], "Black-Scholes": [[483, "black-scholes"]], "Black-Scholes options pricing": [[462, null]], "Building from source": [[459, null], [473, "building-from-source"]], "Building matrices": [[9, "building-matrices"]], "Building through pip & cmake": [[459, "building-through-pip-cmake"]], "Calculation": [[450, "calculation"], [450, "id1"]], "Call stack reporting": [[479, "call-stack-reporting"]], "Cephes": [[474, "cephes"]], "Changing array shape": [[448, "changing-array-shape"]], "Changing kind of array": [[448, "changing-kind-of-array"]], "Changing number of dimensions": [[448, "changing-number-of-dimensions"]], "Cholesky decomposition": [[463, null]], "Classes": [[7, null]], "Code Formatting Requirements": [[458, "code-formatting-requirements"]], "Compact Finite Difference Scheme": [[464, null]], "Comparison": [[447, "comparison"]], "Conda": [[483, "conda"]], "Conda and GPU / CPU Variants": [[473, "conda-and-gpu-cpu-variants"]], "Conjugate gradient": [[483, "conjugate-gradient"]], "Constructing arrays": [[450, "constructing-arrays"]], "Contents:": [[472, null]], "Contributing to cuPyNumeric": [[458, null]], "Convolve and Correlate": [[3, null]], "Correlating": [[456, "correlating"]], "Counting": [[455, "counting"]], "Data Type": [[450, "data-type"]], "Data type routines": [[10, null]], "Data type testing": [[10, "data-type-testing"]], "Decompositions": [[446, "decompositions"]], "Dependencies": [[459, "dependencies"]], "Detailed coverage report": [[479, "detailed-coverage-report"]], "Developer guide": [[460, null]], "Differences with Numpy": [[476, null]], "Discrete Fourier Transform": [[8, "discrete-fourier-transform"]], "Discrete Fourier Transform (cupynumeric.fft)": [[11, null]], "Discrete Fourier transform": [[3, "discrete-fourier-transform"]], "Distributions": [[451, "distributions"]], "Edge Detection": [[465, null]], "Edge detection": [[483, "edge-detection"]], "Eigenvalues": [[3, "eigenvalues"]], "Einsum and related": [[3, "einsum-and-related"]], "Elementwise bit operations": [[5, "elementwise-bit-operations"]], "Example 1": [[483, "example-1"]], "Example 2": [[483, "example-2"]], "Examples": [[466, null], [483, "examples"]], "Exercise: Change the number of clusters and number of observations and see how the clusters change": [[467, "Exercise:-Change-the-number-of-clusters-and-number-of-observations-and-see-how-the-clusters-change"]], "Exponents and logarithms": [[449, "exponents-and-logarithms"]], "Extrema Finding": [[449, "extrema-finding"]], "Factorizations": [[3, "factorizations"]], "Faster I/O Routines": [[482, "faster-i-o-routines"]], "Floating point routines": [[449, "floating-point-routines"]], "Frequently Asked Questions": [[471, null]], "From existing data": [[9, "from-existing-data"]], "From shape or value": [[9, "from-shape-or-value"]], "Functional programming": [[3, "functional-programming"]], "General Recommendations": [[482, "general-recommendations"]], "Generating index arrays": [[444, "generating-index-arrays"]], "Guidelines for performance benchmarks": [[477, "guidelines-for-performance-benchmarks"]], "Guidelines on designing cuPyNumeric applications": [[482, "guidelines-on-designing-cupynumeric-applications"]], "Guidelines on using cuPyNumeric APIs": [[482, "guidelines-on-using-cupynumeric-apis"]], "HPC cluster installation": [[483, "hpc-cluster-installation"]], "Handling complex numbers": [[449, "handling-complex-numbers"]], "Hardware requirements": [[483, "hardware-requirements"]], "Helper routines": [[11, "helper-routines"]], "Hermitian FFTs": [[11, "hermitian-ffts"]], "Histograms": [[456, "histograms"]], "How Do I Sign the DCO?": [[458, "how-do-i-sign-the-dco"]], "How do I time the execution of my application?": [[471, "how-do-i-time-the-execution-of-my-application"]], "How do I use Jupyter Notebooks?": [[471, "how-do-i-use-jupyter-notebooks"]], "How to begin": [[458, "how-to-begin"]], "How to determine available memory?": [[471, "how-to-determine-available-memory"]], "How to handle Out-Of-Memory errors?": [[471, "how-to-handle-out-of-memory-errors"]], "How to pass Legion and Realm arguments?": [[471, "how-to-pass-legion-and-realm-arguments"]], "Howtos": [[478, null]], "Hyperbolic functions": [[449, "hyperbolic-functions"]], "Implementation": [[464, "Implementation"], [465, "Implementation"], [467, "Implementation"], [468, "Implementation"]], "Indexing": [[3, "indexing"]], "Indexing behavior": [[476, "indexing-behavior"]], "Indexing routines": [[444, null]], "Indexing-like operations": [[444, "indexing-like-operations"]], "Indices and tables": [[472, "indices-and-tables"]], "Input and output": [[3, "input-and-output"], [445, null]], "Input and output (ndarray)": [[3, "input-and-output-ndarray"]], "Inserting data into arrays": [[444, "inserting-data-into-arrays"]], "Installation": [[473, null]], "Installing Conda Packages": [[473, "installing-conda-packages"]], "Installing PyPI Packages": [[473, "installing-pypi-packages"]], "Introduction": [[483, "introduction"]], "Item selection and manipulation": [[450, "item-selection-and-manipulation"]], "Jacobi stencil": [[469, null], [483, "jacobi-stencil"]], "Joining arrays": [[448, "joining-arrays"]], "K-Means Clustering Algorithm": [[467, null]], "LU factorization and related": [[3, "lu-factorization-and-related"]], "Learning Outcomes": [[464, "Learning-Outcomes"], [465, "Learning-Outcomes"], [467, "Learning-Outcomes"], [468, "Learning-Outcomes"]], "Lets run the kmeans algorithm using a set of inputs": [[467, "Lets-run-the-kmeans-algorithm-using-a-set-of-inputs"]], "Licenses": [[473, "licenses"]], "Linear Algebra": [[8, "linear-algebra"]], "Linear algebra (cupynumeric.linalg)": [[446, null]], "Logic functions": [[447, null]], "Logic operations": [[447, "logic-operations"]], "Logical operations": [[3, "logical-operations"]], "Making proper sets": [[453, "making-proper-sets"]], "Mathematical functions": [[3, "mathematical-functions"], [449, null]], "Matrix Functions": [[446, "matrix-functions"]], "Matrix and vector products": [[446, "matrix-and-vector-products"]], "Matrix multiplication": [[483, "matrix-multiplication"]], "Measure API coverage": [[479, null]], "Memory Layout": [[450, "memory-layout"]], "Merge tasks to reduce overhead": [[482, "merge-tasks-to-reduce-overhead"]], "Miscellaneous": [[449, "miscellaneous"]], "Miscellaneous matrix routines": [[3, "miscellaneous-matrix-routines"]], "Module-Level": [[8, "module-level"]], "Multi-Dimensional Array": [[8, "multi-dimensional-array"]], "Multi-node HPC": [[483, "multi-node-hpc"]], "Multi-node execution": [[475, "multi-node-execution"]], "NVIDIA cuPyNumeric": [[472, null]], "Newton Raphson Method In Two Dimensions": [[468, null]], "Norms and other numbers": [[446, "norms-and-other-numbers"]], "NumPy": [[474, "numpy"], [483, "numpy"]], "NumPy binary files (npy, npz)": [[445, "numpy-binary-files-npy-npz"]], "NumPy vs cuPyNumeric APIs": [[8, "numpy-vs-cupynumeric-apis"]], "Numerical ranges": [[9, "numerical-ranges"]], "OpenBLAS": [[459, "openblas"]], "Order argument": [[476, "order-argument"]], "Order statistics": [[456, "order-statistics"]], "Other Attributes": [[450, "other-attributes"]], "Other options": [[483, "other-options"]], "Overall coverage report": [[479, "overall-coverage-report"]], "Packing and unpacking bits": [[3, "packing-and-unpacking-bits"]], "Padding arrays": [[3, "padding-arrays"]], "Passing Legion and Realm arguments": [[475, "passing-legion-and-realm-arguments"]], "Performance Benchmarking": [[477, null]], "Pip": [[483, "pip"]], "Project comparisons": [[8, null]], "Questions?": [[471, "questions"]], "Random Generator": [[451, "random-generator"]], "Random Kit": [[474, "random-kit"]], "Random Sampling": [[8, "random-sampling"]], "Random sampling": [[3, "random-sampling"]], "Random sampling (cupynumeric.random)": [[451, null]], "Rational routines": [[449, "rational-routines"]], "Real FFTs": [[11, "real-ffts"]], "Rearranging elements": [[448, "rearranging-elements"]], "Reductions": [[476, "reductions"]], "Reshape returns a copy instead of view": [[482, "reshape-returns-a-copy-instead-of-view"]], "Resource allocation": [[483, "resource-allocation"]], "Returning a copy instead of a view": [[476, "returning-a-copy-instead-of-a-view"]], "Review Process": [[458, "review-process"]], "Rounding": [[449, "rounding"]], "Routines": [[452, null]], "Running cuPyNumeric code": [[483, "running-cupynumeric-code"]], "Running on CPU": [[483, "running-on-cpu"], [483, "id2"], [483, "id4"], [483, "id6"]], "Running on GPU": [[483, "running-on-gpu"], [483, "id3"], [483, "id5"], [483, "id7"], [483, "id9"]], "Running on GPU cluster": [[483, "running-on-gpu-cluster"]], "Running tests": [[461, null]], "SVD and related": [[3, "svd-and-related"]], "Sample Code": [[483, "sample-code"], [483, "id8"]], "Sample computation": [[483, "sample-computation"]], "Scalar return values": [[476, "scalar-return-values"]], "Searching": [[455, "searching"]], "Searching, sorting, and counting": [[3, "searching-sorting-and-counting"]], "Seeding and State": [[451, "seeding-and-state"]], "Set operations": [[3, "set-operations"]], "Set routines": [[453, null]], "Settings": [[454, null]], "Shape manipulation": [[450, "shape-manipulation"]], "Simple random data": [[451, "simple-random-data"]], "Single node": [[483, "single-node"]], "Single-node setup": [[483, "single-node-setup"]], "Solving equations and inverting matrices": [[446, "solving-equations-and-inverting-matrices"]], "Sorting": [[455, "sorting"]], "Sorting, searching, and counting": [[455, null]], "Special methods": [[450, "special-methods"]], "Splitting arrays": [[448, "splitting-arrays"]], "Stack results in a performance penalty": [[482, "stack-results-in-a-performance-penalty"]], "Stage configuration": [[461, "stage-configuration"]], "Standard FFTs": [[11, "standard-ffts"]], "Statistics": [[456, null]], "Sums, products, differences": [[449, "sums-products-differences"]], "Supported shapes and datatypes": [[476, "supported-shapes-and-datatypes"]], "TBLIS": [[459, "tblis"], [474, "tblis"]], "The Legalese: Developer Certificate of Origin": [[458, "the-legalese-developer-certificate-of-origin"]], "The N-Dimensional array (cupynumeric.ndarray)": [[450, null]], "Third-party notices": [[474, null]], "Tiling arrays": [[448, "tiling-arrays"]], "Top three Tips": [[483, "top-three-tips"]], "TorchSWE case study": [[470, null]], "Transpose-like operations": [[448, "transpose-like-operations"]], "Trigonometric functions": [[449, "trigonometric-functions"]], "Truth value testing": [[447, "truth-value-testing"]], "Trying Numpy code without changes": [[480, null]], "Tutorial": [[483, null]], "Ufuncs": [[3, "ufuncs"]], "Usage": [[484, null]], "Use array-based operations, AVOID loops with indexing": [[482, "use-array-based-operations-avoid-loops-with-indexing"]], "Use boolean masks, AVOID advanced indexing": [[482, "use-boolean-masks-avoid-advanced-indexing"]], "Use cuPyNumeric or NumPy arrays, AVOID native lists": [[482, "use-cupynumeric-or-numpy-arrays-avoid-native-lists"]], "Use logic functions, AVOID iterating through a loop": [[482, "use-logic-functions-avoid-iterating-through-a-loop"]], "Use mathematical functions, AVOID element-wise loops": [[482, "use-mathematical-functions-avoid-element-wise-loops"]], "Use output arguments to reduce memory allocation": [[482, "use-output-arguments-to-reduce-memory-allocation"]], "Use putmask to update an array based on another array": [[482, "use-putmask-to-update-an-array-based-on-another-array"]], "User guide": [[481, null]], "Using Legate timing tools": [[477, "using-legate-timing-tools"]], "Using a manual task manager": [[475, "using-a-manual-task-manager"]], "Using legate": [[475, "using-legate"]], "Various windows": [[457, "various-windows"]], "Vectorize for better performance": [[482, "vectorize-for-better-performance"]], "Verify your Installation": [[473, "verify-your-installation"]], "What are the anti-patterns in a NumPy code?": [[471, "what-are-the-anti-patterns-in-a-numpy-code"]], "What are the defaults?": [[471, "what-are-the-defaults"]], "What are the different task variants available in Legate?": [[471, "what-are-the-different-task-variants-available-in-legate"]], "What does this warning mean?": [[471, "what-does-this-warning-mean"]], "What if I don\u2019t have a GPU?": [[471, "what-if-i-dont-have-a-gpu"]], "What is the difference between Legate and cuPyNumeric?": [[471, "what-is-the-difference-between-legate-and-cupynumeric"]], "What is the version of legate?": [[471, "what-is-the-version-of-legate"]], "When to use python vs legate?": [[471, "when-to-use-python-vs-legate"]], "Where I can read more about cuPyNumeric?": [[471, "where-i-can-read-more-about-cupynumeric"]], "Why are the results different from NumPy?": [[471, "why-are-the-results-different-from-numpy"]], "Why doesn\u2019t Legate use my GPU?": [[471, "why-doesnt-legate-use-my-gpu"]], "Why is cuPyNumeric slower than CuPy on my laptop?": [[471, "why-is-cupynumeric-slower-than-cupy-on-my-laptop"]], "Why is cuPyNumeric slower than NumPy on my laptop?": [[471, "why-is-cupynumeric-slower-than-numpy-on-my-laptop"]], "Window functions": [[457, null]], "cuPyNumeric": [[483, "cupynumeric"]], "cuPyNumeric vs NumPy": [[483, "cupynumeric-vs-numpy"]], "cupynumeric.absolute": [[12, null]], "cupynumeric.add": [[13, null]], "cupynumeric.all": [[14, null]], "cupynumeric.allclose": [[15, null]], "cupynumeric.amax": [[16, null]], "cupynumeric.amin": [[17, null]], "cupynumeric.angle": [[18, null]], "cupynumeric.any": [[19, null]], "cupynumeric.append": [[20, null]], "cupynumeric.arange": [[21, null]], "cupynumeric.arccos": [[22, null]], "cupynumeric.arccosh": [[23, null]], "cupynumeric.arcsin": [[24, null]], "cupynumeric.arcsinh": [[25, null]], "cupynumeric.arctan": [[26, null]], "cupynumeric.arctan2": [[27, null]], "cupynumeric.arctanh": [[28, null]], "cupynumeric.argmax": [[29, null]], "cupynumeric.argmin": [[30, null]], "cupynumeric.argpartition": [[31, null]], "cupynumeric.argsort": [[32, null]], "cupynumeric.argwhere": [[33, null]], "cupynumeric.array": [[34, null]], "cupynumeric.array_equal": [[35, null]], "cupynumeric.array_split": [[36, null]], "cupynumeric.asarray": [[37, null]], "cupynumeric.atleast_1d": [[38, null]], "cupynumeric.atleast_2d": [[39, null]], "cupynumeric.atleast_3d": [[40, null]], "cupynumeric.average": [[41, null]], "cupynumeric.bartlett": [[42, null]], "cupynumeric.bincount": [[43, null]], "cupynumeric.bitwise_and": [[44, null]], "cupynumeric.bitwise_or": [[45, null]], "cupynumeric.bitwise_xor": [[46, null]], "cupynumeric.blackman": [[47, null]], "cupynumeric.block": [[48, null]], "cupynumeric.broadcast": [[6, null]], "cupynumeric.broadcast_arrays": [[49, null]], "cupynumeric.broadcast_shapes": [[50, null]], "cupynumeric.broadcast_to": [[51, null]], "cupynumeric.cbrt": [[52, null]], "cupynumeric.ceil": [[53, null]], "cupynumeric.choose": [[54, null]], "cupynumeric.clip": [[55, null]], "cupynumeric.column_stack": [[56, null]], "cupynumeric.compress": [[57, null]], "cupynumeric.concatenate": [[58, null]], "cupynumeric.conj": [[59, null]], "cupynumeric.conjugate": [[60, null]], "cupynumeric.convolve": [[61, null]], "cupynumeric.copy": [[62, null]], "cupynumeric.copysign": [[63, null]], "cupynumeric.cos": [[64, null]], "cupynumeric.cosh": [[65, null]], "cupynumeric.count_nonzero": [[66, null]], "cupynumeric.cov": [[67, null]], "cupynumeric.cumprod": [[68, null]], "cupynumeric.cumsum": [[69, null]], "cupynumeric.deg2rad": [[70, null]], "cupynumeric.degrees": [[71, null]], "cupynumeric.diag": [[72, null]], "cupynumeric.diag_indices": [[73, null]], "cupynumeric.diag_indices_from": [[74, null]], "cupynumeric.diagonal": [[75, null]], "cupynumeric.diff": [[76, null]], "cupynumeric.digitize": [[77, null]], "cupynumeric.divide": [[78, null]], "cupynumeric.dot": [[79, null]], "cupynumeric.dsplit": [[80, null]], "cupynumeric.dstack": [[81, null]], "cupynumeric.einsum": [[82, null]], "cupynumeric.einsum_path": [[83, null]], "cupynumeric.empty": [[84, null]], "cupynumeric.empty_like": [[85, null]], "cupynumeric.equal": [[86, null]], "cupynumeric.exp": [[87, null]], "cupynumeric.exp2": [[88, null]], "cupynumeric.expand_dims": [[89, null]], "cupynumeric.expm1": [[90, null]], "cupynumeric.extract": [[91, null]], "cupynumeric.eye": [[92, null]], "cupynumeric.fabs": [[93, null]], "cupynumeric.fft.fft": [[94, null]], "cupynumeric.fft.fft2": [[95, null]], "cupynumeric.fft.fftn": [[96, null]], "cupynumeric.fft.fftshift": [[97, null]], "cupynumeric.fft.hfft": [[98, null]], "cupynumeric.fft.ifft": [[99, null]], "cupynumeric.fft.ifft2": [[100, null]], "cupynumeric.fft.ifftn": [[101, null]], "cupynumeric.fft.ifftshift": [[102, null]], "cupynumeric.fft.ihfft": [[103, null]], "cupynumeric.fft.irfft": [[104, null]], "cupynumeric.fft.irfft2": [[105, null]], "cupynumeric.fft.irfftn": [[106, null]], "cupynumeric.fft.rfft": [[107, null]], "cupynumeric.fft.rfft2": [[108, null]], "cupynumeric.fft.rfftn": [[109, null]], "cupynumeric.fill_diagonal": [[110, null]], "cupynumeric.find_common_type": [[111, null]], "cupynumeric.flatnonzero": [[112, null]], "cupynumeric.flip": [[113, null]], "cupynumeric.fliplr": [[114, null]], "cupynumeric.flipud": [[115, null]], "cupynumeric.float_power": [[116, null]], "cupynumeric.floor": [[117, null]], "cupynumeric.floor_divide": [[118, null]], "cupynumeric.fmax": [[119, null]], "cupynumeric.fmin": [[120, null]], "cupynumeric.fmod": [[121, null]], "cupynumeric.frexp": [[122, null]], "cupynumeric.full": [[123, null]], "cupynumeric.full_like": [[124, null]], "cupynumeric.gcd": [[125, null]], "cupynumeric.gradient": [[126, null]], "cupynumeric.greater": [[127, null]], "cupynumeric.greater_equal": [[128, null]], "cupynumeric.hamming": [[129, null]], "cupynumeric.hanning": [[130, null]], "cupynumeric.histogram": [[131, null]], "cupynumeric.hsplit": [[132, null]], "cupynumeric.hstack": [[133, null]], "cupynumeric.hypot": [[134, null]], "cupynumeric.identity": [[135, null]], "cupynumeric.imag": [[136, null]], "cupynumeric.indices": [[137, null]], "cupynumeric.inner": [[138, null]], "cupynumeric.invert": [[139, null]], "cupynumeric.isclose": [[140, null]], "cupynumeric.iscomplex": [[141, null]], "cupynumeric.iscomplexobj": [[142, null]], "cupynumeric.isfinite": [[143, null]], "cupynumeric.isinf": [[144, null]], "cupynumeric.isnan": [[145, null]], "cupynumeric.isneginf": [[146, null]], "cupynumeric.isposinf": [[147, null]], "cupynumeric.isreal": [[148, null]], "cupynumeric.isrealobj": [[149, null]], "cupynumeric.isscalar": [[150, null]], "cupynumeric.ix_": [[151, null]], "cupynumeric.kaiser": [[152, null]], "cupynumeric.lcm": [[153, null]], "cupynumeric.ldexp": [[154, null]], "cupynumeric.left_shift": [[155, null]], "cupynumeric.less": [[156, null]], "cupynumeric.less_equal": [[157, null]], "cupynumeric.linalg.cholesky": [[158, null]], "cupynumeric.linalg.eig": [[159, null]], "cupynumeric.linalg.eigvals": [[160, null]], "cupynumeric.linalg.expm": [[161, null]], "cupynumeric.linalg.matrix_power": [[162, null]], "cupynumeric.linalg.multi_dot": [[163, null]], "cupynumeric.linalg.norm": [[164, null]], "cupynumeric.linalg.qr": [[165, null]], "cupynumeric.linalg.solve": [[166, null]], "cupynumeric.linalg.svd": [[167, null]], "cupynumeric.linspace": [[168, null]], "cupynumeric.load": [[169, null]], "cupynumeric.log": [[170, null]], "cupynumeric.log10": [[171, null]], "cupynumeric.log1p": [[172, null]], "cupynumeric.log2": [[173, null]], "cupynumeric.logaddexp": [[174, null]], "cupynumeric.logaddexp2": [[175, null]], "cupynumeric.logical_and": [[176, null]], "cupynumeric.logical_not": [[177, null]], "cupynumeric.logical_or": [[178, null]], "cupynumeric.logical_xor": [[179, null]], "cupynumeric.mask_indices": [[180, null]], "cupynumeric.matmul": [[181, null]], "cupynumeric.maximum": [[182, null]], "cupynumeric.mean": [[183, null]], "cupynumeric.median": [[184, null]], "cupynumeric.meshgrid": [[185, null]], "cupynumeric.minimum": [[186, null]], "cupynumeric.mod": [[187, null]], "cupynumeric.modf": [[188, null]], "cupynumeric.moveaxis": [[189, null]], "cupynumeric.multiply": [[190, null]], "cupynumeric.nanargmax": [[191, null]], "cupynumeric.nanargmin": [[192, null]], "cupynumeric.nancumprod": [[193, null]], "cupynumeric.nancumsum": [[194, null]], "cupynumeric.nanmax": [[195, null]], "cupynumeric.nanmean": [[196, null]], "cupynumeric.nanmedian": [[197, null]], "cupynumeric.nanmin": [[198, null]], "cupynumeric.nanpercentile": [[199, null]], "cupynumeric.nanprod": [[200, null]], "cupynumeric.nanquantile": [[201, null]], "cupynumeric.nansum": [[202, null]], "cupynumeric.ndarray": [[4, null]], "cupynumeric.ndarray.T": [[203, null]], "cupynumeric.ndarray.__abs__": [[204, null]], "cupynumeric.ndarray.__add__": [[205, null]], "cupynumeric.ndarray.__and__": [[206, null]], "cupynumeric.ndarray.__array__": [[207, null]], "cupynumeric.ndarray.__bool__": [[208, null]], "cupynumeric.ndarray.__complex__": [[209, null]], "cupynumeric.ndarray.__contains__": [[210, null]], "cupynumeric.ndarray.__copy__": [[211, null]], "cupynumeric.ndarray.__deepcopy__": [[212, null]], "cupynumeric.ndarray.__divmod__": [[213, null]], "cupynumeric.ndarray.__eq__": [[214, null]], "cupynumeric.ndarray.__float__": [[215, null]], "cupynumeric.ndarray.__floordiv__": [[216, null]], "cupynumeric.ndarray.__ge__": [[217, null]], "cupynumeric.ndarray.__getitem__": [[218, null]], "cupynumeric.ndarray.__gt__": [[219, null]], "cupynumeric.ndarray.__iadd__": [[220, null]], "cupynumeric.ndarray.__iand__": [[221, null]], "cupynumeric.ndarray.__ifloordiv__": [[222, null]], "cupynumeric.ndarray.__ilshift__": [[223, null]], "cupynumeric.ndarray.__imatmul__": [[224, null]], "cupynumeric.ndarray.__imod__": [[225, null]], "cupynumeric.ndarray.__imul__": [[226, null]], "cupynumeric.ndarray.__index__": [[227, null]], "cupynumeric.ndarray.__int__": [[228, null]], "cupynumeric.ndarray.__invert__": [[229, null]], "cupynumeric.ndarray.__ior__": [[230, null]], "cupynumeric.ndarray.__ipow__": [[231, null]], "cupynumeric.ndarray.__irshift__": [[232, null]], "cupynumeric.ndarray.__isub__": [[233, null]], "cupynumeric.ndarray.__itruediv__": [[234, null]], "cupynumeric.ndarray.__ixor__": [[235, null]], "cupynumeric.ndarray.__le__": [[236, null]], "cupynumeric.ndarray.__len__": [[237, null]], "cupynumeric.ndarray.__lshift__": [[238, null]], "cupynumeric.ndarray.__lt__": [[239, null]], "cupynumeric.ndarray.__matmul__": [[240, null]], "cupynumeric.ndarray.__mod__": [[241, null]], "cupynumeric.ndarray.__mul__": [[242, null]], "cupynumeric.ndarray.__ne__": [[243, null]], "cupynumeric.ndarray.__neg__": [[244, null]], "cupynumeric.ndarray.__new__": [[245, null]], "cupynumeric.ndarray.__or__": [[246, null]], "cupynumeric.ndarray.__pos__": [[247, null]], "cupynumeric.ndarray.__pow__": [[248, null]], "cupynumeric.ndarray.__reduce__": [[249, null]], "cupynumeric.ndarray.__repr__": [[250, null]], "cupynumeric.ndarray.__rmatmul__": [[251, null]], "cupynumeric.ndarray.__rshift__": [[252, null]], "cupynumeric.ndarray.__setitem__": [[253, null]], "cupynumeric.ndarray.__setstate__": [[254, null]], "cupynumeric.ndarray.__str__": [[255, null]], "cupynumeric.ndarray.__sub__": [[256, null]], "cupynumeric.ndarray.__truediv__": [[257, null]], "cupynumeric.ndarray.__xor__": [[258, null]], "cupynumeric.ndarray.all": [[259, null]], "cupynumeric.ndarray.any": [[260, null]], "cupynumeric.ndarray.argmax": [[261, null]], "cupynumeric.ndarray.argmin": [[262, null]], "cupynumeric.ndarray.argpartition": [[263, null]], "cupynumeric.ndarray.argsort": [[264, null]], "cupynumeric.ndarray.astype": [[265, null]], "cupynumeric.ndarray.base": [[266, null]], "cupynumeric.ndarray.choose": [[267, null]], "cupynumeric.ndarray.clip": [[268, null]], "cupynumeric.ndarray.compress": [[269, null]], "cupynumeric.ndarray.conj": [[270, null]], "cupynumeric.ndarray.conjugate": [[271, null]], "cupynumeric.ndarray.copy": [[272, null]], "cupynumeric.ndarray.ctypes": [[273, null]], "cupynumeric.ndarray.cumprod": [[274, null]], "cupynumeric.ndarray.cumsum": [[275, null]], "cupynumeric.ndarray.data": [[276, null]], "cupynumeric.ndarray.diagonal": [[277, null]], "cupynumeric.ndarray.dot": [[278, null]], "cupynumeric.ndarray.dtype": [[279, null]], "cupynumeric.ndarray.dump": [[280, null]], "cupynumeric.ndarray.dumps": [[281, null]], "cupynumeric.ndarray.fill": [[282, null]], "cupynumeric.ndarray.flags": [[283, null]], "cupynumeric.ndarray.flat": [[284, null]], "cupynumeric.ndarray.flatten": [[285, null]], "cupynumeric.ndarray.flip": [[286, null]], "cupynumeric.ndarray.getfield": [[287, null]], "cupynumeric.ndarray.imag": [[288, null]], "cupynumeric.ndarray.item": [[289, null]], "cupynumeric.ndarray.itemset": [[290, null]], "cupynumeric.ndarray.itemsize": [[291, null]], "cupynumeric.ndarray.max": [[292, null]], "cupynumeric.ndarray.mean": [[293, null]], "cupynumeric.ndarray.min": [[294, null]], "cupynumeric.ndarray.nbytes": [[295, null]], "cupynumeric.ndarray.ndim": [[296, null]], "cupynumeric.ndarray.nonzero": [[297, null]], "cupynumeric.ndarray.partition": [[298, null]], "cupynumeric.ndarray.prod": [[299, null]], "cupynumeric.ndarray.put": [[300, null]], "cupynumeric.ndarray.ravel": [[301, null]], "cupynumeric.ndarray.real": [[302, null]], "cupynumeric.ndarray.reshape": [[303, null]], "cupynumeric.ndarray.searchsorted": [[304, null]], "cupynumeric.ndarray.setfield": [[305, null]], "cupynumeric.ndarray.setflags": [[306, null]], "cupynumeric.ndarray.shape": [[307, null]], "cupynumeric.ndarray.size": [[308, null]], "cupynumeric.ndarray.sort": [[309, null]], "cupynumeric.ndarray.squeeze": [[310, null]], "cupynumeric.ndarray.strides": [[311, null]], "cupynumeric.ndarray.sum": [[312, null]], "cupynumeric.ndarray.swapaxes": [[313, null]], "cupynumeric.ndarray.take": [[314, null]], "cupynumeric.ndarray.tobytes": [[315, null]], "cupynumeric.ndarray.tofile": [[316, null]], "cupynumeric.ndarray.tolist": [[317, null]], "cupynumeric.ndarray.tostring": [[318, null]], "cupynumeric.ndarray.trace": [[319, null]], "cupynumeric.ndarray.transpose": [[320, null]], "cupynumeric.ndarray.unique": [[321, null]], "cupynumeric.ndarray.var": [[322, null]], "cupynumeric.ndarray.view": [[323, null]], "cupynumeric.ndim": [[324, null]], "cupynumeric.negative": [[325, null]], "cupynumeric.nextafter": [[326, null]], "cupynumeric.nonzero": [[327, null]], "cupynumeric.not_equal": [[328, null]], "cupynumeric.ones": [[329, null]], "cupynumeric.ones_like": [[330, null]], "cupynumeric.outer": [[331, null]], "cupynumeric.packbits": [[332, null]], "cupynumeric.partition": [[333, null]], "cupynumeric.percentile": [[334, null]], "cupynumeric.place": [[335, null]], "cupynumeric.positive": [[336, null]], "cupynumeric.power": [[337, null]], "cupynumeric.prod": [[338, null]], "cupynumeric.put": [[339, null]], "cupynumeric.put_along_axis": [[340, null]], "cupynumeric.putmask": [[341, null]], "cupynumeric.quantile": [[342, null]], "cupynumeric.rad2deg": [[343, null]], "cupynumeric.radians": [[344, null]], "cupynumeric.random.BitGenerator": [[1, null]], "cupynumeric.random.Generator": [[2, null]], "cupynumeric.random.beta": [[345, null]], "cupynumeric.random.binomial": [[346, null]], "cupynumeric.random.bytes": [[347, null]], "cupynumeric.random.chisquare": [[348, null]], "cupynumeric.random.default_rng": [[349, null]], "cupynumeric.random.exponential": [[350, null]], "cupynumeric.random.f": [[351, null]], "cupynumeric.random.gamma": [[352, null]], "cupynumeric.random.geometric": [[353, null]], "cupynumeric.random.gumbel": [[354, null]], "cupynumeric.random.hypergeometric": [[355, null]], "cupynumeric.random.laplace": [[356, null]], "cupynumeric.random.logistic": [[357, null]], "cupynumeric.random.lognormal": [[358, null]], "cupynumeric.random.logseries": [[359, null]], "cupynumeric.random.negative_binomial": [[360, null]], "cupynumeric.random.noncentral_chisquare": [[361, null]], "cupynumeric.random.noncentral_f": [[362, null]], "cupynumeric.random.normal": [[363, null]], "cupynumeric.random.pareto": [[364, null]], "cupynumeric.random.poisson": [[365, null]], "cupynumeric.random.power": [[366, null]], "cupynumeric.random.rand": [[367, null]], "cupynumeric.random.randint": [[368, null]], "cupynumeric.random.randn": [[369, null]], "cupynumeric.random.random": [[370, null]], "cupynumeric.random.random_integers": [[371, null]], "cupynumeric.random.random_sample": [[372, null]], "cupynumeric.random.ranf": [[373, null]], "cupynumeric.random.rayleigh": [[374, null]], "cupynumeric.random.sample": [[375, null]], "cupynumeric.random.seed": [[376, null]], "cupynumeric.random.standard_cauchy": [[377, null]], "cupynumeric.random.standard_exponential": [[378, null]], "cupynumeric.random.standard_gamma": [[379, null]], "cupynumeric.random.standard_t": [[380, null]], "cupynumeric.random.triangular": [[381, null]], "cupynumeric.random.uniform": [[382, null]], "cupynumeric.random.vonmises": [[383, null]], "cupynumeric.random.wald": [[384, null]], "cupynumeric.random.weibull": [[385, null]], "cupynumeric.random.zipf": [[386, null]], "cupynumeric.ravel": [[387, null]], "cupynumeric.real": [[388, null]], "cupynumeric.reciprocal": [[389, null]], "cupynumeric.remainder": [[390, null]], "cupynumeric.repeat": [[391, null]], "cupynumeric.reshape": [[392, null]], "cupynumeric.right_shift": [[393, null]], "cupynumeric.rint": [[394, null]], "cupynumeric.roll": [[395, null]], "cupynumeric.rot90": [[396, null]], "cupynumeric.round": [[397, null]], "cupynumeric.row_stack": [[398, null]], "cupynumeric.searchsorted": [[399, null]], "cupynumeric.select": [[400, null]], "cupynumeric.shape": [[401, null]], "cupynumeric.sign": [[402, null]], "cupynumeric.signbit": [[403, null]], "cupynumeric.sin": [[404, null]], "cupynumeric.sinh": [[405, null]], "cupynumeric.sort": [[406, null]], "cupynumeric.sort_complex": [[407, null]], "cupynumeric.split": [[408, null]], "cupynumeric.sqrt": [[409, null]], "cupynumeric.square": [[410, null]], "cupynumeric.squeeze": [[411, null]], "cupynumeric.stack": [[412, null]], "cupynumeric.subtract": [[413, null]], "cupynumeric.sum": [[414, null]], "cupynumeric.swapaxes": [[415, null]], "cupynumeric.take": [[416, null]], "cupynumeric.take_along_axis": [[417, null]], "cupynumeric.tan": [[418, null]], "cupynumeric.tanh": [[419, null]], "cupynumeric.tensordot": [[420, null]], "cupynumeric.tile": [[421, null]], "cupynumeric.trace": [[422, null]], "cupynumeric.transpose": [[423, null]], "cupynumeric.tri": [[424, null]], "cupynumeric.tril": [[425, null]], "cupynumeric.tril_indices": [[426, null]], "cupynumeric.tril_indices_from": [[427, null]], "cupynumeric.triu": [[428, null]], "cupynumeric.triu_indices": [[429, null]], "cupynumeric.triu_indices_from": [[430, null]], "cupynumeric.true_divide": [[431, null]], "cupynumeric.trunc": [[432, null]], "cupynumeric.unique": [[433, null]], "cupynumeric.unpackbits": [[434, null]], "cupynumeric.unravel_index": [[435, null]], "cupynumeric.var": [[436, null]], "cupynumeric.vdot": [[437, null]], "cupynumeric.vsplit": [[438, null]], "cupynumeric.vstack": [[439, null]], "cupynumeric.where": [[440, null]], "cupynumeric.zeros": [[441, null]], "cupynumeric.zeros_like": [[442, null]], "doctor": [[454, "doctor"]], "doctor_filename": [[454, "doctor-filename"], [454, "id2"]], "doctor_format": [[454, "doctor-format"]], "fast_math": [[454, "fast-math"]], "force_thunk": [[454, "force-thunk"]], "matmul_cache_size": [[454, "matmul-cache-size"]], "min_cpu_chunk": [[454, "min-cpu-chunk"]], "min_gpu_chunk": [[454, "min-gpu-chunk"]], "min_omp_chunk": [[454, "min-omp-chunk"]], "numpy_compat": [[454, "numpy-compat"]], "preload_cudalibs": [[454, "preload-cudalibs"]], "report_coverage": [[454, "report-coverage"]], "report_dump_callstack": [[454, "report-dump-callstack"]], "report_dump_csv": [[454, "report-dump-csv"]], "warn": [[454, "warn"]]}, "docnames": ["_implemented", "api/_bitgenerator", "api/_generator", "api/_grouped", "api/_ndarray", "api/binary", "api/broadcast", "api/classes", "api/comparison", "api/creation", "api/datatype", "api/fft", "api/generated/cupynumeric.absolute", "api/generated/cupynumeric.add", "api/generated/cupynumeric.all", "api/generated/cupynumeric.allclose", "api/generated/cupynumeric.amax", "api/generated/cupynumeric.amin", "api/generated/cupynumeric.angle", "api/generated/cupynumeric.any", "api/generated/cupynumeric.append", "api/generated/cupynumeric.arange", "api/generated/cupynumeric.arccos", "api/generated/cupynumeric.arccosh", "api/generated/cupynumeric.arcsin", "api/generated/cupynumeric.arcsinh", "api/generated/cupynumeric.arctan", "api/generated/cupynumeric.arctan2", "api/generated/cupynumeric.arctanh", "api/generated/cupynumeric.argmax", "api/generated/cupynumeric.argmin", "api/generated/cupynumeric.argpartition", "api/generated/cupynumeric.argsort", "api/generated/cupynumeric.argwhere", "api/generated/cupynumeric.array", "api/generated/cupynumeric.array_equal", "api/generated/cupynumeric.array_split", "api/generated/cupynumeric.asarray", "api/generated/cupynumeric.atleast_1d", "api/generated/cupynumeric.atleast_2d", "api/generated/cupynumeric.atleast_3d", "api/generated/cupynumeric.average", "api/generated/cupynumeric.bartlett", "api/generated/cupynumeric.bincount", "api/generated/cupynumeric.bitwise_and", "api/generated/cupynumeric.bitwise_or", "api/generated/cupynumeric.bitwise_xor", "api/generated/cupynumeric.blackman", "api/generated/cupynumeric.block", "api/generated/cupynumeric.broadcast_arrays", "api/generated/cupynumeric.broadcast_shapes", "api/generated/cupynumeric.broadcast_to", "api/generated/cupynumeric.cbrt", "api/generated/cupynumeric.ceil", "api/generated/cupynumeric.choose", "api/generated/cupynumeric.clip", "api/generated/cupynumeric.column_stack", "api/generated/cupynumeric.compress", "api/generated/cupynumeric.concatenate", "api/generated/cupynumeric.conj", "api/generated/cupynumeric.conjugate", "api/generated/cupynumeric.convolve", "api/generated/cupynumeric.copy", "api/generated/cupynumeric.copysign", "api/generated/cupynumeric.cos", "api/generated/cupynumeric.cosh", "api/generated/cupynumeric.count_nonzero", "api/generated/cupynumeric.cov", "api/generated/cupynumeric.cumprod", "api/generated/cupynumeric.cumsum", "api/generated/cupynumeric.deg2rad", "api/generated/cupynumeric.degrees", "api/generated/cupynumeric.diag", "api/generated/cupynumeric.diag_indices", "api/generated/cupynumeric.diag_indices_from", "api/generated/cupynumeric.diagonal", "api/generated/cupynumeric.diff", "api/generated/cupynumeric.digitize", "api/generated/cupynumeric.divide", "api/generated/cupynumeric.dot", "api/generated/cupynumeric.dsplit", "api/generated/cupynumeric.dstack", "api/generated/cupynumeric.einsum", "api/generated/cupynumeric.einsum_path", "api/generated/cupynumeric.empty", "api/generated/cupynumeric.empty_like", "api/generated/cupynumeric.equal", "api/generated/cupynumeric.exp", "api/generated/cupynumeric.exp2", "api/generated/cupynumeric.expand_dims", "api/generated/cupynumeric.expm1", "api/generated/cupynumeric.extract", "api/generated/cupynumeric.eye", "api/generated/cupynumeric.fabs", "api/generated/cupynumeric.fft.fft", "api/generated/cupynumeric.fft.fft2", "api/generated/cupynumeric.fft.fftn", "api/generated/cupynumeric.fft.fftshift", "api/generated/cupynumeric.fft.hfft", "api/generated/cupynumeric.fft.ifft", "api/generated/cupynumeric.fft.ifft2", "api/generated/cupynumeric.fft.ifftn", "api/generated/cupynumeric.fft.ifftshift", "api/generated/cupynumeric.fft.ihfft", "api/generated/cupynumeric.fft.irfft", "api/generated/cupynumeric.fft.irfft2", "api/generated/cupynumeric.fft.irfftn", "api/generated/cupynumeric.fft.rfft", "api/generated/cupynumeric.fft.rfft2", "api/generated/cupynumeric.fft.rfftn", "api/generated/cupynumeric.fill_diagonal", "api/generated/cupynumeric.find_common_type", "api/generated/cupynumeric.flatnonzero", "api/generated/cupynumeric.flip", "api/generated/cupynumeric.fliplr", "api/generated/cupynumeric.flipud", "api/generated/cupynumeric.float_power", "api/generated/cupynumeric.floor", "api/generated/cupynumeric.floor_divide", "api/generated/cupynumeric.fmax", "api/generated/cupynumeric.fmin", "api/generated/cupynumeric.fmod", "api/generated/cupynumeric.frexp", "api/generated/cupynumeric.full", "api/generated/cupynumeric.full_like", "api/generated/cupynumeric.gcd", "api/generated/cupynumeric.gradient", "api/generated/cupynumeric.greater", "api/generated/cupynumeric.greater_equal", "api/generated/cupynumeric.hamming", "api/generated/cupynumeric.hanning", "api/generated/cupynumeric.histogram", "api/generated/cupynumeric.hsplit", "api/generated/cupynumeric.hstack", "api/generated/cupynumeric.hypot", "api/generated/cupynumeric.identity", "api/generated/cupynumeric.imag", "api/generated/cupynumeric.indices", "api/generated/cupynumeric.inner", "api/generated/cupynumeric.invert", "api/generated/cupynumeric.isclose", "api/generated/cupynumeric.iscomplex", "api/generated/cupynumeric.iscomplexobj", "api/generated/cupynumeric.isfinite", "api/generated/cupynumeric.isinf", "api/generated/cupynumeric.isnan", "api/generated/cupynumeric.isneginf", "api/generated/cupynumeric.isposinf", "api/generated/cupynumeric.isreal", "api/generated/cupynumeric.isrealobj", "api/generated/cupynumeric.isscalar", "api/generated/cupynumeric.ix_", "api/generated/cupynumeric.kaiser", "api/generated/cupynumeric.lcm", "api/generated/cupynumeric.ldexp", "api/generated/cupynumeric.left_shift", "api/generated/cupynumeric.less", "api/generated/cupynumeric.less_equal", "api/generated/cupynumeric.linalg.cholesky", "api/generated/cupynumeric.linalg.eig", "api/generated/cupynumeric.linalg.eigvals", "api/generated/cupynumeric.linalg.expm", "api/generated/cupynumeric.linalg.matrix_power", "api/generated/cupynumeric.linalg.multi_dot", "api/generated/cupynumeric.linalg.norm", "api/generated/cupynumeric.linalg.qr", "api/generated/cupynumeric.linalg.solve", "api/generated/cupynumeric.linalg.svd", "api/generated/cupynumeric.linspace", "api/generated/cupynumeric.load", "api/generated/cupynumeric.log", "api/generated/cupynumeric.log10", "api/generated/cupynumeric.log1p", "api/generated/cupynumeric.log2", "api/generated/cupynumeric.logaddexp", "api/generated/cupynumeric.logaddexp2", "api/generated/cupynumeric.logical_and", "api/generated/cupynumeric.logical_not", "api/generated/cupynumeric.logical_or", "api/generated/cupynumeric.logical_xor", "api/generated/cupynumeric.mask_indices", "api/generated/cupynumeric.matmul", "api/generated/cupynumeric.maximum", "api/generated/cupynumeric.mean", "api/generated/cupynumeric.median", "api/generated/cupynumeric.meshgrid", "api/generated/cupynumeric.minimum", "api/generated/cupynumeric.mod", "api/generated/cupynumeric.modf", "api/generated/cupynumeric.moveaxis", "api/generated/cupynumeric.multiply", "api/generated/cupynumeric.nanargmax", "api/generated/cupynumeric.nanargmin", "api/generated/cupynumeric.nancumprod", "api/generated/cupynumeric.nancumsum", "api/generated/cupynumeric.nanmax", "api/generated/cupynumeric.nanmean", "api/generated/cupynumeric.nanmedian", "api/generated/cupynumeric.nanmin", "api/generated/cupynumeric.nanpercentile", "api/generated/cupynumeric.nanprod", "api/generated/cupynumeric.nanquantile", "api/generated/cupynumeric.nansum", "api/generated/cupynumeric.ndarray.T", "api/generated/cupynumeric.ndarray.__abs__", "api/generated/cupynumeric.ndarray.__add__", "api/generated/cupynumeric.ndarray.__and__", "api/generated/cupynumeric.ndarray.__array__", "api/generated/cupynumeric.ndarray.__bool__", "api/generated/cupynumeric.ndarray.__complex__", "api/generated/cupynumeric.ndarray.__contains__", "api/generated/cupynumeric.ndarray.__copy__", "api/generated/cupynumeric.ndarray.__deepcopy__", "api/generated/cupynumeric.ndarray.__divmod__", "api/generated/cupynumeric.ndarray.__eq__", "api/generated/cupynumeric.ndarray.__float__", "api/generated/cupynumeric.ndarray.__floordiv__", "api/generated/cupynumeric.ndarray.__ge__", "api/generated/cupynumeric.ndarray.__getitem__", "api/generated/cupynumeric.ndarray.__gt__", "api/generated/cupynumeric.ndarray.__iadd__", "api/generated/cupynumeric.ndarray.__iand__", "api/generated/cupynumeric.ndarray.__ifloordiv__", "api/generated/cupynumeric.ndarray.__ilshift__", "api/generated/cupynumeric.ndarray.__imatmul__", "api/generated/cupynumeric.ndarray.__imod__", "api/generated/cupynumeric.ndarray.__imul__", "api/generated/cupynumeric.ndarray.__index__", "api/generated/cupynumeric.ndarray.__int__", "api/generated/cupynumeric.ndarray.__invert__", "api/generated/cupynumeric.ndarray.__ior__", "api/generated/cupynumeric.ndarray.__ipow__", "api/generated/cupynumeric.ndarray.__irshift__", "api/generated/cupynumeric.ndarray.__isub__", "api/generated/cupynumeric.ndarray.__itruediv__", "api/generated/cupynumeric.ndarray.__ixor__", "api/generated/cupynumeric.ndarray.__le__", "api/generated/cupynumeric.ndarray.__len__", "api/generated/cupynumeric.ndarray.__lshift__", "api/generated/cupynumeric.ndarray.__lt__", "api/generated/cupynumeric.ndarray.__matmul__", "api/generated/cupynumeric.ndarray.__mod__", "api/generated/cupynumeric.ndarray.__mul__", "api/generated/cupynumeric.ndarray.__ne__", "api/generated/cupynumeric.ndarray.__neg__", "api/generated/cupynumeric.ndarray.__new__", "api/generated/cupynumeric.ndarray.__or__", "api/generated/cupynumeric.ndarray.__pos__", "api/generated/cupynumeric.ndarray.__pow__", "api/generated/cupynumeric.ndarray.__reduce__", "api/generated/cupynumeric.ndarray.__repr__", "api/generated/cupynumeric.ndarray.__rmatmul__", "api/generated/cupynumeric.ndarray.__rshift__", "api/generated/cupynumeric.ndarray.__setitem__", "api/generated/cupynumeric.ndarray.__setstate__", "api/generated/cupynumeric.ndarray.__str__", "api/generated/cupynumeric.ndarray.__sub__", "api/generated/cupynumeric.ndarray.__truediv__", "api/generated/cupynumeric.ndarray.__xor__", "api/generated/cupynumeric.ndarray.all", "api/generated/cupynumeric.ndarray.any", "api/generated/cupynumeric.ndarray.argmax", "api/generated/cupynumeric.ndarray.argmin", "api/generated/cupynumeric.ndarray.argpartition", "api/generated/cupynumeric.ndarray.argsort", "api/generated/cupynumeric.ndarray.astype", "api/generated/cupynumeric.ndarray.base", "api/generated/cupynumeric.ndarray.choose", "api/generated/cupynumeric.ndarray.clip", "api/generated/cupynumeric.ndarray.compress", "api/generated/cupynumeric.ndarray.conj", "api/generated/cupynumeric.ndarray.conjugate", "api/generated/cupynumeric.ndarray.copy", "api/generated/cupynumeric.ndarray.ctypes", "api/generated/cupynumeric.ndarray.cumprod", "api/generated/cupynumeric.ndarray.cumsum", "api/generated/cupynumeric.ndarray.data", "api/generated/cupynumeric.ndarray.diagonal", "api/generated/cupynumeric.ndarray.dot", "api/generated/cupynumeric.ndarray.dtype", "api/generated/cupynumeric.ndarray.dump", "api/generated/cupynumeric.ndarray.dumps", "api/generated/cupynumeric.ndarray.fill", "api/generated/cupynumeric.ndarray.flags", "api/generated/cupynumeric.ndarray.flat", "api/generated/cupynumeric.ndarray.flatten", "api/generated/cupynumeric.ndarray.flip", "api/generated/cupynumeric.ndarray.getfield", "api/generated/cupynumeric.ndarray.imag", "api/generated/cupynumeric.ndarray.item", "api/generated/cupynumeric.ndarray.itemset", "api/generated/cupynumeric.ndarray.itemsize", "api/generated/cupynumeric.ndarray.max", "api/generated/cupynumeric.ndarray.mean", "api/generated/cupynumeric.ndarray.min", "api/generated/cupynumeric.ndarray.nbytes", "api/generated/cupynumeric.ndarray.ndim", "api/generated/cupynumeric.ndarray.nonzero", "api/generated/cupynumeric.ndarray.partition", "api/generated/cupynumeric.ndarray.prod", "api/generated/cupynumeric.ndarray.put", "api/generated/cupynumeric.ndarray.ravel", "api/generated/cupynumeric.ndarray.real", "api/generated/cupynumeric.ndarray.reshape", "api/generated/cupynumeric.ndarray.searchsorted", "api/generated/cupynumeric.ndarray.setfield", "api/generated/cupynumeric.ndarray.setflags", "api/generated/cupynumeric.ndarray.shape", "api/generated/cupynumeric.ndarray.size", "api/generated/cupynumeric.ndarray.sort", "api/generated/cupynumeric.ndarray.squeeze", "api/generated/cupynumeric.ndarray.strides", "api/generated/cupynumeric.ndarray.sum", "api/generated/cupynumeric.ndarray.swapaxes", "api/generated/cupynumeric.ndarray.take", "api/generated/cupynumeric.ndarray.tobytes", "api/generated/cupynumeric.ndarray.tofile", "api/generated/cupynumeric.ndarray.tolist", "api/generated/cupynumeric.ndarray.tostring", "api/generated/cupynumeric.ndarray.trace", "api/generated/cupynumeric.ndarray.transpose", "api/generated/cupynumeric.ndarray.unique", "api/generated/cupynumeric.ndarray.var", "api/generated/cupynumeric.ndarray.view", "api/generated/cupynumeric.ndim", "api/generated/cupynumeric.negative", "api/generated/cupynumeric.nextafter", "api/generated/cupynumeric.nonzero", "api/generated/cupynumeric.not_equal", "api/generated/cupynumeric.ones", "api/generated/cupynumeric.ones_like", "api/generated/cupynumeric.outer", "api/generated/cupynumeric.packbits", "api/generated/cupynumeric.partition", "api/generated/cupynumeric.percentile", "api/generated/cupynumeric.place", "api/generated/cupynumeric.positive", "api/generated/cupynumeric.power", "api/generated/cupynumeric.prod", "api/generated/cupynumeric.put", "api/generated/cupynumeric.put_along_axis", "api/generated/cupynumeric.putmask", "api/generated/cupynumeric.quantile", "api/generated/cupynumeric.rad2deg", "api/generated/cupynumeric.radians", "api/generated/cupynumeric.random.beta", "api/generated/cupynumeric.random.binomial", "api/generated/cupynumeric.random.bytes", "api/generated/cupynumeric.random.chisquare", "api/generated/cupynumeric.random.default_rng", "api/generated/cupynumeric.random.exponential", "api/generated/cupynumeric.random.f", "api/generated/cupynumeric.random.gamma", "api/generated/cupynumeric.random.geometric", "api/generated/cupynumeric.random.gumbel", "api/generated/cupynumeric.random.hypergeometric", "api/generated/cupynumeric.random.laplace", "api/generated/cupynumeric.random.logistic", "api/generated/cupynumeric.random.lognormal", "api/generated/cupynumeric.random.logseries", "api/generated/cupynumeric.random.negative_binomial", "api/generated/cupynumeric.random.noncentral_chisquare", "api/generated/cupynumeric.random.noncentral_f", "api/generated/cupynumeric.random.normal", "api/generated/cupynumeric.random.pareto", "api/generated/cupynumeric.random.poisson", "api/generated/cupynumeric.random.power", "api/generated/cupynumeric.random.rand", "api/generated/cupynumeric.random.randint", "api/generated/cupynumeric.random.randn", "api/generated/cupynumeric.random.random", "api/generated/cupynumeric.random.random_integers", "api/generated/cupynumeric.random.random_sample", "api/generated/cupynumeric.random.ranf", "api/generated/cupynumeric.random.rayleigh", "api/generated/cupynumeric.random.sample", "api/generated/cupynumeric.random.seed", "api/generated/cupynumeric.random.standard_cauchy", "api/generated/cupynumeric.random.standard_exponential", "api/generated/cupynumeric.random.standard_gamma", "api/generated/cupynumeric.random.standard_t", "api/generated/cupynumeric.random.triangular", "api/generated/cupynumeric.random.uniform", "api/generated/cupynumeric.random.vonmises", "api/generated/cupynumeric.random.wald", "api/generated/cupynumeric.random.weibull", "api/generated/cupynumeric.random.zipf", "api/generated/cupynumeric.ravel", "api/generated/cupynumeric.real", "api/generated/cupynumeric.reciprocal", "api/generated/cupynumeric.remainder", "api/generated/cupynumeric.repeat", "api/generated/cupynumeric.reshape", "api/generated/cupynumeric.right_shift", "api/generated/cupynumeric.rint", "api/generated/cupynumeric.roll", "api/generated/cupynumeric.rot90", "api/generated/cupynumeric.round", "api/generated/cupynumeric.row_stack", "api/generated/cupynumeric.searchsorted", "api/generated/cupynumeric.select", "api/generated/cupynumeric.shape", "api/generated/cupynumeric.sign", "api/generated/cupynumeric.signbit", "api/generated/cupynumeric.sin", "api/generated/cupynumeric.sinh", "api/generated/cupynumeric.sort", "api/generated/cupynumeric.sort_complex", "api/generated/cupynumeric.split", "api/generated/cupynumeric.sqrt", "api/generated/cupynumeric.square", "api/generated/cupynumeric.squeeze", "api/generated/cupynumeric.stack", "api/generated/cupynumeric.subtract", "api/generated/cupynumeric.sum", "api/generated/cupynumeric.swapaxes", "api/generated/cupynumeric.take", "api/generated/cupynumeric.take_along_axis", "api/generated/cupynumeric.tan", "api/generated/cupynumeric.tanh", "api/generated/cupynumeric.tensordot", "api/generated/cupynumeric.tile", "api/generated/cupynumeric.trace", "api/generated/cupynumeric.transpose", "api/generated/cupynumeric.tri", "api/generated/cupynumeric.tril", "api/generated/cupynumeric.tril_indices", "api/generated/cupynumeric.tril_indices_from", "api/generated/cupynumeric.triu", "api/generated/cupynumeric.triu_indices", "api/generated/cupynumeric.triu_indices_from", "api/generated/cupynumeric.true_divide", "api/generated/cupynumeric.trunc", "api/generated/cupynumeric.unique", "api/generated/cupynumeric.unpackbits", "api/generated/cupynumeric.unravel_index", "api/generated/cupynumeric.var", "api/generated/cupynumeric.vdot", "api/generated/cupynumeric.vsplit", "api/generated/cupynumeric.vstack", "api/generated/cupynumeric.where", "api/generated/cupynumeric.zeros", "api/generated/cupynumeric.zeros_like", "api/index", "api/indexing", "api/io", "api/linalg", "api/logic", "api/manipulation", "api/math", "api/ndarray", "api/random", "api/routines", "api/set", "api/settings", "api/sorting", "api/statistics", "api/window", "developer/CONTRIBUTING", "developer/building", "developer/index", "developer/testing", "examples/black_scholes", "examples/cholesky", "examples/compact_finite_difference", "examples/edge_detection", "examples/index", "examples/kmeans", "examples/newton_raphson_2d", "examples/stencil", "examples/torchswe", "faqs", "index", "installation", "oss-licenses", "user/advanced", "user/differences", "user/howtos/benchmarking", "user/howtos/index", "user/howtos/measuring", "user/howtos/patching", "user/index", "user/practices", "user/tutorial", "user/usage"], "envversion": {"nbsphinx": 4, "sphinx": 64, "sphinx.domains.c": 3, "sphinx.domains.changeset": 1, "sphinx.domains.citation": 1, "sphinx.domains.cpp": 9, "sphinx.domains.index": 1, "sphinx.domains.javascript": 3, "sphinx.domains.math": 2, "sphinx.domains.python": 4, "sphinx.domains.rst": 2, "sphinx.domains.std": 2, "sphinx.ext.intersphinx": 1}, "filenames": ["_implemented.rst", "api/_bitgenerator.rst", "api/_generator.rst", "api/_grouped.rst", "api/_ndarray.rst", "api/binary.rst", "api/broadcast.rst", "api/classes.rst", "api/comparison.rst", "api/creation.rst", "api/datatype.rst", "api/fft.rst", "api/generated/cupynumeric.absolute.rst", "api/generated/cupynumeric.add.rst", "api/generated/cupynumeric.all.rst", "api/generated/cupynumeric.allclose.rst", "api/generated/cupynumeric.amax.rst", "api/generated/cupynumeric.amin.rst", "api/generated/cupynumeric.angle.rst", "api/generated/cupynumeric.any.rst", "api/generated/cupynumeric.append.rst", "api/generated/cupynumeric.arange.rst", "api/generated/cupynumeric.arccos.rst", "api/generated/cupynumeric.arccosh.rst", "api/generated/cupynumeric.arcsin.rst", "api/generated/cupynumeric.arcsinh.rst", "api/generated/cupynumeric.arctan.rst", "api/generated/cupynumeric.arctan2.rst", "api/generated/cupynumeric.arctanh.rst", "api/generated/cupynumeric.argmax.rst", "api/generated/cupynumeric.argmin.rst", "api/generated/cupynumeric.argpartition.rst", "api/generated/cupynumeric.argsort.rst", "api/generated/cupynumeric.argwhere.rst", "api/generated/cupynumeric.array.rst", "api/generated/cupynumeric.array_equal.rst", "api/generated/cupynumeric.array_split.rst", "api/generated/cupynumeric.asarray.rst", "api/generated/cupynumeric.atleast_1d.rst", "api/generated/cupynumeric.atleast_2d.rst", "api/generated/cupynumeric.atleast_3d.rst", "api/generated/cupynumeric.average.rst", "api/generated/cupynumeric.bartlett.rst", "api/generated/cupynumeric.bincount.rst", "api/generated/cupynumeric.bitwise_and.rst", "api/generated/cupynumeric.bitwise_or.rst", "api/generated/cupynumeric.bitwise_xor.rst", "api/generated/cupynumeric.blackman.rst", "api/generated/cupynumeric.block.rst", "api/generated/cupynumeric.broadcast_arrays.rst", "api/generated/cupynumeric.broadcast_shapes.rst", "api/generated/cupynumeric.broadcast_to.rst", "api/generated/cupynumeric.cbrt.rst", "api/generated/cupynumeric.ceil.rst", "api/generated/cupynumeric.choose.rst", "api/generated/cupynumeric.clip.rst", "api/generated/cupynumeric.column_stack.rst", "api/generated/cupynumeric.compress.rst", "api/generated/cupynumeric.concatenate.rst", "api/generated/cupynumeric.conj.rst", "api/generated/cupynumeric.conjugate.rst", "api/generated/cupynumeric.convolve.rst", "api/generated/cupynumeric.copy.rst", "api/generated/cupynumeric.copysign.rst", "api/generated/cupynumeric.cos.rst", "api/generated/cupynumeric.cosh.rst", "api/generated/cupynumeric.count_nonzero.rst", "api/generated/cupynumeric.cov.rst", "api/generated/cupynumeric.cumprod.rst", "api/generated/cupynumeric.cumsum.rst", "api/generated/cupynumeric.deg2rad.rst", "api/generated/cupynumeric.degrees.rst", "api/generated/cupynumeric.diag.rst", "api/generated/cupynumeric.diag_indices.rst", "api/generated/cupynumeric.diag_indices_from.rst", "api/generated/cupynumeric.diagonal.rst", "api/generated/cupynumeric.diff.rst", "api/generated/cupynumeric.digitize.rst", "api/generated/cupynumeric.divide.rst", "api/generated/cupynumeric.dot.rst", "api/generated/cupynumeric.dsplit.rst", "api/generated/cupynumeric.dstack.rst", "api/generated/cupynumeric.einsum.rst", "api/generated/cupynumeric.einsum_path.rst", "api/generated/cupynumeric.empty.rst", "api/generated/cupynumeric.empty_like.rst", "api/generated/cupynumeric.equal.rst", "api/generated/cupynumeric.exp.rst", "api/generated/cupynumeric.exp2.rst", "api/generated/cupynumeric.expand_dims.rst", "api/generated/cupynumeric.expm1.rst", "api/generated/cupynumeric.extract.rst", "api/generated/cupynumeric.eye.rst", "api/generated/cupynumeric.fabs.rst", "api/generated/cupynumeric.fft.fft.rst", "api/generated/cupynumeric.fft.fft2.rst", "api/generated/cupynumeric.fft.fftn.rst", "api/generated/cupynumeric.fft.fftshift.rst", "api/generated/cupynumeric.fft.hfft.rst", "api/generated/cupynumeric.fft.ifft.rst", "api/generated/cupynumeric.fft.ifft2.rst", "api/generated/cupynumeric.fft.ifftn.rst", "api/generated/cupynumeric.fft.ifftshift.rst", "api/generated/cupynumeric.fft.ihfft.rst", "api/generated/cupynumeric.fft.irfft.rst", "api/generated/cupynumeric.fft.irfft2.rst", "api/generated/cupynumeric.fft.irfftn.rst", "api/generated/cupynumeric.fft.rfft.rst", "api/generated/cupynumeric.fft.rfft2.rst", "api/generated/cupynumeric.fft.rfftn.rst", "api/generated/cupynumeric.fill_diagonal.rst", "api/generated/cupynumeric.find_common_type.rst", "api/generated/cupynumeric.flatnonzero.rst", "api/generated/cupynumeric.flip.rst", "api/generated/cupynumeric.fliplr.rst", "api/generated/cupynumeric.flipud.rst", "api/generated/cupynumeric.float_power.rst", "api/generated/cupynumeric.floor.rst", "api/generated/cupynumeric.floor_divide.rst", "api/generated/cupynumeric.fmax.rst", "api/generated/cupynumeric.fmin.rst", "api/generated/cupynumeric.fmod.rst", "api/generated/cupynumeric.frexp.rst", "api/generated/cupynumeric.full.rst", "api/generated/cupynumeric.full_like.rst", "api/generated/cupynumeric.gcd.rst", "api/generated/cupynumeric.gradient.rst", "api/generated/cupynumeric.greater.rst", "api/generated/cupynumeric.greater_equal.rst", "api/generated/cupynumeric.hamming.rst", "api/generated/cupynumeric.hanning.rst", "api/generated/cupynumeric.histogram.rst", "api/generated/cupynumeric.hsplit.rst", "api/generated/cupynumeric.hstack.rst", "api/generated/cupynumeric.hypot.rst", "api/generated/cupynumeric.identity.rst", "api/generated/cupynumeric.imag.rst", "api/generated/cupynumeric.indices.rst", "api/generated/cupynumeric.inner.rst", "api/generated/cupynumeric.invert.rst", "api/generated/cupynumeric.isclose.rst", "api/generated/cupynumeric.iscomplex.rst", "api/generated/cupynumeric.iscomplexobj.rst", "api/generated/cupynumeric.isfinite.rst", "api/generated/cupynumeric.isinf.rst", "api/generated/cupynumeric.isnan.rst", "api/generated/cupynumeric.isneginf.rst", "api/generated/cupynumeric.isposinf.rst", "api/generated/cupynumeric.isreal.rst", "api/generated/cupynumeric.isrealobj.rst", "api/generated/cupynumeric.isscalar.rst", "api/generated/cupynumeric.ix_.rst", "api/generated/cupynumeric.kaiser.rst", "api/generated/cupynumeric.lcm.rst", "api/generated/cupynumeric.ldexp.rst", "api/generated/cupynumeric.left_shift.rst", "api/generated/cupynumeric.less.rst", "api/generated/cupynumeric.less_equal.rst", "api/generated/cupynumeric.linalg.cholesky.rst", "api/generated/cupynumeric.linalg.eig.rst", "api/generated/cupynumeric.linalg.eigvals.rst", "api/generated/cupynumeric.linalg.expm.rst", "api/generated/cupynumeric.linalg.matrix_power.rst", "api/generated/cupynumeric.linalg.multi_dot.rst", "api/generated/cupynumeric.linalg.norm.rst", "api/generated/cupynumeric.linalg.qr.rst", "api/generated/cupynumeric.linalg.solve.rst", "api/generated/cupynumeric.linalg.svd.rst", "api/generated/cupynumeric.linspace.rst", "api/generated/cupynumeric.load.rst", "api/generated/cupynumeric.log.rst", "api/generated/cupynumeric.log10.rst", "api/generated/cupynumeric.log1p.rst", "api/generated/cupynumeric.log2.rst", "api/generated/cupynumeric.logaddexp.rst", "api/generated/cupynumeric.logaddexp2.rst", "api/generated/cupynumeric.logical_and.rst", "api/generated/cupynumeric.logical_not.rst", "api/generated/cupynumeric.logical_or.rst", "api/generated/cupynumeric.logical_xor.rst", "api/generated/cupynumeric.mask_indices.rst", "api/generated/cupynumeric.matmul.rst", "api/generated/cupynumeric.maximum.rst", "api/generated/cupynumeric.mean.rst", "api/generated/cupynumeric.median.rst", "api/generated/cupynumeric.meshgrid.rst", "api/generated/cupynumeric.minimum.rst", "api/generated/cupynumeric.mod.rst", "api/generated/cupynumeric.modf.rst", "api/generated/cupynumeric.moveaxis.rst", "api/generated/cupynumeric.multiply.rst", "api/generated/cupynumeric.nanargmax.rst", "api/generated/cupynumeric.nanargmin.rst", "api/generated/cupynumeric.nancumprod.rst", "api/generated/cupynumeric.nancumsum.rst", "api/generated/cupynumeric.nanmax.rst", "api/generated/cupynumeric.nanmean.rst", "api/generated/cupynumeric.nanmedian.rst", "api/generated/cupynumeric.nanmin.rst", "api/generated/cupynumeric.nanpercentile.rst", "api/generated/cupynumeric.nanprod.rst", "api/generated/cupynumeric.nanquantile.rst", "api/generated/cupynumeric.nansum.rst", "api/generated/cupynumeric.ndarray.T.rst", "api/generated/cupynumeric.ndarray.__abs__.rst", "api/generated/cupynumeric.ndarray.__add__.rst", "api/generated/cupynumeric.ndarray.__and__.rst", "api/generated/cupynumeric.ndarray.__array__.rst", "api/generated/cupynumeric.ndarray.__bool__.rst", "api/generated/cupynumeric.ndarray.__complex__.rst", "api/generated/cupynumeric.ndarray.__contains__.rst", "api/generated/cupynumeric.ndarray.__copy__.rst", "api/generated/cupynumeric.ndarray.__deepcopy__.rst", "api/generated/cupynumeric.ndarray.__divmod__.rst", "api/generated/cupynumeric.ndarray.__eq__.rst", "api/generated/cupynumeric.ndarray.__float__.rst", "api/generated/cupynumeric.ndarray.__floordiv__.rst", "api/generated/cupynumeric.ndarray.__ge__.rst", "api/generated/cupynumeric.ndarray.__getitem__.rst", "api/generated/cupynumeric.ndarray.__gt__.rst", "api/generated/cupynumeric.ndarray.__iadd__.rst", "api/generated/cupynumeric.ndarray.__iand__.rst", "api/generated/cupynumeric.ndarray.__ifloordiv__.rst", "api/generated/cupynumeric.ndarray.__ilshift__.rst", "api/generated/cupynumeric.ndarray.__imatmul__.rst", "api/generated/cupynumeric.ndarray.__imod__.rst", "api/generated/cupynumeric.ndarray.__imul__.rst", "api/generated/cupynumeric.ndarray.__index__.rst", "api/generated/cupynumeric.ndarray.__int__.rst", "api/generated/cupynumeric.ndarray.__invert__.rst", "api/generated/cupynumeric.ndarray.__ior__.rst", "api/generated/cupynumeric.ndarray.__ipow__.rst", "api/generated/cupynumeric.ndarray.__irshift__.rst", "api/generated/cupynumeric.ndarray.__isub__.rst", "api/generated/cupynumeric.ndarray.__itruediv__.rst", "api/generated/cupynumeric.ndarray.__ixor__.rst", "api/generated/cupynumeric.ndarray.__le__.rst", "api/generated/cupynumeric.ndarray.__len__.rst", "api/generated/cupynumeric.ndarray.__lshift__.rst", "api/generated/cupynumeric.ndarray.__lt__.rst", "api/generated/cupynumeric.ndarray.__matmul__.rst", "api/generated/cupynumeric.ndarray.__mod__.rst", "api/generated/cupynumeric.ndarray.__mul__.rst", "api/generated/cupynumeric.ndarray.__ne__.rst", "api/generated/cupynumeric.ndarray.__neg__.rst", "api/generated/cupynumeric.ndarray.__new__.rst", "api/generated/cupynumeric.ndarray.__or__.rst", "api/generated/cupynumeric.ndarray.__pos__.rst", "api/generated/cupynumeric.ndarray.__pow__.rst", "api/generated/cupynumeric.ndarray.__reduce__.rst", "api/generated/cupynumeric.ndarray.__repr__.rst", "api/generated/cupynumeric.ndarray.__rmatmul__.rst", "api/generated/cupynumeric.ndarray.__rshift__.rst", "api/generated/cupynumeric.ndarray.__setitem__.rst", "api/generated/cupynumeric.ndarray.__setstate__.rst", "api/generated/cupynumeric.ndarray.__str__.rst", "api/generated/cupynumeric.ndarray.__sub__.rst", "api/generated/cupynumeric.ndarray.__truediv__.rst", "api/generated/cupynumeric.ndarray.__xor__.rst", "api/generated/cupynumeric.ndarray.all.rst", "api/generated/cupynumeric.ndarray.any.rst", "api/generated/cupynumeric.ndarray.argmax.rst", "api/generated/cupynumeric.ndarray.argmin.rst", "api/generated/cupynumeric.ndarray.argpartition.rst", "api/generated/cupynumeric.ndarray.argsort.rst", "api/generated/cupynumeric.ndarray.astype.rst", "api/generated/cupynumeric.ndarray.base.rst", "api/generated/cupynumeric.ndarray.choose.rst", "api/generated/cupynumeric.ndarray.clip.rst", "api/generated/cupynumeric.ndarray.compress.rst", "api/generated/cupynumeric.ndarray.conj.rst", "api/generated/cupynumeric.ndarray.conjugate.rst", "api/generated/cupynumeric.ndarray.copy.rst", "api/generated/cupynumeric.ndarray.ctypes.rst", "api/generated/cupynumeric.ndarray.cumprod.rst", "api/generated/cupynumeric.ndarray.cumsum.rst", "api/generated/cupynumeric.ndarray.data.rst", "api/generated/cupynumeric.ndarray.diagonal.rst", "api/generated/cupynumeric.ndarray.dot.rst", "api/generated/cupynumeric.ndarray.dtype.rst", "api/generated/cupynumeric.ndarray.dump.rst", "api/generated/cupynumeric.ndarray.dumps.rst", "api/generated/cupynumeric.ndarray.fill.rst", "api/generated/cupynumeric.ndarray.flags.rst", "api/generated/cupynumeric.ndarray.flat.rst", "api/generated/cupynumeric.ndarray.flatten.rst", "api/generated/cupynumeric.ndarray.flip.rst", "api/generated/cupynumeric.ndarray.getfield.rst", "api/generated/cupynumeric.ndarray.imag.rst", "api/generated/cupynumeric.ndarray.item.rst", "api/generated/cupynumeric.ndarray.itemset.rst", "api/generated/cupynumeric.ndarray.itemsize.rst", "api/generated/cupynumeric.ndarray.max.rst", "api/generated/cupynumeric.ndarray.mean.rst", "api/generated/cupynumeric.ndarray.min.rst", "api/generated/cupynumeric.ndarray.nbytes.rst", "api/generated/cupynumeric.ndarray.ndim.rst", "api/generated/cupynumeric.ndarray.nonzero.rst", "api/generated/cupynumeric.ndarray.partition.rst", "api/generated/cupynumeric.ndarray.prod.rst", "api/generated/cupynumeric.ndarray.put.rst", "api/generated/cupynumeric.ndarray.ravel.rst", "api/generated/cupynumeric.ndarray.real.rst", "api/generated/cupynumeric.ndarray.reshape.rst", "api/generated/cupynumeric.ndarray.searchsorted.rst", "api/generated/cupynumeric.ndarray.setfield.rst", "api/generated/cupynumeric.ndarray.setflags.rst", "api/generated/cupynumeric.ndarray.shape.rst", "api/generated/cupynumeric.ndarray.size.rst", "api/generated/cupynumeric.ndarray.sort.rst", "api/generated/cupynumeric.ndarray.squeeze.rst", "api/generated/cupynumeric.ndarray.strides.rst", "api/generated/cupynumeric.ndarray.sum.rst", "api/generated/cupynumeric.ndarray.swapaxes.rst", "api/generated/cupynumeric.ndarray.take.rst", "api/generated/cupynumeric.ndarray.tobytes.rst", "api/generated/cupynumeric.ndarray.tofile.rst", "api/generated/cupynumeric.ndarray.tolist.rst", "api/generated/cupynumeric.ndarray.tostring.rst", "api/generated/cupynumeric.ndarray.trace.rst", "api/generated/cupynumeric.ndarray.transpose.rst", "api/generated/cupynumeric.ndarray.unique.rst", "api/generated/cupynumeric.ndarray.var.rst", "api/generated/cupynumeric.ndarray.view.rst", "api/generated/cupynumeric.ndim.rst", "api/generated/cupynumeric.negative.rst", "api/generated/cupynumeric.nextafter.rst", "api/generated/cupynumeric.nonzero.rst", "api/generated/cupynumeric.not_equal.rst", "api/generated/cupynumeric.ones.rst", "api/generated/cupynumeric.ones_like.rst", "api/generated/cupynumeric.outer.rst", "api/generated/cupynumeric.packbits.rst", "api/generated/cupynumeric.partition.rst", "api/generated/cupynumeric.percentile.rst", "api/generated/cupynumeric.place.rst", "api/generated/cupynumeric.positive.rst", "api/generated/cupynumeric.power.rst", "api/generated/cupynumeric.prod.rst", "api/generated/cupynumeric.put.rst", "api/generated/cupynumeric.put_along_axis.rst", "api/generated/cupynumeric.putmask.rst", "api/generated/cupynumeric.quantile.rst", "api/generated/cupynumeric.rad2deg.rst", "api/generated/cupynumeric.radians.rst", "api/generated/cupynumeric.random.beta.rst", "api/generated/cupynumeric.random.binomial.rst", "api/generated/cupynumeric.random.bytes.rst", "api/generated/cupynumeric.random.chisquare.rst", "api/generated/cupynumeric.random.default_rng.rst", "api/generated/cupynumeric.random.exponential.rst", "api/generated/cupynumeric.random.f.rst", "api/generated/cupynumeric.random.gamma.rst", "api/generated/cupynumeric.random.geometric.rst", "api/generated/cupynumeric.random.gumbel.rst", "api/generated/cupynumeric.random.hypergeometric.rst", "api/generated/cupynumeric.random.laplace.rst", "api/generated/cupynumeric.random.logistic.rst", "api/generated/cupynumeric.random.lognormal.rst", "api/generated/cupynumeric.random.logseries.rst", "api/generated/cupynumeric.random.negative_binomial.rst", "api/generated/cupynumeric.random.noncentral_chisquare.rst", "api/generated/cupynumeric.random.noncentral_f.rst", "api/generated/cupynumeric.random.normal.rst", "api/generated/cupynumeric.random.pareto.rst", "api/generated/cupynumeric.random.poisson.rst", "api/generated/cupynumeric.random.power.rst", "api/generated/cupynumeric.random.rand.rst", "api/generated/cupynumeric.random.randint.rst", "api/generated/cupynumeric.random.randn.rst", "api/generated/cupynumeric.random.random.rst", "api/generated/cupynumeric.random.random_integers.rst", "api/generated/cupynumeric.random.random_sample.rst", "api/generated/cupynumeric.random.ranf.rst", "api/generated/cupynumeric.random.rayleigh.rst", "api/generated/cupynumeric.random.sample.rst", "api/generated/cupynumeric.random.seed.rst", "api/generated/cupynumeric.random.standard_cauchy.rst", "api/generated/cupynumeric.random.standard_exponential.rst", "api/generated/cupynumeric.random.standard_gamma.rst", "api/generated/cupynumeric.random.standard_t.rst", "api/generated/cupynumeric.random.triangular.rst", "api/generated/cupynumeric.random.uniform.rst", "api/generated/cupynumeric.random.vonmises.rst", "api/generated/cupynumeric.random.wald.rst", "api/generated/cupynumeric.random.weibull.rst", "api/generated/cupynumeric.random.zipf.rst", "api/generated/cupynumeric.ravel.rst", "api/generated/cupynumeric.real.rst", "api/generated/cupynumeric.reciprocal.rst", "api/generated/cupynumeric.remainder.rst", "api/generated/cupynumeric.repeat.rst", "api/generated/cupynumeric.reshape.rst", "api/generated/cupynumeric.right_shift.rst", "api/generated/cupynumeric.rint.rst", "api/generated/cupynumeric.roll.rst", "api/generated/cupynumeric.rot90.rst", "api/generated/cupynumeric.round.rst", "api/generated/cupynumeric.row_stack.rst", "api/generated/cupynumeric.searchsorted.rst", "api/generated/cupynumeric.select.rst", "api/generated/cupynumeric.shape.rst", "api/generated/cupynumeric.sign.rst", "api/generated/cupynumeric.signbit.rst", "api/generated/cupynumeric.sin.rst", "api/generated/cupynumeric.sinh.rst", "api/generated/cupynumeric.sort.rst", "api/generated/cupynumeric.sort_complex.rst", "api/generated/cupynumeric.split.rst", "api/generated/cupynumeric.sqrt.rst", "api/generated/cupynumeric.square.rst", "api/generated/cupynumeric.squeeze.rst", "api/generated/cupynumeric.stack.rst", "api/generated/cupynumeric.subtract.rst", "api/generated/cupynumeric.sum.rst", "api/generated/cupynumeric.swapaxes.rst", "api/generated/cupynumeric.take.rst", "api/generated/cupynumeric.take_along_axis.rst", "api/generated/cupynumeric.tan.rst", "api/generated/cupynumeric.tanh.rst", "api/generated/cupynumeric.tensordot.rst", "api/generated/cupynumeric.tile.rst", "api/generated/cupynumeric.trace.rst", "api/generated/cupynumeric.transpose.rst", "api/generated/cupynumeric.tri.rst", "api/generated/cupynumeric.tril.rst", "api/generated/cupynumeric.tril_indices.rst", "api/generated/cupynumeric.tril_indices_from.rst", "api/generated/cupynumeric.triu.rst", "api/generated/cupynumeric.triu_indices.rst", "api/generated/cupynumeric.triu_indices_from.rst", "api/generated/cupynumeric.true_divide.rst", "api/generated/cupynumeric.trunc.rst", "api/generated/cupynumeric.unique.rst", "api/generated/cupynumeric.unpackbits.rst", "api/generated/cupynumeric.unravel_index.rst", "api/generated/cupynumeric.var.rst", "api/generated/cupynumeric.vdot.rst", "api/generated/cupynumeric.vsplit.rst", "api/generated/cupynumeric.vstack.rst", "api/generated/cupynumeric.where.rst", "api/generated/cupynumeric.zeros.rst", "api/generated/cupynumeric.zeros_like.rst", "api/index.rst", "api/indexing.rst", "api/io.rst", "api/linalg.rst", "api/logic.rst", "api/manipulation.rst", "api/math.rst", "api/ndarray.rst", "api/random.rst", "api/routines.rst", "api/set.rst", "api/settings.rst", "api/sorting.rst", "api/statistics.rst", "api/window.rst", "developer/CONTRIBUTING.md", "developer/building.rst", "developer/index.rst", "developer/testing.rst", "examples/black_scholes.ipynb", "examples/cholesky.ipynb", "examples/compact_finite_difference.ipynb", "examples/edge_detection.ipynb", "examples/index.rst", "examples/kmeans.ipynb", "examples/newton_raphson_2d.ipynb", "examples/stencil.ipynb", "examples/torchswe.ipynb", "faqs.rst", "index.rst", "installation.rst", "oss-licenses.rst", "user/advanced.rst", "user/differences.rst", "user/howtos/benchmarking.rst", "user/howtos/index.rst", "user/howtos/measuring.rst", "user/howtos/patching.rst", "user/index.rst", "user/practices.rst", "user/tutorial.rst", "user/usage.rst"], "indexentries": {"__abs__() (cupynumeric.ndarray method)": [[204, "cupynumeric.ndarray.__abs__", false]], "__add__() (cupynumeric.ndarray method)": [[205, "cupynumeric.ndarray.__add__", false]], "__and__() (cupynumeric.ndarray method)": [[206, "cupynumeric.ndarray.__and__", false]], "__array__() (cupynumeric.ndarray method)": [[207, "cupynumeric.ndarray.__array__", false]], "__bool__() (cupynumeric.ndarray method)": [[208, "cupynumeric.ndarray.__bool__", false]], "__complex__() (cupynumeric.ndarray method)": [[209, "cupynumeric.ndarray.__complex__", false]], "__contains__() (cupynumeric.ndarray method)": [[210, "cupynumeric.ndarray.__contains__", false]], "__copy__() (cupynumeric.ndarray method)": [[211, "cupynumeric.ndarray.__copy__", false]], "__deepcopy__() (cupynumeric.ndarray method)": [[212, "cupynumeric.ndarray.__deepcopy__", false]], "__divmod__() (cupynumeric.ndarray method)": [[213, "cupynumeric.ndarray.__divmod__", false]], "__eq__() (cupynumeric.ndarray method)": [[214, "cupynumeric.ndarray.__eq__", false]], "__float__() (cupynumeric.ndarray method)": [[215, "cupynumeric.ndarray.__float__", false]], "__floordiv__() (cupynumeric.ndarray method)": [[216, "cupynumeric.ndarray.__floordiv__", false]], "__ge__() (cupynumeric.ndarray method)": [[217, "cupynumeric.ndarray.__ge__", false]], "__getitem__() (cupynumeric.ndarray method)": [[218, "cupynumeric.ndarray.__getitem__", false]], "__gt__() (cupynumeric.ndarray method)": [[219, "cupynumeric.ndarray.__gt__", false]], "__iadd__() (cupynumeric.ndarray method)": [[220, "cupynumeric.ndarray.__iadd__", false]], "__iand__() (cupynumeric.ndarray method)": [[221, "cupynumeric.ndarray.__iand__", false]], "__ifloordiv__() (cupynumeric.ndarray method)": [[222, "cupynumeric.ndarray.__ifloordiv__", false]], "__ilshift__() (cupynumeric.ndarray method)": [[223, "cupynumeric.ndarray.__ilshift__", false]], "__imatmul__() (cupynumeric.ndarray method)": [[224, "cupynumeric.ndarray.__imatmul__", false]], "__imod__() (cupynumeric.ndarray method)": [[225, "cupynumeric.ndarray.__imod__", false]], "__imul__() (cupynumeric.ndarray method)": [[226, "cupynumeric.ndarray.__imul__", false]], "__index__() (cupynumeric.ndarray method)": [[227, "cupynumeric.ndarray.__index__", false]], "__init__() (cupynumeric.ndarray method)": [[4, "cupynumeric.ndarray.__init__", false]], "__init__() (cupynumeric.random.bitgenerator method)": [[1, "cupynumeric.random.BitGenerator.__init__", false]], "__init__() (cupynumeric.random.generator method)": [[2, "cupynumeric.random.Generator.__init__", false]], "__int__() (cupynumeric.ndarray method)": [[228, "cupynumeric.ndarray.__int__", false]], "__invert__() (cupynumeric.ndarray method)": [[229, "cupynumeric.ndarray.__invert__", false]], "__ior__() (cupynumeric.ndarray method)": [[230, "cupynumeric.ndarray.__ior__", false]], "__ipow__() (cupynumeric.ndarray method)": [[231, "cupynumeric.ndarray.__ipow__", false]], "__irshift__() (cupynumeric.ndarray method)": [[232, "cupynumeric.ndarray.__irshift__", false]], "__isub__() (cupynumeric.ndarray method)": [[233, "cupynumeric.ndarray.__isub__", false]], "__itruediv__() (cupynumeric.ndarray method)": [[234, "cupynumeric.ndarray.__itruediv__", false]], "__ixor__() (cupynumeric.ndarray method)": [[235, "cupynumeric.ndarray.__ixor__", false]], "__le__() (cupynumeric.ndarray method)": [[236, "cupynumeric.ndarray.__le__", false]], "__len__() (cupynumeric.ndarray method)": [[237, "cupynumeric.ndarray.__len__", false]], "__lshift__() (cupynumeric.ndarray method)": [[238, "cupynumeric.ndarray.__lshift__", false]], "__lt__() (cupynumeric.ndarray method)": [[239, "cupynumeric.ndarray.__lt__", false]], "__matmul__() (cupynumeric.ndarray method)": [[240, "cupynumeric.ndarray.__matmul__", false]], "__mod__() (cupynumeric.ndarray method)": [[241, "cupynumeric.ndarray.__mod__", false]], "__mul__() (cupynumeric.ndarray method)": [[242, "cupynumeric.ndarray.__mul__", false]], "__ne__() (cupynumeric.ndarray method)": [[243, "cupynumeric.ndarray.__ne__", false]], "__neg__() (cupynumeric.ndarray method)": [[244, "cupynumeric.ndarray.__neg__", false]], "__new__() (cupynumeric.ndarray method)": [[245, "cupynumeric.ndarray.__new__", false]], "__or__() (cupynumeric.ndarray method)": [[246, "cupynumeric.ndarray.__or__", false]], "__pos__() (cupynumeric.ndarray method)": [[247, "cupynumeric.ndarray.__pos__", false]], "__pow__() (cupynumeric.ndarray method)": [[248, "cupynumeric.ndarray.__pow__", false]], "__reduce__() (cupynumeric.ndarray method)": [[249, "cupynumeric.ndarray.__reduce__", false]], "__repr__() (cupynumeric.ndarray method)": [[250, "cupynumeric.ndarray.__repr__", false]], "__rmatmul__() (cupynumeric.ndarray method)": [[251, "cupynumeric.ndarray.__rmatmul__", false]], "__rshift__() (cupynumeric.ndarray method)": [[252, "cupynumeric.ndarray.__rshift__", false]], "__setitem__() (cupynumeric.ndarray method)": [[253, "cupynumeric.ndarray.__setitem__", false]], "__setstate__() (cupynumeric.ndarray method)": [[254, "cupynumeric.ndarray.__setstate__", false]], "__str__() (cupynumeric.ndarray method)": [[255, "cupynumeric.ndarray.__str__", false]], "__sub__() (cupynumeric.ndarray method)": [[256, "cupynumeric.ndarray.__sub__", false]], "__truediv__() (cupynumeric.ndarray method)": [[257, "cupynumeric.ndarray.__truediv__", false]], "__xor__() (cupynumeric.ndarray method)": [[258, "cupynumeric.ndarray.__xor__", false]], "absolute() (in module cupynumeric)": [[12, "cupynumeric.absolute", false]], "add() (in module cupynumeric)": [[13, "cupynumeric.add", false]], "aligned (in module cupynumeric)": [[283, "cupynumeric.ALIGNED", false]], "all() (cupynumeric.ndarray method)": [[259, "cupynumeric.ndarray.all", false]], "all() (in module cupynumeric)": [[14, "cupynumeric.all", false]], "allclose() (in module cupynumeric)": [[15, "cupynumeric.allclose", false]], "amax() (in module cupynumeric)": [[16, "cupynumeric.amax", false]], "amin() (in module cupynumeric)": [[17, "cupynumeric.amin", false]], "angle() (in module cupynumeric)": [[18, "cupynumeric.angle", false]], "any() (cupynumeric.ndarray method)": [[260, "cupynumeric.ndarray.any", false]], "any() (in module cupynumeric)": [[19, "cupynumeric.any", false]], "append() (in module cupynumeric)": [[20, "cupynumeric.append", false]], "arange() (in module cupynumeric)": [[21, "cupynumeric.arange", false]], "arccos() (in module cupynumeric)": [[22, "cupynumeric.arccos", false]], "arccosh() (in module cupynumeric)": [[23, "cupynumeric.arccosh", false]], "arcsin() (in module cupynumeric)": [[24, "cupynumeric.arcsin", false]], "arcsinh() (in module cupynumeric)": [[25, "cupynumeric.arcsinh", false]], "arctan() (in module cupynumeric)": [[26, "cupynumeric.arctan", false]], "arctan2() (in module cupynumeric)": [[27, "cupynumeric.arctan2", false]], "arctanh() (in module cupynumeric)": [[28, "cupynumeric.arctanh", false]], "argmax() (cupynumeric.ndarray method)": [[261, "cupynumeric.ndarray.argmax", false]], "argmax() (in module cupynumeric)": [[29, "cupynumeric.argmax", false]], "argmin() (cupynumeric.ndarray method)": [[262, "cupynumeric.ndarray.argmin", false]], "argmin() (in module cupynumeric)": [[30, "cupynumeric.argmin", false]], "argpartition() (cupynumeric.ndarray method)": [[263, "cupynumeric.ndarray.argpartition", false]], "argpartition() (in module cupynumeric)": [[31, "cupynumeric.argpartition", false]], "argsort() (cupynumeric.ndarray method)": [[264, "cupynumeric.ndarray.argsort", false]], "argsort() (in module cupynumeric)": [[32, "cupynumeric.argsort", false]], "argwhere() (in module cupynumeric)": [[33, "cupynumeric.argwhere", false]], "array() (in module cupynumeric)": [[34, "cupynumeric.array", false]], "array_equal() (in module cupynumeric)": [[35, "cupynumeric.array_equal", false]], "array_split() (in module cupynumeric)": [[36, "cupynumeric.array_split", false]], "asarray() (in module cupynumeric)": [[37, "cupynumeric.asarray", false]], "astype() (cupynumeric.ndarray method)": [[265, "cupynumeric.ndarray.astype", false]], "atleast_1d() (in module cupynumeric)": [[38, "cupynumeric.atleast_1d", false]], "atleast_2d() (in module cupynumeric)": [[39, "cupynumeric.atleast_2d", false]], "atleast_3d() (in module cupynumeric)": [[40, "cupynumeric.atleast_3d", false]], "average() (in module cupynumeric)": [[41, "cupynumeric.average", false]], "bartlett() (in module cupynumeric)": [[42, "cupynumeric.bartlett", false]], "base (cupynumeric.ndarray property)": [[266, "cupynumeric.ndarray.base", false]], "behaved (in module cupynumeric)": [[283, "cupynumeric.BEHAVED", false]], "beta() (in module cupynumeric.random)": [[345, "cupynumeric.random.beta", false]], "bincount() (in module cupynumeric)": [[43, "cupynumeric.bincount", false]], "binomial() (in module cupynumeric.random)": [[346, "cupynumeric.random.binomial", false]], "bitgenerator (class in cupynumeric.random)": [[1, "cupynumeric.random.BitGenerator", false]], "bitwise_and() (in module cupynumeric)": [[44, "cupynumeric.bitwise_and", false]], "bitwise_or() (in module cupynumeric)": [[45, "cupynumeric.bitwise_or", false]], "bitwise_xor() (in module cupynumeric)": [[46, "cupynumeric.bitwise_xor", false]], "blackman() (in module cupynumeric)": [[47, "cupynumeric.blackman", false]], "block() (in module cupynumeric)": [[48, "cupynumeric.block", false]], "broadcast (class in cupynumeric)": [[6, "cupynumeric.broadcast", false]], "broadcast_arrays() (in module cupynumeric)": [[49, "cupynumeric.broadcast_arrays", false]], "broadcast_shapes() (in module cupynumeric)": [[50, "cupynumeric.broadcast_shapes", false]], "broadcast_to() (in module cupynumeric)": [[51, "cupynumeric.broadcast_to", false]], "bytes() (in module cupynumeric.random)": [[347, "cupynumeric.random.bytes", false]], "c_contiguous (cupynumeric.ndarray attribute)": [[283, "cupynumeric.ndarray.C_CONTIGUOUS", false]], "carray (in module cupynumeric)": [[283, "cupynumeric.CARRAY", false]], "cbrt() (in module cupynumeric)": [[52, "cupynumeric.cbrt", false]], "ceil() (in module cupynumeric)": [[53, "cupynumeric.ceil", false]], "chisquare() (in module cupynumeric.random)": [[348, "cupynumeric.random.chisquare", false]], "cholesky() (in module cupynumeric.linalg)": [[158, "cupynumeric.linalg.cholesky", false]], "choose() (cupynumeric.ndarray method)": [[267, "cupynumeric.ndarray.choose", false]], "choose() (in module cupynumeric)": [[54, "cupynumeric.choose", false]], "clip() (cupynumeric.ndarray method)": [[268, "cupynumeric.ndarray.clip", false]], "clip() (in module cupynumeric)": [[55, "cupynumeric.clip", false]], "column_stack() (in module cupynumeric)": [[56, "cupynumeric.column_stack", false]], "compress() (cupynumeric.ndarray method)": [[269, "cupynumeric.ndarray.compress", false]], "compress() (in module cupynumeric)": [[57, "cupynumeric.compress", false]], "concatenate() (in module cupynumeric)": [[58, "cupynumeric.concatenate", false]], "conj() (cupynumeric.ndarray method)": [[270, "cupynumeric.ndarray.conj", false]], "conj() (in module cupynumeric)": [[59, "cupynumeric.conj", false]], "conjugate() (cupynumeric.ndarray method)": [[271, "cupynumeric.ndarray.conjugate", false]], "conjugate() (in module cupynumeric)": [[60, "cupynumeric.conjugate", false]], "convolve() (in module cupynumeric)": [[61, "cupynumeric.convolve", false]], "copy() (cupynumeric.ndarray method)": [[272, "cupynumeric.ndarray.copy", false]], "copy() (in module cupynumeric)": [[62, "cupynumeric.copy", false]], "copysign() (in module cupynumeric)": [[63, "cupynumeric.copysign", false]], "cos() (in module cupynumeric)": [[64, "cupynumeric.cos", false]], "cosh() (in module cupynumeric)": [[65, "cupynumeric.cosh", false]], "count_nonzero() (in module cupynumeric)": [[66, "cupynumeric.count_nonzero", false]], "cov() (in module cupynumeric)": [[67, "cupynumeric.cov", false]], "ctypes (cupynumeric.ndarray property)": [[273, "cupynumeric.ndarray.ctypes", false]], "cumprod() (cupynumeric.ndarray method)": [[274, "cupynumeric.ndarray.cumprod", false]], "cumprod() (in module cupynumeric)": [[68, "cupynumeric.cumprod", false]], "cumsum() (cupynumeric.ndarray method)": [[275, "cupynumeric.ndarray.cumsum", false]], "cumsum() (in module cupynumeric)": [[69, "cupynumeric.cumsum", false]], "cupynumeric.fft": [[11, "module-cupynumeric.fft", false]], "cupynumeric.linalg": [[446, "module-cupynumeric.linalg", false]], "cupynumeric.random": [[451, "module-cupynumeric.random", false]], "data (cupynumeric.ndarray property)": [[276, "cupynumeric.ndarray.data", false]], "default_rng() (in module cupynumeric.random)": [[349, "cupynumeric.random.default_rng", false]], "deg2rad() (in module cupynumeric)": [[70, "cupynumeric.deg2rad", false]], "degrees() (in module cupynumeric)": [[71, "cupynumeric.degrees", false]], "diag() (in module cupynumeric)": [[72, "cupynumeric.diag", false]], "diag_indices() (in module cupynumeric)": [[73, "cupynumeric.diag_indices", false]], "diag_indices_from() (in module cupynumeric)": [[74, "cupynumeric.diag_indices_from", false]], "diagonal() (cupynumeric.ndarray method)": [[277, "cupynumeric.ndarray.diagonal", false]], "diagonal() (in module cupynumeric)": [[75, "cupynumeric.diagonal", false]], "diff() (in module cupynumeric)": [[76, "cupynumeric.diff", false]], "digitize() (in module cupynumeric)": [[77, "cupynumeric.digitize", false]], "divide() (in module cupynumeric)": [[78, "cupynumeric.divide", false]], "dot() (cupynumeric.ndarray method)": [[278, "cupynumeric.ndarray.dot", false]], "dot() (in module cupynumeric)": [[79, "cupynumeric.dot", false]], "dsplit() (in module cupynumeric)": [[80, "cupynumeric.dsplit", false]], "dstack() (in module cupynumeric)": [[81, "cupynumeric.dstack", false]], "dtype (cupynumeric.ndarray property)": [[279, "cupynumeric.ndarray.dtype", false]], "dump() (cupynumeric.ndarray method)": [[280, "cupynumeric.ndarray.dump", false]], "dumps() (cupynumeric.ndarray method)": [[281, "cupynumeric.ndarray.dumps", false]], "eig() (in module cupynumeric.linalg)": [[159, "cupynumeric.linalg.eig", false]], "eigvals() (in module cupynumeric.linalg)": [[160, "cupynumeric.linalg.eigvals", false]], "einsum() (in module cupynumeric)": [[82, "cupynumeric.einsum", false]], "einsum_path() (in module cupynumeric)": [[83, "cupynumeric.einsum_path", false]], "empty() (in module cupynumeric)": [[84, "cupynumeric.empty", false]], "empty_like() (in module cupynumeric)": [[85, "cupynumeric.empty_like", false]], "equal() (in module cupynumeric)": [[86, "cupynumeric.equal", false]], "exp() (in module cupynumeric)": [[87, "cupynumeric.exp", false]], "exp2() (in module cupynumeric)": [[88, "cupynumeric.exp2", false]], "expand_dims() (in module cupynumeric)": [[89, "cupynumeric.expand_dims", false]], "expm() (in module cupynumeric.linalg)": [[161, "cupynumeric.linalg.expm", false]], "expm1() (in module cupynumeric)": [[90, "cupynumeric.expm1", false]], "exponential() (in module cupynumeric.random)": [[350, "cupynumeric.random.exponential", false]], "extract() (in module cupynumeric)": [[91, "cupynumeric.extract", false]], "eye() (in module cupynumeric)": [[92, "cupynumeric.eye", false]], "f() (in module cupynumeric.random)": [[351, "cupynumeric.random.f", false]], "f_contiguous (in module cupynumeric)": [[283, "cupynumeric.F_CONTIGUOUS", false]], "fabs() (in module cupynumeric)": [[93, "cupynumeric.fabs", false]], "farray (in module cupynumeric)": [[283, "cupynumeric.FARRAY", false]], "fft() (in module cupynumeric.fft)": [[94, "cupynumeric.fft.fft", false]], "fft2() (in module cupynumeric.fft)": [[95, "cupynumeric.fft.fft2", false]], "fftn() (in module cupynumeric.fft)": [[96, "cupynumeric.fft.fftn", false]], "fftshift() (in module cupynumeric.fft)": [[97, "cupynumeric.fft.fftshift", false]], "fill() (cupynumeric.ndarray method)": [[282, "cupynumeric.ndarray.fill", false]], "fill_diagonal() (in module cupynumeric)": [[110, "cupynumeric.fill_diagonal", false]], "find_common_type() (in module cupynumeric)": [[111, "cupynumeric.find_common_type", false]], "flags (cupynumeric.ndarray property)": [[283, "cupynumeric.ndarray.flags", false]], "flat (cupynumeric.ndarray property)": [[284, "cupynumeric.ndarray.flat", false]], "flatnonzero() (in module cupynumeric)": [[112, "cupynumeric.flatnonzero", false]], "flatten() (cupynumeric.ndarray method)": [[285, "cupynumeric.ndarray.flatten", false]], "flip() (cupynumeric.ndarray method)": [[286, "cupynumeric.ndarray.flip", false]], "flip() (in module cupynumeric)": [[113, "cupynumeric.flip", false]], "fliplr() (in module cupynumeric)": [[114, "cupynumeric.fliplr", false]], "flipud() (in module cupynumeric)": [[115, "cupynumeric.flipud", false]], "float_power() (in module cupynumeric)": [[116, "cupynumeric.float_power", false]], "floor() (in module cupynumeric)": [[117, "cupynumeric.floor", false]], "floor_divide() (in module cupynumeric)": [[118, "cupynumeric.floor_divide", false]], "fmax() (in module cupynumeric)": [[119, "cupynumeric.fmax", false]], "fmin() (in module cupynumeric)": [[120, "cupynumeric.fmin", false]], "fmod() (in module cupynumeric)": [[121, "cupynumeric.fmod", false]], "fnc (in module cupynumeric)": [[283, "cupynumeric.FNC", false]], "forc (in module cupynumeric)": [[283, "cupynumeric.FORC", false]], "frexp() (in module cupynumeric)": [[122, "cupynumeric.frexp", false]], "full() (in module cupynumeric)": [[123, "cupynumeric.full", false]], "full_like() (in module cupynumeric)": [[124, "cupynumeric.full_like", false]], "gamma() (in module cupynumeric.random)": [[352, "cupynumeric.random.gamma", false]], "gcd() (in module cupynumeric)": [[125, "cupynumeric.gcd", false]], "generator (class in cupynumeric.random)": [[2, "cupynumeric.random.Generator", false]], "geometric() (in module cupynumeric.random)": [[353, "cupynumeric.random.geometric", false]], "getfield() (cupynumeric.ndarray method)": [[287, "cupynumeric.ndarray.getfield", false]], "gradient() (in module cupynumeric)": [[126, "cupynumeric.gradient", false]], "greater() (in module cupynumeric)": [[127, "cupynumeric.greater", false]], "greater_equal() (in module cupynumeric)": [[128, "cupynumeric.greater_equal", false]], "gumbel() (in module cupynumeric.random)": [[354, "cupynumeric.random.gumbel", false]], "hamming() (in module cupynumeric)": [[129, "cupynumeric.hamming", false]], "hanning() (in module cupynumeric)": [[130, "cupynumeric.hanning", false]], "hfft() (in module cupynumeric.fft)": [[98, "cupynumeric.fft.hfft", false]], "histogram() (in module cupynumeric)": [[131, "cupynumeric.histogram", false]], "hsplit() (in module cupynumeric)": [[132, "cupynumeric.hsplit", false]], "hstack() (in module cupynumeric)": [[133, "cupynumeric.hstack", false]], "hypergeometric() (in module cupynumeric.random)": [[355, "cupynumeric.random.hypergeometric", false]], "hypot() (in module cupynumeric)": [[134, "cupynumeric.hypot", false]], "identity() (in module cupynumeric)": [[135, "cupynumeric.identity", false]], "ifft() (in module cupynumeric.fft)": [[99, "cupynumeric.fft.ifft", false]], "ifft2() (in module cupynumeric.fft)": [[100, "cupynumeric.fft.ifft2", false]], "ifftn() (in module cupynumeric.fft)": [[101, "cupynumeric.fft.ifftn", false]], "ifftshift() (in module cupynumeric.fft)": [[102, "cupynumeric.fft.ifftshift", false]], "ihfft() (in module cupynumeric.fft)": [[103, "cupynumeric.fft.ihfft", false]], "imag (cupynumeric.ndarray property)": [[288, "cupynumeric.ndarray.imag", false]], "imag() (in module cupynumeric)": [[136, "cupynumeric.imag", false]], "index (cupynumeric.broadcast property)": [[6, "cupynumeric.broadcast.index", false]], "indices() (in module cupynumeric)": [[137, "cupynumeric.indices", false]], "inner() (in module cupynumeric)": [[138, "cupynumeric.inner", false]], "invert() (in module cupynumeric)": [[139, "cupynumeric.invert", false]], "irfft() (in module cupynumeric.fft)": [[104, "cupynumeric.fft.irfft", false]], "irfft2() (in module cupynumeric.fft)": [[105, "cupynumeric.fft.irfft2", false]], "irfftn() (in module cupynumeric.fft)": [[106, "cupynumeric.fft.irfftn", false]], "isclose() (in module cupynumeric)": [[140, "cupynumeric.isclose", false]], "iscomplex() (in module cupynumeric)": [[141, "cupynumeric.iscomplex", false]], "iscomplexobj() (in module cupynumeric)": [[142, "cupynumeric.iscomplexobj", false]], "isfinite() (in module cupynumeric)": [[143, "cupynumeric.isfinite", false]], "isinf() (in module cupynumeric)": [[144, "cupynumeric.isinf", false]], "isnan() (in module cupynumeric)": [[145, "cupynumeric.isnan", false]], "isneginf() (in module cupynumeric)": [[146, "cupynumeric.isneginf", false]], "isposinf() (in module cupynumeric)": [[147, "cupynumeric.isposinf", false]], "isreal() (in module cupynumeric)": [[148, "cupynumeric.isreal", false]], "isrealobj() (in module cupynumeric)": [[149, "cupynumeric.isrealobj", false]], "isscalar() (in module cupynumeric)": [[150, "cupynumeric.isscalar", false]], "item() (cupynumeric.ndarray method)": [[289, "cupynumeric.ndarray.item", false]], "itemset (cupynumeric.ndarray attribute)": [[290, "cupynumeric.ndarray.itemset", false]], "itemsize (cupynumeric.ndarray property)": [[291, "cupynumeric.ndarray.itemsize", false]], "iters (cupynumeric.broadcast property)": [[6, "cupynumeric.broadcast.iters", false]], "ix_() (in module cupynumeric)": [[151, "cupynumeric.ix_", false]], "kaiser() (in module cupynumeric)": [[152, "cupynumeric.kaiser", false]], "laplace() (in module cupynumeric.random)": [[356, "cupynumeric.random.laplace", false]], "lcm() (in module cupynumeric)": [[153, "cupynumeric.lcm", false]], "ldexp() (in module cupynumeric)": [[154, "cupynumeric.ldexp", false]], "left_shift() (in module cupynumeric)": [[155, "cupynumeric.left_shift", false]], "less() (in module cupynumeric)": [[156, "cupynumeric.less", false]], "less_equal() (in module cupynumeric)": [[157, "cupynumeric.less_equal", false]], "linspace() (in module cupynumeric)": [[168, "cupynumeric.linspace", false]], "load() (in module cupynumeric)": [[169, "cupynumeric.load", false]], "log() (in module cupynumeric)": [[170, "cupynumeric.log", false]], "log10() (in module cupynumeric)": [[171, "cupynumeric.log10", false]], "log1p() (in module cupynumeric)": [[172, "cupynumeric.log1p", false]], "log2() (in module cupynumeric)": [[173, "cupynumeric.log2", false]], "logaddexp() (in module cupynumeric)": [[174, "cupynumeric.logaddexp", false]], "logaddexp2() (in module cupynumeric)": [[175, "cupynumeric.logaddexp2", false]], "logical_and() (in module cupynumeric)": [[176, "cupynumeric.logical_and", false]], "logical_not() (in module cupynumeric)": [[177, "cupynumeric.logical_not", false]], "logical_or() (in module cupynumeric)": [[178, "cupynumeric.logical_or", false]], "logical_xor() (in module cupynumeric)": [[179, "cupynumeric.logical_xor", false]], "logistic() (in module cupynumeric.random)": [[357, "cupynumeric.random.logistic", false]], "lognormal() (in module cupynumeric.random)": [[358, "cupynumeric.random.lognormal", false]], "logseries() (in module cupynumeric.random)": [[359, "cupynumeric.random.logseries", false]], "mask_indices() (in module cupynumeric)": [[180, "cupynumeric.mask_indices", false]], "matmul() (in module cupynumeric)": [[181, "cupynumeric.matmul", false]], "matrix_power() (in module cupynumeric.linalg)": [[162, "cupynumeric.linalg.matrix_power", false]], "max() (cupynumeric.ndarray method)": [[292, "cupynumeric.ndarray.max", false]], "maximum() (in module cupynumeric)": [[182, "cupynumeric.maximum", false]], "mean() (cupynumeric.ndarray method)": [[293, "cupynumeric.ndarray.mean", false]], "mean() (in module cupynumeric)": [[183, "cupynumeric.mean", false]], "median() (in module cupynumeric)": [[184, "cupynumeric.median", false]], "meshgrid() (in module cupynumeric)": [[185, "cupynumeric.meshgrid", false]], "min() (cupynumeric.ndarray method)": [[294, "cupynumeric.ndarray.min", false]], "minimum() (in module cupynumeric)": [[186, "cupynumeric.minimum", false]], "mod() (in module cupynumeric)": [[187, "cupynumeric.mod", false]], "modf() (in module cupynumeric)": [[188, "cupynumeric.modf", false]], "module": [[11, "module-cupynumeric.fft", false], [446, "module-cupynumeric.linalg", false], [451, "module-cupynumeric.random", false]], "moveaxis() (in module cupynumeric)": [[189, "cupynumeric.moveaxis", false]], "multi_dot() (in module cupynumeric.linalg)": [[163, "cupynumeric.linalg.multi_dot", false]], "multiply() (in module cupynumeric)": [[190, "cupynumeric.multiply", false]], "nanargmax() (in module cupynumeric)": [[191, "cupynumeric.nanargmax", false]], "nanargmin() (in module cupynumeric)": [[192, "cupynumeric.nanargmin", false]], "nancumprod() (in module cupynumeric)": [[193, "cupynumeric.nancumprod", false]], "nancumsum() (in module cupynumeric)": [[194, "cupynumeric.nancumsum", false]], "nanmax() (in module cupynumeric)": [[195, "cupynumeric.nanmax", false]], "nanmean() (in module cupynumeric)": [[196, "cupynumeric.nanmean", false]], "nanmedian() (in module cupynumeric)": [[197, "cupynumeric.nanmedian", false]], "nanmin() (in module cupynumeric)": [[198, "cupynumeric.nanmin", false]], "nanpercentile() (in module cupynumeric)": [[199, "cupynumeric.nanpercentile", false]], "nanprod() (in module cupynumeric)": [[200, "cupynumeric.nanprod", false]], "nanquantile() (in module cupynumeric)": [[201, "cupynumeric.nanquantile", false]], "nansum() (in module cupynumeric)": [[202, "cupynumeric.nansum", false]], "nbytes (cupynumeric.ndarray property)": [[295, "cupynumeric.ndarray.nbytes", false]], "nd (cupynumeric.broadcast property)": [[6, "cupynumeric.broadcast.nd", false]], "ndarray (class in cupynumeric)": [[4, "cupynumeric.ndarray", false]], "ndim (cupynumeric.broadcast property)": [[6, "cupynumeric.broadcast.ndim", false]], "ndim (cupynumeric.ndarray property)": [[296, "cupynumeric.ndarray.ndim", false]], "ndim() (in module cupynumeric)": [[324, "cupynumeric.ndim", false]], "negative() (in module cupynumeric)": [[325, "cupynumeric.negative", false]], "negative_binomial() (in module cupynumeric.random)": [[360, "cupynumeric.random.negative_binomial", false]], "nextafter() (in module cupynumeric)": [[326, "cupynumeric.nextafter", false]], "noncentral_chisquare() (in module cupynumeric.random)": [[361, "cupynumeric.random.noncentral_chisquare", false]], "noncentral_f() (in module cupynumeric.random)": [[362, "cupynumeric.random.noncentral_f", false]], "nonzero() (cupynumeric.ndarray method)": [[297, "cupynumeric.ndarray.nonzero", false]], "nonzero() (in module cupynumeric)": [[327, "cupynumeric.nonzero", false]], "norm() (in module cupynumeric.linalg)": [[164, "cupynumeric.linalg.norm", false]], "normal() (in module cupynumeric.random)": [[363, "cupynumeric.random.normal", false]], "not_equal() (in module cupynumeric)": [[328, "cupynumeric.not_equal", false]], "numiter (cupynumeric.broadcast property)": [[6, "cupynumeric.broadcast.numiter", false]], "ones() (in module cupynumeric)": [[329, "cupynumeric.ones", false]], "ones_like() (in module cupynumeric)": [[330, "cupynumeric.ones_like", false]], "outer() (in module cupynumeric)": [[331, "cupynumeric.outer", false]], "owndata (in module cupynumeric)": [[283, "cupynumeric.OWNDATA", false]], "packbits() (in module cupynumeric)": [[332, "cupynumeric.packbits", false]], "pareto() (in module cupynumeric.random)": [[364, "cupynumeric.random.pareto", false]], "partition() (cupynumeric.ndarray method)": [[298, "cupynumeric.ndarray.partition", false]], "partition() (in module cupynumeric)": [[333, "cupynumeric.partition", false]], "percentile() (in module cupynumeric)": [[334, "cupynumeric.percentile", false]], "place() (in module cupynumeric)": [[335, "cupynumeric.place", false]], "poisson() (in module cupynumeric.random)": [[365, "cupynumeric.random.poisson", false]], "positive() (in module cupynumeric)": [[336, "cupynumeric.positive", false]], "power() (in module cupynumeric)": [[337, "cupynumeric.power", false]], "power() (in module cupynumeric.random)": [[366, "cupynumeric.random.power", false]], "prod() (cupynumeric.ndarray method)": [[299, "cupynumeric.ndarray.prod", false]], "prod() (in module cupynumeric)": [[338, "cupynumeric.prod", false]], "put() (cupynumeric.ndarray method)": [[300, "cupynumeric.ndarray.put", false]], "put() (in module cupynumeric)": [[339, "cupynumeric.put", false]], "put_along_axis() (in module cupynumeric)": [[340, "cupynumeric.put_along_axis", false]], "putmask() (in module cupynumeric)": [[341, "cupynumeric.putmask", false]], "qr() (in module cupynumeric.linalg)": [[165, "cupynumeric.linalg.qr", false]], "quantile() (in module cupynumeric)": [[342, "cupynumeric.quantile", false]], "rad2deg() (in module cupynumeric)": [[343, "cupynumeric.rad2deg", false]], "radians() (in module cupynumeric)": [[344, "cupynumeric.radians", false]], "rand() (in module cupynumeric.random)": [[367, "cupynumeric.random.rand", false]], "randint() (in module cupynumeric.random)": [[368, "cupynumeric.random.randint", false]], "randn() (in module cupynumeric.random)": [[369, "cupynumeric.random.randn", false]], "random() (in module cupynumeric.random)": [[370, "cupynumeric.random.random", false]], "random_integers() (in module cupynumeric.random)": [[371, "cupynumeric.random.random_integers", false]], "random_sample() (in module cupynumeric.random)": [[372, "cupynumeric.random.random_sample", false]], "ranf() (in module cupynumeric.random)": [[373, "cupynumeric.random.ranf", false]], "ravel() (cupynumeric.ndarray method)": [[301, "cupynumeric.ndarray.ravel", false]], "ravel() (in module cupynumeric)": [[387, "cupynumeric.ravel", false]], "rayleigh() (in module cupynumeric.random)": [[374, "cupynumeric.random.rayleigh", false]], "real (cupynumeric.ndarray property)": [[302, "cupynumeric.ndarray.real", false]], "real() (in module cupynumeric)": [[388, "cupynumeric.real", false]], "reciprocal() (in module cupynumeric)": [[389, "cupynumeric.reciprocal", false]], "remainder() (in module cupynumeric)": [[390, "cupynumeric.remainder", false]], "repeat() (in module cupynumeric)": [[391, "cupynumeric.repeat", false]], "reset() (cupynumeric.broadcast method)": [[6, "cupynumeric.broadcast.reset", false]], "reshape() (cupynumeric.ndarray method)": [[303, "cupynumeric.ndarray.reshape", false]], "reshape() (in module cupynumeric)": [[392, "cupynumeric.reshape", false]], "rfft() (in module cupynumeric.fft)": [[107, "cupynumeric.fft.rfft", false]], "rfft2() (in module cupynumeric.fft)": [[108, "cupynumeric.fft.rfft2", false]], "rfftn() (in module cupynumeric.fft)": [[109, "cupynumeric.fft.rfftn", false]], "right_shift() (in module cupynumeric)": [[393, "cupynumeric.right_shift", false]], "rint() (in module cupynumeric)": [[394, "cupynumeric.rint", false]], "roll() (in module cupynumeric)": [[395, "cupynumeric.roll", false]], "rot90() (in module cupynumeric)": [[396, "cupynumeric.rot90", false]], "round() (in module cupynumeric)": [[397, "cupynumeric.round", false]], "row_stack() (in module cupynumeric)": [[398, "cupynumeric.row_stack", false]], "sample() (in module cupynumeric.random)": [[375, "cupynumeric.random.sample", false]], "searchsorted() (cupynumeric.ndarray method)": [[304, "cupynumeric.ndarray.searchsorted", false]], "searchsorted() (in module cupynumeric)": [[399, "cupynumeric.searchsorted", false]], "seed() (in module cupynumeric.random)": [[376, "cupynumeric.random.seed", false]], "select() (in module cupynumeric)": [[400, "cupynumeric.select", false]], "setfield() (cupynumeric.ndarray method)": [[305, "cupynumeric.ndarray.setfield", false]], "setflags() (cupynumeric.ndarray method)": [[306, "cupynumeric.ndarray.setflags", false]], "shape (cupynumeric.broadcast property)": [[6, "cupynumeric.broadcast.shape", false]], "shape (cupynumeric.ndarray property)": [[307, "cupynumeric.ndarray.shape", false]], "shape() (in module cupynumeric)": [[401, "cupynumeric.shape", false]], "sign() (in module cupynumeric)": [[402, "cupynumeric.sign", false]], "signbit() (in module cupynumeric)": [[403, "cupynumeric.signbit", false]], "sin() (in module cupynumeric)": [[404, "cupynumeric.sin", false]], "sinh() (in module cupynumeric)": [[405, "cupynumeric.sinh", false]], "size (cupynumeric.broadcast property)": [[6, "cupynumeric.broadcast.size", false]], "size (cupynumeric.ndarray property)": [[308, "cupynumeric.ndarray.size", false]], "solve() (in module cupynumeric.linalg)": [[166, "cupynumeric.linalg.solve", false]], "sort() (cupynumeric.ndarray method)": [[309, "cupynumeric.ndarray.sort", false]], "sort() (in module cupynumeric)": [[406, "cupynumeric.sort", false]], "sort_complex() (in module cupynumeric)": [[407, "cupynumeric.sort_complex", false]], "split() (in module cupynumeric)": [[408, "cupynumeric.split", false]], "sqrt() (in module cupynumeric)": [[409, "cupynumeric.sqrt", false]], "square() (in module cupynumeric)": [[410, "cupynumeric.square", false]], "squeeze() (cupynumeric.ndarray method)": [[310, "cupynumeric.ndarray.squeeze", false]], "squeeze() (in module cupynumeric)": [[411, "cupynumeric.squeeze", false]], "stack() (in module cupynumeric)": [[412, "cupynumeric.stack", false]], "standard_cauchy() (in module cupynumeric.random)": [[377, "cupynumeric.random.standard_cauchy", false]], "standard_exponential() (in module cupynumeric.random)": [[378, "cupynumeric.random.standard_exponential", false]], "standard_gamma() (in module cupynumeric.random)": [[379, "cupynumeric.random.standard_gamma", false]], "standard_t() (in module cupynumeric.random)": [[380, "cupynumeric.random.standard_t", false]], "strides (cupynumeric.ndarray property)": [[311, "cupynumeric.ndarray.strides", false]], "subtract() (in module cupynumeric)": [[413, "cupynumeric.subtract", false]], "sum() (cupynumeric.ndarray method)": [[312, "cupynumeric.ndarray.sum", false]], "sum() (in module cupynumeric)": [[414, "cupynumeric.sum", false]], "svd() (in module cupynumeric.linalg)": [[167, "cupynumeric.linalg.svd", false]], "swapaxes() (cupynumeric.ndarray method)": [[313, "cupynumeric.ndarray.swapaxes", false]], "swapaxes() (in module cupynumeric)": [[415, "cupynumeric.swapaxes", false]], "t (cupynumeric.ndarray property)": [[203, "cupynumeric.ndarray.T", false]], "take() (cupynumeric.ndarray method)": [[314, "cupynumeric.ndarray.take", false]], "take() (in module cupynumeric)": [[416, "cupynumeric.take", false]], "take_along_axis() (in module cupynumeric)": [[417, "cupynumeric.take_along_axis", false]], "tan() (in module cupynumeric)": [[418, "cupynumeric.tan", false]], "tanh() (in module cupynumeric)": [[419, "cupynumeric.tanh", false]], "tensordot() (in module cupynumeric)": [[420, "cupynumeric.tensordot", false]], "tile() (in module cupynumeric)": [[421, "cupynumeric.tile", false]], "tobytes() (cupynumeric.ndarray method)": [[315, "cupynumeric.ndarray.tobytes", false]], "tofile() (cupynumeric.ndarray method)": [[316, "cupynumeric.ndarray.tofile", false]], "tolist() (cupynumeric.ndarray method)": [[317, "cupynumeric.ndarray.tolist", false]], "tostring() (cupynumeric.ndarray method)": [[318, "cupynumeric.ndarray.tostring", false]], "trace() (cupynumeric.ndarray method)": [[319, "cupynumeric.ndarray.trace", false]], "trace() (in module cupynumeric)": [[422, "cupynumeric.trace", false]], "transpose() (cupynumeric.ndarray method)": [[320, "cupynumeric.ndarray.transpose", false]], "transpose() (in module cupynumeric)": [[423, "cupynumeric.transpose", false]], "tri() (in module cupynumeric)": [[424, "cupynumeric.tri", false]], "triangular() (in module cupynumeric.random)": [[381, "cupynumeric.random.triangular", false]], "tril() (in module cupynumeric)": [[425, "cupynumeric.tril", false]], "tril_indices() (in module cupynumeric)": [[426, "cupynumeric.tril_indices", false]], "tril_indices_from() (in module cupynumeric)": [[427, "cupynumeric.tril_indices_from", false]], "triu() (in module cupynumeric)": [[428, "cupynumeric.triu", false]], "triu_indices() (in module cupynumeric)": [[429, "cupynumeric.triu_indices", false]], "triu_indices_from() (in module cupynumeric)": [[430, "cupynumeric.triu_indices_from", false]], "true_divide() (in module cupynumeric)": [[431, "cupynumeric.true_divide", false]], "trunc() (in module cupynumeric)": [[432, "cupynumeric.trunc", false]], "uniform() (in module cupynumeric.random)": [[382, "cupynumeric.random.uniform", false]], "unique() (cupynumeric.ndarray method)": [[321, "cupynumeric.ndarray.unique", false]], "unique() (in module cupynumeric)": [[433, "cupynumeric.unique", false]], "unpackbits() (in module cupynumeric)": [[434, "cupynumeric.unpackbits", false]], "unravel_index() (in module cupynumeric)": [[435, "cupynumeric.unravel_index", false]], "var() (cupynumeric.ndarray method)": [[322, "cupynumeric.ndarray.var", false]], "var() (in module cupynumeric)": [[436, "cupynumeric.var", false]], "vdot() (in module cupynumeric)": [[437, "cupynumeric.vdot", false]], "view() (cupynumeric.ndarray method)": [[323, "cupynumeric.ndarray.view", false]], "vonmises() (in module cupynumeric.random)": [[383, "cupynumeric.random.vonmises", false]], "vsplit() (in module cupynumeric)": [[438, "cupynumeric.vsplit", false]], "vstack() (in module cupynumeric)": [[439, "cupynumeric.vstack", false]], "wald() (in module cupynumeric.random)": [[384, "cupynumeric.random.wald", false]], "weibull() (in module cupynumeric.random)": [[385, "cupynumeric.random.weibull", false]], "where() (in module cupynumeric)": [[440, "cupynumeric.where", false]], "writeable (in module cupynumeric)": [[283, "cupynumeric.WRITEABLE", false]], "writebackifcopy (in module cupynumeric)": [[283, "cupynumeric.WRITEBACKIFCOPY", false]], "zeros() (in module cupynumeric)": [[441, "cupynumeric.zeros", false]], "zeros_like() (in module cupynumeric)": [[442, "cupynumeric.zeros_like", false]], "zipf() (in module cupynumeric.random)": [[386, "cupynumeric.random.zipf", false]]}, "objects": {"cupynumeric": [[283, 0, 1, "", "ALIGNED"], [283, 0, 1, "", "BEHAVED"], [283, 0, 1, "", "CARRAY"], [283, 0, 1, "", "FARRAY"], [283, 0, 1, "", "FNC"], [283, 0, 1, "", "FORC"], [283, 0, 1, "", "F_CONTIGUOUS"], [283, 0, 1, "", "OWNDATA"], [283, 0, 1, "", "WRITEABLE"], [283, 0, 1, "", "WRITEBACKIFCOPY"], [12, 1, 1, "", "absolute"], [13, 1, 1, "", "add"], [14, 1, 1, "", "all"], [15, 1, 1, "", "allclose"], [16, 1, 1, "", "amax"], [17, 1, 1, "", "amin"], [18, 1, 1, "", "angle"], [19, 1, 1, "", "any"], [20, 1, 1, "", "append"], [21, 1, 1, "", "arange"], [22, 1, 1, "", "arccos"], [23, 1, 1, "", "arccosh"], [24, 1, 1, "", "arcsin"], [25, 1, 1, "", "arcsinh"], [26, 1, 1, "", "arctan"], [27, 1, 1, "", "arctan2"], [28, 1, 1, "", "arctanh"], [29, 1, 1, "", "argmax"], [30, 1, 1, "", "argmin"], [31, 1, 1, "", "argpartition"], [32, 1, 1, "", "argsort"], [33, 1, 1, "", "argwhere"], [34, 1, 1, "", "array"], [35, 1, 1, "", "array_equal"], [36, 1, 1, "", "array_split"], [37, 1, 1, "", "asarray"], [38, 1, 1, "", "atleast_1d"], [39, 1, 1, "", "atleast_2d"], [40, 1, 1, "", "atleast_3d"], [41, 1, 1, "", "average"], [42, 1, 1, "", "bartlett"], [43, 1, 1, "", "bincount"], [44, 1, 1, "", "bitwise_and"], [45, 1, 1, "", "bitwise_or"], [46, 1, 1, "", "bitwise_xor"], [47, 1, 1, "", "blackman"], [48, 1, 1, "", "block"], [6, 2, 1, "", "broadcast"], [49, 1, 1, "", "broadcast_arrays"], [50, 1, 1, "", "broadcast_shapes"], [51, 1, 1, "", "broadcast_to"], [52, 1, 1, "", "cbrt"], [53, 1, 1, "", "ceil"], [54, 1, 1, "", "choose"], [55, 1, 1, "", "clip"], [56, 1, 1, "", "column_stack"], [57, 1, 1, "", "compress"], [58, 1, 1, "", "concatenate"], [59, 1, 1, "", "conj"], [60, 1, 1, "", "conjugate"], [61, 1, 1, "", "convolve"], [62, 1, 1, "", "copy"], [63, 1, 1, "", "copysign"], [64, 1, 1, "", "cos"], [65, 1, 1, "", "cosh"], [66, 1, 1, "", "count_nonzero"], [67, 1, 1, "", "cov"], [68, 1, 1, "", "cumprod"], [69, 1, 1, "", "cumsum"], [70, 1, 1, "", "deg2rad"], [71, 1, 1, "", "degrees"], [72, 1, 1, "", "diag"], [73, 1, 1, "", "diag_indices"], [74, 1, 1, "", "diag_indices_from"], [75, 1, 1, "", "diagonal"], [76, 1, 1, "", "diff"], [77, 1, 1, "", "digitize"], [78, 1, 1, "", "divide"], [79, 1, 1, "", "dot"], [80, 1, 1, "", "dsplit"], [81, 1, 1, "", "dstack"], [82, 1, 1, "", "einsum"], [83, 1, 1, "", "einsum_path"], [84, 1, 1, "", "empty"], [85, 1, 1, "", "empty_like"], [86, 1, 1, "", "equal"], [87, 1, 1, "", "exp"], [88, 1, 1, "", "exp2"], [89, 1, 1, "", "expand_dims"], [90, 1, 1, "", "expm1"], [91, 1, 1, "", "extract"], [92, 1, 1, "", "eye"], [93, 1, 1, "", "fabs"], [11, 5, 0, "-", "fft"], [110, 1, 1, "", "fill_diagonal"], [111, 1, 1, "", "find_common_type"], [112, 1, 1, "", "flatnonzero"], [113, 1, 1, "", "flip"], [114, 1, 1, "", "fliplr"], [115, 1, 1, "", "flipud"], [116, 1, 1, "", "float_power"], [117, 1, 1, "", "floor"], [118, 1, 1, "", "floor_divide"], [119, 1, 1, "", "fmax"], [120, 1, 1, "", "fmin"], [121, 1, 1, "", "fmod"], [122, 1, 1, "", "frexp"], [123, 1, 1, "", "full"], [124, 1, 1, "", "full_like"], [125, 1, 1, "", "gcd"], [126, 1, 1, "", "gradient"], [127, 1, 1, "", "greater"], [128, 1, 1, "", "greater_equal"], [129, 1, 1, "", "hamming"], [130, 1, 1, "", "hanning"], [131, 1, 1, "", "histogram"], [132, 1, 1, "", "hsplit"], [133, 1, 1, "", "hstack"], [134, 1, 1, "", "hypot"], [135, 1, 1, "", "identity"], [136, 1, 1, "", "imag"], [137, 1, 1, "", "indices"], [138, 1, 1, "", "inner"], [139, 1, 1, "", "invert"], [140, 1, 1, "", "isclose"], [141, 1, 1, "", "iscomplex"], [142, 1, 1, "", "iscomplexobj"], [143, 1, 1, "", "isfinite"], [144, 1, 1, "", "isinf"], [145, 1, 1, "", "isnan"], [146, 1, 1, "", "isneginf"], [147, 1, 1, "", "isposinf"], [148, 1, 1, "", "isreal"], [149, 1, 1, "", "isrealobj"], [150, 1, 1, "", "isscalar"], [151, 1, 1, "", "ix_"], [152, 1, 1, "", "kaiser"], [153, 1, 1, "", "lcm"], [154, 1, 1, "", "ldexp"], [155, 1, 1, "", "left_shift"], [156, 1, 1, "", "less"], [157, 1, 1, "", "less_equal"], [446, 5, 0, "-", "linalg"], [168, 1, 1, "", "linspace"], [169, 1, 1, "", "load"], [170, 1, 1, "", "log"], [171, 1, 1, "", "log10"], [172, 1, 1, "", "log1p"], [173, 1, 1, "", "log2"], [174, 1, 1, "", "logaddexp"], [175, 1, 1, "", "logaddexp2"], [176, 1, 1, "", "logical_and"], [177, 1, 1, "", "logical_not"], [178, 1, 1, "", "logical_or"], [179, 1, 1, "", "logical_xor"], [180, 1, 1, "", "mask_indices"], [181, 1, 1, "", "matmul"], [182, 1, 1, "", "maximum"], [183, 1, 1, "", "mean"], [184, 1, 1, "", "median"], [185, 1, 1, "", "meshgrid"], [186, 1, 1, "", "minimum"], [187, 1, 1, "", "mod"], [188, 1, 1, "", "modf"], [189, 1, 1, "", "moveaxis"], [190, 1, 1, "", "multiply"], [191, 1, 1, "", "nanargmax"], [192, 1, 1, "", "nanargmin"], [193, 1, 1, "", "nancumprod"], [194, 1, 1, "", "nancumsum"], [195, 1, 1, "", "nanmax"], [196, 1, 1, "", "nanmean"], [197, 1, 1, "", "nanmedian"], [198, 1, 1, "", "nanmin"], [199, 1, 1, "", "nanpercentile"], [200, 1, 1, "", "nanprod"], [201, 1, 1, "", "nanquantile"], [202, 1, 1, "", "nansum"], [4, 2, 1, "", "ndarray"], [324, 1, 1, "", "ndim"], [325, 1, 1, "", "negative"], [326, 1, 1, "", "nextafter"], [327, 1, 1, "", "nonzero"], [328, 1, 1, "", "not_equal"], [329, 1, 1, "", "ones"], [330, 1, 1, "", "ones_like"], [331, 1, 1, "", "outer"], [332, 1, 1, "", "packbits"], [333, 1, 1, "", "partition"], [334, 1, 1, "", "percentile"], [335, 1, 1, "", "place"], [336, 1, 1, "", "positive"], [337, 1, 1, "", "power"], [338, 1, 1, "", "prod"], [339, 1, 1, "", "put"], [340, 1, 1, "", "put_along_axis"], [341, 1, 1, "", "putmask"], [342, 1, 1, "", "quantile"], [343, 1, 1, "", "rad2deg"], [344, 1, 1, "", "radians"], [451, 5, 0, "-", "random"], [387, 1, 1, "", "ravel"], [388, 1, 1, "", "real"], [389, 1, 1, "", "reciprocal"], [390, 1, 1, "", "remainder"], [391, 1, 1, "", "repeat"], [392, 1, 1, "", "reshape"], [393, 1, 1, "", "right_shift"], [394, 1, 1, "", "rint"], [395, 1, 1, "", "roll"], [396, 1, 1, "", "rot90"], [397, 1, 1, "", "round"], [398, 1, 1, "", "row_stack"], [399, 1, 1, "", "searchsorted"], [400, 1, 1, "", "select"], [401, 1, 1, "", "shape"], [402, 1, 1, "", "sign"], [403, 1, 1, "", "signbit"], [404, 1, 1, "", "sin"], [405, 1, 1, "", "sinh"], [406, 1, 1, "", "sort"], [407, 1, 1, "", "sort_complex"], [408, 1, 1, "", "split"], [409, 1, 1, "", "sqrt"], [410, 1, 1, "", "square"], [411, 1, 1, "", "squeeze"], [412, 1, 1, "", "stack"], [413, 1, 1, "", "subtract"], [414, 1, 1, "", "sum"], [415, 1, 1, "", "swapaxes"], [416, 1, 1, "", "take"], [417, 1, 1, "", "take_along_axis"], [418, 1, 1, "", "tan"], [419, 1, 1, "", "tanh"], [420, 1, 1, "", "tensordot"], [421, 1, 1, "", "tile"], [422, 1, 1, "", "trace"], [423, 1, 1, "", "transpose"], [424, 1, 1, "", "tri"], [425, 1, 1, "", "tril"], [426, 1, 1, "", "tril_indices"], [427, 1, 1, "", "tril_indices_from"], [428, 1, 1, "", "triu"], [429, 1, 1, "", "triu_indices"], [430, 1, 1, "", "triu_indices_from"], [431, 1, 1, "", "true_divide"], [432, 1, 1, "", "trunc"], [433, 1, 1, "", "unique"], [434, 1, 1, "", "unpackbits"], [435, 1, 1, "", "unravel_index"], [436, 1, 1, "", "var"], [437, 1, 1, "", "vdot"], [438, 1, 1, "", "vsplit"], [439, 1, 1, "", "vstack"], [440, 1, 1, "", "where"], [441, 1, 1, "", "zeros"], [442, 1, 1, "", "zeros_like"]], "cupynumeric.broadcast": [[6, 3, 1, "", "index"], [6, 3, 1, "", "iters"], [6, 3, 1, "", "nd"], [6, 3, 1, "", "ndim"], [6, 3, 1, "", "numiter"], [6, 4, 1, "", "reset"], [6, 3, 1, "", "shape"], [6, 3, 1, "", "size"]], "cupynumeric.fft": [[94, 1, 1, "", "fft"], [95, 1, 1, "", "fft2"], [96, 1, 1, "", "fftn"], [97, 1, 1, "", "fftshift"], [98, 1, 1, "", "hfft"], [99, 1, 1, "", "ifft"], [100, 1, 1, "", "ifft2"], [101, 1, 1, "", "ifftn"], [102, 1, 1, "", "ifftshift"], [103, 1, 1, "", "ihfft"], [104, 1, 1, "", "irfft"], [105, 1, 1, "", "irfft2"], [106, 1, 1, "", "irfftn"], [107, 1, 1, "", "rfft"], [108, 1, 1, "", "rfft2"], [109, 1, 1, "", "rfftn"]], "cupynumeric.linalg": [[158, 1, 1, "", "cholesky"], [159, 1, 1, "", "eig"], [160, 1, 1, "", "eigvals"], [161, 1, 1, "", "expm"], [162, 1, 1, "", "matrix_power"], [163, 1, 1, "", "multi_dot"], [164, 1, 1, "", "norm"], [165, 1, 1, "", "qr"], [166, 1, 1, "", "solve"], [167, 1, 1, "", "svd"]], "cupynumeric.ndarray": [[283, 0, 1, "", "C_CONTIGUOUS"], [203, 3, 1, "", "T"], [204, 4, 1, "", "__abs__"], [205, 4, 1, "", "__add__"], [206, 4, 1, "", "__and__"], [207, 4, 1, "", "__array__"], [208, 4, 1, "", "__bool__"], [209, 4, 1, "", "__complex__"], [210, 4, 1, "", "__contains__"], [211, 4, 1, "", "__copy__"], [212, 4, 1, "", "__deepcopy__"], [213, 4, 1, "", "__divmod__"], [214, 4, 1, "", "__eq__"], [215, 4, 1, "", "__float__"], [216, 4, 1, "", "__floordiv__"], [217, 4, 1, "", "__ge__"], [218, 4, 1, "", "__getitem__"], [219, 4, 1, "", "__gt__"], [220, 4, 1, "", "__iadd__"], [221, 4, 1, "", "__iand__"], [222, 4, 1, "", "__ifloordiv__"], [223, 4, 1, "", "__ilshift__"], [224, 4, 1, "", "__imatmul__"], [225, 4, 1, "", "__imod__"], [226, 4, 1, "", "__imul__"], [227, 4, 1, "", "__index__"], [4, 4, 1, "", "__init__"], [228, 4, 1, "", "__int__"], [229, 4, 1, "", "__invert__"], [230, 4, 1, "", "__ior__"], [231, 4, 1, "", "__ipow__"], [232, 4, 1, "", "__irshift__"], [233, 4, 1, "", "__isub__"], [234, 4, 1, "", "__itruediv__"], [235, 4, 1, "", "__ixor__"], [236, 4, 1, "", "__le__"], [237, 4, 1, "", "__len__"], [238, 4, 1, "", "__lshift__"], [239, 4, 1, "", "__lt__"], [240, 4, 1, "", "__matmul__"], [241, 4, 1, "", "__mod__"], [242, 4, 1, "", "__mul__"], [243, 4, 1, "", "__ne__"], [244, 4, 1, "", "__neg__"], [245, 4, 1, "", "__new__"], [246, 4, 1, "", "__or__"], [247, 4, 1, "", "__pos__"], [248, 4, 1, "", "__pow__"], [249, 4, 1, "", "__reduce__"], [250, 4, 1, "", "__repr__"], [251, 4, 1, "", "__rmatmul__"], [252, 4, 1, "", "__rshift__"], [253, 4, 1, "", "__setitem__"], [254, 4, 1, "", "__setstate__"], [255, 4, 1, "", "__str__"], [256, 4, 1, "", "__sub__"], [257, 4, 1, "", "__truediv__"], [258, 4, 1, "", "__xor__"], [259, 4, 1, "", "all"], [260, 4, 1, "", "any"], [261, 4, 1, "", "argmax"], [262, 4, 1, "", "argmin"], [263, 4, 1, "", "argpartition"], [264, 4, 1, "", "argsort"], [265, 4, 1, "", "astype"], [266, 3, 1, "", "base"], [267, 4, 1, "", "choose"], [268, 4, 1, "", "clip"], [269, 4, 1, "", "compress"], [270, 4, 1, "", "conj"], [271, 4, 1, "", "conjugate"], [272, 4, 1, "", "copy"], [273, 3, 1, "", "ctypes"], [274, 4, 1, "", "cumprod"], [275, 4, 1, "", "cumsum"], [276, 3, 1, "", "data"], [277, 4, 1, "", "diagonal"], [278, 4, 1, "", "dot"], [279, 3, 1, "", "dtype"], [280, 4, 1, "", "dump"], [281, 4, 1, "", "dumps"], [282, 4, 1, "", "fill"], [283, 3, 1, "", "flags"], [284, 3, 1, "", "flat"], [285, 4, 1, "", "flatten"], [286, 4, 1, "", "flip"], [287, 4, 1, "", "getfield"], [288, 3, 1, "", "imag"], [289, 4, 1, "", "item"], [290, 0, 1, "", "itemset"], [291, 3, 1, "", "itemsize"], [292, 4, 1, "", "max"], [293, 4, 1, "", "mean"], [294, 4, 1, "", "min"], [295, 3, 1, "", "nbytes"], [296, 3, 1, "", "ndim"], [297, 4, 1, "", "nonzero"], [298, 4, 1, "", "partition"], [299, 4, 1, "", "prod"], [300, 4, 1, "", "put"], [301, 4, 1, "", "ravel"], [302, 3, 1, "", "real"], [303, 4, 1, "", "reshape"], [304, 4, 1, "", "searchsorted"], [305, 4, 1, "", "setfield"], [306, 4, 1, "", "setflags"], [307, 3, 1, "", "shape"], [308, 3, 1, "", "size"], [309, 4, 1, "", "sort"], [310, 4, 1, "", "squeeze"], [311, 3, 1, "", "strides"], [312, 4, 1, "", "sum"], [313, 4, 1, "", "swapaxes"], [314, 4, 1, "", "take"], [315, 4, 1, "", "tobytes"], [316, 4, 1, "", "tofile"], [317, 4, 1, "", "tolist"], [318, 4, 1, "", "tostring"], [319, 4, 1, "", "trace"], [320, 4, 1, "", "transpose"], [321, 4, 1, "", "unique"], [322, 4, 1, "", "var"], [323, 4, 1, "", "view"]], "cupynumeric.random": [[1, 2, 1, "", "BitGenerator"], [2, 2, 1, "", "Generator"], [345, 1, 1, "", "beta"], [346, 1, 1, "", "binomial"], [347, 1, 1, "", "bytes"], [348, 1, 1, "", "chisquare"], [349, 1, 1, "", "default_rng"], [350, 1, 1, "", "exponential"], [351, 1, 1, "", "f"], [352, 1, 1, "", "gamma"], [353, 1, 1, "", "geometric"], [354, 1, 1, "", "gumbel"], [355, 1, 1, "", "hypergeometric"], [356, 1, 1, "", "laplace"], [357, 1, 1, "", "logistic"], [358, 1, 1, "", "lognormal"], [359, 1, 1, "", "logseries"], [360, 1, 1, "", "negative_binomial"], [361, 1, 1, "", "noncentral_chisquare"], [362, 1, 1, "", "noncentral_f"], [363, 1, 1, "", "normal"], [364, 1, 1, "", "pareto"], [365, 1, 1, "", "poisson"], [366, 1, 1, "", "power"], [367, 1, 1, "", "rand"], [368, 1, 1, "", "randint"], [369, 1, 1, "", "randn"], [370, 1, 1, "", "random"], [371, 1, 1, "", "random_integers"], [372, 1, 1, "", "random_sample"], [373, 1, 1, "", "ranf"], [374, 1, 1, "", "rayleigh"], [375, 1, 1, "", "sample"], [376, 1, 1, "", "seed"], [377, 1, 1, "", "standard_cauchy"], [378, 1, 1, "", "standard_exponential"], [379, 1, 1, "", "standard_gamma"], [380, 1, 1, "", "standard_t"], [381, 1, 1, "", "triangular"], [382, 1, 1, "", "uniform"], [383, 1, 1, "", "vonmises"], [384, 1, 1, "", "wald"], [385, 1, 1, "", "weibull"], [386, 1, 1, "", "zipf"]], "cupynumeric.random.BitGenerator": [[1, 4, 1, "", "__init__"]], "cupynumeric.random.Generator": [[2, 4, 1, "", "__init__"]]}, "objnames": {"0": ["py", "attribute", "Python attribute"], "1": ["py", "function", "Python function"], "2": ["py", "class", "Python class"], "3": ["py", "property", "Python property"], "4": ["py", "method", "Python method"], "5": ["py", "module", "Python module"]}, "objtypes": {"0": "py:attribute", "1": "py:function", "2": "py:class", "3": "py:property", "4": "py:method", "5": "py:module"}, "terms": {"": [2, 6, 14, 15, 29, 30, 35, 61, 68, 69, 75, 95, 96, 100, 101, 105, 106, 108, 109, 110, 111, 140, 150, 164, 167, 193, 194, 195, 198, 199, 201, 276, 279, 289, 308, 315, 316, 320, 334, 342, 380, 386, 420, 421, 454, 458, 459, 462, 463, 464, 465, 467, 468, 469, 470, 471, 474, 477, 479, 482, 483], "0": [3, 4, 14, 19, 21, 36, 41, 43, 48, 54, 55, 58, 67, 68, 72, 73, 75, 76, 77, 79, 92, 95, 96, 97, 99, 100, 101, 106, 109, 112, 115, 135, 137, 162, 164, 168, 180, 185, 195, 199, 201, 208, 254, 277, 283, 287, 304, 305, 311, 312, 317, 319, 320, 322, 332, 334, 342, 345, 346, 348, 350, 351, 352, 354, 356, 357, 358, 359, 360, 361, 362, 363, 365, 366, 367, 368, 369, 370, 372, 373, 374, 375, 377, 380, 382, 383, 384, 385, 396, 397, 399, 400, 408, 412, 414, 422, 424, 425, 426, 427, 428, 429, 430, 434, 436, 438, 454, 458, 461, 462, 463, 464, 465, 467, 468, 469, 470, 471, 477, 479, 480, 482, 483, 484], "00": 483, "000": 483, "000001": 467, "000028": 471, "000029": 471, "0021705301478625403": 464, "01": [68, 483], "012924932": 483, "017": 473, "03": 461, "05": [15, 140, 462, 483], "07": [463, 477, 482], "075726": 461, "08": [15, 140, 461], "0b00000011": [332, 434], "0d": 476, "0x11403f190": 464, "1": [2, 3, 14, 16, 17, 19, 21, 31, 32, 36, 38, 40, 41, 43, 48, 54, 55, 56, 57, 61, 67, 68, 69, 72, 73, 75, 76, 77, 79, 81, 90, 91, 94, 95, 96, 98, 99, 100, 101, 103, 104, 105, 106, 107, 108, 109, 114, 126, 131, 132, 133, 137, 138, 151, 163, 164, 165, 168, 181, 185, 193, 194, 198, 199, 201, 202, 263, 264, 272, 283, 284, 285, 289, 298, 299, 304, 309, 311, 320, 331, 332, 333, 334, 335, 340, 342, 345, 346, 348, 350, 352, 353, 354, 355, 356, 357, 358, 359, 360, 362, 363, 364, 365, 366, 367, 369, 370, 371, 372, 373, 374, 375, 378, 379, 382, 384, 385, 386, 387, 392, 396, 398, 399, 406, 408, 411, 412, 417, 420, 421, 424, 433, 434, 437, 439, 454, 458, 459, 462, 463, 464, 465, 467, 468, 469, 470, 471, 473, 476, 477, 479, 480, 482, 484], "10": [8, 76, 77, 131, 171, 462, 464, 467, 470, 471, 480, 482, 483], "100": [68, 199, 334, 461, 462, 463, 464, 467, 469, 479, 480, 483], "1000": [462, 463, 469, 477, 483], "10000": [169, 483], "100000": 483, "1000000": [462, 483], "100000000": 483, "1000000k": 483, "100000k": 483, "10000k": 483, "1024": [454, 470], "1083": 483, "10k": 473, "11": [473, 482, 483], "1100": 483, "11432": 483, "11680": 483, "12": [3, 77, 473, 474, 476, 482], "12000": 483, "1202": 483, "1241": 483, "125": 363, "126": 470, "128": 470, "129": 473, "13": [468, 473, 483], "1300": 483, "13012": 483, "134217728": 454, "135": 461, "14": [3, 468], "14000": 483, "141": 483, "15": [77, 164, 469, 483], "150": 483, "15000": 483, "15000x15000": 483, "15973827": 476, "16": [3, 8, 461, 465, 483], "16000": 483, "16969": 483, "17": 3, "17617": 483, "18": [3, 8, 161, 291, 471], "19": 3, "1956": 384, "196": 461, "1970": 483, "1984": 474, "1985": 164, "1992": 464, "1995": 474, "1996": [199, 201, 334, 342], "1997": 462, "1998": 474, "1d": [41, 57, 340, 391, 417, 421], "1d00000000000001": 471, "1e": [15, 140, 463, 464, 468], "1e00000000000000": 471, "2": [3, 39, 40, 48, 56, 67, 72, 73, 74, 75, 76, 77, 79, 80, 81, 88, 92, 95, 98, 99, 100, 103, 104, 105, 106, 107, 108, 109, 110, 114, 115, 126, 151, 154, 159, 160, 163, 164, 165, 167, 173, 175, 181, 185, 199, 201, 311, 320, 334, 342, 350, 353, 361, 385, 396, 398, 408, 420, 421, 422, 439, 454, 458, 461, 462, 463, 464, 465, 467, 468, 469, 470, 473, 474, 475, 476, 482, 484], "20": [77, 311, 364, 468, 470, 483], "200": [363, 483], "2000": [474, 483], "20000": 483, "2000000": 483, "2000000k": 483, "2001": [350, 363], "2004": [458, 474], "2005": 474, "2006": 458, "2015": 474, "2017": 474, "2020": 483, "2024": [462, 463, 469], "2025": 474, "2048": 472, "21": [3, 291, 483], "2193": 483, "22": [3, 483], "225": 483, "22500x22500": 483, "23": [3, 477, 482], "2316419": 462, "2350": 483, "24": [471, 473], "240": [3, 8], "24000": 483, "2461": 469, "25": 470, "25001932": 483, "255": [76, 465, 483], "256": 467, "259": 483, "2593": 483, "26": [462, 479], "27": 479, "273": 469, "275": 483, "277": 463, "28": [3, 479], "280": 462, "29": 3, "294165": 483, "2960": 483, "2d": [110, 320, 396, 470, 482], "2x": 468, "2x2": 468, "2y": 468, "3": [40, 76, 77, 79, 80, 81, 126, 133, 151, 181, 185, 199, 201, 311, 332, 334, 342, 350, 398, 408, 416, 420, 421, 434, 439, 462, 463, 464, 465, 467, 468, 469, 473, 474, 476, 482, 484], "30": 483, "300": 483, "30000": 483, "30000x30000": 483, "31": [463, 479], "3110": 483, "31938153": 462, "32": [8, 200, 311, 459, 470, 483], "320": 467, "33": 479, "330274429": 462, "35": [3, 483], "3550": 483, "356563782": 462, "36": 464, "361": [199, 201, 334, 342], "365": [199, 201, 334, 342], "37": 68, "38000": 483, "39": 468, "39894228040143267793994605993438": 462, "3d": 482, "3e": 68, "3rd": 80, "4": [3, 76, 77, 79, 138, 181, 199, 201, 311, 334, 342, 420, 421, 437, 462, 463, 464, 465, 467, 468, 469, 470, 471, 476, 480, 482, 483, 484], "40": [311, 469, 483], "40000": 483, "4096": 454, "42": [3, 8, 467, 482], "434": 483, "4378": 483, "443": [3, 8], "45": 462, "457": 483, "46": 8, "466": 483, "47": 3, "48000": 483, "49": 483, "4f": 483, "4th": [350, 363], "4x": 483, "4y": 468, "5": [76, 77, 79, 151, 181, 199, 201, 311, 334, 342, 421, 462, 463, 464, 465, 467, 469, 471, 482, 483], "50": [168, 199, 201, 334, 342, 483], "500": 483, "50000": 483, "50000x50000": 483, "5050": 483, "50625": 483, "50e": 483, "51": [8, 363], "5384": 483, "5460": 483, "5596": 483, "57": 350, "6": [3, 76, 77, 199, 201, 311, 334, 342, 461, 462, 463, 464, 467, 468, 469], "600": 470, "6040": 483, "62": [3, 8], "6368": 483, "64": [200, 483], "65536": 454, "659": 462, "69664": 483, "7": [3, 76, 181, 199, 201, 306, 311, 334, 342, 462, 464, 467, 468], "70": 483, "70000": 483, "713": 483, "725": 483, "75625": 483, "75625x75625": 483, "767": 483, "781477937": 462, "7f0524da9740": 471, "7fda18f26000": 471, "7fe90fa7d740": 471, "8": [76, 165, 199, 201, 311, 334, 342, 464, 467, 474, 483], "80": 364, "8000": 483, "805182": 471, "8192": 454, "821255978": 462, "8388608": 471, "875": 469, "8850": 483, "9": [181, 199, 201, 311, 334, 342, 464, 465, 467, 483], "90": 396, "919": 483, "961": 483, "993": 483, "A": [1, 8, 12, 13, 14, 18, 19, 20, 22, 23, 24, 25, 26, 27, 28, 34, 43, 44, 45, 46, 51, 52, 53, 57, 59, 60, 61, 63, 64, 65, 67, 68, 69, 70, 71, 78, 83, 86, 87, 88, 90, 93, 95, 99, 100, 111, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 125, 126, 127, 128, 134, 139, 143, 144, 145, 146, 147, 153, 154, 155, 156, 157, 161, 164, 165, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 184, 186, 187, 188, 190, 193, 194, 197, 200, 202, 265, 280, 283, 284, 285, 286, 289, 306, 311, 315, 318, 325, 326, 328, 331, 336, 337, 343, 344, 349, 365, 369, 380, 387, 389, 390, 392, 393, 394, 396, 397, 402, 403, 404, 405, 408, 409, 410, 413, 416, 418, 419, 421, 423, 431, 432, 434, 436, 454, 463, 464, 467, 471, 474, 477, 483], "AND": [14, 44, 176, 474], "AS": [462, 463, 469, 474], "And": [468, 484], "As": [311, 316, 380, 384, 458, 469, 476, 482, 483], "At": [12, 13, 22, 23, 24, 25, 26, 27, 28, 44, 45, 46, 52, 53, 59, 60, 63, 64, 65, 70, 71, 78, 86, 87, 88, 90, 93, 116, 117, 118, 119, 120, 121, 122, 125, 127, 128, 134, 139, 143, 144, 145, 153, 154, 155, 156, 157, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 182, 186, 187, 188, 190, 325, 326, 328, 336, 337, 343, 344, 389, 390, 393, 394, 402, 403, 404, 405, 409, 410, 413, 418, 419, 431, 432, 463], "BE": 474, "BUT": 474, "BY": 474, "But": 482, "By": [16, 17, 29, 30, 31, 32, 37, 67, 95, 100, 109, 161, 168, 191, 192, 195, 200, 265, 333, 387, 391, 395, 406, 416, 423, 424, 426, 429, 436, 454, 458, 470, 483, 484], "FOR": 474, "For": [12, 13, 21, 22, 23, 24, 25, 26, 27, 28, 36, 40, 44, 45, 46, 52, 53, 55, 59, 60, 61, 63, 64, 65, 68, 69, 70, 71, 73, 76, 77, 78, 81, 82, 86, 87, 88, 90, 93, 94, 98, 99, 101, 104, 105, 107, 108, 110, 114, 115, 116, 117, 118, 119, 120, 121, 122, 125, 127, 128, 133, 134, 139, 140, 143, 144, 145, 153, 154, 155, 156, 157, 162, 164, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 182, 183, 185, 186, 187, 188, 190, 191, 192, 193, 194, 196, 200, 249, 254, 291, 311, 320, 325, 326, 328, 336, 337, 343, 344, 363, 389, 390, 393, 394, 398, 402, 403, 404, 405, 408, 409, 410, 412, 413, 418, 419, 431, 432, 436, 439, 450, 458, 464, 465, 467, 470, 471, 472, 473, 477, 480, 483, 484], "IF": 474, "IN": 474, "ITS": 474, "If": [1, 2, 12, 13, 14, 15, 16, 17, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 34, 35, 37, 41, 42, 43, 44, 45, 46, 47, 48, 49, 52, 53, 54, 55, 57, 58, 59, 60, 61, 63, 64, 65, 67, 68, 69, 70, 71, 72, 75, 76, 77, 78, 79, 82, 83, 86, 87, 88, 90, 92, 93, 94, 95, 96, 98, 99, 100, 101, 103, 104, 106, 107, 109, 110, 113, 116, 117, 118, 119, 120, 121, 122, 125, 126, 127, 128, 129, 130, 131, 134, 136, 137, 138, 139, 140, 143, 144, 145, 146, 147, 148, 152, 153, 154, 155, 156, 157, 159, 160, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 181, 182, 183, 184, 185, 186, 187, 188, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 254, 265, 286, 304, 316, 317, 320, 324, 325, 326, 328, 331, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 371, 372, 373, 374, 375, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 388, 389, 390, 392, 393, 394, 395, 397, 399, 402, 403, 404, 405, 406, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 424, 431, 432, 433, 436, 437, 458, 459, 464, 467, 468, 471, 479, 482, 483], "In": [2, 61, 68, 69, 82, 99, 100, 101, 104, 106, 158, 168, 180, 185, 193, 194, 199, 200, 201, 202, 333, 334, 338, 339, 342, 364, 382, 384, 392, 406, 414, 424, 458, 462, 463, 464, 466, 467, 470, 477, 482, 483], "It": [6, 14, 19, 20, 21, 29, 30, 31, 32, 42, 47, 51, 54, 55, 68, 69, 77, 118, 184, 191, 192, 193, 194, 197, 199, 201, 202, 283, 334, 338, 341, 342, 345, 350, 353, 356, 364, 383, 397, 400, 414, 416, 417, 436, 464, 470, 475, 482, 483], "Its": [55, 57, 340, 350, 422], "NO": 474, "NOT": [139, 177, 376, 474, 483], "No": [37, 158], "Not": [55, 143, 193, 194, 200, 202, 482], "OF": [462, 463, 469, 474], "ON": [459, 474], "OR": [19, 45, 178, 462, 463, 469, 473, 474], "On": 471, "One": [38, 39, 40, 200, 268, 392, 471, 482], "Ones": [34, 193], "Or": 420, "SUCH": 474, "Such": 471, "THE": 474, "TO": 474, "That": 180, "The": [2, 6, 7, 14, 15, 16, 17, 18, 19, 20, 21, 31, 32, 34, 36, 41, 42, 43, 47, 48, 49, 50, 51, 54, 55, 56, 58, 61, 66, 67, 68, 69, 72, 73, 75, 76, 77, 79, 81, 82, 83, 85, 89, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 111, 113, 116, 123, 124, 126, 129, 130, 131, 133, 135, 136, 137, 138, 140, 142, 146, 147, 149, 152, 158, 159, 160, 162, 163, 164, 165, 167, 168, 169, 180, 181, 183, 184, 185, 189, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 254, 265, 273, 280, 283, 285, 286, 288, 291, 302, 306, 311, 315, 316, 317, 324, 329, 330, 332, 333, 334, 338, 339, 340, 342, 345, 349, 350, 351, 352, 353, 354, 356, 361, 363, 364, 365, 367, 368, 369, 371, 374, 377, 381, 382, 383, 384, 385, 386, 387, 388, 391, 392, 395, 396, 397, 398, 400, 401, 406, 408, 411, 412, 414, 416, 417, 420, 421, 422, 424, 426, 427, 429, 430, 433, 434, 435, 436, 437, 439, 441, 442, 443, 459, 460, 461, 462, 464, 465, 467, 468, 470, 471, 473, 474, 476, 479, 480, 482, 483], "Then": [54, 180, 484], "There": [168, 306, 433, 459, 461, 468, 482, 483], "These": [20, 49, 67, 82, 83, 185, 189, 283, 306, 340, 417, 470, 476, 483], "To": [98, 104, 106, 320, 372, 373, 375, 458, 462, 463, 464, 467, 468, 469, 473, 480, 482, 483], "WITH": 474, "With": [14, 16, 17, 19, 29, 30, 41, 164, 183, 184, 191, 192, 195, 196, 197, 198, 199, 200, 201, 202, 334, 338, 342, 414, 436, 470, 472, 483], "_": [464, 482, 483], "__abs__": 0, "__add__": 0, "__and__": 0, "__array__": [0, 34, 323], "__array_function__": [0, 424], "__array_ufunc__": 0, "__bool__": 0, "__buffer__": 0, "__complex__": 0, "__contains__": 0, "__copy__": 0, "__deepcopy__": 0, "__divmod__": 0, "__eq__": 0, "__float__": 0, "__floordiv__": 0, "__format__": 0, "__ge__": 0, "__getitem__": 0, "__gt__": 0, "__hash__": 0, "__iadd__": 0, "__iand__": 0, "__ifloordiv__": 0, "__ilshift__": 0, "__imatmul__": 0, "__imod__": 0, "__imul__": 0, "__index__": 0, "__init__": [0, 1, 2, 4, 479], "__int__": 0, "__invert__": 0, "__ior__": 0, "__ipow__": 0, "__irshift__": 0, "__isub__": 0, "__iter__": 0, "__itruediv__": 0, "__ixor__": 0, "__le__": 0, "__len__": 0, "__lshift__": 0, "__lt__": 0, "__main__": 483, "__matmul__": 0, "__mod__": 0, "__mul__": 0, "__name__": [465, 483], "__ne__": 0, "__neg__": 0, "__or__": 0, "__pos__": 0, "__pow__": 0, "__radd__": 0, "__rand__": 0, "__rdivmod__": 0, "__reduce__": 0, "__reduce_ex__": 0, "__repr__": 0, "__rfloordiv__": 0, "__rmatmul__": 0, "__rmod__": 0, "__rmul__": 0, "__ror__": 0, "__rpow__": 0, "__rshift__": 0, "__rsub__": 0, "__rtruediv__": 0, "__rxor__": 0, "__setitem__": 0, "__setstate__": 0, "__sizeof__": 0, "__str__": 0, "__sub__": 0, "__truediv__": 0, "__xor__": 0, "_f": 164, "a0": 331, "a1": [35, 58, 331, 462, 464], "a100": 472, "a2": [35, 58, 462, 464], "a3": 462, "a4": 462, "a5": 462, "a_": [164, 464], "a_ax": 420, "a_max": 55, "a_min": 55, "a_swap": 415, "aand": 462, "aarch64": [473, 483], "ab": [15, 162, 164, 204, 462], "abandon": 458, "abil": 483, "abl": [164, 458, 483], "about": [99, 283, 306, 454, 458, 463, 467, 473, 477, 483], "abov": [54, 72, 96, 101, 106, 109, 183, 196, 200, 202, 338, 364, 368, 371, 424, 425, 436, 462, 470, 471, 474, 483], "abramowitz": 462, "abrupt": 465, "absolut": [0, 3, 8, 15, 93, 140], "abstract": 470, "ac": [462, 465], "acceler": [454, 471, 472, 483], "accept": [346, 458, 476, 482], "access": [73, 74, 180, 283, 289, 306, 470, 471, 483], "accomod": 464, "accord": [41, 109, 159, 160, 306, 423], "accordingli": 181, "account": [387, 392, 470, 471, 483], "acct": 483, "acct_nam": 483, "accumul": [68, 69, 193, 194, 200, 202, 338, 414, 422, 476], "accur": [126, 463, 464, 471], "accuraci": [99, 100, 101, 104, 106, 464, 468, 483], "achiev": [320, 353, 470, 472], "aco": [3, 8], "acosh": [3, 8], "across": [467, 470, 483], "action": 474, "activ": [473, 483], "actual": [158, 306, 465, 470, 471, 477, 483], "ad": [15, 320, 364, 470, 479], "adapt": 474, "add": [0, 3, 8, 372, 373, 375, 434, 458, 476, 482, 483, 484], "add_argu": 483, "addit": [2, 67, 158, 161, 320, 433, 454, 461, 464, 465, 468, 470, 471, 473, 482, 483], "addition": [349, 459, 476, 482, 483], "address": [416, 458, 483], "adjac": [21, 470, 483], "advanc": [460, 471, 476, 481], "advantag": 483, "advis": 474, "affect": [21, 306, 464], "afford": [471, 483], "after": [81, 110, 181, 199, 201, 311, 326, 334, 342, 395, 398, 439, 458, 461, 470, 479, 482], "again": 323, "against": [6, 14, 15, 16, 17, 19, 29, 30, 41, 49, 50, 164, 183, 184, 191, 192, 195, 196, 197, 198, 199, 200, 201, 202, 334, 338, 340, 342, 414, 417, 436], "aggreg": 483, "agre": [458, 462, 463, 469], "ai": 483, "aim": 472, "alaska": 474, "algebra": [82, 443, 452, 459], "algo_canny_edge_detector": 465, "algorithm": [1, 32, 82, 83, 94, 99, 107, 406, 464, 465, 466, 468, 483], "alia": [318, 370], "alias": 99, "align": [283, 306, 483], "all": [0, 3, 8, 16, 17, 19, 41, 48, 54, 56, 67, 76, 77, 81, 82, 83, 87, 88, 90, 92, 96, 97, 101, 102, 106, 109, 110, 113, 126, 133, 135, 150, 151, 158, 168, 180, 181, 183, 185, 191, 192, 193, 194, 195, 196, 198, 200, 202, 265, 270, 282, 283, 286, 306, 317, 338, 382, 395, 398, 400, 411, 414, 416, 422, 436, 439, 454, 458, 459, 461, 467, 469, 470, 474, 479, 483, 484], "allclos": [0, 3, 8, 479], "allevi": 483, "alloc": [12, 13, 22, 23, 24, 25, 26, 27, 28, 44, 45, 46, 52, 53, 59, 60, 63, 64, 65, 70, 71, 78, 86, 87, 88, 90, 93, 116, 117, 118, 119, 120, 121, 122, 125, 127, 128, 134, 139, 143, 144, 145, 146, 147, 153, 154, 155, 156, 157, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 182, 186, 187, 188, 190, 265, 325, 326, 328, 336, 337, 343, 344, 389, 390, 393, 394, 402, 403, 404, 405, 409, 410, 413, 418, 419, 431, 432, 471, 481, 484], "allow": [16, 17, 36, 48, 79, 82, 131, 138, 169, 181, 184, 195, 197, 198, 199, 201, 265, 334, 342, 416, 420, 424, 437, 458, 465, 470, 483], "alon": 483, "along": [6, 14, 16, 17, 19, 20, 29, 30, 31, 32, 41, 48, 57, 58, 66, 68, 69, 73, 76, 80, 81, 94, 95, 96, 98, 99, 100, 101, 103, 104, 106, 107, 109, 110, 113, 114, 115, 126, 132, 133, 137, 164, 168, 183, 184, 185, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 261, 262, 269, 286, 292, 293, 294, 311, 314, 319, 322, 334, 338, 340, 342, 391, 395, 396, 398, 407, 408, 412, 414, 416, 417, 420, 421, 422, 426, 427, 429, 430, 433, 434, 436, 438, 439, 483], "alpha": [345, 464, 467], "alreadi": [37, 39, 40, 184, 197, 283, 324, 331, 433, 458], "also": [21, 67, 76, 82, 96, 101, 106, 109, 161, 181, 189, 283, 323, 346, 351, 357, 364, 366, 374, 377, 383, 386, 416, 433, 448, 450, 458, 461, 463, 468, 469, 470, 471, 473, 475, 476, 480, 482, 483], "alter": 283, "altern": [14, 16, 17, 19, 68, 69, 183, 184, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 334, 338, 342, 350, 397, 414, 436], "although": [102, 317, 470], "alwai": [54, 75, 80, 116, 132, 150, 159, 160, 169, 316, 411, 438, 454, 458, 471], "am": [331, 458], "amax": [0, 3, 8, 43, 195, 292], "amd": 483, "american": [199, 201, 334, 342], "amin": [0, 3, 8, 198, 294], "among": [273, 483], "amongst": 6, "amount": [471, 483], "an": [2, 6, 12, 13, 14, 16, 17, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 34, 36, 37, 38, 39, 40, 41, 42, 44, 45, 46, 47, 48, 51, 52, 53, 54, 55, 57, 58, 59, 60, 61, 62, 63, 64, 65, 67, 68, 69, 70, 71, 73, 74, 75, 77, 78, 79, 82, 83, 86, 87, 88, 89, 90, 91, 92, 93, 95, 96, 98, 99, 100, 101, 104, 106, 107, 109, 110, 113, 116, 117, 118, 119, 120, 121, 122, 125, 126, 127, 128, 129, 130, 131, 132, 134, 137, 138, 139, 142, 143, 144, 145, 149, 151, 152, 153, 154, 155, 156, 157, 164, 166, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 182, 183, 184, 185, 186, 187, 188, 189, 190, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 211, 212, 254, 267, 268, 269, 273, 281, 286, 289, 298, 303, 304, 308, 309, 311, 314, 316, 317, 320, 321, 323, 324, 325, 326, 328, 330, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 346, 348, 350, 351, 353, 362, 367, 369, 384, 386, 387, 389, 390, 391, 392, 393, 394, 395, 396, 397, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 428, 429, 431, 432, 433, 435, 436, 438, 440, 442, 450, 454, 458, 459, 461, 462, 463, 465, 467, 468, 469, 470, 471, 473, 474, 476, 477, 479, 483], "analog": [100, 101], "analogu": [350, 383], "analysi": 471, "angl": [0, 3, 8, 70, 71, 343, 344], "ani": [0, 3, 4, 6, 8, 12, 13, 14, 16, 17, 20, 21, 22, 23, 24, 25, 26, 27, 28, 34, 36, 37, 44, 45, 46, 48, 49, 52, 53, 54, 59, 60, 63, 64, 65, 67, 68, 69, 70, 71, 76, 77, 78, 82, 83, 86, 87, 88, 90, 93, 95, 96, 100, 101, 106, 109, 110, 111, 116, 117, 118, 119, 120, 121, 122, 123, 125, 126, 127, 128, 133, 134, 139, 141, 142, 143, 144, 145, 148, 149, 150, 151, 153, 154, 155, 156, 157, 162, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 181, 182, 183, 186, 187, 188, 190, 191, 192, 193, 194, 195, 196, 198, 200, 202, 265, 266, 273, 274, 275, 279, 283, 284, 286, 287, 292, 294, 299, 305, 312, 315, 317, 325, 326, 328, 336, 337, 338, 343, 344, 382, 389, 390, 391, 393, 394, 400, 402, 403, 404, 405, 409, 410, 413, 414, 418, 419, 422, 431, 432, 436, 458, 461, 462, 463, 469, 470, 474, 480, 482], "anoth": [6, 283, 306, 471, 483], "anova": 351, "answer": 483, "anti": 482, "anyth": [291, 461], "ap": 462, "apach": [458, 462, 463, 469], "api": [283, 306, 370, 454, 459, 464, 465, 468, 471, 472, 477, 478, 480, 481, 483], "appear": [42, 47, 89, 114, 115, 129, 130, 152, 265, 433, 458], "append": [0, 3, 8, 75, 76, 83, 181, 470, 482, 483], "appli": [41, 111, 420, 464, 465, 476, 482, 483], "applic": [462, 463, 469, 470, 477, 479, 481, 483, 484], "apply_along_axi": [3, 8], "apply_over_ax": [3, 8], "approach": [384, 458, 470, 482, 483], "appropri": [29, 30, 48, 54, 77, 191, 192, 283, 306, 368, 371, 416, 450, 458, 470, 483], "approx": 483, "approxim": [462, 464], "ar": [13, 14, 15, 16, 17, 19, 20, 21, 27, 29, 30, 33, 35, 38, 39, 40, 41, 42, 44, 45, 46, 48, 49, 54, 55, 56, 57, 58, 61, 63, 67, 68, 69, 72, 75, 76, 77, 78, 79, 82, 83, 86, 92, 95, 96, 98, 99, 100, 101, 104, 106, 109, 112, 113, 114, 115, 116, 118, 119, 120, 121, 125, 127, 128, 131, 134, 138, 140, 153, 154, 155, 156, 157, 158, 162, 164, 167, 168, 174, 175, 176, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 265, 268, 283, 286, 289, 297, 304, 306, 316, 317, 320, 324, 326, 327, 328, 334, 335, 337, 338, 339, 340, 342, 345, 346, 348, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 368, 369, 371, 372, 373, 374, 375, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 390, 393, 395, 397, 399, 400, 412, 413, 414, 416, 420, 422, 424, 427, 430, 431, 433, 434, 435, 436, 454, 458, 459, 461, 462, 464, 465, 467, 468, 470, 473, 474, 476, 477, 479, 482, 483], "arang": [0, 3, 8], "arbitrari": [84, 85, 283, 308], "arbitrarili": 283, "arc": 27, "arcco": [0, 3, 8], "arccosh": [0, 3, 8], "architectur": [470, 483], "archiv": 316, "arcsin": [0, 3, 8], "arcsinh": [0, 3, 8], "arctan": [0, 3, 8], "arctan2": [0, 3, 8, 18], "arctanh": [0, 3, 8], "area": [283, 306, 470], "arg": [12, 13, 22, 23, 24, 25, 26, 27, 28, 44, 45, 46, 49, 50, 52, 53, 59, 60, 63, 64, 65, 70, 71, 78, 86, 87, 88, 90, 93, 111, 116, 117, 118, 119, 120, 121, 122, 125, 127, 128, 134, 139, 143, 144, 145, 151, 153, 154, 155, 156, 157, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 182, 186, 187, 188, 190, 289, 325, 326, 328, 336, 337, 343, 344, 389, 390, 393, 394, 402, 403, 404, 405, 409, 410, 413, 418, 419, 431, 432, 462, 483], "argmax": [0, 3, 8], "argmin": [0, 3, 8, 467], "argpars": 483, "argpartit": [0, 3, 8, 340, 417], "argsort": [0, 3, 8, 31, 304, 340, 399, 417], "argument": [2, 12, 13, 18, 21, 22, 23, 24, 25, 26, 27, 28, 44, 45, 46, 52, 53, 55, 58, 59, 60, 61, 63, 64, 65, 70, 71, 77, 78, 79, 83, 86, 87, 88, 90, 93, 111, 116, 117, 118, 119, 120, 121, 122, 125, 127, 128, 131, 134, 136, 138, 139, 143, 144, 145, 146, 147, 150, 153, 154, 155, 156, 157, 163, 168, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 185, 186, 187, 188, 190, 254, 265, 273, 289, 320, 323, 325, 326, 328, 336, 337, 343, 344, 367, 369, 388, 389, 390, 393, 394, 402, 403, 404, 405, 409, 410, 412, 413, 418, 419, 420, 424, 431, 432, 433, 437, 481, 483], "argumentpars": 483, "argwher": [0, 3, 8], "ari": [38, 39, 40, 408], "aris": [351, 474], "arithmet": [7, 54, 183, 196, 289, 452], "around": [3, 8, 339, 416, 483], "arr": [20, 51, 62, 74, 91, 184, 197, 283, 335, 340, 416, 417, 427, 430, 476], "arr_t": 265, "arrai": [0, 2, 6, 7, 12, 13, 14, 15, 16, 17, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 151, 152, 153, 154, 155, 156, 157, 159, 160, 161, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 207, 211, 212, 254, 263, 264, 265, 267, 268, 269, 272, 273, 276, 278, 279, 280, 281, 282, 283, 284, 285, 286, 288, 289, 293, 295, 296, 298, 299, 300, 301, 302, 303, 304, 306, 307, 308, 309, 311, 312, 313, 314, 315, 316, 317, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 358, 367, 368, 369, 371, 372, 373, 375, 382, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 452, 454, 463, 464, 465, 467, 468, 469, 470, 471, 476, 477, 479, 484], "array2str": [3, 8], "array_equ": [0, 3, 8], "array_equiv": [3, 8], "array_lik": [6, 12, 13, 14, 15, 16, 17, 18, 19, 20, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 37, 38, 39, 40, 41, 43, 44, 45, 46, 48, 49, 51, 52, 53, 55, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 74, 75, 76, 77, 78, 79, 82, 83, 85, 86, 87, 88, 89, 90, 91, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 109, 110, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 124, 125, 126, 127, 128, 131, 134, 136, 138, 139, 140, 141, 143, 144, 145, 146, 147, 148, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 181, 182, 183, 184, 185, 186, 187, 188, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 286, 304, 324, 325, 326, 327, 328, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 399, 401, 402, 403, 404, 405, 406, 407, 409, 410, 411, 412, 413, 414, 415, 416, 418, 419, 420, 421, 422, 423, 424, 425, 427, 431, 432, 433, 435, 436, 437, 440, 442], "array_of_diagon": 75, "array_repr": [3, 8], "array_split": [0, 3, 8], "array_str": [3, 8], "array_typ": 41, "arraylik": [55, 131, 400, 440], "articl": 458, "asanyarrai": 3, "asarrai": [0, 3, 8], "asarray_chkfinit": [3, 8], "ascend": [304, 399], "ascontiguousarrai": 3, "asfortranarrai": 3, "asin": [3, 8], "asinh": [3, 8], "ask": [458, 472], "asmatrix": [3, 8], "aspect": 483, "aspir": 471, "assembl": 48, "assert": [464, 467, 482], "assign": [67, 282, 283, 470, 476], "assoc": 467, "associ": [41, 131, 467, 474, 477, 482], "assum": [41, 83, 161, 180, 459], "ast": 169, "astyp": [0, 3, 8, 76, 279, 465, 471, 483], "asynchron": [340, 476, 477], "atan": [3, 8], "atan2": [3, 8], "atanh": [3, 8], "atleast2d": 320, "atleast_1d": [0, 3, 8, 89], "atleast_2d": [0, 3, 8, 89], "atleast_3d": [0, 3, 8, 89], "atol": [15, 140], "attempt": [41, 77, 183, 195, 196, 198, 202, 283, 324, 436, 454, 482, 483], "attribut": [4, 7, 85, 124, 273, 283, 295, 330, 442], "author": 474, "auto": 61, "autom": 458, "automat": [61, 163, 458, 459, 470, 473, 483], "avail": [1, 2, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 204, 205, 206, 210, 211, 212, 213, 214, 216, 217, 219, 220, 221, 222, 223, 224, 225, 226, 229, 230, 231, 232, 233, 234, 235, 236, 238, 239, 240, 241, 242, 243, 244, 246, 247, 248, 250, 251, 252, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 267, 268, 269, 270, 271, 272, 277, 278, 280, 281, 282, 284, 285, 286, 289, 292, 293, 294, 297, 298, 299, 300, 301, 303, 304, 306, 309, 310, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 458, 459, 473, 482, 483, 484], "averag": [0, 3, 8, 67, 183, 196, 293, 452, 469, 470, 483], "averaged_inverted_cdf": [199, 201, 334, 342], "avg": 41, "avoid": [39, 40, 265, 467, 471, 476], "aweight": 67, "ax": [14, 16, 17, 19, 29, 30, 41, 48, 66, 75, 76, 89, 95, 96, 97, 100, 101, 102, 105, 106, 108, 109, 113, 126, 138, 164, 166, 183, 184, 189, 191, 192, 195, 196, 197, 198, 199, 200, 201, 202, 286, 310, 320, 334, 338, 342, 395, 396, 414, 415, 420, 421, 422, 423, 436, 465, 483], "axi": [14, 16, 17, 18, 19, 20, 29, 30, 31, 32, 36, 41, 57, 58, 66, 68, 69, 75, 76, 79, 80, 81, 89, 94, 95, 96, 98, 99, 100, 101, 103, 104, 105, 106, 107, 108, 109, 113, 114, 115, 126, 132, 133, 137, 164, 168, 183, 184, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 259, 260, 261, 262, 263, 264, 269, 274, 275, 286, 292, 293, 294, 298, 299, 309, 310, 311, 312, 314, 320, 322, 332, 333, 334, 338, 340, 342, 387, 391, 392, 395, 396, 398, 406, 407, 408, 411, 412, 414, 415, 416, 417, 421, 422, 433, 434, 436, 438, 439, 467], "axis1": [75, 277, 313, 319, 415, 422], "axis2": [75, 277, 313, 319, 415, 422], "b": [6, 15, 35, 48, 79, 81, 118, 133, 138, 140, 166, 181, 283, 331, 345, 372, 373, 375, 398, 420, 437, 439, 458, 459, 464, 483], "b0": 331, "b1": 331, "b_ax": 420, "ba": 54, "back": [31, 54, 150, 280, 281, 333, 387, 392, 454, 462, 468, 471, 479, 483], "backward": [75, 94, 95, 96, 98, 99, 100, 101, 103, 104, 105, 106, 107, 108, 109, 126, 265, 387], "bad": 355, "balanc": 483, "baltimor": 164, "bar": 482, "barba": 470, "bartlett": [0, 3, 8], "base": [1, 34, 37, 61, 82, 171, 173, 175, 265, 283, 306, 335, 341, 454, 458, 459, 467, 470, 471, 476], "base_repr": [3, 8], "bash": 483, "bashrc": 483, "basi": [454, 462, 463, 469], "basic": [32, 406, 450, 452, 460, 470, 481, 482], "batch": [94, 95, 96, 98, 99, 100, 101, 103, 104, 105, 106, 107, 108, 109, 159, 160, 454], "bayesian": 345, "bbox_to_anchor": 464, "bchoic": 54, "becaus": [21, 289, 363, 384, 462, 463, 469, 471, 476, 482], "becom": [13, 27, 40, 44, 45, 46, 54, 55, 63, 78, 86, 116, 118, 119, 120, 121, 125, 127, 128, 134, 153, 154, 155, 156, 157, 174, 175, 176, 178, 179, 182, 186, 187, 190, 320, 326, 328, 337, 384, 390, 393, 413, 431, 483, 484], "been": [81, 340, 371, 398, 417, 439, 471], "befor": [14, 16, 17, 19, 20, 41, 58, 61, 114, 115, 183, 195, 196, 202, 283, 304, 338, 360, 395, 399, 414, 421, 436, 437, 468, 471, 473, 482, 483], "begin": [168, 460, 468, 483], "behav": [283, 339, 416], "behavior": [61, 77, 181, 315, 318, 340, 341, 368, 371, 421, 454, 470, 473, 481, 483], "being": [21, 411, 458, 471, 483], "bell": 363, "belong": [77, 467], "below": [67, 72, 104, 164, 306, 424, 425, 428, 459, 462, 464, 468, 470, 479, 480, 482, 483, 484], "benchmark": [461, 471, 478, 481, 483], "bernoulli": 353, "bessel": 152, "best": [83, 458, 471, 481], "beta": [0, 3, 8, 152, 350, 467], "better": [21, 54, 477, 483], "between": [15, 21, 36, 76, 126, 168, 199, 201, 316, 334, 342, 350, 356, 371, 384, 464, 465, 467, 468, 470, 482, 483], "beyond": [77, 395], "bham": 462, "bia": 67, "big": [161, 332, 434, 462], "bigger": 483, "billion": 470, "bin": [43, 77, 131, 332, 434, 467, 473, 483], "bin_edg": 131, "binari": [169, 254, 316, 332, 434, 443, 452, 474], "binary_repr": [3, 8], "binaryio": 169, "binaryoptask": 471, "bincount": [0, 3, 8, 467], "binomi": [0, 3, 8, 360, 365], "bit": [1, 44, 45, 46, 139, 155, 177, 200, 311, 332, 393, 434, 452], "bit_gener": 2, "bitgener": [2, 3, 8, 349], "bitord": [332, 434], "bitwise_and": [0, 3, 8], "bitwise_count": [3, 8], "bitwise_invert": [3, 8], "bitwise_left_shift": [3, 8], "bitwise_or": [0, 3, 8], "bitwise_right_shift": [3, 8], "bitwise_xor": [0, 3, 8], "bla": 459, "black": [466, 467, 473], "black_schol": [461, 462, 473, 483], "blackman": [0, 3, 8], "block": [0, 3, 8, 81, 133, 311, 398, 439, 470], "block_arrai": 48, "blog": 471, "blue": [464, 467], "bmat": [3, 8], "bmatrix": 468, "bn": 331, "boilerpl": 483, "boldsymbol": 483, "bond": 483, "bool": [1, 3, 4, 8, 12, 13, 14, 15, 16, 17, 18, 19, 22, 23, 24, 25, 26, 27, 28, 29, 30, 34, 35, 36, 41, 44, 45, 46, 49, 51, 52, 53, 57, 59, 60, 63, 64, 65, 67, 70, 71, 77, 78, 82, 83, 86, 87, 88, 90, 93, 110, 116, 117, 118, 119, 120, 121, 122, 125, 127, 128, 131, 134, 137, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 153, 154, 155, 156, 157, 164, 167, 168, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 182, 183, 184, 185, 186, 187, 188, 190, 191, 192, 195, 196, 197, 198, 199, 200, 201, 202, 254, 265, 292, 294, 299, 306, 312, 325, 326, 328, 334, 336, 337, 338, 342, 343, 344, 389, 390, 393, 394, 400, 402, 403, 404, 405, 409, 410, 413, 414, 418, 419, 431, 432, 433, 436, 440, 450, 454, 482], "bool_": [3, 8], "boolean": [14, 19, 76, 140, 145, 146, 147, 148, 151, 180, 306, 332, 341, 436, 467], "boolean_sequ": 151, "borrow": 283, "both": [13, 15, 20, 27, 41, 44, 45, 46, 61, 63, 67, 78, 79, 86, 100, 116, 118, 119, 120, 121, 125, 127, 128, 134, 138, 140, 153, 154, 155, 156, 157, 164, 174, 175, 176, 178, 179, 181, 182, 185, 186, 187, 190, 283, 326, 328, 337, 351, 352, 362, 363, 390, 393, 413, 420, 422, 431, 459, 468, 471, 482], "bottleneck": 483, "bound": [57, 77, 339, 416], "boundari": [68, 69, 126, 193, 194, 382, 464, 469, 470, 477], "boundsmod": [54, 416], "break": [467, 468, 482], "bright": 483, "broadcast": [3, 7, 8, 12, 13, 14, 16, 17, 19, 22, 23, 24, 25, 26, 27, 28, 29, 30, 41, 44, 45, 46, 48, 49, 50, 51, 52, 53, 54, 55, 59, 60, 63, 64, 65, 70, 71, 78, 79, 86, 87, 88, 90, 93, 116, 117, 118, 119, 120, 121, 122, 125, 127, 128, 134, 138, 139, 143, 144, 145, 146, 147, 153, 154, 155, 156, 157, 164, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 181, 182, 183, 184, 185, 186, 187, 188, 190, 191, 192, 195, 196, 197, 198, 199, 200, 201, 202, 325, 326, 328, 334, 336, 337, 338, 340, 342, 343, 344, 365, 389, 390, 391, 393, 394, 402, 403, 404, 405, 409, 410, 413, 414, 417, 418, 419, 420, 431, 432, 436, 437, 440, 443, 476, 483], "broadcast_arrai": [0, 3, 8], "broadcast_shap": [0, 3, 8], "broadcast_to": [0, 3, 8], "brownian": 384, "bryan": 462, "bsd": 474, "buffer": [4, 16, 17, 54, 68, 69, 184, 193, 194, 195, 197, 198, 276, 283, 289, 306], "build": [376, 452, 460, 467, 476, 483], "built": [21, 459, 463, 471, 472, 483], "builtin": 317, "bundl": 473, "busday_count": [3, 8], "busday_offset": [3, 8], "busdaycalendar": [3, 8], "busi": 474, "bypass": [316, 483], "byte": [0, 3, 8, 82, 169, 181, 265, 295, 311, 315, 318, 332, 471], "bytes_": [3, 8], "bytesio": 316, "byteswap": 8, "c": [34, 48, 57, 164, 181, 265, 273, 283, 285, 301, 303, 306, 315, 316, 318, 371, 384, 387, 392, 421, 435, 458, 459, 462, 467, 473, 474, 483], "c_": 67, "c_contigu": 283, "ca": 283, "calcul": [7, 12, 41, 61, 76, 82, 87, 88, 90, 102, 126, 164, 168, 181, 184, 197, 199, 201, 308, 334, 338, 342, 436, 437, 459, 462, 467, 483], "calculate_dist": 467, "call": [54, 77, 107, 163, 180, 184, 197, 211, 212, 273, 283, 306, 363, 416, 421, 454, 462, 463, 468, 471, 483], "call_result": 462, "callabl": 180, "can": [14, 19, 20, 37, 41, 48, 67, 73, 75, 82, 83, 94, 95, 96, 99, 100, 101, 126, 133, 142, 149, 150, 151, 161, 162, 164, 168, 181, 184, 197, 199, 200, 201, 265, 273, 280, 283, 289, 291, 306, 311, 316, 323, 334, 340, 342, 364, 392, 416, 417, 420, 422, 433, 450, 454, 458, 459, 461, 462, 463, 464, 465, 468, 469, 470, 472, 473, 475, 476, 480, 482, 483], "can_cast": [3, 8], "cannot": [58, 169, 191, 192, 283, 316, 471], "canon": [462, 468, 471], "capabl": [41, 473, 483], "care": 483, "carrai": 283, "cartesian": 185, "case": [14, 19, 21, 31, 32, 34, 41, 54, 61, 68, 69, 75, 76, 77, 79, 98, 126, 137, 168, 180, 185, 193, 194, 199, 200, 201, 202, 289, 306, 308, 332, 333, 334, 338, 339, 340, 342, 345, 368, 371, 372, 373, 374, 375, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 392, 406, 414, 417, 420, 424, 458, 466, 476, 479, 482], "cast": [12, 13, 22, 23, 24, 25, 26, 27, 28, 44, 45, 46, 52, 53, 58, 59, 60, 63, 64, 65, 68, 69, 70, 71, 76, 78, 82, 86, 87, 88, 90, 93, 116, 117, 118, 119, 120, 121, 122, 125, 127, 128, 134, 138, 139, 143, 144, 145, 153, 154, 155, 156, 157, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 181, 182, 183, 184, 186, 187, 188, 190, 193, 194, 196, 197, 200, 202, 265, 279, 325, 326, 328, 331, 336, 337, 338, 343, 344, 389, 390, 393, 394, 397, 402, 403, 404, 405, 409, 410, 413, 414, 418, 419, 420, 431, 432, 436, 437, 468], "castingkind": [12, 13, 22, 23, 24, 25, 26, 27, 28, 44, 45, 46, 52, 53, 58, 59, 60, 63, 64, 65, 70, 71, 78, 82, 86, 87, 88, 90, 93, 116, 117, 118, 119, 120, 121, 122, 125, 127, 128, 134, 139, 143, 144, 145, 153, 154, 155, 156, 157, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 181, 182, 186, 187, 188, 190, 325, 326, 328, 336, 337, 343, 344, 389, 390, 393, 394, 402, 403, 404, 405, 409, 410, 413, 418, 419, 431, 432], "cat": 471, "cauchi": 377, "caus": [276, 470, 474, 482], "cbrt": [0, 3, 8], "cdot": [468, 483], "cdoubl": [3, 8], "ceil": [0, 3, 8, 21], "cell": 470, "center": [61, 97, 383, 464, 467, 469, 483], "centr": 363, "central": [126, 361, 362, 363], "centroid": 467, "centroid_dot": 467, "centroid_mask": 467, "certain": [180, 311, 454], "certif": 460, "certifi": 458, "cfd": 472, "cg": [461, 483], "chain": 163, "challeng": [470, 483], "chanc": 458, "chang": [63, 82, 168, 181, 193, 194, 265, 283, 306, 320, 335, 340, 341, 387, 392, 452, 458, 465, 468, 472, 478, 481, 482, 483, 484], "channel": [81, 133, 398, 439, 470, 473], "charact": [3, 8, 479], "characterist": 363, "charg": 474, "check": [69, 77, 142, 149, 158, 193, 194, 458, 465, 467, 468, 471, 473, 482, 483], "chi": [348, 351, 361, 374], "chisquar": [0, 3, 8], "choic": [3, 8, 54, 267, 316], "choicelist": 400, "choleski": [0, 3, 8, 461, 466, 480], "cholesky_tim": 463, "choos": [0, 3, 8, 27, 61, 83, 440, 471, 483], "chosen": [131, 440], "chuang": 470, "circl": 383, "circular": 383, "circumst": 283, "claim": [384, 474], "class": [1, 2, 4, 6, 14, 16, 17, 19, 34, 37, 92, 135, 137, 183, 195, 198, 200, 265, 323, 329, 338, 373, 375, 414, 424, 443], "classic": [82, 364], "claus": [474, 482], "clean": 470, "clear": 283, "clearli": 483, "clip": [0, 3, 8, 54, 339, 416], "clipped_arrai": 55, "clongdoubl": [3, 8, 289], "close": [47, 168, 265, 371, 458, 471], "closest": 316, "closest_observ": [199, 201, 334, 342], "cluster": [466, 471, 472, 481], "cmap": [465, 483], "cnd": 462, "cnd_d1": 462, "cnd_d2": 462, "co": [0, 3, 8, 65, 464], "coastal": 470, "code": [32, 48, 185, 406, 454, 460, 461, 470, 472, 474, 478, 481, 482], "codebas": 480, "coeffici": [166, 462], "coercion": 111, "coin": 353, "collaps": [284, 285], "collect": [75, 276, 483], "color": [461, 464, 467], "colorama": 461, "column": [8, 34, 56, 67, 92, 110, 114, 115, 132, 133, 135, 159, 163, 165, 285, 311, 320, 387, 424, 426, 429, 435, 479, 483], "column_stack": [0, 3, 8], "com": [458, 465, 471, 474, 476, 483, 484], "combin": [89, 96, 101, 106, 109, 126, 461, 477, 483], "combinatori": 83, "come": [433, 483], "comm": 470, "comm_world": 470, "comma": [82, 461], "comman": 471, "command": [461, 471, 473, 475, 479, 483], "comment": 458, "commit": [458, 470], "common": [13, 27, 44, 45, 46, 54, 63, 78, 82, 86, 111, 116, 118, 119, 120, 121, 125, 127, 128, 134, 153, 154, 155, 156, 157, 174, 175, 176, 178, 179, 182, 186, 187, 190, 326, 328, 337, 350, 385, 390, 393, 413, 431, 482, 483], "common_typ": [3, 8], "commonli": [363, 471, 482], "commun": [458, 470, 471, 482, 483], "compact": 466, "compactli": 464, "compar": [15, 16, 17, 35, 140, 195, 198, 464, 483], "comparison": [7, 443, 452], "compat": [75, 265, 317, 318, 387, 392, 424, 483], "compil": [166, 306, 459], "complet": [83, 199, 201, 334, 342, 459, 470, 472, 479, 483], "complex": [18, 35, 43, 59, 60, 68, 69, 77, 79, 94, 95, 96, 99, 100, 101, 103, 104, 107, 109, 136, 138, 141, 142, 148, 149, 159, 160, 193, 194, 199, 201, 270, 271, 334, 342, 388, 397, 407, 437, 450, 452, 470, 483], "complex128": [3, 8], "complex256": [3, 8], "complex64": [3, 8], "complexflo": [3, 8], "compli": 458, "complianc": [462, 463, 469], "complic": 470, "compon": [6, 35, 48, 97, 136, 388, 420, 482, 483], "compos": 471, "compound": 462, "compress": [0, 3, 8, 316], "compressed_arrai": 57, "compuat": 479, "comput": [16, 17, 18, 41, 44, 45, 46, 61, 68, 69, 82, 93, 94, 95, 96, 98, 99, 100, 101, 103, 104, 105, 106, 107, 108, 109, 126, 131, 137, 139, 159, 160, 162, 163, 164, 165, 166, 167, 176, 177, 178, 179, 183, 184, 193, 194, 195, 196, 197, 198, 199, 200, 201, 331, 334, 342, 418, 419, 420, 436, 454, 462, 463, 464, 465, 467, 468, 470, 471, 472, 476, 477, 482], "computat": 483, "computation": 161, "compute_uv": 167, "concat": [3, 8], "concaten": [0, 3, 8, 48, 81, 133, 398, 439], "concern": 483, "conclud": [458, 470], "conclus": 470, "cond": [8, 482, 483], "conda": 459, "conda_override_cuda": 473, "condit": [12, 13, 22, 23, 24, 25, 26, 27, 28, 44, 45, 46, 52, 53, 57, 59, 60, 63, 64, 65, 70, 71, 78, 86, 87, 88, 90, 91, 93, 116, 117, 118, 119, 120, 121, 122, 125, 127, 128, 134, 139, 143, 144, 145, 153, 154, 155, 156, 157, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 182, 186, 187, 188, 190, 265, 269, 325, 326, 328, 335, 336, 337, 341, 343, 344, 381, 389, 390, 393, 394, 400, 402, 403, 404, 405, 409, 410, 413, 418, 419, 431, 432, 440, 462, 463, 464, 469, 470, 474, 477, 482, 483], "condition": 482, "condlist": 400, "conduct": 483, "configur": [454, 459, 460, 471, 482], "configurt": 471, "conj": [0, 3, 8], "conjug": [0, 3, 8, 59, 79, 104, 138, 158, 270, 437, 463], "connect": [474, 483], "consecut": 76, "consequ": [18, 437, 471], "consequenti": 474, "conserv": 185, "consid": [15, 35, 67, 68, 82, 83, 140, 364, 464, 468, 483], "consider": 483, "consist": [14, 21, 61, 76, 168, 417, 458, 470], "const": [482, 483], "constant": [126, 286], "constraint": [41, 483], "construct": [7, 48, 54, 72, 113, 114, 115, 151, 267, 315, 349, 421], "constructor": [2, 450], "consum": [161, 295], "contact": 471, "contain": [2, 29, 30, 41, 43, 54, 55, 57, 67, 75, 76, 99, 112, 126, 131, 137, 183, 184, 191, 192, 195, 196, 197, 198, 199, 201, 202, 254, 279, 303, 315, 316, 327, 334, 342, 387, 397, 420, 426, 427, 429, 430, 433, 436, 450, 483], "content": [43, 184, 197, 199, 201, 283, 306, 315, 316, 334, 342, 452], "context": [462, 470], "contigu": [49, 51, 185, 265, 283, 285, 311, 315, 387, 392], "continu": [350, 351, 372, 373, 375, 381, 383, 462], "contour": 483, "contract": [82, 83, 459, 474], "contribut": [8, 41, 131, 460, 483], "contributor": [458, 474], "control": [58, 82, 181, 265, 315, 461, 484], "conveni": 316, "convent": [18, 82, 101, 181, 185], "converg": [159, 160, 167, 467, 468, 482, 483], "convers": [41, 82, 181, 183, 195, 196, 198, 202, 265, 323, 324, 436], "convert": [14, 19, 37, 38, 39, 40, 70, 71, 184, 197, 199, 201, 281, 316, 317, 320, 323, 334, 342, 343, 344, 435, 464, 476, 483], "convolut": [61, 465, 483], "convolv": [0, 8, 465, 483], "convolve_nd": [465, 483], "convolvemethodtyp": 61, "convolvemod": 61, "coordin": [126, 185, 435, 467], "copi": [0, 3, 8, 20, 34, 37, 38, 39, 40, 48, 49, 57, 72, 75, 185, 211, 212, 265, 283, 284, 285, 289, 306, 315, 317, 333, 387, 392, 396, 406, 407, 425, 428, 458, 462, 463, 469, 471, 474, 481, 483], "copyright": [458, 462, 463, 469, 474], "copysign": [0, 3, 8], "copyto": [3, 8, 335], "core": [2, 454, 461, 462, 471, 483, 484], "corner": [100, 101, 483], "corpor": [462, 463, 469], "corrcoef": [3, 8], "correct": [20, 58, 412, 470], "correctli": [14, 16, 17, 19, 27, 29, 30, 41, 164, 183, 184, 191, 192, 195, 196, 197, 198, 199, 200, 201, 202, 334, 338, 342, 414, 436, 483], "correl": [8, 452], "correspond": [8, 54, 58, 75, 95, 96, 100, 101, 104, 106, 109, 126, 137, 146, 147, 151, 159, 180, 191, 192, 199, 201, 304, 332, 334, 342, 395, 399, 400, 401, 464, 465, 473, 476, 482, 483], "correspondingli": [408, 471], "cosh": [3, 8], "cosin": [22, 23, 47, 64, 65, 129, 130], "cost": [83, 470], "costli": 83, "could": 482, "count": [14, 19, 41, 43, 66, 113, 126, 131, 202, 286, 338, 414, 434, 443, 452, 467], "count_nonzero": [0, 3, 8], "counterclockwis": [18, 396], "cours": 472, "cov": [0, 3, 8], "covari": 67, "cover": [3, 8, 384, 458], "coverag": [454, 478, 480, 481], "cp": 470, "cpu": [1, 2, 3, 8, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 97, 102, 110, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 204, 205, 206, 210, 211, 212, 213, 214, 216, 217, 219, 220, 221, 222, 223, 224, 225, 226, 229, 230, 231, 232, 233, 234, 235, 236, 238, 239, 240, 241, 242, 243, 244, 246, 247, 248, 250, 251, 252, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 267, 268, 269, 270, 271, 272, 277, 278, 280, 281, 282, 284, 285, 286, 289, 292, 293, 294, 297, 298, 299, 300, 301, 303, 304, 306, 309, 310, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 454, 459, 461, 468, 471, 472, 480, 482, 484], "cputsc": 475, "creat": [12, 13, 22, 23, 24, 25, 26, 27, 28, 34, 44, 45, 46, 52, 53, 54, 59, 60, 63, 64, 65, 70, 71, 78, 83, 86, 87, 88, 90, 93, 116, 117, 118, 119, 120, 121, 122, 125, 127, 128, 134, 139, 143, 144, 145, 153, 154, 155, 156, 157, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 182, 186, 187, 188, 190, 273, 279, 283, 325, 326, 328, 336, 337, 340, 343, 344, 367, 389, 390, 393, 394, 397, 402, 403, 404, 405, 409, 410, 413, 415, 418, 419, 431, 432, 458, 464, 469, 470, 473, 482, 483], "create_subarrai": 470, "creation": [83, 283, 424, 443, 450, 452], "critic": [470, 483], "crop": [94, 95, 96, 98, 99, 100, 101, 103, 104, 106, 107, 109], "cross": [3, 8, 151], "crucial": 483, "csingl": [3, 8], "csv": [454, 471, 479], "ct": 94, "cube": 52, "cubic": 83, "cubla": 454, "cuda": [454, 459, 461, 470, 473, 483], "cumbersom": 483, "cumprod": [0, 3, 8, 69, 193, 194, 476], "cumsum": [0, 3, 8], "cumul": [68, 69, 193, 194, 462, 483], "cumulative_prod": [3, 8], "cumulative_sum": [3, 8], "cunumer": 471, "cupi": 470, "cupynumer": [0, 3, 7, 443, 448, 452, 454, 459, 461, 462, 463, 465, 467, 468, 469, 470, 473, 475, 476, 477, 479, 480, 481, 484], "cupynumeric_doctor": [454, 482], "cupynumeric_doctor_filenam": 454, "cupynumeric_doctor_format": 454, "cupynumeric_doctor_traceback": 454, "cupynumeric_fast_math": 454, "cupynumeric_force_thunk": 454, "cupynumeric_matmul_cache_s": 454, "cupynumeric_min_cpu_chunk": 454, "cupynumeric_min_gpu_chunk": 454, "cupynumeric_min_omp_chunk": 454, "cupynumeric_numpy_compat": [191, 192, 195, 198, 454], "cupynumeric_preload_cudalib": 454, "cupynumeric_report_coverag": [454, 479, 480], "cupynumeric_report_dump_callstack": [454, 479], "cupynumeric_report_dump_csv": [454, 479], "cupynumeric_root": 459, "cupynumeric_warn": 454, "curand": 376, "curiou": 464, "current": [6, 31, 32, 61, 158, 165, 167, 169, 207, 283, 323, 333, 340, 391, 406, 424, 433, 454, 462, 471, 475, 476, 479, 482, 483, 484], "curv": [363, 464], "cusolv": 454, "cusolvermp": 166, "custom": [450, 459, 470], "cycl": 151, "d": [2, 40, 41, 43, 56, 57, 61, 67, 68, 69, 72, 74, 75, 79, 81, 92, 105, 108, 110, 114, 115, 133, 137, 138, 151, 163, 164, 181, 185, 193, 194, 195, 202, 272, 284, 285, 304, 320, 332, 335, 387, 392, 398, 399, 408, 414, 421, 422, 433, 434, 437, 439, 458, 459, 462, 463, 483], "d0": [367, 369], "d1": [367, 369, 462], "d2": 462, "d_1": 483, "d_2": 483, "damag": 474, "data": [16, 17, 21, 33, 34, 37, 41, 58, 62, 67, 81, 82, 84, 85, 92, 94, 95, 96, 98, 99, 100, 101, 103, 104, 105, 106, 107, 108, 109, 111, 123, 124, 131, 133, 135, 137, 149, 159, 160, 168, 169, 180, 181, 183, 184, 196, 197, 199, 200, 201, 202, 207, 254, 265, 273, 279, 283, 289, 291, 303, 306, 315, 316, 317, 320, 323, 329, 330, 334, 335, 338, 339, 340, 342, 387, 392, 397, 398, 411, 414, 417, 422, 424, 425, 436, 439, 441, 442, 443, 452, 467, 468, 470, 474, 477, 482, 483], "data_magnitude_squar": 467, "dataset": [131, 483], "datatyp": [111, 470, 481], "date": 483, "datetim": [462, 463, 469], "datetime64": [3, 8], "datetime_as_str": [3, 8], "ddof": [67, 322, 436], "de": 363, "deadlock": 470, "deal": [474, 483], "dealloc": 283, "deb": 483, "debian": 474, "debug": [461, 470], "decai": 356, "decid": 454, "decim": 397, "decompos": [122, 463, 470], "decomposit": [158, 167, 452, 466, 470], "decreas": [77, 462, 468, 471], "decreasingli": [100, 101], "dedic": 471, "deep": [48, 212, 317, 470], "deepcopi": 212, "def": [462, 463, 465, 467, 468, 469, 470, 482, 483], "default": [2, 12, 13, 14, 16, 17, 18, 19, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 34, 37, 41, 44, 45, 46, 52, 53, 54, 57, 58, 59, 60, 61, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 75, 76, 77, 78, 82, 83, 84, 86, 87, 88, 90, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 113, 116, 117, 118, 119, 120, 121, 122, 123, 125, 126, 127, 128, 131, 134, 135, 137, 139, 143, 144, 145, 153, 154, 155, 156, 157, 161, 164, 167, 168, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 181, 182, 183, 184, 185, 186, 187, 188, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 254, 265, 285, 286, 315, 316, 325, 326, 328, 329, 332, 333, 334, 336, 337, 338, 342, 343, 344, 345, 346, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 368, 371, 372, 373, 374, 375, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 389, 390, 391, 393, 394, 395, 396, 397, 400, 402, 403, 404, 405, 406, 408, 409, 410, 413, 414, 416, 418, 419, 422, 423, 424, 425, 426, 429, 431, 432, 433, 434, 436, 438, 441, 454, 461, 465, 467, 476, 483, 484], "default_rng": [0, 2, 3, 8, 467], "defer": [4, 454, 462, 463, 469, 471, 476], "defin": [54, 85, 124, 131, 164, 199, 201, 289, 330, 334, 342, 381, 396, 424, 442, 458, 459, 462, 463, 465, 467, 468, 469, 482, 483], "definit": [61, 99, 101, 158, 463, 483], "deg": [18, 161], "deg2rad": [0, 3, 8, 344], "degre": [3, 8, 18, 70, 343, 344, 348, 351, 361, 362, 380, 396, 436, 483], "delai": [482, 483], "delet": [3, 8], "delta": [436, 467], "demand": 470, "democrat": 483, "demonstr": [480, 483], "denomin": [351, 362], "denot": 8, "dens": [137, 464], "densiti": [131, 350, 363], "dep": 459, "depend": [43, 72, 164, 166, 168, 181, 200, 371, 400, 440, 460, 471, 482, 483], "depict": 483, "deprec": 371, "depth": [48, 80, 81, 317], "deriv": [126, 358, 363, 462, 464, 465, 474, 482, 483], "derivative_exact": 464, "descend": 167, "describ": [164, 306, 350, 363, 464, 471, 482], "descript": [99, 101, 131, 265, 461], "descriptor": 323, "design": [47, 352, 379, 481, 483], "desir": [34, 51, 76, 84, 123, 183, 195, 196, 198, 202, 329, 368, 421, 436, 441, 473], "despit": 318, "dest": 470, "destin": [58, 189, 340, 412], "det": [3, 8], "detail": [16, 17, 68, 69, 72, 74, 94, 99, 104, 105, 107, 108, 169, 185, 193, 194, 195, 198, 200, 202, 262, 273, 311, 338, 414, 426, 427, 428, 429, 430, 433, 450, 458, 461, 470, 471, 473, 482, 483], "detect": [466, 473], "detector": 465, "determin": [34, 61, 68, 69, 75, 111, 166, 193, 194, 200, 306, 400, 422, 435, 465, 467, 468, 470, 483], "determinist": [467, 476], "develop": [459, 470, 471, 472, 474, 483], "developercertif": 458, "deviat": [358, 363, 482], "devic": [470, 483], "devin": 474, "df": [348, 361, 380], "dfden": [351, 362], "dfnum": [351, 362], "dft": [94, 99, 107], "dgx": 472, "diag": [0, 3, 8, 464, 476], "diag_indic": [0, 3, 8, 74], "diag_indices_from": [0, 3, 8], "diagflat": [3, 8], "diagnos": 482, "diagon": [0, 3, 8, 72, 73, 74, 92, 110, 135, 158, 319, 422, 424, 425, 426, 427, 428, 429, 430, 464], "diagram": [459, 483], "dictionari": 283, "did": 468, "diff": [0, 3, 8], "differ": [1, 15, 29, 30, 36, 68, 69, 76, 94, 99, 102, 104, 105, 107, 108, 114, 115, 116, 126, 164, 181, 185, 193, 194, 207, 279, 316, 340, 341, 356, 396, 417, 437, 452, 458, 459, 461, 466, 468, 469, 470, 477, 481, 482, 483], "differenc": 76, "differenti": [467, 483], "difficult": [470, 483], "diffus": 483, "digit": [0, 3, 8], "dim": 283, "dimens": [6, 14, 16, 17, 19, 29, 30, 34, 38, 39, 40, 41, 48, 54, 56, 57, 58, 61, 73, 75, 76, 80, 81, 89, 110, 126, 132, 133, 137, 138, 146, 147, 151, 159, 160, 164, 165, 167, 181, 183, 184, 185, 191, 192, 195, 196, 197, 198, 199, 200, 201, 202, 283, 284, 285, 296, 307, 308, 311, 320, 324, 327, 332, 334, 338, 340, 342, 367, 369, 392, 395, 396, 398, 401, 408, 411, 412, 414, 417, 420, 421, 422, 423, 426, 427, 429, 430, 433, 434, 435, 436, 438, 439, 452, 466, 467, 470, 476], "dimension": [7, 38, 43, 48, 61, 67, 74, 77, 82, 94, 95, 96, 99, 100, 101, 104, 106, 107, 108, 109, 110, 126, 161, 185, 283, 324, 331, 411, 421, 443, 465, 467, 469, 476, 482, 483], "dimenson": 185, "direct": [61, 76, 94, 95, 96, 98, 99, 100, 101, 103, 104, 105, 106, 107, 108, 109, 114, 115, 283, 396, 465, 474, 483], "directli": [61, 76, 316, 381, 458, 473, 475, 479], "directori": [459, 483], "dirichlet": [3, 8, 345], "disabl": [82, 416, 483], "disclaim": 474, "discontinu": [199, 201, 334, 342], "discourag": 477, "discret": [61, 76, 94, 95, 96, 99, 100, 101, 104, 106, 107, 109, 368, 371, 386, 443, 452, 464], "discuss": [458, 471], "dispers": 383, "displai": [461, 471, 483], "distanc": [21, 126, 384, 467], "distance_sum": 467, "distribu": 483, "distribut": [2, 276, 345, 346, 348, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 371, 372, 373, 374, 375, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 436, 452, 454, 458, 462, 463, 469, 470, 471, 472, 474, 476, 483], "disturb": 363, "dive": 470, "divid": [3, 8, 36, 81, 133, 398, 408, 439, 467, 470], "divis": [78, 118, 121, 187, 390, 408, 431], "divisor": [125, 436], "divmod": [3, 8, 213], "dn": [367, 369], "do": [61, 77, 180, 184, 197, 289, 316, 459, 467, 474, 476, 477, 482, 483, 484], "doc": [12, 13, 22, 23, 24, 25, 26, 27, 28, 44, 45, 46, 52, 53, 55, 59, 60, 63, 64, 65, 70, 71, 78, 86, 87, 88, 90, 93, 116, 117, 118, 119, 120, 121, 122, 125, 127, 128, 134, 139, 143, 144, 145, 153, 154, 155, 156, 157, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 182, 186, 187, 188, 190, 325, 326, 328, 336, 337, 343, 344, 389, 390, 393, 394, 402, 403, 404, 405, 409, 410, 413, 418, 419, 431, 432, 465, 471, 484], "docstr": 482, "doctor": [443, 482], "doctor_filenam": 443, "doctor_format": 443, "doctorformat": 454, "document": [36, 72, 80, 132, 259, 260, 261, 262, 263, 264, 267, 268, 269, 270, 271, 277, 278, 292, 293, 294, 297, 298, 299, 300, 301, 303, 309, 310, 312, 313, 314, 319, 321, 322, 428, 438, 458, 471, 473, 474, 482, 483], "doe": [14, 16, 17, 19, 21, 36, 77, 110, 159, 160, 165, 167, 169, 183, 193, 194, 195, 198, 200, 265, 283, 289, 295, 320, 323, 338, 349, 408, 414, 416, 437, 458, 465, 476, 479, 482, 483], "doesn": [77, 113, 114, 115, 339, 476, 482], "dollar": 483, "domain": [42, 459, 464, 470], "don": [283, 461, 467, 482, 483], "done": [82, 181, 265, 286, 306, 332, 434, 482], "dot": [0, 3, 8, 163, 181, 420, 437, 463, 467, 468, 479, 483], "dot_product": 483, "doubl": [3, 8, 41, 356, 470], "down": [115, 482, 483], "download": [459, 473, 483], "dr": 470, "draft": 458, "draw": [345, 346, 348, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 374, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386], "drawn": [2, 345, 346, 348, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 368, 371, 372, 373, 374, 375, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 400], "driver": [461, 475, 483], "drop": [463, 471, 472, 483], "dry": 461, "dsplit": [0, 3, 8, 81], "dstack": [0, 3, 8], "dt": [345, 462], "dtype": [3, 4, 8, 12, 13, 14, 16, 17, 18, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 34, 35, 37, 41, 44, 45, 46, 52, 53, 54, 58, 59, 60, 63, 64, 65, 67, 68, 69, 70, 71, 76, 77, 78, 79, 82, 84, 85, 86, 87, 88, 90, 92, 93, 111, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 127, 128, 134, 135, 137, 138, 139, 143, 144, 145, 153, 154, 155, 156, 157, 159, 160, 163, 168, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 181, 182, 183, 186, 187, 188, 190, 191, 192, 193, 194, 195, 196, 200, 202, 207, 254, 265, 274, 275, 287, 293, 299, 305, 311, 312, 319, 322, 323, 325, 326, 328, 329, 330, 331, 333, 336, 337, 338, 343, 344, 368, 373, 375, 389, 390, 393, 394, 402, 403, 404, 405, 406, 409, 410, 413, 414, 416, 418, 419, 420, 422, 424, 431, 432, 436, 437, 441, 442, 463, 467, 480], "dtypelik": [4, 58, 92, 123, 124, 135, 137, 168, 305, 323, 329, 330, 373, 375, 424, 442], "due": [382, 476], "dump": [0, 8, 454], "dump_data": 477, "duplic": [340, 476, 483], "dure": [454, 459, 471, 483], "dx": 126, "dy": 126, "dynam": 470, "dz": 126, "e": [14, 19, 43, 54, 75, 77, 79, 95, 98, 99, 100, 101, 104, 106, 126, 137, 138, 166, 181, 308, 316, 323, 345, 346, 348, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 368, 371, 372, 373, 374, 375, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 420, 422, 437, 454, 458, 459, 462, 476, 480, 482, 483, 484], "each": [2, 38, 39, 40, 41, 43, 49, 50, 54, 57, 67, 73, 77, 83, 95, 96, 100, 101, 106, 109, 114, 115, 126, 131, 151, 159, 160, 161, 189, 311, 316, 327, 340, 341, 346, 348, 355, 360, 363, 391, 395, 412, 417, 421, 426, 427, 429, 430, 433, 434, 435, 459, 464, 465, 467, 468, 470, 471, 482, 483], "eager": [4, 454, 461, 471, 483], "eagerli": 468, "earli": 483, "earlier": 467, "eas": [370, 483], "easi": [458, 483], "easier": [273, 416, 483], "easiest": [458, 459], "east": [469, 483], "economist": 483, "ed": [350, 363, 465], "edg": [55, 77, 131, 466], "edge_ord": 126, "edgecolor": 467, "ediff1d": [3, 8], "edit": [459, 483], "effect": [83, 185, 320, 376, 434, 469, 483], "effici": [94, 107, 462, 470, 483], "effort": [458, 470], "effortlessli": 470, "eig": [0, 3, 8], "eigenvalu": [159, 160], "eigenvector": 159, "eigh": [3, 8], "eight": [164, 434], "eigval": [0, 3, 8], "eigvalsh": [3, 8], "einstein": 82, "einsum": [0, 8, 83, 461], "einsum_path": [0, 3, 8, 82], "either": [35, 41, 61, 79, 126, 164, 181, 200, 207, 304, 399, 434, 462, 463, 464, 469, 471, 483], "elaps": [461, 462, 463, 469, 473, 477, 483], "elapsed_millisec": 477, "elapsed_tim": 483, "element": [12, 13, 14, 15, 16, 17, 19, 21, 22, 23, 24, 25, 26, 27, 28, 33, 35, 41, 43, 44, 45, 46, 48, 49, 51, 52, 53, 54, 55, 59, 60, 61, 63, 64, 65, 67, 68, 69, 75, 76, 78, 86, 87, 90, 91, 92, 93, 95, 100, 106, 109, 112, 113, 114, 115, 116, 117, 119, 120, 121, 122, 127, 128, 131, 135, 136, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 150, 154, 156, 157, 158, 162, 170, 171, 172, 176, 177, 178, 179, 181, 182, 183, 184, 185, 186, 187, 188, 190, 193, 194, 195, 196, 197, 198, 200, 202, 254, 259, 260, 265, 270, 271, 279, 282, 283, 285, 286, 289, 291, 293, 295, 297, 299, 300, 304, 308, 311, 312, 314, 317, 321, 322, 325, 326, 327, 328, 332, 335, 336, 337, 338, 339, 341, 387, 388, 389, 390, 391, 392, 394, 395, 396, 399, 400, 401, 402, 403, 404, 405, 409, 410, 413, 414, 416, 418, 419, 420, 422, 425, 428, 431, 432, 433, 434, 435, 436, 440, 450, 452, 464, 467, 483], "elementwis": 452, "elimin": 470, "els": [468, 482, 483], "elsewher": [12, 13, 22, 23, 24, 25, 26, 27, 28, 44, 45, 46, 52, 53, 59, 60, 63, 64, 65, 70, 71, 78, 86, 87, 88, 90, 92, 93, 116, 117, 118, 119, 120, 121, 122, 125, 127, 128, 134, 139, 143, 144, 145, 153, 154, 155, 156, 157, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 182, 186, 187, 188, 190, 325, 326, 328, 336, 337, 343, 344, 350, 389, 390, 393, 394, 402, 403, 404, 405, 409, 410, 413, 418, 419, 424, 431, 432, 440], "email": 458, "emerg": 483, "emploi": 458, "empti": [0, 3, 8, 16, 17, 42, 47, 48, 129, 130, 152, 191, 192, 193, 194, 195, 198, 200, 202, 316, 335, 408], "empty_lik": [0, 3, 8], "en": [350, 458], "enabl": [454, 459, 461, 470, 471, 482, 483], "encapsul": 6, "encount": [193, 194, 195, 198, 400, 458, 471, 482, 483], "encumbr": 458, "end": [20, 21, 42, 75, 77, 83, 168, 332, 434, 458, 464, 468, 469, 477, 483], "end_tim": 483, "endian": 316, "endors": 474, "endpoint": [168, 464], "energi": 483, "enhanc": [458, 470, 483], "enough": [161, 459, 477, 482], "ensur": [424, 458, 470, 477, 482, 483], "enter": 461, "entir": [276, 434, 483], "entri": [57, 84, 91, 110, 113, 114, 115, 283, 286, 316, 339, 340, 408, 411], "entropi": [1, 349], "env": [454, 459], "environ": [191, 192, 195, 198, 454, 459, 470, 471, 473, 475, 479, 482, 483], "epyc": 483, "eq": 462, "eqn": 464, "eqnarrai": 483, "equal": [0, 3, 8, 12, 13, 15, 22, 23, 24, 25, 26, 27, 28, 35, 36, 41, 42, 43, 44, 45, 46, 48, 52, 53, 59, 60, 63, 64, 65, 70, 71, 75, 78, 80, 87, 88, 90, 92, 93, 116, 117, 118, 119, 120, 121, 122, 125, 126, 127, 128, 131, 134, 139, 140, 142, 143, 144, 145, 149, 153, 154, 155, 156, 157, 168, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 182, 186, 187, 188, 190, 308, 325, 326, 328, 336, 337, 343, 344, 346, 352, 355, 360, 374, 382, 384, 389, 390, 393, 394, 402, 403, 404, 405, 408, 409, 410, 413, 418, 419, 424, 426, 429, 431, 432], "equal_nan": [15, 35, 140], "equat": [15, 140, 166, 382, 452, 464, 468, 470, 483], "equiv": [58, 82, 181, 265], "equival": [21, 41, 57, 77, 79, 80, 81, 83, 112, 118, 132, 133, 140, 151, 211, 259, 260, 261, 262, 263, 264, 267, 268, 269, 270, 271, 277, 278, 292, 293, 294, 297, 298, 299, 300, 301, 303, 307, 309, 310, 312, 313, 314, 316, 319, 320, 321, 322, 323, 324, 398, 416, 438, 439, 482], "erf": 462, "error": [184, 197, 339, 408, 411, 416, 464, 467, 470, 476, 483], "errstat": [3, 8], "especi": 482, "essenti": [482, 483], "estim": [61, 67, 199, 201, 334, 342, 483], "etc": [34, 95, 96, 100, 101, 106, 109, 273, 283, 454, 470, 476, 482, 484], "european": 462, "evalu": [14, 19, 57, 82, 83, 142, 149, 163, 185, 259, 260, 400, 476, 482], "even": [67, 97, 99, 102, 107, 142, 149, 159, 160, 283, 458, 461, 474], "evenli": [21, 168, 397], "event": [365, 474], "everi": [61, 106, 458, 462, 467, 482], "every_nit": 482, "everyon": 458, "evid": 483, "evolv": 458, "exact": [79, 138, 166, 420, 437, 464], "exactli": [318, 458, 463, 468, 479, 483], "examin": 67, "exampl": [40, 55, 68, 69, 76, 77, 193, 194, 311, 320, 353, 363, 408, 412, 458, 459, 461, 464, 465, 467, 468, 470, 471, 472, 473, 475, 477, 480, 481, 482, 484], "exce": [408, 434, 454], "exceed": 470, "except": [14, 16, 17, 19, 21, 34, 42, 54, 58, 76, 79, 92, 106, 133, 183, 195, 198, 200, 283, 289, 306, 338, 387, 391, 414, 417, 420, 462, 463, 469, 474], "exchang": 470, "exclud": [20, 21, 168, 382, 477], "exclus": 368, "execut": [454, 459, 461, 462, 463, 468, 469, 477, 479, 480, 481, 482, 483], "exemplari": 474, "exercis": [458, 483], "exhibit": 315, "exist": [58, 89, 169, 452, 459, 473, 480, 483], "exit": 461, "exp": [0, 3, 8, 90, 161, 350, 462], "exp2": [0, 3, 8], "exp_rt": 462, "expand": [76, 89], "expand_dim": [0, 3, 8], "expans": 462, "expect": [14, 16, 17, 19, 68, 69, 104, 138, 180, 183, 184, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 331, 334, 338, 342, 365, 397, 414, 420, 436, 437, 458, 471], "expens": 316, "experi": [353, 483], "expertis": 470, "expir": [462, 483], "explain": [96, 101, 106, 109], "explan": [69, 193, 194, 311, 458], "explicit": [82, 161, 470, 482, 483], "explicitli": [131, 137, 169, 458, 464, 471, 483], "explor": 83, "expm1": [0, 3, 8], "expon": [122, 162, 366, 452], "exponenti": [0, 3, 8, 83, 87, 161, 174, 175, 356, 378], "exponential_distribut": 350, "expos": [2, 34, 283, 306], "expr": [82, 83], "express": [82, 83, 185, 462, 463, 464, 469, 474, 476], "extend": [464, 470, 476], "extra": 483, "extract": [0, 3, 8, 57, 72, 335, 416], "extrema": 452, "ey": [0, 3, 8, 463, 480], "f": [0, 3, 8, 34, 114, 126, 164, 199, 201, 265, 283, 285, 315, 334, 342, 345, 350, 353, 362, 387, 392, 435, 462, 463, 464, 468, 469, 483], "f_": [464, 468], "f_contigu": 283, "f_interior": 464, "fa": 283, "fab": [0, 3, 8], "facilit": 480, "factor": [94, 95, 96, 98, 99, 100, 101, 103, 104, 105, 106, 107, 108, 109, 158, 165, 463, 483], "fail": [158, 165, 471, 482], "failur": [353, 360, 461], "fall": [31, 77, 150, 333, 454, 462, 468, 471, 479], "fallback": 476, "fals": [1, 12, 13, 14, 15, 16, 17, 18, 19, 22, 23, 24, 25, 26, 27, 28, 29, 30, 34, 35, 36, 41, 44, 45, 46, 49, 51, 52, 53, 57, 59, 60, 63, 64, 65, 67, 70, 71, 76, 77, 78, 82, 83, 86, 87, 88, 90, 93, 110, 116, 117, 118, 119, 120, 121, 122, 125, 127, 128, 131, 134, 137, 139, 140, 143, 144, 145, 146, 147, 149, 150, 153, 154, 155, 156, 157, 164, 167, 168, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 182, 183, 184, 185, 186, 187, 188, 190, 191, 192, 195, 196, 197, 198, 199, 200, 201, 202, 259, 260, 265, 283, 292, 293, 294, 299, 312, 322, 325, 326, 328, 334, 336, 337, 338, 342, 343, 344, 389, 390, 393, 394, 400, 402, 403, 404, 405, 409, 410, 413, 414, 418, 419, 431, 432, 433, 436, 454, 464, 468], "familiar": [472, 483], "fan": [199, 201, 334, 342], "fanci": 416, "farrai": 283, "fashion": 82, "fast": [94, 95, 96, 100, 101, 106, 107, 109], "fast_math": 443, "faster": [61, 77, 483], "fastest": [163, 387, 392], "fatter": 356, "fbmem": [461, 483], "featur": [458, 461, 483], "feedback": 458, "feel": 458, "fetch": 482, "few": [477, 482], "fewer": 471, "fft": [0, 3, 8, 61, 443, 452], "fft2": [0, 3, 8, 100], "fftfreq": [3, 8], "fftn": [0, 3, 8, 94, 101], "fftshift": [0, 3, 8, 102], "fid": 316, "fidel": 470, "field": [185, 289, 434], "fig": [465, 483], "figsiz": [465, 483], "file": [169, 280, 311, 316, 452, 454, 458, 459, 461, 462, 463, 469, 474, 479, 483], "filenam": [316, 454], "fileno": 316, "fill": [0, 2, 8, 110, 123, 124, 185, 329, 364, 369, 424, 441], "fill_diagon": [0, 3, 8], "fill_valu": [123, 124], "final": [106, 109, 470, 472, 483], "find": [33, 304, 321, 399, 433, 452, 467, 468, 471, 473, 482, 483], "find_centroid": 467, "find_cupynumeric_cpp": 459, "finfo": [3, 8], "finish": [461, 462, 463, 469], "finit": [140, 143, 466], "first": [14, 19, 41, 42, 47, 49, 54, 56, 58, 61, 75, 76, 79, 81, 83, 100, 101, 113, 116, 126, 131, 133, 163, 181, 184, 185, 197, 199, 201, 202, 286, 304, 316, 331, 334, 335, 337, 338, 339, 342, 363, 384, 387, 392, 395, 396, 398, 399, 400, 407, 412, 414, 415, 417, 420, 422, 433, 437, 438, 439, 458, 459, 464, 469, 482, 483], "first_cond": 482, "fisher": [351, 362, 483], "fit": [391, 474], "five": 471, "fix": [3, 8, 291, 308, 365, 462], "flag": [161, 306, 454, 459], "flat": [285, 289, 301, 341, 391, 435, 476], "flatit": [3, 8, 284], "flatnonzero": [0, 3, 8], "flatten": [0, 3, 8, 16, 17, 20, 29, 30, 31, 32, 57, 58, 66, 68, 69, 110, 112, 131, 183, 184, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 284, 301, 331, 332, 333, 334, 339, 340, 342, 387, 391, 395, 406, 416, 417, 433, 434, 435, 436, 437], "flexibl": [3, 8, 82, 291], "flip": [0, 3, 8, 114, 115, 353, 396, 476, 482], "fliplr": [0, 3, 8, 396], "flipud": [0, 3, 8, 396], "float": [14, 15, 16, 17, 19, 21, 43, 55, 68, 69, 79, 82, 84, 116, 124, 131, 135, 136, 140, 152, 162, 164, 168, 181, 183, 184, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 215, 292, 294, 299, 312, 326, 334, 338, 342, 345, 346, 348, 350, 351, 352, 353, 354, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 369, 370, 372, 373, 374, 375, 378, 379, 380, 381, 382, 383, 384, 385, 386, 388, 397, 399, 414, 420, 424, 436, 441, 450, 452, 454, 476], "float128": [3, 8, 476], "float16": [3, 8, 116], "float32": [3, 8, 68, 82, 116, 181, 265, 323, 480], "float64": [3, 4, 8, 18, 41, 67, 82, 84, 92, 116, 181, 183, 184, 196, 197, 199, 201, 265, 329, 334, 342, 373, 375, 436, 441, 463, 476], "float_pow": [0, 3, 8], "flood": 470, "floor": [0, 3, 8], "floor_divid": [0, 3, 8], "flop": 463, "flow": 470, "fluid": 470, "fmax": [3, 8, 195], "fmin": [3, 8], "fmod": [0, 3, 8], "fnc": 283, "focu": [470, 483], "follow": [15, 18, 34, 41, 54, 61, 77, 104, 111, 140, 164, 181, 185, 199, 201, 254, 334, 342, 454, 459, 464, 465, 467, 468, 470, 471, 473, 474, 475, 482, 483], "forc": [34, 82, 181, 265, 283, 454, 473], "force_thunk": [4, 443], "forcebuild": 1, "foremost": 483, "forg": [459, 473, 483], "fork": 458, "form": [37, 47, 56, 67, 75, 81, 82, 104, 129, 130, 133, 151, 152, 398, 439, 464, 474, 482, 483], "format": [316, 454, 460, 471, 483], "format_float_posit": [3, 8], "format_float_scientif": [3, 8], "former": [340, 417], "formula": [462, 483], "forset": 307, "fortran": [34, 265, 283, 285, 315, 387, 392, 435, 459], "fortun": 458, "forum": 471, "forumula": 483, "forward": [94, 95, 96, 98, 99, 100, 101, 103, 104, 105, 106, 107, 108, 109, 126, 370], "found": [43, 304, 311, 399, 470, 483], "foundat": [458, 471], "four": [306, 461, 483], "fourier": [61, 94, 95, 96, 99, 100, 101, 104, 106, 107, 109, 443, 452], "frac": [345, 350, 462, 468], "frac12": 462, "fraction": 188, "frame": [458, 479], "framebuff": [461, 471, 483], "framework": [458, 472], "free": [458, 462, 470, 471, 474, 483], "freed": 470, "freedom": [348, 351, 361, 362, 380, 436], "frequenc": [42, 67, 97, 99, 100, 101, 104, 386, 482], "frequent": 472, "fresh": [1, 349], "freshli": [12, 13, 22, 23, 24, 25, 26, 27, 28, 44, 45, 46, 52, 53, 59, 60, 63, 64, 65, 70, 71, 78, 86, 87, 88, 90, 93, 116, 117, 118, 119, 120, 121, 122, 125, 127, 128, 134, 139, 143, 144, 145, 146, 147, 153, 154, 155, 156, 157, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 182, 186, 187, 188, 190, 325, 326, 328, 336, 337, 343, 344, 389, 390, 393, 394, 402, 403, 404, 405, 409, 410, 413, 418, 419, 431, 432], "frexp": [0, 3, 8], "fro": 164, "frobeniu": 164, "frohn": 474, "from": [1, 2, 14, 18, 19, 21, 29, 30, 37, 41, 48, 54, 57, 61, 68, 69, 70, 71, 75, 91, 99, 109, 111, 113, 114, 115, 116, 126, 138, 151, 165, 168, 169, 181, 185, 193, 194, 202, 207, 266, 267, 283, 286, 310, 314, 331, 337, 338, 341, 343, 344, 345, 346, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 371, 372, 373, 374, 375, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 392, 396, 400, 411, 414, 416, 417, 420, 422, 433, 434, 437, 440, 452, 458, 460, 462, 463, 464, 465, 467, 468, 469, 470, 472, 474, 476, 477, 482, 483], "frombuff": 3, "fromfil": [3, 316], "fromfunct": [3, 8], "fromit": 3, "frompyfunc": 3, "fromregex": [3, 8], "fromstr": 3, "front": [137, 454], "fulfil": [381, 454], "full": [0, 3, 8, 61, 74, 124, 166, 259, 260, 261, 263, 264, 267, 268, 269, 270, 271, 277, 278, 292, 293, 294, 297, 298, 299, 300, 301, 303, 306, 309, 310, 312, 313, 314, 319, 321, 322, 332, 427, 430, 454, 458, 461, 470, 479, 483], "full_lik": [0, 3, 8], "full_matric": 167, "fulli": [184, 185, 197], "func": 462, "function": [2, 8, 18, 21, 36, 72, 81, 94, 95, 96, 97, 99, 100, 101, 102, 104, 106, 107, 109, 110, 116, 118, 126, 131, 133, 150, 151, 152, 163, 164, 180, 185, 199, 201, 259, 260, 261, 262, 263, 264, 267, 268, 269, 270, 271, 277, 278, 283, 289, 292, 293, 294, 297, 298, 299, 300, 301, 303, 306, 307, 309, 310, 312, 313, 314, 316, 317, 319, 320, 321, 322, 334, 340, 342, 345, 349, 350, 353, 363, 366, 371, 376, 398, 416, 417, 421, 437, 439, 443, 450, 452, 462, 463, 464, 468, 469, 470, 471, 476, 479, 480, 483], "function_nam": 479, "function_valu": 464, "fundament": 483, "funtion": 480, "furnish": 474, "further": [82, 199, 201, 308, 334, 342, 428, 458, 470], "furthermor": [49, 51, 185], "futur": 462, "fweight": 67, "g": [14, 19, 79, 81, 133, 138, 164, 181, 316, 323, 345, 346, 348, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 368, 371, 372, 373, 374, 375, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 398, 420, 437, 439, 458, 459, 469, 476, 480, 482, 483, 484], "gamma": [0, 3, 8, 345, 379], "gasnet": 483, "gather": 483, "gauss": 363, "gaussian": [356, 363, 369, 384], "gb": 483, "gcd": [0, 3, 8], "gemm": 467, "gener": [1, 3, 8, 21, 41, 42, 81, 99, 133, 168, 283, 349, 361, 364, 369, 374, 376, 382, 398, 439, 452, 459, 464, 467, 469, 471, 476, 477, 479, 481, 483], "genfromtxt": [3, 8], "geometr": [0, 3, 8, 350], "geomspac": [3, 8], "get": [98, 104, 106, 110, 168, 272, 311, 380, 459, 461, 462, 463, 464, 467, 468, 469, 471, 482], "get_bit_gener": [3, 8], "get_includ": [3, 8], "get_printopt": [3, 8], "get_rank": 470, "get_siz": 470, "get_stat": [3, 8], "getbufs": [3, 8], "getdevicecount": 470, "geterr": [3, 8], "geterrcal": [3, 8], "getfield": [0, 8], "getter": 307, "git": 458, "github": [458, 470, 483], "give": [43, 82, 181, 185, 320, 341, 392, 401, 433, 458, 471], "given": [14, 15, 16, 17, 19, 20, 21, 31, 34, 35, 41, 48, 51, 54, 55, 56, 57, 62, 66, 67, 68, 69, 75, 76, 79, 81, 83, 84, 85, 94, 95, 96, 98, 99, 100, 101, 103, 104, 106, 107, 109, 110, 113, 123, 124, 126, 131, 133, 134, 138, 140, 164, 168, 180, 181, 184, 185, 193, 194, 197, 198, 199, 200, 201, 202, 207, 261, 262, 265, 268, 269, 283, 286, 292, 293, 294, 299, 300, 304, 312, 320, 322, 329, 330, 331, 334, 338, 339, 342, 345, 346, 348, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 371, 372, 373, 374, 375, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 391, 395, 396, 397, 398, 399, 408, 414, 416, 420, 421, 422, 423, 424, 433, 437, 439, 441, 442, 458, 470, 482, 483], "global": [349, 470], "gmail": 474, "gninja": 459, "gnx": 470, "gny": 470, "go": [417, 483], "goal": 483, "golub": 164, "good": [180, 316, 355, 472, 474], "gop": 463, "govern": [462, 463, 469, 483], "gpu": [1, 2, 3, 8, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 204, 205, 206, 210, 211, 212, 213, 214, 216, 217, 219, 220, 221, 222, 223, 224, 225, 226, 229, 230, 231, 232, 233, 234, 235, 236, 238, 239, 240, 241, 242, 243, 244, 246, 247, 248, 250, 251, 252, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 267, 268, 269, 270, 271, 272, 277, 278, 281, 282, 285, 286, 289, 292, 293, 294, 297, 298, 299, 300, 301, 303, 304, 306, 309, 310, 312, 313, 314, 315, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 454, 461, 468, 470, 472, 482, 484], "grad_i": [465, 483], "grad_x": [465, 483], "gradient": [0, 3, 8, 465], "grai": [465, 467, 483], "grant": 474, "granular": [471, 477], "grasmair": 468, "grate": 458, "grayscal": [465, 483], "greater": [0, 3, 8, 21, 54, 80, 351, 364, 382, 386, 411], "greater_equ": [0, 3, 8], "greatest": [48, 125], "greedi": [82, 83], "green": [464, 467], "grep": 471, "grid": [137, 185, 464, 469, 470, 483], "group": [33, 459, 483], "gt": 464, "guarante": [339, 392], "guess": 468, "guid": [311, 472], "guidelin": 481, "gumbel": [0, 3, 8], "gzipfil": 316, "h": [158, 164, 199, 201, 334, 342, 464, 470, 482, 483], "h5py": 482, "ha": [6, 29, 30, 31, 32, 57, 67, 68, 69, 75, 77, 98, 103, 126, 136, 141, 142, 148, 149, 191, 192, 193, 194, 200, 202, 273, 283, 320, 332, 338, 341, 345, 356, 364, 371, 383, 388, 391, 400, 412, 414, 416, 421, 422, 435, 454, 458, 462, 463, 467, 468, 470, 471, 474, 483], "had": [340, 417, 484], "hadamard": 83, "half": [3, 8, 21, 97, 100, 101, 168, 368, 370, 372, 373, 375, 382], "halo": 470, "ham": [0, 3, 8], "han": [0, 3, 8], "hand": 464, "handl": [433, 437, 452, 454, 470, 476, 479, 483], "happen": [41, 458, 476], "har": 483, "hardwar": [283, 306, 481, 484], "have": [12, 13, 14, 19, 22, 23, 24, 25, 26, 27, 28, 33, 34, 35, 39, 40, 41, 44, 45, 46, 47, 52, 53, 54, 56, 58, 59, 60, 63, 64, 65, 67, 68, 69, 70, 71, 78, 79, 81, 82, 86, 87, 88, 90, 93, 100, 101, 109, 116, 117, 118, 119, 120, 121, 122, 125, 127, 128, 133, 134, 138, 139, 143, 144, 145, 146, 147, 153, 154, 155, 156, 157, 163, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 190, 193, 194, 196, 197, 199, 200, 201, 202, 311, 323, 325, 326, 328, 334, 335, 336, 337, 338, 340, 342, 343, 344, 389, 390, 393, 394, 397, 398, 402, 403, 404, 405, 409, 410, 412, 413, 414, 418, 419, 420, 421, 431, 432, 436, 437, 439, 450, 458, 459, 461, 462, 464, 465, 467, 468, 472, 479, 482, 483], "hazen": [199, 201, 334, 342], "header": [169, 459], "heapsort": [32, 406], "heat": 483, "heavisid": [3, 8], "height": [81, 133, 398, 439, 470, 483], "help": [458, 461, 465, 471, 480, 483], "helper": [452, 463, 469], "henc": 126, "here": [8, 104, 385, 458, 459, 464, 470, 477, 480, 482, 483], "herebi": 474, "herein": 474, "hermitian": [98, 103, 104, 158, 167, 452, 463], "hfft": [0, 3, 8], "high": [368, 371, 382, 459, 470, 483], "higher": [38, 76, 138, 199, 201, 283, 334, 342, 483], "highest": [368, 371], "highli": 482, "highlight": [470, 482, 483], "hipr2": 465, "hist": 131, "histogram": [0, 3, 8, 452], "histogram2d": [3, 8], "histogram_bin_edg": [3, 8], "histogramdd": [3, 8], "hold": [34, 55, 57, 68, 69, 164, 184, 193, 194, 197, 200, 202, 283, 422, 470], "holder": 474, "home": 462, "homepag": 465, "hope": 458, "hopkin": 164, "horizont": [132, 133, 396], "host": 180, "hous": 465, "how": [54, 306, 311, 320, 339, 416, 459, 460, 463, 464, 468, 477, 483], "howev": [14, 16, 17, 19, 68, 161, 183, 195, 198, 200, 283, 338, 414, 416, 458, 474, 483], "howto": 481, "hpc": [470, 481], "hsplit": [0, 3, 8, 133], "hstack": [0, 3, 8, 56, 482], "htm": 465, "html": [465, 471, 474, 484], "http": [350, 458, 462, 463, 465, 469, 471, 474, 476, 483, 484], "hull": 462, "hundr": [470, 482], "hyndman": [199, 201, 334, 342], "hyperbol": [23, 25, 28, 65, 380, 405, 419, 452], "hypergeometr": [0, 3, 8], "hypot": [0, 3, 8], "hypotenus": 134, "hypothesi": 348, "i": [2, 8, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 41, 42, 43, 44, 45, 46, 47, 48, 49, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 103, 104, 105, 106, 107, 108, 109, 110, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 168, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 207, 211, 212, 254, 265, 266, 283, 285, 286, 289, 291, 304, 306, 308, 311, 315, 316, 317, 320, 323, 324, 325, 326, 328, 329, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 402, 403, 404, 405, 406, 408, 409, 410, 411, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 429, 431, 432, 433, 434, 436, 437, 438, 439, 440, 441, 454, 459, 461, 462, 463, 464, 465, 467, 468, 469, 470, 472, 473, 474, 475, 476, 477, 479, 480, 483, 484], "i0": [3, 8, 137], "i1": 137, "i16_arr": 76, "iN": 137, "idea": 458, "ident": [0, 3, 8, 102, 110, 162, 166, 191, 192, 195, 198, 356, 378, 463], "identifi": 465, "identit": 463, "idiomat": 471, "idx": 467, "ieee": 454, "ifft": [0, 3, 8, 100, 101], "ifft2": [0, 3, 8], "ifftn": [0, 3, 8, 99, 106], "ifftshift": [0, 3, 8], "ignor": [49, 51, 131, 191, 192, 195, 196, 197, 198, 199, 201, 476], "ihfft": [0, 3, 8], "ii": [67, 364], "iinfo": [3, 8], "ij": [67, 185], "ik": 137, "illeg": 48, "illustr": [185, 459, 482, 483], "imag": [0, 3, 8, 465, 469, 483], "image_np": 483, "imagin": 311, "imaginari": [18, 35, 136, 141, 142, 149, 159, 160, 288, 397, 407], "imbal": 483, "immedi": 463, "impact": 482, "imper": 483, "implement": [8, 14, 16, 17, 19, 29, 30, 31, 61, 68, 69, 75, 79, 113, 114, 115, 138, 158, 161, 181, 183, 193, 194, 195, 198, 200, 333, 338, 414, 420, 437, 459, 462, 463, 470, 471, 474, 476, 479, 482, 483], "impli": [67, 332, 434, 462, 463, 469, 474], "implic": 468, "implicit": [82, 161], "implment": 479, "import": [67, 181, 462, 463, 464, 465, 467, 468, 469, 470, 477, 480, 482, 483, 484], "importantli": 77, "improp": 483, "improv": 483, "imshow": [465, 483], "in1d": [3, 8], "inappropri": 348, "incident": 474, "includ": [21, 37, 77, 82, 131, 168, 183, 196, 200, 202, 295, 338, 382, 385, 414, 436, 454, 458, 459, 461, 464, 470, 474, 476, 479, 482], "inclus": [199, 201, 334, 342, 368, 371], "incorpor": 474, "incorrect": 470, "increas": [77, 89, 99, 104, 131, 464, 471, 483], "incur": 482, "ind": [77, 426, 427, 429, 430], "indefinit": 458, "independ": [316, 348, 356, 363, 459, 483], "index": [6, 29, 30, 31, 32, 43, 54, 57, 75, 77, 92, 95, 100, 137, 151, 181, 185, 191, 192, 267, 289, 304, 333, 339, 340, 387, 392, 399, 406, 408, 412, 416, 417, 433, 435, 443, 450, 452, 464, 467, 472, 481], "index_arrai": [29, 30, 32, 33, 191, 192], "indexerror": 77, "indic": [0, 3, 8, 29, 30, 31, 32, 33, 36, 54, 61, 67, 73, 74, 77, 80, 82, 83, 91, 94, 95, 96, 98, 99, 100, 101, 103, 104, 105, 106, 107, 108, 109, 110, 112, 132, 180, 191, 192, 261, 262, 263, 264, 297, 300, 304, 314, 320, 327, 339, 340, 399, 402, 408, 416, 417, 426, 427, 429, 430, 433, 435, 438, 458, 464, 467, 468, 471, 474, 476, 482, 483], "indices_or_sect": [36, 408], "indirect": [31, 474], "individu": [353, 479], "ineffici": 454, "inexact": [3, 8, 116, 200], "inf": [15, 68, 69, 164, 191, 192, 193, 194, 465, 476], "infer": [21, 37, 168, 345, 392], "infin": [143, 144, 146, 147, 384], "infinit": 164, "influenc": 363, "info": [3, 8], "inform": [82, 283, 289, 306, 316, 458, 463, 464, 465, 468, 471, 473, 479, 483, 484], "infti": 462, "inher": 483, "inherit": 283, "init": [376, 467, 477, 483], "initi": [1, 16, 17, 84, 195, 198, 200, 202, 259, 260, 292, 294, 299, 312, 338, 349, 414, 454, 464, 467, 468, 470, 477], "inner": [0, 3, 8, 79, 83, 420], "innermost": 48, "input": [4, 6, 12, 13, 14, 15, 16, 17, 19, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 37, 38, 39, 40, 41, 43, 44, 45, 46, 48, 50, 52, 53, 55, 58, 59, 60, 61, 62, 63, 64, 65, 68, 69, 70, 71, 76, 77, 78, 82, 83, 86, 87, 88, 89, 90, 91, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 125, 126, 127, 128, 131, 134, 136, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 153, 154, 155, 156, 157, 158, 161, 164, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 265, 285, 286, 323, 324, 325, 326, 327, 328, 331, 332, 333, 334, 335, 336, 337, 338, 340, 341, 342, 343, 344, 346, 387, 388, 389, 390, 391, 393, 394, 395, 397, 399, 401, 402, 403, 404, 405, 406, 407, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 425, 431, 432, 433, 434, 436, 437, 443, 452, 462, 465, 471, 480, 482, 483], "insert": [3, 8, 29, 30, 48, 54, 75, 89, 168, 191, 192, 304, 332, 340, 399, 400, 452, 483], "insid": 482, "instal": [458, 459, 461, 472, 481], "instanc": [48, 81, 98, 133, 308, 349, 398, 439, 459, 473, 483], "instanti": [2, 349, 459], "instead": [14, 16, 17, 19, 41, 43, 48, 131, 137, 181, 183, 184, 195, 196, 197, 199, 201, 202, 265, 289, 334, 338, 342, 371, 414, 436, 462, 463, 464, 465, 469, 470, 471, 480, 481, 483], "instruct": [458, 459, 473, 483], "int": [1, 4, 6, 14, 16, 17, 19, 20, 21, 29, 30, 31, 32, 34, 36, 41, 42, 43, 47, 50, 51, 54, 55, 57, 58, 66, 67, 68, 69, 72, 73, 75, 76, 77, 80, 83, 84, 85, 89, 92, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 113, 123, 124, 126, 129, 130, 131, 132, 135, 137, 152, 162, 164, 168, 169, 180, 183, 184, 189, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 227, 228, 254, 286, 287, 291, 292, 294, 295, 296, 299, 304, 305, 307, 308, 311, 312, 320, 324, 329, 330, 332, 333, 334, 338, 340, 342, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 391, 392, 395, 396, 397, 399, 401, 406, 408, 411, 412, 414, 415, 416, 417, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 433, 434, 435, 436, 438, 441, 442, 450, 454, 464, 465, 467, 483], "int16": [3, 8, 76, 323], "int32": [3, 8, 200, 311], "int32_t": 459, "int64": [3, 8, 200], "int64_t": 459, "int8": [3, 8], "int_": [3, 8, 308, 371, 421, 462], "int_0": 345, "int_lik": 369, "int_typ": 289, "intc": [3, 8], "integ": [2, 3, 8, 21, 36, 51, 54, 67, 68, 69, 76, 116, 118, 151, 155, 162, 164, 183, 184, 193, 194, 196, 197, 199, 200, 201, 202, 304, 308, 311, 332, 334, 338, 339, 342, 346, 353, 368, 371, 392, 393, 394, 396, 399, 408, 414, 422, 433, 435, 436], "integer_lik": 420, "integr": [41, 131, 188, 461, 470, 483], "intel": 483, "intellectu": 458, "intend": [185, 316, 468], "intens": [161, 465, 483], "intensity_max": [465, 483], "intensity_min": [465, 483], "intent": 116, "inter": 470, "interact": [273, 483], "interchang": [313, 415], "interest": [462, 463, 483], "interfac": [34, 283, 306, 483], "interior": 126, "intermedi": [82, 83, 183, 196, 199, 201, 334, 342, 482], "intern": 68, "interoper": 471, "interp": [3, 8], "interpolated_inverted_cdf": [199, 201, 334, 342], "interpret": [37, 51, 62, 151, 180, 289, 306, 339, 468], "interrupt": 474, "intersect1d": [3, 8], "interv": [21, 55, 77, 168, 346, 360, 365, 368, 370, 371, 372, 373, 375, 381, 382, 383], "intp": [3, 8, 200], "introduc": [395, 467, 483], "introduct": 481, "introselect": [31, 263, 298, 333], "inund": 470, "inv": [3, 8, 468], "invas": 482, "invers": [22, 23, 24, 25, 26, 28, 89, 99, 100, 101, 102, 103, 104, 105, 106, 139, 162, 177, 350, 384, 386, 468], "invert": [0, 3, 8, 177, 452], "inverted_cdf": [199, 201, 334, 342], "invest": 483, "invoc": [483, 484], "invok": [459, 468, 480], "involv": [458, 470], "irecv": 470, "irfft": [0, 3, 8, 106], "irfft2": [0, 3, 8], "irfftn": [0, 3, 8, 104, 105], "is_busdai": [3, 8], "isclos": [0, 3, 8], "iscomplex": [0, 3, 8], "iscomplexobj": [0, 3, 8], "isdtyp": [3, 8], "isend": 470, "isfinit": [0, 3, 8, 195, 202], "isfortran": [3, 8, 254], "isin": [3, 8], "isinf": [0, 3, 8], "isnan": [0, 3, 8, 195, 198, 200, 202], "isnat": [3, 8], "isneginf": [0, 3, 8], "isol": 459, "isposinf": [0, 3, 8], "isreal": [0, 3, 8], "isrealobj": [0, 3, 8], "isscalar": [0, 3, 8], "issu": [99, 100, 101, 454, 458, 471, 482, 483], "issubdtyp": [3, 8], "item": [0, 8, 33, 316, 317, 355, 386, 433, 467], "items": 283, "iter": [6, 83, 199, 201, 272, 284, 285, 301, 334, 340, 342, 417, 467, 468, 469, 470, 477, 483], "ith": 137, "its": [12, 13, 14, 19, 22, 23, 24, 25, 26, 27, 28, 41, 43, 44, 45, 46, 52, 53, 54, 59, 60, 63, 64, 65, 70, 71, 72, 78, 86, 87, 88, 90, 93, 116, 117, 118, 119, 120, 121, 122, 125, 127, 128, 131, 134, 135, 138, 139, 143, 144, 145, 153, 154, 155, 156, 157, 159, 160, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 181, 182, 186, 187, 188, 190, 283, 306, 318, 320, 325, 326, 328, 331, 336, 337, 343, 344, 363, 371, 386, 389, 390, 392, 393, 394, 402, 403, 404, 405, 409, 410, 413, 418, 419, 420, 422, 423, 424, 431, 432, 437, 458, 463, 467, 470, 474, 482, 483], "itself": [54, 358, 411, 459], "ivan": 474, "ix_": [0, 3, 8], "j": [79, 164, 185, 199, 201, 320, 331, 334, 340, 342, 417, 424, 464, 468, 470, 482, 483], "j0": 54, "j1": 54, "jacobi": 466, "jacobi_stencil": 483, "jacobian": 468, "jcp": 464, "jm": 54, "john": [164, 462], "join": [58, 412, 452], "jr": [350, 363], "json": 454, "jsrun": 475, "june": 474, "just": [56, 385, 458, 462, 463, 469], "k": [12, 13, 22, 23, 24, 25, 26, 27, 28, 34, 44, 45, 46, 52, 53, 59, 60, 63, 64, 65, 70, 71, 72, 78, 79, 86, 87, 88, 90, 92, 93, 116, 117, 118, 119, 120, 121, 122, 125, 127, 128, 134, 137, 139, 143, 144, 145, 153, 154, 155, 156, 157, 165, 166, 167, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 186, 187, 188, 190, 211, 265, 285, 325, 326, 328, 336, 337, 343, 344, 345, 346, 348, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 368, 371, 372, 373, 374, 375, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 389, 390, 393, 394, 396, 402, 403, 404, 405, 409, 410, 413, 418, 419, 424, 425, 426, 427, 428, 429, 430, 431, 432, 454, 462, 464, 466, 468, 483], "kaiser": [0, 3, 8, 47], "kappa": 383, "ke": 483, "keep": [454, 462, 467], "keepdim": [14, 16, 17, 19, 29, 30, 41, 164, 183, 184, 191, 192, 195, 196, 197, 198, 199, 200, 201, 202, 259, 260, 292, 293, 294, 299, 312, 322, 334, 338, 342, 414, 436], "kei": [210, 218, 253, 471, 483], "kern": 474, "kernel": [465, 483], "kernel_i": [465, 483], "kernel_x": [465, 483], "keyword": [2, 12, 13, 22, 23, 24, 25, 26, 27, 28, 44, 45, 46, 52, 53, 55, 59, 60, 63, 64, 65, 67, 70, 71, 78, 86, 87, 88, 90, 93, 116, 117, 118, 119, 120, 121, 122, 125, 127, 128, 134, 139, 143, 144, 145, 153, 154, 155, 156, 157, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 182, 185, 186, 187, 188, 190, 325, 326, 328, 336, 337, 343, 344, 389, 390, 393, 394, 402, 403, 404, 405, 409, 410, 413, 418, 419, 431, 432, 433], "kill": 158, "kind": [31, 32, 58, 82, 181, 263, 264, 265, 298, 309, 333, 406, 452, 462, 463, 469, 471, 474], "know": [458, 468, 471, 482], "knowledg": [458, 470], "known": [311, 351, 364, 366, 377, 383, 386, 483], "kron": [3, 8], "kth": [31, 263, 298, 333], "kwarg": [12, 13, 22, 23, 24, 25, 26, 27, 28, 44, 45, 46, 52, 53, 55, 59, 60, 63, 64, 65, 70, 71, 78, 86, 87, 88, 90, 93, 116, 117, 118, 119, 120, 121, 122, 125, 127, 128, 134, 139, 143, 144, 145, 153, 154, 155, 156, 157, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 182, 186, 187, 188, 190, 245, 325, 326, 328, 336, 337, 343, 344, 389, 390, 393, 394, 402, 403, 404, 405, 409, 410, 413, 418, 419, 431, 432, 433, 462], "l": [36, 158, 463, 474, 483], "l2": [464, 468], "l2_norm": 468, "label": [82, 459, 462, 464, 467], "label_color": 467, "label_color_map": 467, "label_valu": 467, "lam": 365, "lambda": [350, 356, 385], "languag": [462, 463, 469], "laplac": [0, 3, 8, 363], "laptop": 483, "larg": [61, 67, 169, 363, 365, 380, 416, 470, 477, 482, 483], "larger": [43, 55, 76, 94, 95, 96, 99, 100, 101, 103, 106, 107, 109, 169, 381, 422, 434, 477, 483], "larger_imag": 483, "largest": [43, 83, 118, 164, 368, 371], "last": [14, 19, 21, 31, 32, 41, 42, 48, 76, 79, 94, 95, 96, 98, 99, 100, 101, 103, 104, 105, 106, 107, 109, 113, 126, 138, 163, 168, 181, 202, 286, 304, 333, 338, 387, 392, 395, 399, 406, 407, 412, 414, 416, 420], "latenc": 483, "later": [363, 483], "latest": [471, 473, 483, 484], "latter": [340, 417, 482], "launch": [459, 477, 482], "launcher": [471, 475, 483], "law": [386, 462, 463, 469], "layout": [34, 265, 283, 315, 387, 392], "lcm": [0, 3, 8], "ldexp": [0, 3, 8], "lead": [48, 185, 193, 194, 471, 483], "leakag": 47, "learn": 471, "least": [38, 39, 40, 41, 43, 61, 67, 74, 81, 83, 110, 114, 142, 159, 160, 165, 167, 355, 398, 439, 459, 482, 483], "left": [14, 16, 17, 19, 29, 30, 41, 77, 114, 155, 164, 183, 184, 191, 192, 195, 196, 197, 198, 199, 200, 201, 202, 304, 334, 338, 342, 381, 397, 399, 414, 436, 464, 470], "left_shift": [0, 3, 8], "leg": 134, "legaci": 376, "legal": [458, 474], "legales": 460, "legat": [339, 454, 459, 461, 462, 463, 469, 472, 473, 476, 479, 480, 483, 484], "legate_auto_config": 483, "legate_config": [471, 480], "legate_limit_stdout": 483, "legate_root": 459, "legate_test": 471, "legend": [462, 464], "legion": [481, 483], "legion_default_arg": 475, "lele": 464, "len": [57, 77, 96, 97, 101, 104, 106, 109, 137, 185, 237, 467], "length": [12, 13, 16, 17, 21, 22, 23, 24, 25, 26, 27, 28, 36, 41, 43, 44, 45, 46, 52, 53, 57, 59, 60, 63, 64, 65, 68, 69, 70, 71, 76, 78, 86, 87, 88, 90, 93, 94, 95, 96, 98, 99, 100, 101, 102, 103, 104, 106, 107, 109, 116, 117, 118, 119, 120, 121, 122, 125, 126, 127, 128, 131, 133, 134, 137, 139, 143, 144, 145, 153, 154, 155, 156, 157, 159, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 182, 184, 185, 186, 187, 188, 190, 193, 194, 195, 197, 198, 304, 310, 325, 326, 328, 336, 337, 340, 343, 344, 347, 389, 390, 392, 393, 394, 398, 399, 400, 401, 402, 403, 404, 405, 409, 410, 411, 413, 417, 418, 419, 420, 421, 431, 432, 439, 459, 464], "less": [0, 3, 8, 42, 47, 57, 67, 68, 69, 75, 110, 129, 130, 152, 157, 161, 193, 194, 200, 202, 338, 355, 382, 403, 414, 422, 468, 471, 482], "less_equ": [3, 8], "let": [458, 462, 463, 468, 469, 483], "letter": 306, "level": [48, 67, 317, 450, 459, 476, 482, 483], "leverag": 483, "lexsort": [3, 8], "lgpatch": 480, "lh": 464, "liabil": 474, "liabl": 474, "liber": [79, 82, 138, 181, 420, 437], "librari": [273, 450, 454, 459, 471, 472, 474, 483], "licens": [458, 462, 463, 469, 474], "lifespan": 470, "lightweight": 458, "like": [39, 40, 48, 56, 82, 106, 110, 165, 167, 168, 169, 180, 181, 185, 265, 283, 308, 316, 340, 382, 384, 387, 392, 417, 424, 452, 454, 458, 463, 464, 468, 469, 470, 475, 482, 483, 484], "limit": [55, 94, 95, 96, 98, 99, 100, 101, 103, 104, 105, 106, 107, 108, 109, 159, 160, 268, 363, 365, 381, 382, 462, 463, 469, 474, 483], "linalg": [0, 3, 8, 443, 452, 463, 464, 467, 468, 480, 482], "linalgerror": [8, 159, 160, 165, 166, 167], "line": [458, 461, 470, 471, 479, 483], "linear": [61, 82, 166, 199, 201, 334, 342, 443, 452, 459, 464, 468, 483], "linearli": 482, "link": [476, 483], "linspac": [0, 3, 8, 21, 462, 464, 482], "linux": [458, 471, 473, 481], "list": [8, 21, 31, 32, 36, 37, 38, 39, 40, 48, 49, 54, 80, 82, 83, 89, 97, 110, 111, 126, 132, 254, 317, 333, 400, 406, 408, 420, 423, 438, 459, 461, 467, 474], "liter": [4, 82], "literal_ev": 169, "littl": [79, 138, 181, 332, 420, 434, 437, 463], "ll": [467, 475], "ln": [385, 483], "load": [0, 3, 8, 280, 281, 483], "loadtxt": [3, 8], "loan": 164, "loc": [354, 356, 357, 363, 464], "local": [470, 471, 483], "local_grid": 470, "local_ni": 470, "local_nx": 470, "local_rank": 470, "locat": [12, 13, 22, 23, 24, 25, 26, 27, 28, 44, 45, 46, 49, 51, 52, 53, 59, 60, 63, 64, 65, 70, 71, 78, 86, 87, 88, 90, 93, 110, 116, 117, 118, 119, 120, 121, 122, 125, 127, 128, 134, 139, 143, 144, 145, 146, 147, 153, 154, 155, 156, 157, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 185, 186, 187, 188, 190, 304, 325, 326, 328, 331, 336, 337, 343, 344, 354, 356, 357, 364, 389, 390, 393, 394, 399, 402, 403, 404, 405, 409, 410, 413, 418, 419, 431, 432, 465, 467, 479, 480, 483], "lock": 283, "log": [0, 3, 8, 358, 359, 462], "log10": [0, 3, 8], "log1p": [0, 3, 8], "log2": [0, 3, 8], "logaddexp": [0, 3, 8], "logaddexp2": [0, 3, 8], "logarithm": [170, 171, 172, 173, 174, 175, 359, 452], "logic": [14, 19, 332, 443, 452, 470], "logical_and": [0, 3, 8, 482], "logical_not": [3, 8], "logical_or": [0, 3, 8], "logical_xor": [0, 3, 8], "logist": [0, 3, 8], "lognorm": [0, 3, 8], "logseri": [0, 3, 8], "logspac": [3, 8], "lomax": 364, "long": [3, 8, 371, 483], "longdoubl": [3, 8, 289], "longer": [43, 61, 98, 104, 482], "longlong": [3, 8], "look": [417, 458, 469, 471], "loop": [468, 470], "lorena": 470, "lorentz": 377, "lose": [289, 317], "loss": 474, "lost": 316, "low": [100, 101, 368, 371, 382, 450], "lower": [55, 92, 131, 158, 199, 201, 334, 342, 381, 382, 424, 425, 426, 427, 463, 470], "lowercas": 283, "lowest": [41, 83, 153, 364, 368, 371], "lstsq": [3, 8], "lt": 464, "m": [40, 42, 47, 61, 67, 79, 81, 92, 95, 96, 98, 100, 101, 104, 106, 109, 113, 114, 115, 129, 130, 152, 158, 159, 160, 161, 162, 165, 166, 167, 181, 183, 185, 196, 286, 331, 340, 345, 346, 348, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 368, 371, 372, 373, 374, 375, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 396, 400, 416, 417, 424, 425, 426, 428, 429, 436, 459, 462, 463, 469, 473, 483], "machin": [316, 459, 471, 483, 484], "maco": 471, "made": [34, 38, 265, 283, 306, 387], "magenta": 467, "magnitud": [18, 467, 483], "mai": [6, 14, 19, 21, 29, 30, 49, 51, 54, 55, 58, 68, 69, 82, 126, 164, 169, 181, 185, 193, 194, 265, 283, 308, 317, 340, 346, 382, 383, 454, 458, 461, 462, 463, 464, 468, 469, 471, 474, 476, 479, 480, 483], "main": [72, 73, 74, 75, 92, 110, 135, 422, 424, 425, 464, 475, 483, 484], "maintain": [75, 458, 470], "mainten": 470, "major": [34, 285, 387, 435, 471], "make": [48, 49, 56, 81, 133, 185, 273, 283, 355, 398, 439, 452, 458, 459, 463, 467, 470, 471, 476, 477, 480, 482, 483], "make_grid": 469, "manag": [349, 454, 470, 483], "mani": [82, 311, 350, 434, 459, 483], "manifest": 482, "manipul": [443, 452], "manner": [476, 483], "mantissa": 122, "manual": [421, 458, 470, 473, 477, 483], "map": [54, 467, 470], "mapper": 471, "margin": 77, "mark": 458, "marker": 467, "marku": 468, "mask": [151, 180, 335, 341, 467], "mask_func": 180, "mask_funct": 180, "mask_indic": [0, 3, 8], "mass": [131, 353], "master": 483, "match": [37, 48, 55, 58, 76, 126, 181, 340, 412, 417, 436, 454, 464], "materi": [180, 283, 465, 467, 474], "math": [289, 454, 474], "mathbf": [464, 468, 483], "mathemat": [164, 443, 452, 483], "mathtt": 462, "matmul": [0, 3, 8, 454, 483], "matmul_cache_s": 443, "matplotlib": [462, 464, 465, 467, 469, 483], "matric": [48, 110, 159, 160, 161, 163, 164, 181, 185, 387, 452, 463, 464, 483], "matrix": [7, 8, 67, 75, 79, 158, 159, 160, 161, 162, 164, 165, 166, 181, 185, 320, 323, 387, 428, 437, 452, 463, 464, 468], "matrix_norm": 8, "matrix_pow": [0, 8], "matrix_rank": [3, 8], "matrix_transpos": [3, 8], "matter": 471, "matthew": 474, "matvec": [3, 8], "max": [0, 131, 164, 198, 268, 421, 465, 467, 482, 483], "max_header_s": 169, "maxim": 483, "maximum": [0, 3, 8, 16, 17, 29, 42, 47, 55, 83, 119, 129, 130, 152, 169, 191, 195, 198, 261, 292, 467, 476, 482], "may_share_memori": [3, 8], "mayb": 458, "mb": [461, 483], "md": 164, "me": 458, "mean": [0, 3, 8, 48, 66, 82, 95, 96, 100, 101, 106, 107, 109, 123, 126, 164, 181, 196, 265, 285, 315, 320, 348, 356, 357, 358, 362, 363, 369, 384, 387, 392, 396, 416, 434, 466, 468, 483], "measur": [350, 436, 471, 477, 478, 480, 481, 483], "mechan": 458, "median": [0, 3, 8, 197, 357], "median_unbias": [199, 201, 334, 342], "meet": [34, 458, 482, 483], "memavail": 471, "meminfo": 471, "memmap": [3, 8], "memo": 212, "memori": [34, 49, 51, 161, 180, 184, 185, 197, 199, 201, 265, 266, 276, 283, 285, 295, 306, 311, 315, 334, 342, 387, 392, 461, 464, 470, 483], "memoryview": 276, "mention": [467, 471, 482, 483], "merchant": 474, "merg": [54, 458, 474, 477], "merged_arrai": 54, "mergesort": [32, 406], "merton": 483, "mesh": [151, 470, 477], "meshgrid": [0, 3, 8, 151], "messag": [471, 477], "met": [474, 482], "method": [1, 2, 4, 7, 14, 16, 17, 19, 34, 61, 161, 169, 183, 195, 198, 199, 200, 201, 289, 307, 308, 316, 324, 334, 338, 342, 414, 462, 466, 476, 483], "mgrid": 151, "microsecond": 482, "middl": [100, 101], "midpoint": [199, 201, 334, 342], "might": [32, 68, 82, 180, 406, 468, 471, 477, 482, 483], "million": [462, 470], "millisecond": [477, 482], "mimic": [332, 434, 470], "mimick": 470, "min": [0, 131, 164, 165, 167, 198, 268], "min_cpu_chunk": 443, "min_gpu_chunk": 443, "min_omp_chunk": 443, "min_scalar_typ": [3, 8], "miniforg": 483, "miniforge3": 483, "minim": [47, 483], "minimum": [0, 3, 8, 16, 17, 30, 34, 43, 55, 116, 120, 192, 195, 198, 262, 294, 483], "minlength": [43, 467], "mintypecod": [3, 8], "mirror": 470, "miscellan": 452, "mise": 383, "mismatch": [48, 54, 57], "mitig": 482, "mkdir": 483, "mod": [3, 8, 54], "mode": [54, 61, 82, 94, 95, 96, 98, 99, 100, 101, 103, 104, 105, 106, 107, 108, 109, 165, 169, 267, 300, 314, 339, 354, 374, 377, 381, 383, 416, 454, 465, 482, 483], "model": [353, 459, 462, 463, 469, 470, 483], "modf": [0, 3, 8], "modif": [458, 470, 474], "modifi": [110, 184, 197, 199, 201, 334, 342, 458, 464, 474], "modul": [273, 483], "modular": 54, "moivr": 363, "monoton": [77, 131], "more": [38, 39, 40, 49, 51, 55, 68, 69, 72, 75, 77, 79, 81, 82, 94, 99, 104, 105, 107, 108, 133, 138, 161, 163, 181, 185, 193, 194, 200, 311, 384, 385, 396, 398, 412, 420, 422, 433, 437, 439, 461, 463, 464, 465, 467, 470, 473, 476, 482, 483, 484], "moshier": 474, "most": [34, 76, 81, 82, 83, 99, 133, 355, 398, 417, 439, 458, 470, 476, 483], "mostli": 471, "motion": 384, "move": [189, 311, 483], "moveaxi": [0, 3, 8], "mpi": [470, 483], "mpi4pi": [470, 477], "mpi_fin": 470, "mpirun": 475, "msg00295": 474, "mt19937": [3, 8], "mu": [356, 364, 383], "much": [42, 458, 482], "multi": [3, 82, 94, 95, 96, 98, 99, 100, 101, 103, 104, 105, 106, 107, 108, 109, 159, 160, 161, 166, 470, 471, 472, 473, 481, 482], "multi_dot": [0, 8], "multidimension": 437, "multinomi": [3, 8], "multipl": [1, 2, 7, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 112, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 166, 168, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 204, 205, 206, 210, 211, 212, 213, 214, 216, 217, 219, 220, 221, 222, 223, 224, 225, 226, 229, 230, 231, 232, 233, 234, 235, 236, 238, 239, 240, 241, 242, 243, 244, 246, 247, 248, 250, 251, 252, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 267, 268, 269, 270, 271, 272, 277, 278, 281, 282, 285, 289, 292, 293, 294, 297, 298, 299, 300, 301, 303, 304, 306, 309, 310, 312, 313, 314, 315, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 461, 468, 470, 471, 473, 482, 484], "multipli": [0, 3, 8, 68, 79, 181, 193, 338, 364, 372, 373, 375, 482], "multivariate_norm": [3, 8], "must": [1, 12, 13, 14, 16, 17, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 41, 44, 45, 46, 48, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 63, 64, 65, 68, 69, 70, 71, 76, 77, 78, 79, 81, 86, 87, 88, 90, 93, 98, 104, 106, 114, 116, 117, 118, 119, 120, 121, 122, 125, 126, 127, 128, 131, 133, 134, 138, 139, 143, 144, 145, 146, 147, 153, 154, 155, 156, 157, 158, 163, 164, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 181, 182, 183, 184, 186, 187, 188, 189, 190, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 254, 268, 283, 320, 325, 326, 328, 334, 335, 336, 337, 338, 340, 342, 343, 344, 348, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 361, 362, 363, 364, 365, 366, 367, 369, 374, 379, 380, 381, 384, 385, 386, 389, 390, 393, 394, 395, 396, 397, 398, 399, 402, 403, 404, 405, 409, 410, 412, 413, 414, 417, 418, 419, 420, 422, 431, 432, 434, 436, 437, 439, 459, 470, 474, 475, 483], "my": 458, "myenv": [473, 483], "myron": 483, "n": [7, 33, 36, 40, 43, 54, 61, 67, 73, 74, 76, 77, 79, 81, 92, 94, 95, 96, 98, 99, 100, 101, 103, 104, 106, 107, 109, 110, 126, 135, 137, 151, 162, 164, 165, 167, 180, 181, 185, 304, 311, 320, 331, 335, 341, 345, 346, 348, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 368, 371, 372, 373, 374, 375, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 398, 399, 408, 420, 424, 425, 426, 429, 430, 436, 439, 443, 462, 463, 464, 467, 469, 473, 475, 483], "n1": 185, "n2": 185, "n3": 185, "n_centroid": 467, "n_dim": 467, "n_element": 467, "n_gpu": 470, "n_iter": 467, "n_iter_check": 467, "n_point": 464, "n_stencil": 464, "n_warmup_it": 477, "naiv": [482, 483], "name": [280, 283, 306, 318, 384, 458, 474, 480, 483], "nan": [15, 29, 30, 35, 140, 145, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 476], "nan_to_num": [3, 8], "nanargmax": [0, 3, 8, 192, 454], "nanargmin": [0, 3, 8, 191, 454], "nancumprod": [0, 3, 8], "nancumsum": [0, 3, 8], "nanmax": [0, 3, 8, 198, 454], "nanmean": [0, 3, 8], "nanmedian": [0, 3, 8], "nanmin": [0, 3, 8, 195, 454], "nanpercentil": [0, 3, 8], "nanprod": [0, 3, 8], "nanquantil": [0, 3, 8], "nanstd": [3, 8], "nansum": [0, 3, 8], "nanvar": [3, 8], "nation": 483, "nativ": [454, 476], "natur": [170, 172, 363, 483], "navier": 470, "nbad": 355, "nd": [6, 48, 289], "ndarrai": [0, 7, 8, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 348, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 371, 372, 373, 374, 375, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 448, 454, 465, 467, 468, 476, 479, 483], "ndenumer": [3, 8], "ndim": [0, 3, 6, 8, 16, 17, 33, 38, 39, 40, 48, 73, 75, 110, 164, 198, 317, 417, 421], "ndimag": 465, "ndindex": [3, 8], "nditer": [3, 8], "ndmin": 34, "ndshape": [6, 50, 401, 435], "ndshapelik": [50, 51, 113, 123, 124, 329, 330, 373, 375, 392, 411, 442], "nearest": [199, 201, 317, 334, 342, 394], "necessari": [38, 43, 48, 54, 68, 69, 98, 104, 106, 110, 183, 184, 193, 194, 196, 197, 200, 202, 338, 339, 397, 414, 436, 470, 479], "necessarili": [54, 462, 463, 469], "need": [34, 49, 77, 184, 185, 197, 387, 416, 417, 440, 454, 459, 463, 467, 470, 471, 482, 483], "neg": [0, 3, 8, 14, 19, 41, 43, 54, 75, 92, 99, 100, 101, 104, 113, 116, 126, 144, 146, 162, 168, 202, 286, 338, 350, 352, 354, 356, 357, 358, 360, 361, 363, 366, 367, 369, 374, 379, 387, 397, 409, 414, 416, 420, 422, 434], "negative_binomi": [0, 3, 8], "neglig": 474, "neighbor": [464, 470, 483], "neither": 474, "nersc": 483, "nest": [34, 48, 317, 470, 482], "nested_it": 3, "never": [61, 306], "new": [14, 19, 51, 54, 68, 69, 75, 84, 85, 89, 113, 114, 115, 123, 168, 180, 183, 184, 189, 193, 194, 196, 197, 200, 202, 207, 265, 267, 279, 303, 320, 323, 329, 349, 370, 392, 397, 412, 415, 421, 436, 441, 450, 467, 473, 483], "new_label": 467, "newaxi": [320, 467], "newli": [34, 265], "newshap": 392, "newton": 466, "next": [311, 326, 458, 483], "nextaft": [0, 3, 8], "ngood": 355, "ni": [185, 340, 416, 417], "ninja": 459, "niter": [468, 477, 482], "nj": [340, 416, 417], "nk": [340, 416, 417], "nn": 185, "nnewton": 468, "nnode": 483, "node": [283, 461, 470, 471, 472, 473, 481, 484], "non": [14, 16, 17, 19, 21, 33, 39, 40, 41, 43, 66, 112, 131, 141, 151, 164, 168, 180, 183, 185, 195, 198, 200, 283, 295, 297, 327, 335, 338, 350, 352, 354, 356, 357, 358, 361, 362, 363, 366, 367, 369, 374, 379, 409, 414, 420, 434, 470, 476], "nonc": [361, 362], "noncentr": [361, 362], "noncentral_chisquar": [0, 3, 8], "noncentral_f": [0, 3, 8], "none": [1, 2, 4, 6, 12, 13, 14, 16, 17, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 34, 37, 41, 43, 44, 45, 46, 52, 53, 54, 55, 57, 58, 59, 60, 63, 64, 65, 66, 67, 68, 69, 70, 71, 75, 76, 78, 79, 82, 85, 86, 87, 88, 90, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 113, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 131, 134, 138, 139, 143, 144, 145, 146, 147, 153, 154, 155, 156, 157, 163, 164, 166, 168, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 181, 182, 183, 184, 186, 187, 188, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 259, 260, 261, 262, 263, 264, 266, 267, 268, 269, 273, 274, 275, 277, 278, 281, 286, 287, 289, 292, 293, 294, 298, 299, 300, 304, 305, 306, 309, 310, 312, 314, 317, 319, 320, 322, 323, 325, 326, 328, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 342, 343, 344, 345, 346, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 368, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 389, 390, 391, 393, 394, 395, 397, 399, 402, 403, 404, 405, 406, 409, 410, 411, 412, 413, 414, 416, 417, 418, 419, 420, 422, 423, 424, 426, 429, 431, 432, 433, 434, 436, 437, 440, 442, 454, 467], "noninfring": 474, "nonneg": [355, 385], "nonzero": [0, 3, 8, 91, 112, 151, 332, 482, 483], "nor": 474, "norm": [0, 8, 94, 95, 96, 98, 99, 100, 101, 103, 104, 105, 106, 107, 108, 109, 161, 452, 464, 467, 468, 482], "normal": [0, 3, 8, 42, 47, 48, 67, 94, 95, 96, 98, 99, 100, 101, 103, 104, 105, 106, 107, 108, 109, 129, 130, 131, 152, 159, 345, 348, 356, 358, 369, 380, 383, 462, 465, 467, 483], "normal_unbias": [199, 201, 334, 342], "north": [469, 483], "not_equ": [0, 3, 8, 467], "note": [12, 13, 15, 18, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 34, 44, 45, 46, 52, 53, 54, 59, 60, 61, 63, 64, 65, 67, 68, 69, 70, 71, 75, 76, 77, 78, 79, 82, 83, 86, 87, 88, 90, 93, 94, 95, 96, 97, 98, 99, 100, 101, 103, 104, 105, 106, 107, 108, 109, 110, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 125, 127, 128, 131, 134, 137, 138, 139, 140, 143, 144, 145, 150, 153, 154, 155, 156, 157, 158, 159, 160, 161, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 185, 186, 187, 188, 190, 193, 194, 195, 198, 265, 276, 283, 289, 295, 306, 308, 311, 316, 317, 323, 325, 326, 328, 333, 336, 337, 343, 344, 349, 358, 387, 389, 390, 391, 392, 393, 394, 395, 402, 403, 404, 405, 409, 410, 413, 416, 418, 419, 420, 424, 426, 427, 429, 430, 431, 432, 433, 437, 464, 465, 468, 471, 482, 483], "notic": [462, 468, 471, 473], "now": [54, 459, 462, 463, 465, 469, 483], "np": [12, 13, 16, 17, 22, 23, 24, 25, 26, 27, 28, 44, 45, 46, 48, 52, 53, 59, 60, 63, 64, 65, 68, 69, 70, 71, 76, 77, 78, 82, 86, 87, 88, 90, 93, 111, 112, 116, 117, 118, 119, 120, 121, 122, 125, 127, 128, 134, 139, 143, 144, 145, 151, 153, 154, 155, 156, 157, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 184, 185, 186, 187, 188, 190, 193, 194, 197, 284, 308, 311, 320, 325, 326, 328, 336, 337, 338, 343, 344, 371, 389, 390, 393, 394, 402, 403, 404, 405, 409, 410, 413, 414, 416, 418, 419, 421, 431, 432, 462, 463, 464, 465, 467, 468, 469, 470, 475, 476, 477, 480, 482, 483, 484], "npoint": 464, "npt": [4, 36, 55, 58, 92, 123, 124, 131, 135, 137, 141, 142, 148, 150, 168, 266, 284, 305, 323, 329, 330, 373, 375, 400, 421, 424, 440, 442], "npy": [169, 452], "npz": [169, 452], "nsampl": 355, "ntask": 483, "nuc": 164, "nuclear": 164, "null": 417, "num": [168, 482, 483], "num_parallel": 459, "num_timestep": 470, "numa": 459, "number": [2, 3, 6, 8, 12, 13, 15, 18, 22, 23, 24, 25, 26, 27, 28, 33, 34, 41, 42, 43, 44, 45, 46, 47, 49, 52, 53, 54, 59, 60, 63, 64, 65, 66, 67, 70, 71, 73, 76, 78, 83, 86, 87, 88, 89, 90, 92, 93, 96, 98, 99, 100, 101, 103, 104, 106, 107, 109, 116, 117, 118, 119, 120, 121, 122, 125, 126, 127, 128, 129, 130, 131, 134, 135, 137, 139, 142, 143, 144, 145, 149, 151, 152, 153, 154, 155, 156, 157, 164, 168, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 182, 183, 186, 187, 188, 190, 193, 194, 195, 196, 198, 200, 202, 291, 296, 308, 324, 325, 326, 328, 332, 335, 336, 337, 343, 344, 346, 347, 348, 353, 355, 360, 363, 365, 376, 389, 390, 391, 393, 394, 395, 396, 397, 402, 403, 404, 405, 409, 410, 413, 416, 418, 419, 421, 424, 431, 432, 433, 434, 436, 437, 452, 454, 461, 462, 464, 468, 470, 471, 475, 476, 483], "number_of_dimens": 324, "numer": [99, 100, 101, 104, 106, 146, 147, 164, 325, 336, 351, 362, 452, 470, 476], "numit": 6, "numpi": [1, 2, 3, 4, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 90, 91, 92, 93, 94, 95, 96, 98, 99, 100, 101, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 152, 153, 154, 155, 156, 157, 158, 159, 160, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 265, 273, 279, 283, 306, 311, 323, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 398, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 452, 454, 461, 462, 463, 464, 465, 467, 468, 469, 470, 472, 478, 479, 481, 484], "numpy_compat": 443, "numpythunk": 4, "nvidia": [462, 463, 465, 469, 471, 473, 483, 484], "nx": [185, 470, 482, 483], "ny": [185, 470, 482, 483], "nyquist": [97, 99, 100, 101], "o": [1, 283, 349, 467, 477, 483], "obj": 34, "object": [6, 14, 19, 34, 62, 150, 158, 164, 169, 184, 197, 199, 201, 254, 266, 273, 276, 283, 289, 291, 295, 315, 316, 317, 323, 334, 342, 349, 392, 420, 424, 433], "object_": [3, 8], "observ": 67, "obtain": [137, 308, 364, 462, 463, 469, 474], "occas": 458, "occasion": 476, "occur": [58, 68, 69, 82, 181, 193, 194, 265, 285, 360, 363, 365, 381, 387, 482, 483], "occurr": [43, 433], "odd": [42, 47, 98, 102, 104, 106, 107, 129, 130, 152], "ofc": 68, "off": [21, 434, 458, 464], "offer": [471, 473, 482], "offload": 454, "offset": [4, 75, 180, 277, 287, 305, 311, 319, 422, 426, 427, 429, 430, 454, 477], "often": [21, 42, 345, 348, 363, 458, 467, 482, 483], "ogrid": 151, "omiss": 323, "omit": [254, 323], "omp": [461, 471, 483], "ompthread": [461, 483], "onc": [458, 459, 470, 483], "one": [6, 14, 16, 17, 19, 29, 30, 38, 41, 42, 43, 47, 49, 51, 54, 55, 82, 92, 94, 95, 98, 99, 100, 102, 103, 104, 106, 107, 126, 129, 130, 135, 137, 142, 151, 152, 164, 172, 183, 184, 185, 191, 192, 193, 195, 196, 197, 198, 199, 200, 201, 202, 276, 283, 284, 285, 289, 310, 311, 327, 334, 338, 342, 353, 364, 368, 400, 411, 412, 414, 426, 427, 429, 430, 436, 450, 458, 462, 470, 471, 473, 477, 482, 483], "ones": [0, 3, 8, 79, 89, 92, 135, 138, 146, 147, 180, 181, 193, 200, 202, 330, 420, 424, 437, 464, 467, 470, 476, 482], "ones_lik": [0, 3, 8], "onli": [12, 13, 22, 23, 24, 25, 26, 27, 28, 34, 36, 38, 41, 42, 44, 45, 46, 47, 52, 53, 55, 59, 60, 61, 63, 64, 65, 70, 71, 78, 79, 82, 83, 86, 87, 88, 90, 93, 97, 116, 117, 118, 119, 120, 121, 122, 125, 126, 127, 128, 129, 130, 131, 134, 137, 139, 143, 144, 145, 152, 153, 154, 155, 156, 157, 158, 164, 166, 168, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 181, 182, 186, 187, 188, 190, 191, 192, 195, 198, 265, 283, 289, 306, 325, 326, 328, 335, 336, 337, 340, 343, 344, 376, 387, 389, 390, 391, 392, 393, 394, 402, 403, 404, 405, 409, 410, 413, 417, 418, 419, 420, 431, 432, 433, 434, 437, 450, 454, 458, 465, 467, 470, 473, 476, 477, 482, 483], "onto": [283, 471], "oom": 471, "op": 376, "open": [21, 77, 151, 168, 169, 316, 368, 370, 372, 373, 375, 382, 458, 465, 471, 473, 483], "openmp": [454, 459, 461, 483], "oper": [7, 16, 17, 81, 82, 83, 89, 118, 133, 138, 158, 195, 286, 331, 340, 391, 398, 420, 433, 437, 439, 443, 452, 454, 464, 465, 470, 476, 477], "operand": [82, 83], "opposit": [265, 283], "optim": [47, 82, 83, 163, 289, 454, 464, 470, 479, 483], "option": [1, 12, 13, 14, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 34, 37, 41, 43, 44, 45, 46, 49, 51, 52, 53, 54, 55, 57, 58, 59, 60, 61, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 75, 76, 77, 78, 79, 82, 84, 85, 86, 87, 88, 90, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 113, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 131, 134, 135, 137, 138, 139, 143, 144, 145, 146, 147, 153, 154, 155, 156, 157, 163, 164, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 254, 265, 285, 286, 304, 306, 315, 323, 325, 326, 328, 329, 330, 331, 332, 333, 334, 336, 337, 338, 339, 342, 343, 344, 345, 346, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 371, 372, 373, 374, 375, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 389, 390, 391, 392, 393, 394, 395, 397, 399, 400, 402, 403, 404, 405, 406, 408, 409, 410, 411, 412, 413, 414, 416, 418, 419, 420, 422, 423, 424, 425, 426, 427, 429, 430, 431, 432, 433, 434, 435, 436, 437, 441, 442, 458, 459, 461, 466, 471, 473, 475, 479, 480, 482], "ord": [164, 467], "order": [4, 12, 13, 22, 23, 24, 25, 26, 27, 28, 31, 32, 34, 44, 45, 46, 52, 53, 59, 60, 63, 64, 65, 70, 71, 75, 77, 78, 82, 83, 86, 87, 88, 90, 93, 99, 100, 101, 104, 106, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 125, 126, 127, 128, 134, 139, 143, 144, 145, 153, 154, 155, 156, 157, 163, 164, 167, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 181, 182, 185, 186, 187, 188, 189, 190, 211, 263, 264, 265, 285, 286, 298, 301, 303, 304, 309, 315, 316, 318, 320, 325, 326, 328, 332, 333, 336, 337, 339, 343, 344, 345, 353, 387, 389, 390, 392, 393, 394, 396, 399, 402, 403, 404, 405, 406, 409, 410, 413, 418, 419, 420, 431, 432, 434, 435, 452, 462, 463, 464, 481, 482, 483], "ordertyp": [4, 387, 392, 435], "ordin": 166, "ordinari": [138, 158], "org": [350, 458, 462, 463, 469, 474], "organ": 474, "orient": [340, 417], "origin": [12, 13, 22, 23, 24, 25, 26, 27, 28, 41, 44, 45, 46, 49, 51, 52, 53, 59, 60, 63, 64, 65, 70, 71, 78, 86, 87, 88, 90, 93, 116, 117, 118, 119, 120, 121, 122, 125, 127, 128, 134, 139, 143, 144, 145, 153, 154, 155, 156, 157, 164, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 182, 184, 185, 186, 187, 188, 189, 190, 197, 199, 201, 325, 326, 328, 334, 336, 337, 342, 343, 344, 389, 390, 392, 393, 394, 395, 402, 403, 404, 405, 409, 410, 413, 418, 419, 431, 432, 433, 460, 465, 470, 480, 483], "ortho": [94, 95, 96, 98, 99, 100, 101, 103, 104, 105, 106, 107, 108, 109], "orthonorm": 165, "oserror": 169, "other": [6, 12, 13, 21, 22, 23, 24, 25, 26, 27, 28, 34, 44, 45, 46, 49, 50, 52, 53, 54, 55, 59, 60, 61, 63, 64, 65, 70, 71, 76, 78, 82, 86, 87, 88, 90, 93, 99, 100, 101, 104, 106, 116, 117, 118, 119, 120, 121, 122, 125, 127, 128, 134, 135, 139, 143, 144, 145, 153, 154, 155, 156, 157, 163, 164, 168, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 182, 186, 187, 188, 189, 190, 199, 201, 265, 266, 273, 283, 306, 308, 311, 325, 326, 328, 334, 336, 337, 342, 343, 344, 364, 381, 382, 389, 390, 393, 394, 402, 403, 404, 405, 409, 410, 413, 418, 419, 424, 431, 432, 452, 458, 462, 471, 474, 477, 482], "otherwis": [15, 29, 30, 34, 35, 41, 66, 67, 76, 138, 168, 183, 184, 191, 192, 195, 196, 197, 198, 199, 201, 265, 285, 315, 334, 342, 376, 387, 392, 399, 415, 422, 423, 424, 436, 440, 454, 470, 474], "ouput": 454, "our": [458, 465, 469, 471, 476, 482, 483], "out": [12, 13, 14, 16, 17, 19, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 34, 37, 42, 43, 44, 45, 46, 47, 52, 53, 54, 55, 57, 58, 59, 60, 61, 63, 64, 65, 67, 68, 69, 70, 71, 72, 76, 78, 79, 82, 84, 85, 86, 87, 88, 90, 93, 94, 95, 96, 98, 99, 100, 101, 103, 104, 105, 106, 107, 108, 109, 113, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 127, 128, 129, 130, 134, 135, 136, 138, 139, 141, 143, 144, 145, 146, 147, 148, 151, 152, 153, 154, 155, 156, 157, 163, 166, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 186, 187, 188, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 259, 260, 261, 262, 267, 268, 269, 274, 275, 278, 286, 292, 293, 294, 299, 312, 314, 319, 320, 322, 325, 326, 328, 329, 330, 331, 333, 334, 336, 337, 338, 339, 342, 343, 344, 345, 346, 347, 348, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 371, 372, 373, 374, 375, 378, 379, 380, 381, 382, 383, 384, 385, 386, 388, 389, 390, 393, 394, 397, 402, 403, 404, 405, 406, 407, 409, 410, 412, 413, 414, 416, 417, 418, 419, 420, 422, 431, 432, 436, 437, 440, 441, 442, 461, 463, 469, 474, 479, 482, 483], "outcom": [353, 483], "outer": [0, 3, 8, 83], "outermost": [48, 54], "outlin": 470, "output": [12, 13, 14, 15, 16, 17, 19, 21, 22, 23, 24, 25, 26, 27, 28, 42, 43, 44, 45, 46, 47, 48, 52, 53, 55, 57, 59, 60, 61, 63, 64, 65, 68, 69, 70, 71, 76, 77, 78, 79, 82, 83, 84, 86, 87, 88, 90, 92, 93, 94, 95, 96, 98, 99, 100, 101, 104, 105, 106, 112, 116, 117, 118, 119, 120, 121, 122, 125, 127, 128, 129, 130, 134, 135, 136, 137, 138, 139, 140, 141, 143, 144, 145, 151, 152, 153, 154, 155, 156, 157, 163, 166, 168, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 181, 182, 183, 184, 185, 186, 187, 188, 190, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 316, 325, 326, 328, 331, 332, 334, 336, 337, 338, 342, 343, 344, 345, 346, 348, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 368, 371, 372, 373, 374, 375, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 388, 389, 390, 391, 393, 394, 395, 397, 400, 402, 403, 404, 405, 409, 410, 413, 414, 418, 419, 420, 421, 422, 431, 432, 433, 434, 436, 437, 443, 452, 454, 461, 470, 471, 479, 483], "outsid": [54, 55, 77, 131, 464], "over": [12, 13, 14, 16, 17, 19, 22, 23, 24, 25, 26, 27, 28, 41, 44, 45, 46, 52, 53, 59, 60, 63, 64, 65, 68, 69, 70, 71, 78, 79, 82, 83, 86, 87, 88, 90, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 113, 116, 117, 118, 119, 120, 121, 122, 125, 127, 128, 131, 134, 138, 139, 143, 144, 145, 153, 154, 155, 156, 157, 164, 168, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 182, 183, 185, 186, 187, 188, 190, 193, 194, 195, 196, 200, 202, 284, 285, 286, 299, 312, 325, 326, 328, 332, 336, 337, 338, 340, 343, 344, 346, 350, 365, 367, 372, 373, 375, 381, 382, 385, 389, 390, 393, 394, 395, 402, 403, 404, 405, 409, 410, 413, 414, 416, 417, 418, 419, 420, 431, 432, 434, 436, 454, 469, 470, 483], "overal": [454, 461, 470, 483], "overcom": 316, "overflow": [21, 116, 308], "overhead": [454, 470, 477], "overlap": 464, "overrid": [85, 124, 330, 442, 473], "overridden": [1, 67], "oversubscrib": 471, "overwrite_input": [184, 197, 199, 201, 334, 342], "own": [283, 306, 363, 458, 483], "owndata": 283, "owner": [283, 306, 474], "p": [88, 185, 346, 350, 353, 359, 360, 363, 423, 483], "pack": [332, 387, 434, 452], "packag": [199, 201, 334, 342, 465, 468, 471, 477, 483], "packbit": [0, 3, 8], "pad": [8, 61, 94, 95, 96, 98, 99, 100, 101, 103, 104, 106, 107, 109, 332, 434], "pade": 161, "page": [350, 458, 472], "pair": [83, 94, 95, 96, 98, 99, 100, 101, 103, 104, 105, 106, 107, 108, 109, 118], "pairwis": 467, "pairwise_dist": 467, "paper": [199, 201, 334, 342, 464], "parallel": [29, 30, 68, 69, 94, 95, 96, 98, 99, 100, 101, 103, 104, 105, 106, 107, 108, 109, 159, 160, 193, 194, 459, 470, 475, 483], "paramet": [1, 2, 6, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 254, 265, 273, 280, 281, 282, 285, 286, 289, 304, 306, 315, 316, 317, 320, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 371, 372, 373, 374, 375, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 429, 430, 431, 432, 433, 434, 435, 436, 437, 439, 440, 441, 442, 461, 482, 483], "parameter": [345, 346, 348, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 374, 379, 380, 381, 382, 383, 384, 385, 386], "parenthes": 163, "pareto": [0, 3, 8], "parse_arg": 483, "parser": 483, "part": [18, 57, 136, 141, 142, 148, 149, 159, 160, 188, 288, 302, 388, 397, 407, 458], "parti": 473, "partial": [184, 197, 468, 483], "particular": 474, "particularli": 483, "partit": [0, 3, 8, 31, 68, 263, 470, 477, 483], "pass": [14, 16, 17, 18, 19, 34, 48, 151, 169, 180, 183, 195, 198, 200, 265, 338, 349, 414, 424, 459, 461, 477, 481, 483], "past": 483, "patch": 480, "path": [83, 169, 280, 316, 459], "pathlib": [169, 280, 316], "pathlik": 169, "pattern": [41, 454, 482], "pcg64": [3, 8], "pcg64dxsm": [3, 8], "pcolor": 469, "pdf": [381, 462], "peak": [356, 381], "peebl": [350, 363], "pend": [34, 421], "pentadiagon": 464, "per": [454, 459, 461, 465, 470, 483], "percent": 364, "percentag": [454, 471, 479, 483], "percentil": [0, 3, 8, 199], "perform": [14, 19, 31, 37, 41, 54, 55, 61, 76, 82, 95, 96, 100, 101, 106, 109, 113, 158, 161, 180, 183, 196, 202, 286, 338, 340, 414, 436, 437, 462, 463, 465, 468, 470, 471, 478, 481, 483], "performa": 483, "perhap": 77, "period": 464, "perlmutt": 483, "permiss": [54, 462, 463, 469, 474], "permit": [458, 465, 474, 482], "permut": [3, 8, 320, 423], "permute_dim": [3, 8], "person": [458, 474], "peyton": 350, "pg": 164, "phase": 483, "philox": [3, 8], "pi": [18, 383, 462, 464, 470], "pick": [459, 465], "pickl": [169, 249, 254, 280, 281], "piec": 483, "piecewis": [3, 8], "pil": [465, 483], "pillow": 483, "pin": 471, "pinv": [3, 8], "pip": 473, "pipe": 479, "pixel": [81, 133, 398, 439, 469], "place": [0, 3, 8, 14, 15, 16, 17, 19, 55, 58, 68, 69, 89, 110, 137, 183, 184, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 298, 309, 320, 334, 338, 339, 340, 342, 392, 395, 397, 412, 414, 416, 422, 436, 450, 475], "plai": 483, "plain": [454, 461, 463], "plan": 461, "plane": [18, 396], "platform": [68, 69, 193, 194, 200, 202, 338, 371, 414, 473], "pleas": [36, 80, 132, 185, 428, 438, 458, 468, 471, 473], "plot": [462, 464, 465, 467, 483], "plt": [462, 464, 465, 467, 469, 483], "plu": 172, "png": [465, 483], "point": [21, 42, 47, 68, 69, 79, 82, 94, 98, 99, 103, 104, 106, 107, 126, 129, 130, 140, 152, 162, 181, 183, 193, 194, 196, 276, 304, 326, 369, 382, 397, 399, 420, 452, 454, 459, 463, 464, 467, 470, 476, 483], "poisson": [0, 3, 8, 350], "poisson_process": 350, "poli": [3, 8], "poly1d": [3, 8], "polyadd": [3, 8], "polyd": [3, 8], "polydiv": [3, 8], "polyfit": [3, 8], "polyint": [3, 8], "polymul": [3, 8], "polysub": [3, 8], "polyv": [3, 8], "pool": 471, "popul": 367, "port": [370, 470], "portion": [474, 483], "posit": [0, 3, 8, 15, 18, 21, 43, 54, 75, 89, 92, 99, 100, 101, 104, 116, 144, 147, 158, 162, 189, 311, 345, 353, 356, 364, 366, 369, 395, 397, 400, 422, 463, 483], "possess": [6, 273], "possibl": [12, 13, 22, 23, 24, 25, 26, 27, 28, 39, 40, 44, 45, 46, 47, 52, 53, 59, 60, 63, 64, 65, 70, 71, 78, 83, 86, 87, 88, 90, 93, 116, 117, 118, 119, 120, 121, 122, 125, 127, 128, 131, 134, 139, 143, 144, 145, 153, 154, 155, 156, 157, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 182, 186, 187, 188, 190, 265, 283, 325, 326, 328, 336, 337, 343, 344, 389, 390, 392, 393, 394, 402, 403, 404, 405, 408, 409, 410, 413, 418, 419, 423, 431, 432, 458, 461, 471, 474, 475, 477, 482], "possibli": [317, 476], "post": 471, "potenti": [276, 476, 482], "pow": [3, 8, 248], "power": [0, 3, 8, 116, 162, 483], "pp": [199, 201, 334, 342, 363], "pr": 458, "practic": [471, 481], "pre": [34, 421, 458, 459], "precis": [41, 67, 68, 69, 82, 116, 180, 193, 194, 200, 202, 308, 316, 317, 338, 371, 414, 422, 454, 476, 483], "predict": 470, "prefer": [79, 471], "preload": 454, "preload_cudalib": 443, "prepend": [48, 76, 137, 181, 421], "prescrib": 471, "present": [16, 17, 79, 138, 195, 198, 420, 437], "preserv": [14, 19, 34, 38, 39, 40, 55, 57, 76, 82, 113, 114, 115, 181, 184, 197, 265, 286, 304, 323, 399, 422], "press": 164, "pressur": 265, "prevent": [458, 483], "previou": [41, 458], "previous": [283, 483], "price": [466, 483], "primarili": 48, "principl": [350, 363], "print": [77, 454, 461, 462, 463, 464, 467, 468, 469, 479, 483, 484], "printabl": 83, "printopt": [3, 8], "prior": [76, 459, 474, 483], "prior_distance_sum": 467, "probabl": [2, 67, 131, 184, 197, 345, 346, 350, 351, 353, 360, 363, 381, 383, 386], "problem": [316, 458, 468, 470, 471, 477, 482, 483], "proc": 471, "proce": 483, "process": [42, 158, 350, 460, 471, 482, 483], "processor": [461, 470, 471, 482, 483], "procur": 474, "prod": [0, 3, 8, 200, 308], "produc": [6, 283, 315, 316, 340, 417, 469, 476, 483], "product": [68, 79, 83, 138, 151, 163, 181, 193, 200, 202, 278, 299, 308, 331, 338, 420, 437, 452, 463, 470, 472, 474, 483], "product_along_axi": 338, "prof": 470, "profil": 464, "profit": 474, "program": [459, 470, 471, 472, 475, 480, 483, 484], "project": [443, 458, 462, 473], "promot": [111, 116, 181, 421, 474], "prone": [470, 483], "propag": [68, 69, 193, 194, 476], "proper": [452, 470], "properli": [306, 483], "properti": [6, 203, 266, 273, 276, 279, 283, 284, 288, 291, 295, 296, 302, 307, 308, 311, 320, 448], "proport": 386, "propos": 458, "protocol": 424, "prototyp": 85, "provid": [1, 8, 12, 13, 22, 23, 24, 25, 26, 27, 28, 29, 30, 44, 45, 46, 52, 53, 54, 58, 59, 60, 63, 64, 65, 70, 71, 78, 80, 81, 82, 83, 86, 87, 88, 90, 93, 116, 117, 118, 119, 120, 121, 122, 125, 127, 128, 131, 133, 134, 139, 143, 144, 145, 146, 147, 153, 154, 155, 156, 157, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 181, 182, 183, 186, 187, 188, 190, 191, 192, 196, 200, 207, 306, 320, 325, 326, 328, 336, 337, 343, 344, 368, 369, 371, 389, 390, 393, 394, 398, 402, 403, 404, 405, 409, 410, 412, 413, 416, 418, 419, 431, 432, 433, 434, 439, 458, 471, 472, 474, 482, 483], "pseudonym": 458, "ptp": [3, 8], "public": 458, "publish": [471, 474], "pull": [1, 349, 458, 459], "purpos": [164, 474], "put": [0, 3, 8, 335, 340, 341, 462, 483], "put_along_axi": [0, 3, 8], "put_result": 462, "putmask": [0, 3, 8], "pwd": 459, "py": [459, 461, 462, 471, 473, 474, 475, 479, 480, 483, 484], "pyarray_resolvewritebackifcopi": [283, 306], "pypi": 483, "pyplot": [462, 464, 465, 467, 469, 483], "python": [21, 118, 276, 289, 308, 315, 316, 317, 459, 462, 463, 469, 472, 473, 475, 476, 477, 482, 483, 484], "python3": 459, "q": [165, 199, 201, 334, 342], "qo": 483, "qr": [0, 3, 8], "quadrant": 27, "quadrat": 483, "quantil": [0, 3, 8, 199, 201, 334], "quantiti": 483, "queri": [471, 483], "question": [72, 472, 476], "quick": [316, 480], "quickli": [151, 463], "quicksort": [32, 406], "r": [81, 133, 165, 199, 201, 334, 342, 363, 398, 439, 462, 483], "r0": 137, "rad2deg": [0, 3, 8, 71], "radian": [3, 8, 18, 70, 71, 343], "raindrop": 350, "rainstorm": 350, "rais": [14, 16, 17, 19, 41, 43, 48, 54, 57, 75, 77, 110, 116, 159, 160, 162, 164, 165, 166, 167, 169, 183, 184, 191, 192, 195, 197, 198, 199, 200, 201, 267, 283, 300, 314, 334, 337, 338, 339, 342, 348, 366, 408, 411, 414, 416, 422], "ram": 484, "ran": 471, "rand": [0, 3, 8, 483], "randint": [0, 3, 8, 371], "randn": [0, 3, 8, 483], "random": [0, 443, 452, 467, 483], "random_integ": [0, 3, 8], "random_sampl": [0, 3, 8, 370, 373, 375, 382], "random_se": 467, "randomli": [355, 369, 467], "randomst": [3, 8], "ranf": [3, 8], "rang": [18, 21, 54, 77, 131, 185, 339, 359, 364, 416, 452, 467, 468, 469, 470, 477, 482, 483], "rank": [91, 166, 386, 470, 473, 483], "raphson": 466, "rare": 458, "rate": [350, 462, 483], "rather": [21, 75, 283, 454, 477, 482], "ratio": 351, "ration": 452, "ravel": [0, 3, 8, 112, 164, 285], "ravel_multi_index": [3, 8], "raw": 315, "rawdata": 254, "rayleigh": [0, 3, 8], "rbf": 465, "re": [20, 39, 40, 58, 112, 395, 483], "reach": [48, 360, 458], "read": [169, 280, 283, 387, 392, 454, 465, 483], "readi": 458, "readonli": 51, "real": [0, 3, 8, 18, 35, 98, 104, 105, 106, 107, 108, 109, 136, 148, 158, 397, 407, 452, 458, 470], "real_if_clos": [3, 8], "realli": [94, 99, 104, 105, 107, 108, 458, 482], "realm": 481, "realm_default_arg": 475, "rearrang": 452, "reason": [34, 106, 458], "rebuild": [81, 133, 398, 439], "recarrai": [3, 8], "receiv": 470, "reciproc": [0, 3, 8], "recommend": [2, 54, 477, 481, 483], "reconstruct": 433, "record": [3, 8, 458], "recov": 316, "recreat": 317, "recurs": 76, "recv": 470, "recv_typ": 470, "red": [464, 467], "redistribut": [458, 474], "reduc": [14, 16, 17, 19, 29, 30, 41, 183, 184, 185, 191, 192, 195, 196, 197, 198, 199, 200, 201, 202, 265, 334, 338, 342, 414, 436, 464, 470, 471, 483], "reduct": [14, 19, 199, 201, 334, 342, 436, 481, 483], "refer": [14, 19, 36, 49, 51, 68, 69, 80, 92, 95, 96, 100, 101, 106, 109, 132, 146, 147, 164, 183, 185, 193, 194, 196, 199, 201, 207, 259, 260, 261, 262, 263, 264, 267, 268, 269, 270, 271, 277, 278, 283, 292, 293, 294, 297, 298, 299, 300, 301, 303, 309, 310, 311, 312, 313, 314, 319, 321, 322, 334, 338, 342, 350, 363, 384, 387, 392, 397, 414, 424, 428, 436, 438, 467, 470, 471, 472, 482, 483], "referenc": 306, "reflect": [283, 471], "regard": 473, "regardless": [19, 132, 438, 471], "region": 471, "reinterpret": 323, "reject": 458, "rel": [15, 67, 140], "relabel": 467, "relat": [345, 470, 482, 483], "relationship": [67, 384], "releas": [458, 474, 477, 483], "relev": [168, 308], "reli": 61, "remain": [12, 13, 19, 22, 23, 24, 25, 26, 27, 28, 44, 45, 46, 52, 53, 59, 60, 63, 64, 65, 70, 71, 78, 86, 87, 88, 90, 93, 109, 116, 117, 118, 119, 120, 121, 122, 125, 127, 128, 131, 134, 139, 143, 144, 145, 153, 154, 155, 156, 157, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 182, 186, 187, 188, 189, 190, 199, 201, 283, 325, 326, 328, 334, 336, 337, 342, 343, 344, 364, 389, 390, 392, 393, 394, 402, 403, 404, 405, 409, 410, 413, 418, 419, 431, 432], "remaind": [0, 3, 8, 118, 121, 187], "remot": 483, "remov": [29, 30, 75, 89, 181, 191, 192, 195, 310, 338, 411, 414, 422, 470, 476], "reopen": 458, "reorder": [113, 189, 286], "rep": 421, "repeat": [0, 3, 8, 67, 95, 96, 100, 101, 106, 110, 159, 160, 162, 185, 335, 339, 341, 421, 483], "repeated_arrai": 391, "repeatedli": [469, 483], "repetit": [391, 421], "replac": [55, 193, 194, 300, 339, 416, 463, 471, 472, 483, 484], "replic": 421, "repo": 458, "report": 454, "report_coverag": 443, "report_dump_callstack": 443, "report_dump_csv": 443, "repositori": [458, 470], "repr": 250, "repres": [41, 67, 82, 99, 137, 146, 147, 185, 332, 356, 434, 436, 464, 465, 467, 470, 471, 476], "represent": [83, 137, 450], "reproduc": [467, 474], "req": 470, "request": [350, 365, 458, 467, 470, 471], "requir": [3, 8, 34, 169, 454, 459, 460, 462, 463, 469, 470, 471, 473, 479, 481, 482], "requri": 483, "res2": [39, 40], "rese": 376, "research": [462, 470, 483], "resembl": 380, "reserv": [461, 471, 474, 483], "reset": 6, "reshap": [0, 3, 8, 81, 89, 307, 320, 398, 439, 471, 476], "reshaped_arrai": 392, "resid": 181, "resiz": [3, 8, 89, 483], "resolut": [464, 470], "resourc": [462, 471, 481, 484], "respect": [61, 126, 181, 306, 464, 471, 483], "respons": [458, 470, 483], "rest": 36, "restor": 395, "restrict": 474, "result": [6, 12, 13, 14, 16, 17, 18, 19, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 34, 41, 43, 44, 45, 46, 52, 53, 54, 55, 58, 59, 60, 63, 64, 65, 67, 68, 69, 70, 71, 72, 75, 76, 77, 78, 83, 85, 86, 87, 88, 89, 90, 91, 93, 105, 108, 111, 116, 117, 118, 119, 120, 121, 122, 124, 125, 127, 128, 131, 134, 137, 138, 139, 143, 144, 145, 146, 147, 153, 154, 155, 156, 157, 159, 160, 164, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 265, 304, 316, 323, 325, 326, 328, 330, 331, 332, 333, 334, 336, 337, 338, 340, 342, 343, 344, 348, 368, 371, 372, 373, 375, 380, 389, 390, 392, 393, 394, 397, 399, 402, 403, 404, 405, 406, 408, 409, 410, 412, 413, 414, 416, 417, 418, 419, 420, 421, 422, 424, 431, 432, 433, 436, 437, 442, 454, 461, 462, 463, 464, 469, 470, 476, 477, 483], "result_typ": [3, 8, 462], "ret": 38, "retain": [12, 13, 22, 23, 24, 25, 26, 27, 28, 44, 45, 46, 52, 53, 59, 60, 63, 64, 65, 70, 71, 78, 86, 87, 88, 90, 93, 116, 117, 118, 119, 120, 121, 122, 125, 127, 128, 134, 139, 143, 144, 145, 153, 154, 155, 156, 157, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 182, 186, 187, 188, 190, 325, 326, 328, 336, 337, 343, 344, 389, 390, 393, 394, 402, 403, 404, 405, 409, 410, 413, 418, 419, 431, 432, 474], "retstep": 168, "return": [2, 6, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 204, 205, 206, 207, 208, 210, 211, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 246, 247, 248, 250, 251, 252, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 268, 269, 271, 273, 277, 278, 281, 284, 285, 286, 289, 292, 293, 294, 297, 299, 301, 303, 304, 308, 312, 313, 315, 317, 318, 319, 320, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 336, 337, 338, 340, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 439, 440, 441, 442, 450, 462, 463, 465, 467, 468, 469, 471, 481, 483], "return_count": 433, "return_index": 433, "return_invers": 433, "retval": 41, "revers": [77, 113, 114, 115, 286, 320, 332, 387, 396, 423, 434], "review": [460, 471, 473], "rf": 483, "rfft": [0, 3, 8, 104, 109], "rfft2": [0, 3, 8, 105], "rfftfreq": [3, 8], "rfftn": [0, 3, 8, 106, 107, 108], "rh": [278, 464], "right": [55, 57, 75, 77, 114, 134, 159, 304, 381, 393, 399, 422, 458, 464, 470, 473, 474], "right_shift": [0, 3, 8], "rightmost": 131, "rint": [0, 3, 8], "rippl": 42, "risk": [462, 470, 483], "river": 470, "rk_hypergeometric_hrua": 474, "rk_hypergeometric_hyp": 474, "rk_triangular": 474, "rm": 483, "rn": 137, "rng": 467, "rober": 483, "robert": 474, "roll": [0, 3, 8], "rollaxi": [3, 8], "root": [3, 8, 52, 409, 459], "rot90": [0, 3, 8], "rotat": 396, "roughli": 483, "round": [0, 21, 382, 394, 452], "rounded_arrai": 397, "roundoff": 118, "routin": [443, 450, 454, 459], "row": [34, 67, 92, 114, 115, 135, 163, 285, 311, 387, 398, 424, 426, 435, 438, 439, 465, 470, 483], "row_stack": [3, 8], "rowvar": 67, "rsqrt2pi": 462, "rst": 311, "rt": 483, "rtol": [15, 140], "rule": [21, 41, 48, 111, 364, 477], "run": [180, 353, 458, 459, 460, 469, 471, 472, 473, 475, 479, 480, 481, 482, 484], "run_kmean": 467, "runfil": 483, "runtim": [195, 198, 454, 461, 470, 471, 475, 477, 480, 482], "runtimeerror": 283, "runtimewarn": [462, 468, 471], "rv": 474, "s0": 483, "s_0": 483, "s_0n": 483, "safe": [58, 82, 169, 181, 265], "sai": [471, 477], "salloc": 483, "same": [14, 15, 16, 17, 19, 20, 29, 30, 31, 32, 34, 35, 41, 43, 48, 54, 56, 58, 61, 67, 68, 69, 75, 76, 77, 81, 85, 91, 99, 100, 101, 106, 124, 126, 131, 133, 146, 147, 148, 162, 163, 183, 184, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 265, 279, 303, 304, 308, 311, 318, 320, 323, 330, 332, 333, 334, 335, 338, 341, 342, 387, 391, 395, 397, 398, 399, 400, 406, 407, 412, 414, 416, 420, 422, 425, 427, 430, 434, 435, 436, 439, 442, 458, 462, 463, 465, 467, 468, 469, 471, 473, 480, 482, 483], "same_kind": [12, 13, 22, 23, 24, 25, 26, 27, 28, 44, 45, 46, 52, 53, 58, 59, 60, 63, 64, 65, 70, 71, 78, 82, 86, 87, 88, 90, 93, 116, 117, 118, 119, 120, 121, 122, 125, 127, 128, 134, 139, 143, 144, 145, 153, 154, 155, 156, 157, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 181, 182, 186, 187, 188, 190, 265, 325, 326, 328, 336, 337, 343, 344, 389, 390, 393, 394, 402, 403, 404, 405, 409, 410, 413, 418, 419, 431, 432], "sampl": [42, 47, 67, 102, 126, 129, 131, 152, 168, 199, 201, 334, 342, 345, 346, 348, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 371, 372, 373, 374, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 443, 452], "satisfi": [34, 77, 91, 265, 386, 400, 468, 471, 482], "save": [3, 8, 184, 197, 199, 201, 334, 342, 454, 458, 464, 479], "savetxt": [3, 8], "savez": [3, 8], "savez_compress": [3, 8], "scalabl": [470, 471, 482, 483], "scalar": [12, 13, 15, 16, 17, 18, 22, 23, 24, 25, 26, 27, 28, 35, 38, 44, 45, 46, 48, 52, 53, 55, 59, 60, 63, 64, 65, 70, 71, 76, 78, 79, 86, 87, 88, 90, 93, 110, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 131, 134, 136, 138, 139, 140, 143, 144, 145, 150, 153, 154, 155, 156, 157, 166, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 185, 186, 187, 188, 190, 195, 198, 199, 200, 201, 202, 282, 289, 304, 317, 324, 325, 326, 328, 334, 336, 337, 338, 342, 343, 344, 345, 346, 348, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 374, 377, 379, 380, 381, 382, 383, 384, 385, 386, 388, 389, 390, 393, 394, 399, 400, 402, 403, 404, 405, 409, 410, 413, 414, 416, 418, 419, 420, 431, 432, 450, 481, 482], "scale": [83, 94, 95, 96, 98, 99, 100, 101, 103, 104, 105, 106, 107, 108, 109, 350, 352, 354, 356, 357, 363, 364, 374, 378, 379, 384, 385, 465, 470, 471, 472, 482, 483], "scatter": [467, 483], "schedul": [462, 463, 469, 471], "scheme": 466, "schole": [466, 473], "scientif": [470, 471, 483], "scientist": 470, "scikit": 459, "scipi": [161, 364, 465, 483], "scp": 483, "script": [459, 461, 471, 475, 480, 484], "seamlessli": 471, "search": [83, 443, 452, 472], "searchsort": [0, 3, 8, 77], "second": [41, 48, 61, 75, 79, 81, 83, 100, 101, 116, 126, 131, 132, 133, 146, 147, 180, 181, 185, 331, 337, 396, 398, 407, 415, 420, 422, 437, 439, 464, 482, 483], "second_cond": 482, "section": [34, 36, 96, 101, 106, 109, 471, 483], "secur": [169, 483], "see": [12, 13, 15, 16, 17, 22, 23, 24, 25, 26, 27, 28, 34, 44, 45, 46, 48, 52, 53, 55, 59, 60, 63, 64, 65, 67, 68, 69, 70, 71, 72, 74, 78, 82, 86, 87, 88, 90, 93, 94, 95, 96, 98, 99, 100, 101, 103, 104, 105, 106, 107, 108, 109, 116, 117, 118, 119, 120, 121, 122, 125, 127, 128, 131, 134, 139, 140, 143, 144, 145, 153, 154, 155, 156, 157, 164, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 182, 185, 186, 187, 188, 190, 193, 194, 195, 198, 200, 202, 265, 273, 306, 320, 325, 326, 328, 336, 337, 338, 343, 344, 368, 371, 389, 390, 393, 394, 402, 403, 404, 405, 409, 410, 413, 414, 418, 419, 426, 427, 429, 430, 431, 432, 433, 436, 448, 450, 459, 461, 462, 463, 464, 465, 468, 469, 471, 473, 474, 476, 482, 483, 484], "seed": [0, 1, 3, 8, 349, 452, 467], "seedsequ": [3, 8], "seek": [169, 468], "seem": 458, "seen": 345, "segment": 283, "seldom": 116, "select": [0, 3, 8, 16, 17, 57, 163, 195, 269, 355, 411, 416, 436, 467, 470, 483], "selectkind": [31, 333], "selector": 161, "self": [6, 203, 204, 205, 206, 207, 208, 210, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 246, 247, 248, 250, 251, 252, 253, 255, 256, 257, 258, 269, 283], "sell": 474, "semant": 131, "send": 470, "send_typ": 470, "sens": [81, 133, 398, 439, 476], "sep": 316, "separ": [82, 316, 397, 459, 461, 479, 482, 483], "sequenc": [18, 31, 34, 39, 40, 48, 50, 54, 56, 58, 81, 83, 95, 96, 100, 101, 105, 106, 108, 109, 131, 133, 137, 151, 163, 168, 184, 189, 197, 199, 201, 254, 333, 334, 335, 342, 365, 396, 398, 400, 412, 420, 421, 439, 477], "seri": 359, "serial": 459, "servic": [461, 474], "session": 483, "set": [12, 13, 14, 16, 17, 19, 22, 23, 24, 25, 26, 27, 28, 29, 30, 41, 44, 45, 46, 52, 53, 59, 60, 63, 64, 65, 67, 70, 71, 73, 78, 86, 87, 88, 90, 93, 116, 117, 118, 119, 120, 121, 122, 125, 127, 128, 134, 135, 139, 143, 144, 145, 153, 154, 155, 156, 157, 164, 168, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 182, 183, 184, 186, 187, 188, 190, 191, 192, 195, 196, 197, 198, 199, 200, 201, 202, 253, 265, 267, 283, 306, 307, 323, 325, 326, 328, 334, 336, 337, 338, 341, 342, 343, 344, 355, 364, 389, 390, 393, 394, 402, 403, 404, 405, 409, 410, 413, 414, 418, 419, 431, 432, 436, 443, 452, 458, 459, 464, 468, 470, 471, 476, 477, 482, 483], "set_bit_gener": [3, 8], "set_devic": 470, "set_printopt": [3, 8], "set_stat": [3, 8], "set_titl": [465, 483], "set_xtick": [465, 483], "set_ytick": [465, 483], "setbufs": [3, 8], "setdevic": 470, "setdiff1d": [3, 8], "seterr": [3, 8], "seterrcal": [3, 8], "setfield": [0, 8], "setflag": [0, 8, 283], "setup": 468, "setxor1d": [3, 8], "sever": [459, 471, 483], "sfc64": [3, 8], "sh": [459, 483], "shall": 474, "shallow": 470, "shape": [0, 2, 3, 4, 6, 8, 12, 13, 14, 16, 17, 19, 20, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 40, 41, 43, 44, 45, 46, 48, 50, 51, 52, 53, 54, 55, 57, 58, 59, 60, 63, 64, 65, 68, 69, 70, 71, 73, 75, 76, 77, 78, 79, 81, 84, 85, 86, 87, 88, 89, 90, 92, 93, 95, 96, 97, 100, 101, 102, 105, 106, 108, 109, 113, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 131, 133, 134, 137, 138, 139, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 161, 162, 163, 166, 167, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 254, 265, 273, 283, 286, 303, 304, 308, 320, 324, 325, 326, 328, 329, 330, 332, 333, 334, 336, 337, 338, 340, 341, 342, 343, 344, 345, 346, 348, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 371, 372, 373, 374, 375, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 389, 390, 391, 392, 393, 394, 395, 397, 398, 399, 402, 403, 404, 405, 406, 407, 409, 410, 411, 412, 413, 414, 416, 418, 419, 420, 421, 422, 424, 425, 430, 431, 432, 434, 435, 436, 437, 439, 440, 441, 442, 452, 463, 467, 481, 482, 483], "share": [273, 470, 471, 483], "shares_memori": [3, 8], "sharp": 483, "sharper": 356, "shift": [97, 102, 155, 364, 393, 395], "short": [3, 8, 283, 315], "shorter": [98, 104, 339], "should": [29, 30, 34, 36, 48, 54, 67, 75, 76, 82, 83, 99, 100, 101, 106, 151, 181, 189, 191, 192, 265, 332, 392, 416, 422, 434, 435, 437, 454, 462, 463, 464, 469, 477, 482, 483], "show": [315, 459, 464, 467, 479, 483], "show_config": [3, 8], "show_runtim": [3, 8], "showcas": 483, "shown": [464, 468, 480, 482, 483], "shuffl": [3, 8], "side": [77, 126, 304, 399, 464, 470], "sigma": [358, 483], "sign": [0, 3, 8, 15, 54, 63, 202, 338, 368, 371, 414], "signal": [42, 98, 103, 350, 363, 465, 483], "signatur": [180, 181, 458], "signbit": [0, 3, 8], "signedinteg": [3, 8], "signific": 470, "significantli": [462, 468, 470, 471, 483], "signoff": 458, "similar": [34, 42, 180, 289, 356, 476, 477, 483], "similarli": 470, "simpl": [67, 82, 317, 452, 463, 470, 483, 484], "simple_mm": 483, "simpler": [471, 483], "simplest": 461, "simpli": [131, 320, 458, 459, 483], "simplifi": [273, 364, 470, 483], "simul": 470, "simultan": [283, 395], "sin": [0, 3, 8, 464], "sinc": [3, 8, 104, 286, 317, 340, 464, 465, 471, 476, 482, 483], "sine": [24, 25, 404, 405, 464], "sing": 164, "singl": [2, 3, 8, 14, 16, 17, 19, 41, 48, 49, 50, 51, 56, 67, 83, 113, 114, 115, 126, 140, 163, 165, 166, 167, 169, 183, 185, 195, 196, 199, 201, 202, 280, 283, 284, 286, 289, 298, 306, 316, 334, 338, 342, 345, 346, 348, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 371, 372, 373, 374, 375, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 396, 411, 414, 420, 436, 454, 468, 471, 472, 482], "singleton": 89, "singular": [164, 166, 167], "sinh": [0, 3, 8], "site": 479, "situat": [350, 458, 471], "sixth": 464, "size": [2, 6, 14, 16, 17, 19, 21, 29, 30, 36, 41, 43, 48, 57, 61, 68, 69, 73, 75, 77, 83, 91, 126, 164, 168, 169, 180, 183, 184, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 289, 291, 316, 334, 335, 338, 341, 342, 345, 346, 348, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 368, 370, 371, 372, 373, 374, 375, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 395, 414, 429, 434, 436, 454, 464, 470, 471, 477, 483], "skbuild_build_opt": 459, "skip": 311, "slice": [16, 17, 57, 161, 191, 192, 193, 194, 195, 198, 200, 202, 269, 283, 340, 417, 454, 464, 470], "slide": 483, "slightli": [47, 161], "slogdet": [3, 8], "slower": 482, "slowest": [387, 392], "small": [15, 161, 469, 471, 477, 480, 482], "smaller": [55, 67, 76, 94, 95, 96, 99, 100, 101, 103, 106, 107, 109, 118, 131, 184, 197, 199, 201, 334, 335, 341, 342, 454], "smallest": [164, 364], "smi": 471, "snippet": [185, 470], "so": [19, 48, 76, 116, 118, 131, 149, 168, 185, 283, 306, 316, 332, 421, 467, 474, 482, 483], "sobel": [465, 483], "sobol": 465, "softwar": [462, 463, 469, 471, 473, 474], "solut": [166, 464, 468, 470], "solv": [0, 3, 8, 452, 464, 468, 470, 483], "solver": 470, "some": [21, 34, 91, 266, 283, 306, 316, 384, 440, 454, 458, 459, 463, 469, 471, 476, 477, 482, 483], "somebodi": 458, "sometim": [317, 352, 379, 476], "soon": 458, "sort": [0, 8, 32, 167, 184, 197, 199, 201, 264, 304, 333, 334, 342, 399, 407, 408, 417, 433, 443, 452, 483], "sort_complex": [0, 3, 8], "sorter": [304, 399], "sortsid": 399, "sorttyp": [32, 406], "sourc": [189, 416, 417, 458, 460, 470, 474, 480, 483], "south": [469, 483], "space": [3, 8, 21, 97, 126, 168, 454, 464], "sparingli": 482, "spars": [137, 185], "speak": 164, "spec": 471, "special": [7, 345, 380, 387, 470, 474], "specif": [2, 79, 454, 462, 463, 469, 470, 474, 483], "specifi": [14, 19, 20, 21, 29, 30, 31, 32, 34, 41, 43, 54, 55, 58, 67, 68, 69, 75, 82, 83, 94, 95, 96, 98, 99, 100, 101, 103, 104, 106, 107, 109, 113, 126, 164, 168, 181, 183, 184, 191, 192, 193, 194, 195, 196, 197, 199, 200, 201, 202, 265, 277, 280, 286, 289, 300, 323, 334, 338, 339, 340, 342, 346, 351, 352, 354, 355, 356, 357, 358, 359, 360, 362, 364, 368, 379, 383, 386, 387, 396, 397, 412, 414, 416, 417, 420, 422, 433, 434, 436, 454, 461, 467, 468, 471, 475, 479, 483], "spectral": 464, "spectrum": [97, 98], "speed": [289, 316], "spelt": 48, "spent": 477, "split": [0, 3, 8, 36, 80, 132, 438, 452], "spread": [363, 436, 483], "sqrt": [0, 3, 8, 462, 465, 483], "sqrt_t": 462, "squar": [0, 3, 8, 135, 158, 159, 160, 162, 166, 180, 348, 351, 361, 362, 409, 467], "squeez": [0, 3, 8, 89], "srun": [475, 483], "ssh": 483, "stabl": [32, 161, 406], "stack": [0, 3, 8, 56, 81, 133, 181, 398, 439, 454, 471], "stackoverflow": 476, "stage": 460, "standard": [289, 308, 320, 348, 358, 363, 364, 369, 377, 378, 379, 380, 450, 452, 458, 462, 463, 469, 475, 477, 480, 483], "standard_cauchi": [0, 3, 8], "standard_exponenti": [0, 3, 8], "standard_gamma": [0, 3, 8], "standard_norm": [3, 8, 380], "standard_t": [0, 3, 8], "start": [21, 83, 99, 168, 200, 202, 276, 338, 414, 458, 461, 462, 463, 464, 469, 470, 477, 482, 483], "start_tim": 483, "state": [254, 372, 373, 375, 452], "statement": [465, 468, 476, 482, 484], "statist": [199, 201, 334, 342, 345, 443, 452], "statistician": [199, 201, 334, 342], "std": [3, 8], "stdout": [454, 461], "stecil": 464, "stegun": 462, "stencil": [464, 466, 470], "step": [21, 83, 168, 311, 458, 459, 470, 476, 477, 482, 483], "stephen": 474, "still": [41, 164, 185, 483], "stock": [462, 483], "stoke": 470, "stop": [21, 168, 462, 463, 469, 482, 483], "storag": 316, "store": [12, 13, 22, 23, 24, 25, 26, 27, 28, 44, 45, 46, 52, 53, 59, 60, 63, 64, 65, 70, 71, 78, 86, 87, 88, 90, 93, 116, 117, 118, 119, 120, 121, 122, 125, 127, 128, 134, 139, 143, 144, 145, 146, 147, 153, 154, 155, 156, 157, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 181, 182, 186, 187, 188, 190, 311, 325, 326, 328, 331, 336, 337, 343, 344, 389, 390, 393, 394, 402, 403, 404, 405, 409, 410, 413, 418, 419, 431, 432, 464, 483], "str": [12, 13, 22, 23, 24, 25, 26, 27, 28, 31, 32, 44, 45, 46, 52, 53, 58, 59, 60, 63, 64, 65, 70, 71, 78, 82, 83, 86, 87, 88, 90, 93, 94, 95, 96, 98, 99, 100, 101, 103, 104, 105, 106, 107, 108, 109, 116, 117, 118, 119, 120, 121, 122, 125, 127, 128, 134, 139, 143, 144, 145, 153, 154, 155, 156, 157, 161, 164, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 182, 185, 186, 187, 188, 190, 199, 201, 254, 255, 265, 280, 300, 316, 318, 325, 326, 328, 333, 334, 336, 337, 339, 342, 343, 344, 389, 390, 393, 394, 402, 403, 404, 405, 406, 409, 410, 413, 418, 419, 431, 432, 454, 465, 467, 483], "str_": [3, 8], "straightforward": [482, 483], "strategi": [454, 483], "stream": 1, "streamlin": 483, "strict": [454, 474], "strictli": 164, "stride": [4, 273, 283, 306, 387, 459], "strike": [462, 483], "string": [61, 161, 169, 185, 254, 280, 281, 283, 306, 316, 347, 450, 459], "string_repr": 83, "strong": 458, "structur": [433, 470, 477, 482, 483], "student": 380, "studi": [384, 466], "style": [283, 285, 387, 435], "sub": [14, 16, 17, 19, 34, 36, 75, 80, 132, 183, 195, 198, 200, 265, 323, 338, 408, 414, 422, 424, 438], "subarrai": [137, 433], "subclass": 37, "subdomain": 470, "subgrid": 470, "subject": 474, "sublicens": 474, "submit": 458, "subok": [34, 49, 51, 265], "subplot": [465, 483], "subscript": [82, 83], "subsequ": 283, "subset": [355, 411, 477], "substanti": [470, 474], "substitut": [468, 474], "subtract": [0, 3, 8, 482], "subtyp": 387, "succe": 482, "success": [346, 353, 360], "suggest": [308, 458, 471, 483], "suit": [461, 483], "suitabl": [289, 304, 320, 340, 399, 417, 483], "sum": [0, 3, 8, 41, 61, 69, 79, 99, 131, 138, 164, 174, 175, 194, 200, 202, 311, 319, 348, 355, 362, 420, 422, 452, 467, 468, 483], "sum_": 164, "sum_along_axi": 414, "sum_along_diagon": 422, "sum_of_weight": 41, "summar": [199, 201, 334, 342], "summari": [3, 8, 461], "summat": [47, 82, 83], "supercomputerloc": 483, "superpod": 472, "suppli": [146, 147, 161, 163, 369], "support": [31, 32, 61, 77, 79, 82, 165, 167, 169, 181, 185, 283, 316, 323, 333, 340, 353, 391, 395, 406, 420, 424, 433, 459, 465, 473, 475, 481, 483], "suppos": 54, "sure": [467, 477], "surfac": 470, "surpris": 76, "surround": 470, "svd": [0, 8], "svdval": 8, "swap": [61, 97], "swapax": [0, 3, 8], "switch": 468, "symmetr": [104, 158, 483], "symmetri": [98, 103], "synchron": [470, 483], "sysmem": 483, "system": [166, 180, 464, 468, 470, 471, 473, 476, 483], "system_mem": 471, "t": [67, 77, 113, 114, 115, 283, 320, 339, 345, 380, 424, 448, 461, 462, 463, 467, 476, 482, 483], "tabl": [164, 386], "tack": 458, "tackl": [470, 483], "tail": 356, "take": [0, 2, 3, 8, 56, 57, 151, 180, 335, 340, 387, 392, 417, 458, 471, 483], "take_along_axi": [0, 3, 8], "taken": [41, 54, 75, 76, 83, 98, 104, 106, 108, 109, 183, 196, 355, 400, 422, 424, 426, 429, 437, 465, 477], "tall": 110, "tan": [0, 3, 8], "tangent": [26, 27, 28, 418, 419], "tanh": [0, 3, 8], "taper": [42, 47, 129, 130, 152], "target": [339, 341, 459], "task": [454, 462, 463, 469, 470, 477, 483], "taylor": 161, "tdma": 464, "teach": [464, 467, 468], "technic": 471, "techniqu": 483, "tell": [311, 471], "templat": 483, "temporari": 454, "tend": 477, "tensor": [83, 420, 454, 459], "tensordot": [0, 3, 8], "tensorinv": [3, 8], "tensorsolv": [3, 8], "term": [47, 79, 83, 99, 100, 101, 104, 138, 181, 420, 437, 464, 473], "termin": [461, 468, 483], "test": [0, 14, 19, 140, 141, 143, 144, 145, 146, 147, 283, 348, 351, 452, 454, 460, 467, 469, 470, 479, 480], "test_view": 461, "test_vstack": 461, "test_wher": 461, "test_window": 461, "testsystem": 461, "text": [316, 458], "tf32": 454, "th": [72, 76, 92, 126, 137, 199, 201, 320, 334, 342, 400, 425, 428], "than": [21, 43, 47, 49, 51, 54, 55, 57, 61, 68, 69, 75, 79, 80, 94, 95, 96, 98, 99, 100, 101, 103, 104, 106, 107, 109, 110, 114, 115, 131, 138, 161, 181, 184, 185, 193, 194, 197, 199, 200, 201, 202, 334, 335, 338, 339, 341, 342, 351, 355, 364, 381, 382, 386, 403, 411, 412, 414, 420, 422, 434, 437, 454, 463, 468, 476, 477, 482, 483], "thei": [13, 15, 27, 44, 45, 46, 49, 63, 68, 69, 76, 77, 78, 86, 116, 118, 119, 120, 121, 125, 127, 128, 134, 153, 154, 155, 156, 157, 174, 175, 176, 178, 179, 181, 182, 186, 187, 190, 193, 194, 304, 326, 328, 337, 346, 387, 390, 393, 399, 413, 431, 450, 465, 467, 477, 482, 483], "them": [56, 450, 458, 467, 471, 482, 483], "themselv": [273, 464], "theorem": 363, "theoret": 483, "theori": 474, "therefor": 353, "theta": 352, "thi": [12, 13, 14, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 33, 34, 37, 41, 43, 44, 45, 46, 48, 49, 51, 52, 53, 54, 55, 58, 59, 60, 63, 64, 65, 70, 71, 72, 73, 76, 77, 78, 79, 81, 82, 83, 86, 87, 88, 90, 93, 94, 95, 96, 97, 98, 99, 100, 101, 104, 105, 106, 107, 108, 109, 110, 112, 114, 115, 116, 117, 118, 119, 120, 121, 122, 125, 127, 128, 131, 133, 134, 138, 139, 143, 144, 145, 150, 151, 153, 154, 155, 156, 157, 163, 164, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 195, 196, 197, 198, 199, 200, 201, 202, 263, 264, 265, 273, 276, 278, 282, 283, 286, 289, 291, 306, 308, 311, 315, 316, 317, 320, 323, 325, 326, 328, 331, 334, 335, 336, 337, 338, 340, 341, 342, 343, 344, 348, 349, 364, 368, 371, 376, 384, 387, 389, 390, 392, 393, 394, 396, 398, 402, 403, 404, 405, 409, 410, 411, 413, 414, 416, 417, 418, 419, 420, 421, 424, 431, 432, 433, 436, 437, 439, 454, 458, 459, 461, 462, 463, 464, 465, 467, 468, 469, 470, 473, 474, 476, 479, 480, 482, 483, 484], "thing": [416, 458, 463, 483], "think": 458, "third": [80, 81, 133, 398, 420, 439, 473, 482], "those": [55, 61, 67, 162, 340, 470, 476], "though": 43, "thought": 383, "thread": [459, 461, 468, 471, 483], "three": [40, 47, 55, 199, 201, 334, 342, 433, 471, 482], "threshold": 454, "through": [14, 16, 17, 19, 34, 151, 180, 183, 185, 195, 198, 200, 265, 338, 414, 454, 483], "throughout": 470, "thu": [54, 169, 421, 482, 483], "thumb": 477, "thunk": 4, "tile": [0, 3, 8, 452], "time": [67, 76, 82, 95, 96, 100, 101, 106, 283, 286, 350, 365, 384, 396, 421, 433, 458, 461, 462, 463, 469, 470, 473, 483], "timedelta64": [3, 8], "timer": 477, "timestep": 470, "tini": 363, "titl": [462, 464], "to_devic": 8, "tobyt": [0, 8, 316, 318], "tofil": [0, 3, 8], "togeth": [15, 58, 67, 99, 151, 181], "tol": [468, 482, 483], "toler": [15, 140, 468, 482], "tolist": [0, 3, 8], "too": [42, 77, 416, 471], "took": 483, "tool": [458, 470, 471, 480], "toolkit": [459, 483], "top": [459, 472], "topic": [460, 471, 481], "topographi": 470, "torchsw": 466, "tort": 474, "tostr": [0, 8], "total": [6, 66, 295, 360, 463, 467, 483], "total_chang": 467, "toward": [131, 326, 396], "trace": [0, 3, 8], "traceback": 454, "tracker": 471, "transfer": [468, 483], "transform": [61, 94, 95, 96, 98, 99, 100, 101, 103, 104, 105, 106, 107, 108, 109, 443, 452, 482], "translat": [371, 464, 482], "transport": 316, "transpos": [0, 3, 8, 67, 158, 203, 452, 463], "trapezoid": [3, 8], "trapz": [3, 8], "travers": 311, "treat": [15, 54, 163, 181, 184, 185, 193, 194, 197, 200, 202, 340, 417, 421, 433], "tree": 459, "tri": [0, 3, 8], "trial": [346, 353], "triangl": [134, 424, 425, 426, 427, 428, 429, 430], "triangular": [0, 3, 8, 42, 158, 165, 463], "tridiagon": 464, "trigger": [471, 476], "trigonometr": [22, 26, 404, 452], "tril": [0, 3, 8, 180, 426, 427, 428], "tril_indic": [0, 3, 8, 427], "tril_indices_from": [0, 3, 8], "trim": 434, "trim_zero": [3, 8], "triu": [0, 3, 8, 180, 429, 430], "triu_indic": [0, 3, 8, 430], "triu_indices_from": [0, 3, 8], "trivial": 458, "true": [4, 12, 13, 14, 15, 16, 17, 18, 19, 22, 23, 24, 25, 26, 27, 28, 29, 30, 34, 35, 41, 44, 45, 46, 52, 53, 57, 59, 60, 63, 64, 65, 67, 70, 71, 76, 77, 78, 82, 83, 86, 87, 88, 90, 91, 93, 110, 116, 117, 118, 119, 120, 121, 122, 125, 127, 128, 131, 134, 137, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 153, 154, 155, 156, 157, 161, 164, 167, 168, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 182, 183, 184, 185, 186, 187, 188, 190, 191, 192, 195, 196, 197, 198, 199, 200, 201, 202, 259, 260, 265, 283, 292, 294, 299, 306, 325, 326, 328, 334, 335, 336, 337, 338, 341, 342, 343, 344, 389, 390, 393, 394, 400, 402, 403, 404, 405, 409, 410, 413, 414, 418, 419, 431, 432, 433, 436, 440, 476, 479], "true_divid": [0, 3, 8, 78], "truli": 283, "trunc": [0, 3, 8], "truncat": [57, 94, 95, 96, 98, 99, 100, 101, 103, 104, 106, 107, 109, 346, 432], "trust": [191, 192], "truth": [127, 128, 156, 157, 176, 178, 179, 450, 452], "try": [463, 464, 465, 468, 471, 476, 478, 481, 483], "tup": [56, 81, 133, 398, 439], "tupl": [2, 4, 6, 12, 13, 14, 16, 17, 19, 22, 23, 24, 25, 26, 27, 28, 36, 37, 41, 44, 45, 46, 50, 51, 52, 53, 59, 60, 63, 64, 65, 66, 70, 71, 73, 74, 78, 83, 84, 85, 86, 87, 88, 89, 90, 93, 97, 102, 113, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 131, 134, 137, 139, 143, 144, 145, 151, 153, 154, 155, 156, 157, 159, 164, 165, 167, 168, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 182, 183, 184, 185, 186, 187, 188, 190, 195, 196, 197, 198, 199, 201, 202, 254, 286, 289, 307, 311, 320, 325, 326, 327, 328, 329, 330, 334, 336, 337, 338, 342, 343, 344, 345, 346, 348, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 368, 371, 372, 373, 374, 375, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 389, 390, 392, 393, 394, 395, 401, 402, 403, 404, 405, 409, 410, 411, 413, 414, 418, 419, 420, 426, 427, 429, 430, 431, 432, 435, 436, 440, 441, 442, 467, 482, 483], "tuple_of_arrai": 327, "turn": [56, 454], "tutori": [471, 481], "tweedi": 384, "twice": 482, "two": [15, 21, 35, 39, 44, 45, 46, 48, 61, 67, 75, 76, 79, 95, 99, 100, 105, 122, 138, 140, 163, 181, 331, 351, 353, 356, 396, 415, 420, 422, 426, 427, 429, 430, 437, 465, 466, 467, 469, 482, 483, 484], "type": [6, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 75, 76, 77, 78, 79, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 123, 124, 125, 126, 127, 128, 129, 130, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 160, 161, 162, 163, 164, 166, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 207, 254, 265, 273, 279, 285, 286, 289, 291, 304, 306, 308, 315, 316, 317, 320, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 336, 337, 338, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 371, 372, 373, 374, 375, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 429, 430, 431, 432, 434, 435, 436, 437, 439, 440, 441, 442, 443, 452, 454, 459, 467, 470, 471, 483], "typecod": 265, "typeerror": [43, 77, 199, 201, 334, 342], "typenam": [3, 8], "typic": [15, 49, 51, 67, 98, 304, 399, 459, 470, 477, 483], "u": [167, 200, 311, 385, 458, 463, 465, 469, 471, 474, 483], "u8_arr": 76, "ubyt": [3, 8], "ufunc": [8, 12, 13, 16, 17, 22, 23, 24, 25, 26, 27, 28, 44, 45, 46, 52, 53, 55, 59, 60, 63, 64, 65, 70, 71, 78, 86, 87, 88, 90, 93, 116, 117, 118, 119, 120, 121, 122, 125, 127, 128, 134, 139, 143, 144, 145, 153, 154, 155, 156, 157, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 182, 186, 187, 188, 190, 195, 198, 200, 202, 325, 326, 328, 336, 337, 338, 343, 344, 389, 390, 393, 394, 402, 403, 404, 405, 409, 410, 413, 414, 418, 419, 431, 432], "uic": 306, "uid": 471, "uint": [3, 8], "uint16": [3, 8], "uint32": [3, 8], "uint64": [3, 8, 467], "uint8": [3, 8, 76, 332, 434], "uintc": [3, 8], "uintp": [3, 8], "uk": [462, 465], "ulong": [3, 8], "ulonglong": [3, 8], "ultim": [283, 306], "unabl": 471, "unalt": 349, "unari": 450, "unbias": 67, "unbound": 364, "unchang": [34, 109], "undefin": [184, 197, 199, 201, 334, 340, 342, 476], "under": [164, 283, 458, 462, 463, 469, 474], "underli": [32, 358, 387, 392, 406, 462, 483], "understand": [458, 468], "undesir": 482, "undo": 434, "unexpect": 200, "unif": [372, 373, 375], "uniform": [0, 3, 8, 131, 367, 368, 371, 372, 373, 375, 385], "uniformli": 382, "uniniti": [12, 13, 22, 23, 24, 25, 26, 27, 28, 44, 45, 46, 52, 53, 59, 60, 63, 64, 65, 70, 71, 78, 84, 85, 86, 87, 88, 90, 93, 116, 117, 118, 119, 120, 121, 122, 125, 127, 128, 134, 139, 143, 144, 145, 153, 154, 155, 156, 157, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 182, 186, 187, 188, 190, 325, 326, 328, 336, 337, 343, 344, 389, 390, 393, 394, 402, 403, 404, 405, 409, 410, 413, 418, 419, 431, 432], "union1d": [3, 8], "uniqu": [0, 3, 8, 189, 363, 467], "unique_al": [3, 8], "unique_count": [3, 8, 433], "unique_indic": 433, "unique_invers": [3, 8, 433], "unique_valu": [3, 8], "unit": [151, 159, 383, 384, 476], "unitari": [126, 167, 476], "uniti": 131, "univari": 369, "univers": [164, 384], "unknown": 483, "unless": [14, 19, 34, 54, 68, 69, 75, 82, 131, 164, 168, 193, 194, 200, 202, 265, 289, 332, 338, 368, 371, 372, 373, 375, 397, 414, 433, 458, 462, 463, 469], "unlik": [61, 75, 159, 160, 381], "unmodifi": [48, 472], "unnecessari": 458, "unpack": 434, "unpackbit": [0, 3, 8], "unpickl": [254, 306], "unpredict": [1, 349], "unravel": 435, "unravel_index": [0, 3, 8], "unraveled_coord": 435, "unsaf": [58, 82, 138, 181, 265, 331, 420, 437], "unsign": [76, 202, 338, 414], "unsignedinteg": [3, 8], "unstack": [3, 8], "unsupport": 476, "until": [48, 83, 467, 482, 483], "unwrap": [3, 8], "up": [81, 115, 118, 133, 289, 398, 417, 433, 439, 454, 459, 465, 470, 471, 476, 477, 483], "updat": [283, 306, 339, 340, 468, 470, 483], "upon": 458, "upper": [55, 92, 131, 158, 165, 306, 381, 382, 428, 429, 430], "uppoer": 165, "us": [2, 6, 16, 17, 20, 21, 31, 32, 42, 47, 48, 54, 58, 61, 67, 68, 69, 72, 73, 75, 76, 79, 82, 83, 94, 95, 96, 98, 99, 100, 101, 103, 104, 106, 107, 109, 126, 129, 130, 136, 140, 151, 152, 158, 161, 163, 164, 168, 181, 183, 184, 185, 193, 194, 195, 196, 197, 199, 200, 201, 202, 211, 212, 267, 273, 283, 289, 306, 308, 316, 323, 333, 334, 335, 338, 340, 342, 346, 348, 350, 371, 376, 384, 387, 388, 391, 392, 395, 400, 406, 414, 416, 417, 422, 433, 435, 436, 437, 450, 454, 458, 459, 461, 462, 463, 464, 465, 468, 469, 470, 472, 473, 474, 476, 479, 480, 481, 484], "usabl": 116, "usag": [94, 95, 96, 98, 99, 100, 101, 103, 104, 105, 106, 107, 108, 109, 159, 160, 166, 454, 458, 460, 471, 481, 482], "use_explicit": 161, "use_openmp": 459, "use_thread": 459, "user": [283, 306, 459, 468, 470, 471, 472, 483], "ushort": [3, 8], "usual": [73, 458, 471, 484], "util": [461, 462, 463, 469, 471, 483], "v": [48, 61, 72, 304, 399, 443, 461, 462, 464], "v1": 462, "v100": 483, "val": [110, 136, 150, 305, 332, 335, 388, 434, 482, 483], "valid": [48, 61, 180, 426, 427, 429, 430, 458, 470], "valu": [2, 12, 13, 14, 15, 16, 17, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 35, 41, 42, 43, 44, 45, 46, 47, 52, 53, 54, 55, 59, 60, 63, 64, 65, 66, 67, 68, 69, 70, 71, 76, 77, 78, 82, 86, 87, 88, 90, 91, 92, 93, 99, 107, 110, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 134, 137, 139, 140, 142, 143, 144, 145, 146, 147, 148, 149, 151, 152, 153, 154, 155, 156, 157, 158, 162, 164, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 186, 187, 188, 190, 191, 192, 193, 194, 195, 196, 198, 199, 200, 201, 202, 205, 206, 213, 214, 216, 217, 219, 220, 221, 222, 223, 224, 225, 226, 230, 231, 232, 233, 234, 235, 236, 238, 239, 240, 241, 242, 243, 244, 246, 247, 248, 251, 252, 253, 256, 257, 258, 261, 262, 265, 268, 279, 282, 292, 294, 300, 304, 306, 308, 311, 325, 326, 328, 332, 335, 336, 337, 338, 339, 340, 341, 343, 344, 345, 346, 348, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 371, 372, 373, 374, 375, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 389, 390, 391, 392, 393, 394, 395, 397, 399, 402, 403, 404, 405, 409, 410, 413, 414, 416, 417, 418, 419, 422, 423, 431, 432, 433, 434, 436, 440, 450, 452, 454, 462, 464, 467, 468, 469, 470, 471, 481, 482, 483], "valuabl": 470, "valueerror": [41, 43, 48, 54, 57, 75, 77, 110, 164, 191, 192, 195, 198, 348, 366, 408, 411, 422], "van": 164, "vander": [3, 8], "vanilla": 454, "var": [0, 3, 8, 454], "vararg": 126, "vari": [32, 67, 137, 406, 464, 465, 470, 483], "variabl": [67, 166, 191, 192, 195, 198, 348, 350, 356, 363, 454, 468, 470, 471, 475, 477, 479, 482, 483], "varianc": [67, 322, 348, 369, 436, 452], "variant": 483, "variat": [199, 201, 334, 342, 351, 483], "varieti": 2, "variou": [164, 452, 470, 480], "vdot": [0, 3, 8], "vecdot": [3, 8], "vecmat": [3, 8], "vector": [3, 8, 67, 79, 138, 163, 164, 181, 185, 320, 331, 437, 452, 483, 484], "vector1": 483, "vector2": 483, "vector_norm": 8, "venv": [473, 483], "verbatim": 458, "verbos": [461, 468, 471, 483], "veri": [15, 42, 289, 477], "verifi": 158, "version": [66, 72, 112, 184, 197, 199, 201, 254, 334, 342, 364, 435, 458, 462, 463, 469, 470, 473, 483], "vertic": [396, 398, 438, 439, 470], "vh": 167, "via": [12, 13, 22, 23, 24, 25, 26, 27, 28, 44, 45, 46, 52, 53, 59, 60, 63, 64, 65, 70, 71, 78, 86, 87, 88, 90, 93, 116, 117, 118, 119, 120, 121, 122, 125, 127, 128, 134, 139, 143, 144, 145, 153, 154, 155, 156, 157, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 182, 186, 187, 188, 190, 283, 317, 325, 326, 328, 336, 337, 343, 344, 389, 390, 393, 394, 402, 403, 404, 405, 409, 410, 413, 418, 419, 424, 431, 432, 461, 471, 475, 483], "view": [0, 8, 39, 40, 49, 51, 72, 89, 113, 114, 115, 185, 189, 279, 283, 286, 313, 320, 340, 392, 408, 411, 415, 417, 423, 435, 471, 481], "violat": 454, "vision": 483, "visit": [458, 471], "vital": 483, "void": [3, 8, 289], "volatil": [462, 483], "von": 383, "vonmis": [0, 3, 8], "vpi": 465, "vsplit": [0, 3, 8, 398, 439], "vstack": [0, 3, 8, 398, 482], "vv": 461, "w": [160, 283, 306], "wa": [47, 79, 138, 163, 360, 384, 397, 420, 437, 458, 465, 468, 471], "wai": [83, 99, 100, 101, 106, 181, 355, 434, 458, 459, 461, 462, 463, 464, 469, 474, 475, 482], "waital": 470, "wald": [0, 3, 8], "walk": 459, "want": [458, 459, 469, 483], "warm": 477, "warn": [180, 191, 192, 195, 198, 339, 443, 468, 483], "warranti": [462, 463, 469, 474], "wasilla": 474, "water": 470, "wavenumb": 464, "we": [8, 54, 67, 311, 458, 459, 462, 463, 464, 465, 467, 468, 469, 470, 471, 482, 483], "weak": 472, "weibul": [0, 3, 8, 199, 201, 334, 342, 374], "weight": [41, 43, 67, 129, 130, 131, 364, 467], "welcom": [8, 458], "well": [82, 166, 306, 338, 461, 463, 470], "were": [58, 181, 304, 369, 399, 412, 471, 474, 479, 483], "west": [469, 483], "wget": 483, "what": [58, 72, 82, 94, 95, 96, 98, 99, 100, 101, 103, 104, 105, 106, 107, 108, 109, 138, 141, 181, 265, 331, 412, 420, 437, 469, 479, 482, 483], "wheel": 483, "when": [18, 21, 29, 30, 34, 41, 48, 57, 68, 69, 76, 106, 131, 158, 161, 164, 166, 168, 180, 181, 184, 185, 191, 192, 193, 194, 195, 197, 198, 200, 273, 289, 306, 311, 316, 348, 349, 376, 387, 400, 416, 417, 454, 458, 459, 468, 470, 475, 476, 477, 479, 482, 483], "whenev": [423, 454, 482], "where": [0, 3, 8, 12, 13, 14, 16, 17, 19, 21, 22, 23, 24, 25, 26, 27, 28, 33, 39, 40, 44, 45, 46, 48, 52, 53, 54, 55, 57, 59, 60, 63, 64, 65, 67, 70, 71, 76, 78, 79, 86, 87, 88, 89, 90, 91, 92, 93, 98, 104, 106, 116, 117, 118, 119, 120, 121, 122, 125, 127, 128, 133, 134, 137, 139, 140, 141, 143, 144, 145, 146, 147, 148, 153, 154, 155, 156, 157, 158, 165, 167, 168, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 182, 183, 186, 187, 188, 190, 195, 196, 198, 200, 202, 259, 260, 292, 294, 299, 304, 312, 325, 326, 328, 331, 335, 336, 337, 338, 341, 343, 344, 345, 346, 351, 352, 353, 360, 362, 364, 381, 389, 390, 393, 394, 399, 400, 402, 403, 404, 405, 408, 409, 410, 413, 414, 418, 419, 422, 431, 432, 436, 462, 464, 465, 467, 470, 474, 476, 482, 483], "wherea": 476, "whether": [14, 15, 19, 35, 72, 77, 140, 141, 158, 168, 200, 306, 435, 454, 458, 461, 474, 479, 482, 483], "which": [1, 12, 13, 14, 16, 17, 19, 20, 22, 23, 24, 25, 26, 27, 28, 29, 30, 34, 41, 44, 45, 46, 48, 52, 53, 54, 57, 58, 59, 60, 61, 63, 64, 65, 66, 67, 68, 69, 70, 71, 73, 75, 76, 77, 78, 82, 83, 86, 87, 88, 90, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 113, 116, 117, 118, 119, 120, 121, 122, 125, 126, 127, 128, 133, 134, 139, 143, 144, 145, 146, 147, 150, 153, 154, 155, 156, 157, 158, 159, 160, 161, 164, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 186, 187, 188, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 265, 273, 286, 289, 306, 308, 323, 325, 326, 328, 332, 334, 336, 337, 338, 339, 342, 343, 344, 350, 355, 368, 371, 372, 373, 374, 375, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 389, 390, 391, 393, 394, 395, 397, 400, 402, 403, 404, 405, 408, 409, 410, 412, 413, 414, 416, 418, 419, 422, 424, 425, 426, 429, 431, 432, 434, 436, 440, 454, 458, 465, 468, 470, 471, 474, 477, 479, 482, 483], "while": [67, 109, 163, 185, 197, 199, 201, 202, 283, 338, 364, 395, 414, 424, 467, 471, 477, 482, 483], "whilst": 38, "who": 458, "whole": 458, "whom": 474, "whose": [34, 75, 91, 92, 110, 180, 183, 189, 195, 196, 198, 202, 268, 332, 422, 427, 430, 435, 436], "why": [104, 458], "wide": [350, 471], "width": [81, 131, 133, 363, 398, 439, 483], "wiki": 350, "wikipedia": 350, "window": [42, 47, 129, 130, 152, 443, 452], "wise": [12, 13, 15, 22, 23, 24, 25, 26, 27, 28, 44, 45, 46, 52, 53, 59, 60, 63, 64, 65, 78, 81, 86, 93, 94, 95, 96, 98, 99, 100, 101, 103, 104, 105, 106, 107, 108, 109, 116, 117, 119, 120, 121, 127, 128, 132, 133, 139, 140, 143, 144, 145, 146, 147, 154, 156, 157, 159, 160, 170, 171, 172, 176, 177, 178, 179, 182, 186, 187, 188, 190, 271, 325, 326, 328, 336, 337, 389, 390, 398, 402, 403, 404, 405, 409, 410, 413, 418, 419, 431, 432, 438, 439, 483], "wish": 72, "within": [12, 13, 15, 21, 22, 23, 24, 25, 26, 27, 28, 44, 45, 46, 52, 53, 59, 60, 63, 64, 65, 70, 71, 78, 82, 86, 87, 88, 90, 93, 99, 100, 101, 104, 106, 116, 117, 118, 119, 120, 121, 122, 125, 127, 128, 134, 139, 140, 143, 144, 145, 153, 154, 155, 156, 157, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 181, 182, 186, 187, 188, 190, 265, 325, 326, 328, 336, 337, 343, 344, 355, 382, 389, 390, 393, 394, 402, 403, 404, 405, 409, 410, 413, 418, 419, 431, 432, 483], "without": [42, 48, 57, 79, 84, 138, 306, 320, 392, 458, 462, 463, 469, 470, 474, 478, 481, 483], "word": [21, 99, 100, 101, 104, 106, 382, 424], "work": [48, 57, 289, 339, 450, 458, 459, 462, 476, 477, 482, 483], "worker": [461, 471, 483], "workflow": 459, "workload": 483, "workstat": 483, "worri": 483, "wors": 47, "would": [32, 58, 79, 138, 163, 180, 263, 264, 289, 304, 331, 399, 408, 412, 420, 437, 454, 462, 463, 468, 469, 470, 482, 483], "wrap": [54, 110, 339, 349, 416], "wrapper": 483, "write": [49, 72, 110, 185, 306, 316, 392, 462, 463, 469, 472, 483], "writeabl": [4, 283, 306], "writebackifcopi": [283, 306], "written": [110, 283, 306, 316, 474, 482, 484], "wrong": 57, "www": [462, 463, 469], "x": [12, 22, 23, 24, 25, 26, 28, 43, 52, 53, 59, 60, 64, 65, 67, 70, 71, 76, 77, 87, 88, 90, 93, 95, 96, 97, 100, 101, 102, 109, 117, 122, 131, 135, 139, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 161, 164, 166, 170, 171, 172, 173, 177, 180, 185, 188, 283, 306, 311, 325, 336, 343, 344, 345, 350, 385, 389, 394, 402, 403, 404, 405, 409, 410, 418, 419, 432, 440, 462, 464, 465, 467, 468, 476, 482, 483, 484], "x1": [13, 27, 44, 45, 46, 63, 78, 86, 116, 118, 119, 120, 121, 125, 127, 128, 134, 153, 154, 155, 156, 157, 174, 175, 176, 178, 179, 182, 185, 186, 187, 190, 326, 328, 337, 390, 393, 413, 431], "x2": [13, 27, 44, 45, 46, 63, 78, 86, 116, 118, 119, 120, 121, 125, 127, 128, 134, 153, 154, 155, 156, 157, 174, 175, 176, 178, 179, 182, 185, 186, 187, 190, 326, 328, 337, 390, 393, 413, 431], "x86": 483, "x86_64": [473, 483], "x_": 468, "x_1": 67, "x_2": 67, "x_current": 482, "x_i": 67, "x_j": 67, "x_n": 67, "x_prev": 482, "xeon": 483, "xi": 185, "xk": 468, "xk_old": 468, "xlabel": [462, 464], "xn": 185, "xor": [46, 179], "xorwow": 349, "xv": 185, "xy": 185, "y": [13, 27, 44, 45, 46, 63, 67, 78, 86, 97, 102, 116, 118, 119, 120, 121, 125, 127, 128, 134, 140, 149, 153, 154, 155, 156, 157, 174, 175, 176, 178, 179, 182, 185, 186, 187, 190, 199, 201, 285, 317, 326, 328, 334, 337, 342, 387, 390, 393, 396, 413, 431, 440, 465, 467, 468, 482, 483, 484], "y1": [122, 188], "y2": [122, 188], "year": [363, 483], "yellow": 467, "yet": [8, 433], "yield": [29, 30, 68, 69, 193, 194, 200, 440, 477, 483], "ylabel": [462, 464], "you": [49, 72, 82, 181, 184, 185, 197, 416, 458, 459, 462, 463, 464, 467, 468, 469, 470, 471, 472, 473, 480, 482, 483, 484], "your": [458, 471, 472, 482, 483, 484], "yueh": 470, "yv": 185, "z": [18, 289, 350, 369, 482, 484], "zero": [0, 3, 8, 18, 33, 41, 42, 47, 61, 66, 76, 92, 94, 95, 96, 97, 98, 99, 100, 101, 103, 104, 106, 107, 109, 112, 129, 130, 141, 142, 146, 147, 148, 149, 152, 159, 160, 162, 164, 180, 194, 202, 297, 324, 327, 332, 351, 364, 403, 424, 425, 428, 434, 436, 442, 464, 467, 469, 483], "zero_point": 467, "zerodivisionerror": 41, "zeros_lik": [0, 3, 8], "zeta": 386, "zipf": [0, 3, 8], "zsh": 483}, "titles": ["&lt;no title&gt;", "cupynumeric.random.BitGenerator", "cupynumeric.random.Generator", "Convolve and Correlate", "cupynumeric.ndarray", "Binary operations", "cupynumeric.broadcast", "Classes", "Project comparisons", "Array creation routines", "Data type routines", "Discrete Fourier Transform (<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">cupynumeric.fft</span></code>)", "cupynumeric.absolute", "cupynumeric.add", "cupynumeric.all", "cupynumeric.allclose", "cupynumeric.amax", "cupynumeric.amin", "cupynumeric.angle", "cupynumeric.any", "cupynumeric.append", "cupynumeric.arange", "cupynumeric.arccos", "cupynumeric.arccosh", "cupynumeric.arcsin", "cupynumeric.arcsinh", "cupynumeric.arctan", "cupynumeric.arctan2", "cupynumeric.arctanh", "cupynumeric.argmax", "cupynumeric.argmin", "cupynumeric.argpartition", "cupynumeric.argsort", "cupynumeric.argwhere", "cupynumeric.array", "cupynumeric.array_equal", "cupynumeric.array_split", "cupynumeric.asarray", "cupynumeric.atleast_1d", "cupynumeric.atleast_2d", "cupynumeric.atleast_3d", "cupynumeric.average", "cupynumeric.bartlett", "cupynumeric.bincount", "cupynumeric.bitwise_and", "cupynumeric.bitwise_or", "cupynumeric.bitwise_xor", "cupynumeric.blackman", "cupynumeric.block", "cupynumeric.broadcast_arrays", "cupynumeric.broadcast_shapes", "cupynumeric.broadcast_to", "cupynumeric.cbrt", "cupynumeric.ceil", "cupynumeric.choose", "cupynumeric.clip", "cupynumeric.column_stack", "cupynumeric.compress", "cupynumeric.concatenate", "cupynumeric.conj", "cupynumeric.conjugate", "cupynumeric.convolve", "cupynumeric.copy", "cupynumeric.copysign", "cupynumeric.cos", "cupynumeric.cosh", "cupynumeric.count_nonzero", "cupynumeric.cov", "cupynumeric.cumprod", "cupynumeric.cumsum", "cupynumeric.deg2rad", "cupynumeric.degrees", "cupynumeric.diag", "cupynumeric.diag_indices", "cupynumeric.diag_indices_from", "cupynumeric.diagonal", "cupynumeric.diff", "cupynumeric.digitize", "cupynumeric.divide", "cupynumeric.dot", "cupynumeric.dsplit", "cupynumeric.dstack", "cupynumeric.einsum", "cupynumeric.einsum_path", "cupynumeric.empty", "cupynumeric.empty_like", "cupynumeric.equal", "cupynumeric.exp", "cupynumeric.exp2", "cupynumeric.expand_dims", "cupynumeric.expm1", "cupynumeric.extract", "cupynumeric.eye", "cupynumeric.fabs", "cupynumeric.fft.fft", "cupynumeric.fft.fft2", "cupynumeric.fft.fftn", "cupynumeric.fft.fftshift", "cupynumeric.fft.hfft", "cupynumeric.fft.ifft", "cupynumeric.fft.ifft2", "cupynumeric.fft.ifftn", "cupynumeric.fft.ifftshift", "cupynumeric.fft.ihfft", "cupynumeric.fft.irfft", "cupynumeric.fft.irfft2", "cupynumeric.fft.irfftn", "cupynumeric.fft.rfft", "cupynumeric.fft.rfft2", "cupynumeric.fft.rfftn", "cupynumeric.fill_diagonal", "cupynumeric.find_common_type", "cupynumeric.flatnonzero", "cupynumeric.flip", "cupynumeric.fliplr", "cupynumeric.flipud", "cupynumeric.float_power", "cupynumeric.floor", "cupynumeric.floor_divide", "cupynumeric.fmax", "cupynumeric.fmin", "cupynumeric.fmod", "cupynumeric.frexp", "cupynumeric.full", "cupynumeric.full_like", "cupynumeric.gcd", "cupynumeric.gradient", "cupynumeric.greater", "cupynumeric.greater_equal", "cupynumeric.hamming", "cupynumeric.hanning", "cupynumeric.histogram", "cupynumeric.hsplit", "cupynumeric.hstack", "cupynumeric.hypot", "cupynumeric.identity", "cupynumeric.imag", "cupynumeric.indices", "cupynumeric.inner", "cupynumeric.invert", "cupynumeric.isclose", "cupynumeric.iscomplex", "cupynumeric.iscomplexobj", "cupynumeric.isfinite", "cupynumeric.isinf", "cupynumeric.isnan", "cupynumeric.isneginf", "cupynumeric.isposinf", "cupynumeric.isreal", "cupynumeric.isrealobj", "cupynumeric.isscalar", "cupynumeric.ix_", "cupynumeric.kaiser", "cupynumeric.lcm", "cupynumeric.ldexp", "cupynumeric.left_shift", "cupynumeric.less", "cupynumeric.less_equal", "cupynumeric.linalg.cholesky", "cupynumeric.linalg.eig", "cupynumeric.linalg.eigvals", "cupynumeric.linalg.expm", "cupynumeric.linalg.matrix_power", "cupynumeric.linalg.multi_dot", "cupynumeric.linalg.norm", "cupynumeric.linalg.qr", "cupynumeric.linalg.solve", "cupynumeric.linalg.svd", "cupynumeric.linspace", "cupynumeric.load", "cupynumeric.log", "cupynumeric.log10", "cupynumeric.log1p", "cupynumeric.log2", "cupynumeric.logaddexp", "cupynumeric.logaddexp2", "cupynumeric.logical_and", "cupynumeric.logical_not", "cupynumeric.logical_or", "cupynumeric.logical_xor", "cupynumeric.mask_indices", "cupynumeric.matmul", "cupynumeric.maximum", "cupynumeric.mean", "cupynumeric.median", "cupynumeric.meshgrid", "cupynumeric.minimum", "cupynumeric.mod", "cupynumeric.modf", "cupynumeric.moveaxis", "cupynumeric.multiply", "cupynumeric.nanargmax", "cupynumeric.nanargmin", "cupynumeric.nancumprod", "cupynumeric.nancumsum", "cupynumeric.nanmax", "cupynumeric.nanmean", "cupynumeric.nanmedian", "cupynumeric.nanmin", "cupynumeric.nanpercentile", "cupynumeric.nanprod", "cupynumeric.nanquantile", "cupynumeric.nansum", "cupynumeric.ndarray.T", "cupynumeric.ndarray.__abs__", "cupynumeric.ndarray.__add__", "cupynumeric.ndarray.__and__", "cupynumeric.ndarray.__array__", "cupynumeric.ndarray.__bool__", "cupynumeric.ndarray.__complex__", "cupynumeric.ndarray.__contains__", "cupynumeric.ndarray.__copy__", "cupynumeric.ndarray.__deepcopy__", "cupynumeric.ndarray.__divmod__", "cupynumeric.ndarray.__eq__", "cupynumeric.ndarray.__float__", "cupynumeric.ndarray.__floordiv__", "cupynumeric.ndarray.__ge__", "cupynumeric.ndarray.__getitem__", "cupynumeric.ndarray.__gt__", "cupynumeric.ndarray.__iadd__", "cupynumeric.ndarray.__iand__", "cupynumeric.ndarray.__ifloordiv__", "cupynumeric.ndarray.__ilshift__", "cupynumeric.ndarray.__imatmul__", "cupynumeric.ndarray.__imod__", "cupynumeric.ndarray.__imul__", "cupynumeric.ndarray.__index__", "cupynumeric.ndarray.__int__", "cupynumeric.ndarray.__invert__", "cupynumeric.ndarray.__ior__", "cupynumeric.ndarray.__ipow__", "cupynumeric.ndarray.__irshift__", "cupynumeric.ndarray.__isub__", "cupynumeric.ndarray.__itruediv__", "cupynumeric.ndarray.__ixor__", "cupynumeric.ndarray.__le__", "cupynumeric.ndarray.__len__", "cupynumeric.ndarray.__lshift__", "cupynumeric.ndarray.__lt__", "cupynumeric.ndarray.__matmul__", "cupynumeric.ndarray.__mod__", "cupynumeric.ndarray.__mul__", "cupynumeric.ndarray.__ne__", "cupynumeric.ndarray.__neg__", "cupynumeric.ndarray.__new__", "cupynumeric.ndarray.__or__", "cupynumeric.ndarray.__pos__", "cupynumeric.ndarray.__pow__", "cupynumeric.ndarray.__reduce__", "cupynumeric.ndarray.__repr__", "cupynumeric.ndarray.__rmatmul__", "cupynumeric.ndarray.__rshift__", "cupynumeric.ndarray.__setitem__", "cupynumeric.ndarray.__setstate__", "cupynumeric.ndarray.__str__", "cupynumeric.ndarray.__sub__", "cupynumeric.ndarray.__truediv__", "cupynumeric.ndarray.__xor__", "cupynumeric.ndarray.all", "cupynumeric.ndarray.any", "cupynumeric.ndarray.argmax", "cupynumeric.ndarray.argmin", "cupynumeric.ndarray.argpartition", "cupynumeric.ndarray.argsort", "cupynumeric.ndarray.astype", "cupynumeric.ndarray.base", "cupynumeric.ndarray.choose", "cupynumeric.ndarray.clip", "cupynumeric.ndarray.compress", "cupynumeric.ndarray.conj", "cupynumeric.ndarray.conjugate", "cupynumeric.ndarray.copy", "cupynumeric.ndarray.ctypes", "cupynumeric.ndarray.cumprod", "cupynumeric.ndarray.cumsum", "cupynumeric.ndarray.data", "cupynumeric.ndarray.diagonal", "cupynumeric.ndarray.dot", "cupynumeric.ndarray.dtype", "cupynumeric.ndarray.dump", "cupynumeric.ndarray.dumps", "cupynumeric.ndarray.fill", "cupynumeric.ndarray.flags", "cupynumeric.ndarray.flat", "cupynumeric.ndarray.flatten", "cupynumeric.ndarray.flip", "cupynumeric.ndarray.getfield", "cupynumeric.ndarray.imag", "cupynumeric.ndarray.item", "cupynumeric.ndarray.itemset", "cupynumeric.ndarray.itemsize", "cupynumeric.ndarray.max", "cupynumeric.ndarray.mean", "cupynumeric.ndarray.min", "cupynumeric.ndarray.nbytes", "cupynumeric.ndarray.ndim", "cupynumeric.ndarray.nonzero", "cupynumeric.ndarray.partition", "cupynumeric.ndarray.prod", "cupynumeric.ndarray.put", "cupynumeric.ndarray.ravel", "cupynumeric.ndarray.real", "cupynumeric.ndarray.reshape", "cupynumeric.ndarray.searchsorted", "cupynumeric.ndarray.setfield", "cupynumeric.ndarray.setflags", "cupynumeric.ndarray.shape", "cupynumeric.ndarray.size", "cupynumeric.ndarray.sort", "cupynumeric.ndarray.squeeze", "cupynumeric.ndarray.strides", "cupynumeric.ndarray.sum", "cupynumeric.ndarray.swapaxes", "cupynumeric.ndarray.take", "cupynumeric.ndarray.tobytes", "cupynumeric.ndarray.tofile", "cupynumeric.ndarray.tolist", "cupynumeric.ndarray.tostring", "cupynumeric.ndarray.trace", "cupynumeric.ndarray.transpose", "cupynumeric.ndarray.unique", "cupynumeric.ndarray.var", "cupynumeric.ndarray.view", "cupynumeric.ndim", "cupynumeric.negative", "cupynumeric.nextafter", "cupynumeric.nonzero", "cupynumeric.not_equal", "cupynumeric.ones", "cupynumeric.ones_like", "cupynumeric.outer", "cupynumeric.packbits", "cupynumeric.partition", "cupynumeric.percentile", "cupynumeric.place", "cupynumeric.positive", "cupynumeric.power", "cupynumeric.prod", "cupynumeric.put", "cupynumeric.put_along_axis", "cupynumeric.putmask", "cupynumeric.quantile", "cupynumeric.rad2deg", "cupynumeric.radians", "cupynumeric.random.beta", "cupynumeric.random.binomial", "cupynumeric.random.bytes", "cupynumeric.random.chisquare", "cupynumeric.random.default_rng", "cupynumeric.random.exponential", "cupynumeric.random.f", "cupynumeric.random.gamma", "cupynumeric.random.geometric", "cupynumeric.random.gumbel", "cupynumeric.random.hypergeometric", "cupynumeric.random.laplace", "cupynumeric.random.logistic", "cupynumeric.random.lognormal", "cupynumeric.random.logseries", "cupynumeric.random.negative_binomial", "cupynumeric.random.noncentral_chisquare", "cupynumeric.random.noncentral_f", "cupynumeric.random.normal", "cupynumeric.random.pareto", "cupynumeric.random.poisson", "cupynumeric.random.power", "cupynumeric.random.rand", "cupynumeric.random.randint", "cupynumeric.random.randn", "cupynumeric.random.random", "cupynumeric.random.random_integers", "cupynumeric.random.random_sample", "cupynumeric.random.ranf", "cupynumeric.random.rayleigh", "cupynumeric.random.sample", "cupynumeric.random.seed", "cupynumeric.random.standard_cauchy", "cupynumeric.random.standard_exponential", "cupynumeric.random.standard_gamma", "cupynumeric.random.standard_t", "cupynumeric.random.triangular", "cupynumeric.random.uniform", "cupynumeric.random.vonmises", "cupynumeric.random.wald", "cupynumeric.random.weibull", "cupynumeric.random.zipf", "cupynumeric.ravel", "cupynumeric.real", "cupynumeric.reciprocal", "cupynumeric.remainder", "cupynumeric.repeat", "cupynumeric.reshape", "cupynumeric.right_shift", "cupynumeric.rint", "cupynumeric.roll", "cupynumeric.rot90", "cupynumeric.round", "cupynumeric.row_stack", "cupynumeric.searchsorted", "cupynumeric.select", "cupynumeric.shape", "cupynumeric.sign", "cupynumeric.signbit", "cupynumeric.sin", "cupynumeric.sinh", "cupynumeric.sort", "cupynumeric.sort_complex", "cupynumeric.split", "cupynumeric.sqrt", "cupynumeric.square", "cupynumeric.squeeze", "cupynumeric.stack", "cupynumeric.subtract", "cupynumeric.sum", "cupynumeric.swapaxes", "cupynumeric.take", "cupynumeric.take_along_axis", "cupynumeric.tan", "cupynumeric.tanh", "cupynumeric.tensordot", "cupynumeric.tile", "cupynumeric.trace", "cupynumeric.transpose", "cupynumeric.tri", "cupynumeric.tril", "cupynumeric.tril_indices", "cupynumeric.tril_indices_from", "cupynumeric.triu", "cupynumeric.triu_indices", "cupynumeric.triu_indices_from", "cupynumeric.true_divide", "cupynumeric.trunc", "cupynumeric.unique", "cupynumeric.unpackbits", "cupynumeric.unravel_index", "cupynumeric.var", "cupynumeric.vdot", "cupynumeric.vsplit", "cupynumeric.vstack", "cupynumeric.where", "cupynumeric.zeros", "cupynumeric.zeros_like", "API Reference", "Indexing routines", "Input and output", "Linear algebra (<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">cupynumeric.linalg</span></code>)", "Logic functions", "Array manipulation routines", "Mathematical functions", "The N-Dimensional array (<code class=\"xref py py-class docutils literal notranslate\"><span class=\"pre\">cupynumeric.ndarray</span></code>)", "Random sampling (<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">cupynumeric.random</span></code>)", "Routines", "Set routines", "Settings", "Sorting, searching, and counting", "Statistics", "Window functions", "Contributing to cuPyNumeric", "Building from source", "Developer guide", "Running tests", "Black-Scholes options pricing", "Cholesky decomposition", "Compact Finite Difference Scheme", "Edge Detection", "Examples", "K-Means Clustering Algorithm", "Newton Raphson Method In Two Dimensions", "Jacobi stencil", "TorchSWE case study", "Frequently Asked Questions", "NVIDIA cuPyNumeric", "Installation", "Third-party notices", "Advanced topics", "Differences with Numpy", "Performance Benchmarking", "Howtos", "Measure API coverage", "Trying Numpy code without changes", "User guide", "Best practices", "Tutorial", "Usage"], "titleterms": {"1": 483, "2": 483, "3": 483, "In": 468, "Of": 471, "The": [450, 458], "__abs__": 204, "__add__": 205, "__and__": 206, "__array__": 207, "__bool__": 208, "__complex__": 209, "__contains__": 210, "__copy__": 211, "__deepcopy__": 212, "__divmod__": 213, "__eq__": 214, "__float__": 215, "__floordiv__": 216, "__ge__": 217, "__getitem__": 218, "__gt__": 219, "__iadd__": 220, "__iand__": 221, "__ifloordiv__": 222, "__ilshift__": 223, "__imatmul__": 224, "__imod__": 225, "__imul__": 226, "__index__": 227, "__int__": 228, "__invert__": 229, "__ior__": 230, "__ipow__": 231, "__irshift__": 232, "__isub__": 233, "__itruediv__": 234, "__ixor__": 235, "__le__": 236, "__len__": 237, "__lshift__": 238, "__lt__": 239, "__matmul__": 240, "__mod__": 241, "__mul__": 242, "__ne__": 243, "__neg__": 244, "__new__": 245, "__or__": 246, "__pos__": 247, "__pow__": 248, "__reduce__": 249, "__repr__": 250, "__rmatmul__": 251, "__rshift__": 252, "__setitem__": 253, "__setstate__": 254, "__str__": 255, "__sub__": 256, "__truediv__": 257, "__xor__": 258, "about": 471, "absolut": 12, "add": 13, "advanc": [3, 459, 475, 482, 483], "algebra": [8, 446], "algorithm": 467, "all": [14, 259], "allclos": 15, "alloc": [482, 483], "amax": 16, "amin": 17, "an": 482, "angl": 18, "ani": [19, 260], "anoth": 482, "anti": 471, "api": [8, 443, 479, 482], "append": 20, "applic": [471, 482], "ar": 471, "arang": 21, "arcco": 22, "arccosh": 23, "arcsin": 24, "arcsinh": 25, "arctan": 26, "arctan2": 27, "arctanh": 28, "argmax": [29, 261], "argmin": [30, 262], "argpartit": [31, 263], "argsort": [32, 264], "argument": [471, 475, 476, 482], "argwher": 33, "arithmet": [449, 450], "arrai": [3, 8, 9, 34, 444, 447, 448, 450, 482, 483], "array_equ": 35, "array_split": 36, "asarrai": 37, "ask": 471, "astyp": 265, "atleast_1d": 38, "atleast_2d": 39, "atleast_3d": 40, "attribut": 450, "avail": 471, "averag": [41, 456], "avoid": [482, 483], "background": [464, 465, 467, 468], "bartlett": 42, "base": [266, 482, 483], "basic": [448, 459, 461, 483], "begin": 458, "behavior": 476, "benchmark": 477, "best": [482, 483], "beta": 345, "better": 482, "between": 471, "binari": [5, 445], "bincount": 43, "binomi": 346, "bit": [3, 5, 451], "bitgener": 1, "bitwise_and": 44, "bitwise_or": 45, "bitwise_xor": 46, "black": [462, 483], "blackman": 47, "block": [48, 482], "boolean": [482, 483], "broadcast": 6, "broadcast_arrai": 49, "broadcast_shap": 50, "broadcast_to": 51, "build": [9, 459, 473], "byte": 347, "calcul": 450, "call": 479, "can": 471, "case": 470, "cbrt": 52, "ceil": 53, "ceph": 474, "certif": 458, "chang": [448, 467, 480], "chisquar": 348, "choleski": [158, 463], "choos": [54, 267], "class": 7, "clip": [55, 268], "cluster": [467, 483], "cmake": 459, "co": 64, "code": [458, 471, 480, 483], "column_stack": 56, "compact": 464, "comparison": [8, 447, 450], "complex": 449, "compress": [57, 269], "comput": 483, "concaten": 58, "conda": [473, 483], "configur": 461, "conj": [59, 270], "conjug": [60, 271, 483], "construct": 450, "content": [447, 472], "contribut": 458, "convers": 450, "convolv": [3, 61], "copi": [62, 272, 476, 482], "copysign": 63, "correl": [3, 456], "cosh": 65, "count": [3, 455], "count_nonzero": 66, "cov": 67, "coverag": 479, "cpu": [473, 483], "creation": [3, 9], "ctype": 273, "cumprod": [68, 274], "cumsum": [69, 275], "cupi": 471, "cupynumer": [1, 2, 4, 6, 8, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 446, 450, 451, 458, 471, 472, 482, 483], "data": [9, 10, 276, 444, 450, 451], "datatyp": 476, "dco": 458, "decomposit": [446, 463], "default": 471, "default_rng": 349, "deg2rad": 70, "degre": 71, "depend": 459, "design": 482, "detail": 479, "detect": [465, 483], "determin": 471, "develop": [458, 460], "diag": 72, "diag_indic": 73, "diag_indices_from": 74, "diagon": [75, 277], "diff": 76, "differ": [449, 464, 471, 476], "digit": 77, "dimens": [448, 468], "dimension": [8, 450], "discret": [3, 8, 11], "distribut": 451, "divid": 78, "do": [458, 471], "doctor": 454, "doctor_filenam": 454, "doctor_format": 454, "doe": 471, "doesn": 471, "don": 471, "dot": [79, 278], "dsplit": 80, "dstack": 81, "dtype": 279, "dump": [280, 281], "edg": [465, 483], "eig": 159, "eigenvalu": 3, "eigval": 160, "einsum": [3, 82], "einsum_path": 83, "element": [448, 482], "elementwis": 5, "empti": 84, "empty_lik": 85, "equal": 86, "equat": 446, "error": 471, "exampl": [466, 483], "execut": [471, 475], "exercis": 467, "exist": 9, "exp": 87, "exp2": 88, "expand_dim": 89, "expm": 161, "expm1": 90, "expon": 449, "exponenti": 350, "extract": 91, "extrema": 449, "ey": 92, "f": 351, "fab": 93, "factor": 3, "fast_math": 454, "faster": 482, "fft": [11, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109], "fft2": 95, "fftn": 96, "fftshift": 97, "file": 445, "fill": 282, "fill_diagon": 110, "find": 449, "find_common_typ": 111, "finit": 464, "flag": 283, "flat": 284, "flatnonzero": 112, "flatten": 285, "flip": [113, 286], "fliplr": 114, "flipud": 115, "float": 449, "float_pow": 116, "floor": 117, "floor_divid": 118, "fmax": 119, "fmin": 120, "fmod": 121, "force_thunk": 454, "format": 458, "fourier": [3, 8, 11], "frequent": 471, "frexp": 122, "from": [9, 459, 471, 473], "full": 123, "full_lik": 124, "function": [3, 446, 447, 449, 457, 482], "gamma": 352, "gcd": 125, "gener": [2, 444, 451, 482], "geometr": 353, "getfield": 287, "gpu": [471, 473, 483], "gradient": [126, 483], "greater": 127, "greater_equ": 128, "guid": [460, 481], "guidelin": [477, 482], "gumbel": 354, "ham": 129, "han": 130, "handl": [449, 471], "hardwar": 483, "have": 471, "helper": 11, "hermitian": 11, "hfft": 98, "histogram": [131, 456], "how": [458, 467, 471], "howto": 478, "hpc": 483, "hsplit": 132, "hstack": 133, "hyperbol": 449, "hypergeometr": 355, "hypot": 134, "i": [458, 471, 482], "ident": 135, "ifft": 99, "ifft2": 100, "ifftn": 101, "ifftshift": 102, "ihfft": 103, "imag": [136, 288], "implement": [464, 465, 467, 468], "index": [3, 444, 476, 482, 483], "indic": [137, 472], "inner": 138, "input": [3, 445, 467], "insert": 444, "instal": [473, 483], "instead": [476, 482], "introduct": 483, "invert": [139, 446], "irfft": 104, "irfft2": 105, "irfftn": 106, "isclos": 140, "iscomplex": 141, "iscomplexobj": 142, "isfinit": 143, "isinf": 144, "isnan": 145, "isneginf": 146, "isposinf": 147, "isreal": 148, "isrealobj": 149, "isscalar": 150, "item": [289, 450], "items": 291, "itemset": 290, "iter": 482, "ix_": 151, "jacobi": [469, 483], "join": 448, "jupyt": 471, "k": 467, "kaiser": 152, "kind": 448, "kit": 474, "kmean": 467, "laplac": 356, "laptop": 471, "layout": 450, "lcm": 153, "ldexp": 154, "learn": [464, 465, 467, 468], "left_shift": 155, "legales": 458, "legat": [471, 475, 477], "legion": [471, 475], "less": 156, "less_equ": 157, "let": 467, "level": 8, "licens": 473, "like": [444, 448], "linalg": [158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 446], "linear": [8, 446], "linspac": 168, "linux": 483, "list": [482, 483], "load": 169, "log": 170, "log10": 171, "log1p": 172, "log2": 173, "logaddexp": 174, "logaddexp2": 175, "logarithm": 449, "logic": [3, 447, 482], "logical_and": 176, "logical_not": 177, "logical_or": 178, "logical_xor": 179, "logist": 357, "lognorm": 358, "logseri": 359, "loop": [482, 483], "lu": 3, "make": 453, "manag": 475, "manipul": [3, 448, 450, 482], "manual": 475, "mask": [482, 483], "mask_indic": 180, "mathemat": [3, 449, 482], "matmul": 181, "matmul_cache_s": 454, "matric": [9, 446], "matrix": [3, 446, 450, 483], "matrix_pow": 162, "max": 292, "maximum": 182, "mean": [183, 293, 467, 471], "measur": 479, "median": 184, "memori": [450, 471, 482], "merg": 482, "meshgrid": 185, "method": [450, 468], "min": 294, "min_cpu_chunk": 454, "min_gpu_chunk": 454, "min_omp_chunk": 454, "minimum": 186, "miscellan": [3, 449], "mod": 187, "modf": 188, "modul": 8, "more": 471, "moveaxi": 189, "multi": [8, 475, 483], "multi_dot": 163, "multipl": [450, 483], "multipli": 190, "my": 471, "n": 450, "nanargmax": 191, "nanargmin": 192, "nancumprod": 193, "nancumsum": 194, "nanmax": 195, "nanmean": 196, "nanmedian": 197, "nanmin": 198, "nanpercentil": 199, "nanprod": 200, "nanquantil": 201, "nansum": 202, "nativ": [482, 483], "nbyte": 295, "ndarrai": [3, 4, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 450], "ndim": [296, 324], "neg": 325, "negative_binomi": 360, "newton": 468, "nextaft": 326, "node": [475, 483], "noncentral_chisquar": 361, "noncentral_f": 362, "nonzero": [297, 327], "norm": [164, 446], "normal": 363, "not_equ": 328, "notebook": 471, "notic": 474, "npy": 445, "npz": 445, "number": [446, 448, 449, 467], "numer": 9, "numpi": [8, 445, 471, 474, 476, 480, 482, 483], "numpy_compat": 454, "nvidia": 472, "o": 482, "observ": 467, "ones": 329, "ones_lik": 330, "openbla": 459, "oper": [3, 5, 444, 447, 448, 449, 450, 482, 483], "option": [462, 483], "order": [456, 476], "origin": 458, "other": [446, 450, 483], "out": 471, "outcom": [464, 465, 467, 468], "outer": 331, "output": [3, 445, 482], "overal": 479, "overhead": 482, "pack": [3, 5], "packag": 473, "packbit": 332, "pad": 3, "pareto": 364, "parti": 474, "partit": [298, 333], "pass": [471, 475], "pattern": 471, "penalti": 482, "percentil": 334, "perform": [477, 482], "pip": [459, 483], "pitfal": 482, "place": 335, "point": 449, "poisson": 365, "posit": 336, "power": [337, 366], "practic": [482, 483], "preload_cudalib": 454, "price": 462, "process": 458, "prod": [299, 338], "product": [446, 449], "program": 3, "project": 8, "proper": 453, "put": [300, 339], "put_along_axi": 340, "putmask": [341, 482], "pypi": 473, "python": 471, "qr": 165, "quantil": 342, "question": 471, "rad2deg": 343, "radian": 344, "rand": 367, "randint": 368, "randn": 369, "random": [1, 2, 3, 8, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 451, 474], "random_integ": 371, "random_sampl": 372, "ranf": 373, "rang": 9, "raphson": 468, "ration": 449, "ravel": [301, 387], "rayleigh": 374, "read": 471, "real": [11, 302, 388], "realm": [471, 475], "rearrang": 448, "reciproc": 389, "recommend": 482, "reduc": 482, "reduct": 476, "refer": 443, "relat": 3, "remaind": 390, "repeat": 391, "report": 479, "report_coverag": 454, "report_dump_callstack": 454, "report_dump_csv": 454, "requir": [458, 483], "reshap": [303, 392, 482], "resourc": 483, "result": [471, 482], "return": [476, 482], "review": 458, "rfft": 107, "rfft2": 108, "rfftn": 109, "right_shift": 393, "rint": 394, "roll": 395, "rot90": 396, "round": [397, 449], "routin": [3, 9, 10, 11, 444, 448, 449, 452, 453, 482], "row_stack": 398, "run": [461, 467, 483], "sampl": [3, 8, 375, 451, 483], "scalar": 476, "scheme": 464, "schole": [462, 483], "search": [3, 455], "searchsort": [304, 399], "see": 467, "seed": [376, 451], "select": [400, 450], "set": [3, 453, 454, 467], "setfield": 305, "setflag": 306, "setup": 483, "shape": [9, 307, 401, 448, 450, 476], "sign": [402, 458], "signbit": 403, "simpl": 451, "sin": 404, "singl": 483, "sinh": 405, "size": 308, "slower": 471, "solv": [166, 446], "sort": [3, 309, 406, 455], "sort_complex": 407, "sourc": [459, 473], "special": 450, "split": [408, 448], "sqrt": 409, "squar": 410, "squeez": [310, 411], "stack": [412, 479, 482], "stage": 461, "standard": 11, "standard_cauchi": 377, "standard_exponenti": 378, "standard_gamma": 379, "standard_t": 380, "state": 451, "statist": [3, 456], "stencil": [469, 483], "stride": 311, "studi": 470, "subtract": 413, "sum": [312, 414, 449], "support": 476, "svd": [3, 167], "swapax": [313, 415], "t": [203, 471], "tabl": 472, "take": [314, 416], "take_along_axi": 417, "tan": 418, "tanh": 419, "task": [471, 475, 482], "tbli": [459, 474], "tensordot": 420, "test": [10, 447, 461], "than": 471, "thi": 471, "third": 474, "three": 483, "through": [459, 482], "tile": [421, 448], "time": [471, 477], "tip": 483, "tobyt": 315, "tofil": 316, "tolist": 317, "tool": 477, "top": 483, "topic": [459, 475], "torchsw": 470, "tostr": 318, "trace": [319, 422], "transform": [3, 8, 11], "transpos": [320, 423, 448], "tri": 424, "triangular": 381, "trigonometr": 449, "tril": 425, "tril_indic": 426, "tril_indices_from": 427, "triu": 428, "triu_indic": 429, "triu_indices_from": 430, "true_divid": 431, "trunc": 432, "truth": 447, "try": 480, "tutori": 483, "two": 468, "type": [10, 447, 450], "ufunc": 3, "uniform": 382, "uniqu": [321, 433], "unpack": 3, "unpackbit": 434, "unravel_index": 435, "updat": 482, "us": [467, 471, 475, 477, 482, 483], "usag": [461, 484], "user": 481, "v": [8, 471, 483], "valu": [9, 447, 476], "var": [322, 436], "varianc": 456, "variant": [471, 473], "variou": 457, "vdot": 437, "vector": [446, 482], "verifi": 473, "version": 471, "view": [323, 476, 482], "vonmis": 383, "vsplit": 438, "vstack": 439, "wald": 384, "warn": [454, 471], "weibul": 385, "what": 471, "when": 471, "where": [440, 471], "why": 471, "window": 457, "wise": 482, "without": 480, "your": 473, "zero": 441, "zeros_lik": 442, "zipf": 386}})