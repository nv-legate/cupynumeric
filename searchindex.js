Search.setIndex({"alltitles": {"1. Use cuPyNumeric arrays, AVOID native lists": [[492, "use-cupynumeric-arrays-avoid-native-lists"]], "2. Use array-based operations, AVOID loops with indexing": [[492, "use-array-based-operations-avoid-loops-with-indexing"]], "3. Use boolean masks, AVOID advanced indexing": [[492, "use-boolean-masks-avoid-advanced-indexing"]], "API Reference": [[452, null]], "Advanced statistics": [[3, "advanced-statistics"]], "Advanced topics": [[468, "advanced-topics"], [484, null]], "Arithmetic operations": [[458, "arithmetic-operations"]], "Arithmetic, matrix multiplication, and comparison operations": [[459, "arithmetic-matrix-multiplication-and-comparison-operations"]], "Array Attributes": [[459, "array-attributes"]], "Array Manipulation Routine Pitfalls": [[491, "array-manipulation-routine-pitfalls"]], "Array Methods": [[459, "array-methods"]], "Array contents": [[456, "array-contents"]], "Array conversion": [[459, "array-conversion"]], "Array creation": [[3, "array-creation"]], "Array creation (ndarray)": [[3, "array-creation-ndarray"]], "Array creation routines": [[9, null]], "Array manipulation": [[3, "array-manipulation"]], "Array manipulation (ndarray)": [[3, "array-manipulation-ndarray"]], "Array manipulation routines": [[457, null]], "Array type testing": [[456, "array-type-testing"]], "Averages and variances": [[465, "averages-and-variances"]], "Avoid blocking operations": [[491, "avoid-blocking-operations"]], "Background": [[473, "Background"], [474, "Background"], [476, "Background"], [477, "Background"]], "Basic Linux installation": [[492, "basic-linux-installation"]], "Basic build": [[468, "basic-build"]], "Basic operations": [[457, "basic-operations"]], "Basic usage": [[470, "basic-usage"]], "Best practices": [[491, null], [492, "best-practices"]], "Binary operations": [[5, null]], "Bit Generators": [[460, "bit-generators"]], "Bit packing": [[5, "bit-packing"]], "Black-Scholes": [[492, "black-scholes"]], "Black-Scholes options pricing": [[471, null]], "Building from source": [[468, null], [482, "building-from-source"]], "Building matrices": [[9, "building-matrices"]], "Building through pip & cmake": [[468, "building-through-pip-cmake"]], "Calculation": [[459, "calculation"], [459, "id1"]], "Call stack reporting": [[488, "call-stack-reporting"]], "Cephes": [[483, "cephes"]], "Changing array shape": [[457, "changing-array-shape"]], "Changing kind of array": [[457, "changing-kind-of-array"]], "Changing number of dimensions": [[457, "changing-number-of-dimensions"]], "Cholesky decomposition": [[472, null]], "Classes": [[7, null]], "Code Formatting Requirements": [[467, "code-formatting-requirements"]], "Compact Finite Difference Scheme": [[473, null]], "Comparison": [[456, "comparison"]], "Conda": [[492, "conda"]], "Conda and GPU / CPU Variants": [[482, "conda-and-gpu-cpu-variants"]], "Conjugate gradient": [[492, "conjugate-gradient"]], "Constructing arrays": [[459, "constructing-arrays"]], "Contents:": [[481, null]], "Contributing to cuPyNumeric": [[467, null]], "Convolve and Correlate": [[3, null]], "Correlating": [[465, "correlating"]], "Counting": [[464, "counting"]], "Data Type": [[459, "data-type"]], "Data type routines": [[10, null]], "Data type testing": [[10, "data-type-testing"]], "Decompositions": [[455, "decompositions"]], "Dependencies": [[468, "dependencies"]], "Detailed coverage report": [[488, "detailed-coverage-report"]], "Developer guide": [[469, null]], "Differences with Numpy": [[485, null]], "Discrete Fourier Transform": [[8, "discrete-fourier-transform"]], "Discrete Fourier Transform (cupynumeric.fft)": [[11, null]], "Discrete Fourier transform": [[3, "discrete-fourier-transform"]], "Distributions": [[460, "distributions"]], "Edge Detection": [[474, null]], "Edge detection": [[492, "edge-detection"]], "Eigenvalues": [[3, "eigenvalues"]], "Einsum and related": [[3, "einsum-and-related"]], "Elementwise bit operations": [[5, "elementwise-bit-operations"]], "Example 1": [[492, "example-1"]], "Example 2": [[492, "example-2"]], "Examples": [[475, null], [492, "examples"]], "Exercise: Change the number of clusters and number of observations and see how the clusters change": [[476, "Exercise:-Change-the-number-of-clusters-and-number-of-observations-and-see-how-the-clusters-change"]], "Exponents and logarithms": [[458, "exponents-and-logarithms"]], "Extrema Finding": [[458, "extrema-finding"]], "Factorizations": [[3, "factorizations"]], "Faster I/O Routines": [[491, "faster-i-o-routines"]], "Floating point routines": [[458, "floating-point-routines"]], "Frequently Asked Questions": [[480, null]], "From existing data": [[9, "from-existing-data"]], "From shape or value": [[9, "from-shape-or-value"]], "Functional programming": [[3, "functional-programming"]], "General Recommendations": [[491, "general-recommendations"]], "Generating index arrays": [[453, "generating-index-arrays"]], "Guidelines for performance benchmarks": [[486, "guidelines-for-performance-benchmarks"]], "Guidelines on designing cuPyNumeric applications": [[491, "guidelines-on-designing-cupynumeric-applications"]], "Guidelines on using cuPyNumeric APIs": [[491, "guidelines-on-using-cupynumeric-apis"]], "HPC cluster installation": [[492, "hpc-cluster-installation"]], "Handling complex numbers": [[458, "handling-complex-numbers"]], "Hardware requirements": [[492, "hardware-requirements"]], "Helper routines": [[11, "helper-routines"]], "Hermitian FFTs": [[11, "hermitian-ffts"]], "Histograms": [[465, "histograms"]], "How Do I Sign the DCO?": [[467, "how-do-i-sign-the-dco"]], "How do I time the execution of my application?": [[480, "how-do-i-time-the-execution-of-my-application"]], "How do I use Jupyter Notebooks?": [[480, "how-do-i-use-jupyter-notebooks"]], "How to begin": [[467, "how-to-begin"]], "How to determine available memory?": [[480, "how-to-determine-available-memory"]], "How to handle Out-Of-Memory errors?": [[480, "how-to-handle-out-of-memory-errors"]], "How to pass Legion and Realm arguments?": [[480, "how-to-pass-legion-and-realm-arguments"]], "Howtos": [[487, null]], "Hyperbolic functions": [[458, "hyperbolic-functions"]], "Implementation": [[473, "Implementation"], [474, "Implementation"], [476, "Implementation"], [477, "Implementation"]], "Indexing": [[3, "indexing"]], "Indexing behavior": [[485, "indexing-behavior"]], "Indexing routines": [[453, null]], "Indexing-like operations": [[453, "indexing-like-operations"]], "Indices and tables": [[481, "indices-and-tables"]], "Input and output": [[3, "input-and-output"], [454, null]], "Input and output (ndarray)": [[3, "input-and-output-ndarray"]], "Inserting data into arrays": [[453, "inserting-data-into-arrays"]], "Installation": [[482, null]], "Installing Conda Packages": [[482, "installing-conda-packages"]], "Installing PyPI Packages": [[482, "installing-pypi-packages"]], "Introduction": [[492, "introduction"]], "Item selection and manipulation": [[459, "item-selection-and-manipulation"]], "Jacobi stencil": [[478, null], [492, "jacobi-stencil"]], "Joining arrays": [[457, "joining-arrays"]], "K-Means Clustering Algorithm": [[476, null]], "LU factorization and related": [[3, "lu-factorization-and-related"]], "Learning Outcomes": [[473, "Learning-Outcomes"], [474, "Learning-Outcomes"], [476, "Learning-Outcomes"], [477, "Learning-Outcomes"]], "Lets run the kmeans algorithm using a set of inputs": [[476, "Lets-run-the-kmeans-algorithm-using-a-set-of-inputs"]], "Licenses": [[482, "licenses"]], "Linear Algebra": [[8, "linear-algebra"]], "Linear algebra (cupynumeric.linalg)": [[455, null]], "Logic functions": [[456, null]], "Logic operations": [[456, "logic-operations"]], "Logical operations": [[3, "logical-operations"]], "Making proper sets": [[462, "making-proper-sets"]], "Mathematical functions": [[3, "mathematical-functions"], [458, null]], "Matrix Functions": [[455, "matrix-functions"]], "Matrix and vector products": [[455, "matrix-and-vector-products"]], "Matrix multiplication": [[492, "matrix-multiplication"]], "Measure API coverage": [[488, null]], "Memory Layout": [[459, "memory-layout"]], "Merge tasks to reduce overhead": [[491, "merge-tasks-to-reduce-overhead"]], "Miscellaneous": [[458, "miscellaneous"]], "Miscellaneous matrix routines": [[3, "miscellaneous-matrix-routines"]], "Module-Level": [[8, "module-level"]], "Multi-Dimensional Array": [[8, "multi-dimensional-array"]], "Multi-node HPC": [[492, "multi-node-hpc"]], "Multi-node execution": [[484, "multi-node-execution"]], "NVIDIA cuPyNumeric": [[481, null]], "Newton Raphson Method In Two Dimensions": [[477, null]], "Norms and other numbers": [[455, "norms-and-other-numbers"]], "NumPy": [[483, "numpy"], [492, "numpy"]], "NumPy binary files (npy, npz)": [[454, "numpy-binary-files-npy-npz"]], "NumPy vs cuPyNumeric APIs": [[8, "numpy-vs-cupynumeric-apis"]], "Numerical ranges": [[9, "numerical-ranges"]], "OpenBLAS": [[468, "openblas"]], "Order argument": [[485, "order-argument"]], "Order statistics": [[465, "order-statistics"]], "Other Attributes": [[459, "other-attributes"]], "Other options": [[492, "other-options"]], "Overall coverage report": [[488, "overall-coverage-report"]], "Packing and unpacking bits": [[3, "packing-and-unpacking-bits"]], "Padding arrays": [[3, "padding-arrays"]], "Passing Legion and Realm arguments": [[484, "passing-legion-and-realm-arguments"]], "Performance Benchmarking": [[486, null]], "Pip": [[492, "pip"]], "Project comparisons": [[8, null]], "Questions?": [[480, "questions"]], "Random Generator": [[460, "random-generator"]], "Random Kit": [[483, "random-kit"]], "Random Sampling": [[8, "random-sampling"]], "Random sampling": [[3, "random-sampling"]], "Random sampling (cupynumeric.random)": [[460, null]], "Rational routines": [[458, "rational-routines"]], "Real FFTs": [[11, "real-ffts"]], "Rearranging elements": [[457, "rearranging-elements"]], "Reductions": [[485, "reductions"]], "Removing data from arrays": [[457, "removing-data-from-arrays"]], "Reshape returns a copy instead of view": [[491, "reshape-returns-a-copy-instead-of-view"]], "Resource allocation": [[492, "resource-allocation"]], "Returning a copy instead of a view": [[485, "returning-a-copy-instead-of-a-view"]], "Review Process": [[467, "review-process"]], "Rounding": [[458, "rounding"]], "Routines": [[461, null]], "Running cuPyNumeric code": [[492, "running-cupynumeric-code"]], "Running on CPU": [[492, "running-on-cpu"], [492, "id2"], [492, "id4"], [492, "id6"]], "Running on GPU": [[492, "running-on-gpu"], [492, "id3"], [492, "id5"], [492, "id7"], [492, "id9"]], "Running on GPU cluster": [[492, "running-on-gpu-cluster"]], "Running tests": [[470, null]], "SVD and related": [[3, "svd-and-related"]], "Sample Code": [[492, "sample-code"], [492, "id8"]], "Sample computation": [[492, "sample-computation"]], "Scalar return values": [[485, "scalar-return-values"]], "Searching": [[464, "searching"]], "Searching, sorting, and counting": [[3, "searching-sorting-and-counting"]], "Seeding and State": [[460, "seeding-and-state"]], "Set operations": [[3, "set-operations"]], "Set routines": [[462, null]], "Settings": [[463, null]], "Shape manipulation": [[459, "shape-manipulation"]], "Simple random data": [[460, "simple-random-data"]], "Single node": [[492, "single-node"]], "Single-node setup": [[492, "single-node-setup"]], "Solving equations and inverting matrices": [[455, "solving-equations-and-inverting-matrices"]], "Sorting": [[464, "sorting"]], "Sorting, searching, and counting": [[464, null]], "Special methods": [[459, "special-methods"]], "Splitting arrays": [[457, "splitting-arrays"]], "Stack results in a performance penalty": [[491, "stack-results-in-a-performance-penalty"]], "Stage configuration": [[470, "stage-configuration"]], "Standard FFTs": [[11, "standard-ffts"]], "Statistics": [[465, null]], "Sums, products, differences": [[458, "sums-products-differences"]], "Supported shapes and datatypes": [[485, "supported-shapes-and-datatypes"]], "TBLIS": [[468, "tblis"], [483, "tblis"]], "The Legalese: Developer Certificate of Origin": [[467, "the-legalese-developer-certificate-of-origin"]], "The N-Dimensional array (cupynumeric.ndarray)": [[459, null]], "Third-party notices": [[483, null]], "Tiling arrays": [[457, "tiling-arrays"]], "Top three Tips": [[492, "top-three-tips"]], "TorchSWE case study": [[479, null]], "Transpose-like operations": [[457, "transpose-like-operations"]], "Trigonometric functions": [[458, "trigonometric-functions"]], "Truth value testing": [[456, "truth-value-testing"]], "Trying Numpy code without changes": [[489, null]], "Tutorial": [[492, null]], "Ufuncs": [[3, "ufuncs"]], "Usage": [[493, null]], "Use array-based operations, AVOID loops with indexing": [[491, "use-array-based-operations-avoid-loops-with-indexing"]], "Use boolean masks, AVOID advanced indexing": [[491, "use-boolean-masks-avoid-advanced-indexing"]], "Use cuPyNumeric or NumPy arrays, AVOID native lists": [[491, "use-cupynumeric-or-numpy-arrays-avoid-native-lists"]], "Use logic functions, AVOID iterating through a loop": [[491, "use-logic-functions-avoid-iterating-through-a-loop"]], "Use mathematical functions, AVOID element-wise loops": [[491, "use-mathematical-functions-avoid-element-wise-loops"]], "Use output arguments to reduce memory allocation": [[491, "use-output-arguments-to-reduce-memory-allocation"]], "Use putmask to update an array based on another array": [[491, "use-putmask-to-update-an-array-based-on-another-array"]], "User guide": [[490, null]], "Using Legate timing tools": [[486, "using-legate-timing-tools"]], "Using a manual task manager": [[484, "using-a-manual-task-manager"]], "Using legate": [[484, "using-legate"]], "Various windows": [[466, "various-windows"]], "Vectorize for better performance": [[491, "vectorize-for-better-performance"]], "Verify your Installation": [[482, "verify-your-installation"]], "What are the anti-patterns in a NumPy code?": [[480, "what-are-the-anti-patterns-in-a-numpy-code"]], "What are the defaults?": [[480, "what-are-the-defaults"]], "What are the different task variants available in Legate?": [[480, "what-are-the-different-task-variants-available-in-legate"]], "What does this warning mean?": [[480, "what-does-this-warning-mean"]], "What if I don\u2019t have a GPU?": [[480, "what-if-i-dont-have-a-gpu"]], "What is the difference between Legate and cuPyNumeric?": [[480, "what-is-the-difference-between-legate-and-cupynumeric"]], "What is the version of legate?": [[480, "what-is-the-version-of-legate"]], "When to use python vs legate?": [[480, "when-to-use-python-vs-legate"]], "Where I can read more about cuPyNumeric?": [[480, "where-i-can-read-more-about-cupynumeric"]], "Why are the results different from NumPy?": [[480, "why-are-the-results-different-from-numpy"]], "Why doesn\u2019t Legate use my GPU?": [[480, "why-doesnt-legate-use-my-gpu"]], "Why is cuPyNumeric slower than CuPy on my laptop?": [[480, "why-is-cupynumeric-slower-than-cupy-on-my-laptop"]], "Why is cuPyNumeric slower than NumPy on my laptop?": [[480, "why-is-cupynumeric-slower-than-numpy-on-my-laptop"]], "Window functions": [[466, null]], "cuPyNumeric": [[492, "cupynumeric"]], "cuPyNumeric vs NumPy": [[492, "cupynumeric-vs-numpy"]], "cupynumeric.absolute": [[12, null]], "cupynumeric.add": [[13, null]], "cupynumeric.all": [[14, null]], "cupynumeric.allclose": [[15, null]], "cupynumeric.amax": [[16, null]], "cupynumeric.amin": [[17, null]], "cupynumeric.angle": [[18, null]], "cupynumeric.any": [[19, null]], "cupynumeric.append": [[20, null]], "cupynumeric.arange": [[21, null]], "cupynumeric.arccos": [[22, null]], "cupynumeric.arccosh": [[23, null]], "cupynumeric.arcsin": [[24, null]], "cupynumeric.arcsinh": [[25, null]], "cupynumeric.arctan": [[26, null]], "cupynumeric.arctan2": [[27, null]], "cupynumeric.arctanh": [[28, null]], "cupynumeric.argmax": [[29, null]], "cupynumeric.argmin": [[30, null]], "cupynumeric.argpartition": [[31, null]], "cupynumeric.argsort": [[32, null]], "cupynumeric.argwhere": [[33, null]], "cupynumeric.array": [[34, null]], "cupynumeric.array_equal": [[35, null]], "cupynumeric.array_split": [[36, null]], "cupynumeric.asarray": [[37, null]], "cupynumeric.atleast_1d": [[38, null]], "cupynumeric.atleast_2d": [[39, null]], "cupynumeric.atleast_3d": [[40, null]], "cupynumeric.average": [[41, null]], "cupynumeric.bartlett": [[42, null]], "cupynumeric.bincount": [[43, null]], "cupynumeric.bitwise_and": [[44, null]], "cupynumeric.bitwise_or": [[45, null]], "cupynumeric.bitwise_xor": [[46, null]], "cupynumeric.blackman": [[47, null]], "cupynumeric.block": [[48, null]], "cupynumeric.broadcast": [[6, null]], "cupynumeric.broadcast_arrays": [[49, null]], "cupynumeric.broadcast_shapes": [[50, null]], "cupynumeric.broadcast_to": [[51, null]], "cupynumeric.cbrt": [[52, null]], "cupynumeric.ceil": [[53, null]], "cupynumeric.choose": [[54, null]], "cupynumeric.clip": [[55, null]], "cupynumeric.column_stack": [[56, null]], "cupynumeric.compress": [[57, null]], "cupynumeric.concatenate": [[58, null]], "cupynumeric.conj": [[59, null]], "cupynumeric.conjugate": [[60, null]], "cupynumeric.convolve": [[61, null]], "cupynumeric.copy": [[62, null]], "cupynumeric.copysign": [[63, null]], "cupynumeric.copyto": [[64, null]], "cupynumeric.cos": [[65, null]], "cupynumeric.cosh": [[66, null]], "cupynumeric.count_nonzero": [[67, null]], "cupynumeric.cov": [[68, null]], "cupynumeric.cumprod": [[69, null]], "cupynumeric.cumsum": [[70, null]], "cupynumeric.deg2rad": [[71, null]], "cupynumeric.degrees": [[72, null]], "cupynumeric.delete": [[73, null]], "cupynumeric.diag": [[74, null]], "cupynumeric.diag_indices": [[75, null]], "cupynumeric.diag_indices_from": [[76, null]], "cupynumeric.diagflat": [[77, null]], "cupynumeric.diagonal": [[78, null]], "cupynumeric.diff": [[79, null]], "cupynumeric.digitize": [[80, null]], "cupynumeric.divide": [[81, null]], "cupynumeric.dot": [[82, null]], "cupynumeric.dsplit": [[83, null]], "cupynumeric.dstack": [[84, null]], "cupynumeric.einsum": [[85, null]], "cupynumeric.einsum_path": [[86, null]], "cupynumeric.empty": [[87, null]], "cupynumeric.empty_like": [[88, null]], "cupynumeric.equal": [[89, null]], "cupynumeric.exp": [[90, null]], "cupynumeric.exp2": [[91, null]], "cupynumeric.expand_dims": [[92, null]], "cupynumeric.expm1": [[93, null]], "cupynumeric.extract": [[94, null]], "cupynumeric.eye": [[95, null]], "cupynumeric.fabs": [[96, null]], "cupynumeric.fft.fft": [[97, null]], "cupynumeric.fft.fft2": [[98, null]], "cupynumeric.fft.fftn": [[99, null]], "cupynumeric.fft.fftshift": [[100, null]], "cupynumeric.fft.hfft": [[101, null]], "cupynumeric.fft.ifft": [[102, null]], "cupynumeric.fft.ifft2": [[103, null]], "cupynumeric.fft.ifftn": [[104, null]], "cupynumeric.fft.ifftshift": [[105, null]], "cupynumeric.fft.ihfft": [[106, null]], "cupynumeric.fft.irfft": [[107, null]], "cupynumeric.fft.irfft2": [[108, null]], "cupynumeric.fft.irfftn": [[109, null]], "cupynumeric.fft.rfft": [[110, null]], "cupynumeric.fft.rfft2": [[111, null]], "cupynumeric.fft.rfftn": [[112, null]], "cupynumeric.fill_diagonal": [[113, null]], "cupynumeric.find_common_type": [[114, null]], "cupynumeric.flatnonzero": [[115, null]], "cupynumeric.flip": [[116, null]], "cupynumeric.fliplr": [[117, null]], "cupynumeric.flipud": [[118, null]], "cupynumeric.float_power": [[119, null]], "cupynumeric.floor": [[120, null]], "cupynumeric.floor_divide": [[121, null]], "cupynumeric.fmax": [[122, null]], "cupynumeric.fmin": [[123, null]], "cupynumeric.fmod": [[124, null]], "cupynumeric.frexp": [[125, null]], "cupynumeric.full": [[126, null]], "cupynumeric.full_like": [[127, null]], "cupynumeric.gcd": [[128, null]], "cupynumeric.gradient": [[129, null]], "cupynumeric.greater": [[130, null]], "cupynumeric.greater_equal": [[131, null]], "cupynumeric.hamming": [[132, null]], "cupynumeric.hanning": [[133, null]], "cupynumeric.histogram": [[134, null]], "cupynumeric.hsplit": [[135, null]], "cupynumeric.hstack": [[136, null]], "cupynumeric.hypot": [[137, null]], "cupynumeric.identity": [[138, null]], "cupynumeric.imag": [[139, null]], "cupynumeric.indices": [[140, null]], "cupynumeric.inner": [[141, null]], "cupynumeric.invert": [[142, null]], "cupynumeric.isclose": [[143, null]], "cupynumeric.iscomplex": [[144, null]], "cupynumeric.iscomplexobj": [[145, null]], "cupynumeric.isfinite": [[146, null]], "cupynumeric.isinf": [[147, null]], "cupynumeric.isnan": [[148, null]], "cupynumeric.isneginf": [[149, null]], "cupynumeric.isposinf": [[150, null]], "cupynumeric.isreal": [[151, null]], "cupynumeric.isrealobj": [[152, null]], "cupynumeric.isscalar": [[153, null]], "cupynumeric.ix_": [[154, null]], "cupynumeric.kaiser": [[155, null]], "cupynumeric.lcm": [[156, null]], "cupynumeric.ldexp": [[157, null]], "cupynumeric.left_shift": [[158, null]], "cupynumeric.less": [[159, null]], "cupynumeric.less_equal": [[160, null]], "cupynumeric.linalg.cholesky": [[161, null]], "cupynumeric.linalg.eig": [[162, null]], "cupynumeric.linalg.eigh": [[163, null]], "cupynumeric.linalg.eigvals": [[164, null]], "cupynumeric.linalg.eigvalsh": [[165, null]], "cupynumeric.linalg.expm": [[166, null]], "cupynumeric.linalg.matrix_power": [[167, null]], "cupynumeric.linalg.multi_dot": [[168, null]], "cupynumeric.linalg.norm": [[169, null]], "cupynumeric.linalg.qr": [[170, null]], "cupynumeric.linalg.solve": [[171, null]], "cupynumeric.linalg.svd": [[172, null]], "cupynumeric.linspace": [[173, null]], "cupynumeric.load": [[174, null]], "cupynumeric.log": [[175, null]], "cupynumeric.log10": [[176, null]], "cupynumeric.log1p": [[177, null]], "cupynumeric.log2": [[178, null]], "cupynumeric.logaddexp": [[179, null]], "cupynumeric.logaddexp2": [[180, null]], "cupynumeric.logical_and": [[181, null]], "cupynumeric.logical_not": [[182, null]], "cupynumeric.logical_or": [[183, null]], "cupynumeric.logical_xor": [[184, null]], "cupynumeric.mask_indices": [[185, null]], "cupynumeric.matmul": [[186, null]], "cupynumeric.maximum": [[187, null]], "cupynumeric.mean": [[188, null]], "cupynumeric.median": [[189, null]], "cupynumeric.meshgrid": [[190, null]], "cupynumeric.minimum": [[191, null]], "cupynumeric.mod": [[192, null]], "cupynumeric.modf": [[193, null]], "cupynumeric.moveaxis": [[194, null]], "cupynumeric.multiply": [[195, null]], "cupynumeric.nan_to_num": [[196, null]], "cupynumeric.nanargmax": [[197, null]], "cupynumeric.nanargmin": [[198, null]], "cupynumeric.nancumprod": [[199, null]], "cupynumeric.nancumsum": [[200, null]], "cupynumeric.nanmax": [[201, null]], "cupynumeric.nanmean": [[202, null]], "cupynumeric.nanmedian": [[203, null]], "cupynumeric.nanmin": [[204, null]], "cupynumeric.nanpercentile": [[205, null]], "cupynumeric.nanprod": [[206, null]], "cupynumeric.nanquantile": [[207, null]], "cupynumeric.nansum": [[208, null]], "cupynumeric.ndarray": [[4, null]], "cupynumeric.ndarray.T": [[209, null]], "cupynumeric.ndarray.__abs__": [[210, null]], "cupynumeric.ndarray.__add__": [[211, null]], "cupynumeric.ndarray.__and__": [[212, null]], "cupynumeric.ndarray.__array__": [[213, null]], "cupynumeric.ndarray.__bool__": [[214, null]], "cupynumeric.ndarray.__complex__": [[215, null]], "cupynumeric.ndarray.__contains__": [[216, null]], "cupynumeric.ndarray.__copy__": [[217, null]], "cupynumeric.ndarray.__deepcopy__": [[218, null]], "cupynumeric.ndarray.__divmod__": [[219, null]], "cupynumeric.ndarray.__eq__": [[220, null]], "cupynumeric.ndarray.__float__": [[221, null]], "cupynumeric.ndarray.__floordiv__": [[222, null]], "cupynumeric.ndarray.__ge__": [[223, null]], "cupynumeric.ndarray.__getitem__": [[224, null]], "cupynumeric.ndarray.__gt__": [[225, null]], "cupynumeric.ndarray.__iadd__": [[226, null]], "cupynumeric.ndarray.__iand__": [[227, null]], "cupynumeric.ndarray.__ifloordiv__": [[228, null]], "cupynumeric.ndarray.__ilshift__": [[229, null]], "cupynumeric.ndarray.__imatmul__": [[230, null]], "cupynumeric.ndarray.__imod__": [[231, null]], "cupynumeric.ndarray.__imul__": [[232, null]], "cupynumeric.ndarray.__index__": [[233, null]], "cupynumeric.ndarray.__int__": [[234, null]], "cupynumeric.ndarray.__invert__": [[235, null]], "cupynumeric.ndarray.__ior__": [[236, null]], "cupynumeric.ndarray.__ipow__": [[237, null]], "cupynumeric.ndarray.__irshift__": [[238, null]], "cupynumeric.ndarray.__isub__": [[239, null]], "cupynumeric.ndarray.__itruediv__": [[240, null]], "cupynumeric.ndarray.__ixor__": [[241, null]], "cupynumeric.ndarray.__le__": [[242, null]], "cupynumeric.ndarray.__len__": [[243, null]], "cupynumeric.ndarray.__lshift__": [[244, null]], "cupynumeric.ndarray.__lt__": [[245, null]], "cupynumeric.ndarray.__matmul__": [[246, null]], "cupynumeric.ndarray.__mod__": [[247, null]], "cupynumeric.ndarray.__mul__": [[248, null]], "cupynumeric.ndarray.__ne__": [[249, null]], "cupynumeric.ndarray.__neg__": [[250, null]], "cupynumeric.ndarray.__new__": [[251, null]], "cupynumeric.ndarray.__or__": [[252, null]], "cupynumeric.ndarray.__pos__": [[253, null]], "cupynumeric.ndarray.__pow__": [[254, null]], "cupynumeric.ndarray.__reduce__": [[255, null]], "cupynumeric.ndarray.__repr__": [[256, null]], "cupynumeric.ndarray.__rmatmul__": [[257, null]], "cupynumeric.ndarray.__rshift__": [[258, null]], "cupynumeric.ndarray.__setitem__": [[259, null]], "cupynumeric.ndarray.__setstate__": [[260, null]], "cupynumeric.ndarray.__str__": [[261, null]], "cupynumeric.ndarray.__sub__": [[262, null]], "cupynumeric.ndarray.__truediv__": [[263, null]], "cupynumeric.ndarray.__xor__": [[264, null]], "cupynumeric.ndarray.all": [[265, null]], "cupynumeric.ndarray.any": [[266, null]], "cupynumeric.ndarray.argmax": [[267, null]], "cupynumeric.ndarray.argmin": [[268, null]], "cupynumeric.ndarray.argpartition": [[269, null]], "cupynumeric.ndarray.argsort": [[270, null]], "cupynumeric.ndarray.astype": [[271, null]], "cupynumeric.ndarray.base": [[272, null]], "cupynumeric.ndarray.choose": [[273, null]], "cupynumeric.ndarray.clip": [[274, null]], "cupynumeric.ndarray.compress": [[275, null]], "cupynumeric.ndarray.conj": [[276, null]], "cupynumeric.ndarray.conjugate": [[277, null]], "cupynumeric.ndarray.copy": [[278, null]], "cupynumeric.ndarray.ctypes": [[279, null]], "cupynumeric.ndarray.cumprod": [[280, null]], "cupynumeric.ndarray.cumsum": [[281, null]], "cupynumeric.ndarray.data": [[282, null]], "cupynumeric.ndarray.diagonal": [[283, null]], "cupynumeric.ndarray.dot": [[284, null]], "cupynumeric.ndarray.dtype": [[285, null]], "cupynumeric.ndarray.dump": [[286, null]], "cupynumeric.ndarray.dumps": [[287, null]], "cupynumeric.ndarray.fill": [[288, null]], "cupynumeric.ndarray.flags": [[289, null]], "cupynumeric.ndarray.flat": [[290, null]], "cupynumeric.ndarray.flatten": [[291, null]], "cupynumeric.ndarray.flip": [[292, null]], "cupynumeric.ndarray.getfield": [[293, null]], "cupynumeric.ndarray.imag": [[294, null]], "cupynumeric.ndarray.item": [[295, null]], "cupynumeric.ndarray.itemset": [[296, null]], "cupynumeric.ndarray.itemsize": [[297, null]], "cupynumeric.ndarray.max": [[298, null]], "cupynumeric.ndarray.mean": [[299, null]], "cupynumeric.ndarray.min": [[300, null]], "cupynumeric.ndarray.nbytes": [[301, null]], "cupynumeric.ndarray.ndim": [[302, null]], "cupynumeric.ndarray.nonzero": [[303, null]], "cupynumeric.ndarray.partition": [[304, null]], "cupynumeric.ndarray.prod": [[305, null]], "cupynumeric.ndarray.put": [[306, null]], "cupynumeric.ndarray.ravel": [[307, null]], "cupynumeric.ndarray.real": [[308, null]], "cupynumeric.ndarray.reshape": [[309, null]], "cupynumeric.ndarray.searchsorted": [[310, null]], "cupynumeric.ndarray.setfield": [[311, null]], "cupynumeric.ndarray.setflags": [[312, null]], "cupynumeric.ndarray.shape": [[313, null]], "cupynumeric.ndarray.size": [[314, null]], "cupynumeric.ndarray.sort": [[315, null]], "cupynumeric.ndarray.squeeze": [[316, null]], "cupynumeric.ndarray.strides": [[317, null]], "cupynumeric.ndarray.sum": [[318, null]], "cupynumeric.ndarray.swapaxes": [[319, null]], "cupynumeric.ndarray.take": [[320, null]], "cupynumeric.ndarray.tobytes": [[321, null]], "cupynumeric.ndarray.tofile": [[322, null]], "cupynumeric.ndarray.tolist": [[323, null]], "cupynumeric.ndarray.tostring": [[324, null]], "cupynumeric.ndarray.trace": [[325, null]], "cupynumeric.ndarray.transpose": [[326, null]], "cupynumeric.ndarray.unique": [[327, null]], "cupynumeric.ndarray.var": [[328, null]], "cupynumeric.ndarray.view": [[329, null]], "cupynumeric.ndim": [[330, null]], "cupynumeric.negative": [[331, null]], "cupynumeric.nextafter": [[332, null]], "cupynumeric.nonzero": [[333, null]], "cupynumeric.not_equal": [[334, null]], "cupynumeric.ones": [[335, null]], "cupynumeric.ones_like": [[336, null]], "cupynumeric.outer": [[337, null]], "cupynumeric.packbits": [[338, null]], "cupynumeric.partition": [[339, null]], "cupynumeric.percentile": [[340, null]], "cupynumeric.place": [[341, null]], "cupynumeric.positive": [[342, null]], "cupynumeric.power": [[343, null]], "cupynumeric.prod": [[344, null]], "cupynumeric.put": [[345, null]], "cupynumeric.put_along_axis": [[346, null]], "cupynumeric.putmask": [[347, null]], "cupynumeric.quantile": [[348, null]], "cupynumeric.rad2deg": [[349, null]], "cupynumeric.radians": [[350, null]], "cupynumeric.random.BitGenerator": [[1, null]], "cupynumeric.random.Generator": [[2, null]], "cupynumeric.random.beta": [[351, null]], "cupynumeric.random.binomial": [[352, null]], "cupynumeric.random.bytes": [[353, null]], "cupynumeric.random.chisquare": [[354, null]], "cupynumeric.random.default_rng": [[355, null]], "cupynumeric.random.exponential": [[356, null]], "cupynumeric.random.f": [[357, null]], "cupynumeric.random.gamma": [[358, null]], "cupynumeric.random.geometric": [[359, null]], "cupynumeric.random.gumbel": [[360, null]], "cupynumeric.random.hypergeometric": [[361, null]], "cupynumeric.random.laplace": [[362, null]], "cupynumeric.random.logistic": [[363, null]], "cupynumeric.random.lognormal": [[364, null]], "cupynumeric.random.logseries": [[365, null]], "cupynumeric.random.negative_binomial": [[366, null]], "cupynumeric.random.noncentral_chisquare": [[367, null]], "cupynumeric.random.noncentral_f": [[368, null]], "cupynumeric.random.normal": [[369, null]], "cupynumeric.random.pareto": [[370, null]], "cupynumeric.random.poisson": [[371, null]], "cupynumeric.random.power": [[372, null]], "cupynumeric.random.rand": [[373, null]], "cupynumeric.random.randint": [[374, null]], "cupynumeric.random.randn": [[375, null]], "cupynumeric.random.random": [[376, null]], "cupynumeric.random.random_integers": [[377, null]], "cupynumeric.random.random_sample": [[378, null]], "cupynumeric.random.ranf": [[379, null]], "cupynumeric.random.rayleigh": [[380, null]], "cupynumeric.random.sample": [[381, null]], "cupynumeric.random.seed": [[382, null]], "cupynumeric.random.standard_cauchy": [[383, null]], "cupynumeric.random.standard_exponential": [[384, null]], "cupynumeric.random.standard_gamma": [[385, null]], "cupynumeric.random.standard_t": [[386, null]], "cupynumeric.random.triangular": [[387, null]], "cupynumeric.random.uniform": [[388, null]], "cupynumeric.random.vonmises": [[389, null]], "cupynumeric.random.wald": [[390, null]], "cupynumeric.random.weibull": [[391, null]], "cupynumeric.random.zipf": [[392, null]], "cupynumeric.ravel": [[393, null]], "cupynumeric.ravel_multi_index": [[394, null]], "cupynumeric.real": [[395, null]], "cupynumeric.real_if_close": [[396, null]], "cupynumeric.reciprocal": [[397, null]], "cupynumeric.remainder": [[398, null]], "cupynumeric.repeat": [[399, null]], "cupynumeric.reshape": [[400, null]], "cupynumeric.right_shift": [[401, null]], "cupynumeric.rint": [[402, null]], "cupynumeric.roll": [[403, null]], "cupynumeric.roots": [[404, null]], "cupynumeric.rot90": [[405, null]], "cupynumeric.round": [[406, null]], "cupynumeric.row_stack": [[407, null]], "cupynumeric.searchsorted": [[408, null]], "cupynumeric.select": [[409, null]], "cupynumeric.shape": [[410, null]], "cupynumeric.sign": [[411, null]], "cupynumeric.signbit": [[412, null]], "cupynumeric.sin": [[413, null]], "cupynumeric.sinh": [[414, null]], "cupynumeric.sort": [[415, null]], "cupynumeric.sort_complex": [[416, null]], "cupynumeric.split": [[417, null]], "cupynumeric.sqrt": [[418, null]], "cupynumeric.square": [[419, null]], "cupynumeric.squeeze": [[420, null]], "cupynumeric.stack": [[421, null]], "cupynumeric.subtract": [[422, null]], "cupynumeric.sum": [[423, null]], "cupynumeric.swapaxes": [[424, null]], "cupynumeric.take": [[425, null]], "cupynumeric.take_along_axis": [[426, null]], "cupynumeric.tan": [[427, null]], "cupynumeric.tanh": [[428, null]], "cupynumeric.tensordot": [[429, null]], "cupynumeric.tile": [[430, null]], "cupynumeric.trace": [[431, null]], "cupynumeric.transpose": [[432, null]], "cupynumeric.tri": [[433, null]], "cupynumeric.tril": [[434, null]], "cupynumeric.tril_indices": [[435, null]], "cupynumeric.tril_indices_from": [[436, null]], "cupynumeric.triu": [[437, null]], "cupynumeric.triu_indices": [[438, null]], "cupynumeric.triu_indices_from": [[439, null]], "cupynumeric.true_divide": [[440, null]], "cupynumeric.trunc": [[441, null]], "cupynumeric.unique": [[442, null]], "cupynumeric.unpackbits": [[443, null]], "cupynumeric.unravel_index": [[444, null]], "cupynumeric.var": [[445, null]], "cupynumeric.vdot": [[446, null]], "cupynumeric.vsplit": [[447, null]], "cupynumeric.vstack": [[448, null]], "cupynumeric.where": [[449, null]], "cupynumeric.zeros": [[450, null]], "cupynumeric.zeros_like": [[451, null]], "doctor": [[463, "doctor"]], "doctor_filename": [[463, "doctor-filename"], [463, "id2"]], "doctor_format": [[463, "doctor-format"]], "fallback_stacktrace": [[463, "fallback-stacktrace"]], "fast_math": [[463, "fast-math"]], "force_thunk": [[463, "force-thunk"]], "matmul_cache_size": [[463, "matmul-cache-size"]], "min_cpu_chunk": [[463, "min-cpu-chunk"]], "min_gpu_chunk": [[463, "min-gpu-chunk"]], "min_omp_chunk": [[463, "min-omp-chunk"]], "numpy_compat": [[463, "numpy-compat"]], "preload_cudalibs": [[463, "preload-cudalibs"]], "report_coverage": [[463, "report-coverage"]], "report_dump_callstack": [[463, "report-dump-callstack"]], "report_dump_csv": [[463, "report-dump-csv"]], "test": [[463, "test"]], "warn": [[463, "warn"]]}, "docnames": ["_implemented", "api/_bitgenerator", "api/_generator", "api/_grouped", "api/_ndarray", "api/binary", "api/broadcast", "api/classes", "api/comparison", "api/creation", "api/datatype", "api/fft", "api/generated/cupynumeric.absolute", "api/generated/cupynumeric.add", "api/generated/cupynumeric.all", "api/generated/cupynumeric.allclose", "api/generated/cupynumeric.amax", "api/generated/cupynumeric.amin", "api/generated/cupynumeric.angle", "api/generated/cupynumeric.any", "api/generated/cupynumeric.append", "api/generated/cupynumeric.arange", "api/generated/cupynumeric.arccos", "api/generated/cupynumeric.arccosh", "api/generated/cupynumeric.arcsin", "api/generated/cupynumeric.arcsinh", "api/generated/cupynumeric.arctan", "api/generated/cupynumeric.arctan2", "api/generated/cupynumeric.arctanh", "api/generated/cupynumeric.argmax", "api/generated/cupynumeric.argmin", "api/generated/cupynumeric.argpartition", "api/generated/cupynumeric.argsort", "api/generated/cupynumeric.argwhere", "api/generated/cupynumeric.array", "api/generated/cupynumeric.array_equal", "api/generated/cupynumeric.array_split", "api/generated/cupynumeric.asarray", "api/generated/cupynumeric.atleast_1d", "api/generated/cupynumeric.atleast_2d", "api/generated/cupynumeric.atleast_3d", "api/generated/cupynumeric.average", "api/generated/cupynumeric.bartlett", "api/generated/cupynumeric.bincount", "api/generated/cupynumeric.bitwise_and", "api/generated/cupynumeric.bitwise_or", "api/generated/cupynumeric.bitwise_xor", "api/generated/cupynumeric.blackman", "api/generated/cupynumeric.block", "api/generated/cupynumeric.broadcast_arrays", "api/generated/cupynumeric.broadcast_shapes", "api/generated/cupynumeric.broadcast_to", "api/generated/cupynumeric.cbrt", "api/generated/cupynumeric.ceil", "api/generated/cupynumeric.choose", "api/generated/cupynumeric.clip", "api/generated/cupynumeric.column_stack", "api/generated/cupynumeric.compress", "api/generated/cupynumeric.concatenate", "api/generated/cupynumeric.conj", "api/generated/cupynumeric.conjugate", "api/generated/cupynumeric.convolve", "api/generated/cupynumeric.copy", "api/generated/cupynumeric.copysign", "api/generated/cupynumeric.copyto", "api/generated/cupynumeric.cos", "api/generated/cupynumeric.cosh", "api/generated/cupynumeric.count_nonzero", "api/generated/cupynumeric.cov", "api/generated/cupynumeric.cumprod", "api/generated/cupynumeric.cumsum", "api/generated/cupynumeric.deg2rad", "api/generated/cupynumeric.degrees", "api/generated/cupynumeric.delete", "api/generated/cupynumeric.diag", "api/generated/cupynumeric.diag_indices", "api/generated/cupynumeric.diag_indices_from", "api/generated/cupynumeric.diagflat", "api/generated/cupynumeric.diagonal", "api/generated/cupynumeric.diff", "api/generated/cupynumeric.digitize", "api/generated/cupynumeric.divide", "api/generated/cupynumeric.dot", "api/generated/cupynumeric.dsplit", "api/generated/cupynumeric.dstack", "api/generated/cupynumeric.einsum", "api/generated/cupynumeric.einsum_path", "api/generated/cupynumeric.empty", "api/generated/cupynumeric.empty_like", "api/generated/cupynumeric.equal", "api/generated/cupynumeric.exp", "api/generated/cupynumeric.exp2", "api/generated/cupynumeric.expand_dims", "api/generated/cupynumeric.expm1", "api/generated/cupynumeric.extract", "api/generated/cupynumeric.eye", "api/generated/cupynumeric.fabs", "api/generated/cupynumeric.fft.fft", "api/generated/cupynumeric.fft.fft2", "api/generated/cupynumeric.fft.fftn", "api/generated/cupynumeric.fft.fftshift", "api/generated/cupynumeric.fft.hfft", "api/generated/cupynumeric.fft.ifft", "api/generated/cupynumeric.fft.ifft2", "api/generated/cupynumeric.fft.ifftn", "api/generated/cupynumeric.fft.ifftshift", "api/generated/cupynumeric.fft.ihfft", "api/generated/cupynumeric.fft.irfft", "api/generated/cupynumeric.fft.irfft2", "api/generated/cupynumeric.fft.irfftn", "api/generated/cupynumeric.fft.rfft", "api/generated/cupynumeric.fft.rfft2", "api/generated/cupynumeric.fft.rfftn", "api/generated/cupynumeric.fill_diagonal", "api/generated/cupynumeric.find_common_type", "api/generated/cupynumeric.flatnonzero", "api/generated/cupynumeric.flip", "api/generated/cupynumeric.fliplr", "api/generated/cupynumeric.flipud", "api/generated/cupynumeric.float_power", "api/generated/cupynumeric.floor", "api/generated/cupynumeric.floor_divide", "api/generated/cupynumeric.fmax", "api/generated/cupynumeric.fmin", "api/generated/cupynumeric.fmod", "api/generated/cupynumeric.frexp", "api/generated/cupynumeric.full", "api/generated/cupynumeric.full_like", "api/generated/cupynumeric.gcd", "api/generated/cupynumeric.gradient", "api/generated/cupynumeric.greater", "api/generated/cupynumeric.greater_equal", "api/generated/cupynumeric.hamming", "api/generated/cupynumeric.hanning", "api/generated/cupynumeric.histogram", "api/generated/cupynumeric.hsplit", "api/generated/cupynumeric.hstack", "api/generated/cupynumeric.hypot", "api/generated/cupynumeric.identity", "api/generated/cupynumeric.imag", "api/generated/cupynumeric.indices", "api/generated/cupynumeric.inner", "api/generated/cupynumeric.invert", "api/generated/cupynumeric.isclose", "api/generated/cupynumeric.iscomplex", "api/generated/cupynumeric.iscomplexobj", "api/generated/cupynumeric.isfinite", "api/generated/cupynumeric.isinf", "api/generated/cupynumeric.isnan", "api/generated/cupynumeric.isneginf", "api/generated/cupynumeric.isposinf", "api/generated/cupynumeric.isreal", "api/generated/cupynumeric.isrealobj", "api/generated/cupynumeric.isscalar", "api/generated/cupynumeric.ix_", "api/generated/cupynumeric.kaiser", "api/generated/cupynumeric.lcm", "api/generated/cupynumeric.ldexp", "api/generated/cupynumeric.left_shift", "api/generated/cupynumeric.less", "api/generated/cupynumeric.less_equal", "api/generated/cupynumeric.linalg.cholesky", "api/generated/cupynumeric.linalg.eig", "api/generated/cupynumeric.linalg.eigh", "api/generated/cupynumeric.linalg.eigvals", "api/generated/cupynumeric.linalg.eigvalsh", "api/generated/cupynumeric.linalg.expm", "api/generated/cupynumeric.linalg.matrix_power", "api/generated/cupynumeric.linalg.multi_dot", "api/generated/cupynumeric.linalg.norm", "api/generated/cupynumeric.linalg.qr", "api/generated/cupynumeric.linalg.solve", "api/generated/cupynumeric.linalg.svd", "api/generated/cupynumeric.linspace", "api/generated/cupynumeric.load", "api/generated/cupynumeric.log", "api/generated/cupynumeric.log10", "api/generated/cupynumeric.log1p", "api/generated/cupynumeric.log2", "api/generated/cupynumeric.logaddexp", "api/generated/cupynumeric.logaddexp2", "api/generated/cupynumeric.logical_and", "api/generated/cupynumeric.logical_not", "api/generated/cupynumeric.logical_or", "api/generated/cupynumeric.logical_xor", "api/generated/cupynumeric.mask_indices", "api/generated/cupynumeric.matmul", "api/generated/cupynumeric.maximum", "api/generated/cupynumeric.mean", "api/generated/cupynumeric.median", "api/generated/cupynumeric.meshgrid", "api/generated/cupynumeric.minimum", "api/generated/cupynumeric.mod", "api/generated/cupynumeric.modf", "api/generated/cupynumeric.moveaxis", "api/generated/cupynumeric.multiply", "api/generated/cupynumeric.nan_to_num", "api/generated/cupynumeric.nanargmax", "api/generated/cupynumeric.nanargmin", "api/generated/cupynumeric.nancumprod", "api/generated/cupynumeric.nancumsum", "api/generated/cupynumeric.nanmax", "api/generated/cupynumeric.nanmean", "api/generated/cupynumeric.nanmedian", "api/generated/cupynumeric.nanmin", "api/generated/cupynumeric.nanpercentile", "api/generated/cupynumeric.nanprod", "api/generated/cupynumeric.nanquantile", "api/generated/cupynumeric.nansum", "api/generated/cupynumeric.ndarray.T", "api/generated/cupynumeric.ndarray.__abs__", "api/generated/cupynumeric.ndarray.__add__", "api/generated/cupynumeric.ndarray.__and__", "api/generated/cupynumeric.ndarray.__array__", "api/generated/cupynumeric.ndarray.__bool__", "api/generated/cupynumeric.ndarray.__complex__", "api/generated/cupynumeric.ndarray.__contains__", "api/generated/cupynumeric.ndarray.__copy__", "api/generated/cupynumeric.ndarray.__deepcopy__", "api/generated/cupynumeric.ndarray.__divmod__", "api/generated/cupynumeric.ndarray.__eq__", "api/generated/cupynumeric.ndarray.__float__", "api/generated/cupynumeric.ndarray.__floordiv__", "api/generated/cupynumeric.ndarray.__ge__", "api/generated/cupynumeric.ndarray.__getitem__", "api/generated/cupynumeric.ndarray.__gt__", "api/generated/cupynumeric.ndarray.__iadd__", "api/generated/cupynumeric.ndarray.__iand__", "api/generated/cupynumeric.ndarray.__ifloordiv__", "api/generated/cupynumeric.ndarray.__ilshift__", "api/generated/cupynumeric.ndarray.__imatmul__", "api/generated/cupynumeric.ndarray.__imod__", "api/generated/cupynumeric.ndarray.__imul__", "api/generated/cupynumeric.ndarray.__index__", "api/generated/cupynumeric.ndarray.__int__", "api/generated/cupynumeric.ndarray.__invert__", "api/generated/cupynumeric.ndarray.__ior__", "api/generated/cupynumeric.ndarray.__ipow__", "api/generated/cupynumeric.ndarray.__irshift__", "api/generated/cupynumeric.ndarray.__isub__", "api/generated/cupynumeric.ndarray.__itruediv__", "api/generated/cupynumeric.ndarray.__ixor__", "api/generated/cupynumeric.ndarray.__le__", "api/generated/cupynumeric.ndarray.__len__", "api/generated/cupynumeric.ndarray.__lshift__", "api/generated/cupynumeric.ndarray.__lt__", "api/generated/cupynumeric.ndarray.__matmul__", "api/generated/cupynumeric.ndarray.__mod__", "api/generated/cupynumeric.ndarray.__mul__", "api/generated/cupynumeric.ndarray.__ne__", "api/generated/cupynumeric.ndarray.__neg__", "api/generated/cupynumeric.ndarray.__new__", "api/generated/cupynumeric.ndarray.__or__", "api/generated/cupynumeric.ndarray.__pos__", "api/generated/cupynumeric.ndarray.__pow__", "api/generated/cupynumeric.ndarray.__reduce__", "api/generated/cupynumeric.ndarray.__repr__", "api/generated/cupynumeric.ndarray.__rmatmul__", "api/generated/cupynumeric.ndarray.__rshift__", "api/generated/cupynumeric.ndarray.__setitem__", "api/generated/cupynumeric.ndarray.__setstate__", "api/generated/cupynumeric.ndarray.__str__", "api/generated/cupynumeric.ndarray.__sub__", "api/generated/cupynumeric.ndarray.__truediv__", "api/generated/cupynumeric.ndarray.__xor__", "api/generated/cupynumeric.ndarray.all", "api/generated/cupynumeric.ndarray.any", "api/generated/cupynumeric.ndarray.argmax", "api/generated/cupynumeric.ndarray.argmin", "api/generated/cupynumeric.ndarray.argpartition", "api/generated/cupynumeric.ndarray.argsort", "api/generated/cupynumeric.ndarray.astype", "api/generated/cupynumeric.ndarray.base", "api/generated/cupynumeric.ndarray.choose", "api/generated/cupynumeric.ndarray.clip", "api/generated/cupynumeric.ndarray.compress", "api/generated/cupynumeric.ndarray.conj", "api/generated/cupynumeric.ndarray.conjugate", "api/generated/cupynumeric.ndarray.copy", "api/generated/cupynumeric.ndarray.ctypes", "api/generated/cupynumeric.ndarray.cumprod", "api/generated/cupynumeric.ndarray.cumsum", "api/generated/cupynumeric.ndarray.data", "api/generated/cupynumeric.ndarray.diagonal", "api/generated/cupynumeric.ndarray.dot", "api/generated/cupynumeric.ndarray.dtype", "api/generated/cupynumeric.ndarray.dump", "api/generated/cupynumeric.ndarray.dumps", "api/generated/cupynumeric.ndarray.fill", "api/generated/cupynumeric.ndarray.flags", "api/generated/cupynumeric.ndarray.flat", "api/generated/cupynumeric.ndarray.flatten", "api/generated/cupynumeric.ndarray.flip", "api/generated/cupynumeric.ndarray.getfield", "api/generated/cupynumeric.ndarray.imag", "api/generated/cupynumeric.ndarray.item", "api/generated/cupynumeric.ndarray.itemset", "api/generated/cupynumeric.ndarray.itemsize", "api/generated/cupynumeric.ndarray.max", "api/generated/cupynumeric.ndarray.mean", "api/generated/cupynumeric.ndarray.min", "api/generated/cupynumeric.ndarray.nbytes", "api/generated/cupynumeric.ndarray.ndim", "api/generated/cupynumeric.ndarray.nonzero", "api/generated/cupynumeric.ndarray.partition", "api/generated/cupynumeric.ndarray.prod", "api/generated/cupynumeric.ndarray.put", "api/generated/cupynumeric.ndarray.ravel", "api/generated/cupynumeric.ndarray.real", "api/generated/cupynumeric.ndarray.reshape", "api/generated/cupynumeric.ndarray.searchsorted", "api/generated/cupynumeric.ndarray.setfield", "api/generated/cupynumeric.ndarray.setflags", "api/generated/cupynumeric.ndarray.shape", "api/generated/cupynumeric.ndarray.size", "api/generated/cupynumeric.ndarray.sort", "api/generated/cupynumeric.ndarray.squeeze", "api/generated/cupynumeric.ndarray.strides", "api/generated/cupynumeric.ndarray.sum", "api/generated/cupynumeric.ndarray.swapaxes", "api/generated/cupynumeric.ndarray.take", "api/generated/cupynumeric.ndarray.tobytes", "api/generated/cupynumeric.ndarray.tofile", "api/generated/cupynumeric.ndarray.tolist", "api/generated/cupynumeric.ndarray.tostring", "api/generated/cupynumeric.ndarray.trace", "api/generated/cupynumeric.ndarray.transpose", "api/generated/cupynumeric.ndarray.unique", "api/generated/cupynumeric.ndarray.var", "api/generated/cupynumeric.ndarray.view", "api/generated/cupynumeric.ndim", "api/generated/cupynumeric.negative", "api/generated/cupynumeric.nextafter", "api/generated/cupynumeric.nonzero", "api/generated/cupynumeric.not_equal", "api/generated/cupynumeric.ones", "api/generated/cupynumeric.ones_like", "api/generated/cupynumeric.outer", "api/generated/cupynumeric.packbits", "api/generated/cupynumeric.partition", "api/generated/cupynumeric.percentile", "api/generated/cupynumeric.place", "api/generated/cupynumeric.positive", "api/generated/cupynumeric.power", "api/generated/cupynumeric.prod", "api/generated/cupynumeric.put", "api/generated/cupynumeric.put_along_axis", "api/generated/cupynumeric.putmask", "api/generated/cupynumeric.quantile", "api/generated/cupynumeric.rad2deg", "api/generated/cupynumeric.radians", "api/generated/cupynumeric.random.beta", "api/generated/cupynumeric.random.binomial", "api/generated/cupynumeric.random.bytes", "api/generated/cupynumeric.random.chisquare", "api/generated/cupynumeric.random.default_rng", "api/generated/cupynumeric.random.exponential", "api/generated/cupynumeric.random.f", "api/generated/cupynumeric.random.gamma", "api/generated/cupynumeric.random.geometric", "api/generated/cupynumeric.random.gumbel", "api/generated/cupynumeric.random.hypergeometric", "api/generated/cupynumeric.random.laplace", "api/generated/cupynumeric.random.logistic", "api/generated/cupynumeric.random.lognormal", "api/generated/cupynumeric.random.logseries", "api/generated/cupynumeric.random.negative_binomial", "api/generated/cupynumeric.random.noncentral_chisquare", "api/generated/cupynumeric.random.noncentral_f", "api/generated/cupynumeric.random.normal", "api/generated/cupynumeric.random.pareto", "api/generated/cupynumeric.random.poisson", "api/generated/cupynumeric.random.power", "api/generated/cupynumeric.random.rand", "api/generated/cupynumeric.random.randint", "api/generated/cupynumeric.random.randn", "api/generated/cupynumeric.random.random", "api/generated/cupynumeric.random.random_integers", "api/generated/cupynumeric.random.random_sample", "api/generated/cupynumeric.random.ranf", "api/generated/cupynumeric.random.rayleigh", "api/generated/cupynumeric.random.sample", "api/generated/cupynumeric.random.seed", "api/generated/cupynumeric.random.standard_cauchy", "api/generated/cupynumeric.random.standard_exponential", "api/generated/cupynumeric.random.standard_gamma", "api/generated/cupynumeric.random.standard_t", "api/generated/cupynumeric.random.triangular", "api/generated/cupynumeric.random.uniform", "api/generated/cupynumeric.random.vonmises", "api/generated/cupynumeric.random.wald", "api/generated/cupynumeric.random.weibull", "api/generated/cupynumeric.random.zipf", "api/generated/cupynumeric.ravel", "api/generated/cupynumeric.ravel_multi_index", "api/generated/cupynumeric.real", "api/generated/cupynumeric.real_if_close", "api/generated/cupynumeric.reciprocal", "api/generated/cupynumeric.remainder", "api/generated/cupynumeric.repeat", "api/generated/cupynumeric.reshape", "api/generated/cupynumeric.right_shift", "api/generated/cupynumeric.rint", "api/generated/cupynumeric.roll", "api/generated/cupynumeric.roots", "api/generated/cupynumeric.rot90", "api/generated/cupynumeric.round", "api/generated/cupynumeric.row_stack", "api/generated/cupynumeric.searchsorted", "api/generated/cupynumeric.select", "api/generated/cupynumeric.shape", "api/generated/cupynumeric.sign", "api/generated/cupynumeric.signbit", "api/generated/cupynumeric.sin", "api/generated/cupynumeric.sinh", "api/generated/cupynumeric.sort", "api/generated/cupynumeric.sort_complex", "api/generated/cupynumeric.split", "api/generated/cupynumeric.sqrt", "api/generated/cupynumeric.square", "api/generated/cupynumeric.squeeze", "api/generated/cupynumeric.stack", "api/generated/cupynumeric.subtract", "api/generated/cupynumeric.sum", "api/generated/cupynumeric.swapaxes", "api/generated/cupynumeric.take", "api/generated/cupynumeric.take_along_axis", "api/generated/cupynumeric.tan", "api/generated/cupynumeric.tanh", "api/generated/cupynumeric.tensordot", "api/generated/cupynumeric.tile", "api/generated/cupynumeric.trace", "api/generated/cupynumeric.transpose", "api/generated/cupynumeric.tri", "api/generated/cupynumeric.tril", "api/generated/cupynumeric.tril_indices", "api/generated/cupynumeric.tril_indices_from", "api/generated/cupynumeric.triu", "api/generated/cupynumeric.triu_indices", "api/generated/cupynumeric.triu_indices_from", "api/generated/cupynumeric.true_divide", "api/generated/cupynumeric.trunc", "api/generated/cupynumeric.unique", "api/generated/cupynumeric.unpackbits", "api/generated/cupynumeric.unravel_index", "api/generated/cupynumeric.var", "api/generated/cupynumeric.vdot", "api/generated/cupynumeric.vsplit", "api/generated/cupynumeric.vstack", "api/generated/cupynumeric.where", "api/generated/cupynumeric.zeros", "api/generated/cupynumeric.zeros_like", "api/index", "api/indexing", "api/io", "api/linalg", "api/logic", "api/manipulation", "api/math", "api/ndarray", "api/random", "api/routines", "api/set", "api/settings", "api/sorting", "api/statistics", "api/window", "developer/CONTRIBUTING", "developer/building", "developer/index", "developer/testing", "examples/black_scholes", "examples/cholesky", "examples/compact_finite_difference", "examples/edge_detection", "examples/index", "examples/kmeans", "examples/newton_raphson_2d", "examples/stencil", "examples/torchswe", "faqs", "index", "installation", "oss-licenses", "user/advanced", "user/differences", "user/howtos/benchmarking", "user/howtos/index", "user/howtos/measuring", "user/howtos/patching", "user/index", "user/practices", "user/tutorial", "user/usage"], "envversion": {"nbsphinx": 4, "sphinx": 64, "sphinx.domains.c": 3, "sphinx.domains.changeset": 1, "sphinx.domains.citation": 1, "sphinx.domains.cpp": 9, "sphinx.domains.index": 1, "sphinx.domains.javascript": 3, "sphinx.domains.math": 2, "sphinx.domains.python": 4, "sphinx.domains.rst": 2, "sphinx.domains.std": 2, "sphinx.ext.intersphinx": 1}, "filenames": ["_implemented.rst", "api/_bitgenerator.rst", "api/_generator.rst", "api/_grouped.rst", "api/_ndarray.rst", "api/binary.rst", "api/broadcast.rst", "api/classes.rst", "api/comparison.rst", "api/creation.rst", "api/datatype.rst", "api/fft.rst", "api/generated/cupynumeric.absolute.rst", "api/generated/cupynumeric.add.rst", "api/generated/cupynumeric.all.rst", "api/generated/cupynumeric.allclose.rst", "api/generated/cupynumeric.amax.rst", "api/generated/cupynumeric.amin.rst", "api/generated/cupynumeric.angle.rst", "api/generated/cupynumeric.any.rst", "api/generated/cupynumeric.append.rst", "api/generated/cupynumeric.arange.rst", "api/generated/cupynumeric.arccos.rst", "api/generated/cupynumeric.arccosh.rst", "api/generated/cupynumeric.arcsin.rst", "api/generated/cupynumeric.arcsinh.rst", "api/generated/cupynumeric.arctan.rst", "api/generated/cupynumeric.arctan2.rst", "api/generated/cupynumeric.arctanh.rst", "api/generated/cupynumeric.argmax.rst", "api/generated/cupynumeric.argmin.rst", "api/generated/cupynumeric.argpartition.rst", "api/generated/cupynumeric.argsort.rst", "api/generated/cupynumeric.argwhere.rst", "api/generated/cupynumeric.array.rst", "api/generated/cupynumeric.array_equal.rst", "api/generated/cupynumeric.array_split.rst", "api/generated/cupynumeric.asarray.rst", "api/generated/cupynumeric.atleast_1d.rst", "api/generated/cupynumeric.atleast_2d.rst", "api/generated/cupynumeric.atleast_3d.rst", "api/generated/cupynumeric.average.rst", "api/generated/cupynumeric.bartlett.rst", "api/generated/cupynumeric.bincount.rst", "api/generated/cupynumeric.bitwise_and.rst", "api/generated/cupynumeric.bitwise_or.rst", "api/generated/cupynumeric.bitwise_xor.rst", "api/generated/cupynumeric.blackman.rst", "api/generated/cupynumeric.block.rst", "api/generated/cupynumeric.broadcast_arrays.rst", "api/generated/cupynumeric.broadcast_shapes.rst", "api/generated/cupynumeric.broadcast_to.rst", "api/generated/cupynumeric.cbrt.rst", "api/generated/cupynumeric.ceil.rst", "api/generated/cupynumeric.choose.rst", "api/generated/cupynumeric.clip.rst", "api/generated/cupynumeric.column_stack.rst", "api/generated/cupynumeric.compress.rst", "api/generated/cupynumeric.concatenate.rst", "api/generated/cupynumeric.conj.rst", "api/generated/cupynumeric.conjugate.rst", "api/generated/cupynumeric.convolve.rst", "api/generated/cupynumeric.copy.rst", "api/generated/cupynumeric.copysign.rst", "api/generated/cupynumeric.copyto.rst", "api/generated/cupynumeric.cos.rst", "api/generated/cupynumeric.cosh.rst", "api/generated/cupynumeric.count_nonzero.rst", "api/generated/cupynumeric.cov.rst", "api/generated/cupynumeric.cumprod.rst", "api/generated/cupynumeric.cumsum.rst", "api/generated/cupynumeric.deg2rad.rst", "api/generated/cupynumeric.degrees.rst", "api/generated/cupynumeric.delete.rst", "api/generated/cupynumeric.diag.rst", "api/generated/cupynumeric.diag_indices.rst", "api/generated/cupynumeric.diag_indices_from.rst", "api/generated/cupynumeric.diagflat.rst", "api/generated/cupynumeric.diagonal.rst", "api/generated/cupynumeric.diff.rst", "api/generated/cupynumeric.digitize.rst", "api/generated/cupynumeric.divide.rst", "api/generated/cupynumeric.dot.rst", "api/generated/cupynumeric.dsplit.rst", "api/generated/cupynumeric.dstack.rst", "api/generated/cupynumeric.einsum.rst", "api/generated/cupynumeric.einsum_path.rst", "api/generated/cupynumeric.empty.rst", "api/generated/cupynumeric.empty_like.rst", "api/generated/cupynumeric.equal.rst", "api/generated/cupynumeric.exp.rst", "api/generated/cupynumeric.exp2.rst", "api/generated/cupynumeric.expand_dims.rst", "api/generated/cupynumeric.expm1.rst", "api/generated/cupynumeric.extract.rst", "api/generated/cupynumeric.eye.rst", "api/generated/cupynumeric.fabs.rst", "api/generated/cupynumeric.fft.fft.rst", "api/generated/cupynumeric.fft.fft2.rst", "api/generated/cupynumeric.fft.fftn.rst", "api/generated/cupynumeric.fft.fftshift.rst", "api/generated/cupynumeric.fft.hfft.rst", "api/generated/cupynumeric.fft.ifft.rst", "api/generated/cupynumeric.fft.ifft2.rst", "api/generated/cupynumeric.fft.ifftn.rst", "api/generated/cupynumeric.fft.ifftshift.rst", "api/generated/cupynumeric.fft.ihfft.rst", "api/generated/cupynumeric.fft.irfft.rst", "api/generated/cupynumeric.fft.irfft2.rst", "api/generated/cupynumeric.fft.irfftn.rst", "api/generated/cupynumeric.fft.rfft.rst", "api/generated/cupynumeric.fft.rfft2.rst", "api/generated/cupynumeric.fft.rfftn.rst", "api/generated/cupynumeric.fill_diagonal.rst", "api/generated/cupynumeric.find_common_type.rst", "api/generated/cupynumeric.flatnonzero.rst", "api/generated/cupynumeric.flip.rst", "api/generated/cupynumeric.fliplr.rst", "api/generated/cupynumeric.flipud.rst", "api/generated/cupynumeric.float_power.rst", "api/generated/cupynumeric.floor.rst", "api/generated/cupynumeric.floor_divide.rst", "api/generated/cupynumeric.fmax.rst", "api/generated/cupynumeric.fmin.rst", "api/generated/cupynumeric.fmod.rst", "api/generated/cupynumeric.frexp.rst", "api/generated/cupynumeric.full.rst", "api/generated/cupynumeric.full_like.rst", "api/generated/cupynumeric.gcd.rst", "api/generated/cupynumeric.gradient.rst", "api/generated/cupynumeric.greater.rst", "api/generated/cupynumeric.greater_equal.rst", "api/generated/cupynumeric.hamming.rst", "api/generated/cupynumeric.hanning.rst", "api/generated/cupynumeric.histogram.rst", "api/generated/cupynumeric.hsplit.rst", "api/generated/cupynumeric.hstack.rst", "api/generated/cupynumeric.hypot.rst", "api/generated/cupynumeric.identity.rst", "api/generated/cupynumeric.imag.rst", "api/generated/cupynumeric.indices.rst", "api/generated/cupynumeric.inner.rst", "api/generated/cupynumeric.invert.rst", "api/generated/cupynumeric.isclose.rst", "api/generated/cupynumeric.iscomplex.rst", "api/generated/cupynumeric.iscomplexobj.rst", "api/generated/cupynumeric.isfinite.rst", "api/generated/cupynumeric.isinf.rst", "api/generated/cupynumeric.isnan.rst", "api/generated/cupynumeric.isneginf.rst", "api/generated/cupynumeric.isposinf.rst", "api/generated/cupynumeric.isreal.rst", "api/generated/cupynumeric.isrealobj.rst", "api/generated/cupynumeric.isscalar.rst", "api/generated/cupynumeric.ix_.rst", "api/generated/cupynumeric.kaiser.rst", "api/generated/cupynumeric.lcm.rst", "api/generated/cupynumeric.ldexp.rst", "api/generated/cupynumeric.left_shift.rst", "api/generated/cupynumeric.less.rst", "api/generated/cupynumeric.less_equal.rst", "api/generated/cupynumeric.linalg.cholesky.rst", "api/generated/cupynumeric.linalg.eig.rst", "api/generated/cupynumeric.linalg.eigh.rst", "api/generated/cupynumeric.linalg.eigvals.rst", "api/generated/cupynumeric.linalg.eigvalsh.rst", "api/generated/cupynumeric.linalg.expm.rst", "api/generated/cupynumeric.linalg.matrix_power.rst", "api/generated/cupynumeric.linalg.multi_dot.rst", "api/generated/cupynumeric.linalg.norm.rst", "api/generated/cupynumeric.linalg.qr.rst", "api/generated/cupynumeric.linalg.solve.rst", "api/generated/cupynumeric.linalg.svd.rst", "api/generated/cupynumeric.linspace.rst", "api/generated/cupynumeric.load.rst", "api/generated/cupynumeric.log.rst", "api/generated/cupynumeric.log10.rst", "api/generated/cupynumeric.log1p.rst", "api/generated/cupynumeric.log2.rst", "api/generated/cupynumeric.logaddexp.rst", "api/generated/cupynumeric.logaddexp2.rst", "api/generated/cupynumeric.logical_and.rst", "api/generated/cupynumeric.logical_not.rst", "api/generated/cupynumeric.logical_or.rst", "api/generated/cupynumeric.logical_xor.rst", "api/generated/cupynumeric.mask_indices.rst", "api/generated/cupynumeric.matmul.rst", "api/generated/cupynumeric.maximum.rst", "api/generated/cupynumeric.mean.rst", "api/generated/cupynumeric.median.rst", "api/generated/cupynumeric.meshgrid.rst", "api/generated/cupynumeric.minimum.rst", "api/generated/cupynumeric.mod.rst", "api/generated/cupynumeric.modf.rst", "api/generated/cupynumeric.moveaxis.rst", "api/generated/cupynumeric.multiply.rst", "api/generated/cupynumeric.nan_to_num.rst", "api/generated/cupynumeric.nanargmax.rst", "api/generated/cupynumeric.nanargmin.rst", "api/generated/cupynumeric.nancumprod.rst", "api/generated/cupynumeric.nancumsum.rst", "api/generated/cupynumeric.nanmax.rst", "api/generated/cupynumeric.nanmean.rst", "api/generated/cupynumeric.nanmedian.rst", "api/generated/cupynumeric.nanmin.rst", "api/generated/cupynumeric.nanpercentile.rst", "api/generated/cupynumeric.nanprod.rst", "api/generated/cupynumeric.nanquantile.rst", "api/generated/cupynumeric.nansum.rst", "api/generated/cupynumeric.ndarray.T.rst", "api/generated/cupynumeric.ndarray.__abs__.rst", "api/generated/cupynumeric.ndarray.__add__.rst", "api/generated/cupynumeric.ndarray.__and__.rst", "api/generated/cupynumeric.ndarray.__array__.rst", "api/generated/cupynumeric.ndarray.__bool__.rst", "api/generated/cupynumeric.ndarray.__complex__.rst", "api/generated/cupynumeric.ndarray.__contains__.rst", "api/generated/cupynumeric.ndarray.__copy__.rst", "api/generated/cupynumeric.ndarray.__deepcopy__.rst", "api/generated/cupynumeric.ndarray.__divmod__.rst", "api/generated/cupynumeric.ndarray.__eq__.rst", "api/generated/cupynumeric.ndarray.__float__.rst", "api/generated/cupynumeric.ndarray.__floordiv__.rst", "api/generated/cupynumeric.ndarray.__ge__.rst", "api/generated/cupynumeric.ndarray.__getitem__.rst", "api/generated/cupynumeric.ndarray.__gt__.rst", "api/generated/cupynumeric.ndarray.__iadd__.rst", "api/generated/cupynumeric.ndarray.__iand__.rst", "api/generated/cupynumeric.ndarray.__ifloordiv__.rst", "api/generated/cupynumeric.ndarray.__ilshift__.rst", "api/generated/cupynumeric.ndarray.__imatmul__.rst", "api/generated/cupynumeric.ndarray.__imod__.rst", "api/generated/cupynumeric.ndarray.__imul__.rst", "api/generated/cupynumeric.ndarray.__index__.rst", "api/generated/cupynumeric.ndarray.__int__.rst", "api/generated/cupynumeric.ndarray.__invert__.rst", "api/generated/cupynumeric.ndarray.__ior__.rst", "api/generated/cupynumeric.ndarray.__ipow__.rst", "api/generated/cupynumeric.ndarray.__irshift__.rst", "api/generated/cupynumeric.ndarray.__isub__.rst", "api/generated/cupynumeric.ndarray.__itruediv__.rst", "api/generated/cupynumeric.ndarray.__ixor__.rst", "api/generated/cupynumeric.ndarray.__le__.rst", "api/generated/cupynumeric.ndarray.__len__.rst", "api/generated/cupynumeric.ndarray.__lshift__.rst", "api/generated/cupynumeric.ndarray.__lt__.rst", "api/generated/cupynumeric.ndarray.__matmul__.rst", "api/generated/cupynumeric.ndarray.__mod__.rst", "api/generated/cupynumeric.ndarray.__mul__.rst", "api/generated/cupynumeric.ndarray.__ne__.rst", "api/generated/cupynumeric.ndarray.__neg__.rst", "api/generated/cupynumeric.ndarray.__new__.rst", "api/generated/cupynumeric.ndarray.__or__.rst", "api/generated/cupynumeric.ndarray.__pos__.rst", "api/generated/cupynumeric.ndarray.__pow__.rst", "api/generated/cupynumeric.ndarray.__reduce__.rst", "api/generated/cupynumeric.ndarray.__repr__.rst", "api/generated/cupynumeric.ndarray.__rmatmul__.rst", "api/generated/cupynumeric.ndarray.__rshift__.rst", "api/generated/cupynumeric.ndarray.__setitem__.rst", "api/generated/cupynumeric.ndarray.__setstate__.rst", "api/generated/cupynumeric.ndarray.__str__.rst", "api/generated/cupynumeric.ndarray.__sub__.rst", "api/generated/cupynumeric.ndarray.__truediv__.rst", "api/generated/cupynumeric.ndarray.__xor__.rst", "api/generated/cupynumeric.ndarray.all.rst", "api/generated/cupynumeric.ndarray.any.rst", "api/generated/cupynumeric.ndarray.argmax.rst", "api/generated/cupynumeric.ndarray.argmin.rst", "api/generated/cupynumeric.ndarray.argpartition.rst", "api/generated/cupynumeric.ndarray.argsort.rst", "api/generated/cupynumeric.ndarray.astype.rst", "api/generated/cupynumeric.ndarray.base.rst", "api/generated/cupynumeric.ndarray.choose.rst", "api/generated/cupynumeric.ndarray.clip.rst", "api/generated/cupynumeric.ndarray.compress.rst", "api/generated/cupynumeric.ndarray.conj.rst", "api/generated/cupynumeric.ndarray.conjugate.rst", "api/generated/cupynumeric.ndarray.copy.rst", "api/generated/cupynumeric.ndarray.ctypes.rst", "api/generated/cupynumeric.ndarray.cumprod.rst", "api/generated/cupynumeric.ndarray.cumsum.rst", "api/generated/cupynumeric.ndarray.data.rst", "api/generated/cupynumeric.ndarray.diagonal.rst", "api/generated/cupynumeric.ndarray.dot.rst", "api/generated/cupynumeric.ndarray.dtype.rst", "api/generated/cupynumeric.ndarray.dump.rst", "api/generated/cupynumeric.ndarray.dumps.rst", "api/generated/cupynumeric.ndarray.fill.rst", "api/generated/cupynumeric.ndarray.flags.rst", "api/generated/cupynumeric.ndarray.flat.rst", "api/generated/cupynumeric.ndarray.flatten.rst", "api/generated/cupynumeric.ndarray.flip.rst", "api/generated/cupynumeric.ndarray.getfield.rst", "api/generated/cupynumeric.ndarray.imag.rst", "api/generated/cupynumeric.ndarray.item.rst", "api/generated/cupynumeric.ndarray.itemset.rst", "api/generated/cupynumeric.ndarray.itemsize.rst", "api/generated/cupynumeric.ndarray.max.rst", "api/generated/cupynumeric.ndarray.mean.rst", "api/generated/cupynumeric.ndarray.min.rst", "api/generated/cupynumeric.ndarray.nbytes.rst", "api/generated/cupynumeric.ndarray.ndim.rst", "api/generated/cupynumeric.ndarray.nonzero.rst", "api/generated/cupynumeric.ndarray.partition.rst", "api/generated/cupynumeric.ndarray.prod.rst", "api/generated/cupynumeric.ndarray.put.rst", "api/generated/cupynumeric.ndarray.ravel.rst", "api/generated/cupynumeric.ndarray.real.rst", "api/generated/cupynumeric.ndarray.reshape.rst", "api/generated/cupynumeric.ndarray.searchsorted.rst", "api/generated/cupynumeric.ndarray.setfield.rst", "api/generated/cupynumeric.ndarray.setflags.rst", "api/generated/cupynumeric.ndarray.shape.rst", "api/generated/cupynumeric.ndarray.size.rst", "api/generated/cupynumeric.ndarray.sort.rst", "api/generated/cupynumeric.ndarray.squeeze.rst", "api/generated/cupynumeric.ndarray.strides.rst", "api/generated/cupynumeric.ndarray.sum.rst", "api/generated/cupynumeric.ndarray.swapaxes.rst", "api/generated/cupynumeric.ndarray.take.rst", "api/generated/cupynumeric.ndarray.tobytes.rst", "api/generated/cupynumeric.ndarray.tofile.rst", "api/generated/cupynumeric.ndarray.tolist.rst", "api/generated/cupynumeric.ndarray.tostring.rst", "api/generated/cupynumeric.ndarray.trace.rst", "api/generated/cupynumeric.ndarray.transpose.rst", "api/generated/cupynumeric.ndarray.unique.rst", "api/generated/cupynumeric.ndarray.var.rst", "api/generated/cupynumeric.ndarray.view.rst", "api/generated/cupynumeric.ndim.rst", "api/generated/cupynumeric.negative.rst", "api/generated/cupynumeric.nextafter.rst", "api/generated/cupynumeric.nonzero.rst", "api/generated/cupynumeric.not_equal.rst", "api/generated/cupynumeric.ones.rst", "api/generated/cupynumeric.ones_like.rst", "api/generated/cupynumeric.outer.rst", "api/generated/cupynumeric.packbits.rst", "api/generated/cupynumeric.partition.rst", "api/generated/cupynumeric.percentile.rst", "api/generated/cupynumeric.place.rst", "api/generated/cupynumeric.positive.rst", "api/generated/cupynumeric.power.rst", "api/generated/cupynumeric.prod.rst", "api/generated/cupynumeric.put.rst", "api/generated/cupynumeric.put_along_axis.rst", "api/generated/cupynumeric.putmask.rst", "api/generated/cupynumeric.quantile.rst", "api/generated/cupynumeric.rad2deg.rst", "api/generated/cupynumeric.radians.rst", "api/generated/cupynumeric.random.beta.rst", "api/generated/cupynumeric.random.binomial.rst", "api/generated/cupynumeric.random.bytes.rst", "api/generated/cupynumeric.random.chisquare.rst", "api/generated/cupynumeric.random.default_rng.rst", "api/generated/cupynumeric.random.exponential.rst", "api/generated/cupynumeric.random.f.rst", "api/generated/cupynumeric.random.gamma.rst", "api/generated/cupynumeric.random.geometric.rst", "api/generated/cupynumeric.random.gumbel.rst", "api/generated/cupynumeric.random.hypergeometric.rst", "api/generated/cupynumeric.random.laplace.rst", "api/generated/cupynumeric.random.logistic.rst", "api/generated/cupynumeric.random.lognormal.rst", "api/generated/cupynumeric.random.logseries.rst", "api/generated/cupynumeric.random.negative_binomial.rst", "api/generated/cupynumeric.random.noncentral_chisquare.rst", "api/generated/cupynumeric.random.noncentral_f.rst", "api/generated/cupynumeric.random.normal.rst", "api/generated/cupynumeric.random.pareto.rst", "api/generated/cupynumeric.random.poisson.rst", "api/generated/cupynumeric.random.power.rst", "api/generated/cupynumeric.random.rand.rst", "api/generated/cupynumeric.random.randint.rst", "api/generated/cupynumeric.random.randn.rst", "api/generated/cupynumeric.random.random.rst", "api/generated/cupynumeric.random.random_integers.rst", "api/generated/cupynumeric.random.random_sample.rst", "api/generated/cupynumeric.random.ranf.rst", "api/generated/cupynumeric.random.rayleigh.rst", "api/generated/cupynumeric.random.sample.rst", "api/generated/cupynumeric.random.seed.rst", "api/generated/cupynumeric.random.standard_cauchy.rst", "api/generated/cupynumeric.random.standard_exponential.rst", "api/generated/cupynumeric.random.standard_gamma.rst", "api/generated/cupynumeric.random.standard_t.rst", "api/generated/cupynumeric.random.triangular.rst", "api/generated/cupynumeric.random.uniform.rst", "api/generated/cupynumeric.random.vonmises.rst", "api/generated/cupynumeric.random.wald.rst", "api/generated/cupynumeric.random.weibull.rst", "api/generated/cupynumeric.random.zipf.rst", "api/generated/cupynumeric.ravel.rst", "api/generated/cupynumeric.ravel_multi_index.rst", "api/generated/cupynumeric.real.rst", "api/generated/cupynumeric.real_if_close.rst", "api/generated/cupynumeric.reciprocal.rst", "api/generated/cupynumeric.remainder.rst", "api/generated/cupynumeric.repeat.rst", "api/generated/cupynumeric.reshape.rst", "api/generated/cupynumeric.right_shift.rst", "api/generated/cupynumeric.rint.rst", "api/generated/cupynumeric.roll.rst", "api/generated/cupynumeric.roots.rst", "api/generated/cupynumeric.rot90.rst", "api/generated/cupynumeric.round.rst", "api/generated/cupynumeric.row_stack.rst", "api/generated/cupynumeric.searchsorted.rst", "api/generated/cupynumeric.select.rst", "api/generated/cupynumeric.shape.rst", "api/generated/cupynumeric.sign.rst", "api/generated/cupynumeric.signbit.rst", "api/generated/cupynumeric.sin.rst", "api/generated/cupynumeric.sinh.rst", "api/generated/cupynumeric.sort.rst", "api/generated/cupynumeric.sort_complex.rst", "api/generated/cupynumeric.split.rst", "api/generated/cupynumeric.sqrt.rst", "api/generated/cupynumeric.square.rst", "api/generated/cupynumeric.squeeze.rst", "api/generated/cupynumeric.stack.rst", "api/generated/cupynumeric.subtract.rst", "api/generated/cupynumeric.sum.rst", "api/generated/cupynumeric.swapaxes.rst", "api/generated/cupynumeric.take.rst", "api/generated/cupynumeric.take_along_axis.rst", "api/generated/cupynumeric.tan.rst", "api/generated/cupynumeric.tanh.rst", "api/generated/cupynumeric.tensordot.rst", "api/generated/cupynumeric.tile.rst", "api/generated/cupynumeric.trace.rst", "api/generated/cupynumeric.transpose.rst", "api/generated/cupynumeric.tri.rst", "api/generated/cupynumeric.tril.rst", "api/generated/cupynumeric.tril_indices.rst", "api/generated/cupynumeric.tril_indices_from.rst", "api/generated/cupynumeric.triu.rst", "api/generated/cupynumeric.triu_indices.rst", "api/generated/cupynumeric.triu_indices_from.rst", "api/generated/cupynumeric.true_divide.rst", "api/generated/cupynumeric.trunc.rst", "api/generated/cupynumeric.unique.rst", "api/generated/cupynumeric.unpackbits.rst", "api/generated/cupynumeric.unravel_index.rst", "api/generated/cupynumeric.var.rst", "api/generated/cupynumeric.vdot.rst", "api/generated/cupynumeric.vsplit.rst", "api/generated/cupynumeric.vstack.rst", "api/generated/cupynumeric.where.rst", "api/generated/cupynumeric.zeros.rst", "api/generated/cupynumeric.zeros_like.rst", "api/index.rst", "api/indexing.rst", "api/io.rst", "api/linalg.rst", "api/logic.rst", "api/manipulation.rst", "api/math.rst", "api/ndarray.rst", "api/random.rst", "api/routines.rst", "api/set.rst", "api/settings.rst", "api/sorting.rst", "api/statistics.rst", "api/window.rst", "developer/CONTRIBUTING.md", "developer/building.rst", "developer/index.rst", "developer/testing.rst", "examples/black_scholes.ipynb", "examples/cholesky.ipynb", "examples/compact_finite_difference.ipynb", "examples/edge_detection.ipynb", "examples/index.rst", "examples/kmeans.ipynb", "examples/newton_raphson_2d.ipynb", "examples/stencil.ipynb", "examples/torchswe.ipynb", "faqs.rst", "index.rst", "installation.rst", "oss-licenses.rst", "user/advanced.rst", "user/differences.rst", "user/howtos/benchmarking.rst", "user/howtos/index.rst", "user/howtos/measuring.rst", "user/howtos/patching.rst", "user/index.rst", "user/practices.rst", "user/tutorial.rst", "user/usage.rst"], "indexentries": {"__abs__() (cupynumeric.ndarray method)": [[210, "cupynumeric.ndarray.__abs__", false]], "__add__() (cupynumeric.ndarray method)": [[211, "cupynumeric.ndarray.__add__", false]], "__and__() (cupynumeric.ndarray method)": [[212, "cupynumeric.ndarray.__and__", false]], "__array__() (cupynumeric.ndarray method)": [[213, "cupynumeric.ndarray.__array__", false]], "__bool__() (cupynumeric.ndarray method)": [[214, "cupynumeric.ndarray.__bool__", false]], "__complex__() (cupynumeric.ndarray method)": [[215, "cupynumeric.ndarray.__complex__", false]], "__contains__() (cupynumeric.ndarray method)": [[216, "cupynumeric.ndarray.__contains__", false]], "__copy__() (cupynumeric.ndarray method)": [[217, "cupynumeric.ndarray.__copy__", false]], "__deepcopy__() (cupynumeric.ndarray method)": [[218, "cupynumeric.ndarray.__deepcopy__", false]], "__divmod__() (cupynumeric.ndarray method)": [[219, "cupynumeric.ndarray.__divmod__", false]], "__eq__() (cupynumeric.ndarray method)": [[220, "cupynumeric.ndarray.__eq__", false]], "__float__() (cupynumeric.ndarray method)": [[221, "cupynumeric.ndarray.__float__", false]], "__floordiv__() (cupynumeric.ndarray method)": [[222, "cupynumeric.ndarray.__floordiv__", false]], "__ge__() (cupynumeric.ndarray method)": [[223, "cupynumeric.ndarray.__ge__", false]], "__getitem__() (cupynumeric.ndarray method)": [[224, "cupynumeric.ndarray.__getitem__", false]], "__gt__() (cupynumeric.ndarray method)": [[225, "cupynumeric.ndarray.__gt__", false]], "__iadd__() (cupynumeric.ndarray method)": [[226, "cupynumeric.ndarray.__iadd__", false]], "__iand__() (cupynumeric.ndarray method)": [[227, "cupynumeric.ndarray.__iand__", false]], "__ifloordiv__() (cupynumeric.ndarray method)": [[228, "cupynumeric.ndarray.__ifloordiv__", false]], "__ilshift__() (cupynumeric.ndarray method)": [[229, "cupynumeric.ndarray.__ilshift__", false]], "__imatmul__() (cupynumeric.ndarray method)": [[230, "cupynumeric.ndarray.__imatmul__", false]], "__imod__() (cupynumeric.ndarray method)": [[231, "cupynumeric.ndarray.__imod__", false]], "__imul__() (cupynumeric.ndarray method)": [[232, "cupynumeric.ndarray.__imul__", false]], "__index__() (cupynumeric.ndarray method)": [[233, "cupynumeric.ndarray.__index__", false]], "__init__() (cupynumeric.ndarray method)": [[4, "cupynumeric.ndarray.__init__", false]], "__init__() (cupynumeric.random.bitgenerator method)": [[1, "cupynumeric.random.BitGenerator.__init__", false]], "__init__() (cupynumeric.random.generator method)": [[2, "cupynumeric.random.Generator.__init__", false]], "__int__() (cupynumeric.ndarray method)": [[234, "cupynumeric.ndarray.__int__", false]], "__invert__() (cupynumeric.ndarray method)": [[235, "cupynumeric.ndarray.__invert__", false]], "__ior__() (cupynumeric.ndarray method)": [[236, "cupynumeric.ndarray.__ior__", false]], "__ipow__() (cupynumeric.ndarray method)": [[237, "cupynumeric.ndarray.__ipow__", false]], "__irshift__() (cupynumeric.ndarray method)": [[238, "cupynumeric.ndarray.__irshift__", false]], "__isub__() (cupynumeric.ndarray method)": [[239, "cupynumeric.ndarray.__isub__", false]], "__itruediv__() (cupynumeric.ndarray method)": [[240, "cupynumeric.ndarray.__itruediv__", false]], "__ixor__() (cupynumeric.ndarray method)": [[241, "cupynumeric.ndarray.__ixor__", false]], "__le__() (cupynumeric.ndarray method)": [[242, "cupynumeric.ndarray.__le__", false]], "__len__() (cupynumeric.ndarray method)": [[243, "cupynumeric.ndarray.__len__", false]], "__lshift__() (cupynumeric.ndarray method)": [[244, "cupynumeric.ndarray.__lshift__", false]], "__lt__() (cupynumeric.ndarray method)": [[245, "cupynumeric.ndarray.__lt__", false]], "__matmul__() (cupynumeric.ndarray method)": [[246, "cupynumeric.ndarray.__matmul__", false]], "__mod__() (cupynumeric.ndarray method)": [[247, "cupynumeric.ndarray.__mod__", false]], "__mul__() (cupynumeric.ndarray method)": [[248, "cupynumeric.ndarray.__mul__", false]], "__ne__() (cupynumeric.ndarray method)": [[249, "cupynumeric.ndarray.__ne__", false]], "__neg__() (cupynumeric.ndarray method)": [[250, "cupynumeric.ndarray.__neg__", false]], "__new__() (cupynumeric.ndarray method)": [[251, "cupynumeric.ndarray.__new__", false]], "__or__() (cupynumeric.ndarray method)": [[252, "cupynumeric.ndarray.__or__", false]], "__pos__() (cupynumeric.ndarray method)": [[253, "cupynumeric.ndarray.__pos__", false]], "__pow__() (cupynumeric.ndarray method)": [[254, "cupynumeric.ndarray.__pow__", false]], "__reduce__() (cupynumeric.ndarray method)": [[255, "cupynumeric.ndarray.__reduce__", false]], "__repr__() (cupynumeric.ndarray method)": [[256, "cupynumeric.ndarray.__repr__", false]], "__rmatmul__() (cupynumeric.ndarray method)": [[257, "cupynumeric.ndarray.__rmatmul__", false]], "__rshift__() (cupynumeric.ndarray method)": [[258, "cupynumeric.ndarray.__rshift__", false]], "__setitem__() (cupynumeric.ndarray method)": [[259, "cupynumeric.ndarray.__setitem__", false]], "__setstate__() (cupynumeric.ndarray method)": [[260, "cupynumeric.ndarray.__setstate__", false]], "__str__() (cupynumeric.ndarray method)": [[261, "cupynumeric.ndarray.__str__", false]], "__sub__() (cupynumeric.ndarray method)": [[262, "cupynumeric.ndarray.__sub__", false]], "__truediv__() (cupynumeric.ndarray method)": [[263, "cupynumeric.ndarray.__truediv__", false]], "__xor__() (cupynumeric.ndarray method)": [[264, "cupynumeric.ndarray.__xor__", false]], "absolute() (in module cupynumeric)": [[12, "cupynumeric.absolute", false]], "add() (in module cupynumeric)": [[13, "cupynumeric.add", false]], "aligned (in module cupynumeric)": [[289, "cupynumeric.ALIGNED", false]], "all() (cupynumeric.ndarray method)": [[265, "cupynumeric.ndarray.all", false]], "all() (in module cupynumeric)": [[14, "cupynumeric.all", false]], "allclose() (in module cupynumeric)": [[15, "cupynumeric.allclose", false]], "amax() (in module cupynumeric)": [[16, "cupynumeric.amax", false]], "amin() (in module cupynumeric)": [[17, "cupynumeric.amin", false]], "angle() (in module cupynumeric)": [[18, "cupynumeric.angle", false]], "any() (cupynumeric.ndarray method)": [[266, "cupynumeric.ndarray.any", false]], "any() (in module cupynumeric)": [[19, "cupynumeric.any", false]], "append() (in module cupynumeric)": [[20, "cupynumeric.append", false]], "arange() (in module cupynumeric)": [[21, "cupynumeric.arange", false]], "arccos() (in module cupynumeric)": [[22, "cupynumeric.arccos", false]], "arccosh() (in module cupynumeric)": [[23, "cupynumeric.arccosh", false]], "arcsin() (in module cupynumeric)": [[24, "cupynumeric.arcsin", false]], "arcsinh() (in module cupynumeric)": [[25, "cupynumeric.arcsinh", false]], "arctan() (in module cupynumeric)": [[26, "cupynumeric.arctan", false]], "arctan2() (in module cupynumeric)": [[27, "cupynumeric.arctan2", false]], "arctanh() (in module cupynumeric)": [[28, "cupynumeric.arctanh", false]], "argmax() (cupynumeric.ndarray method)": [[267, "cupynumeric.ndarray.argmax", false]], "argmax() (in module cupynumeric)": [[29, "cupynumeric.argmax", false]], "argmin() (cupynumeric.ndarray method)": [[268, "cupynumeric.ndarray.argmin", false]], "argmin() (in module cupynumeric)": [[30, "cupynumeric.argmin", false]], "argpartition() (cupynumeric.ndarray method)": [[269, "cupynumeric.ndarray.argpartition", false]], "argpartition() (in module cupynumeric)": [[31, "cupynumeric.argpartition", false]], "argsort() (cupynumeric.ndarray method)": [[270, "cupynumeric.ndarray.argsort", false]], "argsort() (in module cupynumeric)": [[32, "cupynumeric.argsort", false]], "argwhere() (in module cupynumeric)": [[33, "cupynumeric.argwhere", false]], "array() (in module cupynumeric)": [[34, "cupynumeric.array", false]], "array_equal() (in module cupynumeric)": [[35, "cupynumeric.array_equal", false]], "array_split() (in module cupynumeric)": [[36, "cupynumeric.array_split", false]], "asarray() (in module cupynumeric)": [[37, "cupynumeric.asarray", false]], "astype() (cupynumeric.ndarray method)": [[271, "cupynumeric.ndarray.astype", false]], "atleast_1d() (in module cupynumeric)": [[38, "cupynumeric.atleast_1d", false]], "atleast_2d() (in module cupynumeric)": [[39, "cupynumeric.atleast_2d", false]], "atleast_3d() (in module cupynumeric)": [[40, "cupynumeric.atleast_3d", false]], "average() (in module cupynumeric)": [[41, "cupynumeric.average", false]], "bartlett() (in module cupynumeric)": [[42, "cupynumeric.bartlett", false]], "base (cupynumeric.ndarray property)": [[272, "cupynumeric.ndarray.base", false]], "behaved (in module cupynumeric)": [[289, "cupynumeric.BEHAVED", false]], "beta() (in module cupynumeric.random)": [[351, "cupynumeric.random.beta", false]], "bincount() (in module cupynumeric)": [[43, "cupynumeric.bincount", false]], "binomial() (in module cupynumeric.random)": [[352, "cupynumeric.random.binomial", false]], "bitgenerator (class in cupynumeric.random)": [[1, "cupynumeric.random.BitGenerator", false]], "bitwise_and() (in module cupynumeric)": [[44, "cupynumeric.bitwise_and", false]], "bitwise_or() (in module cupynumeric)": [[45, "cupynumeric.bitwise_or", false]], "bitwise_xor() (in module cupynumeric)": [[46, "cupynumeric.bitwise_xor", false]], "blackman() (in module cupynumeric)": [[47, "cupynumeric.blackman", false]], "block() (in module cupynumeric)": [[48, "cupynumeric.block", false]], "broadcast (class in cupynumeric)": [[6, "cupynumeric.broadcast", false]], "broadcast_arrays() (in module cupynumeric)": [[49, "cupynumeric.broadcast_arrays", false]], "broadcast_shapes() (in module cupynumeric)": [[50, "cupynumeric.broadcast_shapes", false]], "broadcast_to() (in module cupynumeric)": [[51, "cupynumeric.broadcast_to", false]], "bytes() (in module cupynumeric.random)": [[353, "cupynumeric.random.bytes", false]], "c_contiguous (cupynumeric.ndarray attribute)": [[289, "cupynumeric.ndarray.C_CONTIGUOUS", false]], "carray (in module cupynumeric)": [[289, "cupynumeric.CARRAY", false]], "cbrt() (in module cupynumeric)": [[52, "cupynumeric.cbrt", false]], "ceil() (in module cupynumeric)": [[53, "cupynumeric.ceil", false]], "chisquare() (in module cupynumeric.random)": [[354, "cupynumeric.random.chisquare", false]], "cholesky() (in module cupynumeric.linalg)": [[161, "cupynumeric.linalg.cholesky", false]], "choose() (cupynumeric.ndarray method)": [[273, "cupynumeric.ndarray.choose", false]], "choose() (in module cupynumeric)": [[54, "cupynumeric.choose", false]], "clip() (cupynumeric.ndarray method)": [[274, "cupynumeric.ndarray.clip", false]], "clip() (in module cupynumeric)": [[55, "cupynumeric.clip", false]], "column_stack() (in module cupynumeric)": [[56, "cupynumeric.column_stack", false]], "compress() (cupynumeric.ndarray method)": [[275, "cupynumeric.ndarray.compress", false]], "compress() (in module cupynumeric)": [[57, "cupynumeric.compress", false]], "concatenate() (in module cupynumeric)": [[58, "cupynumeric.concatenate", false]], "conj() (cupynumeric.ndarray method)": [[276, "cupynumeric.ndarray.conj", false]], "conj() (in module cupynumeric)": [[59, "cupynumeric.conj", false]], "conjugate() (cupynumeric.ndarray method)": [[277, "cupynumeric.ndarray.conjugate", false]], "conjugate() (in module cupynumeric)": [[60, "cupynumeric.conjugate", false]], "convolve() (in module cupynumeric)": [[61, "cupynumeric.convolve", false]], "copy() (cupynumeric.ndarray method)": [[278, "cupynumeric.ndarray.copy", false]], "copy() (in module cupynumeric)": [[62, "cupynumeric.copy", false]], "copysign() (in module cupynumeric)": [[63, "cupynumeric.copysign", false]], "copyto() (in module cupynumeric)": [[64, "cupynumeric.copyto", false]], "cos() (in module cupynumeric)": [[65, "cupynumeric.cos", false]], "cosh() (in module cupynumeric)": [[66, "cupynumeric.cosh", false]], "count_nonzero() (in module cupynumeric)": [[67, "cupynumeric.count_nonzero", false]], "cov() (in module cupynumeric)": [[68, "cupynumeric.cov", false]], "ctypes (cupynumeric.ndarray property)": [[279, "cupynumeric.ndarray.ctypes", false]], "cumprod() (cupynumeric.ndarray method)": [[280, "cupynumeric.ndarray.cumprod", false]], "cumprod() (in module cupynumeric)": [[69, "cupynumeric.cumprod", false]], "cumsum() (cupynumeric.ndarray method)": [[281, "cupynumeric.ndarray.cumsum", false]], "cumsum() (in module cupynumeric)": [[70, "cupynumeric.cumsum", false]], "cupynumeric.fft": [[11, "module-cupynumeric.fft", false]], "cupynumeric.linalg": [[455, "module-cupynumeric.linalg", false]], "cupynumeric.random": [[460, "module-cupynumeric.random", false]], "data (cupynumeric.ndarray property)": [[282, "cupynumeric.ndarray.data", false]], "default_rng() (in module cupynumeric.random)": [[355, "cupynumeric.random.default_rng", false]], "deg2rad() (in module cupynumeric)": [[71, "cupynumeric.deg2rad", false]], "degrees() (in module cupynumeric)": [[72, "cupynumeric.degrees", false]], "delete() (in module cupynumeric)": [[73, "cupynumeric.delete", false]], "diag() (in module cupynumeric)": [[74, "cupynumeric.diag", false]], "diag_indices() (in module cupynumeric)": [[75, "cupynumeric.diag_indices", false]], "diag_indices_from() (in module cupynumeric)": [[76, "cupynumeric.diag_indices_from", false]], "diagflat() (in module cupynumeric)": [[77, "cupynumeric.diagflat", false]], "diagonal() (cupynumeric.ndarray method)": [[283, "cupynumeric.ndarray.diagonal", false]], "diagonal() (in module cupynumeric)": [[78, "cupynumeric.diagonal", false]], "diff() (in module cupynumeric)": [[79, "cupynumeric.diff", false]], "digitize() (in module cupynumeric)": [[80, "cupynumeric.digitize", false]], "divide() (in module cupynumeric)": [[81, "cupynumeric.divide", false]], "dot() (cupynumeric.ndarray method)": [[284, "cupynumeric.ndarray.dot", false]], "dot() (in module cupynumeric)": [[82, "cupynumeric.dot", false]], "dsplit() (in module cupynumeric)": [[83, "cupynumeric.dsplit", false]], "dstack() (in module cupynumeric)": [[84, "cupynumeric.dstack", false]], "dtype (cupynumeric.ndarray property)": [[285, "cupynumeric.ndarray.dtype", false]], "dump() (cupynumeric.ndarray method)": [[286, "cupynumeric.ndarray.dump", false]], "dumps() (cupynumeric.ndarray method)": [[287, "cupynumeric.ndarray.dumps", false]], "eig() (in module cupynumeric.linalg)": [[162, "cupynumeric.linalg.eig", false]], "eigh() (in module cupynumeric.linalg)": [[163, "cupynumeric.linalg.eigh", false]], "eigvals() (in module cupynumeric.linalg)": [[164, "cupynumeric.linalg.eigvals", false]], "eigvalsh() (in module cupynumeric.linalg)": [[165, "cupynumeric.linalg.eigvalsh", false]], "einsum() (in module cupynumeric)": [[85, "cupynumeric.einsum", false]], "einsum_path() (in module cupynumeric)": [[86, "cupynumeric.einsum_path", false]], "empty() (in module cupynumeric)": [[87, "cupynumeric.empty", false]], "empty_like() (in module cupynumeric)": [[88, "cupynumeric.empty_like", false]], "equal() (in module cupynumeric)": [[89, "cupynumeric.equal", false]], "exp() (in module cupynumeric)": [[90, "cupynumeric.exp", false]], "exp2() (in module cupynumeric)": [[91, "cupynumeric.exp2", false]], "expand_dims() (in module cupynumeric)": [[92, "cupynumeric.expand_dims", false]], "expm() (in module cupynumeric.linalg)": [[166, "cupynumeric.linalg.expm", false]], "expm1() (in module cupynumeric)": [[93, "cupynumeric.expm1", false]], "exponential() (in module cupynumeric.random)": [[356, "cupynumeric.random.exponential", false]], "extract() (in module cupynumeric)": [[94, "cupynumeric.extract", false]], "eye() (in module cupynumeric)": [[95, "cupynumeric.eye", false]], "f() (in module cupynumeric.random)": [[357, "cupynumeric.random.f", false]], "f_contiguous (in module cupynumeric)": [[289, "cupynumeric.F_CONTIGUOUS", false]], "fabs() (in module cupynumeric)": [[96, "cupynumeric.fabs", false]], "farray (in module cupynumeric)": [[289, "cupynumeric.FARRAY", false]], "fft() (in module cupynumeric.fft)": [[97, "cupynumeric.fft.fft", false]], "fft2() (in module cupynumeric.fft)": [[98, "cupynumeric.fft.fft2", false]], "fftn() (in module cupynumeric.fft)": [[99, "cupynumeric.fft.fftn", false]], "fftshift() (in module cupynumeric.fft)": [[100, "cupynumeric.fft.fftshift", false]], "fill() (cupynumeric.ndarray method)": [[288, "cupynumeric.ndarray.fill", false]], "fill_diagonal() (in module cupynumeric)": [[113, "cupynumeric.fill_diagonal", false]], "find_common_type() (in module cupynumeric)": [[114, "cupynumeric.find_common_type", false]], "flags (cupynumeric.ndarray property)": [[289, "cupynumeric.ndarray.flags", false]], "flat (cupynumeric.ndarray property)": [[290, "cupynumeric.ndarray.flat", false]], "flatnonzero() (in module cupynumeric)": [[115, "cupynumeric.flatnonzero", false]], "flatten() (cupynumeric.ndarray method)": [[291, "cupynumeric.ndarray.flatten", false]], "flip() (cupynumeric.ndarray method)": [[292, "cupynumeric.ndarray.flip", false]], "flip() (in module cupynumeric)": [[116, "cupynumeric.flip", false]], "fliplr() (in module cupynumeric)": [[117, "cupynumeric.fliplr", false]], "flipud() (in module cupynumeric)": [[118, "cupynumeric.flipud", false]], "float_power() (in module cupynumeric)": [[119, "cupynumeric.float_power", false]], "floor() (in module cupynumeric)": [[120, "cupynumeric.floor", false]], "floor_divide() (in module cupynumeric)": [[121, "cupynumeric.floor_divide", false]], "fmax() (in module cupynumeric)": [[122, "cupynumeric.fmax", false]], "fmin() (in module cupynumeric)": [[123, "cupynumeric.fmin", false]], "fmod() (in module cupynumeric)": [[124, "cupynumeric.fmod", false]], "fnc (in module cupynumeric)": [[289, "cupynumeric.FNC", false]], "forc (in module cupynumeric)": [[289, "cupynumeric.FORC", false]], "frexp() (in module cupynumeric)": [[125, "cupynumeric.frexp", false]], "full() (in module cupynumeric)": [[126, "cupynumeric.full", false]], "full_like() (in module cupynumeric)": [[127, "cupynumeric.full_like", false]], "gamma() (in module cupynumeric.random)": [[358, "cupynumeric.random.gamma", false]], "gcd() (in module cupynumeric)": [[128, "cupynumeric.gcd", false]], "generator (class in cupynumeric.random)": [[2, "cupynumeric.random.Generator", false]], "geometric() (in module cupynumeric.random)": [[359, "cupynumeric.random.geometric", false]], "getfield() (cupynumeric.ndarray method)": [[293, "cupynumeric.ndarray.getfield", false]], "gradient() (in module cupynumeric)": [[129, "cupynumeric.gradient", false]], "greater() (in module cupynumeric)": [[130, "cupynumeric.greater", false]], "greater_equal() (in module cupynumeric)": [[131, "cupynumeric.greater_equal", false]], "gumbel() (in module cupynumeric.random)": [[360, "cupynumeric.random.gumbel", false]], "hamming() (in module cupynumeric)": [[132, "cupynumeric.hamming", false]], "hanning() (in module cupynumeric)": [[133, "cupynumeric.hanning", false]], "hfft() (in module cupynumeric.fft)": [[101, "cupynumeric.fft.hfft", false]], "histogram() (in module cupynumeric)": [[134, "cupynumeric.histogram", false]], "hsplit() (in module cupynumeric)": [[135, "cupynumeric.hsplit", false]], "hstack() (in module cupynumeric)": [[136, "cupynumeric.hstack", false]], "hypergeometric() (in module cupynumeric.random)": [[361, "cupynumeric.random.hypergeometric", false]], "hypot() (in module cupynumeric)": [[137, "cupynumeric.hypot", false]], "identity() (in module cupynumeric)": [[138, "cupynumeric.identity", false]], "ifft() (in module cupynumeric.fft)": [[102, "cupynumeric.fft.ifft", false]], "ifft2() (in module cupynumeric.fft)": [[103, "cupynumeric.fft.ifft2", false]], "ifftn() (in module cupynumeric.fft)": [[104, "cupynumeric.fft.ifftn", false]], "ifftshift() (in module cupynumeric.fft)": [[105, "cupynumeric.fft.ifftshift", false]], "ihfft() (in module cupynumeric.fft)": [[106, "cupynumeric.fft.ihfft", false]], "imag (cupynumeric.ndarray property)": [[294, "cupynumeric.ndarray.imag", false]], "imag() (in module cupynumeric)": [[139, "cupynumeric.imag", false]], "index (cupynumeric.broadcast property)": [[6, "cupynumeric.broadcast.index", false]], "indices() (in module cupynumeric)": [[140, "cupynumeric.indices", false]], "inner() (in module cupynumeric)": [[141, "cupynumeric.inner", false]], "invert() (in module cupynumeric)": [[142, "cupynumeric.invert", false]], "irfft() (in module cupynumeric.fft)": [[107, "cupynumeric.fft.irfft", false]], "irfft2() (in module cupynumeric.fft)": [[108, "cupynumeric.fft.irfft2", false]], "irfftn() (in module cupynumeric.fft)": [[109, "cupynumeric.fft.irfftn", false]], "isclose() (in module cupynumeric)": [[143, "cupynumeric.isclose", false]], "iscomplex() (in module cupynumeric)": [[144, "cupynumeric.iscomplex", false]], "iscomplexobj() (in module cupynumeric)": [[145, "cupynumeric.iscomplexobj", false]], "isfinite() (in module cupynumeric)": [[146, "cupynumeric.isfinite", false]], "isinf() (in module cupynumeric)": [[147, "cupynumeric.isinf", false]], "isnan() (in module cupynumeric)": [[148, "cupynumeric.isnan", false]], "isneginf() (in module cupynumeric)": [[149, "cupynumeric.isneginf", false]], "isposinf() (in module cupynumeric)": [[150, "cupynumeric.isposinf", false]], "isreal() (in module cupynumeric)": [[151, "cupynumeric.isreal", false]], "isrealobj() (in module cupynumeric)": [[152, "cupynumeric.isrealobj", false]], "isscalar() (in module cupynumeric)": [[153, "cupynumeric.isscalar", false]], "item() (cupynumeric.ndarray method)": [[295, "cupynumeric.ndarray.item", false]], "itemset (cupynumeric.ndarray attribute)": [[296, "cupynumeric.ndarray.itemset", false]], "itemsize (cupynumeric.ndarray property)": [[297, "cupynumeric.ndarray.itemsize", false]], "iters (cupynumeric.broadcast property)": [[6, "cupynumeric.broadcast.iters", false]], "ix_() (in module cupynumeric)": [[154, "cupynumeric.ix_", false]], "kaiser() (in module cupynumeric)": [[155, "cupynumeric.kaiser", false]], "laplace() (in module cupynumeric.random)": [[362, "cupynumeric.random.laplace", false]], "lcm() (in module cupynumeric)": [[156, "cupynumeric.lcm", false]], "ldexp() (in module cupynumeric)": [[157, "cupynumeric.ldexp", false]], "left_shift() (in module cupynumeric)": [[158, "cupynumeric.left_shift", false]], "less() (in module cupynumeric)": [[159, "cupynumeric.less", false]], "less_equal() (in module cupynumeric)": [[160, "cupynumeric.less_equal", false]], "linspace() (in module cupynumeric)": [[173, "cupynumeric.linspace", false]], "load() (in module cupynumeric)": [[174, "cupynumeric.load", false]], "log() (in module cupynumeric)": [[175, "cupynumeric.log", false]], "log10() (in module cupynumeric)": [[176, "cupynumeric.log10", false]], "log1p() (in module cupynumeric)": [[177, "cupynumeric.log1p", false]], "log2() (in module cupynumeric)": [[178, "cupynumeric.log2", false]], "logaddexp() (in module cupynumeric)": [[179, "cupynumeric.logaddexp", false]], "logaddexp2() (in module cupynumeric)": [[180, "cupynumeric.logaddexp2", false]], "logical_and() (in module cupynumeric)": [[181, "cupynumeric.logical_and", false]], "logical_not() (in module cupynumeric)": [[182, "cupynumeric.logical_not", false]], "logical_or() (in module cupynumeric)": [[183, "cupynumeric.logical_or", false]], "logical_xor() (in module cupynumeric)": [[184, "cupynumeric.logical_xor", false]], "logistic() (in module cupynumeric.random)": [[363, "cupynumeric.random.logistic", false]], "lognormal() (in module cupynumeric.random)": [[364, "cupynumeric.random.lognormal", false]], "logseries() (in module cupynumeric.random)": [[365, "cupynumeric.random.logseries", false]], "mask_indices() (in module cupynumeric)": [[185, "cupynumeric.mask_indices", false]], "matmul() (in module cupynumeric)": [[186, "cupynumeric.matmul", false]], "matrix_power() (in module cupynumeric.linalg)": [[167, "cupynumeric.linalg.matrix_power", false]], "max() (cupynumeric.ndarray method)": [[298, "cupynumeric.ndarray.max", false]], "maximum() (in module cupynumeric)": [[187, "cupynumeric.maximum", false]], "mean() (cupynumeric.ndarray method)": [[299, "cupynumeric.ndarray.mean", false]], "mean() (in module cupynumeric)": [[188, "cupynumeric.mean", false]], "median() (in module cupynumeric)": [[189, "cupynumeric.median", false]], "meshgrid() (in module cupynumeric)": [[190, "cupynumeric.meshgrid", false]], "min() (cupynumeric.ndarray method)": [[300, "cupynumeric.ndarray.min", false]], "minimum() (in module cupynumeric)": [[191, "cupynumeric.minimum", false]], "mod() (in module cupynumeric)": [[192, "cupynumeric.mod", false]], "modf() (in module cupynumeric)": [[193, "cupynumeric.modf", false]], "module": [[11, "module-cupynumeric.fft", false], [455, "module-cupynumeric.linalg", false], [460, "module-cupynumeric.random", false]], "moveaxis() (in module cupynumeric)": [[194, "cupynumeric.moveaxis", false]], "multi_dot() (in module cupynumeric.linalg)": [[168, "cupynumeric.linalg.multi_dot", false]], "multiply() (in module cupynumeric)": [[195, "cupynumeric.multiply", false]], "nan_to_num() (in module cupynumeric)": [[196, "cupynumeric.nan_to_num", false]], "nanargmax() (in module cupynumeric)": [[197, "cupynumeric.nanargmax", false]], "nanargmin() (in module cupynumeric)": [[198, "cupynumeric.nanargmin", false]], "nancumprod() (in module cupynumeric)": [[199, "cupynumeric.nancumprod", false]], "nancumsum() (in module cupynumeric)": [[200, "cupynumeric.nancumsum", false]], "nanmax() (in module cupynumeric)": [[201, "cupynumeric.nanmax", false]], "nanmean() (in module cupynumeric)": [[202, "cupynumeric.nanmean", false]], "nanmedian() (in module cupynumeric)": [[203, "cupynumeric.nanmedian", false]], "nanmin() (in module cupynumeric)": [[204, "cupynumeric.nanmin", false]], "nanpercentile() (in module cupynumeric)": [[205, "cupynumeric.nanpercentile", false]], "nanprod() (in module cupynumeric)": [[206, "cupynumeric.nanprod", false]], "nanquantile() (in module cupynumeric)": [[207, "cupynumeric.nanquantile", false]], "nansum() (in module cupynumeric)": [[208, "cupynumeric.nansum", false]], "nbytes (cupynumeric.ndarray property)": [[301, "cupynumeric.ndarray.nbytes", false]], "nd (cupynumeric.broadcast property)": [[6, "cupynumeric.broadcast.nd", false]], "ndarray (class in cupynumeric)": [[4, "cupynumeric.ndarray", false]], "ndim (cupynumeric.broadcast property)": [[6, "cupynumeric.broadcast.ndim", false]], "ndim (cupynumeric.ndarray property)": [[302, "cupynumeric.ndarray.ndim", false]], "ndim() (in module cupynumeric)": [[330, "cupynumeric.ndim", false]], "negative() (in module cupynumeric)": [[331, "cupynumeric.negative", false]], "negative_binomial() (in module cupynumeric.random)": [[366, "cupynumeric.random.negative_binomial", false]], "nextafter() (in module cupynumeric)": [[332, "cupynumeric.nextafter", false]], "noncentral_chisquare() (in module cupynumeric.random)": [[367, "cupynumeric.random.noncentral_chisquare", false]], "noncentral_f() (in module cupynumeric.random)": [[368, "cupynumeric.random.noncentral_f", false]], "nonzero() (cupynumeric.ndarray method)": [[303, "cupynumeric.ndarray.nonzero", false]], "nonzero() (in module cupynumeric)": [[333, "cupynumeric.nonzero", false]], "norm() (in module cupynumeric.linalg)": [[169, "cupynumeric.linalg.norm", false]], "normal() (in module cupynumeric.random)": [[369, "cupynumeric.random.normal", false]], "not_equal() (in module cupynumeric)": [[334, "cupynumeric.not_equal", false]], "numiter (cupynumeric.broadcast property)": [[6, "cupynumeric.broadcast.numiter", false]], "ones() (in module cupynumeric)": [[335, "cupynumeric.ones", false]], "ones_like() (in module cupynumeric)": [[336, "cupynumeric.ones_like", false]], "outer() (in module cupynumeric)": [[337, "cupynumeric.outer", false]], "owndata (in module cupynumeric)": [[289, "cupynumeric.OWNDATA", false]], "packbits() (in module cupynumeric)": [[338, "cupynumeric.packbits", false]], "pareto() (in module cupynumeric.random)": [[370, "cupynumeric.random.pareto", false]], "partition() (cupynumeric.ndarray method)": [[304, "cupynumeric.ndarray.partition", false]], "partition() (in module cupynumeric)": [[339, "cupynumeric.partition", false]], "percentile() (in module cupynumeric)": [[340, "cupynumeric.percentile", false]], "place() (in module cupynumeric)": [[341, "cupynumeric.place", false]], "poisson() (in module cupynumeric.random)": [[371, "cupynumeric.random.poisson", false]], "positive() (in module cupynumeric)": [[342, "cupynumeric.positive", false]], "power() (in module cupynumeric)": [[343, "cupynumeric.power", false]], "power() (in module cupynumeric.random)": [[372, "cupynumeric.random.power", false]], "prod() (cupynumeric.ndarray method)": [[305, "cupynumeric.ndarray.prod", false]], "prod() (in module cupynumeric)": [[344, "cupynumeric.prod", false]], "put() (cupynumeric.ndarray method)": [[306, "cupynumeric.ndarray.put", false]], "put() (in module cupynumeric)": [[345, "cupynumeric.put", false]], "put_along_axis() (in module cupynumeric)": [[346, "cupynumeric.put_along_axis", false]], "putmask() (in module cupynumeric)": [[347, "cupynumeric.putmask", false]], "qr() (in module cupynumeric.linalg)": [[170, "cupynumeric.linalg.qr", false]], "quantile() (in module cupynumeric)": [[348, "cupynumeric.quantile", false]], "rad2deg() (in module cupynumeric)": [[349, "cupynumeric.rad2deg", false]], "radians() (in module cupynumeric)": [[350, "cupynumeric.radians", false]], "rand() (in module cupynumeric.random)": [[373, "cupynumeric.random.rand", false]], "randint() (in module cupynumeric.random)": [[374, "cupynumeric.random.randint", false]], "randn() (in module cupynumeric.random)": [[375, "cupynumeric.random.randn", false]], "random() (in module cupynumeric.random)": [[376, "cupynumeric.random.random", false]], "random_integers() (in module cupynumeric.random)": [[377, "cupynumeric.random.random_integers", false]], "random_sample() (in module cupynumeric.random)": [[378, "cupynumeric.random.random_sample", false]], "ranf() (in module cupynumeric.random)": [[379, "cupynumeric.random.ranf", false]], "ravel() (cupynumeric.ndarray method)": [[307, "cupynumeric.ndarray.ravel", false]], "ravel() (in module cupynumeric)": [[393, "cupynumeric.ravel", false]], "ravel_multi_index() (in module cupynumeric)": [[394, "cupynumeric.ravel_multi_index", false]], "rayleigh() (in module cupynumeric.random)": [[380, "cupynumeric.random.rayleigh", false]], "real (cupynumeric.ndarray property)": [[308, "cupynumeric.ndarray.real", false]], "real() (in module cupynumeric)": [[395, "cupynumeric.real", false]], "real_if_close() (in module cupynumeric)": [[396, "cupynumeric.real_if_close", false]], "reciprocal() (in module cupynumeric)": [[397, "cupynumeric.reciprocal", false]], "remainder() (in module cupynumeric)": [[398, "cupynumeric.remainder", false]], "repeat() (in module cupynumeric)": [[399, "cupynumeric.repeat", false]], "reset() (cupynumeric.broadcast method)": [[6, "cupynumeric.broadcast.reset", false]], "reshape() (cupynumeric.ndarray method)": [[309, "cupynumeric.ndarray.reshape", false]], "reshape() (in module cupynumeric)": [[400, "cupynumeric.reshape", false]], "rfft() (in module cupynumeric.fft)": [[110, "cupynumeric.fft.rfft", false]], "rfft2() (in module cupynumeric.fft)": [[111, "cupynumeric.fft.rfft2", false]], "rfftn() (in module cupynumeric.fft)": [[112, "cupynumeric.fft.rfftn", false]], "right_shift() (in module cupynumeric)": [[401, "cupynumeric.right_shift", false]], "rint() (in module cupynumeric)": [[402, "cupynumeric.rint", false]], "roll() (in module cupynumeric)": [[403, "cupynumeric.roll", false]], "roots() (in module cupynumeric)": [[404, "cupynumeric.roots", false]], "rot90() (in module cupynumeric)": [[405, "cupynumeric.rot90", false]], "round() (in module cupynumeric)": [[406, "cupynumeric.round", false]], "row_stack() (in module cupynumeric)": [[407, "cupynumeric.row_stack", false]], "sample() (in module cupynumeric.random)": [[381, "cupynumeric.random.sample", false]], "searchsorted() (cupynumeric.ndarray method)": [[310, "cupynumeric.ndarray.searchsorted", false]], "searchsorted() (in module cupynumeric)": [[408, "cupynumeric.searchsorted", false]], "seed() (in module cupynumeric.random)": [[382, "cupynumeric.random.seed", false]], "select() (in module cupynumeric)": [[409, "cupynumeric.select", false]], "setfield() (cupynumeric.ndarray method)": [[311, "cupynumeric.ndarray.setfield", false]], "setflags() (cupynumeric.ndarray method)": [[312, "cupynumeric.ndarray.setflags", false]], "shape (cupynumeric.broadcast property)": [[6, "cupynumeric.broadcast.shape", false]], "shape (cupynumeric.ndarray property)": [[313, "cupynumeric.ndarray.shape", false]], "shape() (in module cupynumeric)": [[410, "cupynumeric.shape", false]], "sign() (in module cupynumeric)": [[411, "cupynumeric.sign", false]], "signbit() (in module cupynumeric)": [[412, "cupynumeric.signbit", false]], "sin() (in module cupynumeric)": [[413, "cupynumeric.sin", false]], "sinh() (in module cupynumeric)": [[414, "cupynumeric.sinh", false]], "size (cupynumeric.broadcast property)": [[6, "cupynumeric.broadcast.size", false]], "size (cupynumeric.ndarray property)": [[314, "cupynumeric.ndarray.size", false]], "solve() (in module cupynumeric.linalg)": [[171, "cupynumeric.linalg.solve", false]], "sort() (cupynumeric.ndarray method)": [[315, "cupynumeric.ndarray.sort", false]], "sort() (in module cupynumeric)": [[415, "cupynumeric.sort", false]], "sort_complex() (in module cupynumeric)": [[416, "cupynumeric.sort_complex", false]], "split() (in module cupynumeric)": [[417, "cupynumeric.split", false]], "sqrt() (in module cupynumeric)": [[418, "cupynumeric.sqrt", false]], "square() (in module cupynumeric)": [[419, "cupynumeric.square", false]], "squeeze() (cupynumeric.ndarray method)": [[316, "cupynumeric.ndarray.squeeze", false]], "squeeze() (in module cupynumeric)": [[420, "cupynumeric.squeeze", false]], "stack() (in module cupynumeric)": [[421, "cupynumeric.stack", false]], "standard_cauchy() (in module cupynumeric.random)": [[383, "cupynumeric.random.standard_cauchy", false]], "standard_exponential() (in module cupynumeric.random)": [[384, "cupynumeric.random.standard_exponential", false]], "standard_gamma() (in module cupynumeric.random)": [[385, "cupynumeric.random.standard_gamma", false]], "standard_t() (in module cupynumeric.random)": [[386, "cupynumeric.random.standard_t", false]], "strides (cupynumeric.ndarray property)": [[317, "cupynumeric.ndarray.strides", false]], "subtract() (in module cupynumeric)": [[422, "cupynumeric.subtract", false]], "sum() (cupynumeric.ndarray method)": [[318, "cupynumeric.ndarray.sum", false]], "sum() (in module cupynumeric)": [[423, "cupynumeric.sum", false]], "svd() (in module cupynumeric.linalg)": [[172, "cupynumeric.linalg.svd", false]], "swapaxes() (cupynumeric.ndarray method)": [[319, "cupynumeric.ndarray.swapaxes", false]], "swapaxes() (in module cupynumeric)": [[424, "cupynumeric.swapaxes", false]], "t (cupynumeric.ndarray property)": [[209, "cupynumeric.ndarray.T", false]], "take() (cupynumeric.ndarray method)": [[320, "cupynumeric.ndarray.take", false]], "take() (in module cupynumeric)": [[425, "cupynumeric.take", false]], "take_along_axis() (in module cupynumeric)": [[426, "cupynumeric.take_along_axis", false]], "tan() (in module cupynumeric)": [[427, "cupynumeric.tan", false]], "tanh() (in module cupynumeric)": [[428, "cupynumeric.tanh", false]], "tensordot() (in module cupynumeric)": [[429, "cupynumeric.tensordot", false]], "tile() (in module cupynumeric)": [[430, "cupynumeric.tile", false]], "tobytes() (cupynumeric.ndarray method)": [[321, "cupynumeric.ndarray.tobytes", false]], "tofile() (cupynumeric.ndarray method)": [[322, "cupynumeric.ndarray.tofile", false]], "tolist() (cupynumeric.ndarray method)": [[323, "cupynumeric.ndarray.tolist", false]], "tostring() (cupynumeric.ndarray method)": [[324, "cupynumeric.ndarray.tostring", false]], "trace() (cupynumeric.ndarray method)": [[325, "cupynumeric.ndarray.trace", false]], "trace() (in module cupynumeric)": [[431, "cupynumeric.trace", false]], "transpose() (cupynumeric.ndarray method)": [[326, "cupynumeric.ndarray.transpose", false]], "transpose() (in module cupynumeric)": [[432, "cupynumeric.transpose", false]], "tri() (in module cupynumeric)": [[433, "cupynumeric.tri", false]], "triangular() (in module cupynumeric.random)": [[387, "cupynumeric.random.triangular", false]], "tril() (in module cupynumeric)": [[434, "cupynumeric.tril", false]], "tril_indices() (in module cupynumeric)": [[435, "cupynumeric.tril_indices", false]], "tril_indices_from() (in module cupynumeric)": [[436, "cupynumeric.tril_indices_from", false]], "triu() (in module cupynumeric)": [[437, "cupynumeric.triu", false]], "triu_indices() (in module cupynumeric)": [[438, "cupynumeric.triu_indices", false]], "triu_indices_from() (in module cupynumeric)": [[439, "cupynumeric.triu_indices_from", false]], "true_divide() (in module cupynumeric)": [[440, "cupynumeric.true_divide", false]], "trunc() (in module cupynumeric)": [[441, "cupynumeric.trunc", false]], "uniform() (in module cupynumeric.random)": [[388, "cupynumeric.random.uniform", false]], "unique() (cupynumeric.ndarray method)": [[327, "cupynumeric.ndarray.unique", false]], "unique() (in module cupynumeric)": [[442, "cupynumeric.unique", false]], "unpackbits() (in module cupynumeric)": [[443, "cupynumeric.unpackbits", false]], "unravel_index() (in module cupynumeric)": [[444, "cupynumeric.unravel_index", false]], "var() (cupynumeric.ndarray method)": [[328, "cupynumeric.ndarray.var", false]], "var() (in module cupynumeric)": [[445, "cupynumeric.var", false]], "vdot() (in module cupynumeric)": [[446, "cupynumeric.vdot", false]], "view() (cupynumeric.ndarray method)": [[329, "cupynumeric.ndarray.view", false]], "vonmises() (in module cupynumeric.random)": [[389, "cupynumeric.random.vonmises", false]], "vsplit() (in module cupynumeric)": [[447, "cupynumeric.vsplit", false]], "vstack() (in module cupynumeric)": [[448, "cupynumeric.vstack", false]], "wald() (in module cupynumeric.random)": [[390, "cupynumeric.random.wald", false]], "weibull() (in module cupynumeric.random)": [[391, "cupynumeric.random.weibull", false]], "where() (in module cupynumeric)": [[449, "cupynumeric.where", false]], "writeable (in module cupynumeric)": [[289, "cupynumeric.WRITEABLE", false]], "writebackifcopy (in module cupynumeric)": [[289, "cupynumeric.WRITEBACKIFCOPY", false]], "zeros() (in module cupynumeric)": [[450, "cupynumeric.zeros", false]], "zeros_like() (in module cupynumeric)": [[451, "cupynumeric.zeros_like", false]], "zipf() (in module cupynumeric.random)": [[392, "cupynumeric.random.zipf", false]]}, "objects": {"cupynumeric": [[289, 0, 1, "", "ALIGNED"], [289, 0, 1, "", "BEHAVED"], [289, 0, 1, "", "CARRAY"], [289, 0, 1, "", "FARRAY"], [289, 0, 1, "", "FNC"], [289, 0, 1, "", "FORC"], [289, 0, 1, "", "F_CONTIGUOUS"], [289, 0, 1, "", "OWNDATA"], [289, 0, 1, "", "WRITEABLE"], [289, 0, 1, "", "WRITEBACKIFCOPY"], [12, 1, 1, "", "absolute"], [13, 1, 1, "", "add"], [14, 1, 1, "", "all"], [15, 1, 1, "", "allclose"], [16, 1, 1, "", "amax"], [17, 1, 1, "", "amin"], [18, 1, 1, "", "angle"], [19, 1, 1, "", "any"], [20, 1, 1, "", "append"], [21, 1, 1, "", "arange"], [22, 1, 1, "", "arccos"], [23, 1, 1, "", "arccosh"], [24, 1, 1, "", "arcsin"], [25, 1, 1, "", "arcsinh"], [26, 1, 1, "", "arctan"], [27, 1, 1, "", "arctan2"], [28, 1, 1, "", "arctanh"], [29, 1, 1, "", "argmax"], [30, 1, 1, "", "argmin"], [31, 1, 1, "", "argpartition"], [32, 1, 1, "", "argsort"], [33, 1, 1, "", "argwhere"], [34, 1, 1, "", "array"], [35, 1, 1, "", "array_equal"], [36, 1, 1, "", "array_split"], [37, 1, 1, "", "asarray"], [38, 1, 1, "", "atleast_1d"], [39, 1, 1, "", "atleast_2d"], [40, 1, 1, "", "atleast_3d"], [41, 1, 1, "", "average"], [42, 1, 1, "", "bartlett"], [43, 1, 1, "", "bincount"], [44, 1, 1, "", "bitwise_and"], [45, 1, 1, "", "bitwise_or"], [46, 1, 1, "", "bitwise_xor"], [47, 1, 1, "", "blackman"], [48, 1, 1, "", "block"], [6, 2, 1, "", "broadcast"], [49, 1, 1, "", "broadcast_arrays"], [50, 1, 1, "", "broadcast_shapes"], [51, 1, 1, "", "broadcast_to"], [52, 1, 1, "", "cbrt"], [53, 1, 1, "", "ceil"], [54, 1, 1, "", "choose"], [55, 1, 1, "", "clip"], [56, 1, 1, "", "column_stack"], [57, 1, 1, "", "compress"], [58, 1, 1, "", "concatenate"], [59, 1, 1, "", "conj"], [60, 1, 1, "", "conjugate"], [61, 1, 1, "", "convolve"], [62, 1, 1, "", "copy"], [63, 1, 1, "", "copysign"], [64, 1, 1, "", "copyto"], [65, 1, 1, "", "cos"], [66, 1, 1, "", "cosh"], [67, 1, 1, "", "count_nonzero"], [68, 1, 1, "", "cov"], [69, 1, 1, "", "cumprod"], [70, 1, 1, "", "cumsum"], [71, 1, 1, "", "deg2rad"], [72, 1, 1, "", "degrees"], [73, 1, 1, "", "delete"], [74, 1, 1, "", "diag"], [75, 1, 1, "", "diag_indices"], [76, 1, 1, "", "diag_indices_from"], [77, 1, 1, "", "diagflat"], [78, 1, 1, "", "diagonal"], [79, 1, 1, "", "diff"], [80, 1, 1, "", "digitize"], [81, 1, 1, "", "divide"], [82, 1, 1, "", "dot"], [83, 1, 1, "", "dsplit"], [84, 1, 1, "", "dstack"], [85, 1, 1, "", "einsum"], [86, 1, 1, "", "einsum_path"], [87, 1, 1, "", "empty"], [88, 1, 1, "", "empty_like"], [89, 1, 1, "", "equal"], [90, 1, 1, "", "exp"], [91, 1, 1, "", "exp2"], [92, 1, 1, "", "expand_dims"], [93, 1, 1, "", "expm1"], [94, 1, 1, "", "extract"], [95, 1, 1, "", "eye"], [96, 1, 1, "", "fabs"], [11, 5, 0, "-", "fft"], [113, 1, 1, "", "fill_diagonal"], [114, 1, 1, "", "find_common_type"], [115, 1, 1, "", "flatnonzero"], [116, 1, 1, "", "flip"], [117, 1, 1, "", "fliplr"], [118, 1, 1, "", "flipud"], [119, 1, 1, "", "float_power"], [120, 1, 1, "", "floor"], [121, 1, 1, "", "floor_divide"], [122, 1, 1, "", "fmax"], [123, 1, 1, "", "fmin"], [124, 1, 1, "", "fmod"], [125, 1, 1, "", "frexp"], [126, 1, 1, "", "full"], [127, 1, 1, "", "full_like"], [128, 1, 1, "", "gcd"], [129, 1, 1, "", "gradient"], [130, 1, 1, "", "greater"], [131, 1, 1, "", "greater_equal"], [132, 1, 1, "", "hamming"], [133, 1, 1, "", "hanning"], [134, 1, 1, "", "histogram"], [135, 1, 1, "", "hsplit"], [136, 1, 1, "", "hstack"], [137, 1, 1, "", "hypot"], [138, 1, 1, "", "identity"], [139, 1, 1, "", "imag"], [140, 1, 1, "", "indices"], [141, 1, 1, "", "inner"], [142, 1, 1, "", "invert"], [143, 1, 1, "", "isclose"], [144, 1, 1, "", "iscomplex"], [145, 1, 1, "", "iscomplexobj"], [146, 1, 1, "", "isfinite"], [147, 1, 1, "", "isinf"], [148, 1, 1, "", "isnan"], [149, 1, 1, "", "isneginf"], [150, 1, 1, "", "isposinf"], [151, 1, 1, "", "isreal"], [152, 1, 1, "", "isrealobj"], [153, 1, 1, "", "isscalar"], [154, 1, 1, "", "ix_"], [155, 1, 1, "", "kaiser"], [156, 1, 1, "", "lcm"], [157, 1, 1, "", "ldexp"], [158, 1, 1, "", "left_shift"], [159, 1, 1, "", "less"], [160, 1, 1, "", "less_equal"], [455, 5, 0, "-", "linalg"], [173, 1, 1, "", "linspace"], [174, 1, 1, "", "load"], [175, 1, 1, "", "log"], [176, 1, 1, "", "log10"], [177, 1, 1, "", "log1p"], [178, 1, 1, "", "log2"], [179, 1, 1, "", "logaddexp"], [180, 1, 1, "", "logaddexp2"], [181, 1, 1, "", "logical_and"], [182, 1, 1, "", "logical_not"], [183, 1, 1, "", "logical_or"], [184, 1, 1, "", "logical_xor"], [185, 1, 1, "", "mask_indices"], [186, 1, 1, "", "matmul"], [187, 1, 1, "", "maximum"], [188, 1, 1, "", "mean"], [189, 1, 1, "", "median"], [190, 1, 1, "", "meshgrid"], [191, 1, 1, "", "minimum"], [192, 1, 1, "", "mod"], [193, 1, 1, "", "modf"], [194, 1, 1, "", "moveaxis"], [195, 1, 1, "", "multiply"], [196, 1, 1, "", "nan_to_num"], [197, 1, 1, "", "nanargmax"], [198, 1, 1, "", "nanargmin"], [199, 1, 1, "", "nancumprod"], [200, 1, 1, "", "nancumsum"], [201, 1, 1, "", "nanmax"], [202, 1, 1, "", "nanmean"], [203, 1, 1, "", "nanmedian"], [204, 1, 1, "", "nanmin"], [205, 1, 1, "", "nanpercentile"], [206, 1, 1, "", "nanprod"], [207, 1, 1, "", "nanquantile"], [208, 1, 1, "", "nansum"], [4, 2, 1, "", "ndarray"], [330, 1, 1, "", "ndim"], [331, 1, 1, "", "negative"], [332, 1, 1, "", "nextafter"], [333, 1, 1, "", "nonzero"], [334, 1, 1, "", "not_equal"], [335, 1, 1, "", "ones"], [336, 1, 1, "", "ones_like"], [337, 1, 1, "", "outer"], [338, 1, 1, "", "packbits"], [339, 1, 1, "", "partition"], [340, 1, 1, "", "percentile"], [341, 1, 1, "", "place"], [342, 1, 1, "", "positive"], [343, 1, 1, "", "power"], [344, 1, 1, "", "prod"], [345, 1, 1, "", "put"], [346, 1, 1, "", "put_along_axis"], [347, 1, 1, "", "putmask"], [348, 1, 1, "", "quantile"], [349, 1, 1, "", "rad2deg"], [350, 1, 1, "", "radians"], [460, 5, 0, "-", "random"], [393, 1, 1, "", "ravel"], [394, 1, 1, "", "ravel_multi_index"], [395, 1, 1, "", "real"], [396, 1, 1, "", "real_if_close"], [397, 1, 1, "", "reciprocal"], [398, 1, 1, "", "remainder"], [399, 1, 1, "", "repeat"], [400, 1, 1, "", "reshape"], [401, 1, 1, "", "right_shift"], [402, 1, 1, "", "rint"], [403, 1, 1, "", "roll"], [404, 1, 1, "", "roots"], [405, 1, 1, "", "rot90"], [406, 1, 1, "", "round"], [407, 1, 1, "", "row_stack"], [408, 1, 1, "", "searchsorted"], [409, 1, 1, "", "select"], [410, 1, 1, "", "shape"], [411, 1, 1, "", "sign"], [412, 1, 1, "", "signbit"], [413, 1, 1, "", "sin"], [414, 1, 1, "", "sinh"], [415, 1, 1, "", "sort"], [416, 1, 1, "", "sort_complex"], [417, 1, 1, "", "split"], [418, 1, 1, "", "sqrt"], [419, 1, 1, "", "square"], [420, 1, 1, "", "squeeze"], [421, 1, 1, "", "stack"], [422, 1, 1, "", "subtract"], [423, 1, 1, "", "sum"], [424, 1, 1, "", "swapaxes"], [425, 1, 1, "", "take"], [426, 1, 1, "", "take_along_axis"], [427, 1, 1, "", "tan"], [428, 1, 1, "", "tanh"], [429, 1, 1, "", "tensordot"], [430, 1, 1, "", "tile"], [431, 1, 1, "", "trace"], [432, 1, 1, "", "transpose"], [433, 1, 1, "", "tri"], [434, 1, 1, "", "tril"], [435, 1, 1, "", "tril_indices"], [436, 1, 1, "", "tril_indices_from"], [437, 1, 1, "", "triu"], [438, 1, 1, "", "triu_indices"], [439, 1, 1, "", "triu_indices_from"], [440, 1, 1, "", "true_divide"], [441, 1, 1, "", "trunc"], [442, 1, 1, "", "unique"], [443, 1, 1, "", "unpackbits"], [444, 1, 1, "", "unravel_index"], [445, 1, 1, "", "var"], [446, 1, 1, "", "vdot"], [447, 1, 1, "", "vsplit"], [448, 1, 1, "", "vstack"], [449, 1, 1, "", "where"], [450, 1, 1, "", "zeros"], [451, 1, 1, "", "zeros_like"]], "cupynumeric.broadcast": [[6, 3, 1, "", "index"], [6, 3, 1, "", "iters"], [6, 3, 1, "", "nd"], [6, 3, 1, "", "ndim"], [6, 3, 1, "", "numiter"], [6, 4, 1, "", "reset"], [6, 3, 1, "", "shape"], [6, 3, 1, "", "size"]], "cupynumeric.fft": [[97, 1, 1, "", "fft"], [98, 1, 1, "", "fft2"], [99, 1, 1, "", "fftn"], [100, 1, 1, "", "fftshift"], [101, 1, 1, "", "hfft"], [102, 1, 1, "", "ifft"], [103, 1, 1, "", "ifft2"], [104, 1, 1, "", "ifftn"], [105, 1, 1, "", "ifftshift"], [106, 1, 1, "", "ihfft"], [107, 1, 1, "", "irfft"], [108, 1, 1, "", "irfft2"], [109, 1, 1, "", "irfftn"], [110, 1, 1, "", "rfft"], [111, 1, 1, "", "rfft2"], [112, 1, 1, "", "rfftn"]], "cupynumeric.linalg": [[161, 1, 1, "", "cholesky"], [162, 1, 1, "", "eig"], [163, 1, 1, "", "eigh"], [164, 1, 1, "", "eigvals"], [165, 1, 1, "", "eigvalsh"], [166, 1, 1, "", "expm"], [167, 1, 1, "", "matrix_power"], [168, 1, 1, "", "multi_dot"], [169, 1, 1, "", "norm"], [170, 1, 1, "", "qr"], [171, 1, 1, "", "solve"], [172, 1, 1, "", "svd"]], "cupynumeric.ndarray": [[289, 0, 1, "", "C_CONTIGUOUS"], [209, 3, 1, "", "T"], [210, 4, 1, "", "__abs__"], [211, 4, 1, "", "__add__"], [212, 4, 1, "", "__and__"], [213, 4, 1, "", "__array__"], [214, 4, 1, "", "__bool__"], [215, 4, 1, "", "__complex__"], [216, 4, 1, "", "__contains__"], [217, 4, 1, "", "__copy__"], [218, 4, 1, "", "__deepcopy__"], [219, 4, 1, "", "__divmod__"], [220, 4, 1, "", "__eq__"], [221, 4, 1, "", "__float__"], [222, 4, 1, "", "__floordiv__"], [223, 4, 1, "", "__ge__"], [224, 4, 1, "", "__getitem__"], [225, 4, 1, "", "__gt__"], [226, 4, 1, "", "__iadd__"], [227, 4, 1, "", "__iand__"], [228, 4, 1, "", "__ifloordiv__"], [229, 4, 1, "", "__ilshift__"], [230, 4, 1, "", "__imatmul__"], [231, 4, 1, "", "__imod__"], [232, 4, 1, "", "__imul__"], [233, 4, 1, "", "__index__"], [4, 4, 1, "", "__init__"], [234, 4, 1, "", "__int__"], [235, 4, 1, "", "__invert__"], [236, 4, 1, "", "__ior__"], [237, 4, 1, "", "__ipow__"], [238, 4, 1, "", "__irshift__"], [239, 4, 1, "", "__isub__"], [240, 4, 1, "", "__itruediv__"], [241, 4, 1, "", "__ixor__"], [242, 4, 1, "", "__le__"], [243, 4, 1, "", "__len__"], [244, 4, 1, "", "__lshift__"], [245, 4, 1, "", "__lt__"], [246, 4, 1, "", "__matmul__"], [247, 4, 1, "", "__mod__"], [248, 4, 1, "", "__mul__"], [249, 4, 1, "", "__ne__"], [250, 4, 1, "", "__neg__"], [251, 4, 1, "", "__new__"], [252, 4, 1, "", "__or__"], [253, 4, 1, "", "__pos__"], [254, 4, 1, "", "__pow__"], [255, 4, 1, "", "__reduce__"], [256, 4, 1, "", "__repr__"], [257, 4, 1, "", "__rmatmul__"], [258, 4, 1, "", "__rshift__"], [259, 4, 1, "", "__setitem__"], [260, 4, 1, "", "__setstate__"], [261, 4, 1, "", "__str__"], [262, 4, 1, "", "__sub__"], [263, 4, 1, "", "__truediv__"], [264, 4, 1, "", "__xor__"], [265, 4, 1, "", "all"], [266, 4, 1, "", "any"], [267, 4, 1, "", "argmax"], [268, 4, 1, "", "argmin"], [269, 4, 1, "", "argpartition"], [270, 4, 1, "", "argsort"], [271, 4, 1, "", "astype"], [272, 3, 1, "", "base"], [273, 4, 1, "", "choose"], [274, 4, 1, "", "clip"], [275, 4, 1, "", "compress"], [276, 4, 1, "", "conj"], [277, 4, 1, "", "conjugate"], [278, 4, 1, "", "copy"], [279, 3, 1, "", "ctypes"], [280, 4, 1, "", "cumprod"], [281, 4, 1, "", "cumsum"], [282, 3, 1, "", "data"], [283, 4, 1, "", "diagonal"], [284, 4, 1, "", "dot"], [285, 3, 1, "", "dtype"], [286, 4, 1, "", "dump"], [287, 4, 1, "", "dumps"], [288, 4, 1, "", "fill"], [289, 3, 1, "", "flags"], [290, 3, 1, "", "flat"], [291, 4, 1, "", "flatten"], [292, 4, 1, "", "flip"], [293, 4, 1, "", "getfield"], [294, 3, 1, "", "imag"], [295, 4, 1, "", "item"], [296, 0, 1, "", "itemset"], [297, 3, 1, "", "itemsize"], [298, 4, 1, "", "max"], [299, 4, 1, "", "mean"], [300, 4, 1, "", "min"], [301, 3, 1, "", "nbytes"], [302, 3, 1, "", "ndim"], [303, 4, 1, "", "nonzero"], [304, 4, 1, "", "partition"], [305, 4, 1, "", "prod"], [306, 4, 1, "", "put"], [307, 4, 1, "", "ravel"], [308, 3, 1, "", "real"], [309, 4, 1, "", "reshape"], [310, 4, 1, "", "searchsorted"], [311, 4, 1, "", "setfield"], [312, 4, 1, "", "setflags"], [313, 3, 1, "", "shape"], [314, 3, 1, "", "size"], [315, 4, 1, "", "sort"], [316, 4, 1, "", "squeeze"], [317, 3, 1, "", "strides"], [318, 4, 1, "", "sum"], [319, 4, 1, "", "swapaxes"], [320, 4, 1, "", "take"], [321, 4, 1, "", "tobytes"], [322, 4, 1, "", "tofile"], [323, 4, 1, "", "tolist"], [324, 4, 1, "", "tostring"], [325, 4, 1, "", "trace"], [326, 4, 1, "", "transpose"], [327, 4, 1, "", "unique"], [328, 4, 1, "", "var"], [329, 4, 1, "", "view"]], "cupynumeric.random": [[1, 2, 1, "", "BitGenerator"], [2, 2, 1, "", "Generator"], [351, 1, 1, "", "beta"], [352, 1, 1, "", "binomial"], [353, 1, 1, "", "bytes"], [354, 1, 1, "", "chisquare"], [355, 1, 1, "", "default_rng"], [356, 1, 1, "", "exponential"], [357, 1, 1, "", "f"], [358, 1, 1, "", "gamma"], [359, 1, 1, "", "geometric"], [360, 1, 1, "", "gumbel"], [361, 1, 1, "", "hypergeometric"], [362, 1, 1, "", "laplace"], [363, 1, 1, "", "logistic"], [364, 1, 1, "", "lognormal"], [365, 1, 1, "", "logseries"], [366, 1, 1, "", "negative_binomial"], [367, 1, 1, "", "noncentral_chisquare"], [368, 1, 1, "", "noncentral_f"], [369, 1, 1, "", "normal"], [370, 1, 1, "", "pareto"], [371, 1, 1, "", "poisson"], [372, 1, 1, "", "power"], [373, 1, 1, "", "rand"], [374, 1, 1, "", "randint"], [375, 1, 1, "", "randn"], [376, 1, 1, "", "random"], [377, 1, 1, "", "random_integers"], [378, 1, 1, "", "random_sample"], [379, 1, 1, "", "ranf"], [380, 1, 1, "", "rayleigh"], [381, 1, 1, "", "sample"], [382, 1, 1, "", "seed"], [383, 1, 1, "", "standard_cauchy"], [384, 1, 1, "", "standard_exponential"], [385, 1, 1, "", "standard_gamma"], [386, 1, 1, "", "standard_t"], [387, 1, 1, "", "triangular"], [388, 1, 1, "", "uniform"], [389, 1, 1, "", "vonmises"], [390, 1, 1, "", "wald"], [391, 1, 1, "", "weibull"], [392, 1, 1, "", "zipf"]], "cupynumeric.random.BitGenerator": [[1, 4, 1, "", "__init__"]], "cupynumeric.random.Generator": [[2, 4, 1, "", "__init__"]]}, "objnames": {"0": ["py", "attribute", "Python attribute"], "1": ["py", "function", "Python function"], "2": ["py", "class", "Python class"], "3": ["py", "property", "Python property"], "4": ["py", "method", "Python method"], "5": ["py", "module", "Python module"]}, "objtypes": {"0": "py:attribute", "1": "py:function", "2": "py:class", "3": "py:property", "4": "py:method", "5": "py:module"}, "terms": {"": [2, 6, 14, 15, 29, 30, 35, 61, 69, 70, 78, 98, 99, 103, 104, 108, 109, 111, 112, 113, 114, 143, 153, 169, 172, 199, 200, 201, 204, 205, 207, 282, 285, 295, 314, 321, 322, 326, 340, 348, 386, 392, 429, 430, 463, 467, 468, 471, 472, 473, 474, 476, 477, 478, 479, 480, 483, 486, 488, 491, 492], "0": [3, 4, 14, 19, 21, 36, 41, 43, 48, 54, 55, 58, 68, 69, 74, 75, 77, 78, 79, 80, 82, 95, 98, 99, 100, 102, 103, 104, 109, 112, 115, 118, 138, 140, 167, 169, 173, 185, 190, 196, 201, 205, 207, 214, 260, 283, 289, 293, 310, 311, 317, 318, 323, 325, 326, 328, 338, 340, 348, 351, 352, 354, 356, 357, 358, 360, 362, 363, 364, 365, 366, 367, 368, 369, 371, 372, 373, 374, 375, 376, 378, 379, 380, 381, 383, 386, 388, 389, 390, 391, 404, 405, 406, 408, 409, 417, 421, 423, 431, 433, 434, 435, 436, 437, 438, 439, 443, 445, 447, 463, 467, 470, 471, 472, 473, 474, 476, 477, 478, 479, 480, 486, 488, 489, 491, 492, 493], "00": 492, "000": 492, "000001": 476, "000028": 480, "000029": 480, "0021705301478625403": 473, "01": [69, 492], "012924932": 492, "017": 482, "03": 470, "05": [15, 143, 471, 492], "07": [472, 486, 491], "075726": 470, "08": [15, 143, 470], "0b00000011": [338, 443], "0d": 485, "0x11403f190": 473, "1": [2, 3, 14, 16, 17, 19, 21, 31, 32, 36, 38, 40, 41, 43, 48, 54, 55, 56, 57, 61, 68, 69, 70, 74, 75, 78, 79, 80, 82, 84, 93, 94, 97, 98, 99, 101, 102, 103, 104, 106, 107, 108, 109, 110, 111, 112, 117, 129, 134, 135, 136, 140, 141, 154, 168, 169, 170, 173, 186, 190, 199, 200, 204, 205, 207, 208, 269, 270, 278, 289, 290, 291, 295, 304, 305, 310, 315, 317, 326, 337, 338, 339, 340, 341, 346, 348, 351, 352, 354, 356, 358, 359, 360, 361, 362, 363, 364, 365, 366, 368, 369, 370, 371, 372, 373, 375, 376, 377, 378, 379, 380, 381, 384, 385, 388, 390, 391, 392, 393, 396, 400, 404, 405, 407, 408, 415, 417, 420, 421, 426, 429, 430, 433, 442, 443, 446, 448, 463, 467, 468, 471, 472, 473, 474, 476, 477, 478, 479, 480, 482, 485, 486, 488, 489, 491, 493], "10": [79, 80, 134, 176, 471, 473, 476, 479, 480, 489, 491, 492], "100": [69, 205, 340, 396, 470, 471, 472, 473, 476, 478, 488, 489, 492], "1000": [471, 472, 478, 486, 492], "10000": [174, 492], "100000": 492, "1000000": [471, 492], "100000000": 492, "1000000k": 492, "100000k": 492, "10000k": 492, "1024": [463, 479], "1083": 492, "10k": 482, "11": [482, 491, 492], "1100": 492, "11432": 492, "11680": 492, "12": [3, 8, 80, 482, 483, 485, 491], "12000": 492, "1202": 492, "1241": 492, "125": 369, "126": 479, "128": 479, "129": 482, "13": [477, 482, 492], "1300": 492, "13012": 492, "134217728": 463, "135": 470, "14": [3, 477], "14000": 492, "141": 492, "15": [80, 169, 478, 492], "150": 492, "15000": 492, "15000x15000": 492, "15973827": 485, "16": [3, 8, 396, 470, 474, 492], "16000": 492, "16969": 492, "17": 3, "17617": 492, "18": [3, 8, 166, 297, 480], "19": 3, "1956": 390, "196": 470, "1970": 492, "1984": 483, "1985": 169, "1992": 473, "1995": 483, "1996": [205, 207, 340, 348], "1997": 471, "1998": 483, "1d": [41, 57, 346, 399, 426, 430], "1d00000000000001": 480, "1e": [15, 143, 472, 473, 477], "1e00000000000000": 480, "2": [3, 39, 40, 48, 56, 68, 74, 75, 76, 77, 78, 79, 80, 82, 83, 84, 91, 95, 98, 101, 102, 103, 106, 107, 108, 109, 110, 111, 112, 113, 117, 118, 129, 154, 157, 162, 163, 164, 165, 168, 169, 170, 172, 178, 180, 186, 190, 205, 207, 317, 326, 340, 348, 356, 359, 367, 391, 396, 405, 407, 417, 429, 430, 431, 448, 463, 467, 470, 471, 472, 473, 474, 476, 477, 478, 479, 482, 483, 484, 485, 491, 493], "20": [3, 80, 317, 370, 477, 479, 492], "200": [369, 492], "2000": [483, 492], "20000": 492, "2000000": 492, "2000000k": 492, "2001": [356, 369], "2004": [467, 483], "2005": 483, "2006": 467, "2015": 483, "2017": 483, "2020": 492, "2024": [471, 472, 478], "2025": 483, "2048": 481, "21": [297, 492], "2193": 492, "22": [3, 492], "2204460492503131e": 396, "225": 492, "22500x22500": 492, "23": [3, 486, 491], "2316419": 471, "2350": 492, "24": [480, 482], "24000": 492, "2461": 478, "247": [3, 8], "25": 479, "25001932": 492, "255": [79, 474, 492], "256": 476, "259": 492, "2593": 492, "26": [471, 488], "27": 488, "273": 478, "275": 492, "277": 472, "28": [3, 488], "280": 471, "29": 3, "294165": 492, "2960": 492, "2d": [113, 326, 405, 479, 491], "2x": 477, "2x2": 477, "2y": 477, "3": [40, 79, 80, 82, 83, 84, 129, 136, 154, 186, 190, 205, 207, 317, 338, 340, 348, 356, 407, 417, 425, 429, 430, 443, 448, 471, 472, 473, 474, 476, 477, 478, 482, 483, 485, 491, 493], "30": 492, "300": 492, "30000": 492, "30000x30000": 492, "31": [472, 488], "3110": 492, "31938153": 471, "32": [8, 206, 317, 468, 479, 492], "320": 476, "33": 488, "330274429": 471, "35": 492, "3550": 492, "356563782": 471, "36": 473, "361": [205, 207, 340, 348], "365": [205, 207, 340, 348], "37": [3, 69], "38000": 492, "39": 477, "39894228040143267793994605993438": 471, "3d": 491, "3e": 69, "3rd": 83, "4": [3, 79, 80, 82, 141, 186, 205, 207, 317, 340, 348, 429, 430, 446, 471, 472, 473, 474, 476, 477, 478, 479, 480, 485, 489, 491, 492, 493], "40": [317, 478, 492], "40000": 492, "4096": 463, "42": [3, 8, 476, 491], "434": 492, "4378": 492, "443": [3, 8], "45": [8, 471], "457": 492, "466": 492, "47": 3, "48000": 492, "49": 492, "4f": 492, "4th": [356, 369], "4x": 492, "4y": 477, "5": [79, 80, 82, 154, 186, 205, 207, 317, 340, 348, 430, 471, 472, 473, 474, 476, 478, 480, 491, 492], "50": [8, 173, 205, 207, 340, 348, 492], "500": 492, "50000": 492, "50000x50000": 492, "5050": 492, "50625": 492, "50e": 492, "51": 369, "5384": 492, "5460": 492, "5596": 492, "57": 356, "6": [3, 79, 80, 205, 207, 317, 340, 348, 470, 471, 472, 473, 476, 477, 478], "600": 479, "6040": 492, "62": [3, 8], "6368": 492, "64": [206, 492], "65536": 463, "659": 471, "69664": 492, "7": [3, 79, 186, 205, 207, 312, 317, 340, 348, 471, 473, 476, 477], "70": 492, "70000": 492, "713": 492, "725": 492, "75625": 492, "75625x75625": 492, "767": 492, "781477937": 471, "7f0524da9740": 480, "7fda18f26000": 480, "7fe90fa7d740": 480, "8": [79, 170, 205, 207, 317, 340, 348, 473, 476, 483, 492], "80": 370, "8000": 492, "805182": 480, "8192": 463, "821255978": 471, "8388608": 480, "875": 478, "8850": 492, "9": [186, 205, 207, 317, 340, 348, 473, 474, 476, 492], "90": 405, "919": 492, "961": 492, "993": 492, "A": [1, 8, 12, 13, 14, 18, 19, 20, 22, 23, 24, 25, 26, 27, 28, 34, 43, 44, 45, 46, 51, 52, 53, 57, 59, 60, 61, 63, 64, 65, 66, 68, 69, 70, 71, 72, 73, 81, 86, 89, 90, 91, 93, 96, 98, 102, 103, 114, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 128, 129, 130, 131, 137, 142, 146, 147, 148, 149, 150, 156, 157, 158, 159, 160, 166, 169, 170, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 189, 191, 192, 193, 195, 196, 199, 200, 203, 206, 208, 271, 286, 289, 290, 291, 292, 295, 312, 317, 321, 324, 331, 332, 334, 337, 342, 343, 349, 350, 355, 371, 375, 386, 393, 397, 398, 400, 401, 402, 405, 406, 411, 412, 413, 414, 417, 418, 419, 422, 425, 427, 428, 430, 432, 440, 441, 443, 445, 463, 472, 473, 476, 480, 483, 486, 492], "AND": [14, 44, 181, 483], "AS": [471, 472, 478, 483], "And": [477, 493], "As": [317, 322, 386, 390, 467, 478, 485, 491, 492], "At": [12, 13, 22, 23, 24, 25, 26, 27, 28, 44, 45, 46, 52, 53, 59, 60, 63, 65, 66, 71, 72, 81, 89, 90, 91, 93, 96, 119, 120, 121, 122, 123, 124, 125, 128, 130, 131, 137, 142, 146, 147, 148, 156, 157, 158, 159, 160, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 187, 191, 192, 193, 195, 331, 332, 334, 342, 343, 349, 350, 397, 398, 401, 402, 411, 412, 413, 414, 418, 419, 422, 427, 428, 440, 441, 472], "BE": 483, "BUT": 483, "BY": 483, "But": 491, "By": [16, 17, 29, 30, 31, 32, 37, 68, 98, 103, 112, 166, 173, 197, 198, 201, 206, 271, 339, 393, 399, 403, 415, 425, 432, 433, 435, 438, 445, 463, 467, 479, 492, 493], "FOR": 483, "For": [12, 13, 21, 22, 23, 24, 25, 26, 27, 28, 36, 40, 44, 45, 46, 52, 53, 55, 59, 60, 61, 63, 65, 66, 69, 70, 71, 72, 73, 75, 79, 80, 81, 84, 85, 89, 90, 91, 93, 96, 97, 101, 102, 104, 107, 108, 110, 111, 113, 117, 118, 119, 120, 121, 122, 123, 124, 125, 128, 130, 131, 136, 137, 142, 143, 146, 147, 148, 156, 157, 158, 159, 160, 167, 169, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 187, 188, 190, 191, 192, 193, 195, 196, 197, 198, 199, 200, 202, 206, 255, 260, 297, 317, 326, 331, 332, 334, 342, 343, 349, 350, 369, 397, 398, 401, 402, 407, 411, 412, 413, 414, 417, 418, 419, 421, 422, 427, 428, 440, 441, 445, 448, 459, 467, 473, 474, 476, 479, 480, 481, 482, 486, 489, 492, 493], "IF": 483, "IN": 483, "ITS": 483, "If": [1, 2, 12, 13, 14, 15, 16, 17, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 34, 35, 37, 41, 42, 43, 44, 45, 46, 47, 48, 49, 52, 53, 54, 55, 57, 58, 59, 60, 61, 63, 64, 65, 66, 68, 69, 70, 71, 72, 73, 74, 78, 79, 80, 81, 82, 85, 86, 89, 90, 91, 93, 95, 96, 97, 98, 99, 101, 102, 103, 104, 106, 107, 109, 110, 112, 113, 116, 119, 120, 121, 122, 123, 124, 125, 128, 129, 130, 131, 132, 133, 134, 137, 139, 140, 141, 142, 143, 146, 147, 148, 149, 150, 151, 155, 156, 157, 158, 159, 160, 162, 163, 164, 165, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 186, 187, 188, 189, 190, 191, 192, 193, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 260, 271, 292, 310, 322, 323, 326, 330, 331, 332, 334, 337, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 377, 378, 379, 380, 381, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 395, 396, 397, 398, 400, 401, 402, 403, 404, 406, 408, 411, 412, 413, 414, 415, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 433, 440, 441, 442, 445, 446, 467, 468, 473, 476, 477, 480, 488, 491, 492], "In": [2, 61, 69, 70, 85, 102, 103, 104, 107, 109, 161, 173, 185, 190, 199, 200, 205, 206, 207, 208, 339, 340, 344, 345, 348, 370, 388, 390, 400, 415, 423, 433, 467, 471, 472, 473, 475, 476, 479, 486, 491, 492], "It": [6, 14, 19, 20, 21, 29, 30, 31, 32, 42, 47, 51, 54, 55, 69, 70, 80, 121, 163, 165, 189, 197, 198, 199, 200, 203, 205, 207, 208, 289, 340, 344, 347, 348, 351, 356, 359, 362, 370, 389, 406, 409, 423, 425, 426, 445, 473, 479, 484, 491, 492], "Its": [55, 57, 346, 356, 431], "NO": 483, "NOT": [142, 182, 382, 483, 492], "No": [37, 161], "Not": [55, 146, 199, 200, 206, 208, 491], "OF": [471, 472, 478, 483], "ON": [468, 483], "OR": [19, 45, 183, 471, 472, 478, 482, 483], "On": 480, "One": [38, 39, 40, 206, 274, 400, 480, 491], "Ones": [34, 199], "Or": 429, "SUCH": 483, "Such": 480, "THE": 483, "TO": 483, "That": 185, "The": [2, 6, 7, 14, 15, 16, 17, 18, 19, 20, 21, 31, 32, 34, 36, 41, 42, 43, 47, 48, 49, 50, 51, 54, 55, 56, 58, 61, 64, 67, 68, 69, 70, 73, 74, 75, 77, 78, 79, 80, 82, 84, 85, 86, 88, 92, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 114, 116, 119, 126, 127, 129, 132, 133, 134, 136, 138, 139, 140, 141, 143, 145, 149, 150, 152, 155, 161, 162, 163, 164, 165, 167, 168, 169, 170, 172, 173, 174, 185, 186, 188, 189, 190, 194, 196, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 260, 271, 279, 286, 289, 291, 292, 294, 297, 308, 312, 317, 321, 322, 323, 330, 335, 336, 338, 339, 340, 344, 345, 346, 348, 351, 355, 356, 357, 358, 359, 360, 362, 367, 369, 370, 371, 373, 374, 375, 377, 380, 383, 387, 388, 389, 390, 391, 392, 393, 395, 399, 400, 403, 404, 405, 406, 407, 409, 410, 415, 417, 420, 421, 423, 425, 426, 429, 430, 431, 433, 435, 436, 438, 439, 442, 443, 444, 445, 446, 448, 450, 451, 452, 468, 469, 470, 471, 473, 474, 476, 477, 479, 480, 482, 483, 485, 488, 489, 491, 492], "Then": [54, 185, 493], "There": [173, 312, 442, 468, 470, 477, 491, 492], "These": [20, 49, 68, 85, 86, 190, 194, 289, 312, 346, 426, 479, 482, 485, 492], "To": [101, 107, 109, 326, 378, 379, 381, 467, 471, 472, 473, 476, 477, 478, 482, 489, 491, 492], "WITH": 483, "With": [14, 16, 17, 19, 29, 30, 41, 169, 188, 189, 197, 198, 201, 202, 203, 204, 205, 206, 207, 208, 340, 344, 348, 423, 445, 479, 481, 492], "_": [404, 473, 491, 492], "__abs__": 0, "__add__": 0, "__and__": 0, "__array__": [0, 34, 329], "__array_function__": [0, 433], "__array_ufunc__": 0, "__bool__": 0, "__buffer__": 0, "__complex__": 0, "__contains__": 0, "__copy__": 0, "__deepcopy__": 0, "__divmod__": 0, "__eq__": 0, "__float__": 0, "__floordiv__": 0, "__format__": 0, "__ge__": 0, "__getitem__": 0, "__gt__": 0, "__hash__": 0, "__iadd__": 0, "__iand__": 0, "__ifloordiv__": 0, "__ilshift__": 0, "__imatmul__": 0, "__imod__": 0, "__imul__": 0, "__index__": 0, "__init__": [0, 1, 2, 4, 488], "__int__": 0, "__invert__": 0, "__ior__": 0, "__ipow__": 0, "__irshift__": 0, "__isub__": 0, "__iter__": 0, "__itruediv__": 0, "__ixor__": 0, "__le__": 0, "__len__": 0, "__lshift__": 0, "__lt__": 0, "__main__": 492, "__matmul__": 0, "__mod__": 0, "__mul__": 0, "__name__": [474, 492], "__ne__": 0, "__neg__": 0, "__or__": 0, "__pos__": 0, "__pow__": 0, "__radd__": 0, "__rand__": 0, "__rdivmod__": 0, "__reduce__": 0, "__reduce_ex__": 0, "__repr__": 0, "__rfloordiv__": 0, "__rmatmul__": 0, "__rmod__": 0, "__rmul__": 0, "__ror__": 0, "__rpow__": 0, "__rshift__": 0, "__rsub__": 0, "__rtruediv__": 0, "__rxor__": 0, "__setitem__": 0, "__setstate__": 0, "__sizeof__": 0, "__str__": 0, "__sub__": 0, "__truediv__": 0, "__xor__": 0, "_f": 169, "a0": 337, "a1": [35, 58, 337, 471, 473], "a100": 481, "a2": [35, 58, 471, 473], "a3": 471, "a4": 471, "a5": 471, "a_": [169, 473], "a_ax": 429, "a_max": 55, "a_min": 55, "a_swap": 424, "aand": 471, "aarch64": [482, 492], "ab": [15, 167, 169, 210, 471], "abandon": 467, "abil": 492, "abl": [169, 467, 492], "about": [102, 289, 312, 463, 467, 472, 476, 482, 486, 492], "abov": [54, 74, 77, 99, 104, 109, 112, 188, 196, 202, 206, 208, 344, 370, 374, 377, 433, 434, 445, 471, 479, 480, 483, 492], "abramowitz": 471, "abrupt": 474, "absolut": [0, 3, 8, 15, 96, 143, 396], "abstract": 479, "ac": [471, 474], "acceler": [463, 480, 481, 492], "accept": [352, 467, 485, 491], "access": [75, 76, 185, 289, 295, 312, 479, 480, 492], "accomod": 473, "accord": [41, 112, 162, 163, 164, 165, 312, 432], "accordingli": 186, "account": [393, 400, 479, 480, 492], "acct": 492, "acct_nam": 492, "accumul": [69, 70, 199, 200, 206, 208, 344, 423, 431, 485], "accur": [129, 472, 473, 480], "accuraci": [102, 103, 104, 107, 109, 473, 477, 492], "achiev": [326, 359, 479, 481], "aco": [3, 8], "acosh": [3, 8], "across": [476, 479, 492], "action": 483, "activ": [482, 492], "actual": [161, 312, 474, 479, 480, 486, 492], "ad": [15, 326, 370, 479, 488], "adapt": 483, "add": [0, 3, 8, 378, 379, 381, 443, 467, 485, 491, 492, 493], "add_argu": 492, "addit": [2, 68, 161, 166, 326, 442, 463, 470, 473, 474, 477, 479, 480, 482, 491, 492], "addition": [355, 468, 485, 491, 492], "address": [425, 467, 492], "adjac": [21, 479, 492], "advanc": [469, 480, 485, 490], "advantag": 492, "advis": 483, "affect": [21, 312, 473], "afford": [480, 492], "after": [84, 113, 186, 205, 207, 317, 332, 340, 348, 403, 407, 448, 467, 470, 479, 488, 491], "again": 329, "against": [6, 14, 15, 16, 17, 19, 29, 30, 41, 49, 50, 169, 188, 189, 197, 198, 201, 202, 203, 204, 205, 206, 207, 208, 340, 344, 346, 348, 423, 426, 445], "aggreg": 492, "agre": [467, 471, 472, 478], "ai": 492, "aim": 481, "alaska": 483, "algebra": [85, 452, 461, 468], "algo_canny_edge_detector": 474, "algorithm": [1, 32, 85, 86, 97, 102, 110, 404, 415, 473, 474, 475, 477, 492], "alia": [324, 376], "alias": 102, "align": [289, 312, 492], "all": [0, 3, 8, 16, 17, 19, 41, 48, 54, 56, 64, 68, 79, 80, 84, 85, 86, 90, 91, 93, 95, 99, 100, 104, 105, 109, 112, 113, 116, 129, 136, 138, 153, 154, 161, 173, 185, 186, 188, 190, 197, 198, 199, 200, 201, 202, 204, 206, 208, 271, 276, 288, 289, 292, 312, 323, 344, 388, 396, 403, 407, 409, 420, 423, 425, 431, 445, 448, 463, 467, 468, 470, 476, 478, 479, 483, 488, 492, 493], "allclos": [0, 3, 8, 488], "allevi": 492, "alloc": [12, 13, 22, 23, 24, 25, 26, 27, 28, 44, 45, 46, 52, 53, 59, 60, 63, 65, 66, 71, 72, 81, 89, 90, 91, 93, 96, 119, 120, 121, 122, 123, 124, 125, 128, 130, 131, 137, 142, 146, 147, 148, 149, 150, 156, 157, 158, 159, 160, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 187, 191, 192, 193, 195, 271, 331, 332, 334, 342, 343, 349, 350, 397, 398, 401, 402, 411, 412, 413, 414, 418, 419, 422, 427, 428, 440, 441, 480, 490, 493], "allow": [16, 17, 36, 48, 64, 82, 85, 134, 141, 174, 186, 189, 201, 203, 204, 205, 207, 271, 340, 348, 425, 429, 433, 446, 467, 474, 479, 492], "alon": 492, "along": [6, 14, 16, 17, 19, 20, 29, 30, 31, 32, 41, 48, 57, 58, 67, 69, 70, 73, 75, 79, 83, 84, 97, 98, 99, 101, 102, 103, 104, 106, 107, 109, 110, 112, 113, 116, 117, 118, 129, 135, 136, 140, 169, 173, 188, 189, 190, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 267, 268, 275, 292, 298, 299, 300, 317, 320, 325, 328, 340, 344, 346, 348, 399, 403, 405, 407, 416, 417, 421, 423, 425, 426, 429, 430, 431, 435, 436, 438, 439, 442, 443, 445, 447, 448, 492], "alpha": [351, 473, 476], "alreadi": [37, 39, 40, 189, 203, 289, 330, 337, 442, 467], "also": [21, 68, 79, 85, 99, 104, 109, 112, 166, 186, 194, 289, 329, 352, 357, 363, 370, 372, 380, 383, 389, 392, 425, 442, 457, 459, 467, 470, 472, 477, 478, 479, 480, 482, 484, 485, 489, 491, 492], "alter": 289, "altern": [14, 16, 17, 19, 69, 70, 188, 189, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 340, 344, 348, 356, 406, 423, 445, 463], "although": [105, 323, 479], "alwai": [54, 78, 83, 119, 135, 153, 162, 163, 164, 165, 174, 322, 420, 447, 463, 467, 480], "am": [337, 467], "amax": [0, 3, 8, 43, 201, 298], "amd": 492, "american": [205, 207, 340, 348], "amin": [0, 3, 8, 204, 300], "among": [279, 492], "amongst": 6, "amount": [480, 492], "an": [2, 6, 12, 13, 14, 16, 17, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 34, 36, 37, 38, 39, 40, 41, 42, 44, 45, 46, 47, 48, 51, 52, 53, 54, 55, 57, 58, 59, 60, 61, 62, 63, 65, 66, 68, 69, 70, 71, 72, 73, 75, 76, 78, 80, 81, 82, 85, 86, 89, 90, 91, 92, 93, 94, 95, 96, 98, 99, 101, 102, 103, 104, 107, 109, 110, 112, 113, 116, 119, 120, 121, 122, 123, 124, 125, 128, 129, 130, 131, 132, 133, 134, 135, 137, 140, 141, 142, 145, 146, 147, 148, 152, 154, 155, 156, 157, 158, 159, 160, 169, 171, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 217, 218, 260, 273, 274, 275, 279, 287, 292, 295, 304, 309, 310, 314, 315, 317, 320, 322, 323, 326, 327, 329, 330, 331, 332, 334, 336, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 352, 354, 356, 357, 359, 368, 373, 375, 390, 392, 393, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 437, 438, 440, 441, 442, 444, 445, 447, 449, 451, 459, 463, 467, 468, 470, 471, 472, 474, 476, 477, 478, 479, 480, 482, 483, 485, 486, 488, 492], "analog": [103, 104], "analogu": [356, 389], "analysi": 480, "angl": [0, 3, 8, 71, 72, 349, 350, 396], "ani": [0, 3, 4, 6, 8, 12, 13, 14, 16, 17, 20, 21, 22, 23, 24, 25, 26, 27, 28, 34, 36, 37, 44, 45, 46, 48, 49, 52, 53, 54, 59, 60, 63, 64, 65, 66, 68, 69, 70, 71, 72, 73, 79, 80, 81, 85, 86, 89, 90, 91, 93, 96, 98, 99, 103, 104, 109, 112, 113, 114, 119, 120, 121, 122, 123, 124, 125, 126, 128, 129, 130, 131, 136, 137, 142, 144, 145, 146, 147, 148, 151, 152, 153, 154, 156, 157, 158, 159, 160, 167, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 186, 187, 188, 191, 192, 193, 195, 197, 198, 199, 200, 201, 202, 204, 206, 208, 271, 272, 279, 280, 281, 285, 289, 290, 292, 293, 298, 300, 305, 311, 318, 321, 323, 331, 332, 334, 342, 343, 344, 349, 350, 388, 397, 398, 399, 401, 402, 409, 411, 412, 413, 414, 418, 419, 422, 423, 427, 428, 431, 440, 441, 445, 467, 470, 471, 472, 478, 479, 483, 489, 491], "anoth": [6, 64, 289, 312, 480, 492], "anova": 357, "answer": 492, "anti": 491, "anyth": [297, 470], "ap": 471, "apach": [467, 471, 472, 478], "api": [289, 312, 376, 463, 468, 473, 474, 477, 480, 481, 486, 487, 489, 490, 492], "appear": [42, 47, 92, 117, 118, 132, 133, 155, 271, 442, 467], "append": [0, 3, 8, 78, 79, 86, 186, 479, 491, 492], "appli": [41, 73, 114, 196, 429, 473, 474, 485, 491, 492], "applic": [471, 472, 478, 479, 486, 488, 490, 492, 493], "apply_along_axi": [3, 8], "apply_over_ax": [3, 8], "approach": [390, 467, 479, 491, 492], "appropri": [29, 30, 48, 54, 80, 197, 198, 289, 312, 374, 377, 425, 459, 467, 479, 492], "approx": 492, "approxim": [471, 473], "ar": [13, 14, 15, 16, 17, 19, 20, 21, 27, 29, 30, 33, 35, 38, 39, 40, 41, 42, 44, 45, 46, 48, 49, 54, 55, 56, 57, 58, 61, 63, 64, 68, 69, 70, 74, 78, 79, 80, 81, 82, 85, 86, 89, 95, 98, 99, 101, 102, 103, 104, 107, 109, 112, 115, 116, 117, 118, 119, 121, 122, 123, 124, 128, 130, 131, 134, 137, 141, 143, 156, 157, 158, 159, 160, 161, 167, 169, 172, 173, 179, 180, 181, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 271, 274, 289, 292, 295, 303, 310, 312, 322, 323, 326, 330, 332, 333, 334, 340, 341, 343, 344, 345, 346, 348, 351, 352, 354, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 374, 375, 377, 378, 379, 380, 381, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 398, 401, 403, 404, 406, 408, 409, 421, 422, 423, 425, 429, 431, 433, 436, 439, 440, 442, 443, 444, 445, 463, 467, 468, 470, 471, 473, 474, 476, 477, 479, 482, 483, 485, 486, 488, 491, 492], "arang": [0, 3, 8], "arbitrari": [87, 88, 289, 314], "arbitrarili": 289, "arc": 27, "arcco": [0, 3, 8], "arccosh": [0, 3, 8], "architectur": [479, 492], "archiv": 322, "arcsin": [0, 3, 8], "arcsinh": [0, 3, 8], "arctan": [0, 3, 8], "arctan2": [0, 3, 8, 18], "arctanh": [0, 3, 8], "area": [289, 312, 479], "arg": [12, 13, 22, 23, 24, 25, 26, 27, 28, 44, 45, 46, 49, 50, 52, 53, 59, 60, 63, 65, 66, 71, 72, 81, 89, 90, 91, 93, 96, 114, 119, 120, 121, 122, 123, 124, 125, 128, 130, 131, 137, 142, 146, 147, 148, 154, 156, 157, 158, 159, 160, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 187, 191, 192, 193, 195, 295, 331, 332, 334, 342, 343, 349, 350, 397, 398, 401, 402, 411, 412, 413, 414, 418, 419, 422, 427, 428, 440, 441, 471, 492], "argmax": [0, 3, 8], "argmin": [0, 3, 8, 476], "argpars": 492, "argpartit": [0, 3, 8, 346, 426], "argsort": [0, 3, 8, 31, 310, 346, 408, 426], "argument": [2, 12, 13, 18, 21, 22, 23, 24, 25, 26, 27, 28, 44, 45, 46, 52, 53, 55, 58, 59, 60, 61, 63, 65, 66, 71, 72, 80, 81, 82, 86, 89, 90, 91, 93, 96, 114, 119, 120, 121, 122, 123, 124, 125, 128, 130, 131, 134, 137, 139, 141, 142, 146, 147, 148, 149, 150, 153, 156, 157, 158, 159, 160, 168, 173, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 190, 191, 192, 193, 195, 260, 271, 279, 295, 326, 329, 331, 332, 334, 342, 343, 349, 350, 373, 375, 395, 397, 398, 401, 402, 411, 412, 413, 414, 418, 419, 421, 422, 427, 428, 429, 433, 440, 441, 442, 446, 490, 492], "argumentpars": 492, "argwher": [0, 3, 8], "ari": [38, 39, 40, 417], "aris": [357, 483], "arithmet": [7, 54, 188, 202, 295, 461], "around": [3, 8, 345, 425, 492], "arr": [20, 51, 62, 73, 76, 94, 189, 203, 289, 341, 346, 425, 426, 436, 439, 485], "arr_t": 271, "arrai": [0, 2, 6, 7, 12, 13, 14, 15, 16, 17, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 154, 155, 156, 157, 158, 159, 160, 162, 163, 164, 165, 166, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 213, 217, 218, 260, 269, 270, 271, 273, 274, 275, 278, 279, 282, 284, 285, 286, 287, 288, 289, 290, 291, 292, 294, 295, 299, 301, 302, 304, 305, 306, 307, 308, 309, 310, 312, 313, 314, 315, 317, 318, 319, 320, 321, 322, 323, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 364, 373, 374, 375, 377, 378, 379, 381, 388, 393, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 461, 463, 472, 473, 474, 476, 477, 478, 479, 480, 485, 486, 488, 493], "array2str": [3, 8], "array_equ": [0, 3, 8], "array_equiv": [3, 8], "array_lik": [6, 12, 13, 14, 15, 16, 17, 18, 19, 20, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 37, 38, 39, 40, 41, 43, 44, 45, 46, 48, 49, 51, 52, 53, 55, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 76, 77, 78, 79, 80, 81, 82, 85, 86, 88, 89, 90, 91, 92, 93, 94, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 112, 113, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 127, 128, 129, 130, 131, 134, 137, 139, 141, 142, 143, 144, 146, 147, 148, 149, 150, 151, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 186, 187, 188, 189, 190, 191, 192, 193, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 292, 310, 330, 331, 332, 333, 334, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 393, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 408, 410, 411, 412, 413, 414, 415, 416, 418, 419, 420, 421, 422, 423, 424, 425, 427, 428, 429, 430, 431, 432, 433, 434, 436, 440, 441, 442, 444, 445, 446, 449, 451], "array_of_diagon": 78, "array_repr": [3, 8], "array_split": [0, 3, 8], "array_str": [3, 8], "array_typ": 41, "arraylik": [55, 134, 409, 449], "articl": 467, "asanyarrai": 3, "asarrai": [0, 3, 8], "asarray_chkfinit": [3, 8], "ascend": [163, 165, 310, 408], "ascontiguousarrai": 3, "asfortranarrai": 3, "asin": [3, 8], "asinh": [3, 8], "ask": [467, 481], "asmatrix": [3, 8], "aspect": 492, "aspir": 480, "assembl": 48, "assert": [473, 476, 491], "assign": [68, 288, 289, 479, 485], "assoc": 476, "associ": [41, 134, 476, 483, 486, 491], "assum": [41, 86, 166, 185, 468], "ast": 174, "astyp": [0, 3, 8, 79, 285, 474, 480, 492], "asynchron": [346, 485, 486], "atan": [3, 8], "atan2": [3, 8], "atanh": [3, 8], "atleast2d": 326, "atleast_1d": [0, 3, 8, 92], "atleast_2d": [0, 3, 8, 92], "atleast_3d": [0, 3, 8, 92], "atol": [15, 143], "attempt": [41, 80, 188, 201, 202, 204, 208, 289, 330, 445, 463, 491, 492], "attribut": [4, 7, 88, 127, 279, 289, 301, 336, 451], "author": 483, "auto": 61, "autom": 467, "automat": [61, 168, 467, 468, 479, 482, 492], "avail": [1, 2, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 210, 211, 212, 216, 217, 218, 219, 220, 222, 223, 225, 226, 227, 228, 229, 230, 231, 232, 235, 236, 237, 238, 239, 240, 241, 242, 244, 245, 246, 247, 248, 249, 250, 252, 253, 254, 256, 257, 258, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 273, 274, 275, 276, 277, 278, 283, 284, 286, 287, 288, 290, 291, 292, 295, 298, 299, 300, 303, 304, 305, 306, 307, 309, 310, 312, 315, 316, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 467, 468, 482, 491, 492, 493], "averag": [0, 3, 8, 68, 188, 202, 299, 461, 478, 479, 492], "averaged_inverted_cdf": [205, 207, 340, 348], "avg": 41, "avoid": [39, 40, 271, 476, 480, 485], "aweight": 68, "ax": [14, 16, 17, 19, 29, 30, 41, 48, 67, 78, 79, 92, 98, 99, 100, 103, 104, 105, 108, 109, 111, 112, 116, 129, 141, 169, 171, 188, 189, 194, 197, 198, 201, 202, 203, 204, 205, 206, 207, 208, 292, 316, 326, 340, 344, 348, 403, 405, 423, 424, 429, 430, 431, 432, 445, 474, 492], "axi": [14, 16, 17, 18, 19, 20, 29, 30, 31, 32, 36, 41, 57, 58, 67, 69, 70, 73, 78, 79, 82, 83, 84, 92, 97, 98, 99, 101, 102, 103, 104, 106, 107, 108, 109, 110, 111, 112, 116, 117, 118, 129, 135, 136, 140, 169, 173, 188, 189, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 265, 266, 267, 268, 269, 270, 275, 280, 281, 292, 298, 299, 300, 304, 305, 315, 316, 317, 318, 320, 326, 328, 338, 339, 340, 344, 346, 348, 393, 399, 400, 403, 405, 407, 415, 416, 417, 420, 421, 423, 424, 425, 426, 430, 431, 442, 443, 445, 447, 448, 476], "axis1": [78, 283, 319, 325, 424, 431], "axis2": [78, 283, 319, 325, 424, 431], "b": [6, 15, 35, 48, 82, 84, 121, 136, 141, 143, 171, 186, 289, 337, 351, 378, 379, 381, 407, 429, 446, 448, 467, 468, 473, 492], "b0": 337, "b1": 337, "b_ax": 429, "ba": 54, "back": [31, 54, 153, 286, 287, 339, 393, 400, 463, 471, 477, 480, 488, 492], "backward": [78, 97, 98, 99, 101, 102, 103, 104, 106, 107, 108, 109, 110, 111, 112, 129, 271, 393], "bad": 361, "balanc": 492, "baltimor": 169, "bar": 491, "barba": 479, "bartlett": [0, 3, 8], "base": [1, 34, 37, 61, 85, 176, 178, 180, 271, 289, 312, 341, 347, 463, 467, 468, 476, 479, 480, 485], "base_repr": [3, 8], "bash": 492, "bashrc": 492, "basi": [463, 471, 472, 478], "basic": [32, 415, 459, 461, 469, 479, 490, 491], "batch": [97, 98, 99, 101, 102, 103, 104, 106, 107, 108, 109, 110, 111, 112, 162, 163, 164, 165, 463], "bayesian": 351, "bbox_to_anchor": 473, "bchoic": 54, "becaus": [21, 295, 369, 390, 471, 472, 478, 480, 485, 491], "becom": [13, 27, 40, 44, 45, 46, 54, 55, 63, 81, 89, 119, 121, 122, 123, 124, 128, 130, 131, 137, 156, 157, 158, 159, 160, 179, 180, 181, 183, 184, 187, 191, 192, 195, 326, 332, 334, 343, 390, 398, 401, 422, 440, 492, 493], "been": [84, 346, 377, 407, 426, 448, 480], "befor": [14, 16, 17, 19, 20, 41, 58, 61, 117, 118, 188, 201, 202, 208, 289, 310, 344, 366, 403, 408, 423, 430, 445, 446, 477, 480, 482, 491, 492], "begin": [173, 469, 477, 492], "behav": [289, 345, 425], "behavior": [61, 80, 186, 321, 324, 346, 347, 374, 377, 430, 463, 479, 482, 490, 492], "being": [21, 420, 467, 480, 492], "bell": 369, "belong": [80, 476], "below": [68, 74, 77, 107, 169, 312, 433, 434, 437, 468, 471, 473, 477, 479, 488, 489, 491, 492, 493], "benchmark": [470, 480, 487, 490, 492], "bernoulli": 359, "bessel": 155, "best": [86, 467, 480, 490], "beta": [0, 3, 8, 155, 356, 476], "better": [21, 54, 486, 492], "between": [15, 21, 36, 79, 129, 173, 205, 207, 322, 340, 348, 356, 362, 377, 390, 396, 473, 474, 476, 477, 479, 491, 492], "beyond": [80, 403], "bham": 471, "bia": 68, "big": [166, 338, 443, 471], "bigger": 492, "billion": 479, "bin": [43, 80, 134, 338, 443, 476, 482, 492], "bin_edg": 134, "binari": [174, 260, 322, 338, 443, 452, 461, 483], "binary_repr": [3, 8], "binaryio": 174, "binaryoptask": 480, "bincount": [0, 3, 8, 476], "binomi": [0, 3, 8, 366, 371], "bit": [1, 44, 45, 46, 142, 158, 182, 206, 317, 338, 401, 443, 461], "bit_gener": 2, "bitgener": [2, 3, 8, 355], "bitord": [338, 443], "bitwise_and": [0, 3, 8], "bitwise_count": [3, 8], "bitwise_invert": [3, 8], "bitwise_left_shift": [3, 8], "bitwise_or": [0, 3, 8], "bitwise_right_shift": [3, 8], "bitwise_xor": [0, 3, 8], "bla": 468, "black": [475, 476, 482], "black_schol": [470, 471, 482, 492], "blackman": [0, 3, 8], "block": [0, 3, 8, 84, 136, 317, 407, 448, 479], "block_arrai": 48, "blog": 480, "blue": [473, 476], "bmat": [3, 8], "bmatrix": 477, "bn": 337, "boilerpl": 492, "boldsymbol": 492, "bond": 492, "bool": [1, 3, 4, 8, 12, 13, 14, 15, 16, 17, 18, 19, 22, 23, 24, 25, 26, 27, 28, 29, 30, 34, 35, 36, 41, 44, 45, 46, 49, 51, 52, 53, 57, 59, 60, 63, 64, 65, 66, 68, 71, 72, 73, 80, 81, 85, 86, 89, 90, 91, 93, 96, 113, 119, 120, 121, 122, 123, 124, 125, 128, 130, 131, 134, 137, 140, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 156, 157, 158, 159, 160, 169, 172, 173, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 187, 188, 189, 190, 191, 192, 193, 195, 196, 197, 198, 201, 202, 203, 204, 205, 206, 207, 208, 260, 271, 298, 300, 305, 312, 318, 331, 332, 334, 340, 342, 343, 344, 348, 349, 350, 397, 398, 401, 402, 409, 411, 412, 413, 414, 418, 419, 422, 423, 427, 428, 440, 441, 442, 445, 449, 459, 463, 491], "bool_": [3, 8], "boolean": [14, 19, 64, 79, 143, 148, 149, 150, 151, 154, 185, 312, 338, 347, 445, 476], "boolean_sequ": 154, "borrow": 289, "both": [13, 15, 20, 27, 41, 44, 45, 46, 61, 63, 68, 81, 82, 89, 103, 119, 121, 122, 123, 124, 128, 130, 131, 137, 141, 143, 156, 157, 158, 159, 160, 169, 179, 180, 181, 183, 184, 186, 187, 190, 191, 192, 195, 289, 332, 334, 343, 357, 358, 368, 369, 398, 401, 422, 429, 431, 440, 468, 477, 480, 491], "bottleneck": 492, "bound": [57, 80, 345, 425], "boundari": [69, 70, 129, 199, 200, 388, 473, 478, 479, 486], "boundsmod": [54, 394, 425], "break": [476, 477, 491], "bright": 492, "broadcast": [3, 7, 8, 12, 13, 14, 16, 17, 19, 22, 23, 24, 25, 26, 27, 28, 29, 30, 41, 44, 45, 46, 48, 49, 50, 51, 52, 53, 54, 55, 59, 60, 63, 64, 65, 66, 71, 72, 81, 82, 89, 90, 91, 93, 96, 119, 120, 121, 122, 123, 124, 125, 128, 130, 131, 137, 141, 142, 146, 147, 148, 149, 150, 156, 157, 158, 159, 160, 169, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 186, 187, 188, 189, 190, 191, 192, 193, 195, 197, 198, 201, 202, 203, 204, 205, 206, 207, 208, 331, 332, 334, 340, 342, 343, 344, 346, 348, 349, 350, 371, 397, 398, 399, 401, 402, 411, 412, 413, 414, 418, 419, 422, 423, 426, 427, 428, 429, 440, 441, 445, 446, 449, 452, 485, 492], "broadcast_arrai": [0, 3, 8], "broadcast_shap": [0, 3, 8], "broadcast_to": [0, 3, 8], "brownian": 390, "bryan": 471, "bsd": 483, "buffer": [4, 16, 17, 54, 69, 70, 189, 199, 200, 201, 203, 204, 282, 289, 295, 312], "build": [382, 461, 469, 476, 485, 492], "built": [21, 468, 472, 480, 481, 492], "builtin": 323, "bundl": 482, "busday_count": [3, 8], "busday_offset": [3, 8], "busdaycalendar": [3, 8], "busi": 483, "bypass": [322, 492], "byte": [0, 3, 8, 64, 85, 174, 186, 271, 301, 317, 321, 324, 338, 480], "bytes_": [3, 8], "bytesio": 322, "byteswap": 8, "c": [34, 48, 57, 169, 186, 271, 279, 289, 291, 307, 309, 312, 321, 322, 324, 377, 390, 393, 394, 400, 430, 444, 467, 468, 471, 476, 482, 483, 492], "c_": 68, "c_contigu": 289, "ca": 289, "calcul": [7, 12, 41, 61, 79, 85, 90, 91, 93, 105, 129, 163, 165, 169, 173, 186, 189, 203, 205, 207, 314, 340, 344, 348, 445, 446, 468, 471, 476, 492], "calculate_dist": 476, "call": [54, 80, 110, 168, 185, 189, 203, 217, 218, 279, 289, 312, 369, 425, 430, 463, 471, 472, 477, 480, 492], "call_result": 471, "callabl": 185, "can": [14, 19, 20, 37, 41, 48, 64, 68, 75, 78, 85, 86, 97, 98, 99, 102, 103, 104, 129, 136, 145, 152, 153, 154, 166, 167, 169, 173, 186, 189, 203, 205, 206, 207, 271, 279, 286, 289, 295, 297, 312, 317, 322, 329, 340, 346, 348, 370, 396, 400, 425, 426, 429, 431, 442, 459, 463, 467, 468, 470, 471, 472, 473, 474, 477, 478, 479, 481, 482, 484, 485, 489, 491, 492], "can_cast": [3, 8], "cannot": [58, 174, 197, 198, 289, 322, 404, 480], "canon": [471, 477, 480], "capabl": [41, 482, 492], "care": 492, "carrai": 289, "cartesian": 190, "case": [14, 19, 21, 31, 32, 34, 41, 54, 61, 69, 70, 78, 79, 80, 82, 101, 129, 140, 173, 185, 190, 199, 200, 205, 206, 207, 208, 295, 312, 314, 338, 339, 340, 344, 345, 346, 348, 351, 374, 377, 378, 379, 380, 381, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 400, 415, 423, 426, 429, 433, 467, 475, 485, 488, 491], "cast": [12, 13, 22, 23, 24, 25, 26, 27, 28, 44, 45, 46, 52, 53, 58, 59, 60, 63, 64, 65, 66, 69, 70, 71, 72, 79, 81, 85, 89, 90, 91, 93, 96, 119, 120, 121, 122, 123, 124, 125, 128, 130, 131, 137, 141, 142, 146, 147, 148, 156, 157, 158, 159, 160, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 186, 187, 188, 189, 191, 192, 193, 195, 196, 199, 200, 202, 203, 206, 208, 271, 285, 331, 332, 334, 337, 342, 343, 344, 349, 350, 397, 398, 401, 402, 406, 411, 412, 413, 414, 418, 419, 422, 423, 427, 428, 429, 440, 441, 445, 446, 477], "castingkind": [12, 13, 22, 23, 24, 25, 26, 27, 28, 44, 45, 46, 52, 53, 58, 59, 60, 63, 65, 66, 71, 72, 81, 85, 89, 90, 91, 93, 96, 119, 120, 121, 122, 123, 124, 125, 128, 130, 131, 137, 142, 146, 147, 148, 156, 157, 158, 159, 160, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 186, 187, 191, 192, 193, 195, 331, 332, 334, 342, 343, 349, 350, 397, 398, 401, 402, 411, 412, 413, 414, 418, 419, 422, 427, 428, 440, 441], "cat": 480, "cauchi": 383, "caus": [282, 479, 483, 491], "cbrt": [0, 3, 8], "cdot": [477, 492], "cdoubl": [3, 8], "ceil": [0, 3, 8, 21], "cell": 479, "center": [61, 100, 389, 473, 476, 478, 492], "centr": 369, "central": [129, 367, 368, 369], "centroid": 476, "centroid_dot": 476, "centroid_mask": 476, "certain": [185, 317, 463], "certif": 469, "certifi": 467, "cfd": 481, "cg": [470, 492], "chain": 168, "challeng": [479, 492], "chanc": 467, "chang": [63, 64, 85, 173, 186, 199, 200, 271, 289, 312, 326, 341, 346, 347, 393, 400, 461, 467, 474, 477, 481, 487, 490, 491, 492, 493], "channel": [84, 136, 407, 448, 479, 482], "charact": [3, 8, 488], "characterist": 369, "charg": 483, "check": [70, 80, 145, 152, 161, 199, 200, 467, 474, 476, 477, 480, 482, 491, 492], "chi": [354, 357, 367, 380], "chisquar": [0, 3, 8], "choic": [3, 8, 54, 273, 322], "choicelist": 409, "choleski": [0, 3, 8, 470, 475, 489], "cholesky_tim": 472, "choos": [0, 3, 8, 27, 61, 86, 449, 480, 492], "chosen": [134, 449], "chuang": 479, "circl": 389, "circular": 389, "circumst": 289, "claim": [390, 483], "class": [1, 2, 4, 6, 14, 16, 17, 19, 34, 37, 95, 138, 140, 188, 201, 204, 206, 271, 329, 335, 344, 379, 381, 423, 433, 452], "classic": [85, 370], "claus": [483, 491], "clean": 479, "clear": 289, "clearli": 492, "clip": [0, 3, 8, 54, 345, 425], "clipped_arrai": 55, "clongdoubl": [3, 8, 295], "close": [47, 173, 271, 377, 396, 467, 480], "closest": 322, "closest_observ": [205, 207, 340, 348], "cluster": [475, 480, 481, 490], "cmap": [474, 492], "cnd": 471, "cnd_d1": 471, "cnd_d2": 471, "co": [0, 3, 8, 473], "coastal": 479, "code": [32, 48, 190, 415, 463, 469, 470, 479, 481, 483, 487, 490, 491], "codebas": 489, "coeffici": [171, 404, 471], "coercion": 114, "coin": 359, "collaps": [290, 291], "collect": [78, 282, 492], "color": [470, 473, 476], "colorama": 470, "column": [8, 34, 56, 68, 95, 113, 117, 118, 135, 136, 138, 162, 163, 168, 170, 291, 317, 326, 393, 433, 435, 438, 444, 488, 492], "column_stack": [0, 3, 8], "com": [467, 474, 480, 483, 485, 492, 493], "combin": [92, 99, 104, 109, 112, 129, 470, 486, 492], "combinatori": 86, "come": [442, 492], "comm": 479, "comm_world": 479, "comma": [85, 470], "comman": 480, "command": [470, 480, 482, 484, 488, 492], "comment": 467, "commit": [467, 479], "common": [13, 27, 44, 45, 46, 54, 63, 81, 85, 89, 114, 119, 121, 122, 123, 124, 128, 130, 131, 137, 156, 157, 158, 159, 160, 179, 180, 181, 183, 184, 187, 191, 192, 195, 332, 334, 343, 356, 391, 398, 401, 422, 440, 491, 492], "common_typ": [3, 8], "commonli": [369, 480, 491], "commun": [467, 479, 480, 491, 492], "compact": 475, "compactli": 473, "companion": 404, "compar": [15, 16, 17, 35, 143, 201, 204, 473, 492], "comparison": [7, 452, 461], "compat": [78, 271, 323, 324, 393, 400, 433, 492], "compil": [171, 312, 468], "complet": [86, 205, 207, 340, 348, 468, 479, 481, 488, 492], "complex": [18, 35, 43, 59, 60, 69, 70, 80, 82, 97, 98, 99, 102, 103, 104, 106, 107, 110, 112, 139, 141, 144, 145, 151, 152, 162, 164, 196, 199, 200, 205, 207, 276, 277, 340, 348, 395, 396, 406, 416, 446, 459, 461, 479, 492], "complex128": [3, 8], "complex256": [3, 8], "complex64": [3, 8], "complexflo": [3, 8], "compli": 467, "complianc": [471, 472, 478], "complic": 479, "compon": [6, 35, 48, 100, 139, 196, 395, 429, 491, 492], "compos": 480, "compound": 471, "compress": [0, 3, 8, 322], "compressed_arrai": 57, "compuat": 488, "comput": [16, 17, 18, 41, 44, 45, 46, 61, 69, 70, 85, 96, 97, 98, 99, 101, 102, 103, 104, 106, 107, 108, 109, 110, 111, 112, 129, 134, 140, 142, 162, 163, 164, 165, 167, 168, 169, 170, 171, 172, 181, 182, 183, 184, 188, 189, 199, 200, 201, 202, 203, 204, 205, 206, 207, 337, 340, 348, 404, 427, 428, 429, 445, 463, 471, 472, 473, 474, 476, 477, 479, 480, 481, 485, 486, 491], "computat": 492, "computation": 166, "compute_uv": 172, "concat": [3, 8], "concaten": [0, 3, 8, 48, 84, 136, 407, 448], "concern": 492, "conclud": [467, 479], "conclus": 479, "cond": [8, 491, 492], "conda": 468, "conda_override_cuda": 482, "condit": [12, 13, 22, 23, 24, 25, 26, 27, 28, 44, 45, 46, 52, 53, 57, 59, 60, 63, 65, 66, 71, 72, 81, 89, 90, 91, 93, 94, 96, 119, 120, 121, 122, 123, 124, 125, 128, 130, 131, 137, 142, 146, 147, 148, 156, 157, 158, 159, 160, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 187, 191, 192, 193, 195, 271, 275, 331, 332, 334, 341, 342, 343, 347, 349, 350, 387, 397, 398, 401, 402, 409, 411, 412, 413, 414, 418, 419, 422, 427, 428, 440, 441, 449, 471, 472, 473, 478, 479, 483, 486, 491, 492], "condition": 491, "condlist": 409, "conduct": 492, "configur": [463, 468, 469, 480, 491], "configurt": 480, "conj": [0, 3, 8], "conjug": [0, 3, 8, 59, 82, 107, 141, 161, 276, 446, 472], "connect": [483, 492], "consecut": 79, "consequ": [18, 446, 480], "consequenti": 483, "conserv": 190, "consid": [15, 35, 68, 69, 85, 86, 143, 163, 165, 370, 473, 477, 492], "consider": 492, "consist": [14, 21, 61, 79, 173, 426, 467, 479], "const": [491, 492], "constant": [129, 292], "constraint": [41, 492], "construct": [7, 48, 54, 74, 116, 117, 118, 154, 273, 321, 355, 430], "constructor": [2, 459], "consum": [166, 301], "contact": 480, "contain": [2, 29, 30, 41, 43, 54, 55, 57, 64, 68, 78, 79, 102, 115, 129, 134, 140, 188, 189, 197, 198, 201, 202, 203, 204, 205, 207, 208, 260, 285, 309, 321, 322, 333, 340, 348, 393, 404, 406, 429, 435, 436, 438, 439, 442, 445, 459, 492], "content": [43, 189, 203, 205, 207, 289, 312, 321, 322, 340, 348, 461], "context": [471, 479], "contigu": [49, 51, 190, 271, 289, 291, 317, 321, 393, 400], "continu": [356, 357, 378, 379, 381, 387, 389, 471], "contour": 492, "contract": [85, 86, 468, 483], "contribut": [8, 41, 134, 469, 492], "contributor": [467, 483], "control": [58, 64, 85, 186, 271, 321, 470, 493], "conveni": 322, "convent": [18, 85, 104, 186, 190], "converg": [162, 163, 164, 165, 172, 476, 477, 491, 492], "convers": [41, 64, 85, 186, 188, 201, 202, 204, 208, 271, 329, 330, 445], "convert": [14, 19, 37, 38, 39, 40, 71, 72, 189, 203, 205, 207, 287, 322, 323, 326, 329, 340, 348, 349, 350, 404, 444, 473, 485, 492], "convolut": [61, 474, 492], "convolv": [0, 8, 474, 492], "convolve_nd": [474, 492], "convolvemethodtyp": 61, "convolvemod": 61, "coordin": [129, 190, 444, 476], "copi": [0, 3, 8, 20, 34, 37, 38, 39, 40, 48, 49, 57, 64, 73, 74, 78, 190, 196, 217, 218, 271, 289, 290, 291, 295, 312, 321, 323, 339, 393, 400, 405, 415, 416, 434, 437, 467, 471, 472, 478, 480, 483, 490, 492], "copyright": [467, 471, 472, 478, 483], "copysign": [0, 3, 8], "copyto": [0, 3, 8, 341], "core": [2, 463, 470, 471, 480, 492, 493], "corner": [103, 104, 492], "corpor": [471, 472, 478], "corrcoef": [3, 8], "correct": [20, 58, 421, 479], "correctli": [14, 16, 17, 19, 27, 29, 30, 41, 169, 188, 189, 197, 198, 201, 202, 203, 204, 205, 206, 207, 208, 340, 344, 348, 423, 445, 492], "correl": [8, 461], "correspond": [8, 54, 58, 77, 78, 98, 99, 103, 104, 107, 109, 112, 129, 140, 149, 150, 154, 162, 163, 185, 197, 198, 205, 207, 310, 338, 340, 348, 403, 408, 409, 410, 473, 474, 482, 485, 491, 492], "correspondingli": [417, 480], "cosh": [0, 3, 8], "cosin": [22, 23, 47, 65, 66, 132, 133], "cost": [86, 479], "costli": 86, "could": 491, "count": [14, 19, 41, 43, 67, 116, 129, 134, 208, 292, 344, 423, 443, 452, 461, 476], "count_nonzero": [0, 3, 8], "counterclockwis": [18, 405], "cours": 481, "cov": [0, 3, 8], "covari": 68, "cover": [3, 8, 390, 467], "coverag": [463, 487, 489, 490], "cp": 479, "cpu": [1, 2, 3, 8, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 100, 105, 113, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 210, 211, 212, 216, 217, 218, 219, 220, 222, 223, 225, 226, 227, 228, 229, 230, 231, 232, 235, 236, 237, 238, 239, 240, 241, 242, 244, 245, 246, 247, 248, 249, 250, 252, 253, 254, 256, 257, 258, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 273, 274, 275, 276, 277, 278, 283, 284, 286, 287, 288, 290, 291, 292, 295, 298, 299, 300, 303, 304, 305, 306, 307, 309, 310, 312, 315, 316, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 463, 468, 470, 477, 480, 481, 489, 491, 493], "cputsc": 484, "creat": [12, 13, 22, 23, 24, 25, 26, 27, 28, 34, 44, 45, 46, 52, 53, 54, 59, 60, 63, 65, 66, 71, 72, 77, 81, 86, 89, 90, 91, 93, 96, 119, 120, 121, 122, 123, 124, 125, 128, 130, 131, 137, 142, 146, 147, 148, 156, 157, 158, 159, 160, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 187, 191, 192, 193, 195, 196, 279, 285, 289, 331, 332, 334, 342, 343, 346, 349, 350, 373, 397, 398, 401, 402, 406, 411, 412, 413, 414, 418, 419, 422, 424, 427, 428, 440, 441, 467, 473, 478, 479, 482, 491, 492], "create_subarrai": 479, "creation": [86, 289, 433, 452, 459, 461], "critic": [479, 492], "crop": [97, 98, 99, 101, 102, 103, 104, 106, 107, 109, 110, 112], "cross": [3, 8, 154], "crucial": 492, "csingl": [3, 8], "csv": [463, 480, 488], "ct": 97, "cube": 52, "cubic": 86, "cubla": 463, "cuda": [463, 468, 470, 479, 482, 492], "cumbersom": 492, "cumprod": [0, 3, 8, 70, 199, 200, 485], "cumsum": [0, 3, 8], "cumul": [69, 70, 199, 200, 471, 492], "cumulative_prod": [3, 8], "cumulative_sum": [3, 8], "cunumer": 480, "cupi": 479, "cupynumer": [0, 3, 7, 452, 457, 461, 463, 468, 470, 471, 472, 474, 476, 477, 478, 479, 482, 484, 485, 486, 488, 489, 490, 493], "cupynumeric_doctor": [463, 491], "cupynumeric_doctor_filenam": 463, "cupynumeric_doctor_format": 463, "cupynumeric_doctor_traceback": 463, "cupynumeric_fallback_stacktrac": 463, "cupynumeric_fast_math": 463, "cupynumeric_force_thunk": 463, "cupynumeric_matmul_cache_s": 463, "cupynumeric_min_cpu_chunk": 463, "cupynumeric_min_gpu_chunk": 463, "cupynumeric_min_omp_chunk": 463, "cupynumeric_numpy_compat": [197, 198, 201, 204, 463], "cupynumeric_preload_cudalib": 463, "cupynumeric_report_coverag": [463, 488, 489], "cupynumeric_report_dump_callstack": [463, 488], "cupynumeric_report_dump_csv": [463, 488], "cupynumeric_root": 468, "cupynumeric_warn": 463, "curand": 382, "curiou": 473, "current": [6, 31, 32, 61, 161, 170, 172, 174, 213, 289, 329, 339, 346, 399, 415, 433, 442, 463, 471, 480, 484, 485, 488, 491, 492, 493], "curv": [369, 473], "cusolv": 463, "cusolvermp": 171, "custom": [459, 468, 479], "cycl": 154, "d": [2, 40, 41, 43, 56, 57, 61, 68, 69, 70, 74, 76, 77, 78, 82, 84, 95, 108, 111, 113, 117, 118, 136, 140, 141, 154, 168, 169, 186, 190, 199, 200, 201, 208, 278, 290, 291, 310, 326, 338, 341, 393, 400, 407, 408, 417, 423, 430, 431, 442, 443, 446, 448, 467, 468, 471, 472, 492], "d0": [373, 375], "d1": [373, 375, 471], "d2": 471, "d_1": 492, "d_2": 492, "damag": 483, "data": [16, 17, 21, 33, 34, 37, 41, 58, 62, 64, 68, 77, 84, 85, 87, 88, 95, 97, 98, 99, 101, 102, 103, 104, 106, 107, 108, 109, 110, 111, 112, 114, 126, 127, 134, 136, 138, 140, 152, 162, 163, 164, 165, 173, 174, 185, 186, 188, 189, 196, 202, 203, 205, 206, 207, 208, 213, 260, 271, 279, 285, 289, 295, 297, 309, 312, 321, 322, 323, 326, 329, 335, 336, 340, 341, 344, 345, 346, 348, 393, 396, 400, 406, 407, 420, 423, 426, 431, 433, 434, 445, 448, 450, 451, 452, 461, 476, 477, 479, 483, 486, 491, 492], "data_magnitude_squar": 476, "dataset": [134, 492], "datatyp": [114, 479, 490], "date": 492, "datetim": [471, 472, 478], "datetime64": [3, 8], "datetime_as_str": [3, 8], "ddof": [68, 328, 445], "de": 369, "deadlock": 479, "deal": [483, 492], "dealloc": 289, "deb": 492, "debian": 483, "debug": [470, 479], "decai": 362, "decid": 463, "decim": 406, "decompos": [125, 472, 479], "decomposit": [161, 172, 461, 475, 479], "decreas": [80, 471, 477, 480], "decreasingli": [103, 104], "dedic": 480, "deep": [48, 218, 323, 479], "deepcopi": 218, "def": [471, 472, 474, 476, 477, 478, 479, 491, 492], "default": [2, 12, 13, 14, 16, 17, 18, 19, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 34, 37, 41, 44, 45, 46, 52, 53, 54, 57, 58, 59, 60, 61, 63, 65, 66, 67, 68, 69, 70, 71, 72, 74, 77, 78, 79, 80, 81, 85, 86, 87, 89, 90, 91, 93, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 116, 119, 120, 121, 122, 123, 124, 125, 126, 128, 129, 130, 131, 134, 137, 138, 140, 142, 146, 147, 148, 156, 157, 158, 159, 160, 163, 165, 166, 169, 172, 173, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 186, 187, 188, 189, 190, 191, 192, 193, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 260, 271, 291, 292, 321, 322, 331, 332, 334, 335, 338, 339, 340, 342, 343, 344, 348, 349, 350, 351, 352, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 374, 377, 378, 379, 380, 381, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 396, 397, 398, 399, 401, 402, 403, 405, 406, 409, 411, 412, 413, 414, 415, 417, 418, 419, 422, 423, 425, 427, 428, 431, 432, 433, 434, 435, 438, 440, 441, 442, 443, 445, 447, 450, 463, 470, 474, 476, 485, 492, 493], "default_rng": [0, 2, 3, 8, 476], "defer": [4, 463, 471, 472, 478, 480, 485], "defin": [54, 73, 88, 127, 134, 169, 196, 205, 207, 295, 336, 340, 348, 387, 396, 405, 433, 451, 467, 468, 471, 472, 474, 476, 477, 478, 491, 492], "definit": [61, 102, 104, 161, 472, 492], "deg": [18, 166], "deg2rad": [0, 3, 8, 350], "degre": [3, 8, 18, 71, 349, 350, 354, 357, 367, 368, 386, 405, 445, 492], "delai": [491, 492], "delet": [0, 3, 8], "delta": [445, 476], "demand": 479, "democrat": 492, "demonstr": [489, 492], "denomin": [357, 368], "denot": 8, "dens": [140, 473], "densiti": [134, 356, 369], "dep": 468, "depend": [43, 74, 169, 171, 173, 186, 206, 377, 409, 449, 469, 480, 491, 492], "depict": 492, "deprec": 377, "depth": [48, 83, 84, 323], "deriv": [129, 364, 369, 471, 473, 474, 483, 491, 492], "derivative_exact": 473, "descend": 172, "describ": [169, 312, 356, 369, 404, 473, 480, 491], "descript": [102, 104, 134, 271, 470], "descriptor": 329, "design": [47, 358, 385, 490, 492], "desir": [34, 51, 79, 87, 126, 188, 201, 202, 204, 208, 335, 374, 430, 445, 450, 482], "despit": 324, "dest": 479, "destin": [58, 64, 194, 346, 421], "det": [3, 8], "detail": [16, 17, 69, 70, 74, 76, 97, 102, 107, 108, 110, 111, 174, 190, 199, 200, 201, 204, 206, 208, 268, 279, 317, 344, 423, 435, 436, 437, 438, 439, 442, 459, 467, 470, 479, 480, 482, 491, 492], "detect": [475, 482], "detector": 474, "determin": [34, 61, 69, 70, 78, 114, 171, 199, 200, 206, 312, 409, 431, 444, 474, 476, 477, 479, 492], "determinist": [476, 485], "develop": [468, 479, 480, 481, 483, 492], "developercertif": 467, "deviat": [364, 369, 491], "devic": [479, 492], "devin": 483, "df": [354, 367, 386], "dfden": [357, 368], "dfnum": [357, 368], "dft": [97, 102, 110], "dgx": 481, "diag": [0, 3, 8, 473, 485], "diag_indic": [0, 3, 8, 76], "diag_indices_from": [0, 3, 8], "diagflat": [0, 3, 8], "diagnos": 491, "diagon": [0, 3, 8, 74, 75, 76, 77, 95, 113, 138, 161, 163, 165, 325, 431, 433, 434, 435, 436, 437, 438, 439, 473], "diagram": [468, 492], "dictionari": 289, "did": 477, "diff": [0, 3, 8], "differ": [1, 15, 29, 30, 36, 69, 70, 79, 97, 102, 105, 107, 108, 110, 111, 117, 118, 119, 129, 169, 186, 190, 199, 200, 213, 285, 322, 346, 347, 362, 405, 426, 446, 461, 467, 468, 470, 475, 477, 478, 479, 486, 490, 491, 492], "differenc": 79, "differenti": [476, 492], "difficult": [479, 492], "diffus": 492, "digit": [0, 3, 8], "dim": [289, 394], "dimens": [6, 14, 16, 17, 19, 29, 30, 34, 38, 39, 40, 41, 48, 54, 56, 57, 58, 61, 64, 75, 78, 79, 83, 84, 92, 113, 129, 135, 136, 140, 141, 149, 150, 154, 162, 163, 164, 165, 169, 170, 172, 186, 188, 189, 190, 197, 198, 201, 202, 203, 204, 205, 206, 207, 208, 289, 290, 291, 302, 313, 314, 317, 326, 330, 333, 338, 340, 344, 346, 348, 373, 375, 400, 403, 405, 407, 410, 417, 420, 421, 423, 426, 429, 430, 431, 432, 435, 436, 438, 439, 442, 443, 444, 445, 447, 448, 461, 475, 476, 479, 485], "dimension": [7, 38, 43, 48, 61, 68, 73, 76, 77, 80, 85, 97, 98, 99, 102, 103, 104, 107, 109, 110, 111, 112, 113, 129, 166, 190, 289, 330, 337, 420, 430, 452, 474, 476, 478, 485, 491, 492], "dimenson": 190, "direct": [61, 79, 97, 98, 99, 101, 102, 103, 104, 106, 107, 108, 109, 110, 111, 112, 117, 118, 289, 405, 474, 483, 492], "directli": [61, 79, 322, 387, 467, 482, 484, 488], "directori": [468, 492], "dirichlet": [3, 8, 351], "disabl": [85, 425, 492], "disclaim": 483, "discontinu": [205, 207, 340, 348], "discourag": 486, "discret": [61, 79, 97, 98, 99, 102, 103, 104, 107, 109, 110, 112, 374, 377, 392, 452, 461, 473], "discuss": [467, 480], "dispers": 389, "displai": [470, 480, 492], "distanc": [21, 129, 390, 476], "distance_sum": 476, "distribu": 492, "distribut": [2, 282, 351, 352, 354, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 377, 378, 379, 380, 381, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 445, 461, 463, 467, 471, 472, 478, 479, 480, 481, 483, 485, 492], "disturb": 369, "dive": 479, "divid": [3, 8, 36, 84, 136, 407, 417, 448, 476, 479], "divis": [81, 121, 124, 192, 398, 417, 440], "divisor": [128, 445], "divmod": [3, 8, 219], "dn": [373, 375], "do": [61, 80, 185, 189, 203, 295, 322, 468, 476, 483, 485, 486, 491, 492, 493], "doc": [12, 13, 22, 23, 24, 25, 26, 27, 28, 44, 45, 46, 52, 53, 55, 59, 60, 63, 65, 66, 71, 72, 81, 89, 90, 91, 93, 96, 119, 120, 121, 122, 123, 124, 125, 128, 130, 131, 137, 142, 146, 147, 148, 156, 157, 158, 159, 160, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 187, 191, 192, 193, 195, 331, 332, 334, 342, 343, 349, 350, 397, 398, 401, 402, 411, 412, 413, 414, 418, 419, 422, 427, 428, 440, 441, 474, 480, 482, 493], "docstr": 491, "doctor": [452, 491], "doctor_filenam": 452, "doctor_format": 452, "doctorformat": 463, "document": [36, 74, 83, 135, 265, 266, 267, 268, 269, 270, 273, 274, 275, 276, 277, 283, 284, 298, 299, 300, 303, 304, 305, 306, 307, 309, 315, 316, 318, 319, 320, 325, 327, 328, 437, 447, 467, 480, 482, 483, 491, 492], "doe": [14, 16, 17, 19, 21, 36, 73, 80, 113, 162, 163, 164, 165, 170, 172, 174, 188, 196, 199, 200, 201, 204, 206, 271, 289, 295, 301, 326, 329, 344, 355, 417, 423, 425, 446, 467, 474, 485, 488, 491, 492], "doesn": [80, 116, 117, 118, 345, 485, 491], "dollar": 492, "domain": [42, 468, 473, 479], "don": [289, 470, 476, 491, 492], "done": [64, 85, 163, 165, 186, 271, 292, 312, 338, 443, 491], "dot": [0, 3, 8, 168, 186, 429, 446, 472, 476, 477, 488, 492], "dot_product": 492, "doubl": [3, 8, 41, 362, 479], "down": [118, 491, 492], "download": [468, 482, 492], "dr": 479, "draft": 467, "draw": [351, 352, 354, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 380, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392], "drawn": [2, 351, 352, 354, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 374, 377, 378, 379, 380, 381, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 409], "driver": [470, 484, 492], "drop": [472, 480, 481, 492], "dry": 470, "dsplit": [0, 3, 8, 84], "dst": 64, "dstack": [0, 3, 8], "dt": [351, 471], "dtype": [3, 4, 8, 12, 13, 14, 16, 17, 18, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 34, 35, 37, 41, 44, 45, 46, 52, 53, 54, 58, 59, 60, 63, 65, 66, 68, 69, 70, 71, 72, 79, 80, 81, 82, 85, 87, 88, 89, 90, 91, 93, 95, 96, 114, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 130, 131, 137, 138, 140, 141, 142, 146, 147, 148, 156, 157, 158, 159, 160, 162, 164, 168, 173, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 186, 187, 188, 191, 192, 193, 195, 196, 197, 198, 199, 200, 201, 202, 206, 208, 213, 260, 271, 280, 281, 293, 299, 305, 311, 317, 318, 325, 328, 329, 331, 332, 334, 335, 336, 337, 339, 342, 343, 344, 349, 350, 374, 379, 381, 397, 398, 401, 402, 411, 412, 413, 414, 415, 418, 419, 422, 423, 425, 427, 428, 429, 431, 433, 440, 441, 445, 446, 450, 451, 472, 476, 489], "dtypelik": [4, 58, 95, 126, 127, 138, 140, 173, 311, 329, 335, 336, 379, 381, 433, 451], "due": [388, 485], "dump": [0, 8, 463], "dump_data": 486, "duplic": [346, 485, 492], "dure": [463, 468, 480, 492], "dx": 129, "dy": 129, "dynam": 479, "dz": 129, "e": [14, 19, 43, 54, 78, 80, 82, 98, 101, 102, 103, 104, 107, 109, 129, 140, 141, 171, 186, 314, 322, 329, 351, 352, 354, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 374, 377, 378, 379, 380, 381, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 429, 431, 446, 463, 467, 468, 471, 485, 489, 491, 492, 493], "each": [2, 38, 39, 40, 41, 43, 49, 50, 54, 57, 68, 75, 80, 86, 98, 99, 103, 104, 109, 112, 117, 118, 129, 134, 154, 162, 163, 164, 165, 166, 194, 196, 317, 322, 333, 346, 347, 352, 354, 361, 366, 369, 399, 403, 421, 426, 430, 435, 436, 438, 439, 442, 443, 444, 468, 473, 474, 476, 477, 479, 480, 491, 492], "eager": [4, 463, 470, 480, 492], "eagerli": 477, "earli": 492, "earlier": 476, "eas": [376, 492], "easi": [467, 492], "easier": [279, 425, 492], "easiest": [467, 468], "east": [478, 492], "economist": 492, "ed": [356, 369, 474], "edg": [55, 80, 134, 475], "edge_ord": 129, "edgecolor": 476, "ediff1d": [3, 8], "edit": [468, 492], "effect": [86, 190, 326, 382, 443, 478, 492], "effici": [97, 110, 471, 479, 492], "effort": [467, 479], "effortlessli": 479, "eig": [0, 3, 8], "eigenvalu": [162, 163, 164, 165, 404], "eigenvector": [162, 163], "eigh": [0, 3, 8], "eight": [169, 443], "eigval": [0, 3, 8], "eigvalsh": [0, 3, 8], "einstein": 85, "einsum": [0, 8, 86, 470], "einsum_path": [0, 3, 8, 85], "either": [35, 41, 61, 82, 129, 169, 186, 206, 213, 310, 408, 443, 471, 472, 473, 478, 480, 492], "elaps": [470, 471, 472, 478, 482, 486, 492], "elapsed_millisec": 486, "elapsed_tim": 492, "element": [12, 13, 14, 15, 16, 17, 19, 21, 22, 23, 24, 25, 26, 27, 28, 33, 35, 41, 43, 44, 45, 46, 48, 49, 51, 52, 53, 54, 55, 59, 60, 61, 63, 64, 65, 66, 68, 69, 70, 73, 78, 79, 81, 89, 90, 93, 94, 95, 96, 98, 103, 109, 112, 115, 116, 117, 118, 119, 120, 122, 123, 124, 125, 130, 131, 134, 138, 139, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 153, 157, 159, 160, 161, 167, 175, 176, 177, 181, 182, 183, 184, 186, 187, 188, 189, 190, 191, 192, 193, 195, 199, 200, 201, 202, 203, 204, 206, 208, 260, 265, 266, 271, 276, 277, 285, 288, 289, 291, 292, 295, 297, 299, 301, 303, 305, 306, 310, 314, 317, 318, 320, 323, 327, 328, 331, 332, 333, 334, 338, 341, 342, 343, 344, 345, 347, 393, 395, 396, 397, 398, 399, 400, 402, 403, 405, 408, 409, 410, 411, 412, 413, 414, 418, 419, 422, 423, 425, 427, 428, 429, 431, 434, 437, 440, 441, 442, 443, 444, 445, 449, 459, 461, 473, 476, 492], "elementwis": 461, "elimin": 479, "els": [477, 491, 492], "elsewher": [12, 13, 22, 23, 24, 25, 26, 27, 28, 44, 45, 46, 52, 53, 59, 60, 63, 65, 66, 71, 72, 81, 89, 90, 91, 93, 95, 96, 119, 120, 121, 122, 123, 124, 125, 128, 130, 131, 137, 142, 146, 147, 148, 156, 157, 158, 159, 160, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 187, 191, 192, 193, 195, 331, 332, 334, 342, 343, 349, 350, 356, 397, 398, 401, 402, 411, 412, 413, 414, 418, 419, 422, 427, 428, 433, 440, 441, 449], "email": 467, "emerg": 492, "emit": 463, "emploi": 467, "empti": [0, 3, 8, 16, 17, 42, 47, 48, 132, 133, 155, 197, 198, 199, 200, 201, 204, 206, 208, 322, 341, 417], "empty_lik": [0, 3, 8], "en": [356, 467], "enabl": [463, 468, 470, 479, 480, 491, 492], "encapsul": 6, "encount": [199, 200, 201, 204, 409, 467, 480, 491, 492], "encumbr": 467, "end": [20, 21, 42, 78, 80, 86, 173, 338, 443, 467, 473, 477, 478, 486, 492], "end_tim": 492, "endian": 322, "endors": 483, "endpoint": [173, 473], "energi": 492, "enhanc": [467, 479, 492], "enough": [166, 468, 486, 491], "ensur": [433, 467, 479, 486, 491, 492], "enter": 470, "entir": [282, 443, 492], "entri": [57, 73, 87, 94, 113, 116, 117, 118, 289, 292, 322, 345, 346, 417, 420], "entropi": [1, 355], "env": [463, 468], "environ": [197, 198, 201, 204, 463, 468, 479, 480, 482, 484, 488, 491, 492], "ep": 396, "epsilon": 396, "epyc": 492, "eq": 471, "eqn": 473, "eqnarrai": 492, "equal": [0, 3, 8, 12, 13, 15, 22, 23, 24, 25, 26, 27, 28, 35, 36, 41, 42, 43, 44, 45, 46, 48, 52, 53, 59, 60, 63, 65, 66, 71, 72, 78, 81, 83, 90, 91, 93, 95, 96, 119, 120, 121, 122, 123, 124, 125, 128, 129, 130, 131, 134, 137, 142, 143, 145, 146, 147, 148, 152, 156, 157, 158, 159, 160, 173, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 187, 191, 192, 193, 195, 314, 331, 332, 334, 342, 343, 349, 350, 352, 358, 361, 366, 380, 388, 390, 396, 397, 398, 401, 402, 411, 412, 413, 414, 417, 418, 419, 422, 427, 428, 433, 435, 438, 440, 441], "equal_nan": [15, 35, 143], "equat": [15, 143, 171, 388, 461, 473, 477, 479, 492], "equiv": [58, 64, 85, 186, 271], "equival": [21, 41, 57, 80, 82, 83, 84, 86, 115, 121, 135, 136, 143, 154, 217, 265, 266, 267, 268, 269, 270, 273, 274, 275, 276, 277, 283, 284, 298, 299, 300, 303, 304, 305, 306, 307, 309, 313, 315, 316, 318, 319, 320, 322, 325, 326, 327, 328, 329, 330, 407, 425, 447, 448, 491], "erf": 471, "error": [189, 203, 345, 417, 420, 425, 473, 476, 479, 485, 492], "errstat": [3, 8], "especi": 491, "essenti": [491, 492], "estim": [61, 68, 205, 207, 340, 348, 492], "etc": [34, 98, 99, 103, 104, 109, 112, 279, 289, 463, 479, 485, 491, 493], "european": 471, "evalu": [14, 19, 57, 85, 86, 145, 152, 168, 190, 265, 266, 409, 485, 491], "even": [68, 100, 102, 105, 110, 145, 152, 162, 164, 289, 404, 467, 470, 483], "evenli": [21, 173, 406], "event": [371, 483], "everi": [61, 109, 467, 471, 476, 491], "every_nit": 491, "everyon": 467, "evid": 492, "evolv": 467, "exact": [82, 141, 171, 429, 446, 473], "exactli": [324, 467, 472, 477, 488, 492], "examin": 68, "exampl": [40, 55, 69, 70, 79, 80, 199, 200, 317, 326, 359, 369, 417, 421, 467, 468, 470, 473, 474, 476, 477, 479, 480, 481, 482, 484, 486, 489, 490, 491, 493], "exce": [417, 443, 463], "exceed": 479, "except": [14, 16, 17, 19, 21, 34, 42, 54, 58, 79, 82, 95, 109, 136, 188, 201, 204, 206, 289, 295, 312, 344, 393, 399, 423, 426, 429, 471, 472, 478, 483], "exchang": 479, "exclud": [20, 21, 173, 388, 486], "exclus": 374, "execut": [463, 468, 470, 471, 472, 477, 478, 486, 488, 489, 490, 491, 492], "exemplari": 483, "exercis": [467, 492], "exhibit": 321, "exist": [58, 92, 174, 461, 468, 482, 489, 492], "exit": 470, "exp": [0, 3, 8, 93, 166, 356, 471], "exp2": [0, 3, 8], "exp_rt": 471, "expand": [79, 92], "expand_dim": [0, 3, 8], "expans": 471, "expect": [14, 16, 17, 19, 69, 70, 107, 141, 185, 188, 189, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 337, 340, 344, 348, 371, 406, 423, 429, 445, 446, 467, 480], "expens": 322, "experi": [359, 492], "experiment": 482, "expertis": 479, "expir": [471, 492], "explain": [99, 104, 109, 112], "explan": [70, 199, 200, 317, 467], "explicit": [85, 166, 479, 491, 492], "explicitli": [134, 140, 174, 467, 473, 480, 492], "explor": 86, "expm1": [0, 3, 8], "expon": [125, 167, 372, 461], "exponenti": [0, 3, 8, 86, 90, 166, 179, 180, 362, 384], "exponential_distribut": 356, "expos": [2, 34, 289, 312], "expr": [85, 86], "express": [85, 86, 190, 471, 472, 473, 478, 483, 485], "extend": [473, 479, 485], "extra": 492, "extract": [0, 3, 8, 57, 74, 341, 425], "extrema": 461, "ey": [0, 3, 8, 472, 489], "f": [0, 3, 8, 34, 117, 129, 169, 205, 207, 271, 289, 291, 321, 340, 348, 351, 356, 359, 368, 393, 400, 444, 471, 472, 473, 477, 478, 492], "f_": [473, 477], "f_contigu": 289, "f_interior": 473, "fa": 289, "fab": [0, 3, 8], "facilit": 489, "factor": [97, 98, 99, 101, 102, 103, 104, 106, 107, 108, 109, 110, 111, 112, 161, 170, 472, 492], "fail": [161, 170, 480, 491], "failur": [359, 366, 470], "fall": [31, 80, 153, 339, 463, 471, 477, 480, 488], "fallback": 485, "fallback_stacktrac": 452, "fals": [1, 12, 13, 14, 15, 16, 17, 18, 19, 22, 23, 24, 25, 26, 27, 28, 29, 30, 34, 35, 36, 41, 44, 45, 46, 49, 51, 52, 53, 57, 59, 60, 63, 65, 66, 68, 71, 72, 79, 80, 81, 85, 86, 89, 90, 91, 93, 96, 113, 119, 120, 121, 122, 123, 124, 125, 128, 130, 131, 134, 137, 140, 142, 143, 146, 147, 148, 149, 150, 152, 153, 156, 157, 158, 159, 160, 169, 172, 173, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 187, 188, 189, 190, 191, 192, 193, 195, 196, 197, 198, 201, 202, 203, 204, 205, 206, 207, 208, 265, 266, 271, 289, 298, 299, 300, 305, 318, 328, 331, 332, 334, 340, 342, 343, 344, 348, 349, 350, 397, 398, 401, 402, 409, 411, 412, 413, 414, 418, 419, 422, 423, 427, 428, 440, 441, 442, 445, 463, 473, 477], "familiar": [481, 492], "fan": [205, 207, 340, 348], "fanci": 425, "farrai": 289, "fashion": 85, "fast": [97, 98, 99, 103, 104, 109, 110, 112], "fast_math": 452, "faster": [61, 80, 492], "fastest": [168, 393, 400], "fatter": 362, "fbmem": [470, 492], "featur": [467, 470, 492], "feedback": 467, "feel": 467, "fetch": 491, "few": [486, 491], "fewer": 480, "fft": [0, 3, 8, 61, 452, 461], "fft2": [0, 3, 8, 103], "fftfreq": [3, 8], "fftn": [0, 3, 8, 97, 104], "fftshift": [0, 3, 8, 105], "fid": 322, "fidel": 479, "field": [190, 295, 443], "fig": [474, 492], "figsiz": [474, 492], "file": [174, 286, 317, 322, 461, 463, 467, 468, 470, 471, 472, 478, 483, 488, 492], "filenam": [322, 463], "fileno": 322, "fill": [0, 2, 8, 113, 126, 127, 190, 196, 335, 370, 375, 433, 450], "fill_diagon": [0, 3, 8], "fill_valu": [126, 127], "final": [109, 112, 479, 481, 492], "find": [33, 310, 327, 408, 442, 461, 476, 477, 480, 482, 491, 492], "find_centroid": 476, "find_cupynumeric_cpp": 468, "finfo": [3, 8, 396], "finish": [470, 471, 472, 478], "finit": [143, 146, 196, 475], "first": [14, 19, 41, 42, 47, 49, 54, 56, 58, 61, 64, 78, 79, 82, 84, 86, 103, 104, 116, 119, 129, 134, 136, 168, 186, 189, 190, 203, 205, 207, 208, 292, 310, 322, 337, 340, 341, 343, 344, 345, 348, 369, 390, 393, 400, 403, 405, 407, 408, 409, 416, 421, 423, 424, 426, 429, 431, 442, 446, 447, 448, 467, 468, 473, 478, 491, 492], "first_cond": 491, "fisher": [357, 368, 492], "fit": [399, 483], "five": 480, "fix": [3, 8, 297, 314, 371, 471], "flag": [166, 312, 463, 468], "flat": [291, 295, 307, 347, 399, 444, 485], "flatit": [3, 8, 290], "flatnonzero": [0, 3, 8], "flatten": [0, 3, 8, 16, 17, 20, 29, 30, 31, 32, 57, 58, 67, 69, 70, 73, 77, 113, 115, 134, 188, 189, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 290, 307, 337, 338, 339, 340, 345, 346, 348, 393, 399, 403, 415, 425, 426, 442, 443, 444, 445, 446], "flexibl": [3, 8, 85, 297], "flip": [0, 3, 8, 117, 118, 359, 405, 485, 491], "fliplr": [0, 3, 8, 405], "flipud": [0, 3, 8, 405], "float": [14, 15, 16, 17, 19, 21, 43, 55, 69, 70, 82, 85, 87, 119, 127, 134, 138, 139, 143, 155, 167, 169, 173, 186, 188, 189, 196, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 221, 298, 300, 305, 318, 332, 340, 344, 348, 351, 352, 354, 356, 357, 358, 359, 360, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 375, 376, 378, 379, 380, 381, 384, 385, 386, 387, 388, 389, 390, 391, 392, 395, 396, 406, 408, 423, 429, 433, 445, 450, 459, 461, 463, 485], "float128": [3, 8, 485], "float16": [3, 8, 119], "float32": [3, 8, 64, 69, 85, 119, 186, 271, 329, 489], "float64": [3, 4, 8, 18, 41, 64, 68, 85, 87, 95, 119, 186, 188, 189, 202, 203, 205, 207, 271, 335, 340, 348, 379, 381, 445, 450, 472, 485], "float_pow": [0, 3, 8], "flood": 479, "floor": [0, 3, 8], "floor_divid": [0, 3, 8], "flop": 472, "flow": 479, "fluid": 479, "fmax": [3, 8, 201], "fmin": [3, 8], "fmod": [0, 3, 8], "fnc": 289, "focu": [479, 492], "follow": [15, 18, 34, 41, 54, 61, 80, 107, 114, 143, 163, 165, 169, 186, 190, 205, 207, 260, 340, 348, 463, 468, 473, 474, 476, 477, 479, 480, 482, 483, 484, 491, 492], "forc": [34, 85, 186, 271, 289, 463, 482], "force_thunk": [4, 452], "forcebuild": 1, "foremost": 492, "forg": [468, 482, 492], "fork": 467, "form": [37, 47, 56, 68, 78, 84, 85, 107, 132, 133, 136, 154, 155, 407, 448, 473, 483, 491, 492], "format": [322, 463, 469, 480, 492], "format_float_posit": [3, 8], "format_float_scientif": [3, 8], "former": [346, 426], "formula": [471, 492], "forset": 313, "fortran": [34, 271, 289, 291, 321, 393, 400, 444, 468], "fortun": 467, "forum": 480, "forumula": 492, "forward": [97, 98, 99, 101, 102, 103, 104, 106, 107, 108, 109, 110, 111, 112, 129, 376], "found": [43, 310, 317, 408, 479, 492], "foundat": [467, 480], "four": [312, 470, 492], "fourier": [61, 97, 98, 99, 102, 103, 104, 107, 109, 110, 112, 452, 461], "frac": [351, 356, 471, 477], "frac12": 471, "fraction": 193, "frame": [467, 488], "framebuff": [470, 480, 492], "framework": [467, 481], "free": [467, 471, 479, 480, 483, 492], "freed": 479, "freedom": [354, 357, 367, 368, 386, 445], "frequenc": [42, 68, 100, 102, 103, 104, 107, 392, 491], "frequent": 481, "fresh": [1, 355], "freshli": [12, 13, 22, 23, 24, 25, 26, 27, 28, 44, 45, 46, 52, 53, 59, 60, 63, 65, 66, 71, 72, 81, 89, 90, 91, 93, 96, 119, 120, 121, 122, 123, 124, 125, 128, 130, 131, 137, 142, 146, 147, 148, 149, 150, 156, 157, 158, 159, 160, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 187, 191, 192, 193, 195, 331, 332, 334, 342, 343, 349, 350, 397, 398, 401, 402, 411, 412, 413, 414, 418, 419, 422, 427, 428, 440, 441], "frexp": [0, 3, 8], "fro": 169, "frobeniu": 169, "frohn": 483, "from": [1, 2, 14, 18, 19, 21, 29, 30, 37, 41, 48, 54, 57, 61, 64, 69, 70, 71, 72, 78, 94, 102, 112, 114, 116, 117, 118, 119, 129, 141, 154, 170, 173, 174, 186, 190, 199, 200, 208, 213, 272, 273, 289, 292, 316, 320, 337, 343, 344, 347, 349, 350, 351, 352, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 377, 378, 379, 380, 381, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 396, 400, 405, 409, 420, 423, 425, 426, 429, 431, 442, 443, 446, 449, 461, 467, 469, 471, 472, 473, 474, 476, 477, 478, 479, 481, 483, 485, 486, 491, 492], "frombuff": 3, "fromfil": [3, 322], "fromfunct": [3, 8], "fromit": 3, "frompyfunc": 3, "fromregex": [3, 8], "fromstr": 3, "front": [140, 463], "fulfil": [387, 463], "full": [0, 3, 8, 61, 76, 127, 171, 265, 266, 267, 269, 270, 273, 274, 275, 276, 277, 283, 284, 298, 299, 300, 303, 304, 305, 306, 307, 309, 312, 315, 316, 318, 319, 320, 325, 327, 328, 338, 436, 439, 463, 467, 470, 479, 488, 492], "full_lik": [0, 3, 8], "full_matric": 172, "fulli": [189, 190, 203], "func": 471, "function": [2, 8, 18, 21, 36, 64, 74, 84, 97, 98, 99, 100, 102, 103, 104, 105, 107, 109, 110, 112, 113, 119, 121, 129, 134, 136, 153, 154, 155, 168, 169, 185, 190, 205, 207, 265, 266, 267, 268, 269, 270, 273, 274, 275, 276, 277, 283, 284, 289, 295, 298, 299, 300, 303, 304, 305, 306, 307, 309, 312, 313, 315, 316, 318, 319, 320, 322, 323, 325, 326, 327, 328, 340, 346, 348, 351, 355, 356, 359, 369, 372, 377, 382, 404, 407, 425, 426, 430, 446, 448, 452, 459, 461, 471, 472, 473, 477, 478, 479, 480, 485, 488, 489, 492], "function_nam": 488, "function_valu": 473, "fundament": 492, "funtion": 489, "furnish": 483, "further": [85, 205, 207, 314, 340, 348, 437, 467, 479], "furthermor": [49, 51, 190], "futur": 471, "fweight": 68, "g": [14, 19, 82, 84, 136, 141, 169, 186, 322, 329, 351, 352, 354, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 374, 377, 378, 379, 380, 381, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 407, 429, 446, 448, 467, 468, 478, 485, 489, 491, 492, 493], "gamma": [0, 3, 8, 351, 385], "gasnet": 492, "gather": 492, "gauss": 369, "gaussian": [362, 369, 375, 390], "gb": 492, "gcd": [0, 3, 8], "gemm": 476, "gener": [1, 3, 8, 21, 41, 42, 84, 102, 136, 173, 289, 355, 367, 370, 375, 380, 382, 388, 407, 448, 461, 468, 473, 476, 478, 480, 485, 486, 488, 490, 492], "genfromtxt": [3, 8], "geometr": [0, 3, 8, 356], "geomspac": [3, 8], "get": [101, 107, 109, 113, 173, 278, 317, 386, 468, 470, 471, 472, 473, 476, 477, 478, 480, 491], "get_bit_gener": [3, 8], "get_includ": [3, 8], "get_printopt": [3, 8], "get_rank": 479, "get_siz": 479, "get_stat": [3, 8], "getbufs": [3, 8], "getdevicecount": 479, "geterr": [3, 8], "geterrcal": [3, 8], "getfield": [0, 8], "getter": 313, "git": 467, "github": [467, 479, 492], "give": [43, 77, 85, 186, 190, 326, 347, 400, 410, 442, 467, 480], "given": [14, 15, 16, 17, 19, 20, 21, 31, 34, 35, 41, 48, 51, 54, 55, 56, 57, 62, 67, 68, 69, 70, 78, 79, 82, 84, 86, 87, 88, 97, 98, 99, 101, 102, 103, 104, 106, 107, 109, 110, 112, 113, 116, 126, 127, 129, 134, 136, 137, 141, 143, 169, 173, 185, 186, 189, 190, 199, 200, 203, 204, 205, 206, 207, 208, 213, 267, 268, 271, 274, 275, 289, 292, 298, 299, 300, 305, 306, 310, 318, 326, 328, 335, 336, 337, 340, 344, 345, 348, 351, 352, 354, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 377, 378, 379, 380, 381, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 399, 403, 404, 405, 406, 407, 408, 417, 423, 425, 429, 430, 431, 432, 433, 442, 446, 448, 450, 451, 467, 479, 491, 492], "global": [355, 479], "gmail": 483, "gninja": 468, "gnx": 479, "gny": 479, "go": [426, 492], "goal": 492, "golub": 169, "good": [185, 322, 361, 481, 483], "gop": 472, "govern": [471, 472, 478, 492], "gpu": [1, 2, 3, 8, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 210, 211, 212, 216, 217, 218, 219, 220, 222, 223, 225, 226, 227, 228, 229, 230, 231, 232, 235, 236, 237, 238, 239, 240, 241, 242, 244, 245, 246, 247, 248, 249, 250, 252, 253, 254, 256, 257, 258, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 273, 274, 275, 276, 277, 278, 283, 284, 287, 288, 291, 292, 295, 298, 299, 300, 303, 304, 305, 306, 307, 309, 310, 312, 315, 316, 318, 319, 320, 321, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 463, 470, 477, 479, 481, 491, 493], "grad_i": [474, 492], "grad_x": [474, 492], "gradient": [0, 3, 8, 474], "grai": [474, 476, 492], "grant": 483, "granular": [480, 486], "grasmair": 477, "grate": 467, "grayscal": [474, 492], "greater": [0, 3, 8, 21, 54, 83, 357, 370, 388, 392, 420], "greater_equ": [0, 3, 8], "greatest": [48, 128], "greedi": [85, 86], "green": [473, 476], "grep": 480, "grid": [140, 190, 473, 478, 479, 492], "group": [33, 468, 492], "gt": 473, "guarante": [345, 400], "guess": 477, "guid": [317, 481], "guidelin": 490, "gumbel": [0, 3, 8], "gzipfil": 322, "h": [161, 169, 205, 207, 340, 348, 473, 479, 491, 492], "h5py": 491, "ha": [6, 29, 30, 31, 32, 57, 68, 69, 70, 78, 80, 101, 106, 129, 139, 144, 145, 151, 152, 197, 198, 199, 200, 206, 208, 279, 289, 326, 338, 344, 347, 351, 362, 370, 377, 389, 395, 396, 399, 409, 421, 423, 425, 430, 431, 444, 463, 467, 471, 472, 476, 477, 479, 480, 483, 492], "had": [346, 426, 493], "hadamard": 86, "half": [3, 8, 21, 100, 103, 104, 173, 374, 376, 378, 379, 381, 388], "halo": 479, "ham": [0, 3, 8], "han": [0, 3, 8], "hand": 473, "handl": [442, 446, 461, 463, 479, 485, 488, 492], "happen": [41, 467, 485], "har": 492, "hardwar": [289, 312, 490, 493], "have": [12, 13, 14, 19, 22, 23, 24, 25, 26, 27, 28, 33, 34, 35, 39, 40, 41, 44, 45, 46, 47, 52, 53, 54, 56, 58, 59, 60, 63, 65, 66, 68, 69, 70, 71, 72, 81, 82, 84, 85, 89, 90, 91, 93, 96, 103, 104, 112, 119, 120, 121, 122, 123, 124, 125, 128, 130, 131, 136, 137, 141, 142, 146, 147, 148, 149, 150, 156, 157, 158, 159, 160, 168, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 195, 199, 200, 202, 203, 205, 206, 207, 208, 317, 329, 331, 332, 334, 340, 341, 342, 343, 344, 346, 348, 349, 350, 396, 397, 398, 401, 402, 406, 407, 411, 412, 413, 414, 418, 419, 421, 422, 423, 427, 428, 429, 430, 440, 441, 445, 446, 448, 459, 467, 468, 470, 471, 473, 474, 476, 477, 481, 488, 491, 492], "hazen": [205, 207, 340, 348], "header": [174, 468], "heapsort": [32, 415], "heat": 492, "heavisid": [3, 8], "height": [84, 136, 407, 448, 479, 492], "help": [467, 470, 474, 480, 489, 492], "helper": [461, 472, 478], "henc": 129, "here": [8, 107, 391, 467, 468, 473, 479, 486, 489, 491, 492], "herebi": 483, "herein": 483, "hermitian": [101, 106, 107, 161, 163, 165, 172, 461, 472], "hfft": [0, 3, 8], "high": [374, 377, 388, 468, 479, 492], "higher": [38, 79, 141, 205, 207, 289, 340, 348, 492], "highest": [374, 377], "highli": 491, "highlight": [479, 491, 492], "hipr2": 474, "hist": 134, "histogram": [0, 3, 8, 461], "histogram2d": [3, 8], "histogram_bin_edg": [3, 8], "histogramdd": [3, 8], "hold": [34, 55, 57, 69, 70, 169, 189, 199, 200, 203, 206, 208, 289, 431, 479], "holder": 483, "home": 471, "homepag": 474, "hope": 467, "hopkin": 169, "horizont": [135, 136, 405], "host": 185, "hous": 474, "how": [54, 312, 317, 326, 345, 425, 468, 469, 472, 473, 477, 486, 492], "howev": [14, 16, 17, 19, 69, 166, 188, 201, 204, 206, 289, 344, 423, 425, 467, 483, 492], "howto": 490, "hpc": [479, 490], "hsplit": [0, 3, 8, 136], "hstack": [0, 3, 8, 56, 491], "htm": 474, "html": [474, 480, 483, 493], "http": [356, 467, 471, 472, 474, 478, 480, 483, 485, 492, 493], "hull": 471, "hundr": [479, 491], "hyndman": [205, 207, 340, 348], "hyperbol": [23, 25, 28, 66, 386, 414, 428, 461], "hypergeometr": [0, 3, 8], "hypot": [0, 3, 8], "hypotenus": 137, "hypothesi": 354, "i": [2, 8, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 41, 42, 43, 44, 45, 46, 47, 48, 49, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 106, 107, 108, 109, 110, 111, 112, 113, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 173, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 213, 217, 218, 260, 271, 272, 289, 291, 292, 295, 297, 310, 312, 314, 317, 321, 322, 323, 326, 329, 330, 331, 332, 334, 335, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 411, 412, 413, 414, 415, 417, 418, 419, 420, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 438, 440, 441, 442, 443, 445, 446, 447, 448, 449, 450, 463, 468, 470, 471, 472, 473, 474, 476, 477, 478, 479, 481, 482, 483, 484, 485, 486, 488, 489, 492, 493], "i0": [3, 8, 140], "i1": 140, "i16_arr": 79, "iN": 140, "idea": 467, "ident": [0, 3, 8, 105, 113, 167, 171, 197, 198, 201, 204, 362, 384, 472], "identifi": 474, "identit": 472, "idiomat": 480, "idx": 476, "ieee": 463, "ifft": [0, 3, 8, 103, 104], "ifft2": [0, 3, 8], "ifftn": [0, 3, 8, 102, 109], "ifftshift": [0, 3, 8], "ignor": [49, 51, 134, 197, 198, 201, 202, 203, 204, 205, 207, 485], "ihfft": [0, 3, 8], "ii": [68, 370], "iinfo": [3, 8], "ij": [68, 190], "ik": 140, "illeg": 48, "illustr": [190, 468, 491, 492], "imag": [0, 3, 8, 396, 474, 478, 492], "image_np": 492, "imagin": 317, "imaginari": [18, 35, 139, 144, 145, 152, 162, 163, 164, 165, 196, 294, 396, 406, 416], "imbal": 492, "immedi": 472, "impact": 491, "imper": 492, "implement": [8, 14, 16, 17, 19, 29, 30, 31, 61, 69, 70, 78, 82, 116, 117, 118, 141, 161, 166, 186, 188, 199, 200, 201, 204, 206, 339, 344, 423, 429, 446, 468, 471, 472, 479, 480, 483, 485, 488, 491, 492], "impli": [68, 338, 443, 471, 472, 478, 483], "implic": 477, "implicit": [85, 166], "implment": 488, "import": [68, 186, 471, 472, 473, 474, 476, 477, 478, 479, 486, 489, 491, 492, 493], "importantli": 80, "improp": 492, "improv": 492, "imshow": [474, 492], "in1d": [3, 8], "inappropri": 354, "incident": 483, "includ": [21, 37, 80, 85, 134, 173, 188, 202, 206, 208, 301, 344, 388, 391, 423, 445, 463, 467, 468, 470, 473, 479, 483, 485, 488, 491], "inclus": [205, 207, 340, 348, 374, 377], "incorpor": 483, "incorrect": 479, "increas": [80, 92, 102, 107, 134, 473, 480, 492], "incur": 491, "ind": [80, 435, 436, 438, 439], "indefinit": 467, "independ": [322, 354, 362, 369, 468, 492], "index": [6, 29, 30, 31, 32, 43, 54, 57, 78, 80, 95, 98, 103, 140, 154, 186, 190, 197, 198, 273, 295, 310, 339, 345, 346, 393, 400, 408, 415, 417, 421, 425, 426, 442, 444, 452, 459, 461, 473, 476, 481, 490], "index_arrai": [29, 30, 32, 33, 197, 198], "indexerror": 80, "indic": [0, 3, 8, 29, 30, 31, 32, 33, 36, 54, 61, 68, 73, 75, 76, 80, 83, 85, 86, 94, 97, 98, 99, 101, 102, 103, 104, 106, 107, 108, 109, 110, 111, 112, 113, 115, 135, 185, 197, 198, 267, 268, 269, 270, 303, 306, 310, 320, 326, 333, 345, 346, 408, 411, 417, 425, 426, 435, 436, 438, 439, 442, 444, 447, 467, 473, 476, 477, 480, 483, 485, 491, 492], "indices_or_sect": [36, 417], "indirect": [31, 483], "individu": [359, 488], "ineffici": 463, "inexact": [3, 8, 119, 196, 206], "inf": [15, 69, 70, 169, 197, 198, 199, 200, 474, 485], "infer": [21, 37, 173, 351, 400], "infin": [146, 147, 149, 150, 196, 390], "infinit": 169, "influenc": 369, "info": [3, 8], "inform": [85, 289, 295, 312, 322, 467, 472, 473, 474, 477, 480, 482, 488, 492, 493], "infti": 471, "inher": 492, "inherit": 289, "init": [382, 476, 486, 492], "initi": [1, 16, 17, 87, 201, 204, 206, 208, 265, 266, 298, 300, 305, 318, 344, 355, 423, 463, 473, 476, 477, 479, 486], "inner": [0, 3, 8, 82, 86, 429], "innermost": 48, "input": [4, 6, 12, 13, 14, 15, 16, 17, 19, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 37, 38, 39, 40, 41, 43, 44, 45, 46, 48, 50, 52, 53, 55, 58, 59, 60, 61, 62, 63, 65, 66, 69, 70, 71, 72, 73, 77, 79, 80, 81, 85, 86, 89, 90, 91, 92, 93, 94, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 128, 129, 130, 131, 134, 137, 139, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 156, 157, 158, 159, 160, 161, 166, 169, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 271, 291, 292, 329, 330, 331, 332, 333, 334, 337, 338, 339, 340, 341, 342, 343, 344, 346, 347, 348, 349, 350, 352, 393, 395, 396, 397, 398, 399, 401, 402, 403, 406, 408, 410, 411, 412, 413, 414, 415, 416, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 434, 440, 441, 442, 443, 445, 446, 452, 461, 471, 474, 480, 489, 491, 492], "insert": [3, 8, 29, 30, 48, 54, 78, 92, 173, 197, 198, 310, 338, 346, 408, 409, 461, 492], "insid": 491, "instal": [467, 468, 470, 481, 490], "instanc": [48, 84, 101, 136, 314, 355, 407, 448, 468, 482, 492], "instanti": [2, 355, 468], "instead": [14, 16, 17, 19, 41, 43, 48, 134, 140, 186, 188, 189, 201, 202, 203, 205, 207, 208, 271, 295, 340, 344, 348, 377, 423, 445, 471, 472, 473, 474, 478, 479, 480, 489, 490, 492], "instruct": [467, 468, 482, 492], "int": [1, 4, 6, 14, 16, 17, 19, 20, 21, 29, 30, 31, 32, 34, 36, 41, 42, 43, 47, 50, 51, 54, 55, 57, 58, 67, 68, 69, 70, 73, 74, 75, 77, 78, 79, 80, 83, 86, 87, 88, 92, 95, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 116, 126, 127, 129, 132, 133, 134, 135, 138, 140, 155, 167, 169, 173, 174, 185, 188, 189, 194, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 233, 234, 260, 292, 293, 297, 298, 300, 301, 302, 305, 310, 311, 313, 314, 317, 318, 326, 330, 335, 336, 338, 339, 340, 344, 346, 348, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 399, 400, 403, 405, 406, 408, 410, 415, 417, 420, 421, 423, 424, 425, 426, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 442, 443, 444, 445, 447, 450, 451, 459, 463, 473, 474, 476, 492], "int16": [3, 8, 79, 329], "int32": [3, 8, 206, 317], "int32_t": 468, "int64": [3, 8, 206], "int64_t": 468, "int8": [3, 8], "int_": [3, 8, 314, 377, 430, 471], "int_0": 351, "int_lik": 375, "int_typ": 295, "intc": [3, 8], "integ": [2, 3, 8, 21, 36, 51, 54, 68, 69, 70, 79, 119, 121, 154, 158, 167, 169, 188, 189, 199, 200, 202, 203, 205, 206, 207, 208, 310, 314, 317, 338, 340, 344, 345, 348, 352, 359, 374, 377, 400, 401, 402, 405, 408, 417, 423, 431, 442, 444, 445], "integer_lik": 429, "integr": [41, 134, 193, 470, 479, 492], "intel": 492, "intellectu": 467, "intend": [190, 322, 477], "intens": [166, 474, 492], "intensity_max": [474, 492], "intensity_min": [474, 492], "intent": 119, "inter": 479, "interact": [279, 492], "interchang": [319, 424], "interest": [471, 472, 492], "interfac": [34, 289, 312, 492], "interior": 129, "intermedi": [85, 86, 188, 202, 205, 207, 340, 348, 491], "intern": 69, "interoper": 480, "interp": [3, 8], "interpolated_inverted_cdf": [205, 207, 340, 348], "interpret": [37, 51, 62, 154, 185, 295, 312, 345, 477], "interrupt": 483, "intersect1d": [3, 8], "interv": [21, 55, 80, 173, 352, 366, 371, 374, 376, 377, 378, 379, 381, 387, 388, 389], "intp": [3, 8, 206], "introduc": [403, 476, 492], "introduct": 490, "introselect": [31, 269, 304, 339], "inund": 479, "inv": [3, 8, 477], "invas": 491, "invers": [22, 23, 24, 25, 26, 28, 92, 102, 103, 104, 105, 106, 107, 108, 109, 142, 167, 182, 356, 390, 392, 477], "invert": [0, 3, 8, 461], "inverted_cdf": [205, 207, 340, 348], "invest": 492, "invoc": [492, 493], "invok": [468, 477, 489], "involv": [467, 479], "irecv": 479, "irfft": [0, 3, 8, 109], "irfft2": [0, 3, 8], "irfftn": [0, 3, 8, 107, 108], "irrespect": [163, 165], "is_busdai": [3, 8], "isclos": [0, 3, 8], "iscomplex": [0, 3, 8], "iscomplexobj": [0, 3, 8], "isdtyp": [3, 8], "isend": 479, "isfinit": [0, 3, 8, 201, 208], "isfortran": [3, 8, 260], "isin": [3, 8], "isinf": [0, 3, 8], "isnan": [0, 3, 8, 201, 204, 206, 208], "isnat": [3, 8], "isneginf": [0, 3, 8], "isol": 468, "isposinf": [0, 3, 8], "isreal": [0, 3, 8], "isrealobj": [0, 3, 8], "isscalar": [0, 3, 8], "issu": [102, 103, 104, 463, 467, 480, 491, 492], "issubdtyp": [3, 8], "item": [0, 8, 33, 322, 323, 361, 392, 442, 476], "items": 289, "iter": [6, 86, 205, 207, 278, 290, 291, 307, 340, 346, 348, 426, 476, 477, 478, 479, 486, 492], "ith": 140, "its": [12, 13, 14, 19, 22, 23, 24, 25, 26, 27, 28, 41, 43, 44, 45, 46, 52, 53, 54, 59, 60, 63, 65, 66, 71, 72, 74, 81, 89, 90, 91, 93, 96, 119, 120, 121, 122, 123, 124, 125, 128, 130, 131, 134, 137, 138, 141, 142, 146, 147, 148, 156, 157, 158, 159, 160, 162, 163, 164, 165, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 186, 187, 191, 192, 193, 195, 289, 312, 324, 326, 331, 332, 334, 337, 342, 343, 349, 350, 369, 377, 392, 397, 398, 400, 401, 402, 411, 412, 413, 414, 418, 419, 422, 427, 428, 429, 431, 432, 433, 440, 441, 446, 467, 472, 476, 479, 483, 491, 492], "itself": [54, 196, 364, 404, 420, 468], "ivan": 483, "ix_": [0, 3, 8], "j": [82, 169, 190, 205, 207, 326, 337, 340, 346, 348, 426, 433, 473, 477, 479, 491, 492], "j0": 54, "j1": 54, "jacobi": 475, "jacobi_stencil": 492, "jacobian": 477, "jcp": 473, "jm": 54, "john": [169, 471], "join": [58, 421, 461], "jr": [356, 369], "json": 463, "jsrun": 484, "june": 483, "just": [56, 391, 467, 471, 472, 478], "k": [12, 13, 22, 23, 24, 25, 26, 27, 28, 34, 44, 45, 46, 52, 53, 59, 60, 63, 65, 66, 71, 72, 74, 77, 81, 82, 89, 90, 91, 93, 95, 96, 119, 120, 121, 122, 123, 124, 125, 128, 130, 131, 137, 140, 142, 146, 147, 148, 156, 157, 158, 159, 160, 170, 171, 172, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 191, 192, 193, 195, 217, 271, 291, 331, 332, 334, 342, 343, 349, 350, 351, 352, 354, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 374, 377, 378, 379, 380, 381, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 397, 398, 401, 402, 405, 411, 412, 413, 414, 418, 419, 422, 427, 428, 433, 434, 435, 436, 437, 438, 439, 440, 441, 463, 471, 473, 475, 477, 492], "kaiser": [0, 3, 8, 47], "kappa": 389, "ke": 492, "keep": [463, 471, 476], "keepdim": [14, 16, 17, 19, 29, 30, 41, 169, 188, 189, 197, 198, 201, 202, 203, 204, 205, 206, 207, 208, 265, 266, 298, 299, 300, 305, 318, 328, 340, 344, 348, 423, 445], "kei": [216, 224, 259, 480, 492], "kern": 483, "kernel": [474, 492], "kernel_i": [474, 492], "kernel_x": [474, 492], "keyword": [2, 12, 13, 22, 23, 24, 25, 26, 27, 28, 44, 45, 46, 52, 53, 55, 59, 60, 63, 65, 66, 68, 71, 72, 81, 89, 90, 91, 93, 96, 119, 120, 121, 122, 123, 124, 125, 128, 130, 131, 137, 142, 146, 147, 148, 156, 157, 158, 159, 160, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 187, 190, 191, 192, 193, 195, 196, 331, 332, 334, 342, 343, 349, 350, 397, 398, 401, 402, 411, 412, 413, 414, 418, 419, 422, 427, 428, 440, 441, 442], "kill": 161, "kind": [31, 32, 58, 64, 85, 186, 269, 270, 271, 304, 315, 339, 415, 461, 471, 472, 478, 480, 483], "know": [467, 477, 480, 491], "knowledg": [467, 479], "known": [317, 357, 370, 372, 383, 389, 392, 492], "kron": [3, 8], "kth": [31, 269, 304, 339], "kwarg": [12, 13, 22, 23, 24, 25, 26, 27, 28, 44, 45, 46, 52, 53, 55, 59, 60, 63, 65, 66, 71, 72, 81, 89, 90, 91, 93, 96, 119, 120, 121, 122, 123, 124, 125, 128, 130, 131, 137, 142, 146, 147, 148, 156, 157, 158, 159, 160, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 187, 191, 192, 193, 195, 251, 331, 332, 334, 342, 343, 349, 350, 397, 398, 401, 402, 411, 412, 413, 414, 418, 419, 422, 427, 428, 440, 441, 442, 471], "l": [36, 161, 163, 165, 472, 483, 492], "l2": [473, 477], "l2_norm": 477, "label": [85, 468, 471, 473, 476, 482], "label_color": 476, "label_color_map": 476, "label_valu": 476, "lam": 371, "lambda": [356, 362, 391], "languag": [471, 472, 478], "laplac": [0, 3, 8, 369], "laptop": 492, "larg": [61, 68, 174, 196, 369, 371, 386, 425, 479, 486, 491, 492], "larger": [43, 55, 79, 97, 98, 99, 102, 103, 104, 106, 109, 110, 112, 174, 387, 431, 443, 486, 492], "larger_imag": 492, "largest": [43, 86, 121, 169, 196, 374, 377], "last": [14, 19, 21, 31, 32, 41, 42, 48, 79, 82, 97, 98, 99, 101, 102, 103, 104, 106, 107, 108, 109, 110, 112, 116, 129, 141, 168, 173, 186, 208, 292, 310, 339, 344, 393, 400, 403, 408, 415, 416, 421, 423, 425, 429], "latenc": 492, "later": [369, 492], "latest": [480, 482, 492, 493], "latter": [346, 426, 491], "launch": [468, 486, 491], "launcher": [480, 484, 492], "law": [392, 471, 472, 478], "layout": [34, 271, 289, 321, 393, 400], "lcm": [0, 3, 8], "ldexp": [0, 3, 8], "lead": [48, 190, 199, 200, 480, 492], "leakag": 47, "learn": 480, "least": [38, 39, 40, 41, 43, 61, 68, 76, 84, 86, 113, 117, 145, 162, 163, 164, 165, 170, 172, 361, 407, 448, 468, 491, 492], "left": [14, 16, 17, 19, 29, 30, 41, 80, 117, 158, 169, 188, 189, 197, 198, 201, 202, 203, 204, 205, 206, 207, 208, 310, 340, 344, 348, 387, 406, 408, 423, 445, 473, 479], "left_shift": [0, 3, 8], "leg": 137, "legaci": 382, "legal": [467, 483], "legales": 469, "legat": [345, 463, 468, 470, 471, 472, 478, 481, 482, 485, 488, 489, 492, 493], "legate_auto_config": 492, "legate_config": [480, 489], "legate_limit_stdout": 492, "legate_root": 468, "legate_test": [463, 480], "legend": [471, 473], "legion": [490, 492], "legion_default_arg": 484, "lele": 473, "len": [57, 80, 99, 100, 104, 107, 109, 112, 140, 190, 243, 476], "length": [12, 13, 16, 17, 21, 22, 23, 24, 25, 26, 27, 28, 36, 41, 43, 44, 45, 46, 52, 53, 57, 59, 60, 63, 65, 66, 69, 70, 71, 72, 79, 81, 89, 90, 91, 93, 96, 97, 98, 99, 101, 102, 103, 104, 105, 106, 107, 109, 110, 112, 119, 120, 121, 122, 123, 124, 125, 128, 129, 130, 131, 134, 136, 137, 140, 142, 146, 147, 148, 156, 157, 158, 159, 160, 162, 163, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 187, 189, 190, 191, 192, 193, 195, 199, 200, 201, 203, 204, 310, 316, 331, 332, 334, 342, 343, 346, 349, 350, 353, 397, 398, 400, 401, 402, 404, 407, 408, 409, 410, 411, 412, 413, 414, 418, 419, 420, 422, 426, 427, 428, 429, 430, 440, 441, 448, 468, 473], "less": [0, 3, 8, 42, 47, 57, 68, 69, 70, 78, 113, 132, 133, 155, 166, 199, 200, 206, 208, 344, 361, 388, 412, 423, 431, 477, 480, 491], "less_equ": [0, 3, 8], "let": [467, 471, 472, 477, 478, 492], "letter": 312, "level": [48, 68, 323, 459, 468, 485, 491, 492], "leverag": 492, "lexsort": [3, 8], "lgpatch": 489, "lh": 473, "liabil": 483, "liabl": 483, "liber": [82, 85, 141, 186, 429, 446], "librari": [279, 459, 463, 468, 480, 481, 483, 492], "licens": [467, 471, 472, 478, 483], "lifespan": 479, "lightli": 482, "lightweight": 467, "like": [39, 40, 48, 56, 64, 73, 85, 109, 113, 170, 172, 173, 174, 185, 186, 190, 271, 289, 314, 322, 346, 388, 390, 393, 400, 426, 433, 461, 463, 467, 472, 473, 477, 478, 479, 484, 491, 492, 493], "limit": [55, 97, 98, 99, 101, 102, 103, 104, 106, 107, 108, 109, 110, 111, 112, 162, 163, 164, 165, 274, 369, 371, 387, 388, 471, 472, 478, 483, 492], "linalg": [0, 3, 8, 452, 461, 472, 473, 476, 477, 489, 491], "linalgerror": [8, 162, 163, 164, 165, 170, 171, 172], "line": [467, 470, 479, 480, 488, 492], "linear": [61, 85, 171, 205, 207, 340, 348, 452, 461, 468, 473, 477, 492], "linearli": 491, "link": [485, 492], "linspac": [0, 3, 8, 21, 471, 473, 491], "linux": [467, 480, 482, 490], "list": [8, 21, 31, 32, 36, 37, 38, 39, 40, 48, 49, 54, 83, 85, 86, 92, 100, 113, 114, 129, 135, 260, 323, 339, 409, 415, 417, 429, 432, 447, 468, 470, 476, 483], "liter": [4, 64, 85], "literal_ev": 174, "littl": [82, 141, 186, 338, 429, 443, 446, 472], "ll": [476, 484], "ln": [391, 492], "load": [0, 3, 8, 286, 287, 492], "loadtxt": [3, 8], "loan": 169, "loc": [360, 362, 363, 369, 473], "local": [479, 480, 492], "local_grid": 479, "local_ni": 479, "local_nx": 479, "local_rank": 479, "locat": [12, 13, 22, 23, 24, 25, 26, 27, 28, 44, 45, 46, 49, 51, 52, 53, 59, 60, 63, 65, 66, 71, 72, 81, 89, 90, 91, 93, 96, 113, 119, 120, 121, 122, 123, 124, 125, 128, 130, 131, 137, 142, 146, 147, 148, 149, 150, 156, 157, 158, 159, 160, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 190, 191, 192, 193, 195, 310, 331, 332, 334, 337, 342, 343, 349, 350, 360, 362, 363, 370, 397, 398, 401, 402, 408, 411, 412, 413, 414, 418, 419, 422, 427, 428, 440, 441, 474, 476, 488, 489, 492], "lock": 289, "log": [0, 3, 8, 364, 365, 471], "log10": [0, 3, 8], "log1p": [0, 3, 8], "log2": [0, 3, 8], "logaddexp": [0, 3, 8], "logaddexp2": [0, 3, 8], "logarithm": [175, 176, 177, 178, 179, 180, 365, 461], "logic": [14, 19, 338, 452, 461, 479], "logical_and": [0, 3, 8, 491], "logical_not": [0, 3, 8], "logical_or": [0, 3, 8], "logical_xor": [0, 3, 8], "logist": [0, 3, 8], "lognorm": [0, 3, 8], "logseri": [0, 3, 8], "logspac": [3, 8], "lomax": 370, "long": [3, 8, 377, 492], "longdoubl": [3, 8, 295], "longer": [43, 61, 101, 107, 491], "longlong": [3, 8], "look": [426, 467, 478, 480], "loop": [477, 479], "lorena": 479, "lorentz": 383, "lose": [295, 323], "loss": 483, "lost": 322, "low": [103, 104, 374, 377, 388, 459], "lower": [55, 95, 134, 161, 163, 165, 205, 207, 340, 348, 387, 388, 433, 434, 435, 436, 472, 479], "lowercas": 289, "lowest": [41, 86, 156, 370, 374, 377], "lstsq": [3, 8], "lt": 473, "m": [40, 42, 47, 61, 68, 82, 84, 95, 98, 99, 101, 103, 104, 107, 109, 112, 116, 117, 118, 132, 133, 155, 161, 162, 163, 164, 165, 166, 167, 170, 171, 172, 186, 188, 190, 202, 292, 337, 346, 351, 352, 354, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 374, 377, 378, 379, 380, 381, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 405, 409, 425, 426, 433, 434, 435, 437, 438, 445, 468, 471, 472, 478, 482, 492], "machin": [322, 396, 468, 480, 492, 493], "maco": [480, 482], "made": [34, 38, 196, 271, 289, 312, 393], "magenta": 476, "magnitud": [18, 476, 492], "mai": [6, 14, 19, 21, 29, 30, 49, 51, 54, 55, 58, 64, 69, 70, 85, 129, 169, 174, 186, 190, 196, 199, 200, 271, 289, 314, 323, 346, 352, 388, 389, 404, 463, 467, 470, 471, 472, 473, 477, 478, 480, 483, 485, 488, 489, 492], "main": [74, 75, 76, 77, 78, 95, 113, 138, 431, 433, 434, 473, 484, 492, 493], "maintain": [78, 467, 479], "mainten": 479, "major": [34, 291, 393, 444, 480], "make": [48, 49, 56, 64, 84, 136, 190, 279, 289, 361, 407, 448, 461, 467, 468, 472, 476, 479, 480, 485, 486, 489, 491, 492], "make_grid": 478, "manag": [355, 463, 479, 492], "mani": [85, 317, 356, 443, 468, 492], "manifest": 491, "manipul": [452, 461], "manner": [485, 492], "mantissa": 125, "manual": [430, 467, 479, 482, 486, 492], "map": [54, 476, 479], "mapper": 480, "margin": 80, "mark": 467, "marker": 476, "marku": 477, "mask": [154, 185, 341, 347, 476], "mask_func": 185, "mask_funct": 185, "mask_indic": [0, 3, 8], "mass": [134, 359], "master": 492, "match": [37, 48, 55, 58, 64, 79, 129, 186, 346, 421, 426, 445, 463, 473], "materi": [185, 289, 474, 476, 483], "math": [295, 463, 483], "mathbf": [473, 477, 492], "mathemat": [169, 452, 461, 492], "mathtt": 471, "matmul": [0, 3, 8, 463, 492], "matmul_cache_s": 452, "matplotlib": [471, 473, 474, 476, 478, 492], "matric": [48, 113, 162, 163, 164, 165, 166, 168, 169, 186, 190, 393, 461, 472, 473, 492], "matrix": [7, 8, 68, 78, 82, 161, 162, 163, 164, 165, 166, 167, 169, 170, 171, 186, 190, 326, 329, 393, 404, 437, 446, 461, 472, 473, 477], "matrix_norm": 8, "matrix_pow": [0, 8], "matrix_rank": [3, 8], "matrix_transpos": [3, 8], "matter": 480, "matthew": 483, "matvec": [3, 8], "max": [0, 134, 169, 204, 274, 430, 474, 476, 491, 492], "max_header_s": 174, "maxim": 492, "maximum": [0, 3, 8, 16, 17, 29, 42, 47, 55, 86, 122, 132, 133, 155, 174, 197, 201, 204, 267, 298, 476, 485, 491], "may_share_memori": [3, 8], "mayb": 467, "mb": [470, 492], "md": 169, "me": 467, "mean": [0, 3, 8, 48, 64, 67, 85, 98, 99, 103, 104, 109, 110, 112, 126, 129, 169, 186, 202, 271, 291, 321, 326, 354, 362, 363, 364, 368, 369, 375, 390, 393, 400, 405, 425, 443, 475, 477, 492], "measur": [356, 445, 480, 486, 487, 489, 490, 492], "mechan": 467, "median": [0, 3, 8, 203, 363], "median_unbias": [205, 207, 340, 348], "meet": [34, 467, 491, 492], "memavail": 480, "meminfo": 480, "memmap": [3, 8], "memo": 218, "memori": [34, 49, 51, 166, 185, 189, 190, 203, 205, 207, 271, 272, 282, 289, 291, 301, 312, 317, 321, 340, 348, 393, 400, 470, 473, 479, 492], "memoryview": 282, "mention": [476, 480, 491, 492], "merchant": 483, "merg": [54, 467, 483, 486], "merged_arrai": 54, "mergesort": [32, 415], "merton": 492, "mesh": [154, 479, 486], "meshgrid": [0, 3, 8, 154], "messag": [480, 486], "met": [483, 491], "method": [1, 2, 4, 7, 14, 16, 17, 19, 34, 61, 166, 174, 188, 201, 204, 205, 206, 207, 295, 313, 314, 322, 330, 340, 344, 348, 423, 471, 475, 485, 492], "mgrid": 154, "microsecond": 491, "middl": [103, 104], "midpoint": [205, 207, 340, 348], "might": [32, 69, 85, 185, 415, 477, 480, 486, 491, 492], "million": [471, 479], "millisecond": [486, 491], "mimic": [338, 443, 479], "mimick": 479, "min": [0, 134, 169, 170, 172, 204, 274], "min_cpu_chunk": 452, "min_gpu_chunk": 452, "min_omp_chunk": 452, "min_scalar_typ": [3, 8], "miniforg": 492, "miniforge3": 492, "minim": [47, 492], "minimum": [0, 3, 8, 16, 17, 30, 34, 43, 55, 119, 123, 198, 201, 204, 268, 300, 492], "minlength": [43, 476], "mintypecod": [3, 8], "mirror": 479, "miscellan": 461, "mise": 389, "mismatch": [48, 54, 57], "mitig": 491, "mkdir": 492, "mod": [3, 8, 54], "mode": [54, 61, 85, 97, 98, 99, 101, 102, 103, 104, 106, 107, 108, 109, 110, 111, 112, 170, 174, 273, 306, 320, 345, 360, 380, 383, 387, 389, 394, 425, 463, 474, 491, 492], "model": [359, 468, 471, 472, 478, 479, 492], "modf": [0, 3, 8], "modif": [467, 479, 483], "modifi": [64, 113, 189, 203, 205, 207, 340, 348, 467, 473, 483], "modul": [279, 404, 492], "modular": 54, "moivr": 369, "monoton": [80, 134], "more": [38, 39, 40, 49, 51, 55, 69, 70, 74, 78, 80, 82, 84, 85, 97, 102, 107, 108, 110, 111, 136, 141, 166, 168, 186, 190, 199, 200, 206, 317, 390, 391, 405, 407, 421, 429, 431, 442, 446, 448, 470, 472, 473, 474, 476, 479, 482, 485, 491, 492, 493], "moshier": 483, "most": [34, 79, 84, 85, 86, 102, 136, 196, 361, 396, 407, 426, 448, 467, 479, 485, 492], "mostli": 480, "motion": 390, "move": [194, 317, 492], "moveaxi": [0, 3, 8], "mpi": [479, 492], "mpi4pi": [479, 486], "mpi_fin": 479, "mpirun": 484, "msg00295": 483, "mt19937": [3, 8], "mu": [362, 370, 389], "much": [42, 467, 491], "multi": [3, 85, 97, 98, 99, 101, 102, 103, 104, 106, 107, 108, 109, 110, 111, 112, 162, 163, 164, 165, 166, 171, 479, 480, 481, 482, 490, 491], "multi_dot": [0, 8], "multi_index": 394, "multidimension": 446, "multinomi": [3, 8], "multipl": [1, 2, 7, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 115, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 171, 173, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 210, 211, 212, 216, 217, 218, 219, 220, 222, 223, 225, 226, 227, 228, 229, 230, 231, 232, 235, 236, 237, 238, 239, 240, 241, 242, 244, 245, 246, 247, 248, 249, 250, 252, 253, 254, 256, 257, 258, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 273, 274, 275, 276, 277, 278, 283, 284, 287, 288, 291, 295, 298, 299, 300, 303, 304, 305, 306, 307, 309, 310, 312, 315, 316, 318, 319, 320, 321, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 470, 477, 479, 480, 482, 491, 493], "multipli": [0, 3, 8, 69, 82, 186, 199, 344, 370, 378, 379, 381, 491], "multivariate_norm": [3, 8], "must": [1, 12, 13, 14, 16, 17, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 41, 44, 45, 46, 48, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 63, 65, 66, 69, 70, 71, 72, 79, 80, 81, 82, 84, 89, 90, 91, 93, 96, 101, 107, 109, 117, 119, 120, 121, 122, 123, 124, 125, 128, 129, 130, 131, 134, 136, 137, 141, 142, 146, 147, 148, 149, 150, 156, 157, 158, 159, 160, 161, 168, 169, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 186, 187, 188, 189, 191, 192, 193, 194, 195, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 260, 274, 289, 326, 331, 332, 334, 340, 341, 342, 343, 344, 346, 348, 349, 350, 354, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 367, 368, 369, 370, 371, 372, 373, 375, 380, 385, 386, 387, 390, 391, 392, 397, 398, 401, 402, 403, 405, 406, 407, 408, 411, 412, 413, 414, 418, 419, 421, 422, 423, 426, 427, 428, 429, 431, 440, 441, 443, 445, 446, 448, 468, 479, 483, 484, 492], "my": 467, "myenv": [482, 492], "myron": 492, "n": [7, 33, 36, 40, 43, 54, 61, 68, 75, 76, 79, 80, 82, 84, 95, 97, 98, 99, 101, 102, 103, 104, 106, 107, 109, 110, 112, 113, 129, 138, 140, 154, 167, 169, 170, 172, 185, 186, 190, 310, 317, 326, 337, 341, 347, 351, 352, 354, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 374, 377, 378, 379, 380, 381, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 404, 407, 408, 417, 429, 433, 434, 435, 438, 439, 445, 448, 452, 471, 472, 473, 476, 478, 482, 484, 492], "n1": 190, "n2": 190, "n3": 190, "n_centroid": 476, "n_dim": 476, "n_element": 476, "n_gpu": 479, "n_iter": 476, "n_iter_check": 476, "n_point": 473, "n_stencil": 473, "n_warmup_it": 486, "naiv": [491, 492], "name": [286, 289, 312, 324, 390, 467, 483, 489, 492], "nan": [15, 29, 30, 35, 143, 148, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 485], "nan_to_num": [0, 3, 8], "nanargmax": [0, 3, 8, 198, 463], "nanargmin": [0, 3, 8, 197, 463], "nancumprod": [0, 3, 8], "nancumsum": [0, 3, 8], "nanmax": [0, 3, 8, 204, 463], "nanmean": [0, 3, 8], "nanmedian": [0, 3, 8], "nanmin": [0, 3, 8, 201, 463], "nanpercentil": [0, 3, 8], "nanprod": [0, 3, 8], "nanquantil": [0, 3, 8], "nanstd": [3, 8], "nansum": [0, 3, 8], "nanvar": [3, 8], "nation": 492, "nativ": [463, 485], "natur": [175, 177, 369, 492], "navier": 479, "nbad": 361, "nd": [6, 48, 295], "ndarrai": [0, 7, 8, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 354, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 377, 378, 379, 380, 381, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 457, 463, 474, 476, 477, 485, 488, 492], "ndenumer": [3, 8], "ndim": [0, 3, 6, 8, 16, 17, 33, 38, 39, 40, 48, 75, 78, 113, 169, 204, 323, 426, 430], "ndimag": 474, "ndindex": [3, 8], "nditer": [3, 8], "ndmin": 34, "ndshape": [6, 50, 394, 410, 444], "ndshapelik": [50, 51, 116, 126, 127, 335, 336, 379, 381, 400, 420, 451], "nearest": [205, 207, 323, 340, 348, 402], "necessari": [38, 43, 48, 54, 64, 69, 70, 101, 107, 109, 113, 188, 189, 199, 200, 202, 203, 206, 208, 344, 345, 406, 423, 445, 479, 488], "necessarili": [54, 471, 472, 478], "need": [34, 49, 64, 80, 189, 190, 203, 393, 425, 426, 449, 463, 468, 472, 476, 479, 480, 491, 492], "neg": [0, 3, 8, 14, 19, 41, 43, 54, 77, 78, 95, 102, 103, 104, 107, 116, 119, 129, 147, 149, 167, 173, 196, 208, 292, 344, 356, 358, 360, 362, 363, 364, 366, 367, 369, 372, 373, 375, 380, 385, 393, 406, 418, 423, 425, 429, 431, 443], "negative_binomi": [0, 3, 8], "neginf": 196, "neglig": 483, "neighbor": [473, 479, 492], "neither": 483, "nersc": 492, "nest": [34, 48, 323, 479, 491], "nested_it": 3, "never": [61, 312], "new": [14, 19, 51, 54, 69, 70, 73, 78, 87, 88, 92, 116, 117, 118, 126, 173, 185, 188, 189, 194, 199, 200, 202, 203, 206, 208, 213, 271, 273, 285, 309, 326, 329, 335, 355, 376, 400, 406, 421, 424, 430, 445, 450, 459, 476, 482, 492], "new_label": 476, "newaxi": [326, 476], "newli": [34, 271], "newshap": 400, "newton": 475, "next": [317, 332, 467, 492], "nextaft": [0, 3, 8], "ngood": 361, "ni": [190, 346, 425, 426], "nightli": 482, "ninja": 468, "niter": [477, 486, 491], "nj": [346, 425, 426], "nk": [346, 425, 426], "nn": 190, "nnewton": 477, "nnode": 492, "node": [289, 470, 479, 480, 481, 482, 490, 493], "non": [14, 16, 17, 19, 21, 33, 39, 40, 41, 43, 67, 115, 134, 144, 154, 169, 173, 185, 188, 190, 196, 201, 204, 206, 289, 301, 303, 333, 341, 344, 356, 358, 360, 362, 363, 364, 367, 368, 369, 372, 373, 375, 380, 385, 418, 423, 429, 443, 479, 485], "nonc": [367, 368], "noncentr": [367, 368], "noncentral_chisquar": [0, 3, 8], "noncentral_f": [0, 3, 8], "none": [1, 2, 4, 6, 12, 13, 14, 16, 17, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 34, 37, 41, 43, 44, 45, 46, 52, 53, 54, 55, 57, 58, 59, 60, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 78, 79, 81, 82, 85, 88, 89, 90, 91, 93, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 116, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 134, 137, 141, 142, 146, 147, 148, 149, 150, 156, 157, 158, 159, 160, 168, 169, 171, 173, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 186, 187, 188, 189, 191, 192, 193, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 265, 266, 267, 268, 269, 270, 272, 273, 274, 275, 279, 280, 281, 283, 284, 287, 292, 293, 295, 298, 299, 300, 304, 305, 306, 310, 311, 312, 315, 316, 318, 320, 323, 325, 326, 328, 329, 331, 332, 334, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 348, 349, 350, 351, 352, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 374, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 397, 398, 399, 401, 402, 403, 406, 408, 411, 412, 413, 414, 415, 418, 419, 420, 421, 422, 423, 425, 426, 427, 428, 429, 431, 432, 433, 435, 438, 440, 441, 442, 443, 445, 446, 449, 451, 463, 476], "noninfring": 483, "nonneg": [361, 391], "nonzero": [0, 3, 8, 94, 115, 154, 338, 491, 492], "nor": 483, "norm": [0, 8, 97, 98, 99, 101, 102, 103, 104, 106, 107, 108, 109, 110, 111, 112, 166, 461, 473, 476, 477, 491], "normal": [0, 3, 8, 42, 47, 48, 68, 97, 98, 99, 101, 102, 103, 104, 106, 107, 108, 109, 110, 111, 112, 132, 133, 134, 155, 162, 163, 351, 354, 362, 364, 375, 386, 389, 471, 474, 476, 492], "normal_unbias": [205, 207, 340, 348], "north": [478, 492], "not_equ": [0, 3, 8, 476], "note": [12, 13, 15, 18, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 34, 44, 45, 46, 52, 53, 54, 59, 60, 61, 63, 64, 65, 66, 68, 69, 70, 71, 72, 73, 78, 79, 80, 81, 82, 85, 86, 89, 90, 91, 93, 96, 97, 98, 99, 100, 101, 102, 103, 104, 106, 107, 108, 109, 110, 111, 112, 113, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 128, 130, 131, 134, 137, 140, 141, 142, 143, 146, 147, 148, 153, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 190, 191, 192, 193, 195, 199, 200, 201, 204, 271, 282, 289, 295, 301, 312, 314, 317, 322, 323, 329, 331, 332, 334, 339, 342, 343, 349, 350, 355, 364, 393, 396, 397, 398, 399, 400, 401, 402, 403, 404, 411, 412, 413, 414, 418, 419, 422, 425, 427, 428, 429, 433, 435, 436, 438, 439, 440, 441, 442, 446, 473, 474, 477, 480, 491, 492], "notic": [471, 477, 480, 482], "notion": [163, 165], "now": [54, 468, 471, 472, 474, 478, 492], "np": [12, 13, 16, 17, 22, 23, 24, 25, 26, 27, 28, 44, 45, 46, 48, 52, 53, 59, 60, 63, 65, 66, 69, 70, 71, 72, 79, 80, 81, 85, 89, 90, 91, 93, 96, 114, 115, 119, 120, 121, 122, 123, 124, 125, 128, 130, 131, 137, 142, 146, 147, 148, 154, 156, 157, 158, 159, 160, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 189, 190, 191, 192, 193, 195, 199, 200, 203, 290, 314, 317, 326, 331, 332, 334, 342, 343, 344, 349, 350, 377, 396, 397, 398, 401, 402, 411, 412, 413, 414, 418, 419, 422, 423, 425, 427, 428, 430, 440, 441, 471, 472, 473, 474, 476, 477, 478, 479, 484, 485, 486, 489, 491, 492, 493], "npoint": 473, "npt": [4, 36, 55, 58, 95, 126, 127, 134, 138, 140, 144, 145, 151, 153, 173, 272, 290, 311, 329, 335, 336, 379, 381, 409, 430, 433, 449, 451], "npy": [174, 461], "npz": [174, 461], "nsampl": 361, "ntask": 492, "nuc": 169, "nuclear": 169, "null": 426, "num": [173, 491, 492], "num_parallel": 468, "num_timestep": 479, "numa": 468, "number": [2, 3, 6, 8, 12, 13, 15, 18, 22, 23, 24, 25, 26, 27, 28, 33, 34, 41, 42, 43, 44, 45, 46, 47, 49, 52, 53, 54, 59, 60, 63, 65, 66, 67, 68, 71, 72, 75, 77, 79, 81, 86, 89, 90, 91, 92, 93, 95, 96, 99, 101, 102, 103, 104, 106, 107, 109, 110, 112, 119, 120, 121, 122, 123, 124, 125, 128, 129, 130, 131, 132, 133, 134, 137, 138, 140, 142, 145, 146, 147, 148, 152, 154, 155, 156, 157, 158, 159, 160, 169, 173, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 187, 188, 191, 192, 193, 195, 196, 199, 200, 201, 202, 204, 206, 208, 297, 302, 314, 330, 331, 332, 334, 338, 341, 342, 343, 349, 350, 352, 353, 354, 359, 361, 366, 369, 371, 382, 397, 398, 399, 401, 402, 403, 405, 406, 411, 412, 413, 414, 418, 419, 422, 425, 427, 428, 430, 433, 440, 441, 442, 443, 445, 446, 461, 463, 470, 471, 473, 477, 479, 480, 484, 485, 492], "number_of_dimens": 330, "numer": [102, 103, 104, 107, 109, 149, 150, 169, 331, 342, 357, 368, 461, 479, 485], "numit": 6, "numpi": [1, 2, 3, 4, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 93, 94, 95, 96, 97, 98, 99, 101, 102, 103, 104, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 271, 279, 285, 289, 312, 317, 329, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 395, 396, 397, 398, 399, 400, 401, 402, 404, 407, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 461, 463, 470, 471, 472, 473, 474, 476, 477, 478, 479, 481, 487, 488, 490, 493], "numpy_compat": 452, "numpythunk": 4, "nvidia": [471, 472, 474, 478, 480, 482, 492, 493], "nx": [190, 479, 491, 492], "ny": [190, 479, 491, 492], "nyquist": [100, 102, 103, 104], "o": [1, 289, 355, 476, 486, 492], "obj": [34, 73], "object": [6, 14, 19, 34, 62, 153, 161, 169, 174, 189, 203, 205, 207, 260, 272, 279, 282, 289, 295, 297, 301, 321, 322, 323, 329, 340, 348, 355, 400, 429, 433, 442], "object_": [3, 8], "observ": 68, "obtain": [140, 314, 370, 471, 472, 478, 483], "occas": 467, "occasion": 485, "occur": [58, 64, 69, 70, 73, 85, 186, 196, 199, 200, 271, 291, 366, 369, 371, 387, 393, 491, 492], "occurr": [43, 442], "odd": [42, 47, 101, 105, 107, 109, 110, 132, 133, 155], "ofc": 69, "off": [21, 443, 467, 473], "offer": [480, 482, 491], "offload": 463, "offset": [4, 78, 185, 283, 293, 311, 317, 325, 431, 435, 436, 438, 439, 463, 486], "often": [21, 42, 351, 354, 369, 467, 476, 491, 492], "ogrid": 154, "omiss": 329, "omit": [260, 329], "omp": [470, 480, 492], "ompthread": [470, 492], "onc": [467, 468, 479, 492], "one": [6, 14, 16, 17, 19, 29, 30, 38, 41, 42, 43, 47, 49, 51, 54, 55, 64, 73, 85, 95, 97, 98, 101, 102, 103, 105, 106, 107, 109, 110, 129, 132, 133, 138, 140, 145, 154, 155, 169, 177, 188, 189, 190, 197, 198, 199, 201, 202, 203, 204, 205, 206, 207, 208, 282, 289, 290, 291, 295, 316, 317, 333, 340, 344, 348, 359, 370, 374, 409, 420, 421, 423, 435, 436, 438, 439, 445, 459, 467, 471, 479, 480, 482, 486, 491, 492], "ones": [0, 3, 8, 82, 92, 95, 138, 141, 149, 150, 185, 186, 199, 206, 208, 336, 429, 433, 446, 473, 476, 479, 485, 491], "ones_lik": [0, 3, 8], "onli": [12, 13, 22, 23, 24, 25, 26, 27, 28, 34, 36, 38, 41, 42, 44, 45, 46, 47, 52, 53, 55, 59, 60, 61, 63, 64, 65, 66, 71, 72, 81, 82, 85, 86, 89, 90, 91, 93, 96, 100, 119, 120, 121, 122, 123, 124, 125, 128, 129, 130, 131, 132, 133, 134, 137, 140, 142, 146, 147, 148, 155, 156, 157, 158, 159, 160, 161, 163, 165, 169, 171, 173, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 186, 187, 191, 192, 193, 195, 196, 197, 198, 201, 204, 271, 289, 295, 312, 331, 332, 334, 341, 342, 343, 346, 349, 350, 382, 393, 397, 398, 399, 400, 401, 402, 411, 412, 413, 414, 418, 419, 422, 426, 427, 428, 429, 440, 441, 442, 443, 446, 459, 463, 467, 474, 476, 479, 482, 485, 486, 491, 492], "onto": [289, 480], "oom": 480, "op": 382, "open": [21, 80, 154, 173, 174, 322, 374, 376, 378, 379, 381, 388, 467, 474, 480, 482, 492], "openmp": [463, 468, 470, 492], "oper": [7, 16, 17, 84, 85, 86, 92, 121, 136, 141, 161, 196, 201, 292, 337, 346, 399, 407, 429, 442, 446, 448, 452, 461, 463, 473, 474, 479, 485, 486], "operand": [85, 86], "opposit": [271, 289], "optim": [47, 85, 86, 168, 295, 463, 473, 479, 488, 492], "option": [1, 12, 13, 14, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 34, 37, 41, 43, 44, 45, 46, 49, 51, 52, 53, 54, 55, 57, 58, 59, 60, 61, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 77, 78, 79, 80, 81, 82, 85, 87, 88, 89, 90, 91, 93, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 116, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 134, 137, 138, 140, 141, 142, 146, 147, 148, 149, 150, 156, 157, 158, 159, 160, 163, 165, 168, 169, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 260, 271, 291, 292, 310, 312, 321, 329, 331, 332, 334, 335, 336, 337, 338, 339, 340, 342, 343, 344, 345, 348, 349, 350, 351, 352, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 377, 378, 379, 380, 381, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 396, 397, 398, 399, 400, 401, 402, 403, 406, 408, 409, 411, 412, 413, 414, 415, 417, 418, 419, 420, 421, 422, 423, 425, 427, 428, 429, 431, 432, 433, 434, 435, 436, 438, 439, 440, 441, 442, 443, 444, 445, 446, 450, 451, 467, 468, 470, 475, 480, 482, 484, 488, 489, 491], "ord": [169, 476], "order": [4, 12, 13, 22, 23, 24, 25, 26, 27, 28, 31, 32, 34, 44, 45, 46, 52, 53, 59, 60, 63, 64, 65, 66, 71, 72, 78, 80, 81, 85, 86, 89, 90, 91, 93, 96, 102, 103, 104, 107, 109, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 128, 129, 130, 131, 137, 142, 146, 147, 148, 156, 157, 158, 159, 160, 163, 165, 168, 169, 172, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 186, 187, 190, 191, 192, 193, 194, 195, 217, 269, 270, 271, 291, 292, 304, 307, 309, 310, 315, 321, 322, 324, 326, 331, 332, 334, 338, 339, 342, 343, 345, 349, 350, 351, 359, 393, 394, 397, 398, 400, 401, 402, 405, 408, 411, 412, 413, 414, 415, 418, 419, 422, 427, 428, 429, 440, 441, 443, 444, 461, 471, 472, 473, 490, 491, 492], "ordertyp": [4, 393, 394, 400, 444], "ordin": 171, "ordinari": [141, 161], "org": [356, 467, 471, 472, 478, 483], "organ": 483, "orient": [346, 426], "origin": [12, 13, 22, 23, 24, 25, 26, 27, 28, 41, 44, 45, 46, 49, 51, 52, 53, 59, 60, 63, 64, 65, 66, 71, 72, 81, 89, 90, 91, 93, 96, 119, 120, 121, 122, 123, 124, 125, 128, 130, 131, 137, 142, 146, 147, 148, 156, 157, 158, 159, 160, 169, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 187, 189, 190, 191, 192, 193, 194, 195, 203, 205, 207, 331, 332, 334, 340, 342, 343, 348, 349, 350, 397, 398, 400, 401, 402, 403, 411, 412, 413, 414, 418, 419, 422, 427, 428, 440, 441, 442, 469, 474, 479, 489, 492], "ortho": [97, 98, 99, 101, 102, 103, 104, 106, 107, 108, 109, 110, 111, 112], "orthonorm": 170, "oserror": 174, "other": [6, 12, 13, 21, 22, 23, 24, 25, 26, 27, 28, 34, 44, 45, 46, 49, 50, 52, 53, 54, 55, 59, 60, 61, 63, 65, 66, 71, 72, 79, 81, 85, 89, 90, 91, 93, 96, 102, 103, 104, 107, 109, 119, 120, 121, 122, 123, 124, 125, 128, 130, 131, 137, 138, 142, 146, 147, 148, 156, 157, 158, 159, 160, 168, 169, 173, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 187, 191, 192, 193, 194, 195, 205, 207, 271, 272, 279, 289, 312, 314, 317, 331, 332, 334, 340, 342, 343, 348, 349, 350, 370, 387, 388, 397, 398, 401, 402, 404, 411, 412, 413, 414, 418, 419, 422, 427, 428, 433, 440, 441, 461, 463, 467, 471, 480, 483, 486, 491], "otherwis": [15, 29, 30, 34, 35, 41, 67, 68, 79, 141, 173, 188, 189, 197, 198, 201, 202, 203, 204, 205, 207, 271, 291, 321, 340, 348, 382, 393, 400, 408, 424, 431, 432, 433, 445, 449, 463, 479, 483], "ouput": 463, "our": [467, 474, 478, 480, 485, 491, 492], "out": [12, 13, 14, 16, 17, 19, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 34, 37, 42, 43, 44, 45, 46, 47, 52, 53, 54, 55, 57, 58, 59, 60, 61, 63, 65, 66, 68, 69, 70, 71, 72, 73, 74, 77, 79, 81, 82, 85, 87, 88, 89, 90, 91, 93, 96, 97, 98, 99, 101, 102, 103, 104, 106, 107, 108, 109, 110, 111, 112, 116, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 130, 131, 132, 133, 137, 138, 139, 141, 142, 144, 146, 147, 148, 149, 150, 151, 154, 155, 156, 157, 158, 159, 160, 168, 171, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 191, 192, 193, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 265, 266, 267, 268, 273, 274, 275, 280, 281, 284, 292, 298, 299, 300, 305, 318, 320, 325, 326, 328, 331, 332, 334, 335, 336, 337, 339, 340, 342, 343, 344, 345, 348, 349, 350, 351, 352, 353, 354, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 377, 378, 379, 380, 381, 384, 385, 386, 387, 388, 389, 390, 391, 392, 395, 396, 397, 398, 401, 402, 404, 406, 411, 412, 413, 414, 415, 416, 418, 419, 421, 422, 423, 425, 426, 427, 428, 429, 431, 440, 441, 445, 446, 449, 450, 451, 470, 472, 478, 483, 488, 491, 492], "outcom": [359, 492], "outer": [0, 3, 8, 86], "outermost": [48, 54], "outlin": 479, "output": [12, 13, 14, 15, 16, 17, 19, 21, 22, 23, 24, 25, 26, 27, 28, 42, 43, 44, 45, 46, 47, 48, 52, 53, 55, 57, 59, 60, 61, 63, 65, 66, 69, 70, 71, 72, 77, 79, 80, 81, 82, 85, 86, 87, 89, 90, 91, 93, 95, 96, 97, 98, 99, 101, 102, 103, 104, 107, 108, 109, 115, 119, 120, 121, 122, 123, 124, 125, 128, 130, 131, 132, 133, 137, 138, 139, 140, 141, 142, 143, 144, 146, 147, 148, 154, 155, 156, 157, 158, 159, 160, 168, 171, 173, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 186, 187, 188, 189, 190, 191, 192, 193, 195, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 322, 331, 332, 334, 337, 338, 340, 342, 343, 344, 348, 349, 350, 351, 352, 354, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 374, 377, 378, 379, 380, 381, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 395, 396, 397, 398, 399, 401, 402, 403, 406, 409, 411, 412, 413, 414, 418, 419, 422, 423, 427, 428, 429, 430, 431, 440, 441, 442, 443, 445, 446, 452, 461, 463, 470, 479, 480, 488, 492], "outsid": [54, 55, 80, 134, 473], "over": [12, 13, 14, 16, 17, 19, 22, 23, 24, 25, 26, 27, 28, 41, 44, 45, 46, 52, 53, 59, 60, 63, 65, 66, 69, 70, 71, 72, 81, 82, 85, 86, 89, 90, 91, 93, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 116, 119, 120, 121, 122, 123, 124, 125, 128, 130, 131, 134, 137, 141, 142, 146, 147, 148, 156, 157, 158, 159, 160, 169, 173, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 187, 188, 190, 191, 192, 193, 195, 199, 200, 201, 202, 206, 208, 290, 291, 292, 305, 318, 331, 332, 334, 338, 342, 343, 344, 346, 349, 350, 352, 356, 371, 373, 378, 379, 381, 387, 388, 391, 397, 398, 401, 402, 403, 411, 412, 413, 414, 418, 419, 422, 423, 425, 426, 427, 428, 429, 440, 441, 443, 445, 463, 478, 479, 492], "overal": [463, 470, 479, 492], "overcom": 322, "overflow": [21, 119, 314], "overhead": [463, 479, 486], "overlap": 473, "overrid": [88, 127, 336, 451, 482], "overridden": [1, 68], "oversubscrib": 480, "overwrite_input": [189, 203, 205, 207, 340, 348], "own": [289, 312, 369, 467, 482, 492], "owndata": 289, "owner": [289, 312, 483], "p": [91, 190, 352, 356, 359, 365, 366, 369, 404, 432, 492], "pack": [338, 393, 443, 461], "packag": [205, 207, 340, 348, 474, 477, 480, 486, 492], "packbit": [0, 3, 8], "pad": [8, 61, 97, 98, 99, 101, 102, 103, 104, 106, 107, 109, 110, 112, 338, 443], "pade": 166, "page": [356, 467, 481], "pair": [86, 97, 98, 99, 101, 102, 103, 104, 106, 107, 108, 109, 110, 111, 112, 121], "pairwis": 476, "pairwise_dist": 476, "paper": [205, 207, 340, 348, 473], "parallel": [29, 30, 69, 70, 97, 98, 99, 101, 102, 103, 104, 106, 107, 108, 109, 110, 111, 112, 162, 163, 164, 165, 199, 200, 468, 479, 484, 492], "paramet": [1, 2, 6, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 260, 271, 279, 286, 287, 288, 291, 292, 295, 310, 312, 321, 322, 323, 326, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 377, 378, 379, 380, 381, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 438, 439, 440, 441, 442, 443, 444, 445, 446, 448, 449, 450, 451, 470, 491, 492], "parameter": [351, 352, 354, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 380, 385, 386, 387, 388, 389, 390, 391, 392], "parenthes": 168, "pareto": [0, 3, 8], "parse_arg": 492, "parser": 492, "part": [18, 57, 139, 144, 145, 151, 152, 162, 163, 164, 165, 193, 294, 308, 395, 396, 406, 416, 467], "parti": 482, "partial": [97, 98, 99, 101, 102, 103, 104, 106, 107, 108, 109, 110, 111, 112, 189, 203, 477, 492], "particular": 483, "particularli": 492, "partit": [0, 3, 8, 31, 69, 269, 479, 486, 492], "pass": [14, 16, 17, 18, 19, 34, 48, 154, 174, 185, 188, 196, 201, 204, 206, 271, 344, 355, 423, 433, 468, 470, 486, 490, 492], "past": 492, "patch": 489, "path": [86, 174, 286, 322, 468], "pathlib": [174, 286, 322], "pathlik": 174, "pattern": [41, 463, 491], "pcg64": [3, 8], "pcg64dxsm": [3, 8], "pcolor": 478, "pdf": [387, 471], "peak": [362, 387], "peebl": [356, 369], "pend": [34, 430], "pentadiagon": 473, "per": [463, 468, 470, 474, 479, 492], "percent": 370, "percentag": [463, 480, 488, 492], "percentil": [0, 3, 8, 205], "perform": [14, 19, 31, 37, 41, 54, 55, 61, 79, 85, 98, 99, 103, 104, 109, 112, 116, 161, 166, 185, 188, 202, 208, 292, 344, 346, 404, 423, 445, 446, 471, 472, 474, 477, 479, 480, 487, 490, 492], "performa": 492, "perhap": 80, "period": 473, "perlmutt": 492, "permiss": [54, 471, 472, 478, 483], "permit": [467, 474, 483, 491], "permut": [3, 8, 326, 432], "permute_dim": [3, 8], "person": [467, 483], "peyton": 356, "pg": 169, "phase": 492, "philox": [3, 8], "pi": [18, 389, 471, 473, 479], "pick": [468, 474], "pickl": [174, 255, 260, 286, 287], "piec": 492, "piecewis": [3, 8], "pil": [474, 492], "pillow": 492, "pin": 480, "pinv": [3, 8], "pip": 482, "pipe": 488, "pixel": [84, 136, 407, 448, 478], "place": [0, 3, 8, 14, 15, 16, 17, 19, 55, 58, 64, 69, 70, 73, 92, 113, 140, 188, 189, 196, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 304, 315, 326, 340, 344, 345, 346, 348, 400, 403, 406, 421, 423, 425, 431, 445, 459, 484], "plai": 492, "plain": [463, 470, 472], "plan": 470, "plane": [18, 405], "platform": [69, 70, 199, 200, 206, 208, 344, 377, 396, 423, 482], "pleas": [36, 83, 135, 190, 437, 447, 467, 477, 480, 482], "plot": [471, 473, 474, 476, 492], "plt": [471, 473, 474, 476, 478, 492], "plu": 177, "png": [474, 492], "point": [21, 42, 47, 69, 70, 82, 85, 97, 101, 102, 106, 107, 109, 110, 129, 132, 133, 143, 155, 167, 186, 188, 196, 199, 200, 202, 282, 310, 332, 375, 388, 406, 408, 429, 461, 463, 468, 472, 473, 476, 479, 485, 492], "poisson": [0, 3, 8, 356], "poisson_process": 356, "poli": [3, 8], "poly1d": [3, 8], "polyadd": [3, 8], "polyd": [3, 8], "polydiv": [3, 8], "polyfit": [3, 8], "polyint": [3, 8], "polymul": [3, 8], "polynomi": 404, "polysub": [3, 8], "polyv": [3, 8], "pool": 480, "popul": 373, "port": [376, 479], "portion": [483, 492], "posinf": 196, "posit": [0, 3, 8, 15, 18, 21, 43, 54, 77, 78, 92, 95, 102, 103, 104, 107, 119, 147, 150, 161, 167, 194, 196, 317, 351, 359, 362, 370, 372, 375, 403, 406, 409, 431, 472, 492], "possess": [6, 279], "possibl": [12, 13, 22, 23, 24, 25, 26, 27, 28, 39, 40, 44, 45, 46, 47, 52, 53, 59, 60, 63, 65, 66, 71, 72, 81, 86, 89, 90, 91, 93, 96, 119, 120, 121, 122, 123, 124, 125, 128, 130, 131, 134, 137, 142, 146, 147, 148, 156, 157, 158, 159, 160, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 187, 191, 192, 193, 195, 271, 289, 331, 332, 334, 342, 343, 349, 350, 397, 398, 400, 401, 402, 411, 412, 413, 414, 417, 418, 419, 422, 427, 428, 432, 440, 441, 467, 470, 480, 483, 484, 486, 491], "possibli": [323, 485], "post": 480, "potenti": [282, 485, 491], "pow": [3, 8, 254], "power": [0, 3, 8, 119, 167, 492], "pp": [205, 207, 340, 348, 369], "pr": 467, "practic": [480, 490], "pre": [34, 430, 467, 468], "precis": [41, 68, 69, 70, 85, 119, 185, 199, 200, 206, 208, 314, 322, 323, 344, 377, 423, 431, 463, 485, 492], "predict": 479, "prefer": [82, 480], "preload": 463, "preload_cudalib": 452, "prepend": [48, 79, 140, 186, 430], "prescrib": 480, "present": [16, 17, 82, 141, 201, 204, 429, 446], "preserv": [14, 19, 34, 38, 39, 40, 55, 57, 64, 79, 85, 116, 117, 118, 163, 165, 186, 189, 203, 271, 292, 310, 329, 408, 431], "press": 169, "pressur": 271, "prevent": [467, 492], "previou": [41, 467], "previous": [289, 492], "price": [475, 492], "primarili": 48, "principl": [356, 369], "print": [80, 396, 463, 470, 471, 472, 473, 476, 477, 478, 488, 492, 493], "printabl": 86, "printopt": [3, 8], "prior": [79, 468, 483, 492], "prior_distance_sum": 476, "probabl": [2, 68, 134, 189, 203, 351, 352, 356, 357, 359, 366, 369, 387, 389, 392], "problem": [322, 467, 477, 479, 480, 486, 491, 492], "proc": 480, "proce": 492, "process": [42, 161, 356, 469, 480, 491, 492], "processor": [470, 479, 480, 491, 492], "procur": 483, "prod": [0, 3, 8, 206, 314], "produc": [6, 289, 321, 322, 346, 426, 478, 485, 492], "product": [69, 82, 86, 141, 154, 168, 186, 199, 206, 208, 284, 305, 314, 337, 344, 429, 446, 461, 472, 479, 481, 483, 492], "product_along_axi": 344, "prof": 479, "profil": 473, "profit": 483, "program": [468, 479, 480, 481, 484, 489, 492, 493], "project": [452, 467, 471, 482], "promot": [114, 119, 186, 430, 483], "prone": [479, 492], "propag": [69, 70, 199, 200, 485], "proper": [461, 479], "properli": [312, 492], "properti": [6, 209, 272, 279, 282, 285, 289, 290, 294, 297, 301, 302, 308, 313, 314, 317, 326, 457], "proport": 392, "propos": 467, "protocol": 433, "prototyp": 88, "provid": [1, 8, 12, 13, 22, 23, 24, 25, 26, 27, 28, 29, 30, 44, 45, 46, 52, 53, 54, 58, 59, 60, 63, 64, 65, 66, 71, 72, 81, 83, 84, 85, 86, 89, 90, 91, 93, 96, 119, 120, 121, 122, 123, 124, 125, 128, 130, 131, 134, 136, 137, 142, 146, 147, 148, 149, 150, 156, 157, 158, 159, 160, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 186, 187, 188, 191, 192, 193, 195, 197, 198, 202, 206, 213, 312, 326, 331, 332, 334, 342, 343, 349, 350, 374, 375, 377, 397, 398, 401, 402, 407, 411, 412, 413, 414, 418, 419, 421, 422, 425, 427, 428, 440, 441, 442, 443, 448, 467, 480, 481, 483, 491, 492], "pseudonym": 467, "ptp": [3, 8], "public": 467, "publish": [480, 483], "pull": [1, 355, 467, 468], "purpos": [169, 483], "put": [0, 3, 8, 341, 346, 347, 471, 492], "put_along_axi": [0, 3, 8], "put_result": 471, "putmask": [0, 3, 8], "pwd": 468, "py": [468, 470, 471, 480, 482, 483, 484, 488, 489, 492, 493], "pyarray_resolvewritebackifcopi": [289, 312], "pypi": 492, "pyplot": [471, 473, 474, 476, 478, 492], "python": [21, 121, 282, 295, 314, 321, 322, 323, 396, 468, 471, 472, 478, 481, 482, 484, 485, 486, 491, 492, 493], "python3": 468, "q": [170, 205, 207, 340, 348], "qo": 492, "qr": [0, 3, 8], "quadrant": 27, "quadrat": 492, "quantil": [0, 3, 8, 205, 207, 340], "quantiti": 492, "queri": [480, 492], "question": [74, 481, 485], "quick": [322, 489], "quickli": [154, 472], "quicksort": [32, 415], "r": [84, 136, 170, 205, 207, 340, 348, 369, 407, 448, 471, 492], "r0": 140, "rad2deg": [0, 3, 8, 72], "radian": [3, 8, 18, 71, 72, 349], "raindrop": 356, "rainstorm": 356, "rais": [14, 16, 17, 19, 41, 43, 48, 54, 57, 64, 78, 80, 113, 119, 162, 163, 164, 165, 167, 169, 170, 171, 172, 174, 188, 189, 197, 198, 201, 203, 204, 205, 206, 207, 273, 289, 306, 320, 340, 343, 344, 345, 348, 354, 372, 394, 404, 417, 420, 423, 425, 431], "ram": 493, "ran": 480, "rand": [0, 3, 8, 492], "randint": [0, 3, 8, 377], "randn": [0, 3, 8, 492], "random": [0, 452, 461, 476, 492], "random_integ": [0, 3, 8], "random_sampl": [0, 3, 8, 376, 379, 381, 388], "random_se": 476, "randomli": [361, 375, 476], "randomst": [3, 8], "ranf": [3, 8], "rang": [18, 21, 54, 80, 134, 190, 345, 365, 370, 425, 461, 476, 477, 478, 479, 486, 491, 492], "rank": [94, 171, 392, 404, 479, 482, 492], "raphson": 475, "rare": 467, "rate": [356, 471, 492], "rather": [21, 78, 289, 463, 486, 491], "ratio": 357, "ration": 461, "ravel": [0, 3, 8, 115, 169, 291], "ravel_multi_index": [0, 3, 8], "raw": 321, "rawdata": 260, "rayleigh": [0, 3, 8], "rbf": 474, "re": [20, 39, 40, 58, 115, 403, 492], "reach": [48, 366, 467], "read": [174, 286, 289, 393, 400, 463, 474, 492], "readi": 467, "readonli": 51, "real": [0, 3, 8, 18, 35, 101, 107, 108, 109, 110, 111, 112, 139, 151, 161, 163, 165, 196, 396, 406, 416, 461, 467, 479], "real_if_clos": [0, 3, 8], "realli": [97, 102, 107, 108, 110, 111, 467, 491], "realm": 490, "realm_default_arg": 484, "rearrang": 461, "reason": [34, 109, 467], "rebuild": [84, 136, 407, 448], "recarrai": [3, 8], "receiv": 479, "reciproc": [0, 3, 8], "recommend": [2, 54, 486, 490, 492], "reconstruct": 442, "record": [3, 8, 467], "recov": 322, "recreat": 323, "recurs": 79, "recv": 479, "recv_typ": 479, "red": [473, 476], "redistribut": [467, 483], "reduc": [14, 16, 17, 19, 29, 30, 41, 188, 189, 190, 197, 198, 201, 202, 203, 204, 205, 206, 207, 208, 271, 340, 344, 348, 423, 445, 473, 479, 480, 492], "reduct": [14, 19, 205, 207, 340, 348, 445, 490, 492], "refer": [14, 19, 36, 49, 51, 69, 70, 83, 95, 98, 99, 103, 104, 109, 112, 135, 149, 150, 169, 188, 190, 199, 200, 202, 205, 207, 213, 265, 266, 267, 268, 269, 270, 273, 274, 275, 276, 277, 283, 284, 289, 298, 299, 300, 303, 304, 305, 306, 307, 309, 315, 316, 317, 318, 319, 320, 325, 327, 328, 340, 344, 348, 356, 369, 390, 393, 400, 406, 423, 433, 437, 445, 447, 476, 479, 480, 481, 482, 491, 492], "referenc": 312, "reflect": [289, 480], "regard": 482, "regardless": [19, 135, 447, 480], "region": 480, "reinterpret": 329, "reject": 467, "rel": [15, 68, 143], "relabel": 476, "relat": [351, 479, 491, 492], "relationship": [68, 390], "releas": [467, 483, 486, 492], "relev": [173, 314], "reli": [61, 404], "remain": [12, 13, 19, 22, 23, 24, 25, 26, 27, 28, 44, 45, 46, 52, 53, 59, 60, 63, 65, 66, 71, 72, 81, 89, 90, 91, 93, 96, 112, 119, 120, 121, 122, 123, 124, 125, 128, 130, 131, 134, 137, 142, 146, 147, 148, 156, 157, 158, 159, 160, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 187, 191, 192, 193, 194, 195, 205, 207, 289, 331, 332, 334, 340, 342, 343, 348, 349, 350, 370, 397, 398, 400, 401, 402, 411, 412, 413, 414, 418, 419, 422, 427, 428, 440, 441], "remaind": [0, 3, 8, 121, 124, 192], "remot": 492, "remov": [29, 30, 73, 78, 92, 186, 197, 198, 201, 316, 344, 420, 423, 431, 461, 479, 485], "reopen": 467, "reorder": [116, 194, 292], "rep": 430, "repeat": [0, 3, 8, 68, 98, 99, 103, 104, 109, 113, 162, 163, 164, 165, 167, 190, 341, 345, 347, 430, 492], "repeated_arrai": 399, "repeatedli": [478, 492], "repetit": [399, 430], "replac": [55, 196, 199, 200, 306, 345, 425, 472, 480, 481, 492, 493], "replic": 430, "repo": 467, "report": 463, "report_coverag": 452, "report_dump_callstack": 452, "report_dump_csv": 452, "repositori": [467, 479], "repr": 256, "repres": [41, 68, 85, 102, 140, 149, 150, 190, 338, 362, 443, 445, 473, 474, 476, 479, 480, 485], "represent": [86, 140, 196, 459], "reproduc": [476, 483], "req": 479, "request": [356, 371, 467, 476, 479, 480], "requir": [3, 8, 34, 174, 196, 463, 468, 469, 471, 472, 478, 479, 480, 482, 488, 490, 491], "requri": 492, "res2": [39, 40], "rese": 382, "research": [471, 479, 492], "resembl": 386, "reserv": [470, 480, 483, 492], "reset": 6, "reshap": [0, 3, 8, 84, 92, 313, 326, 407, 448, 480, 485], "reshaped_arrai": 400, "resid": 186, "resiz": [3, 8, 92, 492], "resolut": [473, 479], "resourc": [471, 480, 490, 493], "respect": [61, 129, 186, 312, 473, 480, 492], "respons": [467, 479, 492], "rest": 36, "restor": 403, "restrict": 483, "result": [6, 12, 13, 14, 16, 17, 18, 19, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 34, 41, 43, 44, 45, 46, 52, 53, 54, 55, 58, 59, 60, 63, 65, 66, 68, 69, 70, 71, 72, 74, 78, 79, 80, 81, 86, 88, 89, 90, 91, 92, 93, 94, 96, 108, 111, 114, 119, 120, 121, 122, 123, 124, 125, 127, 128, 130, 131, 134, 137, 140, 141, 142, 146, 147, 148, 149, 150, 156, 157, 158, 159, 160, 162, 164, 169, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 271, 310, 322, 329, 331, 332, 334, 336, 337, 338, 339, 340, 342, 343, 344, 346, 348, 349, 350, 354, 374, 377, 378, 379, 381, 386, 397, 398, 400, 401, 402, 406, 408, 411, 412, 413, 414, 415, 417, 418, 419, 421, 422, 423, 425, 426, 427, 428, 429, 430, 431, 433, 440, 441, 442, 445, 446, 451, 463, 470, 471, 472, 473, 478, 479, 485, 486, 492], "result_typ": [3, 8, 471], "ret": 38, "retain": [12, 13, 22, 23, 24, 25, 26, 27, 28, 44, 45, 46, 52, 53, 59, 60, 63, 65, 66, 71, 72, 81, 89, 90, 91, 93, 96, 119, 120, 121, 122, 123, 124, 125, 128, 130, 131, 137, 142, 146, 147, 148, 156, 157, 158, 159, 160, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 187, 191, 192, 193, 195, 331, 332, 334, 342, 343, 349, 350, 397, 398, 401, 402, 411, 412, 413, 414, 418, 419, 422, 427, 428, 440, 441, 483], "retstep": 173, "return": [2, 6, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 210, 211, 212, 213, 214, 216, 217, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 252, 253, 254, 256, 257, 258, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 274, 275, 277, 279, 283, 284, 287, 290, 291, 292, 295, 298, 299, 300, 303, 305, 307, 309, 310, 314, 318, 319, 321, 323, 324, 325, 326, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 342, 343, 344, 346, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 448, 449, 450, 451, 459, 471, 472, 474, 476, 477, 478, 480, 490, 492], "return_count": 442, "return_index": 442, "return_invers": 442, "retval": 41, "revers": [80, 116, 117, 118, 292, 326, 338, 393, 405, 432, 443], "review": [469, 480, 482], "rf": 492, "rfft": [0, 3, 8, 107, 112], "rfft2": [0, 3, 8, 108], "rfftfreq": [3, 8], "rfftn": [0, 3, 8, 109, 110, 111], "rh": [284, 473], "right": [55, 57, 78, 80, 117, 137, 162, 163, 310, 387, 401, 408, 431, 467, 473, 479, 482, 483], "right_shift": [0, 3, 8], "rightmost": 134, "rint": [0, 3, 8], "rippl": 42, "risk": [471, 479, 482, 492], "river": 479, "rk_hypergeometric_hrua": 483, "rk_hypergeometric_hyp": 483, "rk_triangular": 483, "rm": 492, "rn": 140, "rng": 476, "rober": 492, "robert": 483, "roll": [0, 3, 8], "rollaxi": [3, 8], "root": [0, 3, 8, 52, 418, 468], "rot90": [0, 3, 8], "rotat": 405, "roughli": 492, "round": [0, 21, 388, 402, 461], "rounded_arrai": 406, "roundoff": 121, "routin": [452, 459, 463, 468], "row": [34, 68, 95, 117, 118, 138, 168, 291, 317, 393, 407, 433, 435, 444, 447, 448, 474, 479, 492], "row_stack": [3, 8], "rowvar": 68, "rsqrt2pi": 471, "rst": 317, "rt": 492, "rtol": [15, 143], "rule": [21, 41, 48, 64, 114, 370, 486], "run": [185, 359, 467, 468, 469, 478, 480, 481, 482, 484, 488, 489, 490, 491, 493], "run_kmean": 476, "runfil": 492, "runtim": [201, 204, 463, 470, 479, 480, 484, 486, 489, 491], "runtimeerror": 289, "runtimewarn": [471, 477, 480], "rv": 483, "s0": 492, "s_0": 492, "s_0n": 492, "safe": [58, 64, 85, 174, 186, 271], "sai": [480, 486], "salloc": 492, "same": [14, 15, 16, 17, 19, 20, 29, 30, 31, 32, 34, 35, 41, 43, 48, 54, 56, 58, 61, 68, 69, 70, 78, 79, 80, 84, 88, 94, 102, 103, 104, 109, 127, 129, 134, 136, 149, 150, 151, 167, 168, 188, 189, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 271, 285, 309, 310, 314, 317, 324, 326, 329, 336, 338, 339, 340, 341, 344, 347, 348, 393, 399, 403, 406, 407, 408, 409, 415, 416, 421, 423, 425, 429, 431, 434, 436, 439, 443, 444, 445, 448, 451, 467, 471, 472, 474, 476, 477, 478, 480, 482, 489, 491, 492], "same_kind": [12, 13, 22, 23, 24, 25, 26, 27, 28, 44, 45, 46, 52, 53, 58, 59, 60, 63, 64, 65, 66, 71, 72, 81, 85, 89, 90, 91, 93, 96, 119, 120, 121, 122, 123, 124, 125, 128, 130, 131, 137, 142, 146, 147, 148, 156, 157, 158, 159, 160, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 186, 187, 191, 192, 193, 195, 271, 331, 332, 334, 342, 343, 349, 350, 397, 398, 401, 402, 411, 412, 413, 414, 418, 419, 422, 427, 428, 440, 441], "sampl": [42, 47, 68, 105, 129, 132, 134, 155, 173, 205, 207, 340, 348, 351, 352, 354, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 377, 378, 379, 380, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 452, 461], "satisfi": [34, 80, 94, 271, 392, 409, 477, 480, 491], "save": [3, 8, 189, 203, 205, 207, 340, 348, 463, 467, 473, 488], "savetxt": [3, 8], "savez": [3, 8], "savez_compress": [3, 8], "scalabl": [479, 480, 491, 492], "scalar": [12, 13, 15, 16, 17, 18, 22, 23, 24, 25, 26, 27, 28, 35, 38, 44, 45, 46, 48, 52, 53, 55, 59, 60, 63, 65, 66, 71, 72, 79, 81, 82, 89, 90, 91, 93, 96, 113, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 134, 137, 139, 141, 142, 143, 146, 147, 148, 153, 156, 157, 158, 159, 160, 171, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 190, 191, 192, 193, 195, 201, 204, 205, 206, 207, 208, 288, 295, 310, 323, 330, 331, 332, 334, 340, 342, 343, 344, 348, 349, 350, 351, 352, 354, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 380, 383, 385, 386, 387, 388, 389, 390, 391, 392, 395, 397, 398, 401, 402, 408, 409, 411, 412, 413, 414, 418, 419, 422, 423, 425, 427, 428, 429, 440, 441, 459, 490, 491], "scale": [86, 97, 98, 99, 101, 102, 103, 104, 106, 107, 108, 109, 110, 111, 112, 356, 358, 360, 362, 363, 369, 370, 380, 384, 385, 390, 391, 474, 479, 480, 481, 491, 492], "scatter": [476, 492], "schedul": [471, 472, 478, 480], "scheme": 475, "schole": [475, 482], "scientif": [479, 480, 492], "scientist": 479, "scikit": 468, "scipi": [166, 370, 474, 492], "scp": 492, "script": [468, 470, 480, 484, 489, 493], "seamlessli": 480, "search": [86, 452, 461, 481], "searchsort": [0, 3, 8, 80], "second": [41, 48, 61, 78, 82, 84, 86, 103, 104, 119, 129, 134, 135, 136, 149, 150, 185, 186, 190, 337, 343, 405, 407, 416, 424, 429, 431, 446, 448, 473, 491, 492], "second_cond": 491, "section": [34, 36, 99, 104, 109, 112, 480, 492], "secur": [174, 492], "see": [12, 13, 15, 16, 17, 22, 23, 24, 25, 26, 27, 28, 34, 44, 45, 46, 48, 52, 53, 55, 59, 60, 63, 65, 66, 68, 69, 70, 71, 72, 74, 76, 81, 85, 89, 90, 91, 93, 96, 97, 98, 99, 101, 102, 103, 104, 106, 107, 108, 109, 110, 111, 112, 119, 120, 121, 122, 123, 124, 125, 128, 130, 131, 134, 137, 142, 143, 146, 147, 148, 156, 157, 158, 159, 160, 169, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 187, 190, 191, 192, 193, 195, 199, 200, 201, 204, 206, 208, 271, 279, 312, 326, 331, 332, 334, 342, 343, 344, 349, 350, 374, 377, 397, 398, 401, 402, 411, 412, 413, 414, 418, 419, 422, 423, 427, 428, 435, 436, 438, 439, 440, 441, 442, 445, 457, 459, 468, 470, 471, 472, 473, 474, 477, 478, 480, 482, 483, 485, 491, 492, 493], "seed": [0, 1, 3, 8, 355, 461, 476], "seedsequ": [3, 8], "seek": [174, 477], "seem": 467, "seen": 351, "segment": 289, "seldom": 119, "select": [0, 3, 8, 16, 17, 57, 64, 168, 201, 275, 361, 420, 425, 445, 476, 479, 492], "selectkind": [31, 339], "selector": 166, "self": [6, 209, 210, 211, 212, 213, 214, 216, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 252, 253, 254, 256, 257, 258, 259, 261, 262, 263, 264, 275, 289], "sell": 483, "semant": 134, "send": 479, "send_typ": 479, "sens": [84, 136, 407, 448, 485], "sep": 322, "separ": [85, 196, 322, 406, 468, 470, 488, 491, 492], "sequenc": [18, 31, 34, 39, 40, 48, 50, 54, 56, 58, 84, 86, 98, 99, 103, 104, 108, 109, 111, 112, 134, 136, 140, 154, 168, 173, 189, 194, 203, 205, 207, 260, 339, 340, 341, 348, 371, 405, 407, 409, 421, 429, 430, 448, 486], "seri": 365, "serial": 468, "servic": [470, 483], "session": 492, "set": [12, 13, 14, 16, 17, 19, 22, 23, 24, 25, 26, 27, 28, 29, 30, 41, 44, 45, 46, 52, 53, 59, 60, 63, 65, 66, 68, 71, 72, 75, 77, 81, 89, 90, 91, 93, 96, 119, 120, 121, 122, 123, 124, 125, 128, 130, 131, 137, 138, 142, 146, 147, 148, 156, 157, 158, 159, 160, 169, 173, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 187, 188, 189, 191, 192, 193, 195, 197, 198, 201, 202, 203, 204, 205, 206, 207, 208, 259, 271, 273, 289, 312, 313, 329, 331, 332, 334, 340, 342, 343, 344, 347, 348, 349, 350, 361, 370, 397, 398, 401, 402, 411, 412, 413, 414, 418, 419, 422, 423, 427, 428, 440, 441, 445, 452, 461, 467, 468, 473, 477, 479, 480, 485, 486, 491, 492], "set_bit_gener": [3, 8], "set_devic": 479, "set_printopt": [3, 8], "set_stat": [3, 8], "set_titl": [474, 492], "set_xtick": [474, 492], "set_ytick": [474, 492], "setbufs": [3, 8], "setdevic": 479, "setdiff1d": [3, 8], "seterr": [3, 8], "seterrcal": [3, 8], "setfield": [0, 8], "setflag": [0, 8, 289], "setup": 477, "setxor1d": [3, 8], "sever": [468, 480, 492], "sfc64": [3, 8], "sh": [468, 492], "shall": 483, "shallow": 479, "shape": [0, 2, 3, 4, 6, 8, 12, 13, 14, 16, 17, 19, 20, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 40, 41, 43, 44, 45, 46, 48, 50, 51, 52, 53, 54, 55, 57, 58, 59, 60, 63, 65, 66, 69, 70, 71, 72, 75, 78, 79, 80, 81, 82, 84, 87, 88, 89, 90, 91, 92, 93, 95, 96, 98, 99, 100, 103, 104, 105, 108, 109, 111, 112, 116, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 134, 136, 137, 140, 141, 142, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 166, 167, 168, 171, 172, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 195, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 260, 271, 279, 289, 292, 309, 310, 314, 326, 330, 331, 332, 334, 335, 336, 338, 339, 340, 342, 343, 344, 346, 347, 348, 349, 350, 351, 352, 354, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 377, 378, 379, 380, 381, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 397, 398, 399, 400, 401, 402, 403, 406, 407, 408, 411, 412, 413, 414, 415, 416, 418, 419, 420, 421, 422, 423, 425, 427, 428, 429, 430, 431, 433, 434, 439, 440, 441, 443, 444, 445, 446, 448, 449, 450, 451, 461, 472, 476, 490, 491, 492], "share": [279, 479, 480, 492], "shares_memori": [3, 8], "sharp": 492, "sharper": 362, "shift": [100, 105, 158, 370, 401, 403], "short": [3, 8, 289, 321], "shorter": [101, 107, 345], "should": [29, 30, 34, 36, 48, 54, 64, 68, 78, 79, 85, 86, 102, 103, 104, 109, 154, 186, 194, 197, 198, 271, 338, 400, 425, 431, 443, 444, 446, 463, 471, 472, 473, 478, 486, 491, 492], "show": [321, 468, 473, 476, 488, 492], "show_config": [3, 8], "show_runtim": [3, 8], "showcas": 492, "shown": [473, 477, 489, 491, 492], "shuffl": [3, 8], "side": [80, 129, 310, 408, 473, 479], "sigma": [364, 492], "sign": [0, 3, 8, 15, 54, 63, 208, 344, 374, 377, 423], "signal": [42, 101, 106, 356, 369, 474, 492], "signatur": [185, 186, 467], "signbit": [0, 3, 8], "signedinteg": [3, 8], "signific": 479, "significantli": [471, 477, 479, 480, 492], "signoff": 467, "similar": [34, 42, 185, 295, 362, 485, 486, 492], "similarli": 479, "simpl": [68, 85, 323, 461, 472, 479, 492, 493], "simple_mm": 492, "simpler": [480, 492], "simplest": 470, "simpli": [134, 326, 467, 468, 492], "simplifi": [279, 370, 479, 492], "simul": 479, "simultan": [289, 403], "sin": [0, 3, 8, 473], "sinc": [3, 8, 107, 292, 323, 346, 473, 474, 480, 485, 491, 492], "sine": [24, 25, 413, 414, 473], "sing": 169, "singl": [2, 3, 8, 14, 16, 17, 19, 41, 48, 49, 50, 51, 56, 68, 86, 116, 117, 118, 129, 143, 168, 170, 171, 172, 174, 188, 190, 201, 202, 205, 207, 208, 286, 289, 290, 292, 295, 304, 312, 322, 340, 344, 348, 351, 352, 354, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 377, 378, 379, 380, 381, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 404, 405, 420, 423, 429, 445, 463, 477, 480, 481, 491], "singleton": 92, "singular": [169, 171, 172], "sinh": [0, 3, 8], "site": 488, "situat": [356, 467, 480], "sixth": 473, "size": [2, 6, 14, 16, 17, 19, 21, 29, 30, 36, 41, 43, 48, 57, 61, 69, 70, 75, 78, 80, 86, 94, 129, 169, 173, 174, 185, 188, 189, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 295, 297, 322, 340, 341, 344, 347, 348, 351, 352, 354, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 374, 376, 377, 378, 379, 380, 381, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 403, 423, 438, 443, 445, 463, 473, 479, 480, 486, 492], "skbuild_build_opt": 468, "skip": 317, "slice": [16, 17, 57, 73, 166, 197, 198, 199, 200, 201, 204, 206, 208, 275, 289, 346, 426, 463, 473, 479], "slide": 492, "slightli": [47, 166], "slogdet": [3, 8], "slower": 491, "slowest": [393, 400], "small": [15, 166, 196, 478, 480, 486, 489, 491], "smaller": [55, 68, 79, 97, 98, 99, 102, 103, 104, 106, 109, 110, 112, 121, 134, 189, 203, 205, 207, 340, 341, 347, 348, 463], "smallest": [169, 370], "smi": 480, "snippet": [190, 479], "so": [19, 48, 79, 119, 121, 134, 152, 173, 190, 289, 312, 322, 338, 430, 476, 483, 491, 492], "sobel": [474, 492], "sobol": 474, "softwar": [471, 472, 478, 480, 482, 483], "solut": [171, 473, 477, 479], "solv": [0, 3, 8, 461, 473, 477, 479, 492], "solver": 479, "some": [21, 34, 94, 272, 289, 312, 322, 390, 449, 463, 467, 468, 472, 478, 480, 485, 486, 491, 492], "somebodi": 467, "sometim": [323, 358, 385, 485], "soon": 467, "sort": [0, 8, 32, 172, 189, 203, 205, 207, 270, 310, 339, 340, 348, 408, 416, 417, 426, 442, 452, 461, 492], "sort_complex": [0, 3, 8], "sorter": [310, 408], "sortsid": 408, "sorttyp": [32, 415], "sourc": [194, 425, 426, 467, 469, 479, 483, 489, 492], "south": [478, 492], "space": [3, 8, 21, 100, 129, 173, 463, 473], "sparingli": 491, "spars": [140, 190], "speak": 169, "spec": 480, "special": [7, 351, 386, 393, 479, 483], "specif": [2, 82, 463, 471, 472, 478, 479, 483, 492], "specifi": [14, 19, 20, 21, 29, 30, 31, 32, 34, 41, 43, 54, 55, 58, 68, 69, 70, 73, 78, 85, 86, 97, 98, 99, 101, 102, 103, 104, 106, 107, 109, 110, 112, 116, 129, 163, 165, 169, 173, 186, 188, 189, 197, 198, 199, 200, 201, 202, 203, 205, 206, 207, 208, 271, 283, 286, 292, 295, 306, 329, 340, 344, 345, 346, 348, 352, 357, 358, 360, 361, 362, 363, 364, 365, 366, 368, 370, 374, 385, 389, 392, 393, 405, 406, 421, 423, 425, 426, 429, 431, 442, 443, 445, 463, 470, 476, 477, 480, 484, 488, 492], "spectral": 473, "spectrum": [100, 101], "speed": [295, 322], "spelt": 48, "spent": 486, "split": [0, 3, 8, 36, 83, 135, 447, 461], "spread": [369, 445, 492], "sqrt": [0, 3, 8, 471, 474, 492], "sqrt_t": 471, "squar": [0, 3, 8, 138, 161, 162, 163, 164, 165, 167, 171, 185, 354, 357, 367, 368, 418, 476], "squeez": [0, 3, 8, 92], "src": 64, "srun": [484, 492], "ssh": 492, "stabl": [32, 166, 415], "stack": [0, 3, 8, 56, 84, 136, 186, 407, 448, 463, 480], "stackoverflow": 485, "stage": 469, "standard": [295, 314, 326, 354, 364, 369, 370, 375, 383, 384, 385, 386, 459, 461, 467, 471, 472, 478, 484, 486, 489, 492], "standard_cauchi": [0, 3, 8], "standard_exponenti": [0, 3, 8], "standard_gamma": [0, 3, 8], "standard_norm": [3, 8, 386], "standard_t": [0, 3, 8], "start": [21, 86, 102, 173, 206, 208, 282, 344, 423, 467, 470, 471, 472, 473, 478, 479, 486, 491, 492], "start_tim": 492, "state": [260, 378, 379, 381, 461], "statement": [474, 477, 485, 491, 493], "statist": [205, 207, 340, 348, 351, 452, 461], "statistician": [205, 207, 340, 348], "std": [3, 8], "stdout": [463, 470], "stecil": 473, "stegun": 471, "stencil": [473, 475, 479], "step": [21, 86, 173, 317, 467, 468, 479, 485, 486, 491, 492], "stephen": 483, "still": [41, 169, 190, 492], "stock": [471, 492], "stoke": 479, "stop": [21, 173, 471, 472, 478, 491, 492], "storag": 322, "store": [12, 13, 22, 23, 24, 25, 26, 27, 28, 44, 45, 46, 52, 53, 59, 60, 63, 65, 66, 71, 72, 81, 89, 90, 91, 93, 96, 119, 120, 121, 122, 123, 124, 125, 128, 130, 131, 137, 142, 146, 147, 148, 149, 150, 156, 157, 158, 159, 160, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 186, 187, 191, 192, 193, 195, 317, 331, 332, 334, 337, 342, 343, 349, 350, 397, 398, 401, 402, 411, 412, 413, 414, 418, 419, 422, 427, 428, 440, 441, 473, 492], "str": [12, 13, 22, 23, 24, 25, 26, 27, 28, 31, 32, 44, 45, 46, 52, 53, 58, 59, 60, 63, 65, 66, 71, 72, 81, 85, 86, 89, 90, 91, 93, 96, 97, 98, 99, 101, 102, 103, 104, 106, 107, 108, 109, 110, 111, 112, 119, 120, 121, 122, 123, 124, 125, 128, 130, 131, 137, 142, 146, 147, 148, 156, 157, 158, 159, 160, 163, 165, 166, 169, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 187, 190, 191, 192, 193, 195, 205, 207, 260, 261, 271, 286, 306, 322, 324, 331, 332, 334, 339, 340, 342, 343, 345, 348, 349, 350, 397, 398, 401, 402, 411, 412, 413, 414, 415, 418, 419, 422, 427, 428, 440, 441, 463, 474, 476, 492], "str_": [3, 8], "straightforward": [491, 492], "strategi": [463, 492], "stream": 1, "streamlin": 492, "strict": [463, 483], "strictli": 169, "stride": [4, 279, 289, 312, 393, 468], "strike": [471, 492], "string": [61, 166, 174, 190, 260, 286, 287, 289, 312, 322, 353, 459, 468], "string_repr": 86, "strong": 467, "structur": [442, 479, 486, 491, 492], "student": 386, "studi": [390, 475], "style": [289, 291, 393, 444], "sub": [14, 16, 17, 19, 34, 36, 73, 78, 83, 135, 188, 201, 204, 206, 271, 329, 344, 417, 423, 431, 433, 447], "subarrai": [73, 140, 442], "subclass": 37, "subdomain": 479, "subgrid": 479, "subject": 483, "sublicens": 483, "submit": 467, "subok": [34, 49, 51, 271], "subplot": [474, 492], "subscript": [85, 86], "subsequ": 289, "subset": [361, 420, 486], "substanti": [479, 483], "substitut": [477, 483], "subtract": [0, 3, 8, 491], "subtyp": 393, "succe": 491, "success": [352, 359, 366], "suggest": [314, 467, 480, 492], "suit": [470, 492], "suitabl": [295, 310, 326, 346, 408, 426, 492], "sum": [0, 3, 8, 41, 61, 70, 82, 102, 134, 141, 169, 179, 180, 200, 206, 208, 317, 325, 354, 361, 368, 429, 431, 461, 476, 477, 492], "sum_": 169, "sum_along_axi": 423, "sum_along_diagon": 431, "sum_of_weight": 41, "summar": [205, 207, 340, 348], "summari": [3, 8, 470], "summat": [47, 85, 86], "supercomputerloc": 492, "superpod": 481, "suppli": [149, 150, 166, 168, 375], "support": [31, 32, 61, 80, 82, 85, 170, 172, 174, 186, 190, 289, 322, 329, 339, 346, 359, 399, 403, 404, 415, 429, 433, 442, 468, 474, 482, 484, 490, 492], "suppos": 54, "sure": [476, 486], "surfac": 479, "surpris": 79, "surround": 479, "svd": [0, 8], "svdval": 8, "swap": [61, 100], "swapax": [0, 3, 8], "switch": 477, "symmetr": [107, 161, 492], "symmetri": [101, 106], "synchron": [479, 492], "sysmem": 492, "system": [171, 185, 473, 477, 479, 480, 482, 485, 492], "system_mem": 480, "t": [68, 80, 116, 117, 118, 289, 326, 345, 351, 386, 433, 457, 470, 471, 472, 476, 485, 491, 492], "tabl": [169, 392], "tack": 467, "tackl": [479, 492], "tail": 362, "take": [0, 2, 3, 8, 56, 57, 154, 185, 341, 346, 393, 400, 426, 467, 480, 492], "take_along_axi": [0, 3, 8], "taken": [41, 54, 78, 79, 86, 101, 107, 109, 111, 112, 188, 202, 361, 409, 431, 433, 435, 438, 446, 474, 486], "tall": 113, "tan": [0, 3, 8], "tangent": [26, 27, 28, 427, 428], "tanh": [0, 3, 8], "taper": [42, 47, 132, 133, 155], "target": [345, 347, 468], "task": [463, 471, 472, 478, 479, 486, 492], "taylor": 166, "tdma": 473, "teach": [473, 476, 477], "technic": 480, "techniqu": 492, "tell": [317, 480], "templat": 492, "temporari": 463, "tend": 486, "tensor": [86, 429, 463, 468], "tensordot": [0, 3, 8], "tensorinv": [3, 8], "tensorsolv": [3, 8], "term": [47, 82, 86, 102, 103, 104, 107, 141, 186, 429, 446, 473, 482], "termin": [470, 477, 492], "test": [0, 14, 19, 143, 144, 146, 147, 148, 149, 150, 289, 354, 357, 452, 461, 469, 476, 478, 479, 488, 489], "test_view": 470, "test_vstack": 470, "test_wher": 470, "test_window": 470, "testsystem": 470, "text": [322, 467], "tf32": 463, "th": [74, 77, 79, 95, 129, 140, 205, 207, 326, 340, 348, 409, 434, 437], "than": [21, 43, 47, 49, 51, 54, 55, 57, 61, 69, 70, 78, 82, 83, 97, 98, 99, 101, 102, 103, 104, 106, 107, 109, 110, 112, 113, 117, 118, 134, 141, 166, 186, 189, 190, 199, 200, 203, 205, 206, 207, 208, 340, 341, 344, 345, 347, 348, 357, 361, 370, 387, 388, 392, 412, 420, 421, 423, 429, 431, 443, 446, 463, 472, 477, 485, 486, 491, 492], "thei": [13, 15, 27, 44, 45, 46, 49, 63, 69, 70, 79, 80, 81, 89, 119, 121, 122, 123, 124, 128, 130, 131, 137, 156, 157, 158, 159, 160, 179, 180, 181, 183, 184, 186, 187, 191, 192, 195, 199, 200, 310, 332, 334, 343, 352, 393, 398, 401, 408, 422, 440, 459, 474, 476, 486, 491, 492], "them": [56, 459, 467, 476, 480, 482, 491, 492], "themselv": [279, 473], "theorem": 369, "theoret": 492, "theori": 483, "therefor": [163, 165, 359], "theta": 358, "thi": [12, 13, 14, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 33, 34, 37, 41, 43, 44, 45, 46, 48, 49, 51, 52, 53, 54, 55, 58, 59, 60, 63, 64, 65, 66, 71, 72, 73, 74, 75, 79, 80, 81, 82, 84, 85, 86, 89, 90, 91, 93, 96, 97, 98, 99, 100, 101, 102, 103, 104, 107, 108, 109, 110, 111, 112, 113, 115, 117, 118, 119, 120, 121, 122, 123, 124, 125, 128, 130, 131, 134, 136, 137, 141, 142, 146, 147, 148, 153, 154, 156, 157, 158, 159, 160, 163, 165, 168, 169, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 201, 202, 203, 204, 205, 206, 207, 208, 269, 270, 271, 279, 282, 284, 288, 289, 292, 295, 297, 312, 314, 317, 321, 322, 323, 326, 329, 331, 332, 334, 337, 340, 341, 342, 343, 344, 346, 347, 348, 349, 350, 354, 355, 370, 374, 377, 382, 390, 393, 397, 398, 400, 401, 402, 404, 405, 407, 411, 412, 413, 414, 418, 419, 420, 422, 423, 425, 426, 427, 428, 429, 430, 433, 440, 441, 442, 445, 446, 448, 463, 467, 468, 470, 471, 472, 473, 474, 476, 477, 478, 479, 482, 483, 485, 488, 489, 491, 492, 493], "thing": [425, 467, 472, 492], "think": 467, "third": [83, 84, 136, 407, 429, 448, 482, 491], "those": [55, 61, 68, 73, 167, 346, 479, 485], "though": [43, 404], "thought": 389, "thread": [468, 470, 477, 480, 492], "three": [40, 47, 55, 205, 207, 340, 348, 442, 480, 491], "threshold": 463, "through": [14, 16, 17, 19, 34, 154, 185, 188, 190, 201, 204, 206, 271, 344, 423, 463, 482, 492], "throughout": 479, "thu": [54, 174, 430, 491, 492], "thumb": 486, "thunk": 4, "tile": [0, 3, 8, 461], "time": [68, 79, 85, 98, 99, 103, 104, 109, 289, 292, 356, 371, 390, 405, 430, 442, 467, 470, 471, 472, 478, 479, 482, 492], "timedelta64": [3, 8], "timer": 486, "timestep": 479, "tini": 369, "titl": [471, 473], "to_devic": 8, "tobyt": [0, 8, 322, 324], "tofil": [0, 3, 8], "togeth": [15, 58, 68, 102, 154, 186], "tol": [396, 477, 491, 492], "toler": [15, 143, 396, 477, 491], "tolist": [0, 3, 8], "too": [42, 80, 425, 480], "took": 492, "tool": [467, 479, 480, 489], "toolkit": [468, 492], "top": [468, 481, 482], "topic": [469, 480, 490], "topographi": 479, "torchsw": 475, "tort": 483, "total": [6, 67, 301, 366, 472, 476, 492], "total_chang": 476, "toward": [134, 332, 405], "trace": [0, 3, 8, 463], "traceback": 463, "tracker": 480, "transfer": [477, 492], "transform": [61, 97, 98, 99, 101, 102, 103, 104, 106, 107, 108, 109, 110, 111, 112, 452, 461, 491], "translat": [377, 473, 491], "transport": 322, "transpos": [0, 3, 8, 68, 161, 209, 461, 472], "trapezoid": [3, 8], "trapz": [3, 8], "travers": 317, "treat": [15, 54, 163, 165, 168, 186, 189, 190, 199, 200, 203, 206, 208, 346, 426, 430, 442], "tree": [468, 482], "tri": [0, 3, 8], "trial": [352, 359], "triangl": [137, 433, 434, 435, 436, 437, 438, 439], "triangular": [0, 3, 8, 42, 161, 163, 165, 170, 472], "tridiagon": 473, "trigger": [480, 485], "trigonometr": [22, 26, 413, 461], "tril": [0, 3, 8, 185, 435, 436, 437], "tril_indic": [0, 3, 8, 436], "tril_indices_from": [0, 3, 8], "trim": 443, "trim_zero": [3, 8], "triu": [0, 3, 8, 185, 438, 439], "triu_indic": [0, 3, 8, 439], "triu_indices_from": [0, 3, 8], "trivial": 467, "true": [4, 12, 13, 14, 15, 16, 17, 18, 19, 22, 23, 24, 25, 26, 27, 28, 29, 30, 34, 35, 41, 44, 45, 46, 52, 53, 57, 59, 60, 63, 64, 65, 66, 68, 71, 72, 79, 80, 81, 85, 86, 89, 90, 91, 93, 94, 96, 113, 119, 120, 121, 122, 123, 124, 125, 128, 130, 131, 134, 137, 140, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 156, 157, 158, 159, 160, 166, 169, 172, 173, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 187, 188, 189, 190, 191, 192, 193, 195, 196, 197, 198, 201, 202, 203, 204, 205, 206, 207, 208, 265, 266, 271, 289, 298, 300, 305, 312, 331, 332, 334, 340, 341, 342, 343, 344, 347, 348, 349, 350, 397, 398, 401, 402, 409, 411, 412, 413, 414, 418, 419, 422, 423, 427, 428, 440, 441, 442, 445, 449, 485, 488], "true_divid": [0, 3, 8, 81], "truli": 289, "trunc": [0, 3, 8], "truncat": [57, 97, 98, 99, 101, 102, 103, 104, 106, 107, 109, 110, 112, 352, 441], "trust": [197, 198], "truth": [130, 131, 159, 160, 181, 183, 184, 459, 461], "try": [472, 473, 474, 477, 480, 485, 487, 490, 492], "tup": [56, 84, 136, 407, 448], "tupl": [2, 4, 6, 12, 13, 14, 16, 17, 19, 22, 23, 24, 25, 26, 27, 28, 36, 37, 41, 44, 45, 46, 50, 51, 52, 53, 59, 60, 63, 65, 66, 67, 71, 72, 75, 76, 81, 86, 87, 88, 89, 90, 91, 92, 93, 96, 100, 105, 116, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 134, 137, 140, 142, 146, 147, 148, 154, 156, 157, 158, 159, 160, 162, 163, 169, 170, 172, 173, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 187, 188, 189, 190, 191, 192, 193, 195, 201, 202, 203, 204, 205, 207, 208, 260, 292, 295, 313, 317, 326, 331, 332, 333, 334, 335, 336, 340, 342, 343, 344, 348, 349, 350, 351, 352, 354, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 374, 377, 378, 379, 380, 381, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 394, 397, 398, 400, 401, 402, 403, 410, 411, 412, 413, 414, 418, 419, 420, 422, 423, 427, 428, 429, 435, 436, 438, 439, 440, 441, 444, 445, 449, 450, 451, 476, 491, 492], "tuple_of_arrai": 333, "turn": [56, 463], "tutori": [480, 490], "tweedi": 390, "twice": 491, "two": [15, 21, 35, 39, 44, 45, 46, 48, 61, 68, 77, 78, 79, 82, 98, 102, 103, 108, 125, 141, 143, 168, 186, 337, 357, 359, 362, 405, 424, 429, 431, 435, 436, 438, 439, 446, 474, 475, 476, 478, 491, 492, 493], "type": [6, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 77, 78, 79, 80, 81, 82, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 126, 127, 128, 129, 130, 131, 132, 133, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 164, 165, 166, 167, 168, 169, 171, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 213, 260, 271, 279, 285, 291, 292, 295, 297, 310, 312, 314, 321, 322, 323, 326, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 342, 343, 344, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 377, 378, 379, 380, 381, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 438, 439, 440, 441, 443, 444, 445, 446, 448, 449, 450, 451, 452, 461, 463, 468, 476, 479, 480, 492], "typecod": 271, "typeerror": [43, 64, 80, 205, 207, 340, 348], "typenam": [3, 8], "typic": [15, 49, 51, 68, 101, 310, 408, 468, 479, 486, 492], "u": [163, 165, 172, 206, 317, 391, 467, 472, 474, 478, 480, 483, 492], "u8_arr": 79, "ubyt": [3, 8], "ufunc": [8, 12, 13, 16, 17, 22, 23, 24, 25, 26, 27, 28, 44, 45, 46, 52, 53, 55, 59, 60, 63, 65, 66, 71, 72, 81, 89, 90, 91, 93, 96, 119, 120, 121, 122, 123, 124, 125, 128, 130, 131, 137, 142, 146, 147, 148, 156, 157, 158, 159, 160, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 187, 191, 192, 193, 195, 201, 204, 206, 208, 331, 332, 334, 342, 343, 344, 349, 350, 397, 398, 401, 402, 411, 412, 413, 414, 418, 419, 422, 423, 427, 428, 440, 441], "uic": 312, "uid": 480, "uint": [3, 8], "uint16": [3, 8], "uint32": [3, 8], "uint64": [3, 8, 476], "uint8": [3, 8, 79, 338, 443], "uintc": [3, 8], "uintp": [3, 8], "uk": [471, 474], "ulong": [3, 8], "ulonglong": [3, 8], "ultim": [289, 312], "unabl": 480, "unalt": 355, "unari": 459, "unbias": 68, "unbound": 370, "unchang": [34, 112], "undefin": [189, 203, 205, 207, 340, 346, 348, 485], "under": [169, 289, 467, 471, 472, 478, 482, 483], "underli": [32, 364, 393, 400, 415, 471, 492], "understand": [467, 477], "undesir": 491, "undo": 443, "unexpect": 206, "unif": [378, 379, 381], "uniform": [0, 3, 8, 134, 373, 374, 377, 378, 379, 381, 391], "uniformli": 388, "uniniti": [12, 13, 22, 23, 24, 25, 26, 27, 28, 44, 45, 46, 52, 53, 59, 60, 63, 65, 66, 71, 72, 81, 87, 88, 89, 90, 91, 93, 96, 119, 120, 121, 122, 123, 124, 125, 128, 130, 131, 137, 142, 146, 147, 148, 156, 157, 158, 159, 160, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 187, 191, 192, 193, 195, 331, 332, 334, 342, 343, 349, 350, 397, 398, 401, 402, 411, 412, 413, 414, 418, 419, 422, 427, 428, 440, 441], "union1d": [3, 8], "uniqu": [0, 3, 8, 194, 369, 476], "unique_al": [3, 8], "unique_count": [3, 8, 442], "unique_indic": 442, "unique_invers": [3, 8, 442], "unique_valu": [3, 8], "unit": [154, 162, 163, 389, 390, 485], "unitari": [129, 172, 485], "uniti": 134, "univari": 375, "univers": [169, 390], "unknown": 492, "unless": [14, 19, 34, 54, 69, 70, 78, 85, 134, 169, 173, 199, 200, 206, 208, 271, 295, 338, 344, 374, 377, 378, 379, 381, 406, 423, 442, 467, 471, 472, 478], "unlik": [61, 78, 162, 164, 387], "unmodifi": [48, 481], "unnecessari": 467, "unpack": 443, "unpackbit": [0, 3, 8], "unpickl": [260, 312], "unpredict": [1, 355], "unravel": 444, "unravel_index": [0, 3, 8], "unraveled_coord": 444, "unsaf": [58, 64, 85, 141, 186, 271, 337, 429, 446], "unsign": [79, 208, 344, 423], "unsignedinteg": [3, 8], "unstack": [3, 8], "unsupport": 485, "until": [48, 86, 476, 491, 492], "unwrap": [3, 8], "up": [84, 118, 121, 136, 295, 407, 426, 442, 448, 463, 468, 474, 479, 480, 485, 486, 492], "updat": [289, 312, 345, 346, 477, 479, 492], "uplo": [163, 165], "upon": 467, "upper": [55, 95, 134, 161, 163, 165, 170, 312, 387, 388, 437, 438, 439], "uppoer": 170, "us": [2, 6, 16, 17, 20, 21, 31, 32, 42, 47, 48, 54, 58, 61, 68, 69, 70, 74, 75, 78, 79, 82, 85, 86, 97, 98, 99, 101, 102, 103, 104, 106, 107, 109, 110, 112, 129, 132, 133, 139, 143, 154, 155, 161, 166, 168, 169, 173, 186, 188, 189, 190, 196, 199, 200, 201, 202, 203, 205, 206, 207, 208, 217, 218, 273, 279, 289, 295, 312, 314, 322, 329, 339, 340, 341, 344, 346, 348, 352, 354, 356, 377, 382, 390, 393, 395, 396, 399, 400, 403, 409, 415, 423, 425, 426, 431, 442, 444, 445, 446, 459, 463, 467, 468, 470, 471, 472, 473, 474, 477, 478, 479, 481, 482, 483, 485, 488, 489, 490, 493], "usabl": 119, "usag": [97, 98, 99, 101, 102, 103, 104, 106, 107, 108, 109, 110, 111, 112, 162, 163, 164, 165, 171, 463, 467, 469, 480, 490, 491], "use_explicit": 166, "use_openmp": 468, "use_thread": 468, "user": [196, 289, 312, 468, 477, 479, 480, 481, 492], "ushort": [3, 8], "usual": [75, 467, 480, 493], "util": [470, 471, 472, 478, 480, 492], "v": [48, 61, 74, 77, 310, 408, 452, 470, 471, 473], "v1": 471, "v100": 492, "val": [113, 139, 153, 311, 338, 341, 395, 443, 491, 492], "valid": [48, 61, 185, 435, 436, 438, 439, 467, 479, 482], "valu": [2, 12, 13, 14, 15, 16, 17, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 35, 41, 42, 43, 44, 45, 46, 47, 52, 53, 54, 55, 59, 60, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 79, 80, 81, 85, 89, 90, 91, 93, 94, 95, 96, 102, 110, 113, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 137, 140, 142, 143, 145, 146, 147, 148, 149, 150, 151, 152, 154, 155, 156, 157, 158, 159, 160, 161, 163, 165, 167, 169, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 191, 192, 193, 195, 196, 197, 198, 199, 200, 201, 202, 204, 205, 206, 207, 208, 211, 212, 219, 220, 222, 223, 225, 226, 227, 228, 229, 230, 231, 232, 236, 237, 238, 239, 240, 241, 242, 244, 245, 246, 247, 248, 249, 250, 252, 253, 254, 257, 258, 259, 262, 263, 264, 267, 268, 271, 274, 285, 288, 298, 300, 306, 310, 312, 314, 317, 331, 332, 334, 338, 341, 342, 343, 344, 345, 346, 347, 349, 350, 351, 352, 354, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 377, 378, 379, 380, 381, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 397, 398, 399, 400, 401, 402, 403, 404, 406, 408, 411, 412, 413, 414, 418, 419, 422, 423, 425, 426, 427, 428, 431, 432, 440, 441, 442, 443, 445, 449, 459, 461, 463, 471, 473, 476, 477, 478, 479, 480, 490, 491, 492], "valuabl": 479, "valueerror": [41, 43, 48, 54, 57, 78, 80, 113, 169, 197, 198, 201, 204, 354, 372, 404, 417, 420, 431], "van": 169, "vander": [3, 8], "vanilla": 463, "var": [0, 3, 8, 463], "vararg": 129, "vari": [32, 68, 140, 396, 415, 473, 474, 479, 492], "variabl": [68, 171, 197, 198, 201, 204, 354, 356, 362, 369, 463, 477, 479, 480, 484, 486, 488, 491, 492], "varianc": [68, 328, 354, 375, 445, 461], "variant": 492, "variat": [205, 207, 340, 348, 357, 492], "varieti": 2, "variou": [169, 461, 463, 479, 489], "vdot": [0, 3, 8], "vecdot": [3, 8], "vecmat": [3, 8], "vector": [3, 8, 68, 82, 141, 168, 169, 186, 190, 326, 337, 446, 461, 492, 493], "vector1": 492, "vector2": 492, "vector_norm": 8, "venv": [482, 492], "verbatim": 467, "verbos": [470, 477, 480, 492], "veri": [15, 42, 196, 295, 486], "verifi": 161, "version": [67, 74, 115, 189, 203, 205, 207, 260, 340, 348, 370, 444, 467, 471, 472, 478, 479, 482, 492], "vertic": [405, 407, 447, 448, 479], "vh": 172, "via": [12, 13, 22, 23, 24, 25, 26, 27, 28, 44, 45, 46, 52, 53, 59, 60, 63, 65, 66, 71, 72, 81, 89, 90, 91, 93, 96, 119, 120, 121, 122, 123, 124, 125, 128, 130, 131, 137, 142, 146, 147, 148, 156, 157, 158, 159, 160, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 187, 191, 192, 193, 195, 289, 323, 331, 332, 334, 342, 343, 349, 350, 397, 398, 401, 402, 411, 412, 413, 414, 418, 419, 422, 427, 428, 433, 440, 441, 470, 480, 484, 492], "view": [0, 8, 39, 40, 49, 51, 74, 92, 116, 117, 118, 190, 194, 285, 289, 292, 319, 326, 346, 400, 417, 420, 424, 426, 432, 444, 480, 490], "violat": [64, 463], "vision": 492, "visit": [467, 480], "vital": 492, "void": [3, 8, 295], "volatil": [471, 492], "von": 389, "vonmis": [0, 3, 8], "vpi": 474, "vsplit": [0, 3, 8, 407, 448], "vstack": [0, 3, 8, 407, 491], "vv": 470, "w": [164, 165, 289, 312], "wa": [47, 82, 141, 168, 366, 390, 406, 429, 446, 467, 474, 477, 480], "wai": [86, 102, 103, 104, 109, 186, 361, 443, 467, 468, 470, 471, 472, 473, 478, 483, 484, 491], "waital": 479, "wald": [0, 3, 8], "walk": 468, "want": [467, 468, 478, 492], "warm": 486, "warn": [185, 197, 198, 201, 204, 345, 452, 477, 492], "warranti": [471, 472, 478, 483], "wasilla": 483, "water": 479, "wavenumb": 473, "we": [8, 54, 68, 317, 467, 468, 471, 472, 473, 474, 476, 477, 478, 479, 480, 491, 492], "weak": 481, "weibul": [0, 3, 8, 205, 207, 340, 348, 380], "weight": [41, 43, 68, 132, 133, 134, 370, 476], "welcom": [8, 467], "well": [85, 171, 312, 344, 470, 472, 479], "were": [58, 186, 310, 375, 408, 421, 480, 483, 488, 492], "west": [478, 492], "wget": 492, "what": [58, 64, 74, 85, 97, 98, 99, 101, 102, 103, 104, 106, 107, 108, 109, 110, 111, 112, 141, 144, 186, 271, 337, 421, 429, 446, 478, 488, 491, 492], "wheel": [482, 492], "when": [18, 21, 29, 30, 34, 41, 48, 57, 64, 69, 70, 79, 109, 134, 161, 166, 169, 171, 173, 185, 186, 189, 190, 197, 198, 199, 200, 201, 203, 204, 206, 279, 295, 312, 317, 322, 354, 355, 382, 393, 404, 409, 425, 426, 463, 467, 468, 477, 479, 482, 484, 485, 486, 488, 491, 492], "whenev": [432, 463, 491], "where": [0, 3, 8, 12, 13, 14, 16, 17, 19, 21, 22, 23, 24, 25, 26, 27, 28, 33, 39, 40, 44, 45, 46, 48, 52, 53, 54, 55, 57, 59, 60, 63, 64, 65, 66, 68, 71, 72, 79, 81, 82, 89, 90, 91, 92, 93, 94, 95, 96, 101, 107, 109, 119, 120, 121, 122, 123, 124, 125, 128, 130, 131, 136, 137, 140, 142, 143, 144, 146, 147, 148, 149, 150, 151, 156, 157, 158, 159, 160, 161, 170, 172, 173, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 187, 188, 191, 192, 193, 195, 201, 202, 204, 206, 208, 265, 266, 298, 300, 305, 310, 318, 331, 332, 334, 337, 341, 342, 343, 344, 347, 349, 350, 351, 352, 357, 358, 359, 366, 368, 370, 387, 397, 398, 401, 402, 408, 409, 411, 412, 413, 414, 417, 418, 419, 422, 423, 427, 428, 431, 440, 441, 445, 471, 473, 474, 476, 479, 483, 485, 491, 492], "wherea": 485, "wherev": 64, "whether": [14, 15, 19, 35, 74, 80, 143, 144, 161, 163, 165, 173, 196, 206, 312, 444, 463, 467, 470, 483, 488, 491, 492], "which": [1, 12, 13, 14, 16, 17, 19, 20, 22, 23, 24, 25, 26, 27, 28, 29, 30, 34, 41, 44, 45, 46, 48, 52, 53, 54, 57, 58, 59, 60, 61, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 75, 77, 78, 79, 80, 81, 85, 86, 89, 90, 91, 93, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 116, 119, 120, 121, 122, 123, 124, 125, 128, 129, 130, 131, 136, 137, 142, 146, 147, 148, 149, 150, 153, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 169, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 191, 192, 193, 195, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 271, 279, 292, 295, 312, 314, 329, 331, 332, 334, 338, 340, 342, 343, 344, 345, 348, 349, 350, 356, 361, 374, 377, 378, 379, 380, 381, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 397, 398, 399, 401, 402, 403, 406, 409, 411, 412, 413, 414, 417, 418, 419, 421, 422, 423, 425, 427, 428, 431, 433, 434, 435, 438, 440, 441, 443, 445, 449, 463, 467, 474, 477, 479, 480, 483, 486, 488, 491, 492], "while": [68, 112, 168, 190, 203, 205, 207, 208, 289, 344, 370, 403, 423, 433, 476, 480, 486, 491, 492], "whilst": 38, "who": 467, "whole": 467, "whom": 483, "whose": [34, 78, 94, 95, 113, 185, 188, 194, 201, 202, 204, 208, 274, 338, 431, 436, 439, 444, 445], "why": [107, 467], "wide": [356, 480], "width": [84, 134, 136, 369, 407, 448, 492], "wiki": 356, "wikipedia": 356, "window": [42, 47, 132, 133, 155, 452, 461, 482], "wise": [12, 13, 15, 22, 23, 24, 25, 26, 27, 28, 44, 45, 46, 52, 53, 59, 60, 63, 65, 66, 81, 84, 89, 96, 97, 98, 99, 101, 102, 103, 104, 106, 107, 108, 109, 110, 111, 112, 119, 120, 122, 123, 124, 130, 131, 135, 136, 142, 143, 146, 147, 148, 149, 150, 157, 159, 160, 162, 163, 164, 165, 175, 176, 177, 181, 182, 183, 184, 187, 191, 192, 193, 195, 277, 331, 332, 334, 342, 343, 397, 398, 407, 411, 412, 413, 414, 418, 419, 422, 427, 428, 440, 441, 447, 448, 492], "wish": 74, "within": [12, 13, 15, 21, 22, 23, 24, 25, 26, 27, 28, 44, 45, 46, 52, 53, 59, 60, 63, 64, 65, 66, 71, 72, 81, 85, 89, 90, 91, 93, 96, 102, 103, 104, 107, 109, 119, 120, 121, 122, 123, 124, 125, 128, 130, 131, 137, 142, 143, 146, 147, 148, 156, 157, 158, 159, 160, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 186, 187, 191, 192, 193, 195, 271, 331, 332, 334, 342, 343, 349, 350, 361, 388, 397, 398, 401, 402, 411, 412, 413, 414, 418, 419, 422, 427, 428, 440, 441, 492], "without": [42, 48, 57, 82, 87, 141, 312, 326, 400, 467, 471, 472, 478, 479, 483, 487, 490, 492], "word": [21, 102, 103, 104, 107, 109, 388, 433], "work": [48, 57, 295, 345, 459, 467, 468, 471, 485, 486, 491, 492], "worker": [470, 480, 492], "workflow": 468, "workload": 492, "workstat": 492, "worri": 492, "wors": 47, "would": [32, 58, 82, 141, 168, 185, 269, 270, 295, 310, 337, 408, 417, 421, 429, 446, 463, 471, 472, 477, 478, 479, 491, 492], "wrap": [54, 113, 345, 355, 425], "wrapper": 492, "write": [49, 74, 113, 190, 312, 322, 400, 471, 472, 478, 481, 492], "writeabl": [4, 289, 312], "writebackifcopi": [289, 312], "written": [113, 289, 312, 322, 483, 491, 493], "wrong": 57, "wsl": 482, "www": [471, 472, 478], "x": [12, 22, 23, 24, 25, 26, 28, 43, 52, 53, 59, 60, 65, 66, 68, 71, 72, 79, 80, 90, 91, 93, 96, 98, 99, 100, 103, 104, 105, 112, 120, 125, 134, 138, 142, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 166, 169, 171, 175, 176, 177, 178, 182, 185, 190, 193, 196, 289, 312, 317, 331, 342, 349, 350, 351, 356, 391, 397, 402, 404, 411, 412, 413, 414, 418, 419, 427, 428, 441, 449, 471, 473, 474, 476, 477, 485, 491, 492, 493], "x1": [13, 27, 44, 45, 46, 63, 81, 89, 119, 121, 122, 123, 124, 128, 130, 131, 137, 156, 157, 158, 159, 160, 179, 180, 181, 183, 184, 187, 190, 191, 192, 195, 332, 334, 343, 398, 401, 422, 440], "x2": [13, 27, 44, 45, 46, 63, 81, 89, 119, 121, 122, 123, 124, 128, 130, 131, 137, 156, 157, 158, 159, 160, 179, 180, 181, 183, 184, 187, 190, 191, 192, 195, 332, 334, 343, 398, 401, 422, 440], "x86": 492, "x86_64": [482, 492], "x_": 477, "x_1": 68, "x_2": 68, "x_current": 491, "x_i": 68, "x_j": 68, "x_n": 68, "x_prev": 491, "xeon": 492, "xi": 190, "xk": 477, "xk_old": 477, "xlabel": [471, 473], "xn": 190, "xor": [46, 184], "xorwow": 355, "xv": 190, "xy": 190, "y": [13, 27, 44, 45, 46, 63, 68, 81, 89, 100, 105, 119, 121, 122, 123, 124, 128, 130, 131, 137, 143, 152, 156, 157, 158, 159, 160, 179, 180, 181, 183, 184, 187, 190, 191, 192, 195, 205, 207, 291, 323, 332, 334, 340, 343, 348, 393, 398, 401, 405, 422, 440, 449, 474, 476, 477, 491, 492, 493], "y1": [125, 193], "y2": [125, 193], "year": [369, 492], "yellow": 476, "yet": [8, 442], "yield": [29, 30, 69, 70, 199, 200, 206, 449, 486, 492], "ylabel": [471, 473], "you": [49, 64, 74, 85, 186, 189, 190, 203, 396, 425, 467, 468, 471, 472, 473, 476, 477, 478, 479, 480, 481, 482, 489, 491, 492, 493], "your": [467, 480, 481, 491, 492, 493], "yueh": 479, "yv": 190, "z": [18, 295, 356, 375, 491, 493], "zero": [0, 3, 8, 18, 33, 41, 42, 47, 61, 67, 79, 95, 97, 98, 99, 100, 101, 102, 103, 104, 106, 107, 109, 110, 112, 115, 132, 133, 144, 145, 149, 150, 151, 152, 155, 162, 163, 164, 165, 167, 169, 185, 196, 200, 208, 303, 330, 333, 338, 357, 370, 396, 412, 433, 434, 437, 443, 445, 451, 473, 476, 478, 492], "zero_point": 476, "zerodivisionerror": 41, "zeros_lik": [0, 3, 8], "zeta": 392, "zipf": [0, 3, 8], "zsh": 492}, "titles": ["&lt;no title&gt;", "cupynumeric.random.BitGenerator", "cupynumeric.random.Generator", "Convolve and Correlate", "cupynumeric.ndarray", "Binary operations", "cupynumeric.broadcast", "Classes", "Project comparisons", "Array creation routines", "Data type routines", "Discrete Fourier Transform (<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">cupynumeric.fft</span></code>)", "cupynumeric.absolute", "cupynumeric.add", "cupynumeric.all", "cupynumeric.allclose", "cupynumeric.amax", "cupynumeric.amin", "cupynumeric.angle", "cupynumeric.any", "cupynumeric.append", "cupynumeric.arange", "cupynumeric.arccos", "cupynumeric.arccosh", "cupynumeric.arcsin", "cupynumeric.arcsinh", "cupynumeric.arctan", "cupynumeric.arctan2", "cupynumeric.arctanh", "cupynumeric.argmax", "cupynumeric.argmin", "cupynumeric.argpartition", "cupynumeric.argsort", "cupynumeric.argwhere", "cupynumeric.array", "cupynumeric.array_equal", "cupynumeric.array_split", "cupynumeric.asarray", "cupynumeric.atleast_1d", "cupynumeric.atleast_2d", "cupynumeric.atleast_3d", "cupynumeric.average", "cupynumeric.bartlett", "cupynumeric.bincount", "cupynumeric.bitwise_and", "cupynumeric.bitwise_or", "cupynumeric.bitwise_xor", "cupynumeric.blackman", "cupynumeric.block", "cupynumeric.broadcast_arrays", "cupynumeric.broadcast_shapes", "cupynumeric.broadcast_to", "cupynumeric.cbrt", "cupynumeric.ceil", "cupynumeric.choose", "cupynumeric.clip", "cupynumeric.column_stack", "cupynumeric.compress", "cupynumeric.concatenate", "cupynumeric.conj", "cupynumeric.conjugate", "cupynumeric.convolve", "cupynumeric.copy", "cupynumeric.copysign", "cupynumeric.copyto", "cupynumeric.cos", "cupynumeric.cosh", "cupynumeric.count_nonzero", "cupynumeric.cov", "cupynumeric.cumprod", "cupynumeric.cumsum", "cupynumeric.deg2rad", "cupynumeric.degrees", "cupynumeric.delete", "cupynumeric.diag", "cupynumeric.diag_indices", "cupynumeric.diag_indices_from", "cupynumeric.diagflat", "cupynumeric.diagonal", "cupynumeric.diff", "cupynumeric.digitize", "cupynumeric.divide", "cupynumeric.dot", "cupynumeric.dsplit", "cupynumeric.dstack", "cupynumeric.einsum", "cupynumeric.einsum_path", "cupynumeric.empty", "cupynumeric.empty_like", "cupynumeric.equal", "cupynumeric.exp", "cupynumeric.exp2", "cupynumeric.expand_dims", "cupynumeric.expm1", "cupynumeric.extract", "cupynumeric.eye", "cupynumeric.fabs", "cupynumeric.fft.fft", "cupynumeric.fft.fft2", "cupynumeric.fft.fftn", "cupynumeric.fft.fftshift", "cupynumeric.fft.hfft", "cupynumeric.fft.ifft", "cupynumeric.fft.ifft2", "cupynumeric.fft.ifftn", "cupynumeric.fft.ifftshift", "cupynumeric.fft.ihfft", "cupynumeric.fft.irfft", "cupynumeric.fft.irfft2", "cupynumeric.fft.irfftn", "cupynumeric.fft.rfft", "cupynumeric.fft.rfft2", "cupynumeric.fft.rfftn", "cupynumeric.fill_diagonal", "cupynumeric.find_common_type", "cupynumeric.flatnonzero", "cupynumeric.flip", "cupynumeric.fliplr", "cupynumeric.flipud", "cupynumeric.float_power", "cupynumeric.floor", "cupynumeric.floor_divide", "cupynumeric.fmax", "cupynumeric.fmin", "cupynumeric.fmod", "cupynumeric.frexp", "cupynumeric.full", "cupynumeric.full_like", "cupynumeric.gcd", "cupynumeric.gradient", "cupynumeric.greater", "cupynumeric.greater_equal", "cupynumeric.hamming", "cupynumeric.hanning", "cupynumeric.histogram", "cupynumeric.hsplit", "cupynumeric.hstack", "cupynumeric.hypot", "cupynumeric.identity", "cupynumeric.imag", "cupynumeric.indices", "cupynumeric.inner", "cupynumeric.invert", "cupynumeric.isclose", "cupynumeric.iscomplex", "cupynumeric.iscomplexobj", "cupynumeric.isfinite", "cupynumeric.isinf", "cupynumeric.isnan", "cupynumeric.isneginf", "cupynumeric.isposinf", "cupynumeric.isreal", "cupynumeric.isrealobj", "cupynumeric.isscalar", "cupynumeric.ix_", "cupynumeric.kaiser", "cupynumeric.lcm", "cupynumeric.ldexp", "cupynumeric.left_shift", "cupynumeric.less", "cupynumeric.less_equal", "cupynumeric.linalg.cholesky", "cupynumeric.linalg.eig", "cupynumeric.linalg.eigh", "cupynumeric.linalg.eigvals", "cupynumeric.linalg.eigvalsh", "cupynumeric.linalg.expm", "cupynumeric.linalg.matrix_power", "cupynumeric.linalg.multi_dot", "cupynumeric.linalg.norm", "cupynumeric.linalg.qr", "cupynumeric.linalg.solve", "cupynumeric.linalg.svd", "cupynumeric.linspace", "cupynumeric.load", "cupynumeric.log", "cupynumeric.log10", "cupynumeric.log1p", "cupynumeric.log2", "cupynumeric.logaddexp", "cupynumeric.logaddexp2", "cupynumeric.logical_and", "cupynumeric.logical_not", "cupynumeric.logical_or", "cupynumeric.logical_xor", "cupynumeric.mask_indices", "cupynumeric.matmul", "cupynumeric.maximum", "cupynumeric.mean", "cupynumeric.median", "cupynumeric.meshgrid", "cupynumeric.minimum", "cupynumeric.mod", "cupynumeric.modf", "cupynumeric.moveaxis", "cupynumeric.multiply", "cupynumeric.nan_to_num", "cupynumeric.nanargmax", "cupynumeric.nanargmin", "cupynumeric.nancumprod", "cupynumeric.nancumsum", "cupynumeric.nanmax", "cupynumeric.nanmean", "cupynumeric.nanmedian", "cupynumeric.nanmin", "cupynumeric.nanpercentile", "cupynumeric.nanprod", "cupynumeric.nanquantile", "cupynumeric.nansum", "cupynumeric.ndarray.T", "cupynumeric.ndarray.__abs__", "cupynumeric.ndarray.__add__", "cupynumeric.ndarray.__and__", "cupynumeric.ndarray.__array__", "cupynumeric.ndarray.__bool__", "cupynumeric.ndarray.__complex__", "cupynumeric.ndarray.__contains__", "cupynumeric.ndarray.__copy__", "cupynumeric.ndarray.__deepcopy__", "cupynumeric.ndarray.__divmod__", "cupynumeric.ndarray.__eq__", "cupynumeric.ndarray.__float__", "cupynumeric.ndarray.__floordiv__", "cupynumeric.ndarray.__ge__", "cupynumeric.ndarray.__getitem__", "cupynumeric.ndarray.__gt__", "cupynumeric.ndarray.__iadd__", "cupynumeric.ndarray.__iand__", "cupynumeric.ndarray.__ifloordiv__", "cupynumeric.ndarray.__ilshift__", "cupynumeric.ndarray.__imatmul__", "cupynumeric.ndarray.__imod__", "cupynumeric.ndarray.__imul__", "cupynumeric.ndarray.__index__", "cupynumeric.ndarray.__int__", "cupynumeric.ndarray.__invert__", "cupynumeric.ndarray.__ior__", "cupynumeric.ndarray.__ipow__", "cupynumeric.ndarray.__irshift__", "cupynumeric.ndarray.__isub__", "cupynumeric.ndarray.__itruediv__", "cupynumeric.ndarray.__ixor__", "cupynumeric.ndarray.__le__", "cupynumeric.ndarray.__len__", "cupynumeric.ndarray.__lshift__", "cupynumeric.ndarray.__lt__", "cupynumeric.ndarray.__matmul__", "cupynumeric.ndarray.__mod__", "cupynumeric.ndarray.__mul__", "cupynumeric.ndarray.__ne__", "cupynumeric.ndarray.__neg__", "cupynumeric.ndarray.__new__", "cupynumeric.ndarray.__or__", "cupynumeric.ndarray.__pos__", "cupynumeric.ndarray.__pow__", "cupynumeric.ndarray.__reduce__", "cupynumeric.ndarray.__repr__", "cupynumeric.ndarray.__rmatmul__", "cupynumeric.ndarray.__rshift__", "cupynumeric.ndarray.__setitem__", "cupynumeric.ndarray.__setstate__", "cupynumeric.ndarray.__str__", "cupynumeric.ndarray.__sub__", "cupynumeric.ndarray.__truediv__", "cupynumeric.ndarray.__xor__", "cupynumeric.ndarray.all", "cupynumeric.ndarray.any", "cupynumeric.ndarray.argmax", "cupynumeric.ndarray.argmin", "cupynumeric.ndarray.argpartition", "cupynumeric.ndarray.argsort", "cupynumeric.ndarray.astype", "cupynumeric.ndarray.base", "cupynumeric.ndarray.choose", "cupynumeric.ndarray.clip", "cupynumeric.ndarray.compress", "cupynumeric.ndarray.conj", "cupynumeric.ndarray.conjugate", "cupynumeric.ndarray.copy", "cupynumeric.ndarray.ctypes", "cupynumeric.ndarray.cumprod", "cupynumeric.ndarray.cumsum", "cupynumeric.ndarray.data", "cupynumeric.ndarray.diagonal", "cupynumeric.ndarray.dot", "cupynumeric.ndarray.dtype", "cupynumeric.ndarray.dump", "cupynumeric.ndarray.dumps", "cupynumeric.ndarray.fill", "cupynumeric.ndarray.flags", "cupynumeric.ndarray.flat", "cupynumeric.ndarray.flatten", "cupynumeric.ndarray.flip", "cupynumeric.ndarray.getfield", "cupynumeric.ndarray.imag", "cupynumeric.ndarray.item", "cupynumeric.ndarray.itemset", "cupynumeric.ndarray.itemsize", "cupynumeric.ndarray.max", "cupynumeric.ndarray.mean", "cupynumeric.ndarray.min", "cupynumeric.ndarray.nbytes", "cupynumeric.ndarray.ndim", "cupynumeric.ndarray.nonzero", "cupynumeric.ndarray.partition", "cupynumeric.ndarray.prod", "cupynumeric.ndarray.put", "cupynumeric.ndarray.ravel", "cupynumeric.ndarray.real", "cupynumeric.ndarray.reshape", "cupynumeric.ndarray.searchsorted", "cupynumeric.ndarray.setfield", "cupynumeric.ndarray.setflags", "cupynumeric.ndarray.shape", "cupynumeric.ndarray.size", "cupynumeric.ndarray.sort", "cupynumeric.ndarray.squeeze", "cupynumeric.ndarray.strides", "cupynumeric.ndarray.sum", "cupynumeric.ndarray.swapaxes", "cupynumeric.ndarray.take", "cupynumeric.ndarray.tobytes", "cupynumeric.ndarray.tofile", "cupynumeric.ndarray.tolist", "cupynumeric.ndarray.tostring", "cupynumeric.ndarray.trace", "cupynumeric.ndarray.transpose", "cupynumeric.ndarray.unique", "cupynumeric.ndarray.var", "cupynumeric.ndarray.view", "cupynumeric.ndim", "cupynumeric.negative", "cupynumeric.nextafter", "cupynumeric.nonzero", "cupynumeric.not_equal", "cupynumeric.ones", "cupynumeric.ones_like", "cupynumeric.outer", "cupynumeric.packbits", "cupynumeric.partition", "cupynumeric.percentile", "cupynumeric.place", "cupynumeric.positive", "cupynumeric.power", "cupynumeric.prod", "cupynumeric.put", "cupynumeric.put_along_axis", "cupynumeric.putmask", "cupynumeric.quantile", "cupynumeric.rad2deg", "cupynumeric.radians", "cupynumeric.random.beta", "cupynumeric.random.binomial", "cupynumeric.random.bytes", "cupynumeric.random.chisquare", "cupynumeric.random.default_rng", "cupynumeric.random.exponential", "cupynumeric.random.f", "cupynumeric.random.gamma", "cupynumeric.random.geometric", "cupynumeric.random.gumbel", "cupynumeric.random.hypergeometric", "cupynumeric.random.laplace", "cupynumeric.random.logistic", "cupynumeric.random.lognormal", "cupynumeric.random.logseries", "cupynumeric.random.negative_binomial", "cupynumeric.random.noncentral_chisquare", "cupynumeric.random.noncentral_f", "cupynumeric.random.normal", "cupynumeric.random.pareto", "cupynumeric.random.poisson", "cupynumeric.random.power", "cupynumeric.random.rand", "cupynumeric.random.randint", "cupynumeric.random.randn", "cupynumeric.random.random", "cupynumeric.random.random_integers", "cupynumeric.random.random_sample", "cupynumeric.random.ranf", "cupynumeric.random.rayleigh", "cupynumeric.random.sample", "cupynumeric.random.seed", "cupynumeric.random.standard_cauchy", "cupynumeric.random.standard_exponential", "cupynumeric.random.standard_gamma", "cupynumeric.random.standard_t", "cupynumeric.random.triangular", "cupynumeric.random.uniform", "cupynumeric.random.vonmises", "cupynumeric.random.wald", "cupynumeric.random.weibull", "cupynumeric.random.zipf", "cupynumeric.ravel", "cupynumeric.ravel_multi_index", "cupynumeric.real", "cupynumeric.real_if_close", "cupynumeric.reciprocal", "cupynumeric.remainder", "cupynumeric.repeat", "cupynumeric.reshape", "cupynumeric.right_shift", "cupynumeric.rint", "cupynumeric.roll", "cupynumeric.roots", "cupynumeric.rot90", "cupynumeric.round", "cupynumeric.row_stack", "cupynumeric.searchsorted", "cupynumeric.select", "cupynumeric.shape", "cupynumeric.sign", "cupynumeric.signbit", "cupynumeric.sin", "cupynumeric.sinh", "cupynumeric.sort", "cupynumeric.sort_complex", "cupynumeric.split", "cupynumeric.sqrt", "cupynumeric.square", "cupynumeric.squeeze", "cupynumeric.stack", "cupynumeric.subtract", "cupynumeric.sum", "cupynumeric.swapaxes", "cupynumeric.take", "cupynumeric.take_along_axis", "cupynumeric.tan", "cupynumeric.tanh", "cupynumeric.tensordot", "cupynumeric.tile", "cupynumeric.trace", "cupynumeric.transpose", "cupynumeric.tri", "cupynumeric.tril", "cupynumeric.tril_indices", "cupynumeric.tril_indices_from", "cupynumeric.triu", "cupynumeric.triu_indices", "cupynumeric.triu_indices_from", "cupynumeric.true_divide", "cupynumeric.trunc", "cupynumeric.unique", "cupynumeric.unpackbits", "cupynumeric.unravel_index", "cupynumeric.var", "cupynumeric.vdot", "cupynumeric.vsplit", "cupynumeric.vstack", "cupynumeric.where", "cupynumeric.zeros", "cupynumeric.zeros_like", "API Reference", "Indexing routines", "Input and output", "Linear algebra (<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">cupynumeric.linalg</span></code>)", "Logic functions", "Array manipulation routines", "Mathematical functions", "The N-Dimensional array (<code class=\"xref py py-class docutils literal notranslate\"><span class=\"pre\">cupynumeric.ndarray</span></code>)", "Random sampling (<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">cupynumeric.random</span></code>)", "Routines", "Set routines", "Settings", "Sorting, searching, and counting", "Statistics", "Window functions", "Contributing to cuPyNumeric", "Building from source", "Developer guide", "Running tests", "Black-Scholes options pricing", "Cholesky decomposition", "Compact Finite Difference Scheme", "Edge Detection", "Examples", "K-Means Clustering Algorithm", "Newton Raphson Method In Two Dimensions", "Jacobi stencil", "TorchSWE case study", "Frequently Asked Questions", "NVIDIA cuPyNumeric", "Installation", "Third-party notices", "Advanced topics", "Differences with Numpy", "Performance Benchmarking", "Howtos", "Measure API coverage", "Trying Numpy code without changes", "User guide", "Best practices", "Tutorial", "Usage"], "titleterms": {"1": 492, "2": 492, "3": 492, "In": 477, "Of": 480, "The": [459, 467], "__abs__": 210, "__add__": 211, "__and__": 212, "__array__": 213, "__bool__": 214, "__complex__": 215, "__contains__": 216, "__copy__": 217, "__deepcopy__": 218, "__divmod__": 219, "__eq__": 220, "__float__": 221, "__floordiv__": 222, "__ge__": 223, "__getitem__": 224, "__gt__": 225, "__iadd__": 226, "__iand__": 227, "__ifloordiv__": 228, "__ilshift__": 229, "__imatmul__": 230, "__imod__": 231, "__imul__": 232, "__index__": 233, "__int__": 234, "__invert__": 235, "__ior__": 236, "__ipow__": 237, "__irshift__": 238, "__isub__": 239, "__itruediv__": 240, "__ixor__": 241, "__le__": 242, "__len__": 243, "__lshift__": 244, "__lt__": 245, "__matmul__": 246, "__mod__": 247, "__mul__": 248, "__ne__": 249, "__neg__": 250, "__new__": 251, "__or__": 252, "__pos__": 253, "__pow__": 254, "__reduce__": 255, "__repr__": 256, "__rmatmul__": 257, "__rshift__": 258, "__setitem__": 259, "__setstate__": 260, "__str__": 261, "__sub__": 262, "__truediv__": 263, "__xor__": 264, "about": 480, "absolut": 12, "add": 13, "advanc": [3, 468, 484, 491, 492], "algebra": [8, 455], "algorithm": 476, "all": [14, 265], "allclos": 15, "alloc": [491, 492], "amax": 16, "amin": 17, "an": 491, "angl": 18, "ani": [19, 266], "anoth": 491, "anti": 480, "api": [8, 452, 488, 491], "append": 20, "applic": [480, 491], "ar": 480, "arang": 21, "arcco": 22, "arccosh": 23, "arcsin": 24, "arcsinh": 25, "arctan": 26, "arctan2": 27, "arctanh": 28, "argmax": [29, 267], "argmin": [30, 268], "argpartit": [31, 269], "argsort": [32, 270], "argument": [480, 484, 485, 491], "argwher": 33, "arithmet": [458, 459], "arrai": [3, 8, 9, 34, 453, 456, 457, 459, 491, 492], "array_equ": 35, "array_split": 36, "asarrai": 37, "ask": 480, "astyp": 271, "atleast_1d": 38, "atleast_2d": 39, "atleast_3d": 40, "attribut": 459, "avail": 480, "averag": [41, 465], "avoid": [491, 492], "background": [473, 474, 476, 477], "bartlett": 42, "base": [272, 491, 492], "basic": [457, 468, 470, 492], "begin": 467, "behavior": 485, "benchmark": 486, "best": [491, 492], "beta": 351, "better": 491, "between": 480, "binari": [5, 454], "bincount": 43, "binomi": 352, "bit": [3, 5, 460], "bitgener": 1, "bitwise_and": 44, "bitwise_or": 45, "bitwise_xor": 46, "black": [471, 492], "blackman": 47, "block": [48, 491], "boolean": [491, 492], "broadcast": 6, "broadcast_arrai": 49, "broadcast_shap": 50, "broadcast_to": 51, "build": [9, 468, 482], "byte": 353, "calcul": 459, "call": 488, "can": 480, "case": 479, "cbrt": 52, "ceil": 53, "ceph": 483, "certif": 467, "chang": [457, 476, 489], "chisquar": 354, "choleski": [161, 472], "choos": [54, 273], "class": 7, "clip": [55, 274], "cluster": [476, 492], "cmake": 468, "co": 65, "code": [467, 480, 489, 492], "column_stack": 56, "compact": 473, "comparison": [8, 456, 459], "complex": 458, "compress": [57, 275], "comput": 492, "concaten": 58, "conda": [482, 492], "configur": 470, "conj": [59, 276], "conjug": [60, 277, 492], "construct": 459, "content": [456, 481], "contribut": 467, "convers": 459, "convolv": [3, 61], "copi": [62, 278, 485, 491], "copysign": 63, "copyto": 64, "correl": [3, 465], "cosh": 66, "count": [3, 464], "count_nonzero": 67, "cov": 68, "coverag": 488, "cpu": [482, 492], "creation": [3, 9], "ctype": 279, "cumprod": [69, 280], "cumsum": [70, 281], "cupi": 480, "cupynumer": [1, 2, 4, 6, 8, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 455, 459, 460, 467, 480, 481, 491, 492], "data": [9, 10, 282, 453, 457, 459, 460], "datatyp": 485, "dco": 467, "decomposit": [455, 472], "default": 480, "default_rng": 355, "deg2rad": 71, "degre": 72, "delet": 73, "depend": 468, "design": 491, "detail": 488, "detect": [474, 492], "determin": 480, "develop": [467, 469], "diag": 74, "diag_indic": 75, "diag_indices_from": 76, "diagflat": 77, "diagon": [78, 283], "diff": 79, "differ": [458, 473, 480, 485], "digit": 80, "dimens": [457, 477], "dimension": [8, 459], "discret": [3, 8, 11], "distribut": 460, "divid": 81, "do": [467, 480], "doctor": 463, "doctor_filenam": 463, "doctor_format": 463, "doe": 480, "doesn": 480, "don": 480, "dot": [82, 284], "dsplit": 83, "dstack": 84, "dtype": 285, "dump": [286, 287], "edg": [474, 492], "eig": 162, "eigenvalu": 3, "eigh": 163, "eigval": 164, "eigvalsh": 165, "einsum": [3, 85], "einsum_path": 86, "element": [457, 491], "elementwis": 5, "empti": 87, "empty_lik": 88, "equal": 89, "equat": 455, "error": 480, "exampl": [475, 492], "execut": [480, 484], "exercis": 476, "exist": 9, "exp": 90, "exp2": 91, "expand_dim": 92, "expm": 166, "expm1": 93, "expon": 458, "exponenti": 356, "extract": 94, "extrema": 458, "ey": 95, "f": 357, "fab": 96, "factor": 3, "fallback_stacktrac": 463, "fast_math": 463, "faster": 491, "fft": [11, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112], "fft2": 98, "fftn": 99, "fftshift": 100, "file": 454, "fill": 288, "fill_diagon": 113, "find": 458, "find_common_typ": 114, "finit": 473, "flag": 289, "flat": 290, "flatnonzero": 115, "flatten": 291, "flip": [116, 292], "fliplr": 117, "flipud": 118, "float": 458, "float_pow": 119, "floor": 120, "floor_divid": 121, "fmax": 122, "fmin": 123, "fmod": 124, "force_thunk": 463, "format": 467, "fourier": [3, 8, 11], "frequent": 480, "frexp": 125, "from": [9, 457, 468, 480, 482], "full": 126, "full_lik": 127, "function": [3, 455, 456, 458, 466, 491], "gamma": 358, "gcd": 128, "gener": [2, 453, 460, 491], "geometr": 359, "getfield": 293, "gpu": [480, 482, 492], "gradient": [129, 492], "greater": 130, "greater_equ": 131, "guid": [469, 490], "guidelin": [486, 491], "gumbel": 360, "ham": 132, "han": 133, "handl": [458, 480], "hardwar": 492, "have": 480, "helper": 11, "hermitian": 11, "hfft": 101, "histogram": [134, 465], "how": [467, 476, 480], "howto": 487, "hpc": 492, "hsplit": 135, "hstack": 136, "hyperbol": 458, "hypergeometr": 361, "hypot": 137, "i": [467, 480, 491], "ident": 138, "ifft": 102, "ifft2": 103, "ifftn": 104, "ifftshift": 105, "ihfft": 106, "imag": [139, 294], "implement": [473, 474, 476, 477], "index": [3, 453, 485, 491, 492], "indic": [140, 481], "inner": 141, "input": [3, 454, 476], "insert": 453, "instal": [482, 492], "instead": [485, 491], "introduct": 492, "invert": [142, 455], "irfft": 107, "irfft2": 108, "irfftn": 109, "isclos": 143, "iscomplex": 144, "iscomplexobj": 145, "isfinit": 146, "isinf": 147, "isnan": 148, "isneginf": 149, "isposinf": 150, "isreal": 151, "isrealobj": 152, "isscalar": 153, "item": [295, 459], "items": 297, "itemset": 296, "iter": 491, "ix_": 154, "jacobi": [478, 492], "join": 457, "jupyt": 480, "k": 476, "kaiser": 155, "kind": 457, "kit": 483, "kmean": 476, "laplac": 362, "laptop": 480, "layout": 459, "lcm": 156, "ldexp": 157, "learn": [473, 474, 476, 477], "left_shift": 158, "legales": 467, "legat": [480, 484, 486], "legion": [480, 484], "less": 159, "less_equ": 160, "let": 476, "level": 8, "licens": 482, "like": [453, 457], "linalg": [161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 455], "linear": [8, 455], "linspac": 173, "linux": 492, "list": [491, 492], "load": 174, "log": 175, "log10": 176, "log1p": 177, "log2": 178, "logaddexp": 179, "logaddexp2": 180, "logarithm": 458, "logic": [3, 456, 491], "logical_and": 181, "logical_not": 182, "logical_or": 183, "logical_xor": 184, "logist": 363, "lognorm": 364, "logseri": 365, "loop": [491, 492], "lu": 3, "make": 462, "manag": 484, "manipul": [3, 457, 459, 491], "manual": 484, "mask": [491, 492], "mask_indic": 185, "mathemat": [3, 458, 491], "matmul": 186, "matmul_cache_s": 463, "matric": [9, 455], "matrix": [3, 455, 459, 492], "matrix_pow": 167, "max": 298, "maximum": 187, "mean": [188, 299, 476, 480], "measur": 488, "median": 189, "memori": [459, 480, 491], "merg": 491, "meshgrid": 190, "method": [459, 477], "min": 300, "min_cpu_chunk": 463, "min_gpu_chunk": 463, "min_omp_chunk": 463, "minimum": 191, "miscellan": [3, 458], "mod": 192, "modf": 193, "modul": 8, "more": 480, "moveaxi": 194, "multi": [8, 484, 492], "multi_dot": 168, "multipl": [459, 492], "multipli": 195, "my": 480, "n": 459, "nan_to_num": 196, "nanargmax": 197, "nanargmin": 198, "nancumprod": 199, "nancumsum": 200, "nanmax": 201, "nanmean": 202, "nanmedian": 203, "nanmin": 204, "nanpercentil": 205, "nanprod": 206, "nanquantil": 207, "nansum": 208, "nativ": [491, 492], "nbyte": 301, "ndarrai": [3, 4, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 459], "ndim": [302, 330], "neg": 331, "negative_binomi": 366, "newton": 477, "nextaft": 332, "node": [484, 492], "noncentral_chisquar": 367, "noncentral_f": 368, "nonzero": [303, 333], "norm": [169, 455], "normal": 369, "not_equ": 334, "notebook": 480, "notic": 483, "npy": 454, "npz": 454, "number": [455, 457, 458, 476], "numer": 9, "numpi": [8, 454, 480, 483, 485, 489, 491, 492], "numpy_compat": 463, "nvidia": 481, "o": 491, "observ": 476, "ones": 335, "ones_lik": 336, "openbla": 468, "oper": [3, 5, 453, 456, 457, 458, 459, 491, 492], "option": [471, 492], "order": [465, 485], "origin": 467, "other": [455, 459, 492], "out": 480, "outcom": [473, 474, 476, 477], "outer": 337, "output": [3, 454, 491], "overal": 488, "overhead": 491, "pack": [3, 5], "packag": 482, "packbit": 338, "pad": 3, "pareto": 370, "parti": 483, "partit": [304, 339], "pass": [480, 484], "pattern": 480, "penalti": 491, "percentil": 340, "perform": [486, 491], "pip": [468, 492], "pitfal": 491, "place": 341, "point": 458, "poisson": 371, "posit": 342, "power": [343, 372], "practic": [491, 492], "preload_cudalib": 463, "price": 471, "process": 467, "prod": [305, 344], "product": [455, 458], "program": 3, "project": 8, "proper": 462, "put": [306, 345], "put_along_axi": 346, "putmask": [347, 491], "pypi": 482, "python": 480, "qr": 170, "quantil": 348, "question": 480, "rad2deg": 349, "radian": 350, "rand": 373, "randint": 374, "randn": 375, "random": [1, 2, 3, 8, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 460, 483], "random_integ": 377, "random_sampl": 378, "ranf": 379, "rang": 9, "raphson": 477, "ration": 458, "ravel": [307, 393], "ravel_multi_index": 394, "rayleigh": 380, "read": 480, "real": [11, 308, 395], "real_if_clos": 396, "realm": [480, 484], "rearrang": 457, "reciproc": 397, "recommend": 491, "reduc": 491, "reduct": 485, "refer": 452, "relat": 3, "remaind": 398, "remov": 457, "repeat": 399, "report": 488, "report_coverag": 463, "report_dump_callstack": 463, "report_dump_csv": 463, "requir": [467, 492], "reshap": [309, 400, 491], "resourc": 492, "result": [480, 491], "return": [485, 491], "review": 467, "rfft": 110, "rfft2": 111, "rfftn": 112, "right_shift": 401, "rint": 402, "roll": 403, "root": 404, "rot90": 405, "round": [406, 458], "routin": [3, 9, 10, 11, 453, 457, 458, 461, 462, 491], "row_stack": 407, "run": [470, 476, 492], "sampl": [3, 8, 381, 460, 492], "scalar": 485, "scheme": 473, "schole": [471, 492], "search": [3, 464], "searchsort": [310, 408], "see": 476, "seed": [382, 460], "select": [409, 459], "set": [3, 462, 463, 476], "setfield": 311, "setflag": 312, "setup": 492, "shape": [9, 313, 410, 457, 459, 485], "sign": [411, 467], "signbit": 412, "simpl": 460, "sin": 413, "singl": 492, "sinh": 414, "size": 314, "slower": 480, "solv": [171, 455], "sort": [3, 315, 415, 464], "sort_complex": 416, "sourc": [468, 482], "special": 459, "split": [417, 457], "sqrt": 418, "squar": 419, "squeez": [316, 420], "stack": [421, 488, 491], "stage": 470, "standard": 11, "standard_cauchi": 383, "standard_exponenti": 384, "standard_gamma": 385, "standard_t": 386, "state": 460, "statist": [3, 465], "stencil": [478, 492], "stride": 317, "studi": 479, "subtract": 422, "sum": [318, 423, 458], "support": 485, "svd": [3, 172], "swapax": [319, 424], "t": [209, 480], "tabl": 481, "take": [320, 425], "take_along_axi": 426, "tan": 427, "tanh": 428, "task": [480, 484, 491], "tbli": [468, 483], "tensordot": 429, "test": [10, 456, 463, 470], "than": 480, "thi": 480, "third": 483, "three": 492, "through": [468, 491], "tile": [430, 457], "time": [480, 486], "tip": 492, "tobyt": 321, "tofil": 322, "tolist": 323, "tool": 486, "top": 492, "topic": [468, 484], "torchsw": 479, "tostr": 324, "trace": [325, 431], "transform": [3, 8, 11], "transpos": [326, 432, 457], "tri": 433, "triangular": 387, "trigonometr": 458, "tril": 434, "tril_indic": 435, "tril_indices_from": 436, "triu": 437, "triu_indic": 438, "triu_indices_from": 439, "true_divid": 440, "trunc": 441, "truth": 456, "try": 489, "tutori": 492, "two": 477, "type": [10, 456, 459], "ufunc": 3, "uniform": 388, "uniqu": [327, 442], "unpack": 3, "unpackbit": 443, "unravel_index": 444, "updat": 491, "us": [476, 480, 484, 486, 491, 492], "usag": [470, 493], "user": 490, "v": [8, 480, 492], "valu": [9, 456, 485], "var": [328, 445], "varianc": 465, "variant": [480, 482], "variou": 466, "vdot": 446, "vector": [455, 491], "verifi": 482, "version": 480, "view": [329, 485, 491], "vonmis": 389, "vsplit": 447, "vstack": 448, "wald": 390, "warn": [463, 480], "weibul": 391, "what": 480, "when": 480, "where": [449, 480], "why": 480, "window": 466, "wise": 491, "without": 489, "your": 482, "zero": 450, "zeros_lik": 451, "zipf": 392}})