Search.setIndex({"alltitles": {"1. Use cuPyNumeric arrays, AVOID native lists": [[487, "use-cupynumeric-arrays-avoid-native-lists"]], "2. Use array-based operations, AVOID loops with indexing": [[487, "use-array-based-operations-avoid-loops-with-indexing"]], "3. Use boolean masks, AVOID advanced indexing": [[487, "use-boolean-masks-avoid-advanced-indexing"]], "API Reference": [[447, null]], "Advanced statistics": [[3, "advanced-statistics"]], "Advanced topics": [[463, "advanced-topics"], [479, null]], "Arithmetic operations": [[453, "arithmetic-operations"]], "Arithmetic, matrix multiplication, and comparison operations": [[454, "arithmetic-matrix-multiplication-and-comparison-operations"]], "Array Attributes": [[454, "array-attributes"]], "Array Manipulation Routine Pitfalls": [[486, "array-manipulation-routine-pitfalls"]], "Array Methods": [[454, "array-methods"]], "Array contents": [[451, "array-contents"]], "Array conversion": [[454, "array-conversion"]], "Array creation": [[3, "array-creation"]], "Array creation (ndarray)": [[3, "array-creation-ndarray"]], "Array creation routines": [[9, null]], "Array manipulation": [[3, "array-manipulation"]], "Array manipulation (ndarray)": [[3, "array-manipulation-ndarray"]], "Array manipulation routines": [[452, null]], "Array type testing": [[451, "array-type-testing"]], "Averages and variances": [[460, "averages-and-variances"]], "Avoid blocking operations": [[486, "avoid-blocking-operations"]], "Background": [[468, "Background"], [469, "Background"], [471, "Background"], [472, "Background"]], "Basic Linux installation": [[487, "basic-linux-installation"]], "Basic build": [[463, "basic-build"]], "Basic operations": [[452, "basic-operations"]], "Basic usage": [[465, "basic-usage"]], "Best practices": [[486, null], [487, "best-practices"]], "Binary operations": [[5, null]], "Bit Generators": [[455, "bit-generators"]], "Bit packing": [[5, "bit-packing"]], "Black-Scholes": [[487, "black-scholes"]], "Black-Scholes options pricing": [[466, null]], "Building from source": [[463, null], [477, "building-from-source"]], "Building matrices": [[9, "building-matrices"]], "Building through pip & cmake": [[463, "building-through-pip-cmake"]], "Calculation": [[454, "calculation"], [454, "id1"]], "Call stack reporting": [[483, "call-stack-reporting"]], "Cephes": [[478, "cephes"]], "Changing array shape": [[452, "changing-array-shape"]], "Changing kind of array": [[452, "changing-kind-of-array"]], "Changing number of dimensions": [[452, "changing-number-of-dimensions"]], "Cholesky decomposition": [[467, null]], "Classes": [[7, null]], "Code Formatting Requirements": [[462, "code-formatting-requirements"]], "Compact Finite Difference Scheme": [[468, null]], "Comparison": [[451, "comparison"]], "Conda": [[487, "conda"]], "Conda and GPU / CPU Variants": [[477, "conda-and-gpu-cpu-variants"]], "Conjugate gradient": [[487, "conjugate-gradient"]], "Constructing arrays": [[454, "constructing-arrays"]], "Contents:": [[476, null]], "Contributing to cuPyNumeric": [[462, null]], "Convolve and Correlate": [[3, null]], "Correlating": [[460, "correlating"]], "Counting": [[459, "counting"]], "Data Type": [[454, "data-type"]], "Data type routines": [[10, null]], "Data type testing": [[10, "data-type-testing"]], "Decompositions": [[450, "decompositions"]], "Dependencies": [[463, "dependencies"]], "Detailed coverage report": [[483, "detailed-coverage-report"]], "Developer guide": [[464, null]], "Differences with Numpy": [[480, null]], "Discrete Fourier Transform": [[8, "discrete-fourier-transform"]], "Discrete Fourier Transform (cupynumeric.fft)": [[11, null]], "Discrete Fourier transform": [[3, "discrete-fourier-transform"]], "Distributions": [[455, "distributions"]], "Edge Detection": [[469, null]], "Edge detection": [[487, "edge-detection"]], "Eigenvalues": [[3, "eigenvalues"]], "Einsum and related": [[3, "einsum-and-related"]], "Elementwise bit operations": [[5, "elementwise-bit-operations"]], "Example 1": [[487, "example-1"]], "Example 2": [[487, "example-2"]], "Examples": [[470, null], [487, "examples"]], "Exercise: Change the number of clusters and number of observations and see how the clusters change": [[471, "Exercise:-Change-the-number-of-clusters-and-number-of-observations-and-see-how-the-clusters-change"]], "Exponents and logarithms": [[453, "exponents-and-logarithms"]], "Extrema Finding": [[453, "extrema-finding"]], "Factorizations": [[3, "factorizations"]], "Faster I/O Routines": [[486, "faster-i-o-routines"]], "Floating point routines": [[453, "floating-point-routines"]], "Frequently Asked Questions": [[475, null]], "From existing data": [[9, "from-existing-data"]], "From shape or value": [[9, "from-shape-or-value"]], "Functional programming": [[3, "functional-programming"]], "General Recommendations": [[486, "general-recommendations"]], "Generating index arrays": [[448, "generating-index-arrays"]], "Guidelines for performance benchmarks": [[481, "guidelines-for-performance-benchmarks"]], "Guidelines on designing cuPyNumeric applications": [[486, "guidelines-on-designing-cupynumeric-applications"]], "Guidelines on using cuPyNumeric APIs": [[486, "guidelines-on-using-cupynumeric-apis"]], "HPC cluster installation": [[487, "hpc-cluster-installation"]], "Handling complex numbers": [[453, "handling-complex-numbers"]], "Hardware requirements": [[487, "hardware-requirements"]], "Helper routines": [[11, "helper-routines"]], "Hermitian FFTs": [[11, "hermitian-ffts"]], "Histograms": [[460, "histograms"]], "How Do I Sign the DCO?": [[462, "how-do-i-sign-the-dco"]], "How do I time the execution of my application?": [[475, "how-do-i-time-the-execution-of-my-application"]], "How do I use Jupyter Notebooks?": [[475, "how-do-i-use-jupyter-notebooks"]], "How to begin": [[462, "how-to-begin"]], "How to determine available memory?": [[475, "how-to-determine-available-memory"]], "How to handle Out-Of-Memory errors?": [[475, "how-to-handle-out-of-memory-errors"]], "How to pass Legion and Realm arguments?": [[475, "how-to-pass-legion-and-realm-arguments"]], "Howtos": [[482, null]], "Hyperbolic functions": [[453, "hyperbolic-functions"]], "Implementation": [[468, "Implementation"], [469, "Implementation"], [471, "Implementation"], [472, "Implementation"]], "Indexing": [[3, "indexing"]], "Indexing behavior": [[480, "indexing-behavior"]], "Indexing routines": [[448, null]], "Indexing-like operations": [[448, "indexing-like-operations"]], "Indices and tables": [[476, "indices-and-tables"]], "Input and output": [[3, "input-and-output"], [449, null]], "Input and output (ndarray)": [[3, "input-and-output-ndarray"]], "Inserting data into arrays": [[448, "inserting-data-into-arrays"]], "Installation": [[477, null]], "Installing Conda Packages": [[477, "installing-conda-packages"]], "Installing PyPI Packages": [[477, "installing-pypi-packages"]], "Introduction": [[487, "introduction"]], "Item selection and manipulation": [[454, "item-selection-and-manipulation"]], "Jacobi stencil": [[473, null], [487, "jacobi-stencil"]], "Joining arrays": [[452, "joining-arrays"]], "K-Means Clustering Algorithm": [[471, null]], "LU factorization and related": [[3, "lu-factorization-and-related"]], "Learning Outcomes": [[468, "Learning-Outcomes"], [469, "Learning-Outcomes"], [471, "Learning-Outcomes"], [472, "Learning-Outcomes"]], "Lets run the kmeans algorithm using a set of inputs": [[471, "Lets-run-the-kmeans-algorithm-using-a-set-of-inputs"]], "Licenses": [[477, "licenses"]], "Linear Algebra": [[8, "linear-algebra"]], "Linear algebra (cupynumeric.linalg)": [[450, null]], "Logic functions": [[451, null]], "Logic operations": [[451, "logic-operations"]], "Logical operations": [[3, "logical-operations"]], "Making proper sets": [[457, "making-proper-sets"]], "Mathematical functions": [[3, "mathematical-functions"], [453, null]], "Matrix Functions": [[450, "matrix-functions"]], "Matrix and vector products": [[450, "matrix-and-vector-products"]], "Matrix multiplication": [[487, "matrix-multiplication"]], "Measure API coverage": [[483, null]], "Memory Layout": [[454, "memory-layout"]], "Merge tasks to reduce overhead": [[486, "merge-tasks-to-reduce-overhead"]], "Miscellaneous": [[453, "miscellaneous"]], "Miscellaneous matrix routines": [[3, "miscellaneous-matrix-routines"]], "Module-Level": [[8, "module-level"]], "Multi-Dimensional Array": [[8, "multi-dimensional-array"]], "Multi-node HPC": [[487, "multi-node-hpc"]], "Multi-node execution": [[479, "multi-node-execution"]], "NVIDIA cuPyNumeric": [[476, null]], "Newton Raphson Method In Two Dimensions": [[472, null]], "Norms and other numbers": [[450, "norms-and-other-numbers"]], "NumPy": [[478, "numpy"], [487, "numpy"]], "NumPy binary files (npy, npz)": [[449, "numpy-binary-files-npy-npz"]], "NumPy vs cuPyNumeric APIs": [[8, "numpy-vs-cupynumeric-apis"]], "Numerical ranges": [[9, "numerical-ranges"]], "OpenBLAS": [[463, "openblas"]], "Order argument": [[480, "order-argument"]], "Order statistics": [[460, "order-statistics"]], "Other Attributes": [[454, "other-attributes"]], "Other options": [[487, "other-options"]], "Overall coverage report": [[483, "overall-coverage-report"]], "Packing and unpacking bits": [[3, "packing-and-unpacking-bits"]], "Padding arrays": [[3, "padding-arrays"]], "Passing Legion and Realm arguments": [[479, "passing-legion-and-realm-arguments"]], "Performance Benchmarking": [[481, null]], "Pip": [[487, "pip"]], "Project comparisons": [[8, null]], "Questions?": [[475, "questions"]], "Random Generator": [[455, "random-generator"]], "Random Kit": [[478, "random-kit"]], "Random Sampling": [[8, "random-sampling"]], "Random sampling": [[3, "random-sampling"]], "Random sampling (cupynumeric.random)": [[455, null]], "Rational routines": [[453, "rational-routines"]], "Real FFTs": [[11, "real-ffts"]], "Rearranging elements": [[452, "rearranging-elements"]], "Reductions": [[480, "reductions"]], "Removing data from arrays": [[452, "removing-data-from-arrays"]], "Reshape returns a copy instead of view": [[486, "reshape-returns-a-copy-instead-of-view"]], "Resource allocation": [[487, "resource-allocation"]], "Returning a copy instead of a view": [[480, "returning-a-copy-instead-of-a-view"]], "Review Process": [[462, "review-process"]], "Rounding": [[453, "rounding"]], "Routines": [[456, null]], "Running cuPyNumeric code": [[487, "running-cupynumeric-code"]], "Running on CPU": [[487, "running-on-cpu"], [487, "id2"], [487, "id4"], [487, "id6"]], "Running on GPU": [[487, "running-on-gpu"], [487, "id3"], [487, "id5"], [487, "id7"], [487, "id9"]], "Running on GPU cluster": [[487, "running-on-gpu-cluster"]], "Running tests": [[465, null]], "SVD and related": [[3, "svd-and-related"]], "Sample Code": [[487, "sample-code"], [487, "id8"]], "Sample computation": [[487, "sample-computation"]], "Scalar return values": [[480, "scalar-return-values"]], "Searching": [[459, "searching"]], "Searching, sorting, and counting": [[3, "searching-sorting-and-counting"]], "Seeding and State": [[455, "seeding-and-state"]], "Set operations": [[3, "set-operations"]], "Set routines": [[457, null]], "Settings": [[458, null]], "Shape manipulation": [[454, "shape-manipulation"]], "Simple random data": [[455, "simple-random-data"]], "Single node": [[487, "single-node"]], "Single-node setup": [[487, "single-node-setup"]], "Solving equations and inverting matrices": [[450, "solving-equations-and-inverting-matrices"]], "Sorting": [[459, "sorting"]], "Sorting, searching, and counting": [[459, null]], "Special methods": [[454, "special-methods"]], "Splitting arrays": [[452, "splitting-arrays"]], "Stack results in a performance penalty": [[486, "stack-results-in-a-performance-penalty"]], "Stage configuration": [[465, "stage-configuration"]], "Standard FFTs": [[11, "standard-ffts"]], "Statistics": [[460, null]], "Sums, products, differences": [[453, "sums-products-differences"]], "Supported shapes and datatypes": [[480, "supported-shapes-and-datatypes"]], "TBLIS": [[463, "tblis"], [478, "tblis"]], "The Legalese: Developer Certificate of Origin": [[462, "the-legalese-developer-certificate-of-origin"]], "The N-Dimensional array (cupynumeric.ndarray)": [[454, null]], "Third-party notices": [[478, null]], "Tiling arrays": [[452, "tiling-arrays"]], "Top three Tips": [[487, "top-three-tips"]], "TorchSWE case study": [[474, null]], "Transpose-like operations": [[452, "transpose-like-operations"]], "Trigonometric functions": [[453, "trigonometric-functions"]], "Truth value testing": [[451, "truth-value-testing"]], "Trying Numpy code without changes": [[484, null]], "Tutorial": [[487, null]], "Ufuncs": [[3, "ufuncs"]], "Usage": [[488, null]], "Use array-based operations, AVOID loops with indexing": [[486, "use-array-based-operations-avoid-loops-with-indexing"]], "Use boolean masks, AVOID advanced indexing": [[486, "use-boolean-masks-avoid-advanced-indexing"]], "Use cuPyNumeric or NumPy arrays, AVOID native lists": [[486, "use-cupynumeric-or-numpy-arrays-avoid-native-lists"]], "Use logic functions, AVOID iterating through a loop": [[486, "use-logic-functions-avoid-iterating-through-a-loop"]], "Use mathematical functions, AVOID element-wise loops": [[486, "use-mathematical-functions-avoid-element-wise-loops"]], "Use output arguments to reduce memory allocation": [[486, "use-output-arguments-to-reduce-memory-allocation"]], "Use putmask to update an array based on another array": [[486, "use-putmask-to-update-an-array-based-on-another-array"]], "User guide": [[485, null]], "Using Legate timing tools": [[481, "using-legate-timing-tools"]], "Using a manual task manager": [[479, "using-a-manual-task-manager"]], "Using legate": [[479, "using-legate"]], "Various windows": [[461, "various-windows"]], "Vectorize for better performance": [[486, "vectorize-for-better-performance"]], "Verify your Installation": [[477, "verify-your-installation"]], "What are the anti-patterns in a NumPy code?": [[475, "what-are-the-anti-patterns-in-a-numpy-code"]], "What are the defaults?": [[475, "what-are-the-defaults"]], "What are the different task variants available in Legate?": [[475, "what-are-the-different-task-variants-available-in-legate"]], "What does this warning mean?": [[475, "what-does-this-warning-mean"]], "What if I don\u2019t have a GPU?": [[475, "what-if-i-dont-have-a-gpu"]], "What is the difference between Legate and cuPyNumeric?": [[475, "what-is-the-difference-between-legate-and-cupynumeric"]], "What is the version of legate?": [[475, "what-is-the-version-of-legate"]], "When to use python vs legate?": [[475, "when-to-use-python-vs-legate"]], "Where I can read more about cuPyNumeric?": [[475, "where-i-can-read-more-about-cupynumeric"]], "Why are the results different from NumPy?": [[475, "why-are-the-results-different-from-numpy"]], "Why doesn\u2019t Legate use my GPU?": [[475, "why-doesnt-legate-use-my-gpu"]], "Why is cuPyNumeric slower than CuPy on my laptop?": [[475, "why-is-cupynumeric-slower-than-cupy-on-my-laptop"]], "Why is cuPyNumeric slower than NumPy on my laptop?": [[475, "why-is-cupynumeric-slower-than-numpy-on-my-laptop"]], "Window functions": [[461, null]], "cuPyNumeric": [[487, "cupynumeric"]], "cuPyNumeric vs NumPy": [[487, "cupynumeric-vs-numpy"]], "cupynumeric.absolute": [[12, null]], "cupynumeric.add": [[13, null]], "cupynumeric.all": [[14, null]], "cupynumeric.allclose": [[15, null]], "cupynumeric.amax": [[16, null]], "cupynumeric.amin": [[17, null]], "cupynumeric.angle": [[18, null]], "cupynumeric.any": [[19, null]], "cupynumeric.append": [[20, null]], "cupynumeric.arange": [[21, null]], "cupynumeric.arccos": [[22, null]], "cupynumeric.arccosh": [[23, null]], "cupynumeric.arcsin": [[24, null]], "cupynumeric.arcsinh": [[25, null]], "cupynumeric.arctan": [[26, null]], "cupynumeric.arctan2": [[27, null]], "cupynumeric.arctanh": [[28, null]], "cupynumeric.argmax": [[29, null]], "cupynumeric.argmin": [[30, null]], "cupynumeric.argpartition": [[31, null]], "cupynumeric.argsort": [[32, null]], "cupynumeric.argwhere": [[33, null]], "cupynumeric.array": [[34, null]], "cupynumeric.array_equal": [[35, null]], "cupynumeric.array_split": [[36, null]], "cupynumeric.asarray": [[37, null]], "cupynumeric.atleast_1d": [[38, null]], "cupynumeric.atleast_2d": [[39, null]], "cupynumeric.atleast_3d": [[40, null]], "cupynumeric.average": [[41, null]], "cupynumeric.bartlett": [[42, null]], "cupynumeric.bincount": [[43, null]], "cupynumeric.bitwise_and": [[44, null]], "cupynumeric.bitwise_or": [[45, null]], "cupynumeric.bitwise_xor": [[46, null]], "cupynumeric.blackman": [[47, null]], "cupynumeric.block": [[48, null]], "cupynumeric.broadcast": [[6, null]], "cupynumeric.broadcast_arrays": [[49, null]], "cupynumeric.broadcast_shapes": [[50, null]], "cupynumeric.broadcast_to": [[51, null]], "cupynumeric.cbrt": [[52, null]], "cupynumeric.ceil": [[53, null]], "cupynumeric.choose": [[54, null]], "cupynumeric.clip": [[55, null]], "cupynumeric.column_stack": [[56, null]], "cupynumeric.compress": [[57, null]], "cupynumeric.concatenate": [[58, null]], "cupynumeric.conj": [[59, null]], "cupynumeric.conjugate": [[60, null]], "cupynumeric.convolve": [[61, null]], "cupynumeric.copy": [[62, null]], "cupynumeric.copysign": [[63, null]], "cupynumeric.cos": [[64, null]], "cupynumeric.cosh": [[65, null]], "cupynumeric.count_nonzero": [[66, null]], "cupynumeric.cov": [[67, null]], "cupynumeric.cumprod": [[68, null]], "cupynumeric.cumsum": [[69, null]], "cupynumeric.deg2rad": [[70, null]], "cupynumeric.degrees": [[71, null]], "cupynumeric.delete": [[72, null]], "cupynumeric.diag": [[73, null]], "cupynumeric.diag_indices": [[74, null]], "cupynumeric.diag_indices_from": [[75, null]], "cupynumeric.diagonal": [[76, null]], "cupynumeric.diff": [[77, null]], "cupynumeric.digitize": [[78, null]], "cupynumeric.divide": [[79, null]], "cupynumeric.dot": [[80, null]], "cupynumeric.dsplit": [[81, null]], "cupynumeric.dstack": [[82, null]], "cupynumeric.einsum": [[83, null]], "cupynumeric.einsum_path": [[84, null]], "cupynumeric.empty": [[85, null]], "cupynumeric.empty_like": [[86, null]], "cupynumeric.equal": [[87, null]], "cupynumeric.exp": [[88, null]], "cupynumeric.exp2": [[89, null]], "cupynumeric.expand_dims": [[90, null]], "cupynumeric.expm1": [[91, null]], "cupynumeric.extract": [[92, null]], "cupynumeric.eye": [[93, null]], "cupynumeric.fabs": [[94, null]], "cupynumeric.fft.fft": [[95, null]], "cupynumeric.fft.fft2": [[96, null]], "cupynumeric.fft.fftn": [[97, null]], "cupynumeric.fft.fftshift": [[98, null]], "cupynumeric.fft.hfft": [[99, null]], "cupynumeric.fft.ifft": [[100, null]], "cupynumeric.fft.ifft2": [[101, null]], "cupynumeric.fft.ifftn": [[102, null]], "cupynumeric.fft.ifftshift": [[103, null]], "cupynumeric.fft.ihfft": [[104, null]], "cupynumeric.fft.irfft": [[105, null]], "cupynumeric.fft.irfft2": [[106, null]], "cupynumeric.fft.irfftn": [[107, null]], "cupynumeric.fft.rfft": [[108, null]], "cupynumeric.fft.rfft2": [[109, null]], "cupynumeric.fft.rfftn": [[110, null]], "cupynumeric.fill_diagonal": [[111, null]], "cupynumeric.find_common_type": [[112, null]], "cupynumeric.flatnonzero": [[113, null]], "cupynumeric.flip": [[114, null]], "cupynumeric.fliplr": [[115, null]], "cupynumeric.flipud": [[116, null]], "cupynumeric.float_power": [[117, null]], "cupynumeric.floor": [[118, null]], "cupynumeric.floor_divide": [[119, null]], "cupynumeric.fmax": [[120, null]], "cupynumeric.fmin": [[121, null]], "cupynumeric.fmod": [[122, null]], "cupynumeric.frexp": [[123, null]], "cupynumeric.full": [[124, null]], "cupynumeric.full_like": [[125, null]], "cupynumeric.gcd": [[126, null]], "cupynumeric.gradient": [[127, null]], "cupynumeric.greater": [[128, null]], "cupynumeric.greater_equal": [[129, null]], "cupynumeric.hamming": [[130, null]], "cupynumeric.hanning": [[131, null]], "cupynumeric.histogram": [[132, null]], "cupynumeric.hsplit": [[133, null]], "cupynumeric.hstack": [[134, null]], "cupynumeric.hypot": [[135, null]], "cupynumeric.identity": [[136, null]], "cupynumeric.imag": [[137, null]], "cupynumeric.indices": [[138, null]], "cupynumeric.inner": [[139, null]], "cupynumeric.invert": [[140, null]], "cupynumeric.isclose": [[141, null]], "cupynumeric.iscomplex": [[142, null]], "cupynumeric.iscomplexobj": [[143, null]], "cupynumeric.isfinite": [[144, null]], "cupynumeric.isinf": [[145, null]], "cupynumeric.isnan": [[146, null]], "cupynumeric.isneginf": [[147, null]], "cupynumeric.isposinf": [[148, null]], "cupynumeric.isreal": [[149, null]], "cupynumeric.isrealobj": [[150, null]], "cupynumeric.isscalar": [[151, null]], "cupynumeric.ix_": [[152, null]], "cupynumeric.kaiser": [[153, null]], "cupynumeric.lcm": [[154, null]], "cupynumeric.ldexp": [[155, null]], "cupynumeric.left_shift": [[156, null]], "cupynumeric.less": [[157, null]], "cupynumeric.less_equal": [[158, null]], "cupynumeric.linalg.cholesky": [[159, null]], "cupynumeric.linalg.eig": [[160, null]], "cupynumeric.linalg.eigh": [[161, null]], "cupynumeric.linalg.eigvals": [[162, null]], "cupynumeric.linalg.eigvalsh": [[163, null]], "cupynumeric.linalg.expm": [[164, null]], "cupynumeric.linalg.matrix_power": [[165, null]], "cupynumeric.linalg.multi_dot": [[166, null]], "cupynumeric.linalg.norm": [[167, null]], "cupynumeric.linalg.qr": [[168, null]], "cupynumeric.linalg.solve": [[169, null]], "cupynumeric.linalg.svd": [[170, null]], "cupynumeric.linspace": [[171, null]], "cupynumeric.load": [[172, null]], "cupynumeric.log": [[173, null]], "cupynumeric.log10": [[174, null]], "cupynumeric.log1p": [[175, null]], "cupynumeric.log2": [[176, null]], "cupynumeric.logaddexp": [[177, null]], "cupynumeric.logaddexp2": [[178, null]], "cupynumeric.logical_and": [[179, null]], "cupynumeric.logical_not": [[180, null]], "cupynumeric.logical_or": [[181, null]], "cupynumeric.logical_xor": [[182, null]], "cupynumeric.mask_indices": [[183, null]], "cupynumeric.matmul": [[184, null]], "cupynumeric.maximum": [[185, null]], "cupynumeric.mean": [[186, null]], "cupynumeric.median": [[187, null]], "cupynumeric.meshgrid": [[188, null]], "cupynumeric.minimum": [[189, null]], "cupynumeric.mod": [[190, null]], "cupynumeric.modf": [[191, null]], "cupynumeric.moveaxis": [[192, null]], "cupynumeric.multiply": [[193, null]], "cupynumeric.nan_to_num": [[194, null]], "cupynumeric.nanargmax": [[195, null]], "cupynumeric.nanargmin": [[196, null]], "cupynumeric.nancumprod": [[197, null]], "cupynumeric.nancumsum": [[198, null]], "cupynumeric.nanmax": [[199, null]], "cupynumeric.nanmean": [[200, null]], "cupynumeric.nanmedian": [[201, null]], "cupynumeric.nanmin": [[202, null]], "cupynumeric.nanpercentile": [[203, null]], "cupynumeric.nanprod": [[204, null]], "cupynumeric.nanquantile": [[205, null]], "cupynumeric.nansum": [[206, null]], "cupynumeric.ndarray": [[4, null]], "cupynumeric.ndarray.T": [[207, null]], "cupynumeric.ndarray.__abs__": [[208, null]], "cupynumeric.ndarray.__add__": [[209, null]], "cupynumeric.ndarray.__and__": [[210, null]], "cupynumeric.ndarray.__array__": [[211, null]], "cupynumeric.ndarray.__bool__": [[212, null]], "cupynumeric.ndarray.__complex__": [[213, null]], "cupynumeric.ndarray.__contains__": [[214, null]], "cupynumeric.ndarray.__copy__": [[215, null]], "cupynumeric.ndarray.__deepcopy__": [[216, null]], "cupynumeric.ndarray.__divmod__": [[217, null]], "cupynumeric.ndarray.__eq__": [[218, null]], "cupynumeric.ndarray.__float__": [[219, null]], "cupynumeric.ndarray.__floordiv__": [[220, null]], "cupynumeric.ndarray.__ge__": [[221, null]], "cupynumeric.ndarray.__getitem__": [[222, null]], "cupynumeric.ndarray.__gt__": [[223, null]], "cupynumeric.ndarray.__iadd__": [[224, null]], "cupynumeric.ndarray.__iand__": [[225, null]], "cupynumeric.ndarray.__ifloordiv__": [[226, null]], "cupynumeric.ndarray.__ilshift__": [[227, null]], "cupynumeric.ndarray.__imatmul__": [[228, null]], "cupynumeric.ndarray.__imod__": [[229, null]], "cupynumeric.ndarray.__imul__": [[230, null]], "cupynumeric.ndarray.__index__": [[231, null]], "cupynumeric.ndarray.__int__": [[232, null]], "cupynumeric.ndarray.__invert__": [[233, null]], "cupynumeric.ndarray.__ior__": [[234, null]], "cupynumeric.ndarray.__ipow__": [[235, null]], "cupynumeric.ndarray.__irshift__": [[236, null]], "cupynumeric.ndarray.__isub__": [[237, null]], "cupynumeric.ndarray.__itruediv__": [[238, null]], "cupynumeric.ndarray.__ixor__": [[239, null]], "cupynumeric.ndarray.__le__": [[240, null]], "cupynumeric.ndarray.__len__": [[241, null]], "cupynumeric.ndarray.__lshift__": [[242, null]], "cupynumeric.ndarray.__lt__": [[243, null]], "cupynumeric.ndarray.__matmul__": [[244, null]], "cupynumeric.ndarray.__mod__": [[245, null]], "cupynumeric.ndarray.__mul__": [[246, null]], "cupynumeric.ndarray.__ne__": [[247, null]], "cupynumeric.ndarray.__neg__": [[248, null]], "cupynumeric.ndarray.__new__": [[249, null]], "cupynumeric.ndarray.__or__": [[250, null]], "cupynumeric.ndarray.__pos__": [[251, null]], "cupynumeric.ndarray.__pow__": [[252, null]], "cupynumeric.ndarray.__reduce__": [[253, null]], "cupynumeric.ndarray.__repr__": [[254, null]], "cupynumeric.ndarray.__rmatmul__": [[255, null]], "cupynumeric.ndarray.__rshift__": [[256, null]], "cupynumeric.ndarray.__setitem__": [[257, null]], "cupynumeric.ndarray.__setstate__": [[258, null]], "cupynumeric.ndarray.__str__": [[259, null]], "cupynumeric.ndarray.__sub__": [[260, null]], "cupynumeric.ndarray.__truediv__": [[261, null]], "cupynumeric.ndarray.__xor__": [[262, null]], "cupynumeric.ndarray.all": [[263, null]], "cupynumeric.ndarray.any": [[264, null]], "cupynumeric.ndarray.argmax": [[265, null]], "cupynumeric.ndarray.argmin": [[266, null]], "cupynumeric.ndarray.argpartition": [[267, null]], "cupynumeric.ndarray.argsort": [[268, null]], "cupynumeric.ndarray.astype": [[269, null]], "cupynumeric.ndarray.base": [[270, null]], "cupynumeric.ndarray.choose": [[271, null]], "cupynumeric.ndarray.clip": [[272, null]], "cupynumeric.ndarray.compress": [[273, null]], "cupynumeric.ndarray.conj": [[274, null]], "cupynumeric.ndarray.conjugate": [[275, null]], "cupynumeric.ndarray.copy": [[276, null]], "cupynumeric.ndarray.ctypes": [[277, null]], "cupynumeric.ndarray.cumprod": [[278, null]], "cupynumeric.ndarray.cumsum": [[279, null]], "cupynumeric.ndarray.data": [[280, null]], "cupynumeric.ndarray.diagonal": [[281, null]], "cupynumeric.ndarray.dot": [[282, null]], "cupynumeric.ndarray.dtype": [[283, null]], "cupynumeric.ndarray.dump": [[284, null]], "cupynumeric.ndarray.dumps": [[285, null]], "cupynumeric.ndarray.fill": [[286, null]], "cupynumeric.ndarray.flags": [[287, null]], "cupynumeric.ndarray.flat": [[288, null]], "cupynumeric.ndarray.flatten": [[289, null]], "cupynumeric.ndarray.flip": [[290, null]], "cupynumeric.ndarray.getfield": [[291, null]], "cupynumeric.ndarray.imag": [[292, null]], "cupynumeric.ndarray.item": [[293, null]], "cupynumeric.ndarray.itemset": [[294, null]], "cupynumeric.ndarray.itemsize": [[295, null]], "cupynumeric.ndarray.max": [[296, null]], "cupynumeric.ndarray.mean": [[297, null]], "cupynumeric.ndarray.min": [[298, null]], "cupynumeric.ndarray.nbytes": [[299, null]], "cupynumeric.ndarray.ndim": [[300, null]], "cupynumeric.ndarray.nonzero": [[301, null]], "cupynumeric.ndarray.partition": [[302, null]], "cupynumeric.ndarray.prod": [[303, null]], "cupynumeric.ndarray.put": [[304, null]], "cupynumeric.ndarray.ravel": [[305, null]], "cupynumeric.ndarray.real": [[306, null]], "cupynumeric.ndarray.reshape": [[307, null]], "cupynumeric.ndarray.searchsorted": [[308, null]], "cupynumeric.ndarray.setfield": [[309, null]], "cupynumeric.ndarray.setflags": [[310, null]], "cupynumeric.ndarray.shape": [[311, null]], "cupynumeric.ndarray.size": [[312, null]], "cupynumeric.ndarray.sort": [[313, null]], "cupynumeric.ndarray.squeeze": [[314, null]], "cupynumeric.ndarray.strides": [[315, null]], "cupynumeric.ndarray.sum": [[316, null]], "cupynumeric.ndarray.swapaxes": [[317, null]], "cupynumeric.ndarray.take": [[318, null]], "cupynumeric.ndarray.tobytes": [[319, null]], "cupynumeric.ndarray.tofile": [[320, null]], "cupynumeric.ndarray.tolist": [[321, null]], "cupynumeric.ndarray.tostring": [[322, null]], "cupynumeric.ndarray.trace": [[323, null]], "cupynumeric.ndarray.transpose": [[324, null]], "cupynumeric.ndarray.unique": [[325, null]], "cupynumeric.ndarray.var": [[326, null]], "cupynumeric.ndarray.view": [[327, null]], "cupynumeric.ndim": [[328, null]], "cupynumeric.negative": [[329, null]], "cupynumeric.nextafter": [[330, null]], "cupynumeric.nonzero": [[331, null]], "cupynumeric.not_equal": [[332, null]], "cupynumeric.ones": [[333, null]], "cupynumeric.ones_like": [[334, null]], "cupynumeric.outer": [[335, null]], "cupynumeric.packbits": [[336, null]], "cupynumeric.partition": [[337, null]], "cupynumeric.percentile": [[338, null]], "cupynumeric.place": [[339, null]], "cupynumeric.positive": [[340, null]], "cupynumeric.power": [[341, null]], "cupynumeric.prod": [[342, null]], "cupynumeric.put": [[343, null]], "cupynumeric.put_along_axis": [[344, null]], "cupynumeric.putmask": [[345, null]], "cupynumeric.quantile": [[346, null]], "cupynumeric.rad2deg": [[347, null]], "cupynumeric.radians": [[348, null]], "cupynumeric.random.BitGenerator": [[1, null]], "cupynumeric.random.Generator": [[2, null]], "cupynumeric.random.beta": [[349, null]], "cupynumeric.random.binomial": [[350, null]], "cupynumeric.random.bytes": [[351, null]], "cupynumeric.random.chisquare": [[352, null]], "cupynumeric.random.default_rng": [[353, null]], "cupynumeric.random.exponential": [[354, null]], "cupynumeric.random.f": [[355, null]], "cupynumeric.random.gamma": [[356, null]], "cupynumeric.random.geometric": [[357, null]], "cupynumeric.random.gumbel": [[358, null]], "cupynumeric.random.hypergeometric": [[359, null]], "cupynumeric.random.laplace": [[360, null]], "cupynumeric.random.logistic": [[361, null]], "cupynumeric.random.lognormal": [[362, null]], "cupynumeric.random.logseries": [[363, null]], "cupynumeric.random.negative_binomial": [[364, null]], "cupynumeric.random.noncentral_chisquare": [[365, null]], "cupynumeric.random.noncentral_f": [[366, null]], "cupynumeric.random.normal": [[367, null]], "cupynumeric.random.pareto": [[368, null]], "cupynumeric.random.poisson": [[369, null]], "cupynumeric.random.power": [[370, null]], "cupynumeric.random.rand": [[371, null]], "cupynumeric.random.randint": [[372, null]], "cupynumeric.random.randn": [[373, null]], "cupynumeric.random.random": [[374, null]], "cupynumeric.random.random_integers": [[375, null]], "cupynumeric.random.random_sample": [[376, null]], "cupynumeric.random.ranf": [[377, null]], "cupynumeric.random.rayleigh": [[378, null]], "cupynumeric.random.sample": [[379, null]], "cupynumeric.random.seed": [[380, null]], "cupynumeric.random.standard_cauchy": [[381, null]], "cupynumeric.random.standard_exponential": [[382, null]], "cupynumeric.random.standard_gamma": [[383, null]], "cupynumeric.random.standard_t": [[384, null]], "cupynumeric.random.triangular": [[385, null]], "cupynumeric.random.uniform": [[386, null]], "cupynumeric.random.vonmises": [[387, null]], "cupynumeric.random.wald": [[388, null]], "cupynumeric.random.weibull": [[389, null]], "cupynumeric.random.zipf": [[390, null]], "cupynumeric.ravel": [[391, null]], "cupynumeric.real": [[392, null]], "cupynumeric.reciprocal": [[393, null]], "cupynumeric.remainder": [[394, null]], "cupynumeric.repeat": [[395, null]], "cupynumeric.reshape": [[396, null]], "cupynumeric.right_shift": [[397, null]], "cupynumeric.rint": [[398, null]], "cupynumeric.roll": [[399, null]], "cupynumeric.rot90": [[400, null]], "cupynumeric.round": [[401, null]], "cupynumeric.row_stack": [[402, null]], "cupynumeric.searchsorted": [[403, null]], "cupynumeric.select": [[404, null]], "cupynumeric.shape": [[405, null]], "cupynumeric.sign": [[406, null]], "cupynumeric.signbit": [[407, null]], "cupynumeric.sin": [[408, null]], "cupynumeric.sinh": [[409, null]], "cupynumeric.sort": [[410, null]], "cupynumeric.sort_complex": [[411, null]], "cupynumeric.split": [[412, null]], "cupynumeric.sqrt": [[413, null]], "cupynumeric.square": [[414, null]], "cupynumeric.squeeze": [[415, null]], "cupynumeric.stack": [[416, null]], "cupynumeric.subtract": [[417, null]], "cupynumeric.sum": [[418, null]], "cupynumeric.swapaxes": [[419, null]], "cupynumeric.take": [[420, null]], "cupynumeric.take_along_axis": [[421, null]], "cupynumeric.tan": [[422, null]], "cupynumeric.tanh": [[423, null]], "cupynumeric.tensordot": [[424, null]], "cupynumeric.tile": [[425, null]], "cupynumeric.trace": [[426, null]], "cupynumeric.transpose": [[427, null]], "cupynumeric.tri": [[428, null]], "cupynumeric.tril": [[429, null]], "cupynumeric.tril_indices": [[430, null]], "cupynumeric.tril_indices_from": [[431, null]], "cupynumeric.triu": [[432, null]], "cupynumeric.triu_indices": [[433, null]], "cupynumeric.triu_indices_from": [[434, null]], "cupynumeric.true_divide": [[435, null]], "cupynumeric.trunc": [[436, null]], "cupynumeric.unique": [[437, null]], "cupynumeric.unpackbits": [[438, null]], "cupynumeric.unravel_index": [[439, null]], "cupynumeric.var": [[440, null]], "cupynumeric.vdot": [[441, null]], "cupynumeric.vsplit": [[442, null]], "cupynumeric.vstack": [[443, null]], "cupynumeric.where": [[444, null]], "cupynumeric.zeros": [[445, null]], "cupynumeric.zeros_like": [[446, null]], "doctor": [[458, "doctor"]], "doctor_filename": [[458, "doctor-filename"], [458, "id2"]], "doctor_format": [[458, "doctor-format"]], "fallback_stacktrace": [[458, "fallback-stacktrace"]], "fast_math": [[458, "fast-math"]], "force_thunk": [[458, "force-thunk"]], "matmul_cache_size": [[458, "matmul-cache-size"]], "min_cpu_chunk": [[458, "min-cpu-chunk"]], "min_gpu_chunk": [[458, "min-gpu-chunk"]], "min_omp_chunk": [[458, "min-omp-chunk"]], "numpy_compat": [[458, "numpy-compat"]], "preload_cudalibs": [[458, "preload-cudalibs"]], "report_coverage": [[458, "report-coverage"]], "report_dump_callstack": [[458, "report-dump-callstack"]], "report_dump_csv": [[458, "report-dump-csv"]], "test": [[458, "test"]], "warn": [[458, "warn"]]}, "docnames": ["_implemented", "api/_bitgenerator", "api/_generator", "api/_grouped", "api/_ndarray", "api/binary", "api/broadcast", "api/classes", "api/comparison", "api/creation", "api/datatype", "api/fft", "api/generated/cupynumeric.absolute", "api/generated/cupynumeric.add", "api/generated/cupynumeric.all", "api/generated/cupynumeric.allclose", "api/generated/cupynumeric.amax", "api/generated/cupynumeric.amin", "api/generated/cupynumeric.angle", "api/generated/cupynumeric.any", "api/generated/cupynumeric.append", "api/generated/cupynumeric.arange", "api/generated/cupynumeric.arccos", "api/generated/cupynumeric.arccosh", "api/generated/cupynumeric.arcsin", "api/generated/cupynumeric.arcsinh", "api/generated/cupynumeric.arctan", "api/generated/cupynumeric.arctan2", "api/generated/cupynumeric.arctanh", "api/generated/cupynumeric.argmax", "api/generated/cupynumeric.argmin", "api/generated/cupynumeric.argpartition", "api/generated/cupynumeric.argsort", "api/generated/cupynumeric.argwhere", "api/generated/cupynumeric.array", "api/generated/cupynumeric.array_equal", "api/generated/cupynumeric.array_split", "api/generated/cupynumeric.asarray", "api/generated/cupynumeric.atleast_1d", "api/generated/cupynumeric.atleast_2d", "api/generated/cupynumeric.atleast_3d", "api/generated/cupynumeric.average", "api/generated/cupynumeric.bartlett", "api/generated/cupynumeric.bincount", "api/generated/cupynumeric.bitwise_and", "api/generated/cupynumeric.bitwise_or", "api/generated/cupynumeric.bitwise_xor", "api/generated/cupynumeric.blackman", "api/generated/cupynumeric.block", "api/generated/cupynumeric.broadcast_arrays", "api/generated/cupynumeric.broadcast_shapes", "api/generated/cupynumeric.broadcast_to", "api/generated/cupynumeric.cbrt", "api/generated/cupynumeric.ceil", "api/generated/cupynumeric.choose", "api/generated/cupynumeric.clip", "api/generated/cupynumeric.column_stack", "api/generated/cupynumeric.compress", "api/generated/cupynumeric.concatenate", "api/generated/cupynumeric.conj", "api/generated/cupynumeric.conjugate", "api/generated/cupynumeric.convolve", "api/generated/cupynumeric.copy", "api/generated/cupynumeric.copysign", "api/generated/cupynumeric.cos", "api/generated/cupynumeric.cosh", "api/generated/cupynumeric.count_nonzero", "api/generated/cupynumeric.cov", "api/generated/cupynumeric.cumprod", "api/generated/cupynumeric.cumsum", "api/generated/cupynumeric.deg2rad", "api/generated/cupynumeric.degrees", "api/generated/cupynumeric.delete", "api/generated/cupynumeric.diag", "api/generated/cupynumeric.diag_indices", "api/generated/cupynumeric.diag_indices_from", "api/generated/cupynumeric.diagonal", "api/generated/cupynumeric.diff", "api/generated/cupynumeric.digitize", "api/generated/cupynumeric.divide", "api/generated/cupynumeric.dot", "api/generated/cupynumeric.dsplit", "api/generated/cupynumeric.dstack", "api/generated/cupynumeric.einsum", "api/generated/cupynumeric.einsum_path", "api/generated/cupynumeric.empty", "api/generated/cupynumeric.empty_like", "api/generated/cupynumeric.equal", "api/generated/cupynumeric.exp", "api/generated/cupynumeric.exp2", "api/generated/cupynumeric.expand_dims", "api/generated/cupynumeric.expm1", "api/generated/cupynumeric.extract", "api/generated/cupynumeric.eye", "api/generated/cupynumeric.fabs", "api/generated/cupynumeric.fft.fft", "api/generated/cupynumeric.fft.fft2", "api/generated/cupynumeric.fft.fftn", "api/generated/cupynumeric.fft.fftshift", "api/generated/cupynumeric.fft.hfft", "api/generated/cupynumeric.fft.ifft", "api/generated/cupynumeric.fft.ifft2", "api/generated/cupynumeric.fft.ifftn", "api/generated/cupynumeric.fft.ifftshift", "api/generated/cupynumeric.fft.ihfft", "api/generated/cupynumeric.fft.irfft", "api/generated/cupynumeric.fft.irfft2", "api/generated/cupynumeric.fft.irfftn", "api/generated/cupynumeric.fft.rfft", "api/generated/cupynumeric.fft.rfft2", "api/generated/cupynumeric.fft.rfftn", "api/generated/cupynumeric.fill_diagonal", "api/generated/cupynumeric.find_common_type", "api/generated/cupynumeric.flatnonzero", "api/generated/cupynumeric.flip", "api/generated/cupynumeric.fliplr", "api/generated/cupynumeric.flipud", "api/generated/cupynumeric.float_power", "api/generated/cupynumeric.floor", "api/generated/cupynumeric.floor_divide", "api/generated/cupynumeric.fmax", "api/generated/cupynumeric.fmin", "api/generated/cupynumeric.fmod", "api/generated/cupynumeric.frexp", "api/generated/cupynumeric.full", "api/generated/cupynumeric.full_like", "api/generated/cupynumeric.gcd", "api/generated/cupynumeric.gradient", "api/generated/cupynumeric.greater", "api/generated/cupynumeric.greater_equal", "api/generated/cupynumeric.hamming", "api/generated/cupynumeric.hanning", "api/generated/cupynumeric.histogram", "api/generated/cupynumeric.hsplit", "api/generated/cupynumeric.hstack", "api/generated/cupynumeric.hypot", "api/generated/cupynumeric.identity", "api/generated/cupynumeric.imag", "api/generated/cupynumeric.indices", "api/generated/cupynumeric.inner", "api/generated/cupynumeric.invert", "api/generated/cupynumeric.isclose", "api/generated/cupynumeric.iscomplex", "api/generated/cupynumeric.iscomplexobj", "api/generated/cupynumeric.isfinite", "api/generated/cupynumeric.isinf", "api/generated/cupynumeric.isnan", "api/generated/cupynumeric.isneginf", "api/generated/cupynumeric.isposinf", "api/generated/cupynumeric.isreal", "api/generated/cupynumeric.isrealobj", "api/generated/cupynumeric.isscalar", "api/generated/cupynumeric.ix_", "api/generated/cupynumeric.kaiser", "api/generated/cupynumeric.lcm", "api/generated/cupynumeric.ldexp", "api/generated/cupynumeric.left_shift", "api/generated/cupynumeric.less", "api/generated/cupynumeric.less_equal", "api/generated/cupynumeric.linalg.cholesky", "api/generated/cupynumeric.linalg.eig", "api/generated/cupynumeric.linalg.eigh", "api/generated/cupynumeric.linalg.eigvals", "api/generated/cupynumeric.linalg.eigvalsh", "api/generated/cupynumeric.linalg.expm", "api/generated/cupynumeric.linalg.matrix_power", "api/generated/cupynumeric.linalg.multi_dot", "api/generated/cupynumeric.linalg.norm", "api/generated/cupynumeric.linalg.qr", "api/generated/cupynumeric.linalg.solve", "api/generated/cupynumeric.linalg.svd", "api/generated/cupynumeric.linspace", "api/generated/cupynumeric.load", "api/generated/cupynumeric.log", "api/generated/cupynumeric.log10", "api/generated/cupynumeric.log1p", "api/generated/cupynumeric.log2", "api/generated/cupynumeric.logaddexp", "api/generated/cupynumeric.logaddexp2", "api/generated/cupynumeric.logical_and", "api/generated/cupynumeric.logical_not", "api/generated/cupynumeric.logical_or", "api/generated/cupynumeric.logical_xor", "api/generated/cupynumeric.mask_indices", "api/generated/cupynumeric.matmul", "api/generated/cupynumeric.maximum", "api/generated/cupynumeric.mean", "api/generated/cupynumeric.median", "api/generated/cupynumeric.meshgrid", "api/generated/cupynumeric.minimum", "api/generated/cupynumeric.mod", "api/generated/cupynumeric.modf", "api/generated/cupynumeric.moveaxis", "api/generated/cupynumeric.multiply", "api/generated/cupynumeric.nan_to_num", "api/generated/cupynumeric.nanargmax", "api/generated/cupynumeric.nanargmin", "api/generated/cupynumeric.nancumprod", "api/generated/cupynumeric.nancumsum", "api/generated/cupynumeric.nanmax", "api/generated/cupynumeric.nanmean", "api/generated/cupynumeric.nanmedian", "api/generated/cupynumeric.nanmin", "api/generated/cupynumeric.nanpercentile", "api/generated/cupynumeric.nanprod", "api/generated/cupynumeric.nanquantile", "api/generated/cupynumeric.nansum", "api/generated/cupynumeric.ndarray.T", "api/generated/cupynumeric.ndarray.__abs__", "api/generated/cupynumeric.ndarray.__add__", "api/generated/cupynumeric.ndarray.__and__", "api/generated/cupynumeric.ndarray.__array__", "api/generated/cupynumeric.ndarray.__bool__", "api/generated/cupynumeric.ndarray.__complex__", "api/generated/cupynumeric.ndarray.__contains__", "api/generated/cupynumeric.ndarray.__copy__", "api/generated/cupynumeric.ndarray.__deepcopy__", "api/generated/cupynumeric.ndarray.__divmod__", "api/generated/cupynumeric.ndarray.__eq__", "api/generated/cupynumeric.ndarray.__float__", "api/generated/cupynumeric.ndarray.__floordiv__", "api/generated/cupynumeric.ndarray.__ge__", "api/generated/cupynumeric.ndarray.__getitem__", "api/generated/cupynumeric.ndarray.__gt__", "api/generated/cupynumeric.ndarray.__iadd__", "api/generated/cupynumeric.ndarray.__iand__", "api/generated/cupynumeric.ndarray.__ifloordiv__", "api/generated/cupynumeric.ndarray.__ilshift__", "api/generated/cupynumeric.ndarray.__imatmul__", "api/generated/cupynumeric.ndarray.__imod__", "api/generated/cupynumeric.ndarray.__imul__", "api/generated/cupynumeric.ndarray.__index__", "api/generated/cupynumeric.ndarray.__int__", "api/generated/cupynumeric.ndarray.__invert__", "api/generated/cupynumeric.ndarray.__ior__", "api/generated/cupynumeric.ndarray.__ipow__", "api/generated/cupynumeric.ndarray.__irshift__", "api/generated/cupynumeric.ndarray.__isub__", "api/generated/cupynumeric.ndarray.__itruediv__", "api/generated/cupynumeric.ndarray.__ixor__", "api/generated/cupynumeric.ndarray.__le__", "api/generated/cupynumeric.ndarray.__len__", "api/generated/cupynumeric.ndarray.__lshift__", "api/generated/cupynumeric.ndarray.__lt__", "api/generated/cupynumeric.ndarray.__matmul__", "api/generated/cupynumeric.ndarray.__mod__", "api/generated/cupynumeric.ndarray.__mul__", "api/generated/cupynumeric.ndarray.__ne__", "api/generated/cupynumeric.ndarray.__neg__", "api/generated/cupynumeric.ndarray.__new__", "api/generated/cupynumeric.ndarray.__or__", "api/generated/cupynumeric.ndarray.__pos__", "api/generated/cupynumeric.ndarray.__pow__", "api/generated/cupynumeric.ndarray.__reduce__", "api/generated/cupynumeric.ndarray.__repr__", "api/generated/cupynumeric.ndarray.__rmatmul__", "api/generated/cupynumeric.ndarray.__rshift__", "api/generated/cupynumeric.ndarray.__setitem__", "api/generated/cupynumeric.ndarray.__setstate__", "api/generated/cupynumeric.ndarray.__str__", "api/generated/cupynumeric.ndarray.__sub__", "api/generated/cupynumeric.ndarray.__truediv__", "api/generated/cupynumeric.ndarray.__xor__", "api/generated/cupynumeric.ndarray.all", "api/generated/cupynumeric.ndarray.any", "api/generated/cupynumeric.ndarray.argmax", "api/generated/cupynumeric.ndarray.argmin", "api/generated/cupynumeric.ndarray.argpartition", "api/generated/cupynumeric.ndarray.argsort", "api/generated/cupynumeric.ndarray.astype", "api/generated/cupynumeric.ndarray.base", "api/generated/cupynumeric.ndarray.choose", "api/generated/cupynumeric.ndarray.clip", "api/generated/cupynumeric.ndarray.compress", "api/generated/cupynumeric.ndarray.conj", "api/generated/cupynumeric.ndarray.conjugate", "api/generated/cupynumeric.ndarray.copy", "api/generated/cupynumeric.ndarray.ctypes", "api/generated/cupynumeric.ndarray.cumprod", "api/generated/cupynumeric.ndarray.cumsum", "api/generated/cupynumeric.ndarray.data", "api/generated/cupynumeric.ndarray.diagonal", "api/generated/cupynumeric.ndarray.dot", "api/generated/cupynumeric.ndarray.dtype", "api/generated/cupynumeric.ndarray.dump", "api/generated/cupynumeric.ndarray.dumps", "api/generated/cupynumeric.ndarray.fill", "api/generated/cupynumeric.ndarray.flags", "api/generated/cupynumeric.ndarray.flat", "api/generated/cupynumeric.ndarray.flatten", "api/generated/cupynumeric.ndarray.flip", "api/generated/cupynumeric.ndarray.getfield", "api/generated/cupynumeric.ndarray.imag", "api/generated/cupynumeric.ndarray.item", "api/generated/cupynumeric.ndarray.itemset", "api/generated/cupynumeric.ndarray.itemsize", "api/generated/cupynumeric.ndarray.max", "api/generated/cupynumeric.ndarray.mean", "api/generated/cupynumeric.ndarray.min", "api/generated/cupynumeric.ndarray.nbytes", "api/generated/cupynumeric.ndarray.ndim", "api/generated/cupynumeric.ndarray.nonzero", "api/generated/cupynumeric.ndarray.partition", "api/generated/cupynumeric.ndarray.prod", "api/generated/cupynumeric.ndarray.put", "api/generated/cupynumeric.ndarray.ravel", "api/generated/cupynumeric.ndarray.real", "api/generated/cupynumeric.ndarray.reshape", "api/generated/cupynumeric.ndarray.searchsorted", "api/generated/cupynumeric.ndarray.setfield", "api/generated/cupynumeric.ndarray.setflags", "api/generated/cupynumeric.ndarray.shape", "api/generated/cupynumeric.ndarray.size", "api/generated/cupynumeric.ndarray.sort", "api/generated/cupynumeric.ndarray.squeeze", "api/generated/cupynumeric.ndarray.strides", "api/generated/cupynumeric.ndarray.sum", "api/generated/cupynumeric.ndarray.swapaxes", "api/generated/cupynumeric.ndarray.take", "api/generated/cupynumeric.ndarray.tobytes", "api/generated/cupynumeric.ndarray.tofile", "api/generated/cupynumeric.ndarray.tolist", "api/generated/cupynumeric.ndarray.tostring", "api/generated/cupynumeric.ndarray.trace", "api/generated/cupynumeric.ndarray.transpose", "api/generated/cupynumeric.ndarray.unique", "api/generated/cupynumeric.ndarray.var", "api/generated/cupynumeric.ndarray.view", "api/generated/cupynumeric.ndim", "api/generated/cupynumeric.negative", "api/generated/cupynumeric.nextafter", "api/generated/cupynumeric.nonzero", "api/generated/cupynumeric.not_equal", "api/generated/cupynumeric.ones", "api/generated/cupynumeric.ones_like", "api/generated/cupynumeric.outer", "api/generated/cupynumeric.packbits", "api/generated/cupynumeric.partition", "api/generated/cupynumeric.percentile", "api/generated/cupynumeric.place", "api/generated/cupynumeric.positive", "api/generated/cupynumeric.power", "api/generated/cupynumeric.prod", "api/generated/cupynumeric.put", "api/generated/cupynumeric.put_along_axis", "api/generated/cupynumeric.putmask", "api/generated/cupynumeric.quantile", "api/generated/cupynumeric.rad2deg", "api/generated/cupynumeric.radians", "api/generated/cupynumeric.random.beta", "api/generated/cupynumeric.random.binomial", "api/generated/cupynumeric.random.bytes", "api/generated/cupynumeric.random.chisquare", "api/generated/cupynumeric.random.default_rng", "api/generated/cupynumeric.random.exponential", "api/generated/cupynumeric.random.f", "api/generated/cupynumeric.random.gamma", "api/generated/cupynumeric.random.geometric", "api/generated/cupynumeric.random.gumbel", "api/generated/cupynumeric.random.hypergeometric", "api/generated/cupynumeric.random.laplace", "api/generated/cupynumeric.random.logistic", "api/generated/cupynumeric.random.lognormal", "api/generated/cupynumeric.random.logseries", "api/generated/cupynumeric.random.negative_binomial", "api/generated/cupynumeric.random.noncentral_chisquare", "api/generated/cupynumeric.random.noncentral_f", "api/generated/cupynumeric.random.normal", "api/generated/cupynumeric.random.pareto", "api/generated/cupynumeric.random.poisson", "api/generated/cupynumeric.random.power", "api/generated/cupynumeric.random.rand", "api/generated/cupynumeric.random.randint", "api/generated/cupynumeric.random.randn", "api/generated/cupynumeric.random.random", "api/generated/cupynumeric.random.random_integers", "api/generated/cupynumeric.random.random_sample", "api/generated/cupynumeric.random.ranf", "api/generated/cupynumeric.random.rayleigh", "api/generated/cupynumeric.random.sample", "api/generated/cupynumeric.random.seed", "api/generated/cupynumeric.random.standard_cauchy", "api/generated/cupynumeric.random.standard_exponential", "api/generated/cupynumeric.random.standard_gamma", "api/generated/cupynumeric.random.standard_t", "api/generated/cupynumeric.random.triangular", "api/generated/cupynumeric.random.uniform", "api/generated/cupynumeric.random.vonmises", "api/generated/cupynumeric.random.wald", "api/generated/cupynumeric.random.weibull", "api/generated/cupynumeric.random.zipf", "api/generated/cupynumeric.ravel", "api/generated/cupynumeric.real", "api/generated/cupynumeric.reciprocal", "api/generated/cupynumeric.remainder", "api/generated/cupynumeric.repeat", "api/generated/cupynumeric.reshape", "api/generated/cupynumeric.right_shift", "api/generated/cupynumeric.rint", "api/generated/cupynumeric.roll", "api/generated/cupynumeric.rot90", "api/generated/cupynumeric.round", "api/generated/cupynumeric.row_stack", "api/generated/cupynumeric.searchsorted", "api/generated/cupynumeric.select", "api/generated/cupynumeric.shape", "api/generated/cupynumeric.sign", "api/generated/cupynumeric.signbit", "api/generated/cupynumeric.sin", "api/generated/cupynumeric.sinh", "api/generated/cupynumeric.sort", "api/generated/cupynumeric.sort_complex", "api/generated/cupynumeric.split", "api/generated/cupynumeric.sqrt", "api/generated/cupynumeric.square", "api/generated/cupynumeric.squeeze", "api/generated/cupynumeric.stack", "api/generated/cupynumeric.subtract", "api/generated/cupynumeric.sum", "api/generated/cupynumeric.swapaxes", "api/generated/cupynumeric.take", "api/generated/cupynumeric.take_along_axis", "api/generated/cupynumeric.tan", "api/generated/cupynumeric.tanh", "api/generated/cupynumeric.tensordot", "api/generated/cupynumeric.tile", "api/generated/cupynumeric.trace", "api/generated/cupynumeric.transpose", "api/generated/cupynumeric.tri", "api/generated/cupynumeric.tril", "api/generated/cupynumeric.tril_indices", "api/generated/cupynumeric.tril_indices_from", "api/generated/cupynumeric.triu", "api/generated/cupynumeric.triu_indices", "api/generated/cupynumeric.triu_indices_from", "api/generated/cupynumeric.true_divide", "api/generated/cupynumeric.trunc", "api/generated/cupynumeric.unique", "api/generated/cupynumeric.unpackbits", "api/generated/cupynumeric.unravel_index", "api/generated/cupynumeric.var", "api/generated/cupynumeric.vdot", "api/generated/cupynumeric.vsplit", "api/generated/cupynumeric.vstack", "api/generated/cupynumeric.where", "api/generated/cupynumeric.zeros", "api/generated/cupynumeric.zeros_like", "api/index", "api/indexing", "api/io", "api/linalg", "api/logic", "api/manipulation", "api/math", "api/ndarray", "api/random", "api/routines", "api/set", "api/settings", "api/sorting", "api/statistics", "api/window", "developer/CONTRIBUTING", "developer/building", "developer/index", "developer/testing", "examples/black_scholes", "examples/cholesky", "examples/compact_finite_difference", "examples/edge_detection", "examples/index", "examples/kmeans", "examples/newton_raphson_2d", "examples/stencil", "examples/torchswe", "faqs", "index", "installation", "oss-licenses", "user/advanced", "user/differences", "user/howtos/benchmarking", "user/howtos/index", "user/howtos/measuring", "user/howtos/patching", "user/index", "user/practices", "user/tutorial", "user/usage"], "envversion": {"nbsphinx": 4, "sphinx": 64, "sphinx.domains.c": 3, "sphinx.domains.changeset": 1, "sphinx.domains.citation": 1, "sphinx.domains.cpp": 9, "sphinx.domains.index": 1, "sphinx.domains.javascript": 3, "sphinx.domains.math": 2, "sphinx.domains.python": 4, "sphinx.domains.rst": 2, "sphinx.domains.std": 2, "sphinx.ext.intersphinx": 1}, "filenames": ["_implemented.rst", "api/_bitgenerator.rst", "api/_generator.rst", "api/_grouped.rst", "api/_ndarray.rst", "api/binary.rst", "api/broadcast.rst", "api/classes.rst", "api/comparison.rst", "api/creation.rst", "api/datatype.rst", "api/fft.rst", "api/generated/cupynumeric.absolute.rst", "api/generated/cupynumeric.add.rst", "api/generated/cupynumeric.all.rst", "api/generated/cupynumeric.allclose.rst", "api/generated/cupynumeric.amax.rst", "api/generated/cupynumeric.amin.rst", "api/generated/cupynumeric.angle.rst", "api/generated/cupynumeric.any.rst", "api/generated/cupynumeric.append.rst", "api/generated/cupynumeric.arange.rst", "api/generated/cupynumeric.arccos.rst", "api/generated/cupynumeric.arccosh.rst", "api/generated/cupynumeric.arcsin.rst", "api/generated/cupynumeric.arcsinh.rst", "api/generated/cupynumeric.arctan.rst", "api/generated/cupynumeric.arctan2.rst", "api/generated/cupynumeric.arctanh.rst", "api/generated/cupynumeric.argmax.rst", "api/generated/cupynumeric.argmin.rst", "api/generated/cupynumeric.argpartition.rst", "api/generated/cupynumeric.argsort.rst", "api/generated/cupynumeric.argwhere.rst", "api/generated/cupynumeric.array.rst", "api/generated/cupynumeric.array_equal.rst", "api/generated/cupynumeric.array_split.rst", "api/generated/cupynumeric.asarray.rst", "api/generated/cupynumeric.atleast_1d.rst", "api/generated/cupynumeric.atleast_2d.rst", "api/generated/cupynumeric.atleast_3d.rst", "api/generated/cupynumeric.average.rst", "api/generated/cupynumeric.bartlett.rst", "api/generated/cupynumeric.bincount.rst", "api/generated/cupynumeric.bitwise_and.rst", "api/generated/cupynumeric.bitwise_or.rst", "api/generated/cupynumeric.bitwise_xor.rst", "api/generated/cupynumeric.blackman.rst", "api/generated/cupynumeric.block.rst", "api/generated/cupynumeric.broadcast_arrays.rst", "api/generated/cupynumeric.broadcast_shapes.rst", "api/generated/cupynumeric.broadcast_to.rst", "api/generated/cupynumeric.cbrt.rst", "api/generated/cupynumeric.ceil.rst", "api/generated/cupynumeric.choose.rst", "api/generated/cupynumeric.clip.rst", "api/generated/cupynumeric.column_stack.rst", "api/generated/cupynumeric.compress.rst", "api/generated/cupynumeric.concatenate.rst", "api/generated/cupynumeric.conj.rst", "api/generated/cupynumeric.conjugate.rst", "api/generated/cupynumeric.convolve.rst", "api/generated/cupynumeric.copy.rst", "api/generated/cupynumeric.copysign.rst", "api/generated/cupynumeric.cos.rst", "api/generated/cupynumeric.cosh.rst", "api/generated/cupynumeric.count_nonzero.rst", "api/generated/cupynumeric.cov.rst", "api/generated/cupynumeric.cumprod.rst", "api/generated/cupynumeric.cumsum.rst", "api/generated/cupynumeric.deg2rad.rst", "api/generated/cupynumeric.degrees.rst", "api/generated/cupynumeric.delete.rst", "api/generated/cupynumeric.diag.rst", "api/generated/cupynumeric.diag_indices.rst", "api/generated/cupynumeric.diag_indices_from.rst", "api/generated/cupynumeric.diagonal.rst", "api/generated/cupynumeric.diff.rst", "api/generated/cupynumeric.digitize.rst", "api/generated/cupynumeric.divide.rst", "api/generated/cupynumeric.dot.rst", "api/generated/cupynumeric.dsplit.rst", "api/generated/cupynumeric.dstack.rst", "api/generated/cupynumeric.einsum.rst", "api/generated/cupynumeric.einsum_path.rst", "api/generated/cupynumeric.empty.rst", "api/generated/cupynumeric.empty_like.rst", "api/generated/cupynumeric.equal.rst", "api/generated/cupynumeric.exp.rst", "api/generated/cupynumeric.exp2.rst", "api/generated/cupynumeric.expand_dims.rst", "api/generated/cupynumeric.expm1.rst", "api/generated/cupynumeric.extract.rst", "api/generated/cupynumeric.eye.rst", "api/generated/cupynumeric.fabs.rst", "api/generated/cupynumeric.fft.fft.rst", "api/generated/cupynumeric.fft.fft2.rst", "api/generated/cupynumeric.fft.fftn.rst", "api/generated/cupynumeric.fft.fftshift.rst", "api/generated/cupynumeric.fft.hfft.rst", "api/generated/cupynumeric.fft.ifft.rst", "api/generated/cupynumeric.fft.ifft2.rst", "api/generated/cupynumeric.fft.ifftn.rst", "api/generated/cupynumeric.fft.ifftshift.rst", "api/generated/cupynumeric.fft.ihfft.rst", "api/generated/cupynumeric.fft.irfft.rst", "api/generated/cupynumeric.fft.irfft2.rst", "api/generated/cupynumeric.fft.irfftn.rst", "api/generated/cupynumeric.fft.rfft.rst", "api/generated/cupynumeric.fft.rfft2.rst", "api/generated/cupynumeric.fft.rfftn.rst", "api/generated/cupynumeric.fill_diagonal.rst", "api/generated/cupynumeric.find_common_type.rst", "api/generated/cupynumeric.flatnonzero.rst", "api/generated/cupynumeric.flip.rst", "api/generated/cupynumeric.fliplr.rst", "api/generated/cupynumeric.flipud.rst", "api/generated/cupynumeric.float_power.rst", "api/generated/cupynumeric.floor.rst", "api/generated/cupynumeric.floor_divide.rst", "api/generated/cupynumeric.fmax.rst", "api/generated/cupynumeric.fmin.rst", "api/generated/cupynumeric.fmod.rst", "api/generated/cupynumeric.frexp.rst", "api/generated/cupynumeric.full.rst", "api/generated/cupynumeric.full_like.rst", "api/generated/cupynumeric.gcd.rst", "api/generated/cupynumeric.gradient.rst", "api/generated/cupynumeric.greater.rst", "api/generated/cupynumeric.greater_equal.rst", "api/generated/cupynumeric.hamming.rst", "api/generated/cupynumeric.hanning.rst", "api/generated/cupynumeric.histogram.rst", "api/generated/cupynumeric.hsplit.rst", "api/generated/cupynumeric.hstack.rst", "api/generated/cupynumeric.hypot.rst", "api/generated/cupynumeric.identity.rst", "api/generated/cupynumeric.imag.rst", "api/generated/cupynumeric.indices.rst", "api/generated/cupynumeric.inner.rst", "api/generated/cupynumeric.invert.rst", "api/generated/cupynumeric.isclose.rst", "api/generated/cupynumeric.iscomplex.rst", "api/generated/cupynumeric.iscomplexobj.rst", "api/generated/cupynumeric.isfinite.rst", "api/generated/cupynumeric.isinf.rst", "api/generated/cupynumeric.isnan.rst", "api/generated/cupynumeric.isneginf.rst", "api/generated/cupynumeric.isposinf.rst", "api/generated/cupynumeric.isreal.rst", "api/generated/cupynumeric.isrealobj.rst", "api/generated/cupynumeric.isscalar.rst", "api/generated/cupynumeric.ix_.rst", "api/generated/cupynumeric.kaiser.rst", "api/generated/cupynumeric.lcm.rst", "api/generated/cupynumeric.ldexp.rst", "api/generated/cupynumeric.left_shift.rst", "api/generated/cupynumeric.less.rst", "api/generated/cupynumeric.less_equal.rst", "api/generated/cupynumeric.linalg.cholesky.rst", "api/generated/cupynumeric.linalg.eig.rst", "api/generated/cupynumeric.linalg.eigh.rst", "api/generated/cupynumeric.linalg.eigvals.rst", "api/generated/cupynumeric.linalg.eigvalsh.rst", "api/generated/cupynumeric.linalg.expm.rst", "api/generated/cupynumeric.linalg.matrix_power.rst", "api/generated/cupynumeric.linalg.multi_dot.rst", "api/generated/cupynumeric.linalg.norm.rst", "api/generated/cupynumeric.linalg.qr.rst", "api/generated/cupynumeric.linalg.solve.rst", "api/generated/cupynumeric.linalg.svd.rst", "api/generated/cupynumeric.linspace.rst", "api/generated/cupynumeric.load.rst", "api/generated/cupynumeric.log.rst", "api/generated/cupynumeric.log10.rst", "api/generated/cupynumeric.log1p.rst", "api/generated/cupynumeric.log2.rst", "api/generated/cupynumeric.logaddexp.rst", "api/generated/cupynumeric.logaddexp2.rst", "api/generated/cupynumeric.logical_and.rst", "api/generated/cupynumeric.logical_not.rst", "api/generated/cupynumeric.logical_or.rst", "api/generated/cupynumeric.logical_xor.rst", "api/generated/cupynumeric.mask_indices.rst", "api/generated/cupynumeric.matmul.rst", "api/generated/cupynumeric.maximum.rst", "api/generated/cupynumeric.mean.rst", "api/generated/cupynumeric.median.rst", "api/generated/cupynumeric.meshgrid.rst", "api/generated/cupynumeric.minimum.rst", "api/generated/cupynumeric.mod.rst", "api/generated/cupynumeric.modf.rst", "api/generated/cupynumeric.moveaxis.rst", "api/generated/cupynumeric.multiply.rst", "api/generated/cupynumeric.nan_to_num.rst", "api/generated/cupynumeric.nanargmax.rst", "api/generated/cupynumeric.nanargmin.rst", "api/generated/cupynumeric.nancumprod.rst", "api/generated/cupynumeric.nancumsum.rst", "api/generated/cupynumeric.nanmax.rst", "api/generated/cupynumeric.nanmean.rst", "api/generated/cupynumeric.nanmedian.rst", "api/generated/cupynumeric.nanmin.rst", "api/generated/cupynumeric.nanpercentile.rst", "api/generated/cupynumeric.nanprod.rst", "api/generated/cupynumeric.nanquantile.rst", "api/generated/cupynumeric.nansum.rst", "api/generated/cupynumeric.ndarray.T.rst", "api/generated/cupynumeric.ndarray.__abs__.rst", "api/generated/cupynumeric.ndarray.__add__.rst", "api/generated/cupynumeric.ndarray.__and__.rst", "api/generated/cupynumeric.ndarray.__array__.rst", "api/generated/cupynumeric.ndarray.__bool__.rst", "api/generated/cupynumeric.ndarray.__complex__.rst", "api/generated/cupynumeric.ndarray.__contains__.rst", "api/generated/cupynumeric.ndarray.__copy__.rst", "api/generated/cupynumeric.ndarray.__deepcopy__.rst", "api/generated/cupynumeric.ndarray.__divmod__.rst", "api/generated/cupynumeric.ndarray.__eq__.rst", "api/generated/cupynumeric.ndarray.__float__.rst", "api/generated/cupynumeric.ndarray.__floordiv__.rst", "api/generated/cupynumeric.ndarray.__ge__.rst", "api/generated/cupynumeric.ndarray.__getitem__.rst", "api/generated/cupynumeric.ndarray.__gt__.rst", "api/generated/cupynumeric.ndarray.__iadd__.rst", "api/generated/cupynumeric.ndarray.__iand__.rst", "api/generated/cupynumeric.ndarray.__ifloordiv__.rst", "api/generated/cupynumeric.ndarray.__ilshift__.rst", "api/generated/cupynumeric.ndarray.__imatmul__.rst", "api/generated/cupynumeric.ndarray.__imod__.rst", "api/generated/cupynumeric.ndarray.__imul__.rst", "api/generated/cupynumeric.ndarray.__index__.rst", "api/generated/cupynumeric.ndarray.__int__.rst", "api/generated/cupynumeric.ndarray.__invert__.rst", "api/generated/cupynumeric.ndarray.__ior__.rst", "api/generated/cupynumeric.ndarray.__ipow__.rst", "api/generated/cupynumeric.ndarray.__irshift__.rst", "api/generated/cupynumeric.ndarray.__isub__.rst", "api/generated/cupynumeric.ndarray.__itruediv__.rst", "api/generated/cupynumeric.ndarray.__ixor__.rst", "api/generated/cupynumeric.ndarray.__le__.rst", "api/generated/cupynumeric.ndarray.__len__.rst", "api/generated/cupynumeric.ndarray.__lshift__.rst", "api/generated/cupynumeric.ndarray.__lt__.rst", "api/generated/cupynumeric.ndarray.__matmul__.rst", "api/generated/cupynumeric.ndarray.__mod__.rst", "api/generated/cupynumeric.ndarray.__mul__.rst", "api/generated/cupynumeric.ndarray.__ne__.rst", "api/generated/cupynumeric.ndarray.__neg__.rst", "api/generated/cupynumeric.ndarray.__new__.rst", "api/generated/cupynumeric.ndarray.__or__.rst", "api/generated/cupynumeric.ndarray.__pos__.rst", "api/generated/cupynumeric.ndarray.__pow__.rst", "api/generated/cupynumeric.ndarray.__reduce__.rst", "api/generated/cupynumeric.ndarray.__repr__.rst", "api/generated/cupynumeric.ndarray.__rmatmul__.rst", "api/generated/cupynumeric.ndarray.__rshift__.rst", "api/generated/cupynumeric.ndarray.__setitem__.rst", "api/generated/cupynumeric.ndarray.__setstate__.rst", "api/generated/cupynumeric.ndarray.__str__.rst", "api/generated/cupynumeric.ndarray.__sub__.rst", "api/generated/cupynumeric.ndarray.__truediv__.rst", "api/generated/cupynumeric.ndarray.__xor__.rst", "api/generated/cupynumeric.ndarray.all.rst", "api/generated/cupynumeric.ndarray.any.rst", "api/generated/cupynumeric.ndarray.argmax.rst", "api/generated/cupynumeric.ndarray.argmin.rst", "api/generated/cupynumeric.ndarray.argpartition.rst", "api/generated/cupynumeric.ndarray.argsort.rst", "api/generated/cupynumeric.ndarray.astype.rst", "api/generated/cupynumeric.ndarray.base.rst", "api/generated/cupynumeric.ndarray.choose.rst", "api/generated/cupynumeric.ndarray.clip.rst", "api/generated/cupynumeric.ndarray.compress.rst", "api/generated/cupynumeric.ndarray.conj.rst", "api/generated/cupynumeric.ndarray.conjugate.rst", "api/generated/cupynumeric.ndarray.copy.rst", "api/generated/cupynumeric.ndarray.ctypes.rst", "api/generated/cupynumeric.ndarray.cumprod.rst", "api/generated/cupynumeric.ndarray.cumsum.rst", "api/generated/cupynumeric.ndarray.data.rst", "api/generated/cupynumeric.ndarray.diagonal.rst", "api/generated/cupynumeric.ndarray.dot.rst", "api/generated/cupynumeric.ndarray.dtype.rst", "api/generated/cupynumeric.ndarray.dump.rst", "api/generated/cupynumeric.ndarray.dumps.rst", "api/generated/cupynumeric.ndarray.fill.rst", "api/generated/cupynumeric.ndarray.flags.rst", "api/generated/cupynumeric.ndarray.flat.rst", "api/generated/cupynumeric.ndarray.flatten.rst", "api/generated/cupynumeric.ndarray.flip.rst", "api/generated/cupynumeric.ndarray.getfield.rst", "api/generated/cupynumeric.ndarray.imag.rst", "api/generated/cupynumeric.ndarray.item.rst", "api/generated/cupynumeric.ndarray.itemset.rst", "api/generated/cupynumeric.ndarray.itemsize.rst", "api/generated/cupynumeric.ndarray.max.rst", "api/generated/cupynumeric.ndarray.mean.rst", "api/generated/cupynumeric.ndarray.min.rst", "api/generated/cupynumeric.ndarray.nbytes.rst", "api/generated/cupynumeric.ndarray.ndim.rst", "api/generated/cupynumeric.ndarray.nonzero.rst", "api/generated/cupynumeric.ndarray.partition.rst", "api/generated/cupynumeric.ndarray.prod.rst", "api/generated/cupynumeric.ndarray.put.rst", "api/generated/cupynumeric.ndarray.ravel.rst", "api/generated/cupynumeric.ndarray.real.rst", "api/generated/cupynumeric.ndarray.reshape.rst", "api/generated/cupynumeric.ndarray.searchsorted.rst", "api/generated/cupynumeric.ndarray.setfield.rst", "api/generated/cupynumeric.ndarray.setflags.rst", "api/generated/cupynumeric.ndarray.shape.rst", "api/generated/cupynumeric.ndarray.size.rst", "api/generated/cupynumeric.ndarray.sort.rst", "api/generated/cupynumeric.ndarray.squeeze.rst", "api/generated/cupynumeric.ndarray.strides.rst", "api/generated/cupynumeric.ndarray.sum.rst", "api/generated/cupynumeric.ndarray.swapaxes.rst", "api/generated/cupynumeric.ndarray.take.rst", "api/generated/cupynumeric.ndarray.tobytes.rst", "api/generated/cupynumeric.ndarray.tofile.rst", "api/generated/cupynumeric.ndarray.tolist.rst", "api/generated/cupynumeric.ndarray.tostring.rst", "api/generated/cupynumeric.ndarray.trace.rst", "api/generated/cupynumeric.ndarray.transpose.rst", "api/generated/cupynumeric.ndarray.unique.rst", "api/generated/cupynumeric.ndarray.var.rst", "api/generated/cupynumeric.ndarray.view.rst", "api/generated/cupynumeric.ndim.rst", "api/generated/cupynumeric.negative.rst", "api/generated/cupynumeric.nextafter.rst", "api/generated/cupynumeric.nonzero.rst", "api/generated/cupynumeric.not_equal.rst", "api/generated/cupynumeric.ones.rst", "api/generated/cupynumeric.ones_like.rst", "api/generated/cupynumeric.outer.rst", "api/generated/cupynumeric.packbits.rst", "api/generated/cupynumeric.partition.rst", "api/generated/cupynumeric.percentile.rst", "api/generated/cupynumeric.place.rst", "api/generated/cupynumeric.positive.rst", "api/generated/cupynumeric.power.rst", "api/generated/cupynumeric.prod.rst", "api/generated/cupynumeric.put.rst", "api/generated/cupynumeric.put_along_axis.rst", "api/generated/cupynumeric.putmask.rst", "api/generated/cupynumeric.quantile.rst", "api/generated/cupynumeric.rad2deg.rst", "api/generated/cupynumeric.radians.rst", "api/generated/cupynumeric.random.beta.rst", "api/generated/cupynumeric.random.binomial.rst", "api/generated/cupynumeric.random.bytes.rst", "api/generated/cupynumeric.random.chisquare.rst", "api/generated/cupynumeric.random.default_rng.rst", "api/generated/cupynumeric.random.exponential.rst", "api/generated/cupynumeric.random.f.rst", "api/generated/cupynumeric.random.gamma.rst", "api/generated/cupynumeric.random.geometric.rst", "api/generated/cupynumeric.random.gumbel.rst", "api/generated/cupynumeric.random.hypergeometric.rst", "api/generated/cupynumeric.random.laplace.rst", "api/generated/cupynumeric.random.logistic.rst", "api/generated/cupynumeric.random.lognormal.rst", "api/generated/cupynumeric.random.logseries.rst", "api/generated/cupynumeric.random.negative_binomial.rst", "api/generated/cupynumeric.random.noncentral_chisquare.rst", "api/generated/cupynumeric.random.noncentral_f.rst", "api/generated/cupynumeric.random.normal.rst", "api/generated/cupynumeric.random.pareto.rst", "api/generated/cupynumeric.random.poisson.rst", "api/generated/cupynumeric.random.power.rst", "api/generated/cupynumeric.random.rand.rst", "api/generated/cupynumeric.random.randint.rst", "api/generated/cupynumeric.random.randn.rst", "api/generated/cupynumeric.random.random.rst", "api/generated/cupynumeric.random.random_integers.rst", "api/generated/cupynumeric.random.random_sample.rst", "api/generated/cupynumeric.random.ranf.rst", "api/generated/cupynumeric.random.rayleigh.rst", "api/generated/cupynumeric.random.sample.rst", "api/generated/cupynumeric.random.seed.rst", "api/generated/cupynumeric.random.standard_cauchy.rst", "api/generated/cupynumeric.random.standard_exponential.rst", "api/generated/cupynumeric.random.standard_gamma.rst", "api/generated/cupynumeric.random.standard_t.rst", "api/generated/cupynumeric.random.triangular.rst", "api/generated/cupynumeric.random.uniform.rst", "api/generated/cupynumeric.random.vonmises.rst", "api/generated/cupynumeric.random.wald.rst", "api/generated/cupynumeric.random.weibull.rst", "api/generated/cupynumeric.random.zipf.rst", "api/generated/cupynumeric.ravel.rst", "api/generated/cupynumeric.real.rst", "api/generated/cupynumeric.reciprocal.rst", "api/generated/cupynumeric.remainder.rst", "api/generated/cupynumeric.repeat.rst", "api/generated/cupynumeric.reshape.rst", "api/generated/cupynumeric.right_shift.rst", "api/generated/cupynumeric.rint.rst", "api/generated/cupynumeric.roll.rst", "api/generated/cupynumeric.rot90.rst", "api/generated/cupynumeric.round.rst", "api/generated/cupynumeric.row_stack.rst", "api/generated/cupynumeric.searchsorted.rst", "api/generated/cupynumeric.select.rst", "api/generated/cupynumeric.shape.rst", "api/generated/cupynumeric.sign.rst", "api/generated/cupynumeric.signbit.rst", "api/generated/cupynumeric.sin.rst", "api/generated/cupynumeric.sinh.rst", "api/generated/cupynumeric.sort.rst", "api/generated/cupynumeric.sort_complex.rst", "api/generated/cupynumeric.split.rst", "api/generated/cupynumeric.sqrt.rst", "api/generated/cupynumeric.square.rst", "api/generated/cupynumeric.squeeze.rst", "api/generated/cupynumeric.stack.rst", "api/generated/cupynumeric.subtract.rst", "api/generated/cupynumeric.sum.rst", "api/generated/cupynumeric.swapaxes.rst", "api/generated/cupynumeric.take.rst", "api/generated/cupynumeric.take_along_axis.rst", "api/generated/cupynumeric.tan.rst", "api/generated/cupynumeric.tanh.rst", "api/generated/cupynumeric.tensordot.rst", "api/generated/cupynumeric.tile.rst", "api/generated/cupynumeric.trace.rst", "api/generated/cupynumeric.transpose.rst", "api/generated/cupynumeric.tri.rst", "api/generated/cupynumeric.tril.rst", "api/generated/cupynumeric.tril_indices.rst", "api/generated/cupynumeric.tril_indices_from.rst", "api/generated/cupynumeric.triu.rst", "api/generated/cupynumeric.triu_indices.rst", "api/generated/cupynumeric.triu_indices_from.rst", "api/generated/cupynumeric.true_divide.rst", "api/generated/cupynumeric.trunc.rst", "api/generated/cupynumeric.unique.rst", "api/generated/cupynumeric.unpackbits.rst", "api/generated/cupynumeric.unravel_index.rst", "api/generated/cupynumeric.var.rst", "api/generated/cupynumeric.vdot.rst", "api/generated/cupynumeric.vsplit.rst", "api/generated/cupynumeric.vstack.rst", "api/generated/cupynumeric.where.rst", "api/generated/cupynumeric.zeros.rst", "api/generated/cupynumeric.zeros_like.rst", "api/index.rst", "api/indexing.rst", "api/io.rst", "api/linalg.rst", "api/logic.rst", "api/manipulation.rst", "api/math.rst", "api/ndarray.rst", "api/random.rst", "api/routines.rst", "api/set.rst", "api/settings.rst", "api/sorting.rst", "api/statistics.rst", "api/window.rst", "developer/CONTRIBUTING.md", "developer/building.rst", "developer/index.rst", "developer/testing.rst", "examples/black_scholes.ipynb", "examples/cholesky.ipynb", "examples/compact_finite_difference.ipynb", "examples/edge_detection.ipynb", "examples/index.rst", "examples/kmeans.ipynb", "examples/newton_raphson_2d.ipynb", "examples/stencil.ipynb", "examples/torchswe.ipynb", "faqs.rst", "index.rst", "installation.rst", "oss-licenses.rst", "user/advanced.rst", "user/differences.rst", "user/howtos/benchmarking.rst", "user/howtos/index.rst", "user/howtos/measuring.rst", "user/howtos/patching.rst", "user/index.rst", "user/practices.rst", "user/tutorial.rst", "user/usage.rst"], "indexentries": {"__abs__() (cupynumeric.ndarray method)": [[208, "cupynumeric.ndarray.__abs__", false]], "__add__() (cupynumeric.ndarray method)": [[209, "cupynumeric.ndarray.__add__", false]], "__and__() (cupynumeric.ndarray method)": [[210, "cupynumeric.ndarray.__and__", false]], "__array__() (cupynumeric.ndarray method)": [[211, "cupynumeric.ndarray.__array__", false]], "__bool__() (cupynumeric.ndarray method)": [[212, "cupynumeric.ndarray.__bool__", false]], "__complex__() (cupynumeric.ndarray method)": [[213, "cupynumeric.ndarray.__complex__", false]], "__contains__() (cupynumeric.ndarray method)": [[214, "cupynumeric.ndarray.__contains__", false]], "__copy__() (cupynumeric.ndarray method)": [[215, "cupynumeric.ndarray.__copy__", false]], "__deepcopy__() (cupynumeric.ndarray method)": [[216, "cupynumeric.ndarray.__deepcopy__", false]], "__divmod__() (cupynumeric.ndarray method)": [[217, "cupynumeric.ndarray.__divmod__", false]], "__eq__() (cupynumeric.ndarray method)": [[218, "cupynumeric.ndarray.__eq__", false]], "__float__() (cupynumeric.ndarray method)": [[219, "cupynumeric.ndarray.__float__", false]], "__floordiv__() (cupynumeric.ndarray method)": [[220, "cupynumeric.ndarray.__floordiv__", false]], "__ge__() (cupynumeric.ndarray method)": [[221, "cupynumeric.ndarray.__ge__", false]], "__getitem__() (cupynumeric.ndarray method)": [[222, "cupynumeric.ndarray.__getitem__", false]], "__gt__() (cupynumeric.ndarray method)": [[223, "cupynumeric.ndarray.__gt__", false]], "__iadd__() (cupynumeric.ndarray method)": [[224, "cupynumeric.ndarray.__iadd__", false]], "__iand__() (cupynumeric.ndarray method)": [[225, "cupynumeric.ndarray.__iand__", false]], "__ifloordiv__() (cupynumeric.ndarray method)": [[226, "cupynumeric.ndarray.__ifloordiv__", false]], "__ilshift__() (cupynumeric.ndarray method)": [[227, "cupynumeric.ndarray.__ilshift__", false]], "__imatmul__() (cupynumeric.ndarray method)": [[228, "cupynumeric.ndarray.__imatmul__", false]], "__imod__() (cupynumeric.ndarray method)": [[229, "cupynumeric.ndarray.__imod__", false]], "__imul__() (cupynumeric.ndarray method)": [[230, "cupynumeric.ndarray.__imul__", false]], "__index__() (cupynumeric.ndarray method)": [[231, "cupynumeric.ndarray.__index__", false]], "__init__() (cupynumeric.ndarray method)": [[4, "cupynumeric.ndarray.__init__", false]], "__init__() (cupynumeric.random.bitgenerator method)": [[1, "cupynumeric.random.BitGenerator.__init__", false]], "__init__() (cupynumeric.random.generator method)": [[2, "cupynumeric.random.Generator.__init__", false]], "__int__() (cupynumeric.ndarray method)": [[232, "cupynumeric.ndarray.__int__", false]], "__invert__() (cupynumeric.ndarray method)": [[233, "cupynumeric.ndarray.__invert__", false]], "__ior__() (cupynumeric.ndarray method)": [[234, "cupynumeric.ndarray.__ior__", false]], "__ipow__() (cupynumeric.ndarray method)": [[235, "cupynumeric.ndarray.__ipow__", false]], "__irshift__() (cupynumeric.ndarray method)": [[236, "cupynumeric.ndarray.__irshift__", false]], "__isub__() (cupynumeric.ndarray method)": [[237, "cupynumeric.ndarray.__isub__", false]], "__itruediv__() (cupynumeric.ndarray method)": [[238, "cupynumeric.ndarray.__itruediv__", false]], "__ixor__() (cupynumeric.ndarray method)": [[239, "cupynumeric.ndarray.__ixor__", false]], "__le__() (cupynumeric.ndarray method)": [[240, "cupynumeric.ndarray.__le__", false]], "__len__() (cupynumeric.ndarray method)": [[241, "cupynumeric.ndarray.__len__", false]], "__lshift__() (cupynumeric.ndarray method)": [[242, "cupynumeric.ndarray.__lshift__", false]], "__lt__() (cupynumeric.ndarray method)": [[243, "cupynumeric.ndarray.__lt__", false]], "__matmul__() (cupynumeric.ndarray method)": [[244, "cupynumeric.ndarray.__matmul__", false]], "__mod__() (cupynumeric.ndarray method)": [[245, "cupynumeric.ndarray.__mod__", false]], "__mul__() (cupynumeric.ndarray method)": [[246, "cupynumeric.ndarray.__mul__", false]], "__ne__() (cupynumeric.ndarray method)": [[247, "cupynumeric.ndarray.__ne__", false]], "__neg__() (cupynumeric.ndarray method)": [[248, "cupynumeric.ndarray.__neg__", false]], "__new__() (cupynumeric.ndarray method)": [[249, "cupynumeric.ndarray.__new__", false]], "__or__() (cupynumeric.ndarray method)": [[250, "cupynumeric.ndarray.__or__", false]], "__pos__() (cupynumeric.ndarray method)": [[251, "cupynumeric.ndarray.__pos__", false]], "__pow__() (cupynumeric.ndarray method)": [[252, "cupynumeric.ndarray.__pow__", false]], "__reduce__() (cupynumeric.ndarray method)": [[253, "cupynumeric.ndarray.__reduce__", false]], "__repr__() (cupynumeric.ndarray method)": [[254, "cupynumeric.ndarray.__repr__", false]], "__rmatmul__() (cupynumeric.ndarray method)": [[255, "cupynumeric.ndarray.__rmatmul__", false]], "__rshift__() (cupynumeric.ndarray method)": [[256, "cupynumeric.ndarray.__rshift__", false]], "__setitem__() (cupynumeric.ndarray method)": [[257, "cupynumeric.ndarray.__setitem__", false]], "__setstate__() (cupynumeric.ndarray method)": [[258, "cupynumeric.ndarray.__setstate__", false]], "__str__() (cupynumeric.ndarray method)": [[259, "cupynumeric.ndarray.__str__", false]], "__sub__() (cupynumeric.ndarray method)": [[260, "cupynumeric.ndarray.__sub__", false]], "__truediv__() (cupynumeric.ndarray method)": [[261, "cupynumeric.ndarray.__truediv__", false]], "__xor__() (cupynumeric.ndarray method)": [[262, "cupynumeric.ndarray.__xor__", false]], "absolute() (in module cupynumeric)": [[12, "cupynumeric.absolute", false]], "add() (in module cupynumeric)": [[13, "cupynumeric.add", false]], "aligned (in module cupynumeric)": [[287, "cupynumeric.ALIGNED", false]], "all() (cupynumeric.ndarray method)": [[263, "cupynumeric.ndarray.all", false]], "all() (in module cupynumeric)": [[14, "cupynumeric.all", false]], "allclose() (in module cupynumeric)": [[15, "cupynumeric.allclose", false]], "amax() (in module cupynumeric)": [[16, "cupynumeric.amax", false]], "amin() (in module cupynumeric)": [[17, "cupynumeric.amin", false]], "angle() (in module cupynumeric)": [[18, "cupynumeric.angle", false]], "any() (cupynumeric.ndarray method)": [[264, "cupynumeric.ndarray.any", false]], "any() (in module cupynumeric)": [[19, "cupynumeric.any", false]], "append() (in module cupynumeric)": [[20, "cupynumeric.append", false]], "arange() (in module cupynumeric)": [[21, "cupynumeric.arange", false]], "arccos() (in module cupynumeric)": [[22, "cupynumeric.arccos", false]], "arccosh() (in module cupynumeric)": [[23, "cupynumeric.arccosh", false]], "arcsin() (in module cupynumeric)": [[24, "cupynumeric.arcsin", false]], "arcsinh() (in module cupynumeric)": [[25, "cupynumeric.arcsinh", false]], "arctan() (in module cupynumeric)": [[26, "cupynumeric.arctan", false]], "arctan2() (in module cupynumeric)": [[27, "cupynumeric.arctan2", false]], "arctanh() (in module cupynumeric)": [[28, "cupynumeric.arctanh", false]], "argmax() (cupynumeric.ndarray method)": [[265, "cupynumeric.ndarray.argmax", false]], "argmax() (in module cupynumeric)": [[29, "cupynumeric.argmax", false]], "argmin() (cupynumeric.ndarray method)": [[266, "cupynumeric.ndarray.argmin", false]], "argmin() (in module cupynumeric)": [[30, "cupynumeric.argmin", false]], "argpartition() (cupynumeric.ndarray method)": [[267, "cupynumeric.ndarray.argpartition", false]], "argpartition() (in module cupynumeric)": [[31, "cupynumeric.argpartition", false]], "argsort() (cupynumeric.ndarray method)": [[268, "cupynumeric.ndarray.argsort", false]], "argsort() (in module cupynumeric)": [[32, "cupynumeric.argsort", false]], "argwhere() (in module cupynumeric)": [[33, "cupynumeric.argwhere", false]], "array() (in module cupynumeric)": [[34, "cupynumeric.array", false]], "array_equal() (in module cupynumeric)": [[35, "cupynumeric.array_equal", false]], "array_split() (in module cupynumeric)": [[36, "cupynumeric.array_split", false]], "asarray() (in module cupynumeric)": [[37, "cupynumeric.asarray", false]], "astype() (cupynumeric.ndarray method)": [[269, "cupynumeric.ndarray.astype", false]], "atleast_1d() (in module cupynumeric)": [[38, "cupynumeric.atleast_1d", false]], "atleast_2d() (in module cupynumeric)": [[39, "cupynumeric.atleast_2d", false]], "atleast_3d() (in module cupynumeric)": [[40, "cupynumeric.atleast_3d", false]], "average() (in module cupynumeric)": [[41, "cupynumeric.average", false]], "bartlett() (in module cupynumeric)": [[42, "cupynumeric.bartlett", false]], "base (cupynumeric.ndarray property)": [[270, "cupynumeric.ndarray.base", false]], "behaved (in module cupynumeric)": [[287, "cupynumeric.BEHAVED", false]], "beta() (in module cupynumeric.random)": [[349, "cupynumeric.random.beta", false]], "bincount() (in module cupynumeric)": [[43, "cupynumeric.bincount", false]], "binomial() (in module cupynumeric.random)": [[350, "cupynumeric.random.binomial", false]], "bitgenerator (class in cupynumeric.random)": [[1, "cupynumeric.random.BitGenerator", false]], "bitwise_and() (in module cupynumeric)": [[44, "cupynumeric.bitwise_and", false]], "bitwise_or() (in module cupynumeric)": [[45, "cupynumeric.bitwise_or", false]], "bitwise_xor() (in module cupynumeric)": [[46, "cupynumeric.bitwise_xor", false]], "blackman() (in module cupynumeric)": [[47, "cupynumeric.blackman", false]], "block() (in module cupynumeric)": [[48, "cupynumeric.block", false]], "broadcast (class in cupynumeric)": [[6, "cupynumeric.broadcast", false]], "broadcast_arrays() (in module cupynumeric)": [[49, "cupynumeric.broadcast_arrays", false]], "broadcast_shapes() (in module cupynumeric)": [[50, "cupynumeric.broadcast_shapes", false]], "broadcast_to() (in module cupynumeric)": [[51, "cupynumeric.broadcast_to", false]], "bytes() (in module cupynumeric.random)": [[351, "cupynumeric.random.bytes", false]], "c_contiguous (cupynumeric.ndarray attribute)": [[287, "cupynumeric.ndarray.C_CONTIGUOUS", false]], "carray (in module cupynumeric)": [[287, "cupynumeric.CARRAY", false]], "cbrt() (in module cupynumeric)": [[52, "cupynumeric.cbrt", false]], "ceil() (in module cupynumeric)": [[53, "cupynumeric.ceil", false]], "chisquare() (in module cupynumeric.random)": [[352, "cupynumeric.random.chisquare", false]], "cholesky() (in module cupynumeric.linalg)": [[159, "cupynumeric.linalg.cholesky", false]], "choose() (cupynumeric.ndarray method)": [[271, "cupynumeric.ndarray.choose", false]], "choose() (in module cupynumeric)": [[54, "cupynumeric.choose", false]], "clip() (cupynumeric.ndarray method)": [[272, "cupynumeric.ndarray.clip", false]], "clip() (in module cupynumeric)": [[55, "cupynumeric.clip", false]], "column_stack() (in module cupynumeric)": [[56, "cupynumeric.column_stack", false]], "compress() (cupynumeric.ndarray method)": [[273, "cupynumeric.ndarray.compress", false]], "compress() (in module cupynumeric)": [[57, "cupynumeric.compress", false]], "concatenate() (in module cupynumeric)": [[58, "cupynumeric.concatenate", false]], "conj() (cupynumeric.ndarray method)": [[274, "cupynumeric.ndarray.conj", false]], "conj() (in module cupynumeric)": [[59, "cupynumeric.conj", false]], "conjugate() (cupynumeric.ndarray method)": [[275, "cupynumeric.ndarray.conjugate", false]], "conjugate() (in module cupynumeric)": [[60, "cupynumeric.conjugate", false]], "convolve() (in module cupynumeric)": [[61, "cupynumeric.convolve", false]], "copy() (cupynumeric.ndarray method)": [[276, "cupynumeric.ndarray.copy", false]], "copy() (in module cupynumeric)": [[62, "cupynumeric.copy", false]], "copysign() (in module cupynumeric)": [[63, "cupynumeric.copysign", false]], "cos() (in module cupynumeric)": [[64, "cupynumeric.cos", false]], "cosh() (in module cupynumeric)": [[65, "cupynumeric.cosh", false]], "count_nonzero() (in module cupynumeric)": [[66, "cupynumeric.count_nonzero", false]], "cov() (in module cupynumeric)": [[67, "cupynumeric.cov", false]], "ctypes (cupynumeric.ndarray property)": [[277, "cupynumeric.ndarray.ctypes", false]], "cumprod() (cupynumeric.ndarray method)": [[278, "cupynumeric.ndarray.cumprod", false]], "cumprod() (in module cupynumeric)": [[68, "cupynumeric.cumprod", false]], "cumsum() (cupynumeric.ndarray method)": [[279, "cupynumeric.ndarray.cumsum", false]], "cumsum() (in module cupynumeric)": [[69, "cupynumeric.cumsum", false]], "cupynumeric.fft": [[11, "module-cupynumeric.fft", false]], "cupynumeric.linalg": [[450, "module-cupynumeric.linalg", false]], "cupynumeric.random": [[455, "module-cupynumeric.random", false]], "data (cupynumeric.ndarray property)": [[280, "cupynumeric.ndarray.data", false]], "default_rng() (in module cupynumeric.random)": [[353, "cupynumeric.random.default_rng", false]], "deg2rad() (in module cupynumeric)": [[70, "cupynumeric.deg2rad", false]], "degrees() (in module cupynumeric)": [[71, "cupynumeric.degrees", false]], "delete() (in module cupynumeric)": [[72, "cupynumeric.delete", false]], "diag() (in module cupynumeric)": [[73, "cupynumeric.diag", false]], "diag_indices() (in module cupynumeric)": [[74, "cupynumeric.diag_indices", false]], "diag_indices_from() (in module cupynumeric)": [[75, "cupynumeric.diag_indices_from", false]], "diagonal() (cupynumeric.ndarray method)": [[281, "cupynumeric.ndarray.diagonal", false]], "diagonal() (in module cupynumeric)": [[76, "cupynumeric.diagonal", false]], "diff() (in module cupynumeric)": [[77, "cupynumeric.diff", false]], "digitize() (in module cupynumeric)": [[78, "cupynumeric.digitize", false]], "divide() (in module cupynumeric)": [[79, "cupynumeric.divide", false]], "dot() (cupynumeric.ndarray method)": [[282, "cupynumeric.ndarray.dot", false]], "dot() (in module cupynumeric)": [[80, "cupynumeric.dot", false]], "dsplit() (in module cupynumeric)": [[81, "cupynumeric.dsplit", false]], "dstack() (in module cupynumeric)": [[82, "cupynumeric.dstack", false]], "dtype (cupynumeric.ndarray property)": [[283, "cupynumeric.ndarray.dtype", false]], "dump() (cupynumeric.ndarray method)": [[284, "cupynumeric.ndarray.dump", false]], "dumps() (cupynumeric.ndarray method)": [[285, "cupynumeric.ndarray.dumps", false]], "eig() (in module cupynumeric.linalg)": [[160, "cupynumeric.linalg.eig", false]], "eigh() (in module cupynumeric.linalg)": [[161, "cupynumeric.linalg.eigh", false]], "eigvals() (in module cupynumeric.linalg)": [[162, "cupynumeric.linalg.eigvals", false]], "eigvalsh() (in module cupynumeric.linalg)": [[163, "cupynumeric.linalg.eigvalsh", false]], "einsum() (in module cupynumeric)": [[83, "cupynumeric.einsum", false]], "einsum_path() (in module cupynumeric)": [[84, "cupynumeric.einsum_path", false]], "empty() (in module cupynumeric)": [[85, "cupynumeric.empty", false]], "empty_like() (in module cupynumeric)": [[86, "cupynumeric.empty_like", false]], "equal() (in module cupynumeric)": [[87, "cupynumeric.equal", false]], "exp() (in module cupynumeric)": [[88, "cupynumeric.exp", false]], "exp2() (in module cupynumeric)": [[89, "cupynumeric.exp2", false]], "expand_dims() (in module cupynumeric)": [[90, "cupynumeric.expand_dims", false]], "expm() (in module cupynumeric.linalg)": [[164, "cupynumeric.linalg.expm", false]], "expm1() (in module cupynumeric)": [[91, "cupynumeric.expm1", false]], "exponential() (in module cupynumeric.random)": [[354, "cupynumeric.random.exponential", false]], "extract() (in module cupynumeric)": [[92, "cupynumeric.extract", false]], "eye() (in module cupynumeric)": [[93, "cupynumeric.eye", false]], "f() (in module cupynumeric.random)": [[355, "cupynumeric.random.f", false]], "f_contiguous (in module cupynumeric)": [[287, "cupynumeric.F_CONTIGUOUS", false]], "fabs() (in module cupynumeric)": [[94, "cupynumeric.fabs", false]], "farray (in module cupynumeric)": [[287, "cupynumeric.FARRAY", false]], "fft() (in module cupynumeric.fft)": [[95, "cupynumeric.fft.fft", false]], "fft2() (in module cupynumeric.fft)": [[96, "cupynumeric.fft.fft2", false]], "fftn() (in module cupynumeric.fft)": [[97, "cupynumeric.fft.fftn", false]], "fftshift() (in module cupynumeric.fft)": [[98, "cupynumeric.fft.fftshift", false]], "fill() (cupynumeric.ndarray method)": [[286, "cupynumeric.ndarray.fill", false]], "fill_diagonal() (in module cupynumeric)": [[111, "cupynumeric.fill_diagonal", false]], "find_common_type() (in module cupynumeric)": [[112, "cupynumeric.find_common_type", false]], "flags (cupynumeric.ndarray property)": [[287, "cupynumeric.ndarray.flags", false]], "flat (cupynumeric.ndarray property)": [[288, "cupynumeric.ndarray.flat", false]], "flatnonzero() (in module cupynumeric)": [[113, "cupynumeric.flatnonzero", false]], "flatten() (cupynumeric.ndarray method)": [[289, "cupynumeric.ndarray.flatten", false]], "flip() (cupynumeric.ndarray method)": [[290, "cupynumeric.ndarray.flip", false]], "flip() (in module cupynumeric)": [[114, "cupynumeric.flip", false]], "fliplr() (in module cupynumeric)": [[115, "cupynumeric.fliplr", false]], "flipud() (in module cupynumeric)": [[116, "cupynumeric.flipud", false]], "float_power() (in module cupynumeric)": [[117, "cupynumeric.float_power", false]], "floor() (in module cupynumeric)": [[118, "cupynumeric.floor", false]], "floor_divide() (in module cupynumeric)": [[119, "cupynumeric.floor_divide", false]], "fmax() (in module cupynumeric)": [[120, "cupynumeric.fmax", false]], "fmin() (in module cupynumeric)": [[121, "cupynumeric.fmin", false]], "fmod() (in module cupynumeric)": [[122, "cupynumeric.fmod", false]], "fnc (in module cupynumeric)": [[287, "cupynumeric.FNC", false]], "forc (in module cupynumeric)": [[287, "cupynumeric.FORC", false]], "frexp() (in module cupynumeric)": [[123, "cupynumeric.frexp", false]], "full() (in module cupynumeric)": [[124, "cupynumeric.full", false]], "full_like() (in module cupynumeric)": [[125, "cupynumeric.full_like", false]], "gamma() (in module cupynumeric.random)": [[356, "cupynumeric.random.gamma", false]], "gcd() (in module cupynumeric)": [[126, "cupynumeric.gcd", false]], "generator (class in cupynumeric.random)": [[2, "cupynumeric.random.Generator", false]], "geometric() (in module cupynumeric.random)": [[357, "cupynumeric.random.geometric", false]], "getfield() (cupynumeric.ndarray method)": [[291, "cupynumeric.ndarray.getfield", false]], "gradient() (in module cupynumeric)": [[127, "cupynumeric.gradient", false]], "greater() (in module cupynumeric)": [[128, "cupynumeric.greater", false]], "greater_equal() (in module cupynumeric)": [[129, "cupynumeric.greater_equal", false]], "gumbel() (in module cupynumeric.random)": [[358, "cupynumeric.random.gumbel", false]], "hamming() (in module cupynumeric)": [[130, "cupynumeric.hamming", false]], "hanning() (in module cupynumeric)": [[131, "cupynumeric.hanning", false]], "hfft() (in module cupynumeric.fft)": [[99, "cupynumeric.fft.hfft", false]], "histogram() (in module cupynumeric)": [[132, "cupynumeric.histogram", false]], "hsplit() (in module cupynumeric)": [[133, "cupynumeric.hsplit", false]], "hstack() (in module cupynumeric)": [[134, "cupynumeric.hstack", false]], "hypergeometric() (in module cupynumeric.random)": [[359, "cupynumeric.random.hypergeometric", false]], "hypot() (in module cupynumeric)": [[135, "cupynumeric.hypot", false]], "identity() (in module cupynumeric)": [[136, "cupynumeric.identity", false]], "ifft() (in module cupynumeric.fft)": [[100, "cupynumeric.fft.ifft", false]], "ifft2() (in module cupynumeric.fft)": [[101, "cupynumeric.fft.ifft2", false]], "ifftn() (in module cupynumeric.fft)": [[102, "cupynumeric.fft.ifftn", false]], "ifftshift() (in module cupynumeric.fft)": [[103, "cupynumeric.fft.ifftshift", false]], "ihfft() (in module cupynumeric.fft)": [[104, "cupynumeric.fft.ihfft", false]], "imag (cupynumeric.ndarray property)": [[292, "cupynumeric.ndarray.imag", false]], "imag() (in module cupynumeric)": [[137, "cupynumeric.imag", false]], "index (cupynumeric.broadcast property)": [[6, "cupynumeric.broadcast.index", false]], "indices() (in module cupynumeric)": [[138, "cupynumeric.indices", false]], "inner() (in module cupynumeric)": [[139, "cupynumeric.inner", false]], "invert() (in module cupynumeric)": [[140, "cupynumeric.invert", false]], "irfft() (in module cupynumeric.fft)": [[105, "cupynumeric.fft.irfft", false]], "irfft2() (in module cupynumeric.fft)": [[106, "cupynumeric.fft.irfft2", false]], "irfftn() (in module cupynumeric.fft)": [[107, "cupynumeric.fft.irfftn", false]], "isclose() (in module cupynumeric)": [[141, "cupynumeric.isclose", false]], "iscomplex() (in module cupynumeric)": [[142, "cupynumeric.iscomplex", false]], "iscomplexobj() (in module cupynumeric)": [[143, "cupynumeric.iscomplexobj", false]], "isfinite() (in module cupynumeric)": [[144, "cupynumeric.isfinite", false]], "isinf() (in module cupynumeric)": [[145, "cupynumeric.isinf", false]], "isnan() (in module cupynumeric)": [[146, "cupynumeric.isnan", false]], "isneginf() (in module cupynumeric)": [[147, "cupynumeric.isneginf", false]], "isposinf() (in module cupynumeric)": [[148, "cupynumeric.isposinf", false]], "isreal() (in module cupynumeric)": [[149, "cupynumeric.isreal", false]], "isrealobj() (in module cupynumeric)": [[150, "cupynumeric.isrealobj", false]], "isscalar() (in module cupynumeric)": [[151, "cupynumeric.isscalar", false]], "item() (cupynumeric.ndarray method)": [[293, "cupynumeric.ndarray.item", false]], "itemset (cupynumeric.ndarray attribute)": [[294, "cupynumeric.ndarray.itemset", false]], "itemsize (cupynumeric.ndarray property)": [[295, "cupynumeric.ndarray.itemsize", false]], "iters (cupynumeric.broadcast property)": [[6, "cupynumeric.broadcast.iters", false]], "ix_() (in module cupynumeric)": [[152, "cupynumeric.ix_", false]], "kaiser() (in module cupynumeric)": [[153, "cupynumeric.kaiser", false]], "laplace() (in module cupynumeric.random)": [[360, "cupynumeric.random.laplace", false]], "lcm() (in module cupynumeric)": [[154, "cupynumeric.lcm", false]], "ldexp() (in module cupynumeric)": [[155, "cupynumeric.ldexp", false]], "left_shift() (in module cupynumeric)": [[156, "cupynumeric.left_shift", false]], "less() (in module cupynumeric)": [[157, "cupynumeric.less", false]], "less_equal() (in module cupynumeric)": [[158, "cupynumeric.less_equal", false]], "linspace() (in module cupynumeric)": [[171, "cupynumeric.linspace", false]], "load() (in module cupynumeric)": [[172, "cupynumeric.load", false]], "log() (in module cupynumeric)": [[173, "cupynumeric.log", false]], "log10() (in module cupynumeric)": [[174, "cupynumeric.log10", false]], "log1p() (in module cupynumeric)": [[175, "cupynumeric.log1p", false]], "log2() (in module cupynumeric)": [[176, "cupynumeric.log2", false]], "logaddexp() (in module cupynumeric)": [[177, "cupynumeric.logaddexp", false]], "logaddexp2() (in module cupynumeric)": [[178, "cupynumeric.logaddexp2", false]], "logical_and() (in module cupynumeric)": [[179, "cupynumeric.logical_and", false]], "logical_not() (in module cupynumeric)": [[180, "cupynumeric.logical_not", false]], "logical_or() (in module cupynumeric)": [[181, "cupynumeric.logical_or", false]], "logical_xor() (in module cupynumeric)": [[182, "cupynumeric.logical_xor", false]], "logistic() (in module cupynumeric.random)": [[361, "cupynumeric.random.logistic", false]], "lognormal() (in module cupynumeric.random)": [[362, "cupynumeric.random.lognormal", false]], "logseries() (in module cupynumeric.random)": [[363, "cupynumeric.random.logseries", false]], "mask_indices() (in module cupynumeric)": [[183, "cupynumeric.mask_indices", false]], "matmul() (in module cupynumeric)": [[184, "cupynumeric.matmul", false]], "matrix_power() (in module cupynumeric.linalg)": [[165, "cupynumeric.linalg.matrix_power", false]], "max() (cupynumeric.ndarray method)": [[296, "cupynumeric.ndarray.max", false]], "maximum() (in module cupynumeric)": [[185, "cupynumeric.maximum", false]], "mean() (cupynumeric.ndarray method)": [[297, "cupynumeric.ndarray.mean", false]], "mean() (in module cupynumeric)": [[186, "cupynumeric.mean", false]], "median() (in module cupynumeric)": [[187, "cupynumeric.median", false]], "meshgrid() (in module cupynumeric)": [[188, "cupynumeric.meshgrid", false]], "min() (cupynumeric.ndarray method)": [[298, "cupynumeric.ndarray.min", false]], "minimum() (in module cupynumeric)": [[189, "cupynumeric.minimum", false]], "mod() (in module cupynumeric)": [[190, "cupynumeric.mod", false]], "modf() (in module cupynumeric)": [[191, "cupynumeric.modf", false]], "module": [[11, "module-cupynumeric.fft", false], [450, "module-cupynumeric.linalg", false], [455, "module-cupynumeric.random", false]], "moveaxis() (in module cupynumeric)": [[192, "cupynumeric.moveaxis", false]], "multi_dot() (in module cupynumeric.linalg)": [[166, "cupynumeric.linalg.multi_dot", false]], "multiply() (in module cupynumeric)": [[193, "cupynumeric.multiply", false]], "nan_to_num() (in module cupynumeric)": [[194, "cupynumeric.nan_to_num", false]], "nanargmax() (in module cupynumeric)": [[195, "cupynumeric.nanargmax", false]], "nanargmin() (in module cupynumeric)": [[196, "cupynumeric.nanargmin", false]], "nancumprod() (in module cupynumeric)": [[197, "cupynumeric.nancumprod", false]], "nancumsum() (in module cupynumeric)": [[198, "cupynumeric.nancumsum", false]], "nanmax() (in module cupynumeric)": [[199, "cupynumeric.nanmax", false]], "nanmean() (in module cupynumeric)": [[200, "cupynumeric.nanmean", false]], "nanmedian() (in module cupynumeric)": [[201, "cupynumeric.nanmedian", false]], "nanmin() (in module cupynumeric)": [[202, "cupynumeric.nanmin", false]], "nanpercentile() (in module cupynumeric)": [[203, "cupynumeric.nanpercentile", false]], "nanprod() (in module cupynumeric)": [[204, "cupynumeric.nanprod", false]], "nanquantile() (in module cupynumeric)": [[205, "cupynumeric.nanquantile", false]], "nansum() (in module cupynumeric)": [[206, "cupynumeric.nansum", false]], "nbytes (cupynumeric.ndarray property)": [[299, "cupynumeric.ndarray.nbytes", false]], "nd (cupynumeric.broadcast property)": [[6, "cupynumeric.broadcast.nd", false]], "ndarray (class in cupynumeric)": [[4, "cupynumeric.ndarray", false]], "ndim (cupynumeric.broadcast property)": [[6, "cupynumeric.broadcast.ndim", false]], "ndim (cupynumeric.ndarray property)": [[300, "cupynumeric.ndarray.ndim", false]], "ndim() (in module cupynumeric)": [[328, "cupynumeric.ndim", false]], "negative() (in module cupynumeric)": [[329, "cupynumeric.negative", false]], "negative_binomial() (in module cupynumeric.random)": [[364, "cupynumeric.random.negative_binomial", false]], "nextafter() (in module cupynumeric)": [[330, "cupynumeric.nextafter", false]], "noncentral_chisquare() (in module cupynumeric.random)": [[365, "cupynumeric.random.noncentral_chisquare", false]], "noncentral_f() (in module cupynumeric.random)": [[366, "cupynumeric.random.noncentral_f", false]], "nonzero() (cupynumeric.ndarray method)": [[301, "cupynumeric.ndarray.nonzero", false]], "nonzero() (in module cupynumeric)": [[331, "cupynumeric.nonzero", false]], "norm() (in module cupynumeric.linalg)": [[167, "cupynumeric.linalg.norm", false]], "normal() (in module cupynumeric.random)": [[367, "cupynumeric.random.normal", false]], "not_equal() (in module cupynumeric)": [[332, "cupynumeric.not_equal", false]], "numiter (cupynumeric.broadcast property)": [[6, "cupynumeric.broadcast.numiter", false]], "ones() (in module cupynumeric)": [[333, "cupynumeric.ones", false]], "ones_like() (in module cupynumeric)": [[334, "cupynumeric.ones_like", false]], "outer() (in module cupynumeric)": [[335, "cupynumeric.outer", false]], "owndata (in module cupynumeric)": [[287, "cupynumeric.OWNDATA", false]], "packbits() (in module cupynumeric)": [[336, "cupynumeric.packbits", false]], "pareto() (in module cupynumeric.random)": [[368, "cupynumeric.random.pareto", false]], "partition() (cupynumeric.ndarray method)": [[302, "cupynumeric.ndarray.partition", false]], "partition() (in module cupynumeric)": [[337, "cupynumeric.partition", false]], "percentile() (in module cupynumeric)": [[338, "cupynumeric.percentile", false]], "place() (in module cupynumeric)": [[339, "cupynumeric.place", false]], "poisson() (in module cupynumeric.random)": [[369, "cupynumeric.random.poisson", false]], "positive() (in module cupynumeric)": [[340, "cupynumeric.positive", false]], "power() (in module cupynumeric)": [[341, "cupynumeric.power", false]], "power() (in module cupynumeric.random)": [[370, "cupynumeric.random.power", false]], "prod() (cupynumeric.ndarray method)": [[303, "cupynumeric.ndarray.prod", false]], "prod() (in module cupynumeric)": [[342, "cupynumeric.prod", false]], "put() (cupynumeric.ndarray method)": [[304, "cupynumeric.ndarray.put", false]], "put() (in module cupynumeric)": [[343, "cupynumeric.put", false]], "put_along_axis() (in module cupynumeric)": [[344, "cupynumeric.put_along_axis", false]], "putmask() (in module cupynumeric)": [[345, "cupynumeric.putmask", false]], "qr() (in module cupynumeric.linalg)": [[168, "cupynumeric.linalg.qr", false]], "quantile() (in module cupynumeric)": [[346, "cupynumeric.quantile", false]], "rad2deg() (in module cupynumeric)": [[347, "cupynumeric.rad2deg", false]], "radians() (in module cupynumeric)": [[348, "cupynumeric.radians", false]], "rand() (in module cupynumeric.random)": [[371, "cupynumeric.random.rand", false]], "randint() (in module cupynumeric.random)": [[372, "cupynumeric.random.randint", false]], "randn() (in module cupynumeric.random)": [[373, "cupynumeric.random.randn", false]], "random() (in module cupynumeric.random)": [[374, "cupynumeric.random.random", false]], "random_integers() (in module cupynumeric.random)": [[375, "cupynumeric.random.random_integers", false]], "random_sample() (in module cupynumeric.random)": [[376, "cupynumeric.random.random_sample", false]], "ranf() (in module cupynumeric.random)": [[377, "cupynumeric.random.ranf", false]], "ravel() (cupynumeric.ndarray method)": [[305, "cupynumeric.ndarray.ravel", false]], "ravel() (in module cupynumeric)": [[391, "cupynumeric.ravel", false]], "rayleigh() (in module cupynumeric.random)": [[378, "cupynumeric.random.rayleigh", false]], "real (cupynumeric.ndarray property)": [[306, "cupynumeric.ndarray.real", false]], "real() (in module cupynumeric)": [[392, "cupynumeric.real", false]], "reciprocal() (in module cupynumeric)": [[393, "cupynumeric.reciprocal", false]], "remainder() (in module cupynumeric)": [[394, "cupynumeric.remainder", false]], "repeat() (in module cupynumeric)": [[395, "cupynumeric.repeat", false]], "reset() (cupynumeric.broadcast method)": [[6, "cupynumeric.broadcast.reset", false]], "reshape() (cupynumeric.ndarray method)": [[307, "cupynumeric.ndarray.reshape", false]], "reshape() (in module cupynumeric)": [[396, "cupynumeric.reshape", false]], "rfft() (in module cupynumeric.fft)": [[108, "cupynumeric.fft.rfft", false]], "rfft2() (in module cupynumeric.fft)": [[109, "cupynumeric.fft.rfft2", false]], "rfftn() (in module cupynumeric.fft)": [[110, "cupynumeric.fft.rfftn", false]], "right_shift() (in module cupynumeric)": [[397, "cupynumeric.right_shift", false]], "rint() (in module cupynumeric)": [[398, "cupynumeric.rint", false]], "roll() (in module cupynumeric)": [[399, "cupynumeric.roll", false]], "rot90() (in module cupynumeric)": [[400, "cupynumeric.rot90", false]], "round() (in module cupynumeric)": [[401, "cupynumeric.round", false]], "row_stack() (in module cupynumeric)": [[402, "cupynumeric.row_stack", false]], "sample() (in module cupynumeric.random)": [[379, "cupynumeric.random.sample", false]], "searchsorted() (cupynumeric.ndarray method)": [[308, "cupynumeric.ndarray.searchsorted", false]], "searchsorted() (in module cupynumeric)": [[403, "cupynumeric.searchsorted", false]], "seed() (in module cupynumeric.random)": [[380, "cupynumeric.random.seed", false]], "select() (in module cupynumeric)": [[404, "cupynumeric.select", false]], "setfield() (cupynumeric.ndarray method)": [[309, "cupynumeric.ndarray.setfield", false]], "setflags() (cupynumeric.ndarray method)": [[310, "cupynumeric.ndarray.setflags", false]], "shape (cupynumeric.broadcast property)": [[6, "cupynumeric.broadcast.shape", false]], "shape (cupynumeric.ndarray property)": [[311, "cupynumeric.ndarray.shape", false]], "shape() (in module cupynumeric)": [[405, "cupynumeric.shape", false]], "sign() (in module cupynumeric)": [[406, "cupynumeric.sign", false]], "signbit() (in module cupynumeric)": [[407, "cupynumeric.signbit", false]], "sin() (in module cupynumeric)": [[408, "cupynumeric.sin", false]], "sinh() (in module cupynumeric)": [[409, "cupynumeric.sinh", false]], "size (cupynumeric.broadcast property)": [[6, "cupynumeric.broadcast.size", false]], "size (cupynumeric.ndarray property)": [[312, "cupynumeric.ndarray.size", false]], "solve() (in module cupynumeric.linalg)": [[169, "cupynumeric.linalg.solve", false]], "sort() (cupynumeric.ndarray method)": [[313, "cupynumeric.ndarray.sort", false]], "sort() (in module cupynumeric)": [[410, "cupynumeric.sort", false]], "sort_complex() (in module cupynumeric)": [[411, "cupynumeric.sort_complex", false]], "split() (in module cupynumeric)": [[412, "cupynumeric.split", false]], "sqrt() (in module cupynumeric)": [[413, "cupynumeric.sqrt", false]], "square() (in module cupynumeric)": [[414, "cupynumeric.square", false]], "squeeze() (cupynumeric.ndarray method)": [[314, "cupynumeric.ndarray.squeeze", false]], "squeeze() (in module cupynumeric)": [[415, "cupynumeric.squeeze", false]], "stack() (in module cupynumeric)": [[416, "cupynumeric.stack", false]], "standard_cauchy() (in module cupynumeric.random)": [[381, "cupynumeric.random.standard_cauchy", false]], "standard_exponential() (in module cupynumeric.random)": [[382, "cupynumeric.random.standard_exponential", false]], "standard_gamma() (in module cupynumeric.random)": [[383, "cupynumeric.random.standard_gamma", false]], "standard_t() (in module cupynumeric.random)": [[384, "cupynumeric.random.standard_t", false]], "strides (cupynumeric.ndarray property)": [[315, "cupynumeric.ndarray.strides", false]], "subtract() (in module cupynumeric)": [[417, "cupynumeric.subtract", false]], "sum() (cupynumeric.ndarray method)": [[316, "cupynumeric.ndarray.sum", false]], "sum() (in module cupynumeric)": [[418, "cupynumeric.sum", false]], "svd() (in module cupynumeric.linalg)": [[170, "cupynumeric.linalg.svd", false]], "swapaxes() (cupynumeric.ndarray method)": [[317, "cupynumeric.ndarray.swapaxes", false]], "swapaxes() (in module cupynumeric)": [[419, "cupynumeric.swapaxes", false]], "t (cupynumeric.ndarray property)": [[207, "cupynumeric.ndarray.T", false]], "take() (cupynumeric.ndarray method)": [[318, "cupynumeric.ndarray.take", false]], "take() (in module cupynumeric)": [[420, "cupynumeric.take", false]], "take_along_axis() (in module cupynumeric)": [[421, "cupynumeric.take_along_axis", false]], "tan() (in module cupynumeric)": [[422, "cupynumeric.tan", false]], "tanh() (in module cupynumeric)": [[423, "cupynumeric.tanh", false]], "tensordot() (in module cupynumeric)": [[424, "cupynumeric.tensordot", false]], "tile() (in module cupynumeric)": [[425, "cupynumeric.tile", false]], "tobytes() (cupynumeric.ndarray method)": [[319, "cupynumeric.ndarray.tobytes", false]], "tofile() (cupynumeric.ndarray method)": [[320, "cupynumeric.ndarray.tofile", false]], "tolist() (cupynumeric.ndarray method)": [[321, "cupynumeric.ndarray.tolist", false]], "tostring() (cupynumeric.ndarray method)": [[322, "cupynumeric.ndarray.tostring", false]], "trace() (cupynumeric.ndarray method)": [[323, "cupynumeric.ndarray.trace", false]], "trace() (in module cupynumeric)": [[426, "cupynumeric.trace", false]], "transpose() (cupynumeric.ndarray method)": [[324, "cupynumeric.ndarray.transpose", false]], "transpose() (in module cupynumeric)": [[427, "cupynumeric.transpose", false]], "tri() (in module cupynumeric)": [[428, "cupynumeric.tri", false]], "triangular() (in module cupynumeric.random)": [[385, "cupynumeric.random.triangular", false]], "tril() (in module cupynumeric)": [[429, "cupynumeric.tril", false]], "tril_indices() (in module cupynumeric)": [[430, "cupynumeric.tril_indices", false]], "tril_indices_from() (in module cupynumeric)": [[431, "cupynumeric.tril_indices_from", false]], "triu() (in module cupynumeric)": [[432, "cupynumeric.triu", false]], "triu_indices() (in module cupynumeric)": [[433, "cupynumeric.triu_indices", false]], "triu_indices_from() (in module cupynumeric)": [[434, "cupynumeric.triu_indices_from", false]], "true_divide() (in module cupynumeric)": [[435, "cupynumeric.true_divide", false]], "trunc() (in module cupynumeric)": [[436, "cupynumeric.trunc", false]], "uniform() (in module cupynumeric.random)": [[386, "cupynumeric.random.uniform", false]], "unique() (cupynumeric.ndarray method)": [[325, "cupynumeric.ndarray.unique", false]], "unique() (in module cupynumeric)": [[437, "cupynumeric.unique", false]], "unpackbits() (in module cupynumeric)": [[438, "cupynumeric.unpackbits", false]], "unravel_index() (in module cupynumeric)": [[439, "cupynumeric.unravel_index", false]], "var() (cupynumeric.ndarray method)": [[326, "cupynumeric.ndarray.var", false]], "var() (in module cupynumeric)": [[440, "cupynumeric.var", false]], "vdot() (in module cupynumeric)": [[441, "cupynumeric.vdot", false]], "view() (cupynumeric.ndarray method)": [[327, "cupynumeric.ndarray.view", false]], "vonmises() (in module cupynumeric.random)": [[387, "cupynumeric.random.vonmises", false]], "vsplit() (in module cupynumeric)": [[442, "cupynumeric.vsplit", false]], "vstack() (in module cupynumeric)": [[443, "cupynumeric.vstack", false]], "wald() (in module cupynumeric.random)": [[388, "cupynumeric.random.wald", false]], "weibull() (in module cupynumeric.random)": [[389, "cupynumeric.random.weibull", false]], "where() (in module cupynumeric)": [[444, "cupynumeric.where", false]], "writeable (in module cupynumeric)": [[287, "cupynumeric.WRITEABLE", false]], "writebackifcopy (in module cupynumeric)": [[287, "cupynumeric.WRITEBACKIFCOPY", false]], "zeros() (in module cupynumeric)": [[445, "cupynumeric.zeros", false]], "zeros_like() (in module cupynumeric)": [[446, "cupynumeric.zeros_like", false]], "zipf() (in module cupynumeric.random)": [[390, "cupynumeric.random.zipf", false]]}, "objects": {"cupynumeric": [[287, 0, 1, "", "ALIGNED"], [287, 0, 1, "", "BEHAVED"], [287, 0, 1, "", "CARRAY"], [287, 0, 1, "", "FARRAY"], [287, 0, 1, "", "FNC"], [287, 0, 1, "", "FORC"], [287, 0, 1, "", "F_CONTIGUOUS"], [287, 0, 1, "", "OWNDATA"], [287, 0, 1, "", "WRITEABLE"], [287, 0, 1, "", "WRITEBACKIFCOPY"], [12, 1, 1, "", "absolute"], [13, 1, 1, "", "add"], [14, 1, 1, "", "all"], [15, 1, 1, "", "allclose"], [16, 1, 1, "", "amax"], [17, 1, 1, "", "amin"], [18, 1, 1, "", "angle"], [19, 1, 1, "", "any"], [20, 1, 1, "", "append"], [21, 1, 1, "", "arange"], [22, 1, 1, "", "arccos"], [23, 1, 1, "", "arccosh"], [24, 1, 1, "", "arcsin"], [25, 1, 1, "", "arcsinh"], [26, 1, 1, "", "arctan"], [27, 1, 1, "", "arctan2"], [28, 1, 1, "", "arctanh"], [29, 1, 1, "", "argmax"], [30, 1, 1, "", "argmin"], [31, 1, 1, "", "argpartition"], [32, 1, 1, "", "argsort"], [33, 1, 1, "", "argwhere"], [34, 1, 1, "", "array"], [35, 1, 1, "", "array_equal"], [36, 1, 1, "", "array_split"], [37, 1, 1, "", "asarray"], [38, 1, 1, "", "atleast_1d"], [39, 1, 1, "", "atleast_2d"], [40, 1, 1, "", "atleast_3d"], [41, 1, 1, "", "average"], [42, 1, 1, "", "bartlett"], [43, 1, 1, "", "bincount"], [44, 1, 1, "", "bitwise_and"], [45, 1, 1, "", "bitwise_or"], [46, 1, 1, "", "bitwise_xor"], [47, 1, 1, "", "blackman"], [48, 1, 1, "", "block"], [6, 2, 1, "", "broadcast"], [49, 1, 1, "", "broadcast_arrays"], [50, 1, 1, "", "broadcast_shapes"], [51, 1, 1, "", "broadcast_to"], [52, 1, 1, "", "cbrt"], [53, 1, 1, "", "ceil"], [54, 1, 1, "", "choose"], [55, 1, 1, "", "clip"], [56, 1, 1, "", "column_stack"], [57, 1, 1, "", "compress"], [58, 1, 1, "", "concatenate"], [59, 1, 1, "", "conj"], [60, 1, 1, "", "conjugate"], [61, 1, 1, "", "convolve"], [62, 1, 1, "", "copy"], [63, 1, 1, "", "copysign"], [64, 1, 1, "", "cos"], [65, 1, 1, "", "cosh"], [66, 1, 1, "", "count_nonzero"], [67, 1, 1, "", "cov"], [68, 1, 1, "", "cumprod"], [69, 1, 1, "", "cumsum"], [70, 1, 1, "", "deg2rad"], [71, 1, 1, "", "degrees"], [72, 1, 1, "", "delete"], [73, 1, 1, "", "diag"], [74, 1, 1, "", "diag_indices"], [75, 1, 1, "", "diag_indices_from"], [76, 1, 1, "", "diagonal"], [77, 1, 1, "", "diff"], [78, 1, 1, "", "digitize"], [79, 1, 1, "", "divide"], [80, 1, 1, "", "dot"], [81, 1, 1, "", "dsplit"], [82, 1, 1, "", "dstack"], [83, 1, 1, "", "einsum"], [84, 1, 1, "", "einsum_path"], [85, 1, 1, "", "empty"], [86, 1, 1, "", "empty_like"], [87, 1, 1, "", "equal"], [88, 1, 1, "", "exp"], [89, 1, 1, "", "exp2"], [90, 1, 1, "", "expand_dims"], [91, 1, 1, "", "expm1"], [92, 1, 1, "", "extract"], [93, 1, 1, "", "eye"], [94, 1, 1, "", "fabs"], [11, 5, 0, "-", "fft"], [111, 1, 1, "", "fill_diagonal"], [112, 1, 1, "", "find_common_type"], [113, 1, 1, "", "flatnonzero"], [114, 1, 1, "", "flip"], [115, 1, 1, "", "fliplr"], [116, 1, 1, "", "flipud"], [117, 1, 1, "", "float_power"], [118, 1, 1, "", "floor"], [119, 1, 1, "", "floor_divide"], [120, 1, 1, "", "fmax"], [121, 1, 1, "", "fmin"], [122, 1, 1, "", "fmod"], [123, 1, 1, "", "frexp"], [124, 1, 1, "", "full"], [125, 1, 1, "", "full_like"], [126, 1, 1, "", "gcd"], [127, 1, 1, "", "gradient"], [128, 1, 1, "", "greater"], [129, 1, 1, "", "greater_equal"], [130, 1, 1, "", "hamming"], [131, 1, 1, "", "hanning"], [132, 1, 1, "", "histogram"], [133, 1, 1, "", "hsplit"], [134, 1, 1, "", "hstack"], [135, 1, 1, "", "hypot"], [136, 1, 1, "", "identity"], [137, 1, 1, "", "imag"], [138, 1, 1, "", "indices"], [139, 1, 1, "", "inner"], [140, 1, 1, "", "invert"], [141, 1, 1, "", "isclose"], [142, 1, 1, "", "iscomplex"], [143, 1, 1, "", "iscomplexobj"], [144, 1, 1, "", "isfinite"], [145, 1, 1, "", "isinf"], [146, 1, 1, "", "isnan"], [147, 1, 1, "", "isneginf"], [148, 1, 1, "", "isposinf"], [149, 1, 1, "", "isreal"], [150, 1, 1, "", "isrealobj"], [151, 1, 1, "", "isscalar"], [152, 1, 1, "", "ix_"], [153, 1, 1, "", "kaiser"], [154, 1, 1, "", "lcm"], [155, 1, 1, "", "ldexp"], [156, 1, 1, "", "left_shift"], [157, 1, 1, "", "less"], [158, 1, 1, "", "less_equal"], [450, 5, 0, "-", "linalg"], [171, 1, 1, "", "linspace"], [172, 1, 1, "", "load"], [173, 1, 1, "", "log"], [174, 1, 1, "", "log10"], [175, 1, 1, "", "log1p"], [176, 1, 1, "", "log2"], [177, 1, 1, "", "logaddexp"], [178, 1, 1, "", "logaddexp2"], [179, 1, 1, "", "logical_and"], [180, 1, 1, "", "logical_not"], [181, 1, 1, "", "logical_or"], [182, 1, 1, "", "logical_xor"], [183, 1, 1, "", "mask_indices"], [184, 1, 1, "", "matmul"], [185, 1, 1, "", "maximum"], [186, 1, 1, "", "mean"], [187, 1, 1, "", "median"], [188, 1, 1, "", "meshgrid"], [189, 1, 1, "", "minimum"], [190, 1, 1, "", "mod"], [191, 1, 1, "", "modf"], [192, 1, 1, "", "moveaxis"], [193, 1, 1, "", "multiply"], [194, 1, 1, "", "nan_to_num"], [195, 1, 1, "", "nanargmax"], [196, 1, 1, "", "nanargmin"], [197, 1, 1, "", "nancumprod"], [198, 1, 1, "", "nancumsum"], [199, 1, 1, "", "nanmax"], [200, 1, 1, "", "nanmean"], [201, 1, 1, "", "nanmedian"], [202, 1, 1, "", "nanmin"], [203, 1, 1, "", "nanpercentile"], [204, 1, 1, "", "nanprod"], [205, 1, 1, "", "nanquantile"], [206, 1, 1, "", "nansum"], [4, 2, 1, "", "ndarray"], [328, 1, 1, "", "ndim"], [329, 1, 1, "", "negative"], [330, 1, 1, "", "nextafter"], [331, 1, 1, "", "nonzero"], [332, 1, 1, "", "not_equal"], [333, 1, 1, "", "ones"], [334, 1, 1, "", "ones_like"], [335, 1, 1, "", "outer"], [336, 1, 1, "", "packbits"], [337, 1, 1, "", "partition"], [338, 1, 1, "", "percentile"], [339, 1, 1, "", "place"], [340, 1, 1, "", "positive"], [341, 1, 1, "", "power"], [342, 1, 1, "", "prod"], [343, 1, 1, "", "put"], [344, 1, 1, "", "put_along_axis"], [345, 1, 1, "", "putmask"], [346, 1, 1, "", "quantile"], [347, 1, 1, "", "rad2deg"], [348, 1, 1, "", "radians"], [455, 5, 0, "-", "random"], [391, 1, 1, "", "ravel"], [392, 1, 1, "", "real"], [393, 1, 1, "", "reciprocal"], [394, 1, 1, "", "remainder"], [395, 1, 1, "", "repeat"], [396, 1, 1, "", "reshape"], [397, 1, 1, "", "right_shift"], [398, 1, 1, "", "rint"], [399, 1, 1, "", "roll"], [400, 1, 1, "", "rot90"], [401, 1, 1, "", "round"], [402, 1, 1, "", "row_stack"], [403, 1, 1, "", "searchsorted"], [404, 1, 1, "", "select"], [405, 1, 1, "", "shape"], [406, 1, 1, "", "sign"], [407, 1, 1, "", "signbit"], [408, 1, 1, "", "sin"], [409, 1, 1, "", "sinh"], [410, 1, 1, "", "sort"], [411, 1, 1, "", "sort_complex"], [412, 1, 1, "", "split"], [413, 1, 1, "", "sqrt"], [414, 1, 1, "", "square"], [415, 1, 1, "", "squeeze"], [416, 1, 1, "", "stack"], [417, 1, 1, "", "subtract"], [418, 1, 1, "", "sum"], [419, 1, 1, "", "swapaxes"], [420, 1, 1, "", "take"], [421, 1, 1, "", "take_along_axis"], [422, 1, 1, "", "tan"], [423, 1, 1, "", "tanh"], [424, 1, 1, "", "tensordot"], [425, 1, 1, "", "tile"], [426, 1, 1, "", "trace"], [427, 1, 1, "", "transpose"], [428, 1, 1, "", "tri"], [429, 1, 1, "", "tril"], [430, 1, 1, "", "tril_indices"], [431, 1, 1, "", "tril_indices_from"], [432, 1, 1, "", "triu"], [433, 1, 1, "", "triu_indices"], [434, 1, 1, "", "triu_indices_from"], [435, 1, 1, "", "true_divide"], [436, 1, 1, "", "trunc"], [437, 1, 1, "", "unique"], [438, 1, 1, "", "unpackbits"], [439, 1, 1, "", "unravel_index"], [440, 1, 1, "", "var"], [441, 1, 1, "", "vdot"], [442, 1, 1, "", "vsplit"], [443, 1, 1, "", "vstack"], [444, 1, 1, "", "where"], [445, 1, 1, "", "zeros"], [446, 1, 1, "", "zeros_like"]], "cupynumeric.broadcast": [[6, 3, 1, "", "index"], [6, 3, 1, "", "iters"], [6, 3, 1, "", "nd"], [6, 3, 1, "", "ndim"], [6, 3, 1, "", "numiter"], [6, 4, 1, "", "reset"], [6, 3, 1, "", "shape"], [6, 3, 1, "", "size"]], "cupynumeric.fft": [[95, 1, 1, "", "fft"], [96, 1, 1, "", "fft2"], [97, 1, 1, "", "fftn"], [98, 1, 1, "", "fftshift"], [99, 1, 1, "", "hfft"], [100, 1, 1, "", "ifft"], [101, 1, 1, "", "ifft2"], [102, 1, 1, "", "ifftn"], [103, 1, 1, "", "ifftshift"], [104, 1, 1, "", "ihfft"], [105, 1, 1, "", "irfft"], [106, 1, 1, "", "irfft2"], [107, 1, 1, "", "irfftn"], [108, 1, 1, "", "rfft"], [109, 1, 1, "", "rfft2"], [110, 1, 1, "", "rfftn"]], "cupynumeric.linalg": [[159, 1, 1, "", "cholesky"], [160, 1, 1, "", "eig"], [161, 1, 1, "", "eigh"], [162, 1, 1, "", "eigvals"], [163, 1, 1, "", "eigvalsh"], [164, 1, 1, "", "expm"], [165, 1, 1, "", "matrix_power"], [166, 1, 1, "", "multi_dot"], [167, 1, 1, "", "norm"], [168, 1, 1, "", "qr"], [169, 1, 1, "", "solve"], [170, 1, 1, "", "svd"]], "cupynumeric.ndarray": [[287, 0, 1, "", "C_CONTIGUOUS"], [207, 3, 1, "", "T"], [208, 4, 1, "", "__abs__"], [209, 4, 1, "", "__add__"], [210, 4, 1, "", "__and__"], [211, 4, 1, "", "__array__"], [212, 4, 1, "", "__bool__"], [213, 4, 1, "", "__complex__"], [214, 4, 1, "", "__contains__"], [215, 4, 1, "", "__copy__"], [216, 4, 1, "", "__deepcopy__"], [217, 4, 1, "", "__divmod__"], [218, 4, 1, "", "__eq__"], [219, 4, 1, "", "__float__"], [220, 4, 1, "", "__floordiv__"], [221, 4, 1, "", "__ge__"], [222, 4, 1, "", "__getitem__"], [223, 4, 1, "", "__gt__"], [224, 4, 1, "", "__iadd__"], [225, 4, 1, "", "__iand__"], [226, 4, 1, "", "__ifloordiv__"], [227, 4, 1, "", "__ilshift__"], [228, 4, 1, "", "__imatmul__"], [229, 4, 1, "", "__imod__"], [230, 4, 1, "", "__imul__"], [231, 4, 1, "", "__index__"], [4, 4, 1, "", "__init__"], [232, 4, 1, "", "__int__"], [233, 4, 1, "", "__invert__"], [234, 4, 1, "", "__ior__"], [235, 4, 1, "", "__ipow__"], [236, 4, 1, "", "__irshift__"], [237, 4, 1, "", "__isub__"], [238, 4, 1, "", "__itruediv__"], [239, 4, 1, "", "__ixor__"], [240, 4, 1, "", "__le__"], [241, 4, 1, "", "__len__"], [242, 4, 1, "", "__lshift__"], [243, 4, 1, "", "__lt__"], [244, 4, 1, "", "__matmul__"], [245, 4, 1, "", "__mod__"], [246, 4, 1, "", "__mul__"], [247, 4, 1, "", "__ne__"], [248, 4, 1, "", "__neg__"], [249, 4, 1, "", "__new__"], [250, 4, 1, "", "__or__"], [251, 4, 1, "", "__pos__"], [252, 4, 1, "", "__pow__"], [253, 4, 1, "", "__reduce__"], [254, 4, 1, "", "__repr__"], [255, 4, 1, "", "__rmatmul__"], [256, 4, 1, "", "__rshift__"], [257, 4, 1, "", "__setitem__"], [258, 4, 1, "", "__setstate__"], [259, 4, 1, "", "__str__"], [260, 4, 1, "", "__sub__"], [261, 4, 1, "", "__truediv__"], [262, 4, 1, "", "__xor__"], [263, 4, 1, "", "all"], [264, 4, 1, "", "any"], [265, 4, 1, "", "argmax"], [266, 4, 1, "", "argmin"], [267, 4, 1, "", "argpartition"], [268, 4, 1, "", "argsort"], [269, 4, 1, "", "astype"], [270, 3, 1, "", "base"], [271, 4, 1, "", "choose"], [272, 4, 1, "", "clip"], [273, 4, 1, "", "compress"], [274, 4, 1, "", "conj"], [275, 4, 1, "", "conjugate"], [276, 4, 1, "", "copy"], [277, 3, 1, "", "ctypes"], [278, 4, 1, "", "cumprod"], [279, 4, 1, "", "cumsum"], [280, 3, 1, "", "data"], [281, 4, 1, "", "diagonal"], [282, 4, 1, "", "dot"], [283, 3, 1, "", "dtype"], [284, 4, 1, "", "dump"], [285, 4, 1, "", "dumps"], [286, 4, 1, "", "fill"], [287, 3, 1, "", "flags"], [288, 3, 1, "", "flat"], [289, 4, 1, "", "flatten"], [290, 4, 1, "", "flip"], [291, 4, 1, "", "getfield"], [292, 3, 1, "", "imag"], [293, 4, 1, "", "item"], [294, 0, 1, "", "itemset"], [295, 3, 1, "", "itemsize"], [296, 4, 1, "", "max"], [297, 4, 1, "", "mean"], [298, 4, 1, "", "min"], [299, 3, 1, "", "nbytes"], [300, 3, 1, "", "ndim"], [301, 4, 1, "", "nonzero"], [302, 4, 1, "", "partition"], [303, 4, 1, "", "prod"], [304, 4, 1, "", "put"], [305, 4, 1, "", "ravel"], [306, 3, 1, "", "real"], [307, 4, 1, "", "reshape"], [308, 4, 1, "", "searchsorted"], [309, 4, 1, "", "setfield"], [310, 4, 1, "", "setflags"], [311, 3, 1, "", "shape"], [312, 3, 1, "", "size"], [313, 4, 1, "", "sort"], [314, 4, 1, "", "squeeze"], [315, 3, 1, "", "strides"], [316, 4, 1, "", "sum"], [317, 4, 1, "", "swapaxes"], [318, 4, 1, "", "take"], [319, 4, 1, "", "tobytes"], [320, 4, 1, "", "tofile"], [321, 4, 1, "", "tolist"], [322, 4, 1, "", "tostring"], [323, 4, 1, "", "trace"], [324, 4, 1, "", "transpose"], [325, 4, 1, "", "unique"], [326, 4, 1, "", "var"], [327, 4, 1, "", "view"]], "cupynumeric.random": [[1, 2, 1, "", "BitGenerator"], [2, 2, 1, "", "Generator"], [349, 1, 1, "", "beta"], [350, 1, 1, "", "binomial"], [351, 1, 1, "", "bytes"], [352, 1, 1, "", "chisquare"], [353, 1, 1, "", "default_rng"], [354, 1, 1, "", "exponential"], [355, 1, 1, "", "f"], [356, 1, 1, "", "gamma"], [357, 1, 1, "", "geometric"], [358, 1, 1, "", "gumbel"], [359, 1, 1, "", "hypergeometric"], [360, 1, 1, "", "laplace"], [361, 1, 1, "", "logistic"], [362, 1, 1, "", "lognormal"], [363, 1, 1, "", "logseries"], [364, 1, 1, "", "negative_binomial"], [365, 1, 1, "", "noncentral_chisquare"], [366, 1, 1, "", "noncentral_f"], [367, 1, 1, "", "normal"], [368, 1, 1, "", "pareto"], [369, 1, 1, "", "poisson"], [370, 1, 1, "", "power"], [371, 1, 1, "", "rand"], [372, 1, 1, "", "randint"], [373, 1, 1, "", "randn"], [374, 1, 1, "", "random"], [375, 1, 1, "", "random_integers"], [376, 1, 1, "", "random_sample"], [377, 1, 1, "", "ranf"], [378, 1, 1, "", "rayleigh"], [379, 1, 1, "", "sample"], [380, 1, 1, "", "seed"], [381, 1, 1, "", "standard_cauchy"], [382, 1, 1, "", "standard_exponential"], [383, 1, 1, "", "standard_gamma"], [384, 1, 1, "", "standard_t"], [385, 1, 1, "", "triangular"], [386, 1, 1, "", "uniform"], [387, 1, 1, "", "vonmises"], [388, 1, 1, "", "wald"], [389, 1, 1, "", "weibull"], [390, 1, 1, "", "zipf"]], "cupynumeric.random.BitGenerator": [[1, 4, 1, "", "__init__"]], "cupynumeric.random.Generator": [[2, 4, 1, "", "__init__"]]}, "objnames": {"0": ["py", "attribute", "Python attribute"], "1": ["py", "function", "Python function"], "2": ["py", "class", "Python class"], "3": ["py", "property", "Python property"], "4": ["py", "method", "Python method"], "5": ["py", "module", "Python module"]}, "objtypes": {"0": "py:attribute", "1": "py:function", "2": "py:class", "3": "py:property", "4": "py:method", "5": "py:module"}, "terms": {"": [2, 6, 14, 15, 29, 30, 35, 61, 68, 69, 76, 96, 97, 101, 102, 106, 107, 109, 110, 111, 112, 141, 151, 167, 170, 197, 198, 199, 202, 203, 205, 280, 283, 293, 312, 319, 320, 324, 338, 346, 384, 390, 424, 425, 458, 462, 463, 466, 467, 468, 469, 471, 472, 473, 474, 475, 478, 481, 483, 486, 487], "0": [3, 4, 14, 19, 21, 36, 41, 43, 48, 54, 55, 58, 67, 68, 73, 74, 76, 77, 78, 80, 93, 96, 97, 98, 100, 101, 102, 107, 110, 113, 116, 136, 138, 165, 167, 171, 183, 188, 194, 199, 203, 205, 212, 258, 281, 287, 291, 308, 309, 315, 316, 321, 323, 324, 326, 336, 338, 346, 349, 350, 352, 354, 355, 356, 358, 360, 361, 362, 363, 364, 365, 366, 367, 369, 370, 371, 372, 373, 374, 376, 377, 378, 379, 381, 384, 386, 387, 388, 389, 400, 401, 403, 404, 412, 416, 418, 426, 428, 429, 430, 431, 432, 433, 434, 438, 440, 442, 458, 462, 465, 466, 467, 468, 469, 471, 472, 473, 474, 475, 481, 483, 484, 486, 487, 488], "00": 487, "000": 487, "000001": 471, "000028": 475, "000029": 475, "0021705301478625403": 468, "01": [68, 487], "012924932": 487, "017": 477, "03": 465, "05": [15, 141, 466, 487], "07": [467, 481, 486], "075726": 465, "08": [15, 141, 465], "0b00000011": [336, 438], "0d": 480, "0x11403f190": 468, "1": [2, 3, 14, 16, 17, 19, 21, 31, 32, 36, 38, 40, 41, 43, 48, 54, 55, 56, 57, 61, 67, 68, 69, 73, 74, 76, 77, 78, 80, 82, 91, 92, 95, 96, 97, 99, 100, 101, 102, 104, 105, 106, 107, 108, 109, 110, 115, 127, 132, 133, 134, 138, 139, 152, 166, 167, 168, 171, 184, 188, 197, 198, 202, 203, 205, 206, 267, 268, 276, 287, 288, 289, 293, 302, 303, 308, 313, 315, 324, 335, 336, 337, 338, 339, 344, 346, 349, 350, 352, 354, 356, 357, 358, 359, 360, 361, 362, 363, 364, 366, 367, 368, 369, 370, 371, 373, 374, 375, 376, 377, 378, 379, 382, 383, 386, 388, 389, 390, 391, 396, 400, 402, 403, 410, 412, 415, 416, 421, 424, 425, 428, 437, 438, 441, 443, 458, 462, 463, 466, 467, 468, 469, 471, 472, 473, 474, 475, 477, 480, 481, 483, 484, 486, 488], "10": [77, 78, 132, 174, 466, 468, 471, 474, 475, 484, 486, 487], "100": [68, 203, 338, 465, 466, 467, 468, 471, 473, 483, 484, 487], "1000": [466, 467, 473, 481, 487], "10000": [172, 487], "100000": 487, "1000000": [466, 487], "100000000": 487, "1000000k": 487, "100000k": 487, "10000k": 487, "1024": [458, 474], "1083": 487, "10k": 477, "11": [477, 486, 487], "1100": 487, "11432": 487, "11680": 487, "12": [3, 8, 78, 477, 478, 480, 486], "12000": 487, "1202": 487, "1241": 487, "125": 367, "126": 474, "128": 474, "129": 477, "13": [472, 477, 487], "1300": 487, "13012": 487, "134217728": 458, "135": 465, "14": [3, 472], "14000": 487, "141": 487, "15": [78, 167, 473, 487], "150": 487, "15000": 487, "15000x15000": 487, "15973827": 480, "16": [3, 8, 465, 469, 487], "16000": 487, "16969": 487, "17": 3, "17617": 487, "18": [3, 8, 164, 295, 475], "19": 3, "1956": 388, "196": 465, "1970": 487, "1984": 478, "1985": 167, "1992": 468, "1995": 478, "1996": [203, 205, 338, 346], "1997": 466, "1998": 478, "1d": [41, 57, 344, 395, 421, 425], "1d00000000000001": 475, "1e": [15, 141, 467, 468, 472], "1e00000000000000": 475, "2": [3, 39, 40, 48, 56, 67, 73, 74, 75, 76, 77, 78, 80, 81, 82, 89, 93, 96, 99, 100, 101, 104, 105, 106, 107, 108, 109, 110, 111, 115, 116, 127, 152, 155, 160, 161, 162, 163, 166, 167, 168, 170, 176, 178, 184, 188, 203, 205, 315, 324, 338, 346, 354, 357, 365, 389, 400, 402, 412, 424, 425, 426, 443, 458, 462, 465, 466, 467, 468, 469, 471, 472, 473, 474, 477, 478, 479, 480, 486, 488], "20": [78, 315, 368, 472, 474, 487], "200": [367, 487], "2000": [478, 487], "20000": 487, "2000000": 487, "2000000k": 487, "2001": [354, 367], "2004": [462, 478], "2005": 478, "2006": 462, "2015": 478, "2017": 478, "2020": 487, "2024": [466, 467, 473], "2025": 478, "2048": 476, "21": [3, 295, 487], "2193": 487, "22": [3, 487], "225": 487, "22500x22500": 487, "23": [3, 481, 486], "2316419": 466, "2350": 487, "24": [475, 477], "24000": 487, "242": [3, 8], "2461": 473, "25": 474, "25001932": 487, "255": [77, 469, 487], "256": 471, "259": 487, "2593": 487, "26": [466, 483], "27": 483, "273": 473, "275": 487, "277": 467, "28": [3, 483], "280": 466, "29": 3, "294165": 487, "2960": 487, "2d": [111, 324, 400, 474, 486], "2x": 472, "2x2": 472, "2y": 472, "3": [40, 77, 78, 80, 81, 82, 127, 134, 152, 184, 188, 203, 205, 315, 336, 338, 346, 354, 402, 412, 420, 424, 425, 438, 443, 466, 467, 468, 469, 471, 472, 473, 477, 478, 480, 486, 488], "30": 487, "300": 487, "30000": 487, "30000x30000": 487, "31": [467, 483], "3110": 487, "31938153": 466, "32": [8, 204, 315, 463, 474, 487], "320": 471, "33": 483, "330274429": 466, "35": 487, "3550": 487, "356563782": 466, "36": [3, 468], "361": [203, 205, 338, 346], "365": [203, 205, 338, 346], "37": 68, "38000": 487, "39": 472, "39894228040143267793994605993438": 466, "3d": 486, "3e": 68, "3rd": 81, "4": [3, 77, 78, 80, 139, 184, 203, 205, 315, 338, 346, 424, 425, 441, 466, 467, 468, 469, 471, 472, 473, 474, 475, 480, 484, 486, 487, 488], "40": [315, 473, 487], "40000": 487, "4096": 458, "42": [3, 8, 471, 486], "434": 487, "4378": 487, "443": [3, 8], "45": [8, 466], "457": 487, "466": 487, "47": 3, "48000": 487, "49": 487, "4f": 487, "4th": [354, 367], "4x": 487, "4y": 472, "5": [77, 78, 80, 152, 184, 203, 205, 315, 338, 346, 425, 466, 467, 468, 469, 471, 473, 475, 486, 487], "50": [8, 171, 203, 205, 338, 346, 487], "500": 487, "50000": 487, "50000x50000": 487, "5050": 487, "50625": 487, "50e": 487, "51": 367, "5384": 487, "5460": 487, "5596": 487, "57": 354, "6": [3, 77, 78, 203, 205, 315, 338, 346, 465, 466, 467, 468, 471, 472, 473], "600": 474, "6040": 487, "62": [3, 8], "6368": 487, "64": [204, 487], "65536": 458, "659": 466, "69664": 487, "7": [3, 77, 184, 203, 205, 310, 315, 338, 346, 466, 468, 471, 472], "70": 487, "70000": 487, "713": 487, "725": 487, "75625": 487, "75625x75625": 487, "767": 487, "781477937": 466, "7f0524da9740": 475, "7fda18f26000": 475, "7fe90fa7d740": 475, "8": [77, 168, 203, 205, 315, 338, 346, 468, 471, 478, 487], "80": 368, "8000": 487, "805182": 475, "8192": 458, "821255978": 466, "8388608": 475, "875": 473, "8850": 487, "9": [184, 203, 205, 315, 338, 346, 468, 469, 471, 487], "90": 400, "919": 487, "961": 487, "993": 487, "A": [1, 8, 12, 13, 14, 18, 19, 20, 22, 23, 24, 25, 26, 27, 28, 34, 43, 44, 45, 46, 51, 52, 53, 57, 59, 60, 61, 63, 64, 65, 67, 68, 69, 70, 71, 72, 79, 84, 87, 88, 89, 91, 94, 96, 100, 101, 112, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 126, 127, 128, 129, 135, 140, 144, 145, 146, 147, 148, 154, 155, 156, 157, 158, 164, 167, 168, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 187, 189, 190, 191, 193, 194, 197, 198, 201, 204, 206, 269, 284, 287, 288, 289, 290, 293, 310, 315, 319, 322, 329, 330, 332, 335, 340, 341, 347, 348, 353, 369, 373, 384, 391, 393, 394, 396, 397, 398, 400, 401, 406, 407, 408, 409, 412, 413, 414, 417, 420, 422, 423, 425, 427, 435, 436, 438, 440, 458, 467, 468, 471, 475, 478, 481, 487], "AND": [14, 44, 179, 478], "AS": [466, 467, 473, 478], "And": [472, 488], "As": [315, 320, 384, 388, 462, 473, 480, 486, 487], "At": [12, 13, 22, 23, 24, 25, 26, 27, 28, 44, 45, 46, 52, 53, 59, 60, 63, 64, 65, 70, 71, 79, 87, 88, 89, 91, 94, 117, 118, 119, 120, 121, 122, 123, 126, 128, 129, 135, 140, 144, 145, 146, 154, 155, 156, 157, 158, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 185, 189, 190, 191, 193, 329, 330, 332, 340, 341, 347, 348, 393, 394, 397, 398, 406, 407, 408, 409, 413, 414, 417, 422, 423, 435, 436, 467], "BE": 478, "BUT": 478, "BY": 478, "But": 486, "By": [16, 17, 29, 30, 31, 32, 37, 67, 96, 101, 110, 164, 171, 195, 196, 199, 204, 269, 337, 391, 395, 399, 410, 420, 427, 428, 430, 433, 440, 458, 462, 474, 487, 488], "FOR": 478, "For": [12, 13, 21, 22, 23, 24, 25, 26, 27, 28, 36, 40, 44, 45, 46, 52, 53, 55, 59, 60, 61, 63, 64, 65, 68, 69, 70, 71, 72, 74, 77, 78, 79, 82, 83, 87, 88, 89, 91, 94, 95, 99, 100, 102, 105, 106, 108, 109, 111, 115, 116, 117, 118, 119, 120, 121, 122, 123, 126, 128, 129, 134, 135, 140, 141, 144, 145, 146, 154, 155, 156, 157, 158, 165, 167, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 185, 186, 188, 189, 190, 191, 193, 194, 195, 196, 197, 198, 200, 204, 253, 258, 295, 315, 324, 329, 330, 332, 340, 341, 347, 348, 367, 393, 394, 397, 398, 402, 406, 407, 408, 409, 412, 413, 414, 416, 417, 422, 423, 435, 436, 440, 443, 454, 462, 468, 469, 471, 474, 475, 476, 477, 481, 484, 487, 488], "IF": 478, "IN": 478, "ITS": 478, "If": [1, 2, 12, 13, 14, 15, 16, 17, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 34, 35, 37, 41, 42, 43, 44, 45, 46, 47, 48, 49, 52, 53, 54, 55, 57, 58, 59, 60, 61, 63, 64, 65, 67, 68, 69, 70, 71, 72, 73, 76, 77, 78, 79, 80, 83, 84, 87, 88, 89, 91, 93, 94, 95, 96, 97, 99, 100, 101, 102, 104, 105, 107, 108, 110, 111, 114, 117, 118, 119, 120, 121, 122, 123, 126, 127, 128, 129, 130, 131, 132, 135, 137, 138, 139, 140, 141, 144, 145, 146, 147, 148, 149, 153, 154, 155, 156, 157, 158, 160, 161, 162, 163, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 184, 185, 186, 187, 188, 189, 190, 191, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 258, 269, 290, 308, 320, 321, 324, 328, 329, 330, 332, 335, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 375, 376, 377, 378, 379, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 392, 393, 394, 396, 397, 398, 399, 401, 403, 406, 407, 408, 409, 410, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 428, 435, 436, 437, 440, 441, 462, 463, 468, 471, 472, 475, 483, 486, 487], "In": [2, 61, 68, 69, 83, 100, 101, 102, 105, 107, 159, 171, 183, 188, 197, 198, 203, 204, 205, 206, 337, 338, 342, 343, 346, 368, 386, 388, 396, 410, 418, 428, 462, 466, 467, 468, 470, 471, 474, 481, 486, 487], "It": [6, 14, 19, 20, 21, 29, 30, 31, 32, 42, 47, 51, 54, 55, 68, 69, 78, 119, 161, 163, 187, 195, 196, 197, 198, 201, 203, 205, 206, 287, 338, 342, 345, 346, 349, 354, 357, 360, 368, 387, 401, 404, 418, 420, 421, 440, 468, 474, 479, 486, 487], "Its": [55, 57, 344, 354, 426], "NO": 478, "NOT": [140, 180, 380, 478, 487], "No": [37, 159], "Not": [55, 144, 197, 198, 204, 206, 486], "OF": [466, 467, 473, 478], "ON": [463, 478], "OR": [19, 45, 181, 466, 467, 473, 477, 478], "On": 475, "One": [38, 39, 40, 204, 272, 396, 475, 486], "Ones": [34, 197], "Or": 424, "SUCH": 478, "Such": 475, "THE": 478, "TO": 478, "That": 183, "The": [2, 6, 7, 14, 15, 16, 17, 18, 19, 20, 21, 31, 32, 34, 36, 41, 42, 43, 47, 48, 49, 50, 51, 54, 55, 56, 58, 61, 66, 67, 68, 69, 72, 73, 74, 76, 77, 78, 80, 82, 83, 84, 86, 90, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 112, 114, 117, 124, 125, 127, 130, 131, 132, 134, 136, 137, 138, 139, 141, 143, 147, 148, 150, 153, 159, 160, 161, 162, 163, 165, 166, 167, 168, 170, 171, 172, 183, 184, 186, 187, 188, 192, 194, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 258, 269, 277, 284, 287, 289, 290, 292, 295, 306, 310, 315, 319, 320, 321, 328, 333, 334, 336, 337, 338, 342, 343, 344, 346, 349, 353, 354, 355, 356, 357, 358, 360, 365, 367, 368, 369, 371, 372, 373, 375, 378, 381, 385, 386, 387, 388, 389, 390, 391, 392, 395, 396, 399, 400, 401, 402, 404, 405, 410, 412, 415, 416, 418, 420, 421, 424, 425, 426, 428, 430, 431, 433, 434, 437, 438, 439, 440, 441, 443, 445, 446, 447, 463, 464, 465, 466, 468, 469, 471, 472, 474, 475, 477, 478, 480, 483, 484, 486, 487], "Then": [54, 183, 488], "There": [171, 310, 437, 463, 465, 472, 486, 487], "These": [20, 49, 67, 83, 84, 188, 192, 287, 310, 344, 421, 474, 480, 487], "To": [99, 105, 107, 324, 376, 377, 379, 462, 466, 467, 468, 471, 472, 473, 477, 484, 486, 487], "WITH": 478, "With": [14, 16, 17, 19, 29, 30, 41, 167, 186, 187, 195, 196, 199, 200, 201, 202, 203, 204, 205, 206, 338, 342, 346, 418, 440, 474, 476, 487], "_": [468, 486, 487], "__abs__": 0, "__add__": 0, "__and__": 0, "__array__": [0, 34, 327], "__array_function__": [0, 428], "__array_ufunc__": 0, "__bool__": 0, "__buffer__": 0, "__complex__": 0, "__contains__": 0, "__copy__": 0, "__deepcopy__": 0, "__divmod__": 0, "__eq__": 0, "__float__": 0, "__floordiv__": 0, "__format__": 0, "__ge__": 0, "__getitem__": 0, "__gt__": 0, "__hash__": 0, "__iadd__": 0, "__iand__": 0, "__ifloordiv__": 0, "__ilshift__": 0, "__imatmul__": 0, "__imod__": 0, "__imul__": 0, "__index__": 0, "__init__": [0, 1, 2, 4, 483], "__int__": 0, "__invert__": 0, "__ior__": 0, "__ipow__": 0, "__irshift__": 0, "__isub__": 0, "__iter__": 0, "__itruediv__": 0, "__ixor__": 0, "__le__": 0, "__len__": 0, "__lshift__": 0, "__lt__": 0, "__main__": 487, "__matmul__": 0, "__mod__": 0, "__mul__": 0, "__name__": [469, 487], "__ne__": 0, "__neg__": 0, "__or__": 0, "__pos__": 0, "__pow__": 0, "__radd__": 0, "__rand__": 0, "__rdivmod__": 0, "__reduce__": 0, "__reduce_ex__": 0, "__repr__": 0, "__rfloordiv__": 0, "__rmatmul__": 0, "__rmod__": 0, "__rmul__": 0, "__ror__": 0, "__rpow__": 0, "__rshift__": 0, "__rsub__": 0, "__rtruediv__": 0, "__rxor__": 0, "__setitem__": 0, "__setstate__": 0, "__sizeof__": 0, "__str__": 0, "__sub__": 0, "__truediv__": 0, "__xor__": 0, "_f": 167, "a0": 335, "a1": [35, 58, 335, 466, 468], "a100": 476, "a2": [35, 58, 466, 468], "a3": 466, "a4": 466, "a5": 466, "a_": [167, 468], "a_ax": 424, "a_max": 55, "a_min": 55, "a_swap": 419, "aand": 466, "aarch64": [477, 487], "ab": [15, 165, 167, 208, 466], "abandon": 462, "abil": 487, "abl": [167, 462, 487], "about": [100, 287, 310, 458, 462, 467, 471, 477, 481, 487], "abov": [54, 73, 97, 102, 107, 110, 186, 194, 200, 204, 206, 342, 368, 372, 375, 428, 429, 440, 466, 474, 475, 478, 487], "abramowitz": 466, "abrupt": 469, "absolut": [0, 3, 8, 15, 94, 141], "abstract": 474, "ac": [466, 469], "acceler": [458, 475, 476, 487], "accept": [350, 462, 480, 486], "access": [74, 75, 183, 287, 293, 310, 474, 475, 487], "accomod": 468, "accord": [41, 110, 160, 161, 162, 163, 310, 427], "accordingli": 184, "account": [391, 396, 474, 475, 487], "acct": 487, "acct_nam": 487, "accumul": [68, 69, 197, 198, 204, 206, 342, 418, 426, 480], "accur": [127, 467, 468, 475], "accuraci": [100, 101, 102, 105, 107, 468, 472, 487], "achiev": [324, 357, 474, 476], "aco": [3, 8], "acosh": [3, 8], "across": [471, 474, 487], "action": 478, "activ": [477, 487], "actual": [159, 310, 469, 474, 475, 481, 487], "ad": [15, 324, 368, 474, 483], "adapt": 478, "add": [0, 3, 8, 376, 377, 379, 438, 462, 480, 486, 487, 488], "add_argu": 487, "addit": [2, 67, 159, 164, 324, 437, 458, 465, 468, 469, 472, 474, 475, 477, 486, 487], "addition": [353, 463, 480, 486, 487], "address": [420, 462, 487], "adjac": [21, 474, 487], "advanc": [464, 475, 480, 485], "advantag": 487, "advis": 478, "affect": [21, 310, 468], "afford": [475, 487], "after": [82, 111, 184, 203, 205, 315, 330, 338, 346, 399, 402, 443, 462, 465, 474, 483, 486], "again": 327, "against": [6, 14, 15, 16, 17, 19, 29, 30, 41, 49, 50, 167, 186, 187, 195, 196, 199, 200, 201, 202, 203, 204, 205, 206, 338, 342, 344, 346, 418, 421, 440], "aggreg": 487, "agre": [462, 466, 467, 473], "ai": 487, "aim": 476, "alaska": 478, "algebra": [83, 447, 456, 463], "algo_canny_edge_detector": 469, "algorithm": [1, 32, 83, 84, 95, 100, 108, 410, 468, 469, 470, 472, 487], "alia": [322, 374], "alias": 100, "align": [287, 310, 487], "all": [0, 3, 8, 16, 17, 19, 41, 48, 54, 56, 67, 77, 78, 82, 83, 84, 88, 89, 91, 93, 97, 98, 102, 103, 107, 110, 111, 114, 127, 134, 136, 151, 152, 159, 171, 183, 184, 186, 188, 195, 196, 197, 198, 199, 200, 202, 204, 206, 269, 274, 286, 287, 290, 310, 321, 342, 386, 399, 402, 404, 415, 418, 420, 426, 440, 443, 458, 462, 463, 465, 471, 473, 474, 478, 483, 487, 488], "allclos": [0, 3, 8, 483], "allevi": 487, "alloc": [12, 13, 22, 23, 24, 25, 26, 27, 28, 44, 45, 46, 52, 53, 59, 60, 63, 64, 65, 70, 71, 79, 87, 88, 89, 91, 94, 117, 118, 119, 120, 121, 122, 123, 126, 128, 129, 135, 140, 144, 145, 146, 147, 148, 154, 155, 156, 157, 158, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 185, 189, 190, 191, 193, 269, 329, 330, 332, 340, 341, 347, 348, 393, 394, 397, 398, 406, 407, 408, 409, 413, 414, 417, 422, 423, 435, 436, 475, 485, 488], "allow": [16, 17, 36, 48, 80, 83, 132, 139, 172, 184, 187, 199, 201, 202, 203, 205, 269, 338, 346, 420, 424, 428, 441, 462, 469, 474, 487], "alon": 487, "along": [6, 14, 16, 17, 19, 20, 29, 30, 31, 32, 41, 48, 57, 58, 66, 68, 69, 72, 74, 77, 81, 82, 95, 96, 97, 99, 100, 101, 102, 104, 105, 107, 108, 110, 111, 114, 115, 116, 127, 133, 134, 138, 167, 171, 186, 187, 188, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 265, 266, 273, 290, 296, 297, 298, 315, 318, 323, 326, 338, 342, 344, 346, 395, 399, 400, 402, 411, 412, 416, 418, 420, 421, 424, 425, 426, 430, 431, 433, 434, 437, 438, 440, 442, 443, 487], "alpha": [349, 468, 471], "alreadi": [37, 39, 40, 187, 201, 287, 328, 335, 437, 462], "also": [21, 67, 77, 83, 97, 102, 107, 110, 164, 184, 192, 287, 327, 350, 355, 361, 368, 370, 378, 381, 387, 390, 420, 437, 452, 454, 462, 465, 467, 472, 473, 474, 475, 477, 479, 480, 484, 486, 487], "alter": 287, "altern": [14, 16, 17, 19, 68, 69, 186, 187, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 338, 342, 346, 354, 401, 418, 440, 458], "although": [103, 321, 474], "alwai": [54, 76, 81, 117, 133, 151, 160, 161, 162, 163, 172, 320, 415, 442, 458, 462, 475], "am": [335, 462], "amax": [0, 3, 8, 43, 199, 296], "amd": 487, "american": [203, 205, 338, 346], "amin": [0, 3, 8, 202, 298], "among": [277, 487], "amongst": 6, "amount": [475, 487], "an": [2, 6, 12, 13, 14, 16, 17, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 34, 36, 37, 38, 39, 40, 41, 42, 44, 45, 46, 47, 48, 51, 52, 53, 54, 55, 57, 58, 59, 60, 61, 62, 63, 64, 65, 67, 68, 69, 70, 71, 72, 74, 75, 76, 78, 79, 80, 83, 84, 87, 88, 89, 90, 91, 92, 93, 94, 96, 97, 99, 100, 101, 102, 105, 107, 108, 110, 111, 114, 117, 118, 119, 120, 121, 122, 123, 126, 127, 128, 129, 130, 131, 132, 133, 135, 138, 139, 140, 143, 144, 145, 146, 150, 152, 153, 154, 155, 156, 157, 158, 167, 169, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 215, 216, 258, 271, 272, 273, 277, 285, 290, 293, 302, 307, 308, 312, 313, 315, 318, 320, 321, 324, 325, 327, 328, 329, 330, 332, 334, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 350, 352, 354, 355, 357, 366, 371, 373, 388, 390, 391, 393, 394, 395, 396, 397, 398, 399, 400, 401, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 432, 433, 435, 436, 437, 439, 440, 442, 444, 446, 454, 458, 462, 463, 465, 466, 467, 469, 471, 472, 473, 474, 475, 477, 478, 480, 481, 483, 487], "analog": [101, 102], "analogu": [354, 387], "analysi": 475, "angl": [0, 3, 8, 70, 71, 347, 348], "ani": [0, 3, 4, 6, 8, 12, 13, 14, 16, 17, 20, 21, 22, 23, 24, 25, 26, 27, 28, 34, 36, 37, 44, 45, 46, 48, 49, 52, 53, 54, 59, 60, 63, 64, 65, 67, 68, 69, 70, 71, 72, 77, 78, 79, 83, 84, 87, 88, 89, 91, 94, 96, 97, 101, 102, 107, 110, 111, 112, 117, 118, 119, 120, 121, 122, 123, 124, 126, 127, 128, 129, 134, 135, 140, 142, 143, 144, 145, 146, 149, 150, 151, 152, 154, 155, 156, 157, 158, 165, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 184, 185, 186, 189, 190, 191, 193, 195, 196, 197, 198, 199, 200, 202, 204, 206, 269, 270, 277, 278, 279, 283, 287, 288, 290, 291, 296, 298, 303, 309, 316, 319, 321, 329, 330, 332, 340, 341, 342, 347, 348, 386, 393, 394, 395, 397, 398, 404, 406, 407, 408, 409, 413, 414, 417, 418, 422, 423, 426, 435, 436, 440, 462, 465, 466, 467, 473, 474, 478, 484, 486], "anoth": [6, 287, 310, 475, 487], "anova": 355, "answer": 487, "anti": 486, "anyth": [295, 465], "ap": 466, "apach": [462, 466, 467, 473], "api": [287, 310, 374, 458, 463, 468, 469, 472, 475, 476, 481, 482, 484, 485, 487], "appear": [42, 47, 90, 115, 116, 130, 131, 153, 269, 437, 462], "append": [0, 3, 8, 76, 77, 84, 184, 474, 486, 487], "appli": [41, 72, 112, 194, 424, 468, 469, 480, 486, 487], "applic": [466, 467, 473, 474, 481, 483, 485, 487, 488], "apply_along_axi": [3, 8], "apply_over_ax": [3, 8], "approach": [388, 462, 474, 486, 487], "appropri": [29, 30, 48, 54, 78, 195, 196, 287, 310, 372, 375, 420, 454, 462, 474, 487], "approx": 487, "approxim": [466, 468], "ar": [13, 14, 15, 16, 17, 19, 20, 21, 27, 29, 30, 33, 35, 38, 39, 40, 41, 42, 44, 45, 46, 48, 49, 54, 55, 56, 57, 58, 61, 63, 67, 68, 69, 73, 76, 77, 78, 79, 80, 83, 84, 87, 93, 96, 97, 99, 100, 101, 102, 105, 107, 110, 113, 114, 115, 116, 117, 119, 120, 121, 122, 126, 128, 129, 132, 135, 139, 141, 154, 155, 156, 157, 158, 159, 165, 167, 170, 171, 177, 178, 179, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 269, 272, 287, 290, 293, 301, 308, 310, 320, 321, 324, 328, 330, 331, 332, 338, 339, 341, 342, 343, 344, 346, 349, 350, 352, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 372, 373, 375, 376, 377, 378, 379, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 394, 397, 399, 401, 403, 404, 416, 417, 418, 420, 424, 426, 428, 431, 434, 435, 437, 438, 439, 440, 458, 462, 463, 465, 466, 468, 469, 471, 472, 474, 477, 478, 480, 481, 483, 486, 487], "arang": [0, 3, 8], "arbitrari": [85, 86, 287, 312], "arbitrarili": 287, "arc": 27, "arcco": [0, 3, 8], "arccosh": [0, 3, 8], "architectur": [474, 487], "archiv": 320, "arcsin": [0, 3, 8], "arcsinh": [0, 3, 8], "arctan": [0, 3, 8], "arctan2": [0, 3, 8, 18], "arctanh": [0, 3, 8], "area": [287, 310, 474], "arg": [12, 13, 22, 23, 24, 25, 26, 27, 28, 44, 45, 46, 49, 50, 52, 53, 59, 60, 63, 64, 65, 70, 71, 79, 87, 88, 89, 91, 94, 112, 117, 118, 119, 120, 121, 122, 123, 126, 128, 129, 135, 140, 144, 145, 146, 152, 154, 155, 156, 157, 158, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 185, 189, 190, 191, 193, 293, 329, 330, 332, 340, 341, 347, 348, 393, 394, 397, 398, 406, 407, 408, 409, 413, 414, 417, 422, 423, 435, 436, 466, 487], "argmax": [0, 3, 8], "argmin": [0, 3, 8, 471], "argpars": 487, "argpartit": [0, 3, 8, 344, 421], "argsort": [0, 3, 8, 31, 308, 344, 403, 421], "argument": [2, 12, 13, 18, 21, 22, 23, 24, 25, 26, 27, 28, 44, 45, 46, 52, 53, 55, 58, 59, 60, 61, 63, 64, 65, 70, 71, 78, 79, 80, 84, 87, 88, 89, 91, 94, 112, 117, 118, 119, 120, 121, 122, 123, 126, 128, 129, 132, 135, 137, 139, 140, 144, 145, 146, 147, 148, 151, 154, 155, 156, 157, 158, 166, 171, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 188, 189, 190, 191, 193, 258, 269, 277, 293, 324, 327, 329, 330, 332, 340, 341, 347, 348, 371, 373, 392, 393, 394, 397, 398, 406, 407, 408, 409, 413, 414, 416, 417, 422, 423, 424, 428, 435, 436, 437, 441, 485, 487], "argumentpars": 487, "argwher": [0, 3, 8], "ari": [38, 39, 40, 412], "aris": [355, 478], "arithmet": [7, 54, 186, 200, 293, 456], "around": [3, 8, 343, 420, 487], "arr": [20, 51, 62, 72, 75, 92, 187, 201, 287, 339, 344, 420, 421, 431, 434, 480], "arr_t": 269, "arrai": [0, 2, 6, 7, 12, 13, 14, 15, 16, 17, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 152, 153, 154, 155, 156, 157, 158, 160, 161, 162, 163, 164, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 211, 215, 216, 258, 267, 268, 269, 271, 272, 273, 276, 277, 280, 282, 283, 284, 285, 286, 287, 288, 289, 290, 292, 293, 297, 299, 300, 302, 303, 304, 305, 306, 307, 308, 310, 311, 312, 313, 315, 316, 317, 318, 319, 320, 321, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 362, 371, 372, 373, 375, 376, 377, 379, 386, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 456, 458, 467, 468, 469, 471, 472, 473, 474, 475, 480, 481, 483, 488], "array2str": [3, 8], "array_equ": [0, 3, 8], "array_equiv": [3, 8], "array_lik": [6, 12, 13, 14, 15, 16, 17, 18, 19, 20, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 37, 38, 39, 40, 41, 43, 44, 45, 46, 48, 49, 51, 52, 53, 55, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 75, 76, 77, 78, 79, 80, 83, 84, 86, 87, 88, 89, 90, 91, 92, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 110, 111, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 125, 126, 127, 128, 129, 132, 135, 137, 139, 140, 141, 142, 144, 145, 146, 147, 148, 149, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 184, 185, 186, 187, 188, 189, 190, 191, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 290, 308, 328, 329, 330, 331, 332, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 403, 405, 406, 407, 408, 409, 410, 411, 413, 414, 415, 416, 417, 418, 419, 420, 422, 423, 424, 425, 426, 427, 428, 429, 431, 435, 436, 437, 439, 440, 441, 444, 446], "array_of_diagon": 76, "array_repr": [3, 8], "array_split": [0, 3, 8], "array_str": [3, 8], "array_typ": 41, "arraylik": [55, 132, 404, 444], "articl": 462, "asanyarrai": 3, "asarrai": [0, 3, 8], "asarray_chkfinit": [3, 8], "ascend": [161, 163, 308, 403], "ascontiguousarrai": 3, "asfortranarrai": 3, "asin": [3, 8], "asinh": [3, 8], "ask": [462, 476], "asmatrix": [3, 8], "aspect": 487, "aspir": 475, "assembl": 48, "assert": [468, 471, 486], "assign": [67, 286, 287, 474, 480], "assoc": 471, "associ": [41, 132, 471, 478, 481, 486], "assum": [41, 84, 164, 183, 463], "ast": 172, "astyp": [0, 3, 8, 77, 283, 469, 475, 487], "asynchron": [344, 480, 481], "atan": [3, 8], "atan2": [3, 8], "atanh": [3, 8], "atleast2d": 324, "atleast_1d": [0, 3, 8, 90], "atleast_2d": [0, 3, 8, 90], "atleast_3d": [0, 3, 8, 90], "atol": [15, 141], "attempt": [41, 78, 186, 199, 200, 202, 206, 287, 328, 440, 458, 486, 487], "attribut": [4, 7, 86, 125, 277, 287, 299, 334, 446], "author": 478, "auto": 61, "autom": 462, "automat": [61, 166, 462, 463, 474, 477, 487], "avail": [1, 2, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 208, 209, 210, 214, 215, 216, 217, 218, 220, 221, 223, 224, 225, 226, 227, 228, 229, 230, 233, 234, 235, 236, 237, 238, 239, 240, 242, 243, 244, 245, 246, 247, 248, 250, 251, 252, 254, 255, 256, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 271, 272, 273, 274, 275, 276, 281, 282, 284, 285, 286, 288, 289, 290, 293, 296, 297, 298, 301, 302, 303, 304, 305, 307, 308, 310, 313, 314, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 462, 463, 477, 486, 487, 488], "averag": [0, 3, 8, 67, 186, 200, 297, 456, 473, 474, 487], "averaged_inverted_cdf": [203, 205, 338, 346], "avg": 41, "avoid": [39, 40, 269, 471, 475, 480], "aweight": 67, "ax": [14, 16, 17, 19, 29, 30, 41, 48, 66, 76, 77, 90, 96, 97, 98, 101, 102, 103, 106, 107, 109, 110, 114, 127, 139, 167, 169, 186, 187, 192, 195, 196, 199, 200, 201, 202, 203, 204, 205, 206, 290, 314, 324, 338, 342, 346, 399, 400, 418, 419, 424, 425, 426, 427, 440, 469, 487], "axi": [14, 16, 17, 18, 19, 20, 29, 30, 31, 32, 36, 41, 57, 58, 66, 68, 69, 72, 76, 77, 80, 81, 82, 90, 95, 96, 97, 99, 100, 101, 102, 104, 105, 106, 107, 108, 109, 110, 114, 115, 116, 127, 133, 134, 138, 167, 171, 186, 187, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 263, 264, 265, 266, 267, 268, 273, 278, 279, 290, 296, 297, 298, 302, 303, 313, 314, 315, 316, 318, 324, 326, 336, 337, 338, 342, 344, 346, 391, 395, 396, 399, 400, 402, 410, 411, 412, 415, 416, 418, 419, 420, 421, 425, 426, 437, 438, 440, 442, 443, 471], "axis1": [76, 281, 317, 323, 419, 426], "axis2": [76, 281, 317, 323, 419, 426], "b": [6, 15, 35, 48, 80, 82, 119, 134, 139, 141, 169, 184, 287, 335, 349, 376, 377, 379, 402, 424, 441, 443, 462, 463, 468, 487], "b0": 335, "b1": 335, "b_ax": 424, "ba": 54, "back": [31, 54, 151, 284, 285, 337, 391, 396, 458, 466, 472, 475, 483, 487], "backward": [76, 95, 96, 97, 99, 100, 101, 102, 104, 105, 106, 107, 108, 109, 110, 127, 269, 391], "bad": 359, "balanc": 487, "baltimor": 167, "bar": 486, "barba": 474, "bartlett": [0, 3, 8], "base": [1, 34, 37, 61, 83, 174, 176, 178, 269, 287, 310, 339, 345, 458, 462, 463, 471, 474, 475, 480], "base_repr": [3, 8], "bash": 487, "bashrc": 487, "basi": [458, 466, 467, 473], "basic": [32, 410, 454, 456, 464, 474, 485, 486], "batch": [95, 96, 97, 99, 100, 101, 102, 104, 105, 106, 107, 108, 109, 110, 160, 161, 162, 163, 458], "bayesian": 349, "bbox_to_anchor": 468, "bchoic": 54, "becaus": [21, 293, 367, 388, 466, 467, 473, 475, 480, 486], "becom": [13, 27, 40, 44, 45, 46, 54, 55, 63, 79, 87, 117, 119, 120, 121, 122, 126, 128, 129, 135, 154, 155, 156, 157, 158, 177, 178, 179, 181, 182, 185, 189, 190, 193, 324, 330, 332, 341, 388, 394, 397, 417, 435, 487, 488], "been": [82, 344, 375, 402, 421, 443, 475], "befor": [14, 16, 17, 19, 20, 41, 58, 61, 115, 116, 186, 199, 200, 206, 287, 308, 342, 364, 399, 403, 418, 425, 440, 441, 472, 475, 477, 486, 487], "begin": [171, 464, 472, 487], "behav": [287, 343, 420], "behavior": [61, 78, 184, 319, 322, 344, 345, 372, 375, 425, 458, 474, 477, 485, 487], "being": [21, 415, 462, 475, 487], "bell": 367, "belong": [78, 471], "below": [67, 73, 105, 167, 310, 428, 429, 432, 463, 466, 468, 472, 474, 483, 484, 486, 487, 488], "benchmark": [465, 475, 482, 485, 487], "bernoulli": 357, "bessel": 153, "best": [84, 462, 475, 485], "beta": [0, 3, 8, 153, 354, 471], "better": [21, 54, 481, 487], "between": [15, 21, 36, 77, 127, 171, 203, 205, 320, 338, 346, 354, 360, 375, 388, 468, 469, 471, 472, 474, 486, 487], "beyond": [78, 399], "bham": 466, "bia": 67, "big": [164, 336, 438, 466], "bigger": 487, "billion": 474, "bin": [43, 78, 132, 336, 438, 471, 477, 487], "bin_edg": 132, "binari": [172, 258, 320, 336, 438, 447, 456, 478], "binary_repr": [3, 8], "binaryio": 172, "binaryoptask": 475, "bincount": [0, 3, 8, 471], "binomi": [0, 3, 8, 364, 369], "bit": [1, 44, 45, 46, 140, 156, 180, 204, 315, 336, 397, 438, 456], "bit_gener": 2, "bitgener": [2, 3, 8, 353], "bitord": [336, 438], "bitwise_and": [0, 3, 8], "bitwise_count": [3, 8], "bitwise_invert": [3, 8], "bitwise_left_shift": [3, 8], "bitwise_or": [0, 3, 8], "bitwise_right_shift": [3, 8], "bitwise_xor": [0, 3, 8], "bla": 463, "black": [470, 471, 477], "black_schol": [465, 466, 477, 487], "blackman": [0, 3, 8], "block": [0, 3, 8, 82, 134, 315, 402, 443, 474], "block_arrai": 48, "blog": 475, "blue": [468, 471], "bmat": [3, 8], "bmatrix": 472, "bn": 335, "boilerpl": 487, "boldsymbol": 487, "bond": 487, "bool": [1, 3, 4, 8, 12, 13, 14, 15, 16, 17, 18, 19, 22, 23, 24, 25, 26, 27, 28, 29, 30, 34, 35, 36, 41, 44, 45, 46, 49, 51, 52, 53, 57, 59, 60, 63, 64, 65, 67, 70, 71, 72, 78, 79, 83, 84, 87, 88, 89, 91, 94, 111, 117, 118, 119, 120, 121, 122, 123, 126, 128, 129, 132, 135, 138, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 154, 155, 156, 157, 158, 167, 170, 171, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 185, 186, 187, 188, 189, 190, 191, 193, 194, 195, 196, 199, 200, 201, 202, 203, 204, 205, 206, 258, 269, 296, 298, 303, 310, 316, 329, 330, 332, 338, 340, 341, 342, 346, 347, 348, 393, 394, 397, 398, 404, 406, 407, 408, 409, 413, 414, 417, 418, 422, 423, 435, 436, 437, 440, 444, 454, 458, 486], "bool_": [3, 8], "boolean": [14, 19, 77, 141, 146, 147, 148, 149, 152, 183, 310, 336, 345, 440, 471], "boolean_sequ": 152, "borrow": 287, "both": [13, 15, 20, 27, 41, 44, 45, 46, 61, 63, 67, 79, 80, 87, 101, 117, 119, 120, 121, 122, 126, 128, 129, 135, 139, 141, 154, 155, 156, 157, 158, 167, 177, 178, 179, 181, 182, 184, 185, 188, 189, 190, 193, 287, 330, 332, 341, 355, 356, 366, 367, 394, 397, 417, 424, 426, 435, 463, 472, 475, 486], "bottleneck": 487, "bound": [57, 78, 343, 420], "boundari": [68, 69, 127, 197, 198, 386, 468, 473, 474, 481], "boundsmod": [54, 420], "break": [471, 472, 486], "bright": 487, "broadcast": [3, 7, 8, 12, 13, 14, 16, 17, 19, 22, 23, 24, 25, 26, 27, 28, 29, 30, 41, 44, 45, 46, 48, 49, 50, 51, 52, 53, 54, 55, 59, 60, 63, 64, 65, 70, 71, 79, 80, 87, 88, 89, 91, 94, 117, 118, 119, 120, 121, 122, 123, 126, 128, 129, 135, 139, 140, 144, 145, 146, 147, 148, 154, 155, 156, 157, 158, 167, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 184, 185, 186, 187, 188, 189, 190, 191, 193, 195, 196, 199, 200, 201, 202, 203, 204, 205, 206, 329, 330, 332, 338, 340, 341, 342, 344, 346, 347, 348, 369, 393, 394, 395, 397, 398, 406, 407, 408, 409, 413, 414, 417, 418, 421, 422, 423, 424, 435, 436, 440, 441, 444, 447, 480, 487], "broadcast_arrai": [0, 3, 8], "broadcast_shap": [0, 3, 8], "broadcast_to": [0, 3, 8], "brownian": 388, "bryan": 466, "bsd": 478, "buffer": [4, 16, 17, 54, 68, 69, 187, 197, 198, 199, 201, 202, 280, 287, 293, 310], "build": [380, 456, 464, 471, 480, 487], "built": [21, 463, 467, 475, 476, 487], "builtin": 321, "bundl": 477, "busday_count": [3, 8], "busday_offset": [3, 8], "busdaycalendar": [3, 8], "busi": 478, "bypass": [320, 487], "byte": [0, 3, 8, 83, 172, 184, 269, 299, 315, 319, 322, 336, 475], "bytes_": [3, 8], "bytesio": 320, "byteswap": 8, "c": [34, 48, 57, 167, 184, 269, 277, 287, 289, 305, 307, 310, 319, 320, 322, 375, 388, 391, 396, 425, 439, 462, 463, 466, 471, 477, 478, 487], "c_": 67, "c_contigu": 287, "ca": 287, "calcul": [7, 12, 41, 61, 77, 83, 88, 89, 91, 103, 127, 161, 163, 167, 171, 184, 187, 201, 203, 205, 312, 338, 342, 346, 440, 441, 463, 466, 471, 487], "calculate_dist": 471, "call": [54, 78, 108, 166, 183, 187, 201, 215, 216, 277, 287, 310, 367, 420, 425, 458, 466, 467, 472, 475, 487], "call_result": 466, "callabl": 183, "can": [14, 19, 20, 37, 41, 48, 67, 74, 76, 83, 84, 95, 96, 97, 100, 101, 102, 127, 134, 143, 150, 151, 152, 164, 165, 167, 171, 184, 187, 201, 203, 204, 205, 269, 277, 284, 287, 293, 295, 310, 315, 320, 327, 338, 344, 346, 368, 396, 420, 421, 424, 426, 437, 454, 458, 462, 463, 465, 466, 467, 468, 469, 472, 473, 474, 476, 477, 479, 480, 484, 486, 487], "can_cast": [3, 8], "cannot": [58, 172, 195, 196, 287, 320, 475], "canon": [466, 472, 475], "capabl": [41, 477, 487], "care": 487, "carrai": 287, "cartesian": 188, "case": [14, 19, 21, 31, 32, 34, 41, 54, 61, 68, 69, 76, 77, 78, 80, 99, 127, 138, 171, 183, 188, 197, 198, 203, 204, 205, 206, 293, 310, 312, 336, 337, 338, 342, 343, 344, 346, 349, 372, 375, 376, 377, 378, 379, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 396, 410, 418, 421, 424, 428, 462, 470, 480, 483, 486], "cast": [12, 13, 22, 23, 24, 25, 26, 27, 28, 44, 45, 46, 52, 53, 58, 59, 60, 63, 64, 65, 68, 69, 70, 71, 77, 79, 83, 87, 88, 89, 91, 94, 117, 118, 119, 120, 121, 122, 123, 126, 128, 129, 135, 139, 140, 144, 145, 146, 154, 155, 156, 157, 158, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 184, 185, 186, 187, 189, 190, 191, 193, 194, 197, 198, 200, 201, 204, 206, 269, 283, 329, 330, 332, 335, 340, 341, 342, 347, 348, 393, 394, 397, 398, 401, 406, 407, 408, 409, 413, 414, 417, 418, 422, 423, 424, 435, 436, 440, 441, 472], "castingkind": [12, 13, 22, 23, 24, 25, 26, 27, 28, 44, 45, 46, 52, 53, 58, 59, 60, 63, 64, 65, 70, 71, 79, 83, 87, 88, 89, 91, 94, 117, 118, 119, 120, 121, 122, 123, 126, 128, 129, 135, 140, 144, 145, 146, 154, 155, 156, 157, 158, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 184, 185, 189, 190, 191, 193, 329, 330, 332, 340, 341, 347, 348, 393, 394, 397, 398, 406, 407, 408, 409, 413, 414, 417, 422, 423, 435, 436], "cat": 475, "cauchi": 381, "caus": [280, 474, 478, 486], "cbrt": [0, 3, 8], "cdot": [472, 487], "cdoubl": [3, 8], "ceil": [0, 3, 8, 21], "cell": 474, "center": [61, 98, 387, 468, 471, 473, 487], "centr": 367, "central": [127, 365, 366, 367], "centroid": 471, "centroid_dot": 471, "centroid_mask": 471, "certain": [183, 315, 458], "certif": 464, "certifi": 462, "cfd": 476, "cg": [465, 487], "chain": 166, "challeng": [474, 487], "chanc": 462, "chang": [63, 83, 171, 184, 197, 198, 269, 287, 310, 324, 339, 344, 345, 391, 396, 456, 462, 469, 472, 476, 482, 485, 486, 487, 488], "channel": [82, 134, 402, 443, 474, 477], "charact": [3, 8, 483], "characterist": 367, "charg": 478, "check": [69, 78, 143, 150, 159, 197, 198, 462, 469, 471, 472, 475, 477, 486, 487], "chi": [352, 355, 365, 378], "chisquar": [0, 3, 8], "choic": [3, 8, 54, 271, 320], "choicelist": 404, "choleski": [0, 3, 8, 465, 470, 484], "cholesky_tim": 467, "choos": [0, 3, 8, 27, 61, 84, 444, 475, 487], "chosen": [132, 444], "chuang": 474, "circl": 387, "circular": 387, "circumst": 287, "claim": [388, 478], "class": [1, 2, 4, 6, 14, 16, 17, 19, 34, 37, 93, 136, 138, 186, 199, 202, 204, 269, 327, 333, 342, 377, 379, 418, 428, 447], "classic": [83, 368], "claus": [478, 486], "clean": 474, "clear": 287, "clearli": 487, "clip": [0, 3, 8, 54, 343, 420], "clipped_arrai": 55, "clongdoubl": [3, 8, 293], "close": [47, 171, 269, 375, 462, 475], "closest": 320, "closest_observ": [203, 205, 338, 346], "cluster": [470, 475, 476, 485], "cmap": [469, 487], "cnd": 466, "cnd_d1": 466, "cnd_d2": 466, "co": [0, 3, 8, 468], "coastal": 474, "code": [32, 48, 188, 410, 458, 464, 465, 474, 476, 478, 482, 485, 486], "codebas": 484, "coeffici": [169, 466], "coercion": 112, "coin": 357, "collaps": [288, 289], "collect": [76, 280, 487], "color": [465, 468, 471], "colorama": 465, "column": [8, 34, 56, 67, 93, 111, 115, 116, 133, 134, 136, 160, 161, 166, 168, 289, 315, 324, 391, 428, 430, 433, 439, 483, 487], "column_stack": [0, 3, 8], "com": [462, 469, 475, 478, 480, 487, 488], "combin": [90, 97, 102, 107, 110, 127, 465, 481, 487], "combinatori": 84, "come": [437, 487], "comm": 474, "comm_world": 474, "comma": [83, 465], "comman": 475, "command": [465, 475, 477, 479, 483, 487], "comment": 462, "commit": [462, 474], "common": [13, 27, 44, 45, 46, 54, 63, 79, 83, 87, 112, 117, 119, 120, 121, 122, 126, 128, 129, 135, 154, 155, 156, 157, 158, 177, 178, 179, 181, 182, 185, 189, 190, 193, 330, 332, 341, 354, 389, 394, 397, 417, 435, 486, 487], "common_typ": [3, 8], "commonli": [367, 475, 486], "commun": [462, 474, 475, 486, 487], "compact": 470, "compactli": 468, "compar": [15, 16, 17, 35, 141, 199, 202, 468, 487], "comparison": [7, 447, 456], "compat": [76, 269, 321, 322, 391, 396, 428, 487], "compil": [169, 310, 463], "complet": [84, 203, 205, 338, 346, 463, 474, 476, 483, 487], "complex": [18, 35, 43, 59, 60, 68, 69, 78, 80, 95, 96, 97, 100, 101, 102, 104, 105, 108, 110, 137, 139, 142, 143, 149, 150, 160, 162, 194, 197, 198, 203, 205, 274, 275, 338, 346, 392, 401, 411, 441, 454, 456, 474, 487], "complex128": [3, 8], "complex256": [3, 8], "complex64": [3, 8], "complexflo": [3, 8], "compli": 462, "complianc": [466, 467, 473], "complic": 474, "compon": [6, 35, 48, 98, 137, 194, 392, 424, 486, 487], "compos": 475, "compound": 466, "compress": [0, 3, 8, 320], "compressed_arrai": 57, "compuat": 483, "comput": [16, 17, 18, 41, 44, 45, 46, 61, 68, 69, 83, 94, 95, 96, 97, 99, 100, 101, 102, 104, 105, 106, 107, 108, 109, 110, 127, 132, 138, 140, 160, 161, 162, 163, 165, 166, 167, 168, 169, 170, 179, 180, 181, 182, 186, 187, 197, 198, 199, 200, 201, 202, 203, 204, 205, 335, 338, 346, 422, 423, 424, 440, 458, 466, 467, 468, 469, 471, 472, 474, 475, 476, 480, 481, 486], "computat": 487, "computation": 164, "compute_uv": 170, "concat": [3, 8], "concaten": [0, 3, 8, 48, 82, 134, 402, 443], "concern": 487, "conclud": [462, 474], "conclus": 474, "cond": [8, 486, 487], "conda": 463, "conda_override_cuda": 477, "condit": [12, 13, 22, 23, 24, 25, 26, 27, 28, 44, 45, 46, 52, 53, 57, 59, 60, 63, 64, 65, 70, 71, 79, 87, 88, 89, 91, 92, 94, 117, 118, 119, 120, 121, 122, 123, 126, 128, 129, 135, 140, 144, 145, 146, 154, 155, 156, 157, 158, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 185, 189, 190, 191, 193, 269, 273, 329, 330, 332, 339, 340, 341, 345, 347, 348, 385, 393, 394, 397, 398, 404, 406, 407, 408, 409, 413, 414, 417, 422, 423, 435, 436, 444, 466, 467, 468, 473, 474, 478, 481, 486, 487], "condition": 486, "condlist": 404, "conduct": 487, "configur": [458, 463, 464, 475, 486], "configurt": 475, "conj": [0, 3, 8], "conjug": [0, 3, 8, 59, 80, 105, 139, 159, 274, 441, 467], "connect": [478, 487], "consecut": 77, "consequ": [18, 441, 475], "consequenti": 478, "conserv": 188, "consid": [15, 35, 67, 68, 83, 84, 141, 161, 163, 368, 468, 472, 487], "consider": 487, "consist": [14, 21, 61, 77, 171, 421, 462, 474], "const": [486, 487], "constant": [127, 290], "constraint": [41, 487], "construct": [7, 48, 54, 73, 114, 115, 116, 152, 271, 319, 353, 425], "constructor": [2, 454], "consum": [164, 299], "contact": 475, "contain": [2, 29, 30, 41, 43, 54, 55, 57, 67, 76, 77, 100, 113, 127, 132, 138, 186, 187, 195, 196, 199, 200, 201, 202, 203, 205, 206, 258, 283, 307, 319, 320, 331, 338, 346, 391, 401, 424, 430, 431, 433, 434, 437, 440, 454, 487], "content": [43, 187, 201, 203, 205, 287, 310, 319, 320, 338, 346, 456], "context": [466, 474], "contigu": [49, 51, 188, 269, 287, 289, 315, 319, 391, 396], "continu": [354, 355, 376, 377, 379, 385, 387, 466], "contour": 487, "contract": [83, 84, 463, 478], "contribut": [8, 41, 132, 464, 487], "contributor": [462, 478], "control": [58, 83, 184, 269, 319, 465, 488], "conveni": 320, "convent": [18, 83, 102, 184, 188], "converg": [160, 161, 162, 163, 170, 471, 472, 486, 487], "convers": [41, 83, 184, 186, 199, 200, 202, 206, 269, 327, 328, 440], "convert": [14, 19, 37, 38, 39, 40, 70, 71, 187, 201, 203, 205, 285, 320, 321, 324, 327, 338, 346, 347, 348, 439, 468, 480, 487], "convolut": [61, 469, 487], "convolv": [0, 8, 469, 487], "convolve_nd": [469, 487], "convolvemethodtyp": 61, "convolvemod": 61, "coordin": [127, 188, 439, 471], "copi": [0, 3, 8, 20, 34, 37, 38, 39, 40, 48, 49, 57, 72, 73, 76, 188, 194, 215, 216, 269, 287, 288, 289, 293, 310, 319, 321, 337, 391, 396, 400, 410, 411, 429, 432, 462, 466, 467, 473, 475, 478, 485, 487], "copyright": [462, 466, 467, 473, 478], "copysign": [0, 3, 8], "copyto": [3, 8, 339], "core": [2, 458, 465, 466, 475, 487, 488], "corner": [101, 102, 487], "corpor": [466, 467, 473], "corrcoef": [3, 8], "correct": [20, 58, 416, 474], "correctli": [14, 16, 17, 19, 27, 29, 30, 41, 167, 186, 187, 195, 196, 199, 200, 201, 202, 203, 204, 205, 206, 338, 342, 346, 418, 440, 487], "correl": [8, 456], "correspond": [8, 54, 58, 76, 96, 97, 101, 102, 105, 107, 110, 127, 138, 147, 148, 152, 160, 161, 183, 195, 196, 203, 205, 308, 336, 338, 346, 399, 403, 404, 405, 468, 469, 477, 480, 486, 487], "correspondingli": [412, 475], "cosh": [0, 3, 8], "cosin": [22, 23, 47, 64, 65, 130, 131], "cost": [84, 474], "costli": 84, "could": 486, "count": [14, 19, 41, 43, 66, 114, 127, 132, 206, 290, 342, 418, 438, 447, 456, 471], "count_nonzero": [0, 3, 8], "counterclockwis": [18, 400], "cours": 476, "cov": [0, 3, 8], "covari": 67, "cover": [3, 8, 388, 462], "coverag": [458, 482, 484, 485], "cp": 474, "cpu": [1, 2, 3, 8, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 98, 103, 111, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 208, 209, 210, 214, 215, 216, 217, 218, 220, 221, 223, 224, 225, 226, 227, 228, 229, 230, 233, 234, 235, 236, 237, 238, 239, 240, 242, 243, 244, 245, 246, 247, 248, 250, 251, 252, 254, 255, 256, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 271, 272, 273, 274, 275, 276, 281, 282, 284, 285, 286, 288, 289, 290, 293, 296, 297, 298, 301, 302, 303, 304, 305, 307, 308, 310, 313, 314, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 458, 463, 465, 472, 475, 476, 484, 486, 488], "cputsc": 479, "creat": [12, 13, 22, 23, 24, 25, 26, 27, 28, 34, 44, 45, 46, 52, 53, 54, 59, 60, 63, 64, 65, 70, 71, 79, 84, 87, 88, 89, 91, 94, 117, 118, 119, 120, 121, 122, 123, 126, 128, 129, 135, 140, 144, 145, 146, 154, 155, 156, 157, 158, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 185, 189, 190, 191, 193, 194, 277, 283, 287, 329, 330, 332, 340, 341, 344, 347, 348, 371, 393, 394, 397, 398, 401, 406, 407, 408, 409, 413, 414, 417, 419, 422, 423, 435, 436, 462, 468, 473, 474, 477, 486, 487], "create_subarrai": 474, "creation": [84, 287, 428, 447, 454, 456], "critic": [474, 487], "crop": [95, 96, 97, 99, 100, 101, 102, 104, 105, 107, 108, 110], "cross": [3, 8, 152], "crucial": 487, "csingl": [3, 8], "csv": [458, 475, 483], "ct": 95, "cube": 52, "cubic": 84, "cubla": 458, "cuda": [458, 463, 465, 474, 477, 487], "cumbersom": 487, "cumprod": [0, 3, 8, 69, 197, 198, 480], "cumsum": [0, 3, 8], "cumul": [68, 69, 197, 198, 466, 487], "cumulative_prod": [3, 8], "cumulative_sum": [3, 8], "cunumer": 475, "cupi": 474, "cupynumer": [0, 3, 7, 447, 452, 456, 458, 463, 465, 466, 467, 469, 471, 472, 473, 474, 477, 479, 480, 481, 483, 484, 485, 488], "cupynumeric_doctor": [458, 486], "cupynumeric_doctor_filenam": 458, "cupynumeric_doctor_format": 458, "cupynumeric_doctor_traceback": 458, "cupynumeric_fallback_stacktrac": 458, "cupynumeric_fast_math": 458, "cupynumeric_force_thunk": 458, "cupynumeric_matmul_cache_s": 458, "cupynumeric_min_cpu_chunk": 458, "cupynumeric_min_gpu_chunk": 458, "cupynumeric_min_omp_chunk": 458, "cupynumeric_numpy_compat": [195, 196, 199, 202, 458], "cupynumeric_preload_cudalib": 458, "cupynumeric_report_coverag": [458, 483, 484], "cupynumeric_report_dump_callstack": [458, 483], "cupynumeric_report_dump_csv": [458, 483], "cupynumeric_root": 463, "cupynumeric_warn": 458, "curand": 380, "curiou": 468, "current": [6, 31, 32, 61, 159, 168, 170, 172, 211, 287, 327, 337, 344, 395, 410, 428, 437, 458, 466, 475, 479, 480, 483, 486, 487, 488], "curv": [367, 468], "cusolv": 458, "cusolvermp": 169, "custom": [454, 463, 474], "cycl": 152, "d": [2, 40, 41, 43, 56, 57, 61, 67, 68, 69, 73, 75, 76, 80, 82, 93, 106, 109, 111, 115, 116, 134, 138, 139, 152, 166, 167, 184, 188, 197, 198, 199, 206, 276, 288, 289, 308, 324, 336, 339, 391, 396, 402, 403, 412, 418, 425, 426, 437, 438, 441, 443, 462, 463, 466, 467, 487], "d0": [371, 373], "d1": [371, 373, 466], "d2": 466, "d_1": 487, "d_2": 487, "damag": 478, "data": [16, 17, 21, 33, 34, 37, 41, 58, 62, 67, 82, 83, 85, 86, 93, 95, 96, 97, 99, 100, 101, 102, 104, 105, 106, 107, 108, 109, 110, 112, 124, 125, 132, 134, 136, 138, 150, 160, 161, 162, 163, 171, 172, 183, 184, 186, 187, 194, 200, 201, 203, 204, 205, 206, 211, 258, 269, 277, 283, 287, 293, 295, 307, 310, 319, 320, 321, 324, 327, 333, 334, 338, 339, 342, 343, 344, 346, 391, 396, 401, 402, 415, 418, 421, 426, 428, 429, 440, 443, 445, 446, 447, 456, 471, 472, 474, 478, 481, 486, 487], "data_magnitude_squar": 471, "dataset": [132, 487], "datatyp": [112, 474, 485], "date": 487, "datetim": [466, 467, 473], "datetime64": [3, 8], "datetime_as_str": [3, 8], "ddof": [67, 326, 440], "de": 367, "deadlock": 474, "deal": [478, 487], "dealloc": 287, "deb": 487, "debian": 478, "debug": [465, 474], "decai": 360, "decid": 458, "decim": 401, "decompos": [123, 467, 474], "decomposit": [159, 170, 456, 470, 474], "decreas": [78, 466, 472, 475], "decreasingli": [101, 102], "dedic": 475, "deep": [48, 216, 321, 474], "deepcopi": 216, "def": [466, 467, 469, 471, 472, 473, 474, 486, 487], "default": [2, 12, 13, 14, 16, 17, 18, 19, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 34, 37, 41, 44, 45, 46, 52, 53, 54, 57, 58, 59, 60, 61, 63, 64, 65, 66, 67, 68, 69, 70, 71, 73, 76, 77, 78, 79, 83, 84, 85, 87, 88, 89, 91, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 114, 117, 118, 119, 120, 121, 122, 123, 124, 126, 127, 128, 129, 132, 135, 136, 138, 140, 144, 145, 146, 154, 155, 156, 157, 158, 161, 163, 164, 167, 170, 171, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 184, 185, 186, 187, 188, 189, 190, 191, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 258, 269, 289, 290, 319, 320, 329, 330, 332, 333, 336, 337, 338, 340, 341, 342, 346, 347, 348, 349, 350, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 372, 375, 376, 377, 378, 379, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 393, 394, 395, 397, 398, 399, 400, 401, 404, 406, 407, 408, 409, 410, 412, 413, 414, 417, 418, 420, 422, 423, 426, 427, 428, 429, 430, 433, 435, 436, 437, 438, 440, 442, 445, 458, 465, 469, 471, 480, 487, 488], "default_rng": [0, 2, 3, 8, 471], "defer": [4, 458, 466, 467, 473, 475, 480], "defin": [54, 72, 86, 125, 132, 167, 194, 203, 205, 293, 334, 338, 346, 385, 400, 428, 446, 462, 463, 466, 467, 469, 471, 472, 473, 486, 487], "definit": [61, 100, 102, 159, 467, 487], "deg": [18, 164], "deg2rad": [0, 3, 8, 348], "degre": [3, 8, 18, 70, 347, 348, 352, 355, 365, 366, 384, 400, 440, 487], "delai": [486, 487], "delet": [0, 3, 8], "delta": [440, 471], "demand": 474, "democrat": 487, "demonstr": [484, 487], "denomin": [355, 366], "denot": 8, "dens": [138, 468], "densiti": [132, 354, 367], "dep": 463, "depend": [43, 73, 167, 169, 171, 184, 204, 375, 404, 444, 464, 475, 486, 487], "depict": 487, "deprec": 375, "depth": [48, 81, 82, 321], "deriv": [127, 362, 367, 466, 468, 469, 478, 486, 487], "derivative_exact": 468, "descend": 170, "describ": [167, 310, 354, 367, 468, 475, 486], "descript": [100, 102, 132, 269, 465], "descriptor": 327, "design": [47, 356, 383, 485, 487], "desir": [34, 51, 77, 85, 124, 186, 199, 200, 202, 206, 333, 372, 425, 440, 445, 477], "despit": 322, "dest": 474, "destin": [58, 192, 344, 416], "det": [3, 8], "detail": [16, 17, 68, 69, 73, 75, 95, 100, 105, 106, 108, 109, 172, 188, 197, 198, 199, 202, 204, 206, 266, 277, 315, 342, 418, 430, 431, 432, 433, 434, 437, 454, 462, 465, 474, 475, 477, 486, 487], "detect": [470, 477], "detector": 469, "determin": [34, 61, 68, 69, 76, 112, 169, 197, 198, 204, 310, 404, 426, 439, 469, 471, 472, 474, 487], "determinist": [471, 480], "develop": [463, 474, 475, 476, 478, 487], "developercertif": 462, "deviat": [362, 367, 486], "devic": [474, 487], "devin": 478, "df": [352, 365, 384], "dfden": [355, 366], "dfnum": [355, 366], "dft": [95, 100, 108], "dgx": 476, "diag": [0, 3, 8, 468, 480], "diag_indic": [0, 3, 8, 75], "diag_indices_from": [0, 3, 8], "diagflat": [3, 8], "diagnos": 486, "diagon": [0, 3, 8, 73, 74, 75, 93, 111, 136, 159, 161, 163, 323, 426, 428, 429, 430, 431, 432, 433, 434, 468], "diagram": [463, 487], "dictionari": 287, "did": 472, "diff": [0, 3, 8], "differ": [1, 15, 29, 30, 36, 68, 69, 77, 95, 100, 103, 105, 106, 108, 109, 115, 116, 117, 127, 167, 184, 188, 197, 198, 211, 283, 320, 344, 345, 360, 400, 421, 441, 456, 462, 463, 465, 470, 472, 473, 474, 481, 485, 486, 487], "differenc": 77, "differenti": [471, 487], "difficult": [474, 487], "diffus": 487, "digit": [0, 3, 8], "dim": 287, "dimens": [6, 14, 16, 17, 19, 29, 30, 34, 38, 39, 40, 41, 48, 54, 56, 57, 58, 61, 74, 76, 77, 81, 82, 90, 111, 127, 133, 134, 138, 139, 147, 148, 152, 160, 161, 162, 163, 167, 168, 170, 184, 186, 187, 188, 195, 196, 199, 200, 201, 202, 203, 204, 205, 206, 287, 288, 289, 300, 311, 312, 315, 324, 328, 331, 336, 338, 342, 344, 346, 371, 373, 396, 399, 400, 402, 405, 412, 415, 416, 418, 421, 424, 425, 426, 427, 430, 431, 433, 434, 437, 438, 439, 440, 442, 443, 456, 470, 471, 474, 480], "dimension": [7, 38, 43, 48, 61, 67, 72, 75, 78, 83, 95, 96, 97, 100, 101, 102, 105, 107, 108, 109, 110, 111, 127, 164, 188, 287, 328, 335, 415, 425, 447, 469, 471, 473, 480, 486, 487], "dimenson": 188, "direct": [61, 77, 95, 96, 97, 99, 100, 101, 102, 104, 105, 106, 107, 108, 109, 110, 115, 116, 287, 400, 469, 478, 487], "directli": [61, 77, 320, 385, 462, 477, 479, 483], "directori": [463, 487], "dirichlet": [3, 8, 349], "disabl": [83, 420, 487], "disclaim": 478, "discontinu": [203, 205, 338, 346], "discourag": 481, "discret": [61, 77, 95, 96, 97, 100, 101, 102, 105, 107, 108, 110, 372, 375, 390, 447, 456, 468], "discuss": [462, 475], "dispers": 387, "displai": [465, 475, 487], "distanc": [21, 127, 388, 471], "distance_sum": 471, "distribu": 487, "distribut": [2, 280, 349, 350, 352, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 375, 376, 377, 378, 379, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 440, 456, 458, 462, 466, 467, 473, 474, 475, 476, 478, 480, 487], "disturb": 367, "dive": 474, "divid": [3, 8, 36, 82, 134, 402, 412, 443, 471, 474], "divis": [79, 119, 122, 190, 394, 412, 435], "divisor": [126, 440], "divmod": [3, 8, 217], "dn": [371, 373], "do": [61, 78, 183, 187, 201, 293, 320, 463, 471, 478, 480, 481, 486, 487, 488], "doc": [12, 13, 22, 23, 24, 25, 26, 27, 28, 44, 45, 46, 52, 53, 55, 59, 60, 63, 64, 65, 70, 71, 79, 87, 88, 89, 91, 94, 117, 118, 119, 120, 121, 122, 123, 126, 128, 129, 135, 140, 144, 145, 146, 154, 155, 156, 157, 158, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 185, 189, 190, 191, 193, 329, 330, 332, 340, 341, 347, 348, 393, 394, 397, 398, 406, 407, 408, 409, 413, 414, 417, 422, 423, 435, 436, 469, 475, 488], "docstr": 486, "doctor": [447, 486], "doctor_filenam": 447, "doctor_format": 447, "doctorformat": 458, "document": [36, 73, 81, 133, 263, 264, 265, 266, 267, 268, 271, 272, 273, 274, 275, 281, 282, 296, 297, 298, 301, 302, 303, 304, 305, 307, 313, 314, 316, 317, 318, 323, 325, 326, 432, 442, 462, 475, 477, 478, 486, 487], "doe": [14, 16, 17, 19, 21, 36, 72, 78, 111, 160, 161, 162, 163, 168, 170, 172, 186, 194, 197, 198, 199, 202, 204, 269, 287, 293, 299, 324, 327, 342, 353, 412, 418, 420, 441, 462, 469, 480, 483, 486, 487], "doesn": [78, 114, 115, 116, 343, 480, 486], "dollar": 487, "domain": [42, 463, 468, 474], "don": [287, 465, 471, 486, 487], "done": [83, 161, 163, 184, 269, 290, 310, 336, 438, 486], "dot": [0, 3, 8, 166, 184, 424, 441, 467, 471, 472, 483, 487], "dot_product": 487, "doubl": [3, 8, 41, 360, 474], "down": [116, 486, 487], "download": [463, 477, 487], "dr": 474, "draft": 462, "draw": [349, 350, 352, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 378, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390], "drawn": [2, 349, 350, 352, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 372, 375, 376, 377, 378, 379, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 404], "driver": [465, 479, 487], "drop": [467, 475, 476, 487], "dry": 465, "dsplit": [0, 3, 8, 82], "dstack": [0, 3, 8], "dt": [349, 466], "dtype": [3, 4, 8, 12, 13, 14, 16, 17, 18, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 34, 35, 37, 41, 44, 45, 46, 52, 53, 54, 58, 59, 60, 63, 64, 65, 67, 68, 69, 70, 71, 77, 78, 79, 80, 83, 85, 86, 87, 88, 89, 91, 93, 94, 112, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 128, 129, 135, 136, 138, 139, 140, 144, 145, 146, 154, 155, 156, 157, 158, 160, 162, 166, 171, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 184, 185, 186, 189, 190, 191, 193, 194, 195, 196, 197, 198, 199, 200, 204, 206, 211, 258, 269, 278, 279, 291, 297, 303, 309, 315, 316, 323, 326, 327, 329, 330, 332, 333, 334, 335, 337, 340, 341, 342, 347, 348, 372, 377, 379, 393, 394, 397, 398, 406, 407, 408, 409, 410, 413, 414, 417, 418, 420, 422, 423, 424, 426, 428, 435, 436, 440, 441, 445, 446, 467, 471, 484], "dtypelik": [4, 58, 93, 124, 125, 136, 138, 171, 309, 327, 333, 334, 377, 379, 428, 446], "due": [386, 480], "dump": [0, 8, 458], "dump_data": 481, "duplic": [344, 480, 487], "dure": [458, 463, 475, 487], "dx": 127, "dy": 127, "dynam": 474, "dz": 127, "e": [14, 19, 43, 54, 76, 78, 80, 96, 99, 100, 101, 102, 105, 107, 127, 138, 139, 169, 184, 312, 320, 327, 349, 350, 352, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 372, 375, 376, 377, 378, 379, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 424, 426, 441, 458, 462, 463, 466, 480, 484, 486, 487, 488], "each": [2, 38, 39, 40, 41, 43, 49, 50, 54, 57, 67, 74, 78, 84, 96, 97, 101, 102, 107, 110, 115, 116, 127, 132, 152, 160, 161, 162, 163, 164, 192, 194, 315, 320, 331, 344, 345, 350, 352, 359, 364, 367, 395, 399, 416, 421, 425, 430, 431, 433, 434, 437, 438, 439, 463, 468, 469, 471, 472, 474, 475, 486, 487], "eager": [4, 458, 465, 475, 487], "eagerli": 472, "earli": 487, "earlier": 471, "eas": [374, 487], "easi": [462, 487], "easier": [277, 420, 487], "easiest": [462, 463], "east": [473, 487], "economist": 487, "ed": [354, 367, 469], "edg": [55, 78, 132, 470], "edge_ord": 127, "edgecolor": 471, "ediff1d": [3, 8], "edit": [463, 487], "effect": [84, 188, 324, 380, 438, 473, 487], "effici": [95, 108, 466, 474, 487], "effort": [462, 474], "effortlessli": 474, "eig": [0, 3, 8], "eigenvalu": [160, 161, 162, 163], "eigenvector": [160, 161], "eigh": [0, 3, 8], "eight": [167, 438], "eigval": [0, 3, 8], "eigvalsh": [0, 3, 8], "einstein": 83, "einsum": [0, 8, 84, 465], "einsum_path": [0, 3, 8, 83], "either": [35, 41, 61, 80, 127, 167, 184, 204, 211, 308, 403, 438, 466, 467, 468, 473, 475, 487], "elaps": [465, 466, 467, 473, 477, 481, 487], "elapsed_millisec": 481, "elapsed_tim": 487, "element": [12, 13, 14, 15, 16, 17, 19, 21, 22, 23, 24, 25, 26, 27, 28, 33, 35, 41, 43, 44, 45, 46, 48, 49, 51, 52, 53, 54, 55, 59, 60, 61, 63, 64, 65, 67, 68, 69, 72, 76, 77, 79, 87, 88, 91, 92, 93, 94, 96, 101, 107, 110, 113, 114, 115, 116, 117, 118, 120, 121, 122, 123, 128, 129, 132, 136, 137, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 151, 155, 157, 158, 159, 165, 173, 174, 175, 179, 180, 181, 182, 184, 185, 186, 187, 188, 189, 190, 191, 193, 197, 198, 199, 200, 201, 202, 204, 206, 258, 263, 264, 269, 274, 275, 283, 286, 287, 289, 290, 293, 295, 297, 299, 301, 303, 304, 308, 312, 315, 316, 318, 321, 325, 326, 329, 330, 331, 332, 336, 339, 340, 341, 342, 343, 345, 391, 392, 393, 394, 395, 396, 398, 399, 400, 403, 404, 405, 406, 407, 408, 409, 413, 414, 417, 418, 420, 422, 423, 424, 426, 429, 432, 435, 436, 437, 438, 439, 440, 444, 454, 456, 468, 471, 487], "elementwis": 456, "elimin": 474, "els": [472, 486, 487], "elsewher": [12, 13, 22, 23, 24, 25, 26, 27, 28, 44, 45, 46, 52, 53, 59, 60, 63, 64, 65, 70, 71, 79, 87, 88, 89, 91, 93, 94, 117, 118, 119, 120, 121, 122, 123, 126, 128, 129, 135, 140, 144, 145, 146, 154, 155, 156, 157, 158, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 185, 189, 190, 191, 193, 329, 330, 332, 340, 341, 347, 348, 354, 393, 394, 397, 398, 406, 407, 408, 409, 413, 414, 417, 422, 423, 428, 435, 436, 444], "email": 462, "emerg": 487, "emit": 458, "emploi": 462, "empti": [0, 3, 8, 16, 17, 42, 47, 48, 130, 131, 153, 195, 196, 197, 198, 199, 202, 204, 206, 320, 339, 412], "empty_lik": [0, 3, 8], "en": [354, 462], "enabl": [458, 463, 465, 474, 475, 486, 487], "encapsul": 6, "encount": [197, 198, 199, 202, 404, 462, 475, 486, 487], "encumbr": 462, "end": [20, 21, 42, 76, 78, 84, 171, 336, 438, 462, 468, 472, 473, 481, 487], "end_tim": 487, "endian": 320, "endors": 478, "endpoint": [171, 468], "energi": 487, "enhanc": [462, 474, 487], "enough": [164, 463, 481, 486], "ensur": [428, 462, 474, 481, 486, 487], "enter": 465, "entir": [280, 438, 487], "entri": [57, 72, 85, 92, 111, 114, 115, 116, 287, 290, 320, 343, 344, 412, 415], "entropi": [1, 353], "env": [458, 463], "environ": [195, 196, 199, 202, 458, 463, 474, 475, 477, 479, 483, 486, 487], "epyc": 487, "eq": 466, "eqn": 468, "eqnarrai": 487, "equal": [0, 3, 8, 12, 13, 15, 22, 23, 24, 25, 26, 27, 28, 35, 36, 41, 42, 43, 44, 45, 46, 48, 52, 53, 59, 60, 63, 64, 65, 70, 71, 76, 79, 81, 88, 89, 91, 93, 94, 117, 118, 119, 120, 121, 122, 123, 126, 127, 128, 129, 132, 135, 140, 141, 143, 144, 145, 146, 150, 154, 155, 156, 157, 158, 171, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 185, 189, 190, 191, 193, 312, 329, 330, 332, 340, 341, 347, 348, 350, 356, 359, 364, 378, 386, 388, 393, 394, 397, 398, 406, 407, 408, 409, 412, 413, 414, 417, 422, 423, 428, 430, 433, 435, 436], "equal_nan": [15, 35, 141], "equat": [15, 141, 169, 386, 456, 468, 472, 474, 487], "equiv": [58, 83, 184, 269], "equival": [21, 41, 57, 78, 80, 81, 82, 84, 113, 119, 133, 134, 141, 152, 215, 263, 264, 265, 266, 267, 268, 271, 272, 273, 274, 275, 281, 282, 296, 297, 298, 301, 302, 303, 304, 305, 307, 311, 313, 314, 316, 317, 318, 320, 323, 324, 325, 326, 327, 328, 402, 420, 442, 443, 486], "erf": 466, "error": [187, 201, 343, 412, 415, 420, 468, 471, 474, 480, 487], "errstat": [3, 8], "especi": 486, "essenti": [486, 487], "estim": [61, 67, 203, 205, 338, 346, 487], "etc": [34, 96, 97, 101, 102, 107, 110, 277, 287, 458, 474, 480, 486, 488], "european": 466, "evalu": [14, 19, 57, 83, 84, 143, 150, 166, 188, 263, 264, 404, 480, 486], "even": [67, 98, 100, 103, 108, 143, 150, 160, 162, 287, 462, 465, 478], "evenli": [21, 171, 401], "event": [369, 478], "everi": [61, 107, 462, 466, 471, 486], "every_nit": 486, "everyon": 462, "evid": 487, "evolv": 462, "exact": [80, 139, 169, 424, 441, 468], "exactli": [322, 462, 467, 472, 483, 487], "examin": 67, "exampl": [40, 55, 68, 69, 77, 78, 197, 198, 315, 324, 357, 367, 412, 416, 462, 463, 465, 468, 469, 471, 472, 474, 475, 476, 477, 479, 481, 484, 485, 486, 488], "exce": [412, 438, 458], "exceed": 474, "except": [14, 16, 17, 19, 21, 34, 42, 54, 58, 77, 80, 93, 107, 134, 186, 199, 202, 204, 287, 293, 310, 342, 391, 395, 418, 421, 424, 466, 467, 473, 478], "exchang": 474, "exclud": [20, 21, 171, 386, 481], "exclus": 372, "execut": [458, 463, 465, 466, 467, 472, 473, 481, 483, 484, 485, 486, 487], "exemplari": 478, "exercis": [462, 487], "exhibit": 319, "exist": [58, 90, 172, 456, 463, 477, 484, 487], "exit": 465, "exp": [0, 3, 8, 91, 164, 354, 466], "exp2": [0, 3, 8], "exp_rt": 466, "expand": [77, 90], "expand_dim": [0, 3, 8], "expans": 466, "expect": [14, 16, 17, 19, 68, 69, 105, 139, 183, 186, 187, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 335, 338, 342, 346, 369, 401, 418, 424, 440, 441, 462, 475], "expens": 320, "experi": [357, 487], "expertis": 474, "expir": [466, 487], "explain": [97, 102, 107, 110], "explan": [69, 197, 198, 315, 462], "explicit": [83, 164, 474, 486, 487], "explicitli": [132, 138, 172, 462, 468, 475, 487], "explor": 84, "expm1": [0, 3, 8], "expon": [123, 165, 370, 456], "exponenti": [0, 3, 8, 84, 88, 164, 177, 178, 360, 382], "exponential_distribut": 354, "expos": [2, 34, 287, 310], "expr": [83, 84], "express": [83, 84, 188, 466, 467, 468, 473, 478, 480], "extend": [468, 474, 480], "extra": 487, "extract": [0, 3, 8, 57, 73, 339, 420], "extrema": 456, "ey": [0, 3, 8, 467, 484], "f": [0, 3, 8, 34, 115, 127, 167, 203, 205, 269, 287, 289, 319, 338, 346, 349, 354, 357, 366, 391, 396, 439, 466, 467, 468, 472, 473, 487], "f_": [468, 472], "f_contigu": 287, "f_interior": 468, "fa": 287, "fab": [0, 3, 8], "facilit": 484, "factor": [95, 96, 97, 99, 100, 101, 102, 104, 105, 106, 107, 108, 109, 110, 159, 168, 467, 487], "fail": [159, 168, 475, 486], "failur": [357, 364, 465], "fall": [31, 78, 151, 337, 458, 466, 472, 475, 483], "fallback": 480, "fallback_stacktrac": 447, "fals": [1, 12, 13, 14, 15, 16, 17, 18, 19, 22, 23, 24, 25, 26, 27, 28, 29, 30, 34, 35, 36, 41, 44, 45, 46, 49, 51, 52, 53, 57, 59, 60, 63, 64, 65, 67, 70, 71, 77, 78, 79, 83, 84, 87, 88, 89, 91, 94, 111, 117, 118, 119, 120, 121, 122, 123, 126, 128, 129, 132, 135, 138, 140, 141, 144, 145, 146, 147, 148, 150, 151, 154, 155, 156, 157, 158, 167, 170, 171, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 185, 186, 187, 188, 189, 190, 191, 193, 194, 195, 196, 199, 200, 201, 202, 203, 204, 205, 206, 263, 264, 269, 287, 296, 297, 298, 303, 316, 326, 329, 330, 332, 338, 340, 341, 342, 346, 347, 348, 393, 394, 397, 398, 404, 406, 407, 408, 409, 413, 414, 417, 418, 422, 423, 435, 436, 437, 440, 458, 468, 472], "familiar": [476, 487], "fan": [203, 205, 338, 346], "fanci": 420, "farrai": 287, "fashion": 83, "fast": [95, 96, 97, 101, 102, 107, 108, 110], "fast_math": 447, "faster": [61, 78, 487], "fastest": [166, 391, 396], "fatter": 360, "fbmem": [465, 487], "featur": [462, 465, 487], "feedback": 462, "feel": 462, "fetch": 486, "few": [481, 486], "fewer": 475, "fft": [0, 3, 8, 61, 447, 456], "fft2": [0, 3, 8, 101], "fftfreq": [3, 8], "fftn": [0, 3, 8, 95, 102], "fftshift": [0, 3, 8, 103], "fid": 320, "fidel": 474, "field": [188, 293, 438], "fig": [469, 487], "figsiz": [469, 487], "file": [172, 284, 315, 320, 456, 458, 462, 463, 465, 466, 467, 473, 478, 483, 487], "filenam": [320, 458], "fileno": 320, "fill": [0, 2, 8, 111, 124, 125, 188, 194, 333, 368, 373, 428, 445], "fill_diagon": [0, 3, 8], "fill_valu": [124, 125], "final": [107, 110, 474, 476, 487], "find": [33, 308, 325, 403, 437, 456, 471, 472, 475, 477, 486, 487], "find_centroid": 471, "find_cupynumeric_cpp": 463, "finfo": [3, 8], "finish": [465, 466, 467, 473], "finit": [141, 144, 194, 470], "first": [14, 19, 41, 42, 47, 49, 54, 56, 58, 61, 76, 77, 80, 82, 84, 101, 102, 114, 117, 127, 132, 134, 166, 184, 187, 188, 201, 203, 205, 206, 290, 308, 320, 335, 338, 339, 341, 342, 343, 346, 367, 388, 391, 396, 399, 400, 402, 403, 404, 411, 416, 418, 419, 421, 424, 426, 437, 441, 442, 443, 462, 463, 468, 473, 486, 487], "first_cond": 486, "fisher": [355, 366, 487], "fit": [395, 478], "five": 475, "fix": [3, 8, 295, 312, 369, 466], "flag": [164, 310, 458, 463], "flat": [289, 293, 305, 345, 395, 439, 480], "flatit": [3, 8, 288], "flatnonzero": [0, 3, 8], "flatten": [0, 3, 8, 16, 17, 20, 29, 30, 31, 32, 57, 58, 66, 68, 69, 72, 111, 113, 132, 186, 187, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 288, 305, 335, 336, 337, 338, 343, 344, 346, 391, 395, 399, 410, 420, 421, 437, 438, 439, 440, 441], "flexibl": [3, 8, 83, 295], "flip": [0, 3, 8, 115, 116, 357, 400, 480, 486], "fliplr": [0, 3, 8, 400], "flipud": [0, 3, 8, 400], "float": [14, 15, 16, 17, 19, 21, 43, 55, 68, 69, 80, 83, 85, 117, 125, 132, 136, 137, 141, 153, 165, 167, 171, 184, 186, 187, 194, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 219, 296, 298, 303, 316, 330, 338, 342, 346, 349, 350, 352, 354, 355, 356, 357, 358, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 373, 374, 376, 377, 378, 379, 382, 383, 384, 385, 386, 387, 388, 389, 390, 392, 401, 403, 418, 424, 428, 440, 445, 454, 456, 458, 480], "float128": [3, 8, 480], "float16": [3, 8, 117], "float32": [3, 8, 68, 83, 117, 184, 269, 327, 484], "float64": [3, 4, 8, 18, 41, 67, 83, 85, 93, 117, 184, 186, 187, 200, 201, 203, 205, 269, 333, 338, 346, 377, 379, 440, 445, 467, 480], "float_pow": [0, 3, 8], "flood": 474, "floor": [0, 3, 8], "floor_divid": [0, 3, 8], "flop": 467, "flow": 474, "fluid": 474, "fmax": [3, 8, 199], "fmin": [3, 8], "fmod": [0, 3, 8], "fnc": 287, "focu": [474, 487], "follow": [15, 18, 34, 41, 54, 61, 78, 105, 112, 141, 161, 163, 167, 184, 188, 203, 205, 258, 338, 346, 458, 463, 468, 469, 471, 472, 474, 475, 477, 478, 479, 486, 487], "forc": [34, 83, 184, 269, 287, 458, 477], "force_thunk": [4, 447], "forcebuild": 1, "foremost": 487, "forg": [463, 477, 487], "fork": 462, "form": [37, 47, 56, 67, 76, 82, 83, 105, 130, 131, 134, 152, 153, 402, 443, 468, 478, 486, 487], "format": [320, 458, 464, 475, 487], "format_float_posit": [3, 8], "format_float_scientif": [3, 8], "former": [344, 421], "formula": [466, 487], "forset": 311, "fortran": [34, 269, 287, 289, 319, 391, 396, 439, 463], "fortun": 462, "forum": 475, "forumula": 487, "forward": [95, 96, 97, 99, 100, 101, 102, 104, 105, 106, 107, 108, 109, 110, 127, 374], "found": [43, 308, 315, 403, 474, 487], "foundat": [462, 475], "four": [310, 465, 487], "fourier": [61, 95, 96, 97, 100, 101, 102, 105, 107, 108, 110, 447, 456], "frac": [349, 354, 466, 472], "frac12": 466, "fraction": 191, "frame": [462, 483], "framebuff": [465, 475, 487], "framework": [462, 476], "free": [462, 466, 474, 475, 478, 487], "freed": 474, "freedom": [352, 355, 365, 366, 384, 440], "frequenc": [42, 67, 98, 100, 101, 102, 105, 390, 486], "frequent": 476, "fresh": [1, 353], "freshli": [12, 13, 22, 23, 24, 25, 26, 27, 28, 44, 45, 46, 52, 53, 59, 60, 63, 64, 65, 70, 71, 79, 87, 88, 89, 91, 94, 117, 118, 119, 120, 121, 122, 123, 126, 128, 129, 135, 140, 144, 145, 146, 147, 148, 154, 155, 156, 157, 158, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 185, 189, 190, 191, 193, 329, 330, 332, 340, 341, 347, 348, 393, 394, 397, 398, 406, 407, 408, 409, 413, 414, 417, 422, 423, 435, 436], "frexp": [0, 3, 8], "fro": 167, "frobeniu": 167, "frohn": 478, "from": [1, 2, 14, 18, 19, 21, 29, 30, 37, 41, 48, 54, 57, 61, 68, 69, 70, 71, 76, 92, 100, 110, 112, 114, 115, 116, 117, 127, 139, 152, 168, 171, 172, 184, 188, 197, 198, 206, 211, 270, 271, 287, 290, 314, 318, 335, 341, 342, 345, 347, 348, 349, 350, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 375, 376, 377, 378, 379, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 396, 400, 404, 415, 418, 420, 421, 424, 426, 437, 438, 441, 444, 456, 462, 464, 466, 467, 468, 469, 471, 472, 473, 474, 476, 478, 480, 481, 486, 487], "frombuff": 3, "fromfil": [3, 320], "fromfunct": [3, 8], "fromit": 3, "frompyfunc": 3, "fromregex": [3, 8], "fromstr": 3, "front": [138, 458], "fulfil": [385, 458], "full": [0, 3, 8, 61, 75, 125, 169, 263, 264, 265, 267, 268, 271, 272, 273, 274, 275, 281, 282, 296, 297, 298, 301, 302, 303, 304, 305, 307, 310, 313, 314, 316, 317, 318, 323, 325, 326, 336, 431, 434, 458, 462, 465, 474, 483, 487], "full_lik": [0, 3, 8], "full_matric": 170, "fulli": [187, 188, 201], "func": 466, "function": [2, 8, 18, 21, 36, 73, 82, 95, 96, 97, 98, 100, 101, 102, 103, 105, 107, 108, 110, 111, 117, 119, 127, 132, 134, 151, 152, 153, 166, 167, 183, 188, 203, 205, 263, 264, 265, 266, 267, 268, 271, 272, 273, 274, 275, 281, 282, 287, 293, 296, 297, 298, 301, 302, 303, 304, 305, 307, 310, 311, 313, 314, 316, 317, 318, 320, 321, 323, 324, 325, 326, 338, 344, 346, 349, 353, 354, 357, 367, 370, 375, 380, 402, 420, 421, 425, 441, 443, 447, 454, 456, 466, 467, 468, 472, 473, 474, 475, 480, 483, 484, 487], "function_nam": 483, "function_valu": 468, "fundament": 487, "funtion": 484, "furnish": 478, "further": [83, 203, 205, 312, 338, 346, 432, 462, 474], "furthermor": [49, 51, 188], "futur": 466, "fweight": 67, "g": [14, 19, 80, 82, 134, 139, 167, 184, 320, 327, 349, 350, 352, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 372, 375, 376, 377, 378, 379, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 402, 424, 441, 443, 462, 463, 473, 480, 484, 486, 487, 488], "gamma": [0, 3, 8, 349, 383], "gasnet": 487, "gather": 487, "gauss": 367, "gaussian": [360, 367, 373, 388], "gb": 487, "gcd": [0, 3, 8], "gemm": 471, "gener": [1, 3, 8, 21, 41, 42, 82, 100, 134, 171, 287, 353, 365, 368, 373, 378, 380, 386, 402, 443, 456, 463, 468, 471, 473, 475, 480, 481, 483, 485, 487], "genfromtxt": [3, 8], "geometr": [0, 3, 8, 354], "geomspac": [3, 8], "get": [99, 105, 107, 111, 171, 276, 315, 384, 463, 465, 466, 467, 468, 471, 472, 473, 475, 486], "get_bit_gener": [3, 8], "get_includ": [3, 8], "get_printopt": [3, 8], "get_rank": 474, "get_siz": 474, "get_stat": [3, 8], "getbufs": [3, 8], "getdevicecount": 474, "geterr": [3, 8], "geterrcal": [3, 8], "getfield": [0, 8], "getter": 311, "git": 462, "github": [462, 474, 487], "give": [43, 83, 184, 188, 324, 345, 396, 405, 437, 462, 475], "given": [14, 15, 16, 17, 19, 20, 21, 31, 34, 35, 41, 48, 51, 54, 55, 56, 57, 62, 66, 67, 68, 69, 76, 77, 80, 82, 84, 85, 86, 95, 96, 97, 99, 100, 101, 102, 104, 105, 107, 108, 110, 111, 114, 124, 125, 127, 132, 134, 135, 139, 141, 167, 171, 183, 184, 187, 188, 197, 198, 201, 202, 203, 204, 205, 206, 211, 265, 266, 269, 272, 273, 287, 290, 296, 297, 298, 303, 304, 308, 316, 324, 326, 333, 334, 335, 338, 342, 343, 346, 349, 350, 352, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 375, 376, 377, 378, 379, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 395, 399, 400, 401, 402, 403, 412, 418, 420, 424, 425, 426, 427, 428, 437, 441, 443, 445, 446, 462, 474, 486, 487], "global": [353, 474], "gmail": 478, "gninja": 463, "gnx": 474, "gny": 474, "go": [421, 487], "goal": 487, "golub": 167, "good": [183, 320, 359, 476, 478], "gop": 467, "govern": [466, 467, 473, 487], "gpu": [1, 2, 3, 8, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 208, 209, 210, 214, 215, 216, 217, 218, 220, 221, 223, 224, 225, 226, 227, 228, 229, 230, 233, 234, 235, 236, 237, 238, 239, 240, 242, 243, 244, 245, 246, 247, 248, 250, 251, 252, 254, 255, 256, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 271, 272, 273, 274, 275, 276, 281, 282, 285, 286, 289, 290, 293, 296, 297, 298, 301, 302, 303, 304, 305, 307, 308, 310, 313, 314, 316, 317, 318, 319, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 458, 465, 472, 474, 476, 486, 488], "grad_i": [469, 487], "grad_x": [469, 487], "gradient": [0, 3, 8, 469], "grai": [469, 471, 487], "grant": 478, "granular": [475, 481], "grasmair": 472, "grate": 462, "grayscal": [469, 487], "greater": [0, 3, 8, 21, 54, 81, 355, 368, 386, 390, 415], "greater_equ": [0, 3, 8], "greatest": [48, 126], "greedi": [83, 84], "green": [468, 471], "grep": 475, "grid": [138, 188, 468, 473, 474, 487], "group": [33, 463, 487], "gt": 468, "guarante": [343, 396], "guess": 472, "guid": [315, 476], "guidelin": 485, "gumbel": [0, 3, 8], "gzipfil": 320, "h": [159, 167, 203, 205, 338, 346, 468, 474, 486, 487], "h5py": 486, "ha": [6, 29, 30, 31, 32, 57, 67, 68, 69, 76, 78, 99, 104, 127, 137, 142, 143, 149, 150, 195, 196, 197, 198, 204, 206, 277, 287, 324, 336, 342, 345, 349, 360, 368, 375, 387, 392, 395, 404, 416, 418, 420, 425, 426, 439, 458, 462, 466, 467, 471, 472, 474, 475, 478, 487], "had": [344, 421, 488], "hadamard": 84, "half": [3, 8, 21, 98, 101, 102, 171, 372, 374, 376, 377, 379, 386], "halo": 474, "ham": [0, 3, 8], "han": [0, 3, 8], "hand": 468, "handl": [437, 441, 456, 458, 474, 480, 483, 487], "happen": [41, 462, 480], "har": 487, "hardwar": [287, 310, 485, 488], "have": [12, 13, 14, 19, 22, 23, 24, 25, 26, 27, 28, 33, 34, 35, 39, 40, 41, 44, 45, 46, 47, 52, 53, 54, 56, 58, 59, 60, 63, 64, 65, 67, 68, 69, 70, 71, 79, 80, 82, 83, 87, 88, 89, 91, 94, 101, 102, 110, 117, 118, 119, 120, 121, 122, 123, 126, 128, 129, 134, 135, 139, 140, 144, 145, 146, 147, 148, 154, 155, 156, 157, 158, 166, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 193, 197, 198, 200, 201, 203, 204, 205, 206, 315, 327, 329, 330, 332, 338, 339, 340, 341, 342, 344, 346, 347, 348, 393, 394, 397, 398, 401, 402, 406, 407, 408, 409, 413, 414, 416, 417, 418, 422, 423, 424, 425, 435, 436, 440, 441, 443, 454, 462, 463, 465, 466, 468, 469, 471, 472, 476, 483, 486, 487], "hazen": [203, 205, 338, 346], "header": [172, 463], "heapsort": [32, 410], "heat": 487, "heavisid": [3, 8], "height": [82, 134, 402, 443, 474, 487], "help": [462, 465, 469, 475, 484, 487], "helper": [456, 467, 473], "henc": 127, "here": [8, 105, 389, 462, 463, 468, 474, 481, 484, 486, 487], "herebi": 478, "herein": 478, "hermitian": [99, 104, 105, 159, 161, 163, 170, 456, 467], "hfft": [0, 3, 8], "high": [372, 375, 386, 463, 474, 487], "higher": [38, 77, 139, 203, 205, 287, 338, 346, 487], "highest": [372, 375], "highli": 486, "highlight": [474, 486, 487], "hipr2": 469, "hist": 132, "histogram": [0, 3, 8, 456], "histogram2d": [3, 8], "histogram_bin_edg": [3, 8], "histogramdd": [3, 8], "hold": [34, 55, 57, 68, 69, 167, 187, 197, 198, 201, 204, 206, 287, 426, 474], "holder": 478, "home": 466, "homepag": 469, "hope": 462, "hopkin": 167, "horizont": [133, 134, 400], "host": 183, "hous": 469, "how": [54, 310, 315, 324, 343, 420, 463, 464, 467, 468, 472, 481, 487], "howev": [14, 16, 17, 19, 68, 164, 186, 199, 202, 204, 287, 342, 418, 420, 462, 478, 487], "howto": 485, "hpc": [474, 485], "hsplit": [0, 3, 8, 134], "hstack": [0, 3, 8, 56, 486], "htm": 469, "html": [469, 475, 478, 488], "http": [354, 462, 466, 467, 469, 473, 475, 478, 480, 487, 488], "hull": 466, "hundr": [474, 486], "hyndman": [203, 205, 338, 346], "hyperbol": [23, 25, 28, 65, 384, 409, 423, 456], "hypergeometr": [0, 3, 8], "hypot": [0, 3, 8], "hypotenus": 135, "hypothesi": 352, "i": [2, 8, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 41, 42, 43, 44, 45, 46, 47, 48, 49, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 104, 105, 106, 107, 108, 109, 110, 111, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 171, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 211, 215, 216, 258, 269, 270, 287, 289, 290, 293, 295, 308, 310, 312, 315, 319, 320, 321, 324, 327, 328, 329, 330, 332, 333, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 406, 407, 408, 409, 410, 412, 413, 414, 415, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 433, 435, 436, 437, 438, 440, 441, 442, 443, 444, 445, 458, 463, 465, 466, 467, 468, 469, 471, 472, 473, 474, 476, 477, 478, 479, 480, 481, 483, 484, 487, 488], "i0": [3, 8, 138], "i1": 138, "i16_arr": 77, "iN": 138, "idea": 462, "ident": [0, 3, 8, 103, 111, 165, 169, 195, 196, 199, 202, 360, 382, 467], "identifi": 469, "identit": 467, "idiomat": 475, "idx": 471, "ieee": 458, "ifft": [0, 3, 8, 101, 102], "ifft2": [0, 3, 8], "ifftn": [0, 3, 8, 100, 107], "ifftshift": [0, 3, 8], "ignor": [49, 51, 132, 195, 196, 199, 200, 201, 202, 203, 205, 480], "ihfft": [0, 3, 8], "ii": [67, 368], "iinfo": [3, 8], "ij": [67, 188], "ik": 138, "illeg": 48, "illustr": [188, 463, 486, 487], "imag": [0, 3, 8, 469, 473, 487], "image_np": 487, "imagin": 315, "imaginari": [18, 35, 137, 142, 143, 150, 160, 161, 162, 163, 194, 292, 401, 411], "imbal": 487, "immedi": 467, "impact": 486, "imper": 487, "implement": [8, 14, 16, 17, 19, 29, 30, 31, 61, 68, 69, 76, 80, 114, 115, 116, 139, 159, 164, 184, 186, 197, 198, 199, 202, 204, 337, 342, 418, 424, 441, 463, 466, 467, 474, 475, 478, 480, 483, 486, 487], "impli": [67, 336, 438, 466, 467, 473, 478], "implic": 472, "implicit": [83, 164], "implment": 483, "import": [67, 184, 466, 467, 468, 469, 471, 472, 473, 474, 481, 484, 486, 487, 488], "importantli": 78, "improp": 487, "improv": 487, "imshow": [469, 487], "in1d": [3, 8], "inappropri": 352, "incident": 478, "includ": [21, 37, 78, 83, 132, 171, 186, 200, 204, 206, 299, 342, 386, 389, 418, 440, 458, 462, 463, 465, 468, 474, 478, 480, 483, 486], "inclus": [203, 205, 338, 346, 372, 375], "incorpor": 478, "incorrect": 474, "increas": [78, 90, 100, 105, 132, 468, 475, 487], "incur": 486, "ind": [78, 430, 431, 433, 434], "indefinit": 462, "independ": [320, 352, 360, 367, 463, 487], "index": [6, 29, 30, 31, 32, 43, 54, 57, 76, 78, 93, 96, 101, 138, 152, 184, 188, 195, 196, 271, 293, 308, 337, 343, 344, 391, 396, 403, 410, 412, 416, 420, 421, 437, 439, 447, 454, 456, 468, 471, 476, 485], "index_arrai": [29, 30, 32, 33, 195, 196], "indexerror": 78, "indic": [0, 3, 8, 29, 30, 31, 32, 33, 36, 54, 61, 67, 72, 74, 75, 78, 81, 83, 84, 92, 95, 96, 97, 99, 100, 101, 102, 104, 105, 106, 107, 108, 109, 110, 111, 113, 133, 183, 195, 196, 265, 266, 267, 268, 301, 304, 308, 318, 324, 331, 343, 344, 403, 406, 412, 420, 421, 430, 431, 433, 434, 437, 439, 442, 462, 468, 471, 472, 475, 478, 480, 486, 487], "indices_or_sect": [36, 412], "indirect": [31, 478], "individu": [357, 483], "ineffici": 458, "inexact": [3, 8, 117, 194, 204], "inf": [15, 68, 69, 167, 195, 196, 197, 198, 469, 480], "infer": [21, 37, 171, 349, 396], "infin": [144, 145, 147, 148, 194, 388], "infinit": 167, "influenc": 367, "info": [3, 8], "inform": [83, 287, 293, 310, 320, 462, 467, 468, 469, 472, 475, 477, 483, 487, 488], "infti": 466, "inher": 487, "inherit": 287, "init": [380, 471, 481, 487], "initi": [1, 16, 17, 85, 199, 202, 204, 206, 263, 264, 296, 298, 303, 316, 342, 353, 418, 458, 468, 471, 472, 474, 481], "inner": [0, 3, 8, 80, 84, 424], "innermost": 48, "input": [4, 6, 12, 13, 14, 15, 16, 17, 19, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 37, 38, 39, 40, 41, 43, 44, 45, 46, 48, 50, 52, 53, 55, 58, 59, 60, 61, 62, 63, 64, 65, 68, 69, 70, 71, 72, 77, 78, 79, 83, 84, 87, 88, 89, 90, 91, 92, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 126, 127, 128, 129, 132, 135, 137, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 154, 155, 156, 157, 158, 159, 164, 167, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 269, 289, 290, 327, 328, 329, 330, 331, 332, 335, 336, 337, 338, 339, 340, 341, 342, 344, 345, 346, 347, 348, 350, 391, 392, 393, 394, 395, 397, 398, 399, 401, 403, 405, 406, 407, 408, 409, 410, 411, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 429, 435, 436, 437, 438, 440, 441, 447, 456, 466, 469, 475, 484, 486, 487], "insert": [3, 8, 29, 30, 48, 54, 76, 90, 171, 195, 196, 308, 336, 344, 403, 404, 456, 487], "insid": 486, "instal": [462, 463, 465, 476, 485], "instanc": [48, 82, 99, 134, 312, 353, 402, 443, 463, 477, 487], "instanti": [2, 353, 463], "instead": [14, 16, 17, 19, 41, 43, 48, 132, 138, 184, 186, 187, 199, 200, 201, 203, 205, 206, 269, 293, 338, 342, 346, 375, 418, 440, 466, 467, 468, 469, 473, 474, 475, 484, 485, 487], "instruct": [462, 463, 477, 487], "int": [1, 4, 6, 14, 16, 17, 19, 20, 21, 29, 30, 31, 32, 34, 36, 41, 42, 43, 47, 50, 51, 54, 55, 57, 58, 66, 67, 68, 69, 72, 73, 74, 76, 77, 78, 81, 84, 85, 86, 90, 93, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 114, 124, 125, 127, 130, 131, 132, 133, 136, 138, 153, 165, 167, 171, 172, 183, 186, 187, 192, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 231, 232, 258, 290, 291, 295, 296, 298, 299, 300, 303, 308, 309, 311, 312, 315, 316, 324, 328, 333, 334, 336, 337, 338, 342, 344, 346, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 395, 396, 399, 400, 401, 403, 405, 410, 412, 415, 416, 418, 419, 420, 421, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 437, 438, 439, 440, 442, 445, 446, 454, 458, 468, 469, 471, 487], "int16": [3, 8, 77, 327], "int32": [3, 8, 204, 315], "int32_t": 463, "int64": [3, 8, 204], "int64_t": 463, "int8": [3, 8], "int_": [3, 8, 312, 375, 425, 466], "int_0": 349, "int_lik": 373, "int_typ": 293, "intc": [3, 8], "integ": [2, 3, 8, 21, 36, 51, 54, 67, 68, 69, 77, 117, 119, 152, 156, 165, 167, 186, 187, 197, 198, 200, 201, 203, 204, 205, 206, 308, 312, 315, 336, 338, 342, 343, 346, 350, 357, 372, 375, 396, 397, 398, 400, 403, 412, 418, 426, 437, 439, 440], "integer_lik": 424, "integr": [41, 132, 191, 465, 474, 487], "intel": 487, "intellectu": 462, "intend": [188, 320, 472], "intens": [164, 469, 487], "intensity_max": [469, 487], "intensity_min": [469, 487], "intent": 117, "inter": 474, "interact": [277, 487], "interchang": [317, 419], "interest": [466, 467, 487], "interfac": [34, 287, 310, 487], "interior": 127, "intermedi": [83, 84, 186, 200, 203, 205, 338, 346, 486], "intern": 68, "interoper": 475, "interp": [3, 8], "interpolated_inverted_cdf": [203, 205, 338, 346], "interpret": [37, 51, 62, 152, 183, 293, 310, 343, 472], "interrupt": 478, "intersect1d": [3, 8], "interv": [21, 55, 78, 171, 350, 364, 369, 372, 374, 375, 376, 377, 379, 385, 386, 387], "intp": [3, 8, 204], "introduc": [399, 471, 487], "introduct": 485, "introselect": [31, 267, 302, 337], "inund": 474, "inv": [3, 8, 472], "invas": 486, "invers": [22, 23, 24, 25, 26, 28, 90, 100, 101, 102, 103, 104, 105, 106, 107, 140, 165, 180, 354, 388, 390, 472], "invert": [0, 3, 8, 456], "inverted_cdf": [203, 205, 338, 346], "invest": 487, "invoc": [487, 488], "invok": [463, 472, 484], "involv": [462, 474], "irecv": 474, "irfft": [0, 3, 8, 107], "irfft2": [0, 3, 8], "irfftn": [0, 3, 8, 105, 106], "irrespect": [161, 163], "is_busdai": [3, 8], "isclos": [0, 3, 8], "iscomplex": [0, 3, 8], "iscomplexobj": [0, 3, 8], "isdtyp": [3, 8], "isend": 474, "isfinit": [0, 3, 8, 199, 206], "isfortran": [3, 8, 258], "isin": [3, 8], "isinf": [0, 3, 8], "isnan": [0, 3, 8, 199, 202, 204, 206], "isnat": [3, 8], "isneginf": [0, 3, 8], "isol": 463, "isposinf": [0, 3, 8], "isreal": [0, 3, 8], "isrealobj": [0, 3, 8], "isscalar": [0, 3, 8], "issu": [100, 101, 102, 458, 462, 475, 486, 487], "issubdtyp": [3, 8], "item": [0, 8, 33, 320, 321, 359, 390, 437, 471], "items": 287, "iter": [6, 84, 203, 205, 276, 288, 289, 305, 338, 344, 346, 421, 471, 472, 473, 474, 481, 487], "ith": 138, "its": [12, 13, 14, 19, 22, 23, 24, 25, 26, 27, 28, 41, 43, 44, 45, 46, 52, 53, 54, 59, 60, 63, 64, 65, 70, 71, 73, 79, 87, 88, 89, 91, 94, 117, 118, 119, 120, 121, 122, 123, 126, 128, 129, 132, 135, 136, 139, 140, 144, 145, 146, 154, 155, 156, 157, 158, 160, 161, 162, 163, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 184, 185, 189, 190, 191, 193, 287, 310, 322, 324, 329, 330, 332, 335, 340, 341, 347, 348, 367, 375, 390, 393, 394, 396, 397, 398, 406, 407, 408, 409, 413, 414, 417, 422, 423, 424, 426, 427, 428, 435, 436, 441, 462, 467, 471, 474, 478, 486, 487], "itself": [54, 194, 362, 415, 463], "ivan": 478, "ix_": [0, 3, 8], "j": [80, 167, 188, 203, 205, 324, 335, 338, 344, 346, 421, 428, 468, 472, 474, 486, 487], "j0": 54, "j1": 54, "jacobi": 470, "jacobi_stencil": 487, "jacobian": 472, "jcp": 468, "jm": 54, "john": [167, 466], "join": [58, 416, 456], "jr": [354, 367], "json": 458, "jsrun": 479, "june": 478, "just": [56, 389, 462, 466, 467, 473], "k": [12, 13, 22, 23, 24, 25, 26, 27, 28, 34, 44, 45, 46, 52, 53, 59, 60, 63, 64, 65, 70, 71, 73, 79, 80, 87, 88, 89, 91, 93, 94, 117, 118, 119, 120, 121, 122, 123, 126, 128, 129, 135, 138, 140, 144, 145, 146, 154, 155, 156, 157, 158, 168, 169, 170, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 189, 190, 191, 193, 215, 269, 289, 329, 330, 332, 340, 341, 347, 348, 349, 350, 352, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 372, 375, 376, 377, 378, 379, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 393, 394, 397, 398, 400, 406, 407, 408, 409, 413, 414, 417, 422, 423, 428, 429, 430, 431, 432, 433, 434, 435, 436, 458, 466, 468, 470, 472, 487], "kaiser": [0, 3, 8, 47], "kappa": 387, "ke": 487, "keep": [458, 466, 471], "keepdim": [14, 16, 17, 19, 29, 30, 41, 167, 186, 187, 195, 196, 199, 200, 201, 202, 203, 204, 205, 206, 263, 264, 296, 297, 298, 303, 316, 326, 338, 342, 346, 418, 440], "kei": [214, 222, 257, 475, 487], "kern": 478, "kernel": [469, 487], "kernel_i": [469, 487], "kernel_x": [469, 487], "keyword": [2, 12, 13, 22, 23, 24, 25, 26, 27, 28, 44, 45, 46, 52, 53, 55, 59, 60, 63, 64, 65, 67, 70, 71, 79, 87, 88, 89, 91, 94, 117, 118, 119, 120, 121, 122, 123, 126, 128, 129, 135, 140, 144, 145, 146, 154, 155, 156, 157, 158, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 185, 188, 189, 190, 191, 193, 194, 329, 330, 332, 340, 341, 347, 348, 393, 394, 397, 398, 406, 407, 408, 409, 413, 414, 417, 422, 423, 435, 436, 437], "kill": 159, "kind": [31, 32, 58, 83, 184, 267, 268, 269, 302, 313, 337, 410, 456, 466, 467, 473, 475, 478], "know": [462, 472, 475, 486], "knowledg": [462, 474], "known": [315, 355, 368, 370, 381, 387, 390, 487], "kron": [3, 8], "kth": [31, 267, 302, 337], "kwarg": [12, 13, 22, 23, 24, 25, 26, 27, 28, 44, 45, 46, 52, 53, 55, 59, 60, 63, 64, 65, 70, 71, 79, 87, 88, 89, 91, 94, 117, 118, 119, 120, 121, 122, 123, 126, 128, 129, 135, 140, 144, 145, 146, 154, 155, 156, 157, 158, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 185, 189, 190, 191, 193, 249, 329, 330, 332, 340, 341, 347, 348, 393, 394, 397, 398, 406, 407, 408, 409, 413, 414, 417, 422, 423, 435, 436, 437, 466], "l": [36, 159, 161, 163, 467, 478, 487], "l2": [468, 472], "l2_norm": 472, "label": [83, 463, 466, 468, 471], "label_color": 471, "label_color_map": 471, "label_valu": 471, "lam": 369, "lambda": [354, 360, 389], "languag": [466, 467, 473], "laplac": [0, 3, 8, 367], "laptop": 487, "larg": [61, 67, 172, 194, 367, 369, 384, 420, 474, 481, 486, 487], "larger": [43, 55, 77, 95, 96, 97, 100, 101, 102, 104, 107, 108, 110, 172, 385, 426, 438, 481, 487], "larger_imag": 487, "largest": [43, 84, 119, 167, 194, 372, 375], "last": [14, 19, 21, 31, 32, 41, 42, 48, 77, 80, 95, 96, 97, 99, 100, 101, 102, 104, 105, 106, 107, 108, 110, 114, 127, 139, 166, 171, 184, 206, 290, 308, 337, 342, 391, 396, 399, 403, 410, 411, 416, 418, 420, 424], "latenc": 487, "later": [367, 487], "latest": [475, 477, 487, 488], "latter": [344, 421, 486], "launch": [463, 481, 486], "launcher": [475, 479, 487], "law": [390, 466, 467, 473], "layout": [34, 269, 287, 319, 391, 396], "lcm": [0, 3, 8], "ldexp": [0, 3, 8], "lead": [48, 188, 197, 198, 475, 487], "leakag": 47, "learn": 475, "least": [38, 39, 40, 41, 43, 61, 67, 75, 82, 84, 111, 115, 143, 160, 161, 162, 163, 168, 170, 359, 402, 443, 463, 486, 487], "left": [14, 16, 17, 19, 29, 30, 41, 78, 115, 156, 167, 186, 187, 195, 196, 199, 200, 201, 202, 203, 204, 205, 206, 308, 338, 342, 346, 385, 401, 403, 418, 440, 468, 474], "left_shift": [0, 3, 8], "leg": 135, "legaci": 380, "legal": [462, 478], "legales": 464, "legat": [343, 458, 463, 465, 466, 467, 473, 476, 477, 480, 483, 484, 487, 488], "legate_auto_config": 487, "legate_config": [475, 484], "legate_limit_stdout": 487, "legate_root": 463, "legate_test": [458, 475], "legend": [466, 468], "legion": [485, 487], "legion_default_arg": 479, "lele": 468, "len": [57, 78, 97, 98, 102, 105, 107, 110, 138, 188, 241, 471], "length": [12, 13, 16, 17, 21, 22, 23, 24, 25, 26, 27, 28, 36, 41, 43, 44, 45, 46, 52, 53, 57, 59, 60, 63, 64, 65, 68, 69, 70, 71, 77, 79, 87, 88, 89, 91, 94, 95, 96, 97, 99, 100, 101, 102, 103, 104, 105, 107, 108, 110, 117, 118, 119, 120, 121, 122, 123, 126, 127, 128, 129, 132, 134, 135, 138, 140, 144, 145, 146, 154, 155, 156, 157, 158, 160, 161, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 185, 187, 188, 189, 190, 191, 193, 197, 198, 199, 201, 202, 308, 314, 329, 330, 332, 340, 341, 344, 347, 348, 351, 393, 394, 396, 397, 398, 402, 403, 404, 405, 406, 407, 408, 409, 413, 414, 415, 417, 421, 422, 423, 424, 425, 435, 436, 443, 463, 468], "less": [0, 3, 8, 42, 47, 57, 67, 68, 69, 76, 111, 130, 131, 153, 164, 197, 198, 204, 206, 342, 359, 386, 407, 418, 426, 472, 475, 486], "less_equ": [0, 3, 8], "let": [462, 466, 467, 472, 473, 487], "letter": 310, "level": [48, 67, 321, 454, 463, 480, 486, 487], "leverag": 487, "lexsort": [3, 8], "lgpatch": 484, "lh": 468, "liabil": 478, "liabl": 478, "liber": [80, 83, 139, 184, 424, 441], "librari": [277, 454, 458, 463, 475, 476, 478, 487], "licens": [462, 466, 467, 473, 478], "lifespan": 474, "lightweight": 462, "like": [39, 40, 48, 56, 72, 83, 107, 111, 168, 170, 171, 172, 183, 184, 188, 269, 287, 312, 320, 344, 386, 388, 391, 396, 421, 428, 456, 458, 462, 467, 468, 472, 473, 474, 479, 486, 487, 488], "limit": [55, 95, 96, 97, 99, 100, 101, 102, 104, 105, 106, 107, 108, 109, 110, 160, 161, 162, 163, 272, 367, 369, 385, 386, 466, 467, 473, 478, 487], "linalg": [0, 3, 8, 447, 456, 467, 468, 471, 472, 484, 486], "linalgerror": [8, 160, 161, 162, 163, 168, 169, 170], "line": [462, 465, 474, 475, 483, 487], "linear": [61, 83, 169, 203, 205, 338, 346, 447, 456, 463, 468, 472, 487], "linearli": 486, "link": [480, 487], "linspac": [0, 3, 8, 21, 466, 468, 486], "linux": [462, 475, 477, 485], "list": [8, 21, 31, 32, 36, 37, 38, 39, 40, 48, 49, 54, 81, 83, 84, 90, 98, 111, 112, 127, 133, 258, 321, 337, 404, 410, 412, 424, 427, 442, 463, 465, 471, 478], "liter": [4, 83], "literal_ev": 172, "littl": [80, 139, 184, 336, 424, 438, 441, 467], "ll": [471, 479], "ln": [389, 487], "load": [0, 3, 8, 284, 285, 487], "loadtxt": [3, 8], "loan": 167, "loc": [358, 360, 361, 367, 468], "local": [474, 475, 487], "local_grid": 474, "local_ni": 474, "local_nx": 474, "local_rank": 474, "locat": [12, 13, 22, 23, 24, 25, 26, 27, 28, 44, 45, 46, 49, 51, 52, 53, 59, 60, 63, 64, 65, 70, 71, 79, 87, 88, 89, 91, 94, 111, 117, 118, 119, 120, 121, 122, 123, 126, 128, 129, 135, 140, 144, 145, 146, 147, 148, 154, 155, 156, 157, 158, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 188, 189, 190, 191, 193, 308, 329, 330, 332, 335, 340, 341, 347, 348, 358, 360, 361, 368, 393, 394, 397, 398, 403, 406, 407, 408, 409, 413, 414, 417, 422, 423, 435, 436, 469, 471, 483, 484, 487], "lock": 287, "log": [0, 3, 8, 362, 363, 466], "log10": [0, 3, 8], "log1p": [0, 3, 8], "log2": [0, 3, 8], "logaddexp": [0, 3, 8], "logaddexp2": [0, 3, 8], "logarithm": [173, 174, 175, 176, 177, 178, 363, 456], "logic": [14, 19, 336, 447, 456, 474], "logical_and": [0, 3, 8, 486], "logical_not": [0, 3, 8], "logical_or": [0, 3, 8], "logical_xor": [0, 3, 8], "logist": [0, 3, 8], "lognorm": [0, 3, 8], "logseri": [0, 3, 8], "logspac": [3, 8], "lomax": 368, "long": [3, 8, 375, 487], "longdoubl": [3, 8, 293], "longer": [43, 61, 99, 105, 486], "longlong": [3, 8], "look": [421, 462, 473, 475], "loop": [472, 474], "lorena": 474, "lorentz": 381, "lose": [293, 321], "loss": 478, "lost": 320, "low": [101, 102, 372, 375, 386, 454], "lower": [55, 93, 132, 159, 161, 163, 203, 205, 338, 346, 385, 386, 428, 429, 430, 431, 467, 474], "lowercas": 287, "lowest": [41, 84, 154, 368, 372, 375], "lstsq": [3, 8], "lt": 468, "m": [40, 42, 47, 61, 67, 80, 82, 93, 96, 97, 99, 101, 102, 105, 107, 110, 114, 115, 116, 130, 131, 153, 159, 160, 161, 162, 163, 164, 165, 168, 169, 170, 184, 186, 188, 200, 290, 335, 344, 349, 350, 352, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 372, 375, 376, 377, 378, 379, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 400, 404, 420, 421, 428, 429, 430, 432, 433, 440, 463, 466, 467, 473, 477, 487], "machin": [320, 463, 475, 487, 488], "maco": 475, "made": [34, 38, 194, 269, 287, 310, 391], "magenta": 471, "magnitud": [18, 471, 487], "mai": [6, 14, 19, 21, 29, 30, 49, 51, 54, 55, 58, 68, 69, 83, 127, 167, 172, 184, 188, 194, 197, 198, 269, 287, 312, 321, 344, 350, 386, 387, 458, 462, 465, 466, 467, 468, 472, 473, 475, 478, 480, 483, 484, 487], "main": [73, 74, 75, 76, 93, 111, 136, 426, 428, 429, 468, 479, 487, 488], "maintain": [76, 462, 474], "mainten": 474, "major": [34, 289, 391, 439, 475], "make": [48, 49, 56, 82, 134, 188, 277, 287, 359, 402, 443, 456, 462, 463, 467, 471, 474, 475, 480, 481, 484, 486, 487], "make_grid": 473, "manag": [353, 458, 474, 487], "mani": [83, 315, 354, 438, 463, 487], "manifest": 486, "manipul": [447, 456], "manner": [480, 487], "mantissa": 123, "manual": [425, 462, 474, 477, 481, 487], "map": [54, 471, 474], "mapper": 475, "margin": 78, "mark": 462, "marker": 471, "marku": 472, "mask": [152, 183, 339, 345, 471], "mask_func": 183, "mask_funct": 183, "mask_indic": [0, 3, 8], "mass": [132, 357], "master": 487, "match": [37, 48, 55, 58, 77, 127, 184, 344, 416, 421, 440, 458, 468], "materi": [183, 287, 469, 471, 478], "math": [293, 458, 478], "mathbf": [468, 472, 487], "mathemat": [167, 447, 456, 487], "mathtt": 466, "matmul": [0, 3, 8, 458, 487], "matmul_cache_s": 447, "matplotlib": [466, 468, 469, 471, 473, 487], "matric": [48, 111, 160, 161, 162, 163, 164, 166, 167, 184, 188, 391, 456, 467, 468, 487], "matrix": [7, 8, 67, 76, 80, 159, 160, 161, 162, 163, 164, 165, 167, 168, 169, 184, 188, 324, 327, 391, 432, 441, 456, 467, 468, 472], "matrix_norm": 8, "matrix_pow": [0, 8], "matrix_rank": [3, 8], "matrix_transpos": [3, 8], "matter": 475, "matthew": 478, "matvec": [3, 8], "max": [0, 132, 167, 202, 272, 425, 469, 471, 486, 487], "max_header_s": 172, "maxim": 487, "maximum": [0, 3, 8, 16, 17, 29, 42, 47, 55, 84, 120, 130, 131, 153, 172, 195, 199, 202, 265, 296, 471, 480, 486], "may_share_memori": [3, 8], "mayb": 462, "mb": [465, 487], "md": 167, "me": 462, "mean": [0, 3, 8, 48, 66, 83, 96, 97, 101, 102, 107, 108, 110, 124, 127, 167, 184, 200, 269, 289, 319, 324, 352, 360, 361, 362, 366, 367, 373, 388, 391, 396, 400, 420, 438, 470, 472, 487], "measur": [354, 440, 475, 481, 482, 484, 485, 487], "mechan": 462, "median": [0, 3, 8, 201, 361], "median_unbias": [203, 205, 338, 346], "meet": [34, 462, 486, 487], "memavail": 475, "meminfo": 475, "memmap": [3, 8], "memo": 216, "memori": [34, 49, 51, 164, 183, 187, 188, 201, 203, 205, 269, 270, 280, 287, 289, 299, 310, 315, 319, 338, 346, 391, 396, 465, 468, 474, 487], "memoryview": 280, "mention": [471, 475, 486, 487], "merchant": 478, "merg": [54, 462, 478, 481], "merged_arrai": 54, "mergesort": [32, 410], "merton": 487, "mesh": [152, 474, 481], "meshgrid": [0, 3, 8, 152], "messag": [475, 481], "met": [478, 486], "method": [1, 2, 4, 7, 14, 16, 17, 19, 34, 61, 164, 172, 186, 199, 202, 203, 204, 205, 293, 311, 312, 320, 328, 338, 342, 346, 418, 466, 470, 480, 487], "mgrid": 152, "microsecond": 486, "middl": [101, 102], "midpoint": [203, 205, 338, 346], "might": [32, 68, 83, 183, 410, 472, 475, 481, 486, 487], "million": [466, 474], "millisecond": [481, 486], "mimic": [336, 438, 474], "mimick": 474, "min": [0, 132, 167, 168, 170, 202, 272], "min_cpu_chunk": 447, "min_gpu_chunk": 447, "min_omp_chunk": 447, "min_scalar_typ": [3, 8], "miniforg": 487, "miniforge3": 487, "minim": [47, 487], "minimum": [0, 3, 8, 16, 17, 30, 34, 43, 55, 117, 121, 196, 199, 202, 266, 298, 487], "minlength": [43, 471], "mintypecod": [3, 8], "mirror": 474, "miscellan": 456, "mise": 387, "mismatch": [48, 54, 57], "mitig": 486, "mkdir": 487, "mod": [3, 8, 54], "mode": [54, 61, 83, 95, 96, 97, 99, 100, 101, 102, 104, 105, 106, 107, 108, 109, 110, 168, 172, 271, 304, 318, 343, 358, 378, 381, 385, 387, 420, 458, 469, 486, 487], "model": [357, 463, 466, 467, 473, 474, 487], "modf": [0, 3, 8], "modif": [462, 474, 478], "modifi": [111, 187, 201, 203, 205, 338, 346, 462, 468, 478], "modul": [277, 487], "modular": 54, "moivr": 367, "monoton": [78, 132], "more": [38, 39, 40, 49, 51, 55, 68, 69, 73, 76, 78, 80, 82, 83, 95, 100, 105, 106, 108, 109, 134, 139, 164, 166, 184, 188, 197, 198, 204, 315, 388, 389, 400, 402, 416, 424, 426, 437, 441, 443, 465, 467, 468, 469, 471, 474, 477, 480, 486, 487, 488], "moshier": 478, "most": [34, 77, 82, 83, 84, 100, 134, 194, 359, 402, 421, 443, 462, 474, 480, 487], "mostli": 475, "motion": 388, "move": [192, 315, 487], "moveaxi": [0, 3, 8], "mpi": [474, 487], "mpi4pi": [474, 481], "mpi_fin": 474, "mpirun": 479, "msg00295": 478, "mt19937": [3, 8], "mu": [360, 368, 387], "much": [42, 462, 486], "multi": [3, 83, 95, 96, 97, 99, 100, 101, 102, 104, 105, 106, 107, 108, 109, 110, 160, 161, 162, 163, 164, 169, 474, 475, 476, 477, 485, 486], "multi_dot": [0, 8], "multidimension": 441, "multinomi": [3, 8], "multipl": [1, 2, 7, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 113, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 169, 171, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 208, 209, 210, 214, 215, 216, 217, 218, 220, 221, 223, 224, 225, 226, 227, 228, 229, 230, 233, 234, 235, 236, 237, 238, 239, 240, 242, 243, 244, 245, 246, 247, 248, 250, 251, 252, 254, 255, 256, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 271, 272, 273, 274, 275, 276, 281, 282, 285, 286, 289, 293, 296, 297, 298, 301, 302, 303, 304, 305, 307, 308, 310, 313, 314, 316, 317, 318, 319, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 465, 472, 474, 475, 477, 486, 488], "multipli": [0, 3, 8, 68, 80, 184, 197, 342, 368, 376, 377, 379, 486], "multivariate_norm": [3, 8], "must": [1, 12, 13, 14, 16, 17, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 41, 44, 45, 46, 48, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 63, 64, 65, 68, 69, 70, 71, 77, 78, 79, 80, 82, 87, 88, 89, 91, 94, 99, 105, 107, 115, 117, 118, 119, 120, 121, 122, 123, 126, 127, 128, 129, 132, 134, 135, 139, 140, 144, 145, 146, 147, 148, 154, 155, 156, 157, 158, 159, 166, 167, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 184, 185, 186, 187, 189, 190, 191, 192, 193, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 258, 272, 287, 324, 329, 330, 332, 338, 339, 340, 341, 342, 344, 346, 347, 348, 352, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 365, 366, 367, 368, 369, 370, 371, 373, 378, 383, 384, 385, 388, 389, 390, 393, 394, 397, 398, 399, 400, 401, 402, 403, 406, 407, 408, 409, 413, 414, 416, 417, 418, 421, 422, 423, 424, 426, 435, 436, 438, 440, 441, 443, 463, 474, 478, 479, 487], "my": 462, "myenv": [477, 487], "myron": 487, "n": [7, 33, 36, 40, 43, 54, 61, 67, 74, 75, 77, 78, 80, 82, 93, 95, 96, 97, 99, 100, 101, 102, 104, 105, 107, 108, 110, 111, 127, 136, 138, 152, 165, 167, 168, 170, 183, 184, 188, 308, 315, 324, 335, 339, 345, 349, 350, 352, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 372, 375, 376, 377, 378, 379, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 402, 403, 412, 424, 428, 429, 430, 433, 434, 440, 443, 447, 466, 467, 468, 471, 473, 477, 479, 487], "n1": 188, "n2": 188, "n3": 188, "n_centroid": 471, "n_dim": 471, "n_element": 471, "n_gpu": 474, "n_iter": 471, "n_iter_check": 471, "n_point": 468, "n_stencil": 468, "n_warmup_it": 481, "naiv": [486, 487], "name": [284, 287, 310, 322, 388, 462, 478, 484, 487], "nan": [15, 29, 30, 35, 141, 146, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 480], "nan_to_num": [0, 3, 8], "nanargmax": [0, 3, 8, 196, 458], "nanargmin": [0, 3, 8, 195, 458], "nancumprod": [0, 3, 8], "nancumsum": [0, 3, 8], "nanmax": [0, 3, 8, 202, 458], "nanmean": [0, 3, 8], "nanmedian": [0, 3, 8], "nanmin": [0, 3, 8, 199, 458], "nanpercentil": [0, 3, 8], "nanprod": [0, 3, 8], "nanquantil": [0, 3, 8], "nanstd": [3, 8], "nansum": [0, 3, 8], "nanvar": [3, 8], "nation": 487, "nativ": [458, 480], "natur": [173, 175, 367, 487], "navier": 474, "nbad": 359, "nd": [6, 48, 293], "ndarrai": [0, 7, 8, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 352, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 375, 376, 377, 378, 379, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 452, 458, 469, 471, 472, 480, 483, 487], "ndenumer": [3, 8], "ndim": [0, 3, 6, 8, 16, 17, 33, 38, 39, 40, 48, 74, 76, 111, 167, 202, 321, 421, 425], "ndimag": 469, "ndindex": [3, 8], "nditer": [3, 8], "ndmin": 34, "ndshape": [6, 50, 405, 439], "ndshapelik": [50, 51, 114, 124, 125, 333, 334, 377, 379, 396, 415, 446], "nearest": [203, 205, 321, 338, 346, 398], "necessari": [38, 43, 48, 54, 68, 69, 99, 105, 107, 111, 186, 187, 197, 198, 200, 201, 204, 206, 342, 343, 401, 418, 440, 474, 483], "necessarili": [54, 466, 467, 473], "need": [34, 49, 78, 187, 188, 201, 391, 420, 421, 444, 458, 463, 467, 471, 474, 475, 486, 487], "neg": [0, 3, 8, 14, 19, 41, 43, 54, 76, 93, 100, 101, 102, 105, 114, 117, 127, 145, 147, 165, 171, 194, 206, 290, 342, 354, 356, 358, 360, 361, 362, 364, 365, 367, 370, 371, 373, 378, 383, 391, 401, 413, 418, 420, 424, 426, 438], "negative_binomi": [0, 3, 8], "neginf": 194, "neglig": 478, "neighbor": [468, 474, 487], "neither": 478, "nersc": 487, "nest": [34, 48, 321, 474, 486], "nested_it": 3, "never": [61, 310], "new": [14, 19, 51, 54, 68, 69, 72, 76, 85, 86, 90, 114, 115, 116, 124, 171, 183, 186, 187, 192, 197, 198, 200, 201, 204, 206, 211, 269, 271, 283, 307, 324, 327, 333, 353, 374, 396, 401, 416, 419, 425, 440, 445, 454, 471, 477, 487], "new_label": 471, "newaxi": [324, 471], "newli": [34, 269], "newshap": 396, "newton": 470, "next": [315, 330, 462, 487], "nextaft": [0, 3, 8], "ngood": 359, "ni": [188, 344, 420, 421], "ninja": 463, "niter": [472, 481, 486], "nj": [344, 420, 421], "nk": [344, 420, 421], "nn": 188, "nnewton": 472, "nnode": 487, "node": [287, 465, 474, 475, 476, 477, 485, 488], "non": [14, 16, 17, 19, 21, 33, 39, 40, 41, 43, 66, 113, 132, 142, 152, 167, 171, 183, 186, 188, 194, 199, 202, 204, 287, 299, 301, 331, 339, 342, 354, 356, 358, 360, 361, 362, 365, 366, 367, 370, 371, 373, 378, 383, 413, 418, 424, 438, 474, 480], "nonc": [365, 366], "noncentr": [365, 366], "noncentral_chisquar": [0, 3, 8], "noncentral_f": [0, 3, 8], "none": [1, 2, 4, 6, 12, 13, 14, 16, 17, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 34, 37, 41, 43, 44, 45, 46, 52, 53, 54, 55, 57, 58, 59, 60, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 76, 77, 79, 80, 83, 86, 87, 88, 89, 91, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 114, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 132, 135, 139, 140, 144, 145, 146, 147, 148, 154, 155, 156, 157, 158, 166, 167, 169, 171, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 184, 185, 186, 187, 189, 190, 191, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 263, 264, 265, 266, 267, 268, 270, 271, 272, 273, 277, 278, 279, 281, 282, 285, 290, 291, 293, 296, 297, 298, 302, 303, 304, 308, 309, 310, 313, 314, 316, 318, 321, 323, 324, 326, 327, 329, 330, 332, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 346, 347, 348, 349, 350, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 372, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 393, 394, 395, 397, 398, 399, 401, 403, 406, 407, 408, 409, 410, 413, 414, 415, 416, 417, 418, 420, 421, 422, 423, 424, 426, 427, 428, 430, 433, 435, 436, 437, 438, 440, 441, 444, 446, 458, 471], "noninfring": 478, "nonneg": [359, 389], "nonzero": [0, 3, 8, 92, 113, 152, 336, 486, 487], "nor": 478, "norm": [0, 8, 95, 96, 97, 99, 100, 101, 102, 104, 105, 106, 107, 108, 109, 110, 164, 456, 468, 471, 472, 486], "normal": [0, 3, 8, 42, 47, 48, 67, 95, 96, 97, 99, 100, 101, 102, 104, 105, 106, 107, 108, 109, 110, 130, 131, 132, 153, 160, 161, 349, 352, 360, 362, 373, 384, 387, 466, 469, 471, 487], "normal_unbias": [203, 205, 338, 346], "north": [473, 487], "not_equ": [0, 3, 8, 471], "note": [12, 13, 15, 18, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 34, 44, 45, 46, 52, 53, 54, 59, 60, 61, 63, 64, 65, 67, 68, 69, 70, 71, 72, 76, 77, 78, 79, 80, 83, 84, 87, 88, 89, 91, 94, 95, 96, 97, 98, 99, 100, 101, 102, 104, 105, 106, 107, 108, 109, 110, 111, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 126, 128, 129, 132, 135, 138, 139, 140, 141, 144, 145, 146, 151, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 188, 189, 190, 191, 193, 197, 198, 199, 202, 269, 280, 287, 293, 299, 310, 312, 315, 320, 321, 327, 329, 330, 332, 337, 340, 341, 347, 348, 353, 362, 391, 393, 394, 395, 396, 397, 398, 399, 406, 407, 408, 409, 413, 414, 417, 420, 422, 423, 424, 428, 430, 431, 433, 434, 435, 436, 437, 441, 468, 469, 472, 475, 486, 487], "notic": [466, 472, 475, 477], "notion": [161, 163], "now": [54, 463, 466, 467, 469, 473, 487], "np": [12, 13, 16, 17, 22, 23, 24, 25, 26, 27, 28, 44, 45, 46, 48, 52, 53, 59, 60, 63, 64, 65, 68, 69, 70, 71, 77, 78, 79, 83, 87, 88, 89, 91, 94, 112, 113, 117, 118, 119, 120, 121, 122, 123, 126, 128, 129, 135, 140, 144, 145, 146, 152, 154, 155, 156, 157, 158, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 187, 188, 189, 190, 191, 193, 197, 198, 201, 288, 312, 315, 324, 329, 330, 332, 340, 341, 342, 347, 348, 375, 393, 394, 397, 398, 406, 407, 408, 409, 413, 414, 417, 418, 420, 422, 423, 425, 435, 436, 466, 467, 468, 469, 471, 472, 473, 474, 479, 480, 481, 484, 486, 487, 488], "npoint": 468, "npt": [4, 36, 55, 58, 93, 124, 125, 132, 136, 138, 142, 143, 149, 151, 171, 270, 288, 309, 327, 333, 334, 377, 379, 404, 425, 428, 444, 446], "npy": [172, 456], "npz": [172, 456], "nsampl": 359, "ntask": 487, "nuc": 167, "nuclear": 167, "null": 421, "num": [171, 486, 487], "num_parallel": 463, "num_timestep": 474, "numa": 463, "number": [2, 3, 6, 8, 12, 13, 15, 18, 22, 23, 24, 25, 26, 27, 28, 33, 34, 41, 42, 43, 44, 45, 46, 47, 49, 52, 53, 54, 59, 60, 63, 64, 65, 66, 67, 70, 71, 74, 77, 79, 84, 87, 88, 89, 90, 91, 93, 94, 97, 99, 100, 101, 102, 104, 105, 107, 108, 110, 117, 118, 119, 120, 121, 122, 123, 126, 127, 128, 129, 130, 131, 132, 135, 136, 138, 140, 143, 144, 145, 146, 150, 152, 153, 154, 155, 156, 157, 158, 167, 171, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 185, 186, 189, 190, 191, 193, 194, 197, 198, 199, 200, 202, 204, 206, 295, 300, 312, 328, 329, 330, 332, 336, 339, 340, 341, 347, 348, 350, 351, 352, 357, 359, 364, 367, 369, 380, 393, 394, 395, 397, 398, 399, 400, 401, 406, 407, 408, 409, 413, 414, 417, 420, 422, 423, 425, 428, 435, 436, 437, 438, 440, 441, 456, 458, 465, 466, 468, 472, 474, 475, 479, 480, 487], "number_of_dimens": 328, "numer": [100, 101, 102, 105, 107, 147, 148, 167, 329, 340, 355, 366, 456, 474, 480], "numit": 6, "numpi": [1, 2, 3, 4, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 91, 92, 93, 94, 95, 96, 97, 99, 100, 101, 102, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 269, 277, 283, 287, 310, 315, 327, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 402, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 456, 458, 465, 466, 467, 468, 469, 471, 472, 473, 474, 476, 482, 483, 485, 488], "numpy_compat": 447, "numpythunk": 4, "nvidia": [466, 467, 469, 473, 475, 477, 487, 488], "nx": [188, 474, 486, 487], "ny": [188, 474, 486, 487], "nyquist": [98, 100, 101, 102], "o": [1, 287, 353, 471, 481, 487], "obj": [34, 72], "object": [6, 14, 19, 34, 62, 151, 159, 167, 172, 187, 201, 203, 205, 258, 270, 277, 280, 287, 293, 295, 299, 319, 320, 321, 327, 338, 346, 353, 396, 424, 428, 437], "object_": [3, 8], "observ": 67, "obtain": [138, 312, 368, 466, 467, 473, 478], "occas": 462, "occasion": 480, "occur": [58, 68, 69, 72, 83, 184, 194, 197, 198, 269, 289, 364, 367, 369, 385, 391, 486, 487], "occurr": [43, 437], "odd": [42, 47, 99, 103, 105, 107, 108, 130, 131, 153], "ofc": 68, "off": [21, 438, 462, 468], "offer": [475, 477, 486], "offload": 458, "offset": [4, 76, 183, 281, 291, 309, 315, 323, 426, 430, 431, 433, 434, 458, 481], "often": [21, 42, 349, 352, 367, 462, 471, 486, 487], "ogrid": 152, "omiss": 327, "omit": [258, 327], "omp": [465, 475, 487], "ompthread": [465, 487], "onc": [462, 463, 474, 487], "one": [6, 14, 16, 17, 19, 29, 30, 38, 41, 42, 43, 47, 49, 51, 54, 55, 72, 83, 93, 95, 96, 99, 100, 101, 103, 104, 105, 107, 108, 127, 130, 131, 136, 138, 143, 152, 153, 167, 175, 186, 187, 188, 195, 196, 197, 199, 200, 201, 202, 203, 204, 205, 206, 280, 287, 288, 289, 293, 314, 315, 331, 338, 342, 346, 357, 368, 372, 404, 415, 416, 418, 430, 431, 433, 434, 440, 454, 462, 466, 474, 475, 477, 481, 486, 487], "ones": [0, 3, 8, 80, 90, 93, 136, 139, 147, 148, 183, 184, 197, 204, 206, 334, 424, 428, 441, 468, 471, 474, 480, 486], "ones_lik": [0, 3, 8], "onli": [12, 13, 22, 23, 24, 25, 26, 27, 28, 34, 36, 38, 41, 42, 44, 45, 46, 47, 52, 53, 55, 59, 60, 61, 63, 64, 65, 70, 71, 79, 80, 83, 84, 87, 88, 89, 91, 94, 98, 117, 118, 119, 120, 121, 122, 123, 126, 127, 128, 129, 130, 131, 132, 135, 138, 140, 144, 145, 146, 153, 154, 155, 156, 157, 158, 159, 161, 163, 167, 169, 171, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 184, 185, 189, 190, 191, 193, 194, 195, 196, 199, 202, 269, 287, 293, 310, 329, 330, 332, 339, 340, 341, 344, 347, 348, 380, 391, 393, 394, 395, 396, 397, 398, 406, 407, 408, 409, 413, 414, 417, 421, 422, 423, 424, 435, 436, 437, 438, 441, 454, 458, 462, 469, 471, 474, 477, 480, 481, 486, 487], "onto": [287, 475], "oom": 475, "op": 380, "open": [21, 78, 152, 171, 172, 320, 372, 374, 376, 377, 379, 386, 462, 469, 475, 477, 487], "openmp": [458, 463, 465, 487], "oper": [7, 16, 17, 82, 83, 84, 90, 119, 134, 139, 159, 194, 199, 290, 335, 344, 395, 402, 424, 437, 441, 443, 447, 456, 458, 468, 469, 474, 480, 481], "operand": [83, 84], "opposit": [269, 287], "optim": [47, 83, 84, 166, 293, 458, 468, 474, 483, 487], "option": [1, 12, 13, 14, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 34, 37, 41, 43, 44, 45, 46, 49, 51, 52, 53, 54, 55, 57, 58, 59, 60, 61, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 76, 77, 78, 79, 80, 83, 85, 86, 87, 88, 89, 91, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 114, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 132, 135, 136, 138, 139, 140, 144, 145, 146, 147, 148, 154, 155, 156, 157, 158, 161, 163, 166, 167, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 258, 269, 289, 290, 308, 310, 319, 327, 329, 330, 332, 333, 334, 335, 336, 337, 338, 340, 341, 342, 343, 346, 347, 348, 349, 350, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 375, 376, 377, 378, 379, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 393, 394, 395, 396, 397, 398, 399, 401, 403, 404, 406, 407, 408, 409, 410, 412, 413, 414, 415, 416, 417, 418, 420, 422, 423, 424, 426, 427, 428, 429, 430, 431, 433, 434, 435, 436, 437, 438, 439, 440, 441, 445, 446, 462, 463, 465, 470, 475, 477, 479, 483, 484, 486], "ord": [167, 471], "order": [4, 12, 13, 22, 23, 24, 25, 26, 27, 28, 31, 32, 34, 44, 45, 46, 52, 53, 59, 60, 63, 64, 65, 70, 71, 76, 78, 79, 83, 84, 87, 88, 89, 91, 94, 100, 101, 102, 105, 107, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 126, 127, 128, 129, 135, 140, 144, 145, 146, 154, 155, 156, 157, 158, 161, 163, 166, 167, 170, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 184, 185, 188, 189, 190, 191, 192, 193, 215, 267, 268, 269, 289, 290, 302, 305, 307, 308, 313, 319, 320, 322, 324, 329, 330, 332, 336, 337, 340, 341, 343, 347, 348, 349, 357, 391, 393, 394, 396, 397, 398, 400, 403, 406, 407, 408, 409, 410, 413, 414, 417, 422, 423, 424, 435, 436, 438, 439, 456, 466, 467, 468, 485, 486, 487], "ordertyp": [4, 391, 396, 439], "ordin": 169, "ordinari": [139, 159], "org": [354, 462, 466, 467, 473, 478], "organ": 478, "orient": [344, 421], "origin": [12, 13, 22, 23, 24, 25, 26, 27, 28, 41, 44, 45, 46, 49, 51, 52, 53, 59, 60, 63, 64, 65, 70, 71, 79, 87, 88, 89, 91, 94, 117, 118, 119, 120, 121, 122, 123, 126, 128, 129, 135, 140, 144, 145, 146, 154, 155, 156, 157, 158, 167, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 185, 187, 188, 189, 190, 191, 192, 193, 201, 203, 205, 329, 330, 332, 338, 340, 341, 346, 347, 348, 393, 394, 396, 397, 398, 399, 406, 407, 408, 409, 413, 414, 417, 422, 423, 435, 436, 437, 464, 469, 474, 484, 487], "ortho": [95, 96, 97, 99, 100, 101, 102, 104, 105, 106, 107, 108, 109, 110], "orthonorm": 168, "oserror": 172, "other": [6, 12, 13, 21, 22, 23, 24, 25, 26, 27, 28, 34, 44, 45, 46, 49, 50, 52, 53, 54, 55, 59, 60, 61, 63, 64, 65, 70, 71, 77, 79, 83, 87, 88, 89, 91, 94, 100, 101, 102, 105, 107, 117, 118, 119, 120, 121, 122, 123, 126, 128, 129, 135, 136, 140, 144, 145, 146, 154, 155, 156, 157, 158, 166, 167, 171, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 185, 189, 190, 191, 192, 193, 203, 205, 269, 270, 277, 287, 310, 312, 315, 329, 330, 332, 338, 340, 341, 346, 347, 348, 368, 385, 386, 393, 394, 397, 398, 406, 407, 408, 409, 413, 414, 417, 422, 423, 428, 435, 436, 456, 458, 462, 466, 475, 478, 481, 486], "otherwis": [15, 29, 30, 34, 35, 41, 66, 67, 77, 139, 171, 186, 187, 195, 196, 199, 200, 201, 202, 203, 205, 269, 289, 319, 338, 346, 380, 391, 396, 403, 419, 426, 427, 428, 440, 444, 458, 474, 478], "ouput": 458, "our": [462, 469, 473, 475, 480, 486, 487], "out": [12, 13, 14, 16, 17, 19, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 34, 37, 42, 43, 44, 45, 46, 47, 52, 53, 54, 55, 57, 58, 59, 60, 61, 63, 64, 65, 67, 68, 69, 70, 71, 72, 73, 77, 79, 80, 83, 85, 86, 87, 88, 89, 91, 94, 95, 96, 97, 99, 100, 101, 102, 104, 105, 106, 107, 108, 109, 110, 114, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 128, 129, 130, 131, 135, 136, 137, 139, 140, 142, 144, 145, 146, 147, 148, 149, 152, 153, 154, 155, 156, 157, 158, 166, 169, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 189, 190, 191, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 263, 264, 265, 266, 271, 272, 273, 278, 279, 282, 290, 296, 297, 298, 303, 316, 318, 323, 324, 326, 329, 330, 332, 333, 334, 335, 337, 338, 340, 341, 342, 343, 346, 347, 348, 349, 350, 351, 352, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 375, 376, 377, 378, 379, 382, 383, 384, 385, 386, 387, 388, 389, 390, 392, 393, 394, 397, 398, 401, 406, 407, 408, 409, 410, 411, 413, 414, 416, 417, 418, 420, 421, 422, 423, 424, 426, 435, 436, 440, 441, 444, 445, 446, 465, 467, 473, 478, 483, 486, 487], "outcom": [357, 487], "outer": [0, 3, 8, 84], "outermost": [48, 54], "outlin": 474, "output": [12, 13, 14, 15, 16, 17, 19, 21, 22, 23, 24, 25, 26, 27, 28, 42, 43, 44, 45, 46, 47, 48, 52, 53, 55, 57, 59, 60, 61, 63, 64, 65, 68, 69, 70, 71, 77, 78, 79, 80, 83, 84, 85, 87, 88, 89, 91, 93, 94, 95, 96, 97, 99, 100, 101, 102, 105, 106, 107, 113, 117, 118, 119, 120, 121, 122, 123, 126, 128, 129, 130, 131, 135, 136, 137, 138, 139, 140, 141, 142, 144, 145, 146, 152, 153, 154, 155, 156, 157, 158, 166, 169, 171, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 184, 185, 186, 187, 188, 189, 190, 191, 193, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 320, 329, 330, 332, 335, 336, 338, 340, 341, 342, 346, 347, 348, 349, 350, 352, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 372, 375, 376, 377, 378, 379, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 392, 393, 394, 395, 397, 398, 399, 401, 404, 406, 407, 408, 409, 413, 414, 417, 418, 422, 423, 424, 425, 426, 435, 436, 437, 438, 440, 441, 447, 456, 458, 465, 474, 475, 483, 487], "outsid": [54, 55, 78, 132, 468], "over": [12, 13, 14, 16, 17, 19, 22, 23, 24, 25, 26, 27, 28, 41, 44, 45, 46, 52, 53, 59, 60, 63, 64, 65, 68, 69, 70, 71, 79, 80, 83, 84, 87, 88, 89, 91, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 114, 117, 118, 119, 120, 121, 122, 123, 126, 128, 129, 132, 135, 139, 140, 144, 145, 146, 154, 155, 156, 157, 158, 167, 171, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 185, 186, 188, 189, 190, 191, 193, 197, 198, 199, 200, 204, 206, 288, 289, 290, 303, 316, 329, 330, 332, 336, 340, 341, 342, 344, 347, 348, 350, 354, 369, 371, 376, 377, 379, 385, 386, 389, 393, 394, 397, 398, 399, 406, 407, 408, 409, 413, 414, 417, 418, 420, 421, 422, 423, 424, 435, 436, 438, 440, 458, 473, 474, 487], "overal": [458, 465, 474, 487], "overcom": 320, "overflow": [21, 117, 312], "overhead": [458, 474, 481], "overlap": 468, "overrid": [86, 125, 334, 446, 477], "overridden": [1, 67], "oversubscrib": 475, "overwrite_input": [187, 201, 203, 205, 338, 346], "own": [287, 310, 367, 462, 487], "owndata": 287, "owner": [287, 310, 478], "p": [89, 188, 350, 354, 357, 363, 364, 367, 427, 487], "pack": [336, 391, 438, 456], "packag": [203, 205, 338, 346, 469, 472, 475, 481, 487], "packbit": [0, 3, 8], "pad": [8, 61, 95, 96, 97, 99, 100, 101, 102, 104, 105, 107, 108, 110, 336, 438], "pade": 164, "page": [354, 462, 476], "pair": [84, 95, 96, 97, 99, 100, 101, 102, 104, 105, 106, 107, 108, 109, 110, 119], "pairwis": 471, "pairwise_dist": 471, "paper": [203, 205, 338, 346, 468], "parallel": [29, 30, 68, 69, 95, 96, 97, 99, 100, 101, 102, 104, 105, 106, 107, 108, 109, 110, 160, 161, 162, 163, 197, 198, 463, 474, 479, 487], "paramet": [1, 2, 6, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 258, 269, 277, 284, 285, 286, 289, 290, 293, 308, 310, 319, 320, 321, 324, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 375, 376, 377, 378, 379, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 433, 434, 435, 436, 437, 438, 439, 440, 441, 443, 444, 445, 446, 465, 486, 487], "parameter": [349, 350, 352, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 378, 383, 384, 385, 386, 387, 388, 389, 390], "parenthes": 166, "pareto": [0, 3, 8], "parse_arg": 487, "parser": 487, "part": [18, 57, 137, 142, 143, 149, 150, 160, 161, 162, 163, 191, 292, 306, 392, 401, 411, 462], "parti": 477, "partial": [95, 96, 97, 99, 100, 101, 102, 104, 105, 106, 107, 108, 109, 110, 187, 201, 472, 487], "particular": 478, "particularli": 487, "partit": [0, 3, 8, 31, 68, 267, 474, 481, 487], "pass": [14, 16, 17, 18, 19, 34, 48, 152, 172, 183, 186, 194, 199, 202, 204, 269, 342, 353, 418, 428, 463, 465, 481, 485, 487], "past": 487, "patch": 484, "path": [84, 172, 284, 320, 463], "pathlib": [172, 284, 320], "pathlik": 172, "pattern": [41, 458, 486], "pcg64": [3, 8], "pcg64dxsm": [3, 8], "pcolor": 473, "pdf": [385, 466], "peak": [360, 385], "peebl": [354, 367], "pend": [34, 425], "pentadiagon": 468, "per": [458, 463, 465, 469, 474, 487], "percent": 368, "percentag": [458, 475, 483, 487], "percentil": [0, 3, 8, 203], "perform": [14, 19, 31, 37, 41, 54, 55, 61, 77, 83, 96, 97, 101, 102, 107, 110, 114, 159, 164, 183, 186, 200, 206, 290, 342, 344, 418, 440, 441, 466, 467, 469, 472, 474, 475, 482, 485, 487], "performa": 487, "perhap": 78, "period": 468, "perlmutt": 487, "permiss": [54, 466, 467, 473, 478], "permit": [462, 469, 478, 486], "permut": [3, 8, 324, 427], "permute_dim": [3, 8], "person": [462, 478], "peyton": 354, "pg": 167, "phase": 487, "philox": [3, 8], "pi": [18, 387, 466, 468, 474], "pick": [463, 469], "pickl": [172, 253, 258, 284, 285], "piec": 487, "piecewis": [3, 8], "pil": [469, 487], "pillow": 487, "pin": 475, "pinv": [3, 8], "pip": 477, "pipe": 483, "pixel": [82, 134, 402, 443, 473], "place": [0, 3, 8, 14, 15, 16, 17, 19, 55, 58, 68, 69, 72, 90, 111, 138, 186, 187, 194, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 302, 313, 324, 338, 342, 343, 344, 346, 396, 399, 401, 416, 418, 420, 426, 440, 454, 479], "plai": 487, "plain": [458, 465, 467], "plan": 465, "plane": [18, 400], "platform": [68, 69, 197, 198, 204, 206, 342, 375, 418, 477], "pleas": [36, 81, 133, 188, 432, 442, 462, 472, 475, 477], "plot": [466, 468, 469, 471, 487], "plt": [466, 468, 469, 471, 473, 487], "plu": 175, "png": [469, 487], "point": [21, 42, 47, 68, 69, 80, 83, 95, 99, 100, 104, 105, 107, 108, 127, 130, 131, 141, 153, 165, 184, 186, 194, 197, 198, 200, 280, 308, 330, 373, 386, 401, 403, 424, 456, 458, 463, 467, 468, 471, 474, 480, 487], "poisson": [0, 3, 8, 354], "poisson_process": 354, "poli": [3, 8], "poly1d": [3, 8], "polyadd": [3, 8], "polyd": [3, 8], "polydiv": [3, 8], "polyfit": [3, 8], "polyint": [3, 8], "polymul": [3, 8], "polysub": [3, 8], "polyv": [3, 8], "pool": 475, "popul": 371, "port": [374, 474], "portion": [478, 487], "posinf": 194, "posit": [0, 3, 8, 15, 18, 21, 43, 54, 76, 90, 93, 100, 101, 102, 105, 117, 145, 148, 159, 165, 192, 194, 315, 349, 357, 360, 368, 370, 373, 399, 401, 404, 426, 467, 487], "possess": [6, 277], "possibl": [12, 13, 22, 23, 24, 25, 26, 27, 28, 39, 40, 44, 45, 46, 47, 52, 53, 59, 60, 63, 64, 65, 70, 71, 79, 84, 87, 88, 89, 91, 94, 117, 118, 119, 120, 121, 122, 123, 126, 128, 129, 132, 135, 140, 144, 145, 146, 154, 155, 156, 157, 158, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 185, 189, 190, 191, 193, 269, 287, 329, 330, 332, 340, 341, 347, 348, 393, 394, 396, 397, 398, 406, 407, 408, 409, 412, 413, 414, 417, 422, 423, 427, 435, 436, 462, 465, 475, 478, 479, 481, 486], "possibli": [321, 480], "post": 475, "potenti": [280, 480, 486], "pow": [3, 8, 252], "power": [0, 3, 8, 117, 165, 487], "pp": [203, 205, 338, 346, 367], "pr": 462, "practic": [475, 485], "pre": [34, 425, 462, 463], "precis": [41, 67, 68, 69, 83, 117, 183, 197, 198, 204, 206, 312, 320, 321, 342, 375, 418, 426, 458, 480, 487], "predict": 474, "prefer": [80, 475], "preload": 458, "preload_cudalib": 447, "prepend": [48, 77, 138, 184, 425], "prescrib": 475, "present": [16, 17, 80, 139, 199, 202, 424, 441], "preserv": [14, 19, 34, 38, 39, 40, 55, 57, 77, 83, 114, 115, 116, 161, 163, 184, 187, 201, 269, 290, 308, 327, 403, 426], "press": 167, "pressur": 269, "prevent": [462, 487], "previou": [41, 462], "previous": [287, 487], "price": [470, 487], "primarili": 48, "principl": [354, 367], "print": [78, 458, 465, 466, 467, 468, 471, 472, 473, 483, 487, 488], "printabl": 84, "printopt": [3, 8], "prior": [77, 463, 478, 487], "prior_distance_sum": 471, "probabl": [2, 67, 132, 187, 201, 349, 350, 354, 355, 357, 364, 367, 385, 387, 390], "problem": [320, 462, 472, 474, 475, 481, 486, 487], "proc": 475, "proce": 487, "process": [42, 159, 354, 464, 475, 486, 487], "processor": [465, 474, 475, 486, 487], "procur": 478, "prod": [0, 3, 8, 204, 312], "produc": [6, 287, 319, 320, 344, 421, 473, 480, 487], "product": [68, 80, 84, 139, 152, 166, 184, 197, 204, 206, 282, 303, 312, 335, 342, 424, 441, 456, 467, 474, 476, 478, 487], "product_along_axi": 342, "prof": 474, "profil": 468, "profit": 478, "program": [463, 474, 475, 476, 479, 484, 487, 488], "project": [447, 462, 466, 477], "promot": [112, 117, 184, 425, 478], "prone": [474, 487], "propag": [68, 69, 197, 198, 480], "proper": [456, 474], "properli": [310, 487], "properti": [6, 207, 270, 277, 280, 283, 287, 288, 292, 295, 299, 300, 306, 311, 312, 315, 324, 452], "proport": 390, "propos": 462, "protocol": 428, "prototyp": 86, "provid": [1, 8, 12, 13, 22, 23, 24, 25, 26, 27, 28, 29, 30, 44, 45, 46, 52, 53, 54, 58, 59, 60, 63, 64, 65, 70, 71, 79, 81, 82, 83, 84, 87, 88, 89, 91, 94, 117, 118, 119, 120, 121, 122, 123, 126, 128, 129, 132, 134, 135, 140, 144, 145, 146, 147, 148, 154, 155, 156, 157, 158, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 184, 185, 186, 189, 190, 191, 193, 195, 196, 200, 204, 211, 310, 324, 329, 330, 332, 340, 341, 347, 348, 372, 373, 375, 393, 394, 397, 398, 402, 406, 407, 408, 409, 413, 414, 416, 417, 420, 422, 423, 435, 436, 437, 438, 443, 462, 475, 476, 478, 486, 487], "pseudonym": 462, "ptp": [3, 8], "public": 462, "publish": [475, 478], "pull": [1, 353, 462, 463], "purpos": [167, 478], "put": [0, 3, 8, 339, 344, 345, 466, 487], "put_along_axi": [0, 3, 8], "put_result": 466, "putmask": [0, 3, 8], "pwd": 463, "py": [463, 465, 466, 475, 477, 478, 479, 483, 484, 487, 488], "pyarray_resolvewritebackifcopi": [287, 310], "pypi": 487, "pyplot": [466, 468, 469, 471, 473, 487], "python": [21, 119, 280, 293, 312, 319, 320, 321, 463, 466, 467, 473, 476, 477, 479, 480, 481, 486, 487, 488], "python3": 463, "q": [168, 203, 205, 338, 346], "qo": 487, "qr": [0, 3, 8], "quadrant": 27, "quadrat": 487, "quantil": [0, 3, 8, 203, 205, 338], "quantiti": 487, "queri": [475, 487], "question": [73, 476, 480], "quick": [320, 484], "quickli": [152, 467], "quicksort": [32, 410], "r": [82, 134, 168, 203, 205, 338, 346, 367, 402, 443, 466, 487], "r0": 138, "rad2deg": [0, 3, 8, 71], "radian": [3, 8, 18, 70, 71, 347], "raindrop": 354, "rainstorm": 354, "rais": [14, 16, 17, 19, 41, 43, 48, 54, 57, 76, 78, 111, 117, 160, 161, 162, 163, 165, 167, 168, 169, 170, 172, 186, 187, 195, 196, 199, 201, 202, 203, 204, 205, 271, 287, 304, 318, 338, 341, 342, 343, 346, 352, 370, 412, 415, 418, 420, 426], "ram": 488, "ran": 475, "rand": [0, 3, 8, 487], "randint": [0, 3, 8, 375], "randn": [0, 3, 8, 487], "random": [0, 447, 456, 471, 487], "random_integ": [0, 3, 8], "random_sampl": [0, 3, 8, 374, 377, 379, 386], "random_se": 471, "randomli": [359, 373, 471], "randomst": [3, 8], "ranf": [3, 8], "rang": [18, 21, 54, 78, 132, 188, 343, 363, 368, 420, 456, 471, 472, 473, 474, 481, 486, 487], "rank": [92, 169, 390, 474, 477, 487], "raphson": 470, "rare": 462, "rate": [354, 466, 487], "rather": [21, 76, 287, 458, 481, 486], "ratio": 355, "ration": 456, "ravel": [0, 3, 8, 113, 167, 289], "ravel_multi_index": [3, 8], "raw": 319, "rawdata": 258, "rayleigh": [0, 3, 8], "rbf": 469, "re": [20, 39, 40, 58, 113, 399, 487], "reach": [48, 364, 462], "read": [172, 284, 287, 391, 396, 458, 469, 487], "readi": 462, "readonli": 51, "real": [0, 3, 8, 18, 35, 99, 105, 106, 107, 108, 109, 110, 137, 149, 159, 161, 163, 194, 401, 411, 456, 462, 474], "real_if_clos": [3, 8], "realli": [95, 100, 105, 106, 108, 109, 462, 486], "realm": 485, "realm_default_arg": 479, "rearrang": 456, "reason": [34, 107, 462], "rebuild": [82, 134, 402, 443], "recarrai": [3, 8], "receiv": 474, "reciproc": [0, 3, 8], "recommend": [2, 54, 481, 485, 487], "reconstruct": 437, "record": [3, 8, 462], "recov": 320, "recreat": 321, "recurs": 77, "recv": 474, "recv_typ": 474, "red": [468, 471], "redistribut": [462, 478], "reduc": [14, 16, 17, 19, 29, 30, 41, 186, 187, 188, 195, 196, 199, 200, 201, 202, 203, 204, 205, 206, 269, 338, 342, 346, 418, 440, 468, 474, 475, 487], "reduct": [14, 19, 203, 205, 338, 346, 440, 485, 487], "refer": [14, 19, 36, 49, 51, 68, 69, 81, 93, 96, 97, 101, 102, 107, 110, 133, 147, 148, 167, 186, 188, 197, 198, 200, 203, 205, 211, 263, 264, 265, 266, 267, 268, 271, 272, 273, 274, 275, 281, 282, 287, 296, 297, 298, 301, 302, 303, 304, 305, 307, 313, 314, 315, 316, 317, 318, 323, 325, 326, 338, 342, 346, 354, 367, 388, 391, 396, 401, 418, 428, 432, 440, 442, 471, 474, 475, 476, 486, 487], "referenc": 310, "reflect": [287, 475], "regard": 477, "regardless": [19, 133, 442, 475], "region": 475, "reinterpret": 327, "reject": 462, "rel": [15, 67, 141], "relabel": 471, "relat": [349, 474, 486, 487], "relationship": [67, 388], "releas": [462, 478, 481, 487], "relev": [171, 312], "reli": 61, "remain": [12, 13, 19, 22, 23, 24, 25, 26, 27, 28, 44, 45, 46, 52, 53, 59, 60, 63, 64, 65, 70, 71, 79, 87, 88, 89, 91, 94, 110, 117, 118, 119, 120, 121, 122, 123, 126, 128, 129, 132, 135, 140, 144, 145, 146, 154, 155, 156, 157, 158, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 185, 189, 190, 191, 192, 193, 203, 205, 287, 329, 330, 332, 338, 340, 341, 346, 347, 348, 368, 393, 394, 396, 397, 398, 406, 407, 408, 409, 413, 414, 417, 422, 423, 435, 436], "remaind": [0, 3, 8, 119, 122, 190], "remot": 487, "remov": [29, 30, 72, 76, 90, 184, 195, 196, 199, 314, 342, 415, 418, 426, 456, 474, 480], "reopen": 462, "reorder": [114, 192, 290], "rep": 425, "repeat": [0, 3, 8, 67, 96, 97, 101, 102, 107, 111, 160, 161, 162, 163, 165, 188, 339, 343, 345, 425, 487], "repeated_arrai": 395, "repeatedli": [473, 487], "repetit": [395, 425], "replac": [55, 194, 197, 198, 304, 343, 420, 467, 475, 476, 487, 488], "replic": 425, "repo": 462, "report": 458, "report_coverag": 447, "report_dump_callstack": 447, "report_dump_csv": 447, "repositori": [462, 474], "repr": 254, "repres": [41, 67, 83, 100, 138, 147, 148, 188, 336, 360, 438, 440, 468, 469, 471, 474, 475, 480], "represent": [84, 138, 194, 454], "reproduc": [471, 478], "req": 474, "request": [354, 369, 462, 471, 474, 475], "requir": [3, 8, 34, 172, 194, 458, 463, 464, 466, 467, 473, 474, 475, 477, 483, 485, 486], "requri": 487, "res2": [39, 40], "rese": 380, "research": [466, 474, 487], "resembl": 384, "reserv": [465, 475, 478, 487], "reset": 6, "reshap": [0, 3, 8, 82, 90, 311, 324, 402, 443, 475, 480], "reshaped_arrai": 396, "resid": 184, "resiz": [3, 8, 90, 487], "resolut": [468, 474], "resourc": [466, 475, 485, 488], "respect": [61, 127, 184, 310, 468, 475, 487], "respons": [462, 474, 487], "rest": 36, "restor": 399, "restrict": 478, "result": [6, 12, 13, 14, 16, 17, 18, 19, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 34, 41, 43, 44, 45, 46, 52, 53, 54, 55, 58, 59, 60, 63, 64, 65, 67, 68, 69, 70, 71, 73, 76, 77, 78, 79, 84, 86, 87, 88, 89, 90, 91, 92, 94, 106, 109, 112, 117, 118, 119, 120, 121, 122, 123, 125, 126, 128, 129, 132, 135, 138, 139, 140, 144, 145, 146, 147, 148, 154, 155, 156, 157, 158, 160, 162, 167, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 269, 308, 320, 327, 329, 330, 332, 334, 335, 336, 337, 338, 340, 341, 342, 344, 346, 347, 348, 352, 372, 375, 376, 377, 379, 384, 393, 394, 396, 397, 398, 401, 403, 406, 407, 408, 409, 410, 412, 413, 414, 416, 417, 418, 420, 421, 422, 423, 424, 425, 426, 428, 435, 436, 437, 440, 441, 446, 458, 465, 466, 467, 468, 473, 474, 480, 481, 487], "result_typ": [3, 8, 466], "ret": 38, "retain": [12, 13, 22, 23, 24, 25, 26, 27, 28, 44, 45, 46, 52, 53, 59, 60, 63, 64, 65, 70, 71, 79, 87, 88, 89, 91, 94, 117, 118, 119, 120, 121, 122, 123, 126, 128, 129, 135, 140, 144, 145, 146, 154, 155, 156, 157, 158, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 185, 189, 190, 191, 193, 329, 330, 332, 340, 341, 347, 348, 393, 394, 397, 398, 406, 407, 408, 409, 413, 414, 417, 422, 423, 435, 436, 478], "retstep": 171, "return": [2, 6, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 208, 209, 210, 211, 212, 214, 215, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 250, 251, 252, 254, 255, 256, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 272, 273, 275, 277, 281, 282, 285, 288, 289, 290, 293, 296, 297, 298, 301, 303, 305, 307, 308, 312, 316, 317, 319, 321, 322, 323, 324, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 340, 341, 342, 344, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 443, 444, 445, 446, 454, 466, 467, 469, 471, 472, 473, 475, 485, 487], "return_count": 437, "return_index": 437, "return_invers": 437, "retval": 41, "revers": [78, 114, 115, 116, 290, 324, 336, 391, 400, 427, 438], "review": [464, 475, 477], "rf": 487, "rfft": [0, 3, 8, 105, 110], "rfft2": [0, 3, 8, 106], "rfftfreq": [3, 8], "rfftn": [0, 3, 8, 107, 108, 109], "rh": [282, 468], "right": [55, 57, 76, 78, 115, 135, 160, 161, 308, 385, 397, 403, 426, 462, 468, 474, 477, 478], "right_shift": [0, 3, 8], "rightmost": 132, "rint": [0, 3, 8], "rippl": 42, "risk": [466, 474, 487], "river": 474, "rk_hypergeometric_hrua": 478, "rk_hypergeometric_hyp": 478, "rk_triangular": 478, "rm": 487, "rn": 138, "rng": 471, "rober": 487, "robert": 478, "roll": [0, 3, 8], "rollaxi": [3, 8], "root": [3, 8, 52, 413, 463], "rot90": [0, 3, 8], "rotat": 400, "roughli": 487, "round": [0, 21, 386, 398, 456], "rounded_arrai": 401, "roundoff": 119, "routin": [447, 454, 458, 463], "row": [34, 67, 93, 115, 116, 136, 166, 289, 315, 391, 402, 428, 430, 439, 442, 443, 469, 474, 487], "row_stack": [3, 8], "rowvar": 67, "rsqrt2pi": 466, "rst": 315, "rt": 487, "rtol": [15, 141], "rule": [21, 41, 48, 112, 368, 481], "run": [183, 357, 462, 463, 464, 473, 475, 476, 477, 479, 483, 484, 485, 486, 488], "run_kmean": 471, "runfil": 487, "runtim": [199, 202, 458, 465, 474, 475, 479, 481, 484, 486], "runtimeerror": 287, "runtimewarn": [466, 472, 475], "rv": 478, "s0": 487, "s_0": 487, "s_0n": 487, "safe": [58, 83, 172, 184, 269], "sai": [475, 481], "salloc": 487, "same": [14, 15, 16, 17, 19, 20, 29, 30, 31, 32, 34, 35, 41, 43, 48, 54, 56, 58, 61, 67, 68, 69, 76, 77, 78, 82, 86, 92, 100, 101, 102, 107, 125, 127, 132, 134, 147, 148, 149, 165, 166, 186, 187, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 269, 283, 307, 308, 312, 315, 322, 324, 327, 334, 336, 337, 338, 339, 342, 345, 346, 391, 395, 399, 401, 402, 403, 404, 410, 411, 416, 418, 420, 424, 426, 429, 431, 434, 438, 439, 440, 443, 446, 462, 466, 467, 469, 471, 472, 473, 475, 477, 484, 486, 487], "same_kind": [12, 13, 22, 23, 24, 25, 26, 27, 28, 44, 45, 46, 52, 53, 58, 59, 60, 63, 64, 65, 70, 71, 79, 83, 87, 88, 89, 91, 94, 117, 118, 119, 120, 121, 122, 123, 126, 128, 129, 135, 140, 144, 145, 146, 154, 155, 156, 157, 158, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 184, 185, 189, 190, 191, 193, 269, 329, 330, 332, 340, 341, 347, 348, 393, 394, 397, 398, 406, 407, 408, 409, 413, 414, 417, 422, 423, 435, 436], "sampl": [42, 47, 67, 103, 127, 130, 132, 153, 171, 203, 205, 338, 346, 349, 350, 352, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 375, 376, 377, 378, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 447, 456], "satisfi": [34, 78, 92, 269, 390, 404, 472, 475, 486], "save": [3, 8, 187, 201, 203, 205, 338, 346, 458, 462, 468, 483], "savetxt": [3, 8], "savez": [3, 8], "savez_compress": [3, 8], "scalabl": [474, 475, 486, 487], "scalar": [12, 13, 15, 16, 17, 18, 22, 23, 24, 25, 26, 27, 28, 35, 38, 44, 45, 46, 48, 52, 53, 55, 59, 60, 63, 64, 65, 70, 71, 77, 79, 80, 87, 88, 89, 91, 94, 111, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 132, 135, 137, 139, 140, 141, 144, 145, 146, 151, 154, 155, 156, 157, 158, 169, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 188, 189, 190, 191, 193, 199, 202, 203, 204, 205, 206, 286, 293, 308, 321, 328, 329, 330, 332, 338, 340, 341, 342, 346, 347, 348, 349, 350, 352, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 378, 381, 383, 384, 385, 386, 387, 388, 389, 390, 392, 393, 394, 397, 398, 403, 404, 406, 407, 408, 409, 413, 414, 417, 418, 420, 422, 423, 424, 435, 436, 454, 485, 486], "scale": [84, 95, 96, 97, 99, 100, 101, 102, 104, 105, 106, 107, 108, 109, 110, 354, 356, 358, 360, 361, 367, 368, 378, 382, 383, 388, 389, 469, 474, 475, 476, 486, 487], "scatter": [471, 487], "schedul": [466, 467, 473, 475], "scheme": 470, "schole": [470, 477], "scientif": [474, 475, 487], "scientist": 474, "scikit": 463, "scipi": [164, 368, 469, 487], "scp": 487, "script": [463, 465, 475, 479, 484, 488], "seamlessli": 475, "search": [84, 447, 456, 476], "searchsort": [0, 3, 8, 78], "second": [41, 48, 61, 76, 80, 82, 84, 101, 102, 117, 127, 132, 133, 134, 147, 148, 183, 184, 188, 335, 341, 400, 402, 411, 419, 424, 426, 441, 443, 468, 486, 487], "second_cond": 486, "section": [34, 36, 97, 102, 107, 110, 475, 487], "secur": [172, 487], "see": [12, 13, 15, 16, 17, 22, 23, 24, 25, 26, 27, 28, 34, 44, 45, 46, 48, 52, 53, 55, 59, 60, 63, 64, 65, 67, 68, 69, 70, 71, 73, 75, 79, 83, 87, 88, 89, 91, 94, 95, 96, 97, 99, 100, 101, 102, 104, 105, 106, 107, 108, 109, 110, 117, 118, 119, 120, 121, 122, 123, 126, 128, 129, 132, 135, 140, 141, 144, 145, 146, 154, 155, 156, 157, 158, 167, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 185, 188, 189, 190, 191, 193, 197, 198, 199, 202, 204, 206, 269, 277, 310, 324, 329, 330, 332, 340, 341, 342, 347, 348, 372, 375, 393, 394, 397, 398, 406, 407, 408, 409, 413, 414, 417, 418, 422, 423, 430, 431, 433, 434, 435, 436, 437, 440, 452, 454, 463, 465, 466, 467, 468, 469, 472, 473, 475, 477, 478, 480, 486, 487, 488], "seed": [0, 1, 3, 8, 353, 456, 471], "seedsequ": [3, 8], "seek": [172, 472], "seem": 462, "seen": 349, "segment": 287, "seldom": 117, "select": [0, 3, 8, 16, 17, 57, 166, 199, 273, 359, 415, 420, 440, 471, 474, 487], "selectkind": [31, 337], "selector": 164, "self": [6, 207, 208, 209, 210, 211, 212, 214, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 250, 251, 252, 254, 255, 256, 257, 259, 260, 261, 262, 273, 287], "sell": 478, "semant": 132, "send": 474, "send_typ": 474, "sens": [82, 134, 402, 443, 480], "sep": 320, "separ": [83, 194, 320, 401, 463, 465, 483, 486, 487], "sequenc": [18, 31, 34, 39, 40, 48, 50, 54, 56, 58, 82, 84, 96, 97, 101, 102, 106, 107, 109, 110, 132, 134, 138, 152, 166, 171, 187, 192, 201, 203, 205, 258, 337, 338, 339, 346, 369, 400, 402, 404, 416, 424, 425, 443, 481], "seri": 363, "serial": 463, "servic": [465, 478], "session": 487, "set": [12, 13, 14, 16, 17, 19, 22, 23, 24, 25, 26, 27, 28, 29, 30, 41, 44, 45, 46, 52, 53, 59, 60, 63, 64, 65, 67, 70, 71, 74, 79, 87, 88, 89, 91, 94, 117, 118, 119, 120, 121, 122, 123, 126, 128, 129, 135, 136, 140, 144, 145, 146, 154, 155, 156, 157, 158, 167, 171, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 185, 186, 187, 189, 190, 191, 193, 195, 196, 199, 200, 201, 202, 203, 204, 205, 206, 257, 269, 271, 287, 310, 311, 327, 329, 330, 332, 338, 340, 341, 342, 345, 346, 347, 348, 359, 368, 393, 394, 397, 398, 406, 407, 408, 409, 413, 414, 417, 418, 422, 423, 435, 436, 440, 447, 456, 462, 463, 468, 472, 474, 475, 480, 481, 486, 487], "set_bit_gener": [3, 8], "set_devic": 474, "set_printopt": [3, 8], "set_stat": [3, 8], "set_titl": [469, 487], "set_xtick": [469, 487], "set_ytick": [469, 487], "setbufs": [3, 8], "setdevic": 474, "setdiff1d": [3, 8], "seterr": [3, 8], "seterrcal": [3, 8], "setfield": [0, 8], "setflag": [0, 8, 287], "setup": 472, "setxor1d": [3, 8], "sever": [463, 475, 487], "sfc64": [3, 8], "sh": [463, 487], "shall": 478, "shallow": 474, "shape": [0, 2, 3, 4, 6, 8, 12, 13, 14, 16, 17, 19, 20, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 40, 41, 43, 44, 45, 46, 48, 50, 51, 52, 53, 54, 55, 57, 58, 59, 60, 63, 64, 65, 68, 69, 70, 71, 74, 76, 77, 78, 79, 80, 82, 85, 86, 87, 88, 89, 90, 91, 93, 94, 96, 97, 98, 101, 102, 103, 106, 107, 109, 110, 114, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 132, 134, 135, 138, 139, 140, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 164, 165, 166, 169, 170, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 193, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 258, 269, 277, 287, 290, 307, 308, 312, 324, 328, 329, 330, 332, 333, 334, 336, 337, 338, 340, 341, 342, 344, 345, 346, 347, 348, 349, 350, 352, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 375, 376, 377, 378, 379, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 393, 394, 395, 396, 397, 398, 399, 401, 402, 403, 406, 407, 408, 409, 410, 411, 413, 414, 415, 416, 417, 418, 420, 422, 423, 424, 425, 426, 428, 429, 434, 435, 436, 438, 439, 440, 441, 443, 444, 445, 446, 456, 467, 471, 485, 486, 487], "share": [277, 474, 475, 487], "shares_memori": [3, 8], "sharp": 487, "sharper": 360, "shift": [98, 103, 156, 368, 397, 399], "short": [3, 8, 287, 319], "shorter": [99, 105, 343], "should": [29, 30, 34, 36, 48, 54, 67, 76, 77, 83, 84, 100, 101, 102, 107, 152, 184, 192, 195, 196, 269, 336, 396, 420, 426, 438, 439, 441, 458, 466, 467, 468, 473, 481, 486, 487], "show": [319, 463, 468, 471, 483, 487], "show_config": [3, 8], "show_runtim": [3, 8], "showcas": 487, "shown": [468, 472, 484, 486, 487], "shuffl": [3, 8], "side": [78, 127, 308, 403, 468, 474], "sigma": [362, 487], "sign": [0, 3, 8, 15, 54, 63, 206, 342, 372, 375, 418], "signal": [42, 99, 104, 354, 367, 469, 487], "signatur": [183, 184, 462], "signbit": [0, 3, 8], "signedinteg": [3, 8], "signific": 474, "significantli": [466, 472, 474, 475, 487], "signoff": 462, "similar": [34, 42, 183, 293, 360, 480, 481, 487], "similarli": 474, "simpl": [67, 83, 321, 456, 467, 474, 487, 488], "simple_mm": 487, "simpler": [475, 487], "simplest": 465, "simpli": [132, 324, 462, 463, 487], "simplifi": [277, 368, 474, 487], "simul": 474, "simultan": [287, 399], "sin": [0, 3, 8, 468], "sinc": [3, 8, 105, 290, 321, 344, 468, 469, 475, 480, 486, 487], "sine": [24, 25, 408, 409, 468], "sing": 167, "singl": [2, 3, 8, 14, 16, 17, 19, 41, 48, 49, 50, 51, 56, 67, 84, 114, 115, 116, 127, 141, 166, 168, 169, 170, 172, 186, 188, 199, 200, 203, 205, 206, 284, 287, 288, 290, 293, 302, 310, 320, 338, 342, 346, 349, 350, 352, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 375, 376, 377, 378, 379, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 400, 415, 418, 424, 440, 458, 472, 475, 476, 486], "singleton": 90, "singular": [167, 169, 170], "sinh": [0, 3, 8], "site": 483, "situat": [354, 462, 475], "sixth": 468, "size": [2, 6, 14, 16, 17, 19, 21, 29, 30, 36, 41, 43, 48, 57, 61, 68, 69, 74, 76, 78, 84, 92, 127, 167, 171, 172, 183, 186, 187, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 293, 295, 320, 338, 339, 342, 345, 346, 349, 350, 352, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 372, 374, 375, 376, 377, 378, 379, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 399, 418, 433, 438, 440, 458, 468, 474, 475, 481, 487], "skbuild_build_opt": 463, "skip": 315, "slice": [16, 17, 57, 72, 164, 195, 196, 197, 198, 199, 202, 204, 206, 273, 287, 344, 421, 458, 468, 474], "slide": 487, "slightli": [47, 164], "slogdet": [3, 8], "slower": 486, "slowest": [391, 396], "small": [15, 164, 194, 473, 475, 481, 484, 486], "smaller": [55, 67, 77, 95, 96, 97, 100, 101, 102, 104, 107, 108, 110, 119, 132, 187, 201, 203, 205, 338, 339, 345, 346, 458], "smallest": [167, 368], "smi": 475, "snippet": [188, 474], "so": [19, 48, 77, 117, 119, 132, 150, 171, 188, 287, 310, 320, 336, 425, 471, 478, 486, 487], "sobel": [469, 487], "sobol": 469, "softwar": [466, 467, 473, 475, 477, 478], "solut": [169, 468, 472, 474], "solv": [0, 3, 8, 456, 468, 472, 474, 487], "solver": 474, "some": [21, 34, 92, 270, 287, 310, 320, 388, 444, 458, 462, 463, 467, 473, 475, 480, 481, 486, 487], "somebodi": 462, "sometim": [321, 356, 383, 480], "soon": 462, "sort": [0, 8, 32, 170, 187, 201, 203, 205, 268, 308, 337, 338, 346, 403, 411, 412, 421, 437, 447, 456, 487], "sort_complex": [0, 3, 8], "sorter": [308, 403], "sortsid": 403, "sorttyp": [32, 410], "sourc": [192, 420, 421, 462, 464, 474, 478, 484, 487], "south": [473, 487], "space": [3, 8, 21, 98, 127, 171, 458, 468], "sparingli": 486, "spars": [138, 188], "speak": 167, "spec": 475, "special": [7, 349, 384, 391, 474, 478], "specif": [2, 80, 458, 466, 467, 473, 474, 478, 487], "specifi": [14, 19, 20, 21, 29, 30, 31, 32, 34, 41, 43, 54, 55, 58, 67, 68, 69, 72, 76, 83, 84, 95, 96, 97, 99, 100, 101, 102, 104, 105, 107, 108, 110, 114, 127, 161, 163, 167, 171, 184, 186, 187, 195, 196, 197, 198, 199, 200, 201, 203, 204, 205, 206, 269, 281, 284, 290, 293, 304, 327, 338, 342, 343, 344, 346, 350, 355, 356, 358, 359, 360, 361, 362, 363, 364, 366, 368, 372, 383, 387, 390, 391, 400, 401, 416, 418, 420, 421, 424, 426, 437, 438, 440, 458, 465, 471, 472, 475, 479, 483, 487], "spectral": 468, "spectrum": [98, 99], "speed": [293, 320], "spelt": 48, "spent": 481, "split": [0, 3, 8, 36, 81, 133, 442, 456], "spread": [367, 440, 487], "sqrt": [0, 3, 8, 466, 469, 487], "sqrt_t": 466, "squar": [0, 3, 8, 136, 159, 160, 161, 162, 163, 165, 169, 183, 352, 355, 365, 366, 413, 471], "squeez": [0, 3, 8, 90], "srun": [479, 487], "ssh": 487, "stabl": [32, 164, 410], "stack": [0, 3, 8, 56, 82, 134, 184, 402, 443, 458, 475], "stackoverflow": 480, "stage": 464, "standard": [293, 312, 324, 352, 362, 367, 368, 373, 381, 382, 383, 384, 454, 456, 462, 466, 467, 473, 479, 481, 484, 487], "standard_cauchi": [0, 3, 8], "standard_exponenti": [0, 3, 8], "standard_gamma": [0, 3, 8], "standard_norm": [3, 8, 384], "standard_t": [0, 3, 8], "start": [21, 84, 100, 171, 204, 206, 280, 342, 418, 462, 465, 466, 467, 468, 473, 474, 481, 486, 487], "start_tim": 487, "state": [258, 376, 377, 379, 456], "statement": [469, 472, 480, 486, 488], "statist": [203, 205, 338, 346, 349, 447, 456], "statistician": [203, 205, 338, 346], "std": [3, 8], "stdout": [458, 465], "stecil": 468, "stegun": 466, "stencil": [468, 470, 474], "step": [21, 84, 171, 315, 462, 463, 474, 480, 481, 486, 487], "stephen": 478, "still": [41, 167, 188, 487], "stock": [466, 487], "stoke": 474, "stop": [21, 171, 466, 467, 473, 486, 487], "storag": 320, "store": [12, 13, 22, 23, 24, 25, 26, 27, 28, 44, 45, 46, 52, 53, 59, 60, 63, 64, 65, 70, 71, 79, 87, 88, 89, 91, 94, 117, 118, 119, 120, 121, 122, 123, 126, 128, 129, 135, 140, 144, 145, 146, 147, 148, 154, 155, 156, 157, 158, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 184, 185, 189, 190, 191, 193, 315, 329, 330, 332, 335, 340, 341, 347, 348, 393, 394, 397, 398, 406, 407, 408, 409, 413, 414, 417, 422, 423, 435, 436, 468, 487], "str": [12, 13, 22, 23, 24, 25, 26, 27, 28, 31, 32, 44, 45, 46, 52, 53, 58, 59, 60, 63, 64, 65, 70, 71, 79, 83, 84, 87, 88, 89, 91, 94, 95, 96, 97, 99, 100, 101, 102, 104, 105, 106, 107, 108, 109, 110, 117, 118, 119, 120, 121, 122, 123, 126, 128, 129, 135, 140, 144, 145, 146, 154, 155, 156, 157, 158, 161, 163, 164, 167, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 185, 188, 189, 190, 191, 193, 203, 205, 258, 259, 269, 284, 304, 320, 322, 329, 330, 332, 337, 338, 340, 341, 343, 346, 347, 348, 393, 394, 397, 398, 406, 407, 408, 409, 410, 413, 414, 417, 422, 423, 435, 436, 458, 469, 471, 487], "str_": [3, 8], "straightforward": [486, 487], "strategi": [458, 487], "stream": 1, "streamlin": 487, "strict": [458, 478], "strictli": 167, "stride": [4, 277, 287, 310, 391, 463], "strike": [466, 487], "string": [61, 164, 172, 188, 258, 284, 285, 287, 310, 320, 351, 454, 463], "string_repr": 84, "strong": 462, "structur": [437, 474, 481, 486, 487], "student": 384, "studi": [388, 470], "style": [287, 289, 391, 439], "sub": [14, 16, 17, 19, 34, 36, 72, 76, 81, 133, 186, 199, 202, 204, 269, 327, 342, 412, 418, 426, 428, 442], "subarrai": [72, 138, 437], "subclass": 37, "subdomain": 474, "subgrid": 474, "subject": 478, "sublicens": 478, "submit": 462, "subok": [34, 49, 51, 269], "subplot": [469, 487], "subscript": [83, 84], "subsequ": 287, "subset": [359, 415, 481], "substanti": [474, 478], "substitut": [472, 478], "subtract": [0, 3, 8, 486], "subtyp": 391, "succe": 486, "success": [350, 357, 364], "suggest": [312, 462, 475, 487], "suit": [465, 487], "suitabl": [293, 308, 324, 344, 403, 421, 487], "sum": [0, 3, 8, 41, 61, 69, 80, 100, 132, 139, 167, 177, 178, 198, 204, 206, 315, 323, 352, 359, 366, 424, 426, 456, 471, 472, 487], "sum_": 167, "sum_along_axi": 418, "sum_along_diagon": 426, "sum_of_weight": 41, "summar": [203, 205, 338, 346], "summari": [3, 8, 465], "summat": [47, 83, 84], "supercomputerloc": 487, "superpod": 476, "suppli": [147, 148, 164, 166, 373], "support": [31, 32, 61, 78, 80, 83, 168, 170, 172, 184, 188, 287, 320, 327, 337, 344, 357, 395, 399, 410, 424, 428, 437, 463, 469, 477, 479, 485, 487], "suppos": 54, "sure": [471, 481], "surfac": 474, "surpris": 77, "surround": 474, "svd": [0, 8], "svdval": 8, "swap": [61, 98], "swapax": [0, 3, 8], "switch": 472, "symmetr": [105, 159, 487], "symmetri": [99, 104], "synchron": [474, 487], "sysmem": 487, "system": [169, 183, 468, 472, 474, 475, 477, 480, 487], "system_mem": 475, "t": [67, 78, 114, 115, 116, 287, 324, 343, 349, 384, 428, 452, 465, 466, 467, 471, 480, 486, 487], "tabl": [167, 390], "tack": 462, "tackl": [474, 487], "tail": 360, "take": [0, 2, 3, 8, 56, 57, 152, 183, 339, 344, 391, 396, 421, 462, 475, 487], "take_along_axi": [0, 3, 8], "taken": [41, 54, 76, 77, 84, 99, 105, 107, 109, 110, 186, 200, 359, 404, 426, 428, 430, 433, 441, 469, 481], "tall": 111, "tan": [0, 3, 8], "tangent": [26, 27, 28, 422, 423], "tanh": [0, 3, 8], "taper": [42, 47, 130, 131, 153], "target": [343, 345, 463], "task": [458, 466, 467, 473, 474, 481, 487], "taylor": 164, "tdma": 468, "teach": [468, 471, 472], "technic": 475, "techniqu": 487, "tell": [315, 475], "templat": 487, "temporari": 458, "tend": 481, "tensor": [84, 424, 458, 463], "tensordot": [0, 3, 8], "tensorinv": [3, 8], "tensorsolv": [3, 8], "term": [47, 80, 84, 100, 101, 102, 105, 139, 184, 424, 441, 468, 477], "termin": [465, 472, 487], "test": [0, 14, 19, 141, 142, 144, 145, 146, 147, 148, 287, 352, 355, 447, 456, 464, 471, 473, 474, 483, 484], "test_view": 465, "test_vstack": 465, "test_wher": 465, "test_window": 465, "testsystem": 465, "text": [320, 462], "tf32": 458, "th": [73, 77, 93, 127, 138, 203, 205, 324, 338, 346, 404, 429, 432], "than": [21, 43, 47, 49, 51, 54, 55, 57, 61, 68, 69, 76, 80, 81, 95, 96, 97, 99, 100, 101, 102, 104, 105, 107, 108, 110, 111, 115, 116, 132, 139, 164, 184, 187, 188, 197, 198, 201, 203, 204, 205, 206, 338, 339, 342, 343, 345, 346, 355, 359, 368, 385, 386, 390, 407, 415, 416, 418, 424, 426, 438, 441, 458, 467, 472, 480, 481, 486, 487], "thei": [13, 15, 27, 44, 45, 46, 49, 63, 68, 69, 77, 78, 79, 87, 117, 119, 120, 121, 122, 126, 128, 129, 135, 154, 155, 156, 157, 158, 177, 178, 179, 181, 182, 184, 185, 189, 190, 193, 197, 198, 308, 330, 332, 341, 350, 391, 394, 397, 403, 417, 435, 454, 469, 471, 481, 486, 487], "them": [56, 454, 462, 471, 475, 486, 487], "themselv": [277, 468], "theorem": 367, "theoret": 487, "theori": 478, "therefor": [161, 163, 357], "theta": 356, "thi": [12, 13, 14, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 33, 34, 37, 41, 43, 44, 45, 46, 48, 49, 51, 52, 53, 54, 55, 58, 59, 60, 63, 64, 65, 70, 71, 72, 73, 74, 77, 78, 79, 80, 82, 83, 84, 87, 88, 89, 91, 94, 95, 96, 97, 98, 99, 100, 101, 102, 105, 106, 107, 108, 109, 110, 111, 113, 115, 116, 117, 118, 119, 120, 121, 122, 123, 126, 128, 129, 132, 134, 135, 139, 140, 144, 145, 146, 151, 152, 154, 155, 156, 157, 158, 161, 163, 166, 167, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 199, 200, 201, 202, 203, 204, 205, 206, 267, 268, 269, 277, 280, 282, 286, 287, 290, 293, 295, 310, 312, 315, 319, 320, 321, 324, 327, 329, 330, 332, 335, 338, 339, 340, 341, 342, 344, 345, 346, 347, 348, 352, 353, 368, 372, 375, 380, 388, 391, 393, 394, 396, 397, 398, 400, 402, 406, 407, 408, 409, 413, 414, 415, 417, 418, 420, 421, 422, 423, 424, 425, 428, 435, 436, 437, 440, 441, 443, 458, 462, 463, 465, 466, 467, 468, 469, 471, 472, 473, 474, 477, 478, 480, 483, 484, 486, 487, 488], "thing": [420, 462, 467, 487], "think": 462, "third": [81, 82, 134, 402, 424, 443, 477, 486], "those": [55, 61, 67, 72, 165, 344, 474, 480], "though": 43, "thought": 387, "thread": [463, 465, 472, 475, 487], "three": [40, 47, 55, 203, 205, 338, 346, 437, 475, 486], "threshold": 458, "through": [14, 16, 17, 19, 34, 152, 183, 186, 188, 199, 202, 204, 269, 342, 418, 458, 487], "throughout": 474, "thu": [54, 172, 425, 486, 487], "thumb": 481, "thunk": 4, "tile": [0, 3, 8, 456], "time": [67, 77, 83, 96, 97, 101, 102, 107, 287, 290, 354, 369, 388, 400, 425, 437, 462, 465, 466, 467, 473, 474, 477, 487], "timedelta64": [3, 8], "timer": 481, "timestep": 474, "tini": 367, "titl": [466, 468], "to_devic": 8, "tobyt": [0, 8, 320, 322], "tofil": [0, 3, 8], "togeth": [15, 58, 67, 100, 152, 184], "tol": [472, 486, 487], "toler": [15, 141, 472, 486], "tolist": [0, 3, 8], "too": [42, 78, 420, 475], "took": 487, "tool": [462, 474, 475, 484], "toolkit": [463, 487], "top": [463, 476], "topic": [464, 475, 485], "topographi": 474, "torchsw": 470, "tort": 478, "total": [6, 66, 299, 364, 467, 471, 487], "total_chang": 471, "toward": [132, 330, 400], "trace": [0, 3, 8, 458], "traceback": 458, "tracker": 475, "transfer": [472, 487], "transform": [61, 95, 96, 97, 99, 100, 101, 102, 104, 105, 106, 107, 108, 109, 110, 447, 456, 486], "translat": [375, 468, 486], "transport": 320, "transpos": [0, 3, 8, 67, 159, 207, 456, 467], "trapezoid": [3, 8], "trapz": [3, 8], "travers": 315, "treat": [15, 54, 161, 163, 166, 184, 187, 188, 197, 198, 201, 204, 206, 344, 421, 425, 437], "tree": 463, "tri": [0, 3, 8], "trial": [350, 357], "triangl": [135, 428, 429, 430, 431, 432, 433, 434], "triangular": [0, 3, 8, 42, 159, 161, 163, 168, 467], "tridiagon": 468, "trigger": [475, 480], "trigonometr": [22, 26, 408, 456], "tril": [0, 3, 8, 183, 430, 431, 432], "tril_indic": [0, 3, 8, 431], "tril_indices_from": [0, 3, 8], "trim": 438, "trim_zero": [3, 8], "triu": [0, 3, 8, 183, 433, 434], "triu_indic": [0, 3, 8, 434], "triu_indices_from": [0, 3, 8], "trivial": 462, "true": [4, 12, 13, 14, 15, 16, 17, 18, 19, 22, 23, 24, 25, 26, 27, 28, 29, 30, 34, 35, 41, 44, 45, 46, 52, 53, 57, 59, 60, 63, 64, 65, 67, 70, 71, 77, 78, 79, 83, 84, 87, 88, 89, 91, 92, 94, 111, 117, 118, 119, 120, 121, 122, 123, 126, 128, 129, 132, 135, 138, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 154, 155, 156, 157, 158, 164, 167, 170, 171, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 185, 186, 187, 188, 189, 190, 191, 193, 194, 195, 196, 199, 200, 201, 202, 203, 204, 205, 206, 263, 264, 269, 287, 296, 298, 303, 310, 329, 330, 332, 338, 339, 340, 341, 342, 345, 346, 347, 348, 393, 394, 397, 398, 404, 406, 407, 408, 409, 413, 414, 417, 418, 422, 423, 435, 436, 437, 440, 444, 480, 483], "true_divid": [0, 3, 8, 79], "truli": 287, "trunc": [0, 3, 8], "truncat": [57, 95, 96, 97, 99, 100, 101, 102, 104, 105, 107, 108, 110, 350, 436], "trust": [195, 196], "truth": [128, 129, 157, 158, 179, 181, 182, 454, 456], "try": [467, 468, 469, 472, 475, 480, 482, 485, 487], "tup": [56, 82, 134, 402, 443], "tupl": [2, 4, 6, 12, 13, 14, 16, 17, 19, 22, 23, 24, 25, 26, 27, 28, 36, 37, 41, 44, 45, 46, 50, 51, 52, 53, 59, 60, 63, 64, 65, 66, 70, 71, 74, 75, 79, 84, 85, 86, 87, 88, 89, 90, 91, 94, 98, 103, 114, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 132, 135, 138, 140, 144, 145, 146, 152, 154, 155, 156, 157, 158, 160, 161, 167, 168, 170, 171, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 185, 186, 187, 188, 189, 190, 191, 193, 199, 200, 201, 202, 203, 205, 206, 258, 290, 293, 311, 315, 324, 329, 330, 331, 332, 333, 334, 338, 340, 341, 342, 346, 347, 348, 349, 350, 352, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 372, 375, 376, 377, 378, 379, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 393, 394, 396, 397, 398, 399, 405, 406, 407, 408, 409, 413, 414, 415, 417, 418, 422, 423, 424, 430, 431, 433, 434, 435, 436, 439, 440, 444, 445, 446, 471, 486, 487], "tuple_of_arrai": 331, "turn": [56, 458], "tutori": [475, 485], "tweedi": 388, "twice": 486, "two": [15, 21, 35, 39, 44, 45, 46, 48, 61, 67, 76, 77, 80, 96, 100, 101, 106, 123, 139, 141, 166, 184, 335, 355, 357, 360, 400, 419, 424, 426, 430, 431, 433, 434, 441, 469, 470, 471, 473, 486, 487, 488], "type": [6, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 76, 77, 78, 79, 80, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 124, 125, 126, 127, 128, 129, 130, 131, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 162, 163, 164, 165, 166, 167, 169, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 211, 258, 269, 277, 283, 289, 290, 293, 295, 308, 310, 312, 319, 320, 321, 324, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 340, 341, 342, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 375, 376, 377, 378, 379, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 433, 434, 435, 436, 438, 439, 440, 441, 443, 444, 445, 446, 447, 456, 458, 463, 471, 474, 475, 487], "typecod": 269, "typeerror": [43, 78, 203, 205, 338, 346], "typenam": [3, 8], "typic": [15, 49, 51, 67, 99, 308, 403, 463, 474, 481, 487], "u": [161, 163, 170, 204, 315, 389, 462, 467, 469, 473, 475, 478, 487], "u8_arr": 77, "ubyt": [3, 8], "ufunc": [8, 12, 13, 16, 17, 22, 23, 24, 25, 26, 27, 28, 44, 45, 46, 52, 53, 55, 59, 60, 63, 64, 65, 70, 71, 79, 87, 88, 89, 91, 94, 117, 118, 119, 120, 121, 122, 123, 126, 128, 129, 135, 140, 144, 145, 146, 154, 155, 156, 157, 158, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 185, 189, 190, 191, 193, 199, 202, 204, 206, 329, 330, 332, 340, 341, 342, 347, 348, 393, 394, 397, 398, 406, 407, 408, 409, 413, 414, 417, 418, 422, 423, 435, 436], "uic": 310, "uid": 475, "uint": [3, 8], "uint16": [3, 8], "uint32": [3, 8], "uint64": [3, 8, 471], "uint8": [3, 8, 77, 336, 438], "uintc": [3, 8], "uintp": [3, 8], "uk": [466, 469], "ulong": [3, 8], "ulonglong": [3, 8], "ultim": [287, 310], "unabl": 475, "unalt": 353, "unari": 454, "unbias": 67, "unbound": 368, "unchang": [34, 110], "undefin": [187, 201, 203, 205, 338, 344, 346, 480], "under": [167, 287, 462, 466, 467, 473, 478], "underli": [32, 362, 391, 396, 410, 466, 487], "understand": [462, 472], "undesir": 486, "undo": 438, "unexpect": 204, "unif": [376, 377, 379], "uniform": [0, 3, 8, 132, 371, 372, 375, 376, 377, 379, 389], "uniformli": 386, "uniniti": [12, 13, 22, 23, 24, 25, 26, 27, 28, 44, 45, 46, 52, 53, 59, 60, 63, 64, 65, 70, 71, 79, 85, 86, 87, 88, 89, 91, 94, 117, 118, 119, 120, 121, 122, 123, 126, 128, 129, 135, 140, 144, 145, 146, 154, 155, 156, 157, 158, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 185, 189, 190, 191, 193, 329, 330, 332, 340, 341, 347, 348, 393, 394, 397, 398, 406, 407, 408, 409, 413, 414, 417, 422, 423, 435, 436], "union1d": [3, 8], "uniqu": [0, 3, 8, 192, 367, 471], "unique_al": [3, 8], "unique_count": [3, 8, 437], "unique_indic": 437, "unique_invers": [3, 8, 437], "unique_valu": [3, 8], "unit": [152, 160, 161, 387, 388, 480], "unitari": [127, 170, 480], "uniti": 132, "univari": 373, "univers": [167, 388], "unknown": 487, "unless": [14, 19, 34, 54, 68, 69, 76, 83, 132, 167, 171, 197, 198, 204, 206, 269, 293, 336, 342, 372, 375, 376, 377, 379, 401, 418, 437, 462, 466, 467, 473], "unlik": [61, 76, 160, 162, 385], "unmodifi": [48, 476], "unnecessari": 462, "unpack": 438, "unpackbit": [0, 3, 8], "unpickl": [258, 310], "unpredict": [1, 353], "unravel": 439, "unravel_index": [0, 3, 8], "unraveled_coord": 439, "unsaf": [58, 83, 139, 184, 269, 335, 424, 441], "unsign": [77, 206, 342, 418], "unsignedinteg": [3, 8], "unstack": [3, 8], "unsupport": 480, "until": [48, 84, 471, 486, 487], "unwrap": [3, 8], "up": [82, 116, 119, 134, 293, 402, 421, 437, 443, 458, 463, 469, 474, 475, 480, 481, 487], "updat": [287, 310, 343, 344, 472, 474, 487], "uplo": [161, 163], "upon": 462, "upper": [55, 93, 132, 159, 161, 163, 168, 310, 385, 386, 432, 433, 434], "uppoer": 168, "us": [2, 6, 16, 17, 20, 21, 31, 32, 42, 47, 48, 54, 58, 61, 67, 68, 69, 73, 74, 76, 77, 80, 83, 84, 95, 96, 97, 99, 100, 101, 102, 104, 105, 107, 108, 110, 127, 130, 131, 137, 141, 152, 153, 159, 164, 166, 167, 171, 184, 186, 187, 188, 194, 197, 198, 199, 200, 201, 203, 204, 205, 206, 215, 216, 271, 277, 287, 293, 310, 312, 320, 327, 337, 338, 339, 342, 344, 346, 350, 352, 354, 375, 380, 388, 391, 392, 395, 396, 399, 404, 410, 418, 420, 421, 426, 437, 439, 440, 441, 454, 458, 462, 463, 465, 466, 467, 468, 469, 472, 473, 474, 476, 477, 478, 480, 483, 484, 485, 488], "usabl": 117, "usag": [95, 96, 97, 99, 100, 101, 102, 104, 105, 106, 107, 108, 109, 110, 160, 161, 162, 163, 169, 458, 462, 464, 475, 485, 486], "use_explicit": 164, "use_openmp": 463, "use_thread": 463, "user": [194, 287, 310, 463, 472, 474, 475, 476, 487], "ushort": [3, 8], "usual": [74, 462, 475, 488], "util": [465, 466, 467, 473, 475, 487], "v": [48, 61, 73, 308, 403, 447, 465, 466, 468], "v1": 466, "v100": 487, "val": [111, 137, 151, 309, 336, 339, 392, 438, 486, 487], "valid": [48, 61, 183, 430, 431, 433, 434, 462, 474], "valu": [2, 12, 13, 14, 15, 16, 17, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 35, 41, 42, 43, 44, 45, 46, 47, 52, 53, 54, 55, 59, 60, 63, 64, 65, 66, 67, 68, 69, 70, 71, 77, 78, 79, 83, 87, 88, 89, 91, 92, 93, 94, 100, 108, 111, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 135, 138, 140, 141, 143, 144, 145, 146, 147, 148, 149, 150, 152, 153, 154, 155, 156, 157, 158, 159, 161, 163, 165, 167, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 189, 190, 191, 193, 194, 195, 196, 197, 198, 199, 200, 202, 203, 204, 205, 206, 209, 210, 217, 218, 220, 221, 223, 224, 225, 226, 227, 228, 229, 230, 234, 235, 236, 237, 238, 239, 240, 242, 243, 244, 245, 246, 247, 248, 250, 251, 252, 255, 256, 257, 260, 261, 262, 265, 266, 269, 272, 283, 286, 296, 298, 304, 308, 310, 312, 315, 329, 330, 332, 336, 339, 340, 341, 342, 343, 344, 345, 347, 348, 349, 350, 352, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 375, 376, 377, 378, 379, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 393, 394, 395, 396, 397, 398, 399, 401, 403, 406, 407, 408, 409, 413, 414, 417, 418, 420, 421, 422, 423, 426, 427, 435, 436, 437, 438, 440, 444, 454, 456, 458, 466, 468, 471, 472, 473, 474, 475, 485, 486, 487], "valuabl": 474, "valueerror": [41, 43, 48, 54, 57, 76, 78, 111, 167, 195, 196, 199, 202, 352, 370, 412, 415, 426], "van": 167, "vander": [3, 8], "vanilla": 458, "var": [0, 3, 8, 458], "vararg": 127, "vari": [32, 67, 138, 410, 468, 469, 474, 487], "variabl": [67, 169, 195, 196, 199, 202, 352, 354, 360, 367, 458, 472, 474, 475, 479, 481, 483, 486, 487], "varianc": [67, 326, 352, 373, 440, 456], "variant": 487, "variat": [203, 205, 338, 346, 355, 487], "varieti": 2, "variou": [167, 456, 458, 474, 484], "vdot": [0, 3, 8], "vecdot": [3, 8], "vecmat": [3, 8], "vector": [3, 8, 67, 80, 139, 166, 167, 184, 188, 324, 335, 441, 456, 487, 488], "vector1": 487, "vector2": 487, "vector_norm": 8, "venv": [477, 487], "verbatim": 462, "verbos": [465, 472, 475, 487], "veri": [15, 42, 194, 293, 481], "verifi": 159, "version": [66, 73, 113, 187, 201, 203, 205, 258, 338, 346, 368, 439, 462, 466, 467, 473, 474, 477, 487], "vertic": [400, 402, 442, 443, 474], "vh": 170, "via": [12, 13, 22, 23, 24, 25, 26, 27, 28, 44, 45, 46, 52, 53, 59, 60, 63, 64, 65, 70, 71, 79, 87, 88, 89, 91, 94, 117, 118, 119, 120, 121, 122, 123, 126, 128, 129, 135, 140, 144, 145, 146, 154, 155, 156, 157, 158, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 185, 189, 190, 191, 193, 287, 321, 329, 330, 332, 340, 341, 347, 348, 393, 394, 397, 398, 406, 407, 408, 409, 413, 414, 417, 422, 423, 428, 435, 436, 465, 475, 479, 487], "view": [0, 8, 39, 40, 49, 51, 73, 90, 114, 115, 116, 188, 192, 283, 287, 290, 317, 324, 344, 396, 412, 415, 419, 421, 427, 439, 475, 485], "violat": 458, "vision": 487, "visit": [462, 475], "vital": 487, "void": [3, 8, 293], "volatil": [466, 487], "von": 387, "vonmis": [0, 3, 8], "vpi": 469, "vsplit": [0, 3, 8, 402, 443], "vstack": [0, 3, 8, 402, 486], "vv": 465, "w": [162, 163, 287, 310], "wa": [47, 80, 139, 166, 364, 388, 401, 424, 441, 462, 469, 472, 475], "wai": [84, 100, 101, 102, 107, 184, 359, 438, 462, 463, 465, 466, 467, 468, 473, 478, 479, 486], "waital": 474, "wald": [0, 3, 8], "walk": 463, "want": [462, 463, 473, 487], "warm": 481, "warn": [183, 195, 196, 199, 202, 343, 447, 472, 487], "warranti": [466, 467, 473, 478], "wasilla": 478, "water": 474, "wavenumb": 468, "we": [8, 54, 67, 315, 462, 463, 466, 467, 468, 469, 471, 472, 473, 474, 475, 486, 487], "weak": 476, "weibul": [0, 3, 8, 203, 205, 338, 346, 378], "weight": [41, 43, 67, 130, 131, 132, 368, 471], "welcom": [8, 462], "well": [83, 169, 310, 342, 465, 467, 474], "were": [58, 184, 308, 373, 403, 416, 475, 478, 483, 487], "west": [473, 487], "wget": 487, "what": [58, 73, 83, 95, 96, 97, 99, 100, 101, 102, 104, 105, 106, 107, 108, 109, 110, 139, 142, 184, 269, 335, 416, 424, 441, 473, 483, 486, 487], "wheel": 487, "when": [18, 21, 29, 30, 34, 41, 48, 57, 68, 69, 77, 107, 132, 159, 164, 167, 169, 171, 183, 184, 187, 188, 195, 196, 197, 198, 199, 201, 202, 204, 277, 293, 310, 315, 320, 352, 353, 380, 391, 404, 420, 421, 458, 462, 463, 472, 474, 479, 480, 481, 483, 486, 487], "whenev": [427, 458, 486], "where": [0, 3, 8, 12, 13, 14, 16, 17, 19, 21, 22, 23, 24, 25, 26, 27, 28, 33, 39, 40, 44, 45, 46, 48, 52, 53, 54, 55, 57, 59, 60, 63, 64, 65, 67, 70, 71, 77, 79, 80, 87, 88, 89, 90, 91, 92, 93, 94, 99, 105, 107, 117, 118, 119, 120, 121, 122, 123, 126, 128, 129, 134, 135, 138, 140, 141, 142, 144, 145, 146, 147, 148, 149, 154, 155, 156, 157, 158, 159, 168, 170, 171, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 185, 186, 189, 190, 191, 193, 199, 200, 202, 204, 206, 263, 264, 296, 298, 303, 308, 316, 329, 330, 332, 335, 339, 340, 341, 342, 345, 347, 348, 349, 350, 355, 356, 357, 364, 366, 368, 385, 393, 394, 397, 398, 403, 404, 406, 407, 408, 409, 412, 413, 414, 417, 418, 422, 423, 426, 435, 436, 440, 466, 468, 469, 471, 474, 478, 480, 486, 487], "wherea": 480, "whether": [14, 15, 19, 35, 73, 78, 141, 142, 159, 161, 163, 171, 194, 204, 310, 439, 458, 462, 465, 478, 483, 486, 487], "which": [1, 12, 13, 14, 16, 17, 19, 20, 22, 23, 24, 25, 26, 27, 28, 29, 30, 34, 41, 44, 45, 46, 48, 52, 53, 54, 57, 58, 59, 60, 61, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 74, 76, 77, 78, 79, 83, 84, 87, 88, 89, 91, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 114, 117, 118, 119, 120, 121, 122, 123, 126, 127, 128, 129, 134, 135, 140, 144, 145, 146, 147, 148, 151, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 167, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 189, 190, 191, 193, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 269, 277, 290, 293, 310, 312, 327, 329, 330, 332, 336, 338, 340, 341, 342, 343, 346, 347, 348, 354, 359, 372, 375, 376, 377, 378, 379, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 393, 394, 395, 397, 398, 399, 401, 404, 406, 407, 408, 409, 412, 413, 414, 416, 417, 418, 420, 422, 423, 426, 428, 429, 430, 433, 435, 436, 438, 440, 444, 458, 462, 469, 472, 474, 475, 478, 481, 483, 486, 487], "while": [67, 110, 166, 188, 201, 203, 205, 206, 287, 342, 368, 399, 418, 428, 471, 475, 481, 486, 487], "whilst": 38, "who": 462, "whole": 462, "whom": 478, "whose": [34, 76, 92, 93, 111, 183, 186, 192, 199, 200, 202, 206, 272, 336, 426, 431, 434, 439, 440], "why": [105, 462], "wide": [354, 475], "width": [82, 132, 134, 367, 402, 443, 487], "wiki": 354, "wikipedia": 354, "window": [42, 47, 130, 131, 153, 447, 456], "wise": [12, 13, 15, 22, 23, 24, 25, 26, 27, 28, 44, 45, 46, 52, 53, 59, 60, 63, 64, 65, 79, 82, 87, 94, 95, 96, 97, 99, 100, 101, 102, 104, 105, 106, 107, 108, 109, 110, 117, 118, 120, 121, 122, 128, 129, 133, 134, 140, 141, 144, 145, 146, 147, 148, 155, 157, 158, 160, 161, 162, 163, 173, 174, 175, 179, 180, 181, 182, 185, 189, 190, 191, 193, 275, 329, 330, 332, 340, 341, 393, 394, 402, 406, 407, 408, 409, 413, 414, 417, 422, 423, 435, 436, 442, 443, 487], "wish": 73, "within": [12, 13, 15, 21, 22, 23, 24, 25, 26, 27, 28, 44, 45, 46, 52, 53, 59, 60, 63, 64, 65, 70, 71, 79, 83, 87, 88, 89, 91, 94, 100, 101, 102, 105, 107, 117, 118, 119, 120, 121, 122, 123, 126, 128, 129, 135, 140, 141, 144, 145, 146, 154, 155, 156, 157, 158, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 184, 185, 189, 190, 191, 193, 269, 329, 330, 332, 340, 341, 347, 348, 359, 386, 393, 394, 397, 398, 406, 407, 408, 409, 413, 414, 417, 422, 423, 435, 436, 487], "without": [42, 48, 57, 80, 85, 139, 310, 324, 396, 462, 466, 467, 473, 474, 478, 482, 485, 487], "word": [21, 100, 101, 102, 105, 107, 386, 428], "work": [48, 57, 293, 343, 454, 462, 463, 466, 480, 481, 486, 487], "worker": [465, 475, 487], "workflow": 463, "workload": 487, "workstat": 487, "worri": 487, "wors": 47, "would": [32, 58, 80, 139, 166, 183, 267, 268, 293, 308, 335, 403, 412, 416, 424, 441, 458, 466, 467, 472, 473, 474, 486, 487], "wrap": [54, 111, 343, 353, 420], "wrapper": 487, "write": [49, 73, 111, 188, 310, 320, 396, 466, 467, 473, 476, 487], "writeabl": [4, 287, 310], "writebackifcopi": [287, 310], "written": [111, 287, 310, 320, 478, 486, 488], "wrong": 57, "www": [466, 467, 473], "x": [12, 22, 23, 24, 25, 26, 28, 43, 52, 53, 59, 60, 64, 65, 67, 70, 71, 77, 78, 88, 89, 91, 94, 96, 97, 98, 101, 102, 103, 110, 118, 123, 132, 136, 140, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 164, 167, 169, 173, 174, 175, 176, 180, 183, 188, 191, 194, 287, 310, 315, 329, 340, 347, 348, 349, 354, 389, 393, 398, 406, 407, 408, 409, 413, 414, 422, 423, 436, 444, 466, 468, 469, 471, 472, 480, 486, 487, 488], "x1": [13, 27, 44, 45, 46, 63, 79, 87, 117, 119, 120, 121, 122, 126, 128, 129, 135, 154, 155, 156, 157, 158, 177, 178, 179, 181, 182, 185, 188, 189, 190, 193, 330, 332, 341, 394, 397, 417, 435], "x2": [13, 27, 44, 45, 46, 63, 79, 87, 117, 119, 120, 121, 122, 126, 128, 129, 135, 154, 155, 156, 157, 158, 177, 178, 179, 181, 182, 185, 188, 189, 190, 193, 330, 332, 341, 394, 397, 417, 435], "x86": 487, "x86_64": [477, 487], "x_": 472, "x_1": 67, "x_2": 67, "x_current": 486, "x_i": 67, "x_j": 67, "x_n": 67, "x_prev": 486, "xeon": 487, "xi": 188, "xk": 472, "xk_old": 472, "xlabel": [466, 468], "xn": 188, "xor": [46, 182], "xorwow": 353, "xv": 188, "xy": 188, "y": [13, 27, 44, 45, 46, 63, 67, 79, 87, 98, 103, 117, 119, 120, 121, 122, 126, 128, 129, 135, 141, 150, 154, 155, 156, 157, 158, 177, 178, 179, 181, 182, 185, 188, 189, 190, 193, 203, 205, 289, 321, 330, 332, 338, 341, 346, 391, 394, 397, 400, 417, 435, 444, 469, 471, 472, 486, 487, 488], "y1": [123, 191], "y2": [123, 191], "year": [367, 487], "yellow": 471, "yet": [8, 437], "yield": [29, 30, 68, 69, 197, 198, 204, 444, 481, 487], "ylabel": [466, 468], "you": [49, 73, 83, 184, 187, 188, 201, 420, 462, 463, 466, 467, 468, 471, 472, 473, 474, 475, 476, 477, 484, 486, 487, 488], "your": [462, 475, 476, 486, 487, 488], "yueh": 474, "yv": 188, "z": [18, 293, 354, 373, 486, 488], "zero": [0, 3, 8, 18, 33, 41, 42, 47, 61, 66, 77, 93, 95, 96, 97, 98, 99, 100, 101, 102, 104, 105, 107, 108, 110, 113, 130, 131, 142, 143, 147, 148, 149, 150, 153, 160, 161, 162, 163, 165, 167, 183, 194, 198, 206, 301, 328, 331, 336, 355, 368, 407, 428, 429, 432, 438, 440, 446, 468, 471, 473, 487], "zero_point": 471, "zerodivisionerror": 41, "zeros_lik": [0, 3, 8], "zeta": 390, "zipf": [0, 3, 8], "zsh": 487}, "titles": ["&lt;no title&gt;", "cupynumeric.random.BitGenerator", "cupynumeric.random.Generator", "Convolve and Correlate", "cupynumeric.ndarray", "Binary operations", "cupynumeric.broadcast", "Classes", "Project comparisons", "Array creation routines", "Data type routines", "Discrete Fourier Transform (<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">cupynumeric.fft</span></code>)", "cupynumeric.absolute", "cupynumeric.add", "cupynumeric.all", "cupynumeric.allclose", "cupynumeric.amax", "cupynumeric.amin", "cupynumeric.angle", "cupynumeric.any", "cupynumeric.append", "cupynumeric.arange", "cupynumeric.arccos", "cupynumeric.arccosh", "cupynumeric.arcsin", "cupynumeric.arcsinh", "cupynumeric.arctan", "cupynumeric.arctan2", "cupynumeric.arctanh", "cupynumeric.argmax", "cupynumeric.argmin", "cupynumeric.argpartition", "cupynumeric.argsort", "cupynumeric.argwhere", "cupynumeric.array", "cupynumeric.array_equal", "cupynumeric.array_split", "cupynumeric.asarray", "cupynumeric.atleast_1d", "cupynumeric.atleast_2d", "cupynumeric.atleast_3d", "cupynumeric.average", "cupynumeric.bartlett", "cupynumeric.bincount", "cupynumeric.bitwise_and", "cupynumeric.bitwise_or", "cupynumeric.bitwise_xor", "cupynumeric.blackman", "cupynumeric.block", "cupynumeric.broadcast_arrays", "cupynumeric.broadcast_shapes", "cupynumeric.broadcast_to", "cupynumeric.cbrt", "cupynumeric.ceil", "cupynumeric.choose", "cupynumeric.clip", "cupynumeric.column_stack", "cupynumeric.compress", "cupynumeric.concatenate", "cupynumeric.conj", "cupynumeric.conjugate", "cupynumeric.convolve", "cupynumeric.copy", "cupynumeric.copysign", "cupynumeric.cos", "cupynumeric.cosh", "cupynumeric.count_nonzero", "cupynumeric.cov", "cupynumeric.cumprod", "cupynumeric.cumsum", "cupynumeric.deg2rad", "cupynumeric.degrees", "cupynumeric.delete", "cupynumeric.diag", "cupynumeric.diag_indices", "cupynumeric.diag_indices_from", "cupynumeric.diagonal", "cupynumeric.diff", "cupynumeric.digitize", "cupynumeric.divide", "cupynumeric.dot", "cupynumeric.dsplit", "cupynumeric.dstack", "cupynumeric.einsum", "cupynumeric.einsum_path", "cupynumeric.empty", "cupynumeric.empty_like", "cupynumeric.equal", "cupynumeric.exp", "cupynumeric.exp2", "cupynumeric.expand_dims", "cupynumeric.expm1", "cupynumeric.extract", "cupynumeric.eye", "cupynumeric.fabs", "cupynumeric.fft.fft", "cupynumeric.fft.fft2", "cupynumeric.fft.fftn", "cupynumeric.fft.fftshift", "cupynumeric.fft.hfft", "cupynumeric.fft.ifft", "cupynumeric.fft.ifft2", "cupynumeric.fft.ifftn", "cupynumeric.fft.ifftshift", "cupynumeric.fft.ihfft", "cupynumeric.fft.irfft", "cupynumeric.fft.irfft2", "cupynumeric.fft.irfftn", "cupynumeric.fft.rfft", "cupynumeric.fft.rfft2", "cupynumeric.fft.rfftn", "cupynumeric.fill_diagonal", "cupynumeric.find_common_type", "cupynumeric.flatnonzero", "cupynumeric.flip", "cupynumeric.fliplr", "cupynumeric.flipud", "cupynumeric.float_power", "cupynumeric.floor", "cupynumeric.floor_divide", "cupynumeric.fmax", "cupynumeric.fmin", "cupynumeric.fmod", "cupynumeric.frexp", "cupynumeric.full", "cupynumeric.full_like", "cupynumeric.gcd", "cupynumeric.gradient", "cupynumeric.greater", "cupynumeric.greater_equal", "cupynumeric.hamming", "cupynumeric.hanning", "cupynumeric.histogram", "cupynumeric.hsplit", "cupynumeric.hstack", "cupynumeric.hypot", "cupynumeric.identity", "cupynumeric.imag", "cupynumeric.indices", "cupynumeric.inner", "cupynumeric.invert", "cupynumeric.isclose", "cupynumeric.iscomplex", "cupynumeric.iscomplexobj", "cupynumeric.isfinite", "cupynumeric.isinf", "cupynumeric.isnan", "cupynumeric.isneginf", "cupynumeric.isposinf", "cupynumeric.isreal", "cupynumeric.isrealobj", "cupynumeric.isscalar", "cupynumeric.ix_", "cupynumeric.kaiser", "cupynumeric.lcm", "cupynumeric.ldexp", "cupynumeric.left_shift", "cupynumeric.less", "cupynumeric.less_equal", "cupynumeric.linalg.cholesky", "cupynumeric.linalg.eig", "cupynumeric.linalg.eigh", "cupynumeric.linalg.eigvals", "cupynumeric.linalg.eigvalsh", "cupynumeric.linalg.expm", "cupynumeric.linalg.matrix_power", "cupynumeric.linalg.multi_dot", "cupynumeric.linalg.norm", "cupynumeric.linalg.qr", "cupynumeric.linalg.solve", "cupynumeric.linalg.svd", "cupynumeric.linspace", "cupynumeric.load", "cupynumeric.log", "cupynumeric.log10", "cupynumeric.log1p", "cupynumeric.log2", "cupynumeric.logaddexp", "cupynumeric.logaddexp2", "cupynumeric.logical_and", "cupynumeric.logical_not", "cupynumeric.logical_or", "cupynumeric.logical_xor", "cupynumeric.mask_indices", "cupynumeric.matmul", "cupynumeric.maximum", "cupynumeric.mean", "cupynumeric.median", "cupynumeric.meshgrid", "cupynumeric.minimum", "cupynumeric.mod", "cupynumeric.modf", "cupynumeric.moveaxis", "cupynumeric.multiply", "cupynumeric.nan_to_num", "cupynumeric.nanargmax", "cupynumeric.nanargmin", "cupynumeric.nancumprod", "cupynumeric.nancumsum", "cupynumeric.nanmax", "cupynumeric.nanmean", "cupynumeric.nanmedian", "cupynumeric.nanmin", "cupynumeric.nanpercentile", "cupynumeric.nanprod", "cupynumeric.nanquantile", "cupynumeric.nansum", "cupynumeric.ndarray.T", "cupynumeric.ndarray.__abs__", "cupynumeric.ndarray.__add__", "cupynumeric.ndarray.__and__", "cupynumeric.ndarray.__array__", "cupynumeric.ndarray.__bool__", "cupynumeric.ndarray.__complex__", "cupynumeric.ndarray.__contains__", "cupynumeric.ndarray.__copy__", "cupynumeric.ndarray.__deepcopy__", "cupynumeric.ndarray.__divmod__", "cupynumeric.ndarray.__eq__", "cupynumeric.ndarray.__float__", "cupynumeric.ndarray.__floordiv__", "cupynumeric.ndarray.__ge__", "cupynumeric.ndarray.__getitem__", "cupynumeric.ndarray.__gt__", "cupynumeric.ndarray.__iadd__", "cupynumeric.ndarray.__iand__", "cupynumeric.ndarray.__ifloordiv__", "cupynumeric.ndarray.__ilshift__", "cupynumeric.ndarray.__imatmul__", "cupynumeric.ndarray.__imod__", "cupynumeric.ndarray.__imul__", "cupynumeric.ndarray.__index__", "cupynumeric.ndarray.__int__", "cupynumeric.ndarray.__invert__", "cupynumeric.ndarray.__ior__", "cupynumeric.ndarray.__ipow__", "cupynumeric.ndarray.__irshift__", "cupynumeric.ndarray.__isub__", "cupynumeric.ndarray.__itruediv__", "cupynumeric.ndarray.__ixor__", "cupynumeric.ndarray.__le__", "cupynumeric.ndarray.__len__", "cupynumeric.ndarray.__lshift__", "cupynumeric.ndarray.__lt__", "cupynumeric.ndarray.__matmul__", "cupynumeric.ndarray.__mod__", "cupynumeric.ndarray.__mul__", "cupynumeric.ndarray.__ne__", "cupynumeric.ndarray.__neg__", "cupynumeric.ndarray.__new__", "cupynumeric.ndarray.__or__", "cupynumeric.ndarray.__pos__", "cupynumeric.ndarray.__pow__", "cupynumeric.ndarray.__reduce__", "cupynumeric.ndarray.__repr__", "cupynumeric.ndarray.__rmatmul__", "cupynumeric.ndarray.__rshift__", "cupynumeric.ndarray.__setitem__", "cupynumeric.ndarray.__setstate__", "cupynumeric.ndarray.__str__", "cupynumeric.ndarray.__sub__", "cupynumeric.ndarray.__truediv__", "cupynumeric.ndarray.__xor__", "cupynumeric.ndarray.all", "cupynumeric.ndarray.any", "cupynumeric.ndarray.argmax", "cupynumeric.ndarray.argmin", "cupynumeric.ndarray.argpartition", "cupynumeric.ndarray.argsort", "cupynumeric.ndarray.astype", "cupynumeric.ndarray.base", "cupynumeric.ndarray.choose", "cupynumeric.ndarray.clip", "cupynumeric.ndarray.compress", "cupynumeric.ndarray.conj", "cupynumeric.ndarray.conjugate", "cupynumeric.ndarray.copy", "cupynumeric.ndarray.ctypes", "cupynumeric.ndarray.cumprod", "cupynumeric.ndarray.cumsum", "cupynumeric.ndarray.data", "cupynumeric.ndarray.diagonal", "cupynumeric.ndarray.dot", "cupynumeric.ndarray.dtype", "cupynumeric.ndarray.dump", "cupynumeric.ndarray.dumps", "cupynumeric.ndarray.fill", "cupynumeric.ndarray.flags", "cupynumeric.ndarray.flat", "cupynumeric.ndarray.flatten", "cupynumeric.ndarray.flip", "cupynumeric.ndarray.getfield", "cupynumeric.ndarray.imag", "cupynumeric.ndarray.item", "cupynumeric.ndarray.itemset", "cupynumeric.ndarray.itemsize", "cupynumeric.ndarray.max", "cupynumeric.ndarray.mean", "cupynumeric.ndarray.min", "cupynumeric.ndarray.nbytes", "cupynumeric.ndarray.ndim", "cupynumeric.ndarray.nonzero", "cupynumeric.ndarray.partition", "cupynumeric.ndarray.prod", "cupynumeric.ndarray.put", "cupynumeric.ndarray.ravel", "cupynumeric.ndarray.real", "cupynumeric.ndarray.reshape", "cupynumeric.ndarray.searchsorted", "cupynumeric.ndarray.setfield", "cupynumeric.ndarray.setflags", "cupynumeric.ndarray.shape", "cupynumeric.ndarray.size", "cupynumeric.ndarray.sort", "cupynumeric.ndarray.squeeze", "cupynumeric.ndarray.strides", "cupynumeric.ndarray.sum", "cupynumeric.ndarray.swapaxes", "cupynumeric.ndarray.take", "cupynumeric.ndarray.tobytes", "cupynumeric.ndarray.tofile", "cupynumeric.ndarray.tolist", "cupynumeric.ndarray.tostring", "cupynumeric.ndarray.trace", "cupynumeric.ndarray.transpose", "cupynumeric.ndarray.unique", "cupynumeric.ndarray.var", "cupynumeric.ndarray.view", "cupynumeric.ndim", "cupynumeric.negative", "cupynumeric.nextafter", "cupynumeric.nonzero", "cupynumeric.not_equal", "cupynumeric.ones", "cupynumeric.ones_like", "cupynumeric.outer", "cupynumeric.packbits", "cupynumeric.partition", "cupynumeric.percentile", "cupynumeric.place", "cupynumeric.positive", "cupynumeric.power", "cupynumeric.prod", "cupynumeric.put", "cupynumeric.put_along_axis", "cupynumeric.putmask", "cupynumeric.quantile", "cupynumeric.rad2deg", "cupynumeric.radians", "cupynumeric.random.beta", "cupynumeric.random.binomial", "cupynumeric.random.bytes", "cupynumeric.random.chisquare", "cupynumeric.random.default_rng", "cupynumeric.random.exponential", "cupynumeric.random.f", "cupynumeric.random.gamma", "cupynumeric.random.geometric", "cupynumeric.random.gumbel", "cupynumeric.random.hypergeometric", "cupynumeric.random.laplace", "cupynumeric.random.logistic", "cupynumeric.random.lognormal", "cupynumeric.random.logseries", "cupynumeric.random.negative_binomial", "cupynumeric.random.noncentral_chisquare", "cupynumeric.random.noncentral_f", "cupynumeric.random.normal", "cupynumeric.random.pareto", "cupynumeric.random.poisson", "cupynumeric.random.power", "cupynumeric.random.rand", "cupynumeric.random.randint", "cupynumeric.random.randn", "cupynumeric.random.random", "cupynumeric.random.random_integers", "cupynumeric.random.random_sample", "cupynumeric.random.ranf", "cupynumeric.random.rayleigh", "cupynumeric.random.sample", "cupynumeric.random.seed", "cupynumeric.random.standard_cauchy", "cupynumeric.random.standard_exponential", "cupynumeric.random.standard_gamma", "cupynumeric.random.standard_t", "cupynumeric.random.triangular", "cupynumeric.random.uniform", "cupynumeric.random.vonmises", "cupynumeric.random.wald", "cupynumeric.random.weibull", "cupynumeric.random.zipf", "cupynumeric.ravel", "cupynumeric.real", "cupynumeric.reciprocal", "cupynumeric.remainder", "cupynumeric.repeat", "cupynumeric.reshape", "cupynumeric.right_shift", "cupynumeric.rint", "cupynumeric.roll", "cupynumeric.rot90", "cupynumeric.round", "cupynumeric.row_stack", "cupynumeric.searchsorted", "cupynumeric.select", "cupynumeric.shape", "cupynumeric.sign", "cupynumeric.signbit", "cupynumeric.sin", "cupynumeric.sinh", "cupynumeric.sort", "cupynumeric.sort_complex", "cupynumeric.split", "cupynumeric.sqrt", "cupynumeric.square", "cupynumeric.squeeze", "cupynumeric.stack", "cupynumeric.subtract", "cupynumeric.sum", "cupynumeric.swapaxes", "cupynumeric.take", "cupynumeric.take_along_axis", "cupynumeric.tan", "cupynumeric.tanh", "cupynumeric.tensordot", "cupynumeric.tile", "cupynumeric.trace", "cupynumeric.transpose", "cupynumeric.tri", "cupynumeric.tril", "cupynumeric.tril_indices", "cupynumeric.tril_indices_from", "cupynumeric.triu", "cupynumeric.triu_indices", "cupynumeric.triu_indices_from", "cupynumeric.true_divide", "cupynumeric.trunc", "cupynumeric.unique", "cupynumeric.unpackbits", "cupynumeric.unravel_index", "cupynumeric.var", "cupynumeric.vdot", "cupynumeric.vsplit", "cupynumeric.vstack", "cupynumeric.where", "cupynumeric.zeros", "cupynumeric.zeros_like", "API Reference", "Indexing routines", "Input and output", "Linear algebra (<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">cupynumeric.linalg</span></code>)", "Logic functions", "Array manipulation routines", "Mathematical functions", "The N-Dimensional array (<code class=\"xref py py-class docutils literal notranslate\"><span class=\"pre\">cupynumeric.ndarray</span></code>)", "Random sampling (<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">cupynumeric.random</span></code>)", "Routines", "Set routines", "Settings", "Sorting, searching, and counting", "Statistics", "Window functions", "Contributing to cuPyNumeric", "Building from source", "Developer guide", "Running tests", "Black-Scholes options pricing", "Cholesky decomposition", "Compact Finite Difference Scheme", "Edge Detection", "Examples", "K-Means Clustering Algorithm", "Newton Raphson Method In Two Dimensions", "Jacobi stencil", "TorchSWE case study", "Frequently Asked Questions", "NVIDIA cuPyNumeric", "Installation", "Third-party notices", "Advanced topics", "Differences with Numpy", "Performance Benchmarking", "Howtos", "Measure API coverage", "Trying Numpy code without changes", "User guide", "Best practices", "Tutorial", "Usage"], "titleterms": {"1": 487, "2": 487, "3": 487, "In": 472, "Of": 475, "The": [454, 462], "__abs__": 208, "__add__": 209, "__and__": 210, "__array__": 211, "__bool__": 212, "__complex__": 213, "__contains__": 214, "__copy__": 215, "__deepcopy__": 216, "__divmod__": 217, "__eq__": 218, "__float__": 219, "__floordiv__": 220, "__ge__": 221, "__getitem__": 222, "__gt__": 223, "__iadd__": 224, "__iand__": 225, "__ifloordiv__": 226, "__ilshift__": 227, "__imatmul__": 228, "__imod__": 229, "__imul__": 230, "__index__": 231, "__int__": 232, "__invert__": 233, "__ior__": 234, "__ipow__": 235, "__irshift__": 236, "__isub__": 237, "__itruediv__": 238, "__ixor__": 239, "__le__": 240, "__len__": 241, "__lshift__": 242, "__lt__": 243, "__matmul__": 244, "__mod__": 245, "__mul__": 246, "__ne__": 247, "__neg__": 248, "__new__": 249, "__or__": 250, "__pos__": 251, "__pow__": 252, "__reduce__": 253, "__repr__": 254, "__rmatmul__": 255, "__rshift__": 256, "__setitem__": 257, "__setstate__": 258, "__str__": 259, "__sub__": 260, "__truediv__": 261, "__xor__": 262, "about": 475, "absolut": 12, "add": 13, "advanc": [3, 463, 479, 486, 487], "algebra": [8, 450], "algorithm": 471, "all": [14, 263], "allclos": 15, "alloc": [486, 487], "amax": 16, "amin": 17, "an": 486, "angl": 18, "ani": [19, 264], "anoth": 486, "anti": 475, "api": [8, 447, 483, 486], "append": 20, "applic": [475, 486], "ar": 475, "arang": 21, "arcco": 22, "arccosh": 23, "arcsin": 24, "arcsinh": 25, "arctan": 26, "arctan2": 27, "arctanh": 28, "argmax": [29, 265], "argmin": [30, 266], "argpartit": [31, 267], "argsort": [32, 268], "argument": [475, 479, 480, 486], "argwher": 33, "arithmet": [453, 454], "arrai": [3, 8, 9, 34, 448, 451, 452, 454, 486, 487], "array_equ": 35, "array_split": 36, "asarrai": 37, "ask": 475, "astyp": 269, "atleast_1d": 38, "atleast_2d": 39, "atleast_3d": 40, "attribut": 454, "avail": 475, "averag": [41, 460], "avoid": [486, 487], "background": [468, 469, 471, 472], "bartlett": 42, "base": [270, 486, 487], "basic": [452, 463, 465, 487], "begin": 462, "behavior": 480, "benchmark": 481, "best": [486, 487], "beta": 349, "better": 486, "between": 475, "binari": [5, 449], "bincount": 43, "binomi": 350, "bit": [3, 5, 455], "bitgener": 1, "bitwise_and": 44, "bitwise_or": 45, "bitwise_xor": 46, "black": [466, 487], "blackman": 47, "block": [48, 486], "boolean": [486, 487], "broadcast": 6, "broadcast_arrai": 49, "broadcast_shap": 50, "broadcast_to": 51, "build": [9, 463, 477], "byte": 351, "calcul": 454, "call": 483, "can": 475, "case": 474, "cbrt": 52, "ceil": 53, "ceph": 478, "certif": 462, "chang": [452, 471, 484], "chisquar": 352, "choleski": [159, 467], "choos": [54, 271], "class": 7, "clip": [55, 272], "cluster": [471, 487], "cmake": 463, "co": 64, "code": [462, 475, 484, 487], "column_stack": 56, "compact": 468, "comparison": [8, 451, 454], "complex": 453, "compress": [57, 273], "comput": 487, "concaten": 58, "conda": [477, 487], "configur": 465, "conj": [59, 274], "conjug": [60, 275, 487], "construct": 454, "content": [451, 476], "contribut": 462, "convers": 454, "convolv": [3, 61], "copi": [62, 276, 480, 486], "copysign": 63, "correl": [3, 460], "cosh": 65, "count": [3, 459], "count_nonzero": 66, "cov": 67, "coverag": 483, "cpu": [477, 487], "creation": [3, 9], "ctype": 277, "cumprod": [68, 278], "cumsum": [69, 279], "cupi": 475, "cupynumer": [1, 2, 4, 6, 8, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 450, 454, 455, 462, 475, 476, 486, 487], "data": [9, 10, 280, 448, 452, 454, 455], "datatyp": 480, "dco": 462, "decomposit": [450, 467], "default": 475, "default_rng": 353, "deg2rad": 70, "degre": 71, "delet": 72, "depend": 463, "design": 486, "detail": 483, "detect": [469, 487], "determin": 475, "develop": [462, 464], "diag": 73, "diag_indic": 74, "diag_indices_from": 75, "diagon": [76, 281], "diff": 77, "differ": [453, 468, 475, 480], "digit": 78, "dimens": [452, 472], "dimension": [8, 454], "discret": [3, 8, 11], "distribut": 455, "divid": 79, "do": [462, 475], "doctor": 458, "doctor_filenam": 458, "doctor_format": 458, "doe": 475, "doesn": 475, "don": 475, "dot": [80, 282], "dsplit": 81, "dstack": 82, "dtype": 283, "dump": [284, 285], "edg": [469, 487], "eig": 160, "eigenvalu": 3, "eigh": 161, "eigval": 162, "eigvalsh": 163, "einsum": [3, 83], "einsum_path": 84, "element": [452, 486], "elementwis": 5, "empti": 85, "empty_lik": 86, "equal": 87, "equat": 450, "error": 475, "exampl": [470, 487], "execut": [475, 479], "exercis": 471, "exist": 9, "exp": 88, "exp2": 89, "expand_dim": 90, "expm": 164, "expm1": 91, "expon": 453, "exponenti": 354, "extract": 92, "extrema": 453, "ey": 93, "f": 355, "fab": 94, "factor": 3, "fallback_stacktrac": 458, "fast_math": 458, "faster": 486, "fft": [11, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110], "fft2": 96, "fftn": 97, "fftshift": 98, "file": 449, "fill": 286, "fill_diagon": 111, "find": 453, "find_common_typ": 112, "finit": 468, "flag": 287, "flat": 288, "flatnonzero": 113, "flatten": 289, "flip": [114, 290], "fliplr": 115, "flipud": 116, "float": 453, "float_pow": 117, "floor": 118, "floor_divid": 119, "fmax": 120, "fmin": 121, "fmod": 122, "force_thunk": 458, "format": 462, "fourier": [3, 8, 11], "frequent": 475, "frexp": 123, "from": [9, 452, 463, 475, 477], "full": 124, "full_lik": 125, "function": [3, 450, 451, 453, 461, 486], "gamma": 356, "gcd": 126, "gener": [2, 448, 455, 486], "geometr": 357, "getfield": 291, "gpu": [475, 477, 487], "gradient": [127, 487], "greater": 128, "greater_equ": 129, "guid": [464, 485], "guidelin": [481, 486], "gumbel": 358, "ham": 130, "han": 131, "handl": [453, 475], "hardwar": 487, "have": 475, "helper": 11, "hermitian": 11, "hfft": 99, "histogram": [132, 460], "how": [462, 471, 475], "howto": 482, "hpc": 487, "hsplit": 133, "hstack": 134, "hyperbol": 453, "hypergeometr": 359, "hypot": 135, "i": [462, 475, 486], "ident": 136, "ifft": 100, "ifft2": 101, "ifftn": 102, "ifftshift": 103, "ihfft": 104, "imag": [137, 292], "implement": [468, 469, 471, 472], "index": [3, 448, 480, 486, 487], "indic": [138, 476], "inner": 139, "input": [3, 449, 471], "insert": 448, "instal": [477, 487], "instead": [480, 486], "introduct": 487, "invert": [140, 450], "irfft": 105, "irfft2": 106, "irfftn": 107, "isclos": 141, "iscomplex": 142, "iscomplexobj": 143, "isfinit": 144, "isinf": 145, "isnan": 146, "isneginf": 147, "isposinf": 148, "isreal": 149, "isrealobj": 150, "isscalar": 151, "item": [293, 454], "items": 295, "itemset": 294, "iter": 486, "ix_": 152, "jacobi": [473, 487], "join": 452, "jupyt": 475, "k": 471, "kaiser": 153, "kind": 452, "kit": 478, "kmean": 471, "laplac": 360, "laptop": 475, "layout": 454, "lcm": 154, "ldexp": 155, "learn": [468, 469, 471, 472], "left_shift": 156, "legales": 462, "legat": [475, 479, 481], "legion": [475, 479], "less": 157, "less_equ": 158, "let": 471, "level": 8, "licens": 477, "like": [448, 452], "linalg": [159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 450], "linear": [8, 450], "linspac": 171, "linux": 487, "list": [486, 487], "load": 172, "log": 173, "log10": 174, "log1p": 175, "log2": 176, "logaddexp": 177, "logaddexp2": 178, "logarithm": 453, "logic": [3, 451, 486], "logical_and": 179, "logical_not": 180, "logical_or": 181, "logical_xor": 182, "logist": 361, "lognorm": 362, "logseri": 363, "loop": [486, 487], "lu": 3, "make": 457, "manag": 479, "manipul": [3, 452, 454, 486], "manual": 479, "mask": [486, 487], "mask_indic": 183, "mathemat": [3, 453, 486], "matmul": 184, "matmul_cache_s": 458, "matric": [9, 450], "matrix": [3, 450, 454, 487], "matrix_pow": 165, "max": 296, "maximum": 185, "mean": [186, 297, 471, 475], "measur": 483, "median": 187, "memori": [454, 475, 486], "merg": 486, "meshgrid": 188, "method": [454, 472], "min": 298, "min_cpu_chunk": 458, "min_gpu_chunk": 458, "min_omp_chunk": 458, "minimum": 189, "miscellan": [3, 453], "mod": 190, "modf": 191, "modul": 8, "more": 475, "moveaxi": 192, "multi": [8, 479, 487], "multi_dot": 166, "multipl": [454, 487], "multipli": 193, "my": 475, "n": 454, "nan_to_num": 194, "nanargmax": 195, "nanargmin": 196, "nancumprod": 197, "nancumsum": 198, "nanmax": 199, "nanmean": 200, "nanmedian": 201, "nanmin": 202, "nanpercentil": 203, "nanprod": 204, "nanquantil": 205, "nansum": 206, "nativ": [486, 487], "nbyte": 299, "ndarrai": [3, 4, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 454], "ndim": [300, 328], "neg": 329, "negative_binomi": 364, "newton": 472, "nextaft": 330, "node": [479, 487], "noncentral_chisquar": 365, "noncentral_f": 366, "nonzero": [301, 331], "norm": [167, 450], "normal": 367, "not_equ": 332, "notebook": 475, "notic": 478, "npy": 449, "npz": 449, "number": [450, 452, 453, 471], "numer": 9, "numpi": [8, 449, 475, 478, 480, 484, 486, 487], "numpy_compat": 458, "nvidia": 476, "o": 486, "observ": 471, "ones": 333, "ones_lik": 334, "openbla": 463, "oper": [3, 5, 448, 451, 452, 453, 454, 486, 487], "option": [466, 487], "order": [460, 480], "origin": 462, "other": [450, 454, 487], "out": 475, "outcom": [468, 469, 471, 472], "outer": 335, "output": [3, 449, 486], "overal": 483, "overhead": 486, "pack": [3, 5], "packag": 477, "packbit": 336, "pad": 3, "pareto": 368, "parti": 478, "partit": [302, 337], "pass": [475, 479], "pattern": 475, "penalti": 486, "percentil": 338, "perform": [481, 486], "pip": [463, 487], "pitfal": 486, "place": 339, "point": 453, "poisson": 369, "posit": 340, "power": [341, 370], "practic": [486, 487], "preload_cudalib": 458, "price": 466, "process": 462, "prod": [303, 342], "product": [450, 453], "program": 3, "project": 8, "proper": 457, "put": [304, 343], "put_along_axi": 344, "putmask": [345, 486], "pypi": 477, "python": 475, "qr": 168, "quantil": 346, "question": 475, "rad2deg": 347, "radian": 348, "rand": 371, "randint": 372, "randn": 373, "random": [1, 2, 3, 8, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 455, 478], "random_integ": 375, "random_sampl": 376, "ranf": 377, "rang": 9, "raphson": 472, "ration": 453, "ravel": [305, 391], "rayleigh": 378, "read": 475, "real": [11, 306, 392], "realm": [475, 479], "rearrang": 452, "reciproc": 393, "recommend": 486, "reduc": 486, "reduct": 480, "refer": 447, "relat": 3, "remaind": 394, "remov": 452, "repeat": 395, "report": 483, "report_coverag": 458, "report_dump_callstack": 458, "report_dump_csv": 458, "requir": [462, 487], "reshap": [307, 396, 486], "resourc": 487, "result": [475, 486], "return": [480, 486], "review": 462, "rfft": 108, "rfft2": 109, "rfftn": 110, "right_shift": 397, "rint": 398, "roll": 399, "rot90": 400, "round": [401, 453], "routin": [3, 9, 10, 11, 448, 452, 453, 456, 457, 486], "row_stack": 402, "run": [465, 471, 487], "sampl": [3, 8, 379, 455, 487], "scalar": 480, "scheme": 468, "schole": [466, 487], "search": [3, 459], "searchsort": [308, 403], "see": 471, "seed": [380, 455], "select": [404, 454], "set": [3, 457, 458, 471], "setfield": 309, "setflag": 310, "setup": 487, "shape": [9, 311, 405, 452, 454, 480], "sign": [406, 462], "signbit": 407, "simpl": 455, "sin": 408, "singl": 487, "sinh": 409, "size": 312, "slower": 475, "solv": [169, 450], "sort": [3, 313, 410, 459], "sort_complex": 411, "sourc": [463, 477], "special": 454, "split": [412, 452], "sqrt": 413, "squar": 414, "squeez": [314, 415], "stack": [416, 483, 486], "stage": 465, "standard": 11, "standard_cauchi": 381, "standard_exponenti": 382, "standard_gamma": 383, "standard_t": 384, "state": 455, "statist": [3, 460], "stencil": [473, 487], "stride": 315, "studi": 474, "subtract": 417, "sum": [316, 418, 453], "support": 480, "svd": [3, 170], "swapax": [317, 419], "t": [207, 475], "tabl": 476, "take": [318, 420], "take_along_axi": 421, "tan": 422, "tanh": 423, "task": [475, 479, 486], "tbli": [463, 478], "tensordot": 424, "test": [10, 451, 458, 465], "than": 475, "thi": 475, "third": 478, "three": 487, "through": [463, 486], "tile": [425, 452], "time": [475, 481], "tip": 487, "tobyt": 319, "tofil": 320, "tolist": 321, "tool": 481, "top": 487, "topic": [463, 479], "torchsw": 474, "tostr": 322, "trace": [323, 426], "transform": [3, 8, 11], "transpos": [324, 427, 452], "tri": 428, "triangular": 385, "trigonometr": 453, "tril": 429, "tril_indic": 430, "tril_indices_from": 431, "triu": 432, "triu_indic": 433, "triu_indices_from": 434, "true_divid": 435, "trunc": 436, "truth": 451, "try": 484, "tutori": 487, "two": 472, "type": [10, 451, 454], "ufunc": 3, "uniform": 386, "uniqu": [325, 437], "unpack": 3, "unpackbit": 438, "unravel_index": 439, "updat": 486, "us": [471, 475, 479, 481, 486, 487], "usag": [465, 488], "user": 485, "v": [8, 475, 487], "valu": [9, 451, 480], "var": [326, 440], "varianc": 460, "variant": [475, 477], "variou": 461, "vdot": 441, "vector": [450, 486], "verifi": 477, "version": 475, "view": [327, 480, 486], "vonmis": 387, "vsplit": 442, "vstack": 443, "wald": 388, "warn": [458, 475], "weibul": 389, "what": 475, "when": 475, "where": [444, 475], "why": 475, "window": 461, "wise": 486, "without": 484, "your": 477, "zero": 445, "zeros_lik": 446, "zipf": 390}})