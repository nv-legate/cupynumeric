Search.setIndex({"alltitles": {"1. Use cuPyNumeric arrays, AVOID native lists": [[503, "use-cupynumeric-arrays-avoid-native-lists"]], "2. Use array-based operations, AVOID loops with indexing": [[503, "use-array-based-operations-avoid-loops-with-indexing"]], "3. Use boolean masks, AVOID advanced indexing": [[503, "use-boolean-masks-avoid-advanced-indexing"]], "API Reference": [[458, null]], "Advanced statistics": [[3, "advanced-statistics"]], "Advanced topics": [[478, "advanced-topics"], [494, null]], "Arithmetic operations": [[464, "arithmetic-operations"]], "Arithmetic, matrix multiplication, and comparison operations": [[465, "arithmetic-matrix-multiplication-and-comparison-operations"]], "Array Attributes": [[465, "array-attributes"]], "Array Manipulation Routine Pitfalls": [[501, "array-manipulation-routine-pitfalls"]], "Array Methods": [[465, "array-methods"]], "Array contents": [[462, "array-contents"]], "Array conversion": [[465, "array-conversion"]], "Array creation": [[3, "array-creation"]], "Array creation (ndarray)": [[3, "array-creation-ndarray"]], "Array creation routines": [[9, null]], "Array manipulation": [[3, "array-manipulation"]], "Array manipulation (ndarray)": [[3, "array-manipulation-ndarray"]], "Array manipulation routines": [[463, null]], "Array type testing": [[462, "array-type-testing"]], "Averages and variances": [[471, "averages-and-variances"]], "Avoid blocking operations": [[501, "avoid-blocking-operations"]], "Background": [[483, "Background"], [484, "Background"], [486, "Background"], [487, "Background"]], "Basic Linux installation": [[503, "basic-linux-installation"]], "Basic build": [[478, "basic-build"]], "Basic operations": [[463, "basic-operations"]], "Basic usage": [[480, "basic-usage"]], "Best practices": [[501, null], [503, "best-practices"]], "Binary operations": [[5, null]], "Bit Generators": [[466, "bit-generators"]], "Bit packing": [[5, "bit-packing"]], "Black-Scholes": [[503, "black-scholes"]], "Black-Scholes options pricing": [[481, null]], "Building from source": [[478, null], [492, "building-from-source"]], "Building matrices": [[9, "building-matrices"]], "Building through pip & cmake": [[478, "building-through-pip-cmake"]], "CPU execution": [[502, "cpu-execution"], [502, "id6"], [502, "id16"], [502, "id26"]], "Calculation": [[465, "calculation"], [465, "id1"]], "Call stack reporting": [[498, "call-stack-reporting"]], "Cephes": [[493, "cephes"]], "Change Log": [[476, null]], "Changes: 25.09": [[473, null]], "Changes: 25.10": [[474, null], [475, null]], "Changing array shape": [[463, "changing-array-shape"]], "Changing kind of array": [[463, "changing-kind-of-array"]], "Changing number of dimensions": [[463, "changing-number-of-dimensions"]], "Cholesky decomposition": [[482, null]], "Classes": [[7, null]], "Code Formatting Requirements": [[477, "code-formatting-requirements"]], "Compact Finite Difference Scheme": [[483, null]], "Comparison": [[462, "comparison"]], "Complete module": [[502, "complete-module"], [502, "id3"], [502, "id13"], [502, "id23"]], "Conda": [[503, "conda"]], "Conda and GPU / CPU Variants": [[492, "conda-and-gpu-cpu-variants"]], "Conjugate gradient": [[503, "conjugate-gradient"]], "Constructing arrays": [[465, "constructing-arrays"]], "Contents:": [[491, null]], "Contributing to cuPyNumeric": [[477, null]], "Convolve and Correlate": [[3, null]], "Correlating": [[471, "correlating"]], "Counting": [[470, "counting"]], "Data Type": [[465, "data-type"]], "Data type routines": [[10, null]], "Data type testing": [[10, "data-type-testing"]], "Decompositions": [[461, "decompositions"]], "Dependencies": [[478, "dependencies"]], "Detailed coverage report": [[498, "detailed-coverage-report"]], "Developer guide": [[479, null]], "Differences with Numpy": [[495, null]], "Discrete Fourier Transform": [[8, "discrete-fourier-transform"]], "Discrete Fourier Transform (cupynumeric.fft)": [[11, null]], "Discrete Fourier transform": [[3, "discrete-fourier-transform"]], "Distributions": [[466, "distributions"]], "Edge Detection": [[484, null]], "Edge detection": [[503, "edge-detection"]], "Eigenvalues": [[3, "eigenvalues"]], "Einsum and related": [[3, "einsum-and-related"]], "Elementwise bit operations": [[5, "elementwise-bit-operations"]], "Example 1": [[503, "example-1"]], "Example 2": [[503, "example-2"]], "Examples": [[485, null], [503, "examples"]], "Exercise: Change the number of clusters and number of observations and see how the clusters change": [[486, "Exercise:-Change-the-number-of-clusters-and-number-of-observations-and-see-how-the-clusters-change"]], "Exponents and logarithms": [[464, "exponents-and-logarithms"]], "Extend cuPyNumeric with Legate-tasks": [[502, null]], "Extrema Finding": [[464, "extrema-finding"]], "Factorizations": [[3, "factorizations"]], "Fast Fourier Transform problem": [[502, "fast-fourier-transform-problem"]], "Faster I/O Routines": [[501, "faster-i-o-routines"]], "Floating point routines": [[464, "floating-point-routines"]], "Frequently Asked Questions": [[490, null]], "From existing data": [[9, "from-existing-data"]], "From shape or value": [[9, "from-shape-or-value"]], "Functional programming": [[3, "functional-programming"]], "GPU execution": [[502, "gpu-execution"], [502, "id7"], [502, "id17"], [502, "id27"]], "General Recommendations": [[501, "general-recommendations"]], "Generating index arrays": [[459, "generating-index-arrays"]], "Guidelines for performance benchmarks": [[496, "guidelines-for-performance-benchmarks"]], "Guidelines on designing cuPyNumeric applications": [[501, "guidelines-on-designing-cupynumeric-applications"]], "Guidelines on using cuPyNumeric APIs": [[501, "guidelines-on-using-cupynumeric-apis"]], "HPC cluster installation": [[503, "hpc-cluster-installation"]], "Handling complex numbers": [[464, "handling-complex-numbers"]], "Hardware requirements": [[503, "hardware-requirements"]], "Helper routines": [[11, "helper-routines"]], "Hermitian FFTs": [[11, "hermitian-ffts"]], "Histogram problem": [[502, "histogram-problem"]], "Histograms": [[471, "histograms"]], "How Do I Sign the DCO?": [[477, "how-do-i-sign-the-dco"]], "How do I time the execution of my application?": [[490, "how-do-i-time-the-execution-of-my-application"]], "How do I use Jupyter Notebooks?": [[490, "how-do-i-use-jupyter-notebooks"]], "How to begin": [[477, "how-to-begin"]], "How to determine available memory?": [[490, "how-to-determine-available-memory"]], "How to handle Out-Of-Memory errors?": [[490, "how-to-handle-out-of-memory-errors"]], "How to pass Legion and Realm arguments?": [[490, "how-to-pass-legion-and-realm-arguments"]], "Howtos": [[497, null]], "Hyperbolic functions": [[464, "hyperbolic-functions"]], "Implementation": [[483, "Implementation"], [484, "Implementation"], [486, "Implementation"], [487, "Implementation"]], "Indexing": [[3, "indexing"]], "Indexing behavior": [[495, "indexing-behavior"]], "Indexing routines": [[459, null]], "Indexing-like operations": [[459, "indexing-like-operations"]], "Indices and tables": [[491, "indices-and-tables"]], "Input and output": [[3, "input-and-output"], [460, null]], "Input and output (ndarray)": [[3, "input-and-output-ndarray"]], "Inserting data into arrays": [[459, "inserting-data-into-arrays"]], "Installation": [[492, null]], "Installing Conda Packages": [[492, "installing-conda-packages"]], "Installing PyPI Packages": [[492, "installing-pypi-packages"]], "Introduction": [[503, "introduction"]], "Item selection and manipulation": [[465, "item-selection-and-manipulation"]], "Jacobi stencil": [[488, null], [503, "jacobi-stencil"]], "Joining arrays": [[463, "joining-arrays"]], "Jupyter": [[504, "jupyter"]], "K-Means Clustering Algorithm": [[486, null]], "LU factorization and related": [[3, "lu-factorization-and-related"]], "Learning Outcomes": [[483, "Learning-Outcomes"], [484, "Learning-Outcomes"], [486, "Learning-Outcomes"], [487, "Learning-Outcomes"]], "Lets run the kmeans algorithm using a set of inputs": [[486, "Lets-run-the-kmeans-algorithm-using-a-set-of-inputs"]], "Licenses": [[492, "licenses"]], "Linear Algebra": [[8, "linear-algebra"]], "Linear algebra (cupynumeric.linalg)": [[461, null]], "Logic functions": [[462, null]], "Logic operations": [[462, "logic-operations"]], "Logical operations": [[3, "logical-operations"]], "Main function": [[502, "main-function"], [502, "main-function-1"], [502, "id11"], [502, "id21"]], "Making proper sets": [[468, "making-proper-sets"]], "Mathematical functions": [[3, "mathematical-functions"], [464, null]], "Matrix Functions": [[461, "matrix-functions"]], "Matrix and vector products": [[461, "matrix-and-vector-products"]], "Matrix multiplication": [[503, "matrix-multiplication"]], "Measure API coverage": [[498, null]], "Memory Layout": [[465, "memory-layout"]], "Merge tasks to reduce overhead": [[501, "merge-tasks-to-reduce-overhead"]], "Miscellaneous": [[464, "miscellaneous"]], "Miscellaneous matrix routines": [[3, "miscellaneous-matrix-routines"]], "Module-Level": [[8, "module-level"]], "Multi-Dimensional Array": [[8, "multi-dimensional-array"]], "Multi-Node execution": [[502, "multi-node-execution"], [502, "id8"], [502, "id18"], [502, "id28"]], "Multi-node HPC": [[503, "multi-node-hpc"]], "Multi-node execution": [[494, "multi-node-execution"]], "NVIDIA cuPyNumeric": [[491, null]], "Newton Raphson Method In Two Dimensions": [[487, null]], "Norms and other numbers": [[461, "norms-and-other-numbers"]], "NumPy": [[493, "numpy"], [503, "numpy"]], "NumPy binary files (npy, npz)": [[460, "numpy-binary-files-npy-npz"]], "NumPy vs cuPyNumeric APIs": [[8, "numpy-vs-cupynumeric-apis"]], "Numerical ranges": [[9, "numerical-ranges"]], "OpenBLAS": [[478, "openblas"]], "Order argument": [[495, "order-argument"]], "Order statistics": [[471, "order-statistics"]], "Other Attributes": [[465, "other-attributes"]], "Other options": [[503, "other-options"]], "Overall coverage report": [[498, "overall-coverage-report"]], "Packing and unpacking bits": [[3, "packing-and-unpacking-bits"]], "Padding arrays": [[3, "padding-arrays"]], "Passing Legion and Realm arguments": [[494, "passing-legion-and-realm-arguments"]], "Performance Benchmarking": [[496, null]], "Pip": [[503, "pip"]], "Project comparisons": [[8, null]], "Questions?": [[490, "questions"]], "Quick example": [[502, "quick-example"]], "Random Generator": [[466, "random-generator"]], "Random Kit": [[493, "random-kit"]], "Random Sampling": [[8, "random-sampling"]], "Random sampling": [[3, "random-sampling"]], "Random sampling (cupynumeric.random)": [[466, null]], "Rational routines": [[464, "rational-routines"]], "Real FFTs": [[11, "real-ffts"]], "Rearranging elements": [[463, "rearranging-elements"]], "Reductions": [[495, "reductions"]], "Removing data from arrays": [[463, "removing-data-from-arrays"]], "Reshape returns a copy instead of view": [[501, "reshape-returns-a-copy-instead-of-view"]], "Resource Scoping": [[494, "resource-scoping"]], "Resource allocation": [[503, "resource-allocation"]], "Returning a copy instead of a view": [[495, "returning-a-copy-instead-of-a-view"]], "Review Process": [[477, "review-process"]], "Rounding": [[464, "rounding"]], "Routines": [[467, null]], "Running cuPyNumeric code": [[503, "running-cupynumeric-code"]], "Running on CPU": [[503, "running-on-cpu"], [503, "id2"], [503, "id4"], [503, "id6"]], "Running on CPU and GPU": [[502, "running-on-cpu-and-gpu"], [502, "id4"], [502, "id14"], [502, "id24"]], "Running on GPU": [[503, "running-on-gpu"], [503, "id3"], [503, "id5"], [503, "id7"], [503, "id9"]], "Running on GPU cluster": [[503, "running-on-gpu-cluster"]], "Running tests": [[480, null]], "SAXPY problem": [[502, "saxpy-problem"]], "SVD and related": [[3, "svd-and-related"]], "Sample Code": [[503, "sample-code"], [503, "id8"]], "Sample computation": [[503, "sample-computation"]], "Scalar return values": [[495, "scalar-return-values"]], "Searching": [[470, "searching"]], "Searching, sorting, and counting": [[3, "searching-sorting-and-counting"]], "Seeding and State": [[466, "seeding-and-state"]], "Set operations": [[3, "set-operations"]], "Set routines": [[468, null]], "Settings": [[469, null]], "Shape manipulation": [[465, "shape-manipulation"]], "Simple matrix multiplication problem": [[502, "simple-matrix-multiplication-problem"]], "Simple random data": [[466, "simple-random-data"]], "Single node": [[503, "single-node"]], "Single-node setup": [[503, "single-node-setup"]], "Solving equations and inverting matrices": [[461, "solving-equations-and-inverting-matrices"]], "Sorting": [[470, "sorting"]], "Sorting, searching, and counting": [[470, null]], "Special methods": [[465, "special-methods"]], "Splitting arrays": [[463, "splitting-arrays"]], "Stack results in a performance penalty": [[501, "stack-results-in-a-performance-penalty"]], "Stage configuration": [[480, "stage-configuration"]], "Standard FFTs": [[11, "standard-ffts"]], "Statistics": [[471, null]], "Sums, products, differences": [[464, "sums-products-differences"]], "Supported shapes and datatypes": [[495, "supported-shapes-and-datatypes"]], "TBLIS": [[478, "tblis"], [493, "tblis"]], "Task function": [[502, "task-function"], [502, "id2"], [502, "id12"], [502, "id22"]], "The Legalese: Developer Certificate of Origin": [[477, "the-legalese-developer-certificate-of-origin"]], "The N-Dimensional array (cupynumeric.ndarray)": [[465, null]], "Third-party notices": [[493, null]], "Tiling arrays": [[463, "tiling-arrays"]], "Top three Tips": [[503, "top-three-tips"]], "TorchSWE case study": [[489, null]], "Transpose-like operations": [[463, "transpose-like-operations"]], "Trigonometric functions": [[464, "trigonometric-functions"]], "Truth value testing": [[462, "truth-value-testing"]], "Trying Numpy code without changes": [[499, null]], "Tutorial": [[503, null]], "Ufuncs": [[3, "ufuncs"]], "Understanding this example": [[502, "understanding-this-example"]], "Usage": [[504, null]], "Use array-based operations, AVOID loops with indexing": [[501, "use-array-based-operations-avoid-loops-with-indexing"]], "Use boolean masks, AVOID advanced indexing": [[501, "use-boolean-masks-avoid-advanced-indexing"]], "Use cuPyNumeric or NumPy arrays, AVOID native lists": [[501, "use-cupynumeric-or-numpy-arrays-avoid-native-lists"]], "Use logic functions, AVOID iterating through a loop": [[501, "use-logic-functions-avoid-iterating-through-a-loop"]], "Use mathematical functions, AVOID element-wise loops": [[501, "use-mathematical-functions-avoid-element-wise-loops"]], "Use output arguments to reduce memory allocation": [[501, "use-output-arguments-to-reduce-memory-allocation"]], "Use putmask to update an array based on another array": [[501, "use-putmask-to-update-an-array-based-on-another-array"]], "User guide": [[500, null]], "Using Legate timing tools": [[496, "using-legate-timing-tools"]], "Using a manual task manager": [[494, "using-a-manual-task-manager"]], "Using legate": [[494, "using-legate"]], "Using the GASNet networking backend": [[494, "using-the-gasnet-networking-backend"]], "Various windows": [[472, "various-windows"]], "Vectorize for better performance": [[501, "vectorize-for-better-performance"]], "Verify your Installation": [[492, "verify-your-installation"]], "What are the anti-patterns in a NumPy code?": [[490, "what-are-the-anti-patterns-in-a-numpy-code"]], "What are the defaults?": [[490, "what-are-the-defaults"]], "What are the different task variants available in Legate?": [[490, "what-are-the-different-task-variants-available-in-legate"]], "What does this warning mean?": [[490, "what-does-this-warning-mean"]], "What if I don\u2019t have a GPU?": [[490, "what-if-i-dont-have-a-gpu"]], "What is a Legate task?": [[502, "what-is-a-legate-task"]], "What is the difference between Legate and cuPyNumeric?": [[490, "what-is-the-difference-between-legate-and-cupynumeric"]], "What is the version of legate?": [[490, "what-is-the-version-of-legate"]], "When to use python vs legate?": [[490, "when-to-use-python-vs-legate"]], "Where I can read more about cuPyNumeric?": [[490, "where-i-can-read-more-about-cupynumeric"]], "Why are the results different from NumPy?": [[490, "why-are-the-results-different-from-numpy"]], "Why doesn\u2019t Legate use my GPU?": [[490, "why-doesnt-legate-use-my-gpu"]], "Why is cuPyNumeric slower than CuPy on my laptop?": [[490, "why-is-cupynumeric-slower-than-cupy-on-my-laptop"]], "Why is cuPyNumeric slower than NumPy on my laptop?": [[490, "why-is-cupynumeric-slower-than-numpy-on-my-laptop"]], "Window functions": [[472, null]], "cuPyNumeric": [[503, "cupynumeric"]], "cuPyNumeric vs NumPy": [[503, "cupynumeric-vs-numpy"]], "cupynumeric.absolute": [[12, null]], "cupynumeric.add": [[13, null]], "cupynumeric.all": [[14, null]], "cupynumeric.allclose": [[15, null]], "cupynumeric.amax": [[16, null]], "cupynumeric.amin": [[17, null]], "cupynumeric.angle": [[18, null]], "cupynumeric.any": [[19, null]], "cupynumeric.append": [[20, null]], "cupynumeric.arange": [[21, null]], "cupynumeric.arccos": [[22, null]], "cupynumeric.arccosh": [[23, null]], "cupynumeric.arcsin": [[24, null]], "cupynumeric.arcsinh": [[25, null]], "cupynumeric.arctan": [[26, null]], "cupynumeric.arctan2": [[27, null]], "cupynumeric.arctanh": [[28, null]], "cupynumeric.argmax": [[29, null]], "cupynumeric.argmin": [[30, null]], "cupynumeric.argpartition": [[31, null]], "cupynumeric.argsort": [[32, null]], "cupynumeric.argwhere": [[33, null]], "cupynumeric.array": [[34, null]], "cupynumeric.array_equal": [[35, null]], "cupynumeric.array_split": [[36, null]], "cupynumeric.asarray": [[37, null]], "cupynumeric.atleast_1d": [[38, null]], "cupynumeric.atleast_2d": [[39, null]], "cupynumeric.atleast_3d": [[40, null]], "cupynumeric.average": [[41, null]], "cupynumeric.bartlett": [[42, null]], "cupynumeric.bincount": [[43, null]], "cupynumeric.bitwise_and": [[44, null]], "cupynumeric.bitwise_or": [[45, null]], "cupynumeric.bitwise_xor": [[46, null]], "cupynumeric.blackman": [[47, null]], "cupynumeric.block": [[48, null]], "cupynumeric.broadcast": [[6, null]], "cupynumeric.broadcast_arrays": [[49, null]], "cupynumeric.broadcast_shapes": [[50, null]], "cupynumeric.broadcast_to": [[51, null]], "cupynumeric.cbrt": [[52, null]], "cupynumeric.ceil": [[53, null]], "cupynumeric.choose": [[54, null]], "cupynumeric.clip": [[55, null]], "cupynumeric.column_stack": [[56, null]], "cupynumeric.compress": [[57, null]], "cupynumeric.concatenate": [[58, null]], "cupynumeric.conj": [[59, null]], "cupynumeric.conjugate": [[60, null]], "cupynumeric.convolve": [[61, null]], "cupynumeric.copy": [[62, null]], "cupynumeric.copysign": [[63, null]], "cupynumeric.copyto": [[64, null]], "cupynumeric.cos": [[65, null]], "cupynumeric.cosh": [[66, null]], "cupynumeric.count_nonzero": [[67, null]], "cupynumeric.cov": [[68, null]], "cupynumeric.cross": [[69, null]], "cupynumeric.cumprod": [[70, null]], "cupynumeric.cumsum": [[71, null]], "cupynumeric.deg2rad": [[72, null]], "cupynumeric.degrees": [[73, null]], "cupynumeric.delete": [[74, null]], "cupynumeric.diag": [[75, null]], "cupynumeric.diag_indices": [[76, null]], "cupynumeric.diag_indices_from": [[77, null]], "cupynumeric.diagflat": [[78, null]], "cupynumeric.diagonal": [[79, null]], "cupynumeric.diff": [[80, null]], "cupynumeric.digitize": [[81, null]], "cupynumeric.divide": [[82, null]], "cupynumeric.dot": [[83, null]], "cupynumeric.dsplit": [[84, null]], "cupynumeric.dstack": [[85, null]], "cupynumeric.einsum": [[86, null]], "cupynumeric.einsum_path": [[87, null]], "cupynumeric.empty": [[88, null]], "cupynumeric.empty_like": [[89, null]], "cupynumeric.equal": [[90, null]], "cupynumeric.exp": [[91, null]], "cupynumeric.exp2": [[92, null]], "cupynumeric.expand_dims": [[93, null]], "cupynumeric.expm1": [[94, null]], "cupynumeric.extract": [[95, null]], "cupynumeric.eye": [[96, null]], "cupynumeric.fabs": [[97, null]], "cupynumeric.fft.fft": [[98, null]], "cupynumeric.fft.fft2": [[99, null]], "cupynumeric.fft.fftn": [[100, null]], "cupynumeric.fft.fftshift": [[101, null]], "cupynumeric.fft.hfft": [[102, null]], "cupynumeric.fft.ifft": [[103, null]], "cupynumeric.fft.ifft2": [[104, null]], "cupynumeric.fft.ifftn": [[105, null]], "cupynumeric.fft.ifftshift": [[106, null]], "cupynumeric.fft.ihfft": [[107, null]], "cupynumeric.fft.irfft": [[108, null]], "cupynumeric.fft.irfft2": [[109, null]], "cupynumeric.fft.irfftn": [[110, null]], "cupynumeric.fft.rfft": [[111, null]], "cupynumeric.fft.rfft2": [[112, null]], "cupynumeric.fft.rfftn": [[113, null]], "cupynumeric.fill_diagonal": [[114, null]], "cupynumeric.find_common_type": [[115, null]], "cupynumeric.flatnonzero": [[116, null]], "cupynumeric.flip": [[117, null]], "cupynumeric.fliplr": [[118, null]], "cupynumeric.flipud": [[119, null]], "cupynumeric.float_power": [[120, null]], "cupynumeric.floor": [[121, null]], "cupynumeric.floor_divide": [[122, null]], "cupynumeric.fmax": [[123, null]], "cupynumeric.fmin": [[124, null]], "cupynumeric.fmod": [[125, null]], "cupynumeric.frexp": [[126, null]], "cupynumeric.full": [[127, null]], "cupynumeric.full_like": [[128, null]], "cupynumeric.gcd": [[129, null]], "cupynumeric.gradient": [[130, null]], "cupynumeric.greater": [[131, null]], "cupynumeric.greater_equal": [[132, null]], "cupynumeric.hamming": [[133, null]], "cupynumeric.hanning": [[134, null]], "cupynumeric.histogram": [[135, null]], "cupynumeric.histogram2d": [[136, null]], "cupynumeric.histogramdd": [[137, null]], "cupynumeric.hsplit": [[138, null]], "cupynumeric.hstack": [[139, null]], "cupynumeric.hypot": [[140, null]], "cupynumeric.identity": [[141, null]], "cupynumeric.imag": [[142, null]], "cupynumeric.in1d": [[143, null]], "cupynumeric.indices": [[144, null]], "cupynumeric.inner": [[145, null]], "cupynumeric.insert": [[146, null]], "cupynumeric.invert": [[147, null]], "cupynumeric.isclose": [[148, null]], "cupynumeric.iscomplex": [[149, null]], "cupynumeric.iscomplexobj": [[150, null]], "cupynumeric.isfinite": [[151, null]], "cupynumeric.isinf": [[152, null]], "cupynumeric.isnan": [[153, null]], "cupynumeric.isneginf": [[154, null]], "cupynumeric.isposinf": [[155, null]], "cupynumeric.isreal": [[156, null]], "cupynumeric.isrealobj": [[157, null]], "cupynumeric.isscalar": [[158, null]], "cupynumeric.ix_": [[159, null]], "cupynumeric.kaiser": [[160, null]], "cupynumeric.lcm": [[161, null]], "cupynumeric.ldexp": [[162, null]], "cupynumeric.left_shift": [[163, null]], "cupynumeric.less": [[164, null]], "cupynumeric.less_equal": [[165, null]], "cupynumeric.linalg.cholesky": [[166, null]], "cupynumeric.linalg.eig": [[167, null]], "cupynumeric.linalg.eigh": [[168, null]], "cupynumeric.linalg.eigvals": [[169, null]], "cupynumeric.linalg.eigvalsh": [[170, null]], "cupynumeric.linalg.expm": [[171, null]], "cupynumeric.linalg.matrix_power": [[172, null]], "cupynumeric.linalg.multi_dot": [[173, null]], "cupynumeric.linalg.norm": [[174, null]], "cupynumeric.linalg.qr": [[175, null]], "cupynumeric.linalg.solve": [[176, null]], "cupynumeric.linalg.svd": [[177, null]], "cupynumeric.linspace": [[178, null]], "cupynumeric.load": [[179, null]], "cupynumeric.log": [[180, null]], "cupynumeric.log10": [[181, null]], "cupynumeric.log1p": [[182, null]], "cupynumeric.log2": [[183, null]], "cupynumeric.logaddexp": [[184, null]], "cupynumeric.logaddexp2": [[185, null]], "cupynumeric.logical_and": [[186, null]], "cupynumeric.logical_not": [[187, null]], "cupynumeric.logical_or": [[188, null]], "cupynumeric.logical_xor": [[189, null]], "cupynumeric.logspace": [[190, null]], "cupynumeric.mask_indices": [[191, null]], "cupynumeric.matmul": [[192, null]], "cupynumeric.maximum": [[193, null]], "cupynumeric.mean": [[194, null]], "cupynumeric.median": [[195, null]], "cupynumeric.meshgrid": [[196, null]], "cupynumeric.minimum": [[197, null]], "cupynumeric.mod": [[198, null]], "cupynumeric.modf": [[199, null]], "cupynumeric.moveaxis": [[200, null]], "cupynumeric.multiply": [[201, null]], "cupynumeric.nan_to_num": [[202, null]], "cupynumeric.nanargmax": [[203, null]], "cupynumeric.nanargmin": [[204, null]], "cupynumeric.nancumprod": [[205, null]], "cupynumeric.nancumsum": [[206, null]], "cupynumeric.nanmax": [[207, null]], "cupynumeric.nanmean": [[208, null]], "cupynumeric.nanmedian": [[209, null]], "cupynumeric.nanmin": [[210, null]], "cupynumeric.nanpercentile": [[211, null]], "cupynumeric.nanprod": [[212, null]], "cupynumeric.nanquantile": [[213, null]], "cupynumeric.nansum": [[214, null]], "cupynumeric.ndarray": [[4, null]], "cupynumeric.ndarray.T": [[215, null]], "cupynumeric.ndarray.__abs__": [[216, null]], "cupynumeric.ndarray.__add__": [[217, null]], "cupynumeric.ndarray.__and__": [[218, null]], "cupynumeric.ndarray.__array__": [[219, null]], "cupynumeric.ndarray.__bool__": [[220, null]], "cupynumeric.ndarray.__complex__": [[221, null]], "cupynumeric.ndarray.__contains__": [[222, null]], "cupynumeric.ndarray.__copy__": [[223, null]], "cupynumeric.ndarray.__deepcopy__": [[224, null]], "cupynumeric.ndarray.__divmod__": [[225, null]], "cupynumeric.ndarray.__eq__": [[226, null]], "cupynumeric.ndarray.__float__": [[227, null]], "cupynumeric.ndarray.__floordiv__": [[228, null]], "cupynumeric.ndarray.__ge__": [[229, null]], "cupynumeric.ndarray.__getitem__": [[230, null]], "cupynumeric.ndarray.__gt__": [[231, null]], "cupynumeric.ndarray.__iadd__": [[232, null]], "cupynumeric.ndarray.__iand__": [[233, null]], "cupynumeric.ndarray.__ifloordiv__": [[234, null]], "cupynumeric.ndarray.__ilshift__": [[235, null]], "cupynumeric.ndarray.__imatmul__": [[236, null]], "cupynumeric.ndarray.__imod__": [[237, null]], "cupynumeric.ndarray.__imul__": [[238, null]], "cupynumeric.ndarray.__index__": [[239, null]], "cupynumeric.ndarray.__int__": [[240, null]], "cupynumeric.ndarray.__invert__": [[241, null]], "cupynumeric.ndarray.__ior__": [[242, null]], "cupynumeric.ndarray.__ipow__": [[243, null]], "cupynumeric.ndarray.__irshift__": [[244, null]], "cupynumeric.ndarray.__isub__": [[245, null]], "cupynumeric.ndarray.__itruediv__": [[246, null]], "cupynumeric.ndarray.__ixor__": [[247, null]], "cupynumeric.ndarray.__le__": [[248, null]], "cupynumeric.ndarray.__len__": [[249, null]], "cupynumeric.ndarray.__lshift__": [[250, null]], "cupynumeric.ndarray.__lt__": [[251, null]], "cupynumeric.ndarray.__matmul__": [[252, null]], "cupynumeric.ndarray.__mod__": [[253, null]], "cupynumeric.ndarray.__mul__": [[254, null]], "cupynumeric.ndarray.__ne__": [[255, null]], "cupynumeric.ndarray.__neg__": [[256, null]], "cupynumeric.ndarray.__new__": [[257, null]], "cupynumeric.ndarray.__or__": [[258, null]], "cupynumeric.ndarray.__pos__": [[259, null]], "cupynumeric.ndarray.__pow__": [[260, null]], "cupynumeric.ndarray.__reduce__": [[261, null]], "cupynumeric.ndarray.__repr__": [[262, null]], "cupynumeric.ndarray.__rmatmul__": [[263, null]], "cupynumeric.ndarray.__rshift__": [[264, null]], "cupynumeric.ndarray.__setitem__": [[265, null]], "cupynumeric.ndarray.__setstate__": [[266, null]], "cupynumeric.ndarray.__str__": [[267, null]], "cupynumeric.ndarray.__sub__": [[268, null]], "cupynumeric.ndarray.__truediv__": [[269, null]], "cupynumeric.ndarray.__xor__": [[270, null]], "cupynumeric.ndarray.all": [[271, null]], "cupynumeric.ndarray.any": [[272, null]], "cupynumeric.ndarray.argmax": [[273, null]], "cupynumeric.ndarray.argmin": [[274, null]], "cupynumeric.ndarray.argpartition": [[275, null]], "cupynumeric.ndarray.argsort": [[276, null]], "cupynumeric.ndarray.astype": [[277, null]], "cupynumeric.ndarray.base": [[278, null]], "cupynumeric.ndarray.choose": [[279, null]], "cupynumeric.ndarray.clip": [[280, null]], "cupynumeric.ndarray.compress": [[281, null]], "cupynumeric.ndarray.conj": [[282, null]], "cupynumeric.ndarray.conjugate": [[283, null]], "cupynumeric.ndarray.copy": [[284, null]], "cupynumeric.ndarray.ctypes": [[285, null]], "cupynumeric.ndarray.cumprod": [[286, null]], "cupynumeric.ndarray.cumsum": [[287, null]], "cupynumeric.ndarray.data": [[288, null]], "cupynumeric.ndarray.diagonal": [[289, null]], "cupynumeric.ndarray.dot": [[290, null]], "cupynumeric.ndarray.dtype": [[291, null]], "cupynumeric.ndarray.dump": [[292, null]], "cupynumeric.ndarray.dumps": [[293, null]], "cupynumeric.ndarray.fill": [[294, null]], "cupynumeric.ndarray.flags": [[295, null]], "cupynumeric.ndarray.flat": [[296, null]], "cupynumeric.ndarray.flatten": [[297, null]], "cupynumeric.ndarray.flip": [[298, null]], "cupynumeric.ndarray.getfield": [[299, null]], "cupynumeric.ndarray.imag": [[300, null]], "cupynumeric.ndarray.item": [[301, null]], "cupynumeric.ndarray.itemset": [[302, null]], "cupynumeric.ndarray.itemsize": [[303, null]], "cupynumeric.ndarray.max": [[304, null]], "cupynumeric.ndarray.mean": [[305, null]], "cupynumeric.ndarray.min": [[306, null]], "cupynumeric.ndarray.nbytes": [[307, null]], "cupynumeric.ndarray.ndim": [[308, null]], "cupynumeric.ndarray.nonzero": [[309, null]], "cupynumeric.ndarray.partition": [[310, null]], "cupynumeric.ndarray.prod": [[311, null]], "cupynumeric.ndarray.put": [[312, null]], "cupynumeric.ndarray.ravel": [[313, null]], "cupynumeric.ndarray.real": [[314, null]], "cupynumeric.ndarray.reshape": [[315, null]], "cupynumeric.ndarray.searchsorted": [[316, null]], "cupynumeric.ndarray.setfield": [[317, null]], "cupynumeric.ndarray.setflags": [[318, null]], "cupynumeric.ndarray.shape": [[319, null]], "cupynumeric.ndarray.size": [[320, null]], "cupynumeric.ndarray.sort": [[321, null]], "cupynumeric.ndarray.squeeze": [[322, null]], "cupynumeric.ndarray.strides": [[323, null]], "cupynumeric.ndarray.sum": [[324, null]], "cupynumeric.ndarray.swapaxes": [[325, null]], "cupynumeric.ndarray.take": [[326, null]], "cupynumeric.ndarray.tobytes": [[327, null]], "cupynumeric.ndarray.tofile": [[328, null]], "cupynumeric.ndarray.tolist": [[329, null]], "cupynumeric.ndarray.tostring": [[330, null]], "cupynumeric.ndarray.trace": [[331, null]], "cupynumeric.ndarray.transpose": [[332, null]], "cupynumeric.ndarray.unique": [[333, null]], "cupynumeric.ndarray.var": [[334, null]], "cupynumeric.ndarray.view": [[335, null]], "cupynumeric.ndim": [[336, null]], "cupynumeric.negative": [[337, null]], "cupynumeric.nextafter": [[338, null]], "cupynumeric.nonzero": [[339, null]], "cupynumeric.not_equal": [[340, null]], "cupynumeric.ones": [[341, null]], "cupynumeric.ones_like": [[342, null]], "cupynumeric.outer": [[343, null]], "cupynumeric.packbits": [[344, null]], "cupynumeric.partition": [[345, null]], "cupynumeric.percentile": [[346, null]], "cupynumeric.place": [[347, null]], "cupynumeric.positive": [[348, null]], "cupynumeric.power": [[349, null]], "cupynumeric.prod": [[350, null]], "cupynumeric.put": [[351, null]], "cupynumeric.put_along_axis": [[352, null]], "cupynumeric.putmask": [[353, null]], "cupynumeric.quantile": [[354, null]], "cupynumeric.rad2deg": [[355, null]], "cupynumeric.radians": [[356, null]], "cupynumeric.random.BitGenerator": [[1, null]], "cupynumeric.random.Generator": [[2, null]], "cupynumeric.random.beta": [[357, null]], "cupynumeric.random.binomial": [[358, null]], "cupynumeric.random.bytes": [[359, null]], "cupynumeric.random.chisquare": [[360, null]], "cupynumeric.random.default_rng": [[361, null]], "cupynumeric.random.exponential": [[362, null]], "cupynumeric.random.f": [[363, null]], "cupynumeric.random.gamma": [[364, null]], "cupynumeric.random.geometric": [[365, null]], "cupynumeric.random.gumbel": [[366, null]], "cupynumeric.random.hypergeometric": [[367, null]], "cupynumeric.random.laplace": [[368, null]], "cupynumeric.random.logistic": [[369, null]], "cupynumeric.random.lognormal": [[370, null]], "cupynumeric.random.logseries": [[371, null]], "cupynumeric.random.negative_binomial": [[372, null]], "cupynumeric.random.noncentral_chisquare": [[373, null]], "cupynumeric.random.noncentral_f": [[374, null]], "cupynumeric.random.normal": [[375, null]], "cupynumeric.random.pareto": [[376, null]], "cupynumeric.random.poisson": [[377, null]], "cupynumeric.random.power": [[378, null]], "cupynumeric.random.rand": [[379, null]], "cupynumeric.random.randint": [[380, null]], "cupynumeric.random.randn": [[381, null]], "cupynumeric.random.random": [[382, null]], "cupynumeric.random.random_integers": [[383, null]], "cupynumeric.random.random_sample": [[384, null]], "cupynumeric.random.ranf": [[385, null]], "cupynumeric.random.rayleigh": [[386, null]], "cupynumeric.random.sample": [[387, null]], "cupynumeric.random.seed": [[388, null]], "cupynumeric.random.standard_cauchy": [[389, null]], "cupynumeric.random.standard_exponential": [[390, null]], "cupynumeric.random.standard_gamma": [[391, null]], "cupynumeric.random.standard_t": [[392, null]], "cupynumeric.random.triangular": [[393, null]], "cupynumeric.random.uniform": [[394, null]], "cupynumeric.random.vonmises": [[395, null]], "cupynumeric.random.wald": [[396, null]], "cupynumeric.random.weibull": [[397, null]], "cupynumeric.random.zipf": [[398, null]], "cupynumeric.ravel": [[399, null]], "cupynumeric.ravel_multi_index": [[400, null]], "cupynumeric.real": [[401, null]], "cupynumeric.real_if_close": [[402, null]], "cupynumeric.reciprocal": [[403, null]], "cupynumeric.remainder": [[404, null]], "cupynumeric.repeat": [[405, null]], "cupynumeric.reshape": [[406, null]], "cupynumeric.right_shift": [[407, null]], "cupynumeric.rint": [[408, null]], "cupynumeric.roll": [[409, null]], "cupynumeric.roots": [[410, null]], "cupynumeric.rot90": [[411, null]], "cupynumeric.round": [[412, null]], "cupynumeric.row_stack": [[413, null]], "cupynumeric.searchsorted": [[414, null]], "cupynumeric.select": [[415, null]], "cupynumeric.shape": [[416, null]], "cupynumeric.sign": [[417, null]], "cupynumeric.signbit": [[418, null]], "cupynumeric.sin": [[419, null]], "cupynumeric.sinh": [[420, null]], "cupynumeric.sort": [[421, null]], "cupynumeric.sort_complex": [[422, null]], "cupynumeric.split": [[423, null]], "cupynumeric.sqrt": [[424, null]], "cupynumeric.square": [[425, null]], "cupynumeric.squeeze": [[426, null]], "cupynumeric.stack": [[427, null]], "cupynumeric.subtract": [[428, null]], "cupynumeric.sum": [[429, null]], "cupynumeric.swapaxes": [[430, null]], "cupynumeric.take": [[431, null]], "cupynumeric.take_along_axis": [[432, null]], "cupynumeric.tan": [[433, null]], "cupynumeric.tanh": [[434, null]], "cupynumeric.tensordot": [[435, null]], "cupynumeric.tile": [[436, null]], "cupynumeric.trace": [[437, null]], "cupynumeric.transpose": [[438, null]], "cupynumeric.tri": [[439, null]], "cupynumeric.tril": [[440, null]], "cupynumeric.tril_indices": [[441, null]], "cupynumeric.tril_indices_from": [[442, null]], "cupynumeric.triu": [[443, null]], "cupynumeric.triu_indices": [[444, null]], "cupynumeric.triu_indices_from": [[445, null]], "cupynumeric.true_divide": [[446, null]], "cupynumeric.trunc": [[447, null]], "cupynumeric.unique": [[448, null]], "cupynumeric.unpackbits": [[449, null]], "cupynumeric.unravel_index": [[450, null]], "cupynumeric.var": [[451, null]], "cupynumeric.vdot": [[452, null]], "cupynumeric.vsplit": [[453, null]], "cupynumeric.vstack": [[454, null]], "cupynumeric.where": [[455, null]], "cupynumeric.zeros": [[456, null]], "cupynumeric.zeros_like": [[457, null]], "doctor": [[469, "doctor"]], "doctor_filename": [[469, "doctor-filename"], [469, "id2"]], "doctor_format": [[469, "doctor-format"]], "fallback_stacktrace": [[469, "fallback-stacktrace"]], "fast_math": [[469, "fast-math"]], "force_thunk": [[469, "force-thunk"]], "matmul_cache_size": [[469, "matmul-cache-size"]], "max_eager_volume": [[469, "max-eager-volume"]], "min_cpu_chunk": [[469, "min-cpu-chunk"]], "min_gpu_chunk": [[469, "min-gpu-chunk"]], "min_omp_chunk": [[469, "min-omp-chunk"]], "numpy_compat": [[469, "numpy-compat"]], "preload_cudalibs": [[469, "preload-cudalibs"]], "report_coverage": [[469, "report-coverage"]], "report_dump_callstack": [[469, "report-dump-callstack"]], "report_dump_csv": [[469, "report-dump-csv"]], "take_default": [[469, "take-default"]], "test": [[469, "test"]], "warn": [[469, "warn"]]}, "docnames": ["_implemented", "api/_bitgenerator", "api/_generator", "api/_grouped", "api/_ndarray", "api/binary", "api/broadcast", "api/classes", "api/comparison", "api/creation", "api/datatype", "api/fft", "api/generated/cupynumeric.absolute", "api/generated/cupynumeric.add", "api/generated/cupynumeric.all", "api/generated/cupynumeric.allclose", "api/generated/cupynumeric.amax", "api/generated/cupynumeric.amin", "api/generated/cupynumeric.angle", "api/generated/cupynumeric.any", "api/generated/cupynumeric.append", "api/generated/cupynumeric.arange", "api/generated/cupynumeric.arccos", "api/generated/cupynumeric.arccosh", "api/generated/cupynumeric.arcsin", "api/generated/cupynumeric.arcsinh", "api/generated/cupynumeric.arctan", "api/generated/cupynumeric.arctan2", "api/generated/cupynumeric.arctanh", "api/generated/cupynumeric.argmax", "api/generated/cupynumeric.argmin", "api/generated/cupynumeric.argpartition", "api/generated/cupynumeric.argsort", "api/generated/cupynumeric.argwhere", "api/generated/cupynumeric.array", "api/generated/cupynumeric.array_equal", "api/generated/cupynumeric.array_split", "api/generated/cupynumeric.asarray", "api/generated/cupynumeric.atleast_1d", "api/generated/cupynumeric.atleast_2d", "api/generated/cupynumeric.atleast_3d", "api/generated/cupynumeric.average", "api/generated/cupynumeric.bartlett", "api/generated/cupynumeric.bincount", "api/generated/cupynumeric.bitwise_and", "api/generated/cupynumeric.bitwise_or", "api/generated/cupynumeric.bitwise_xor", "api/generated/cupynumeric.blackman", "api/generated/cupynumeric.block", "api/generated/cupynumeric.broadcast_arrays", "api/generated/cupynumeric.broadcast_shapes", "api/generated/cupynumeric.broadcast_to", "api/generated/cupynumeric.cbrt", "api/generated/cupynumeric.ceil", "api/generated/cupynumeric.choose", "api/generated/cupynumeric.clip", "api/generated/cupynumeric.column_stack", "api/generated/cupynumeric.compress", "api/generated/cupynumeric.concatenate", "api/generated/cupynumeric.conj", "api/generated/cupynumeric.conjugate", "api/generated/cupynumeric.convolve", "api/generated/cupynumeric.copy", "api/generated/cupynumeric.copysign", "api/generated/cupynumeric.copyto", "api/generated/cupynumeric.cos", "api/generated/cupynumeric.cosh", "api/generated/cupynumeric.count_nonzero", "api/generated/cupynumeric.cov", "api/generated/cupynumeric.cross", "api/generated/cupynumeric.cumprod", "api/generated/cupynumeric.cumsum", "api/generated/cupynumeric.deg2rad", "api/generated/cupynumeric.degrees", "api/generated/cupynumeric.delete", "api/generated/cupynumeric.diag", "api/generated/cupynumeric.diag_indices", "api/generated/cupynumeric.diag_indices_from", "api/generated/cupynumeric.diagflat", "api/generated/cupynumeric.diagonal", "api/generated/cupynumeric.diff", "api/generated/cupynumeric.digitize", "api/generated/cupynumeric.divide", "api/generated/cupynumeric.dot", "api/generated/cupynumeric.dsplit", "api/generated/cupynumeric.dstack", "api/generated/cupynumeric.einsum", "api/generated/cupynumeric.einsum_path", "api/generated/cupynumeric.empty", "api/generated/cupynumeric.empty_like", "api/generated/cupynumeric.equal", "api/generated/cupynumeric.exp", "api/generated/cupynumeric.exp2", "api/generated/cupynumeric.expand_dims", "api/generated/cupynumeric.expm1", "api/generated/cupynumeric.extract", "api/generated/cupynumeric.eye", "api/generated/cupynumeric.fabs", "api/generated/cupynumeric.fft.fft", "api/generated/cupynumeric.fft.fft2", "api/generated/cupynumeric.fft.fftn", "api/generated/cupynumeric.fft.fftshift", "api/generated/cupynumeric.fft.hfft", "api/generated/cupynumeric.fft.ifft", "api/generated/cupynumeric.fft.ifft2", "api/generated/cupynumeric.fft.ifftn", "api/generated/cupynumeric.fft.ifftshift", "api/generated/cupynumeric.fft.ihfft", "api/generated/cupynumeric.fft.irfft", "api/generated/cupynumeric.fft.irfft2", "api/generated/cupynumeric.fft.irfftn", "api/generated/cupynumeric.fft.rfft", "api/generated/cupynumeric.fft.rfft2", "api/generated/cupynumeric.fft.rfftn", "api/generated/cupynumeric.fill_diagonal", "api/generated/cupynumeric.find_common_type", "api/generated/cupynumeric.flatnonzero", "api/generated/cupynumeric.flip", "api/generated/cupynumeric.fliplr", "api/generated/cupynumeric.flipud", "api/generated/cupynumeric.float_power", "api/generated/cupynumeric.floor", "api/generated/cupynumeric.floor_divide", "api/generated/cupynumeric.fmax", "api/generated/cupynumeric.fmin", "api/generated/cupynumeric.fmod", "api/generated/cupynumeric.frexp", "api/generated/cupynumeric.full", "api/generated/cupynumeric.full_like", "api/generated/cupynumeric.gcd", "api/generated/cupynumeric.gradient", "api/generated/cupynumeric.greater", "api/generated/cupynumeric.greater_equal", "api/generated/cupynumeric.hamming", "api/generated/cupynumeric.hanning", "api/generated/cupynumeric.histogram", "api/generated/cupynumeric.histogram2d", "api/generated/cupynumeric.histogramdd", "api/generated/cupynumeric.hsplit", "api/generated/cupynumeric.hstack", "api/generated/cupynumeric.hypot", "api/generated/cupynumeric.identity", "api/generated/cupynumeric.imag", "api/generated/cupynumeric.in1d", "api/generated/cupynumeric.indices", "api/generated/cupynumeric.inner", "api/generated/cupynumeric.insert", "api/generated/cupynumeric.invert", "api/generated/cupynumeric.isclose", "api/generated/cupynumeric.iscomplex", "api/generated/cupynumeric.iscomplexobj", "api/generated/cupynumeric.isfinite", "api/generated/cupynumeric.isinf", "api/generated/cupynumeric.isnan", "api/generated/cupynumeric.isneginf", "api/generated/cupynumeric.isposinf", "api/generated/cupynumeric.isreal", "api/generated/cupynumeric.isrealobj", "api/generated/cupynumeric.isscalar", "api/generated/cupynumeric.ix_", "api/generated/cupynumeric.kaiser", "api/generated/cupynumeric.lcm", "api/generated/cupynumeric.ldexp", "api/generated/cupynumeric.left_shift", "api/generated/cupynumeric.less", "api/generated/cupynumeric.less_equal", "api/generated/cupynumeric.linalg.cholesky", "api/generated/cupynumeric.linalg.eig", "api/generated/cupynumeric.linalg.eigh", "api/generated/cupynumeric.linalg.eigvals", "api/generated/cupynumeric.linalg.eigvalsh", "api/generated/cupynumeric.linalg.expm", "api/generated/cupynumeric.linalg.matrix_power", "api/generated/cupynumeric.linalg.multi_dot", "api/generated/cupynumeric.linalg.norm", "api/generated/cupynumeric.linalg.qr", "api/generated/cupynumeric.linalg.solve", "api/generated/cupynumeric.linalg.svd", "api/generated/cupynumeric.linspace", "api/generated/cupynumeric.load", "api/generated/cupynumeric.log", "api/generated/cupynumeric.log10", "api/generated/cupynumeric.log1p", "api/generated/cupynumeric.log2", "api/generated/cupynumeric.logaddexp", "api/generated/cupynumeric.logaddexp2", "api/generated/cupynumeric.logical_and", "api/generated/cupynumeric.logical_not", "api/generated/cupynumeric.logical_or", "api/generated/cupynumeric.logical_xor", "api/generated/cupynumeric.logspace", "api/generated/cupynumeric.mask_indices", "api/generated/cupynumeric.matmul", "api/generated/cupynumeric.maximum", "api/generated/cupynumeric.mean", "api/generated/cupynumeric.median", "api/generated/cupynumeric.meshgrid", "api/generated/cupynumeric.minimum", "api/generated/cupynumeric.mod", "api/generated/cupynumeric.modf", "api/generated/cupynumeric.moveaxis", "api/generated/cupynumeric.multiply", "api/generated/cupynumeric.nan_to_num", "api/generated/cupynumeric.nanargmax", "api/generated/cupynumeric.nanargmin", "api/generated/cupynumeric.nancumprod", "api/generated/cupynumeric.nancumsum", "api/generated/cupynumeric.nanmax", "api/generated/cupynumeric.nanmean", "api/generated/cupynumeric.nanmedian", "api/generated/cupynumeric.nanmin", "api/generated/cupynumeric.nanpercentile", "api/generated/cupynumeric.nanprod", "api/generated/cupynumeric.nanquantile", "api/generated/cupynumeric.nansum", "api/generated/cupynumeric.ndarray.T", "api/generated/cupynumeric.ndarray.__abs__", "api/generated/cupynumeric.ndarray.__add__", "api/generated/cupynumeric.ndarray.__and__", "api/generated/cupynumeric.ndarray.__array__", "api/generated/cupynumeric.ndarray.__bool__", "api/generated/cupynumeric.ndarray.__complex__", "api/generated/cupynumeric.ndarray.__contains__", "api/generated/cupynumeric.ndarray.__copy__", "api/generated/cupynumeric.ndarray.__deepcopy__", "api/generated/cupynumeric.ndarray.__divmod__", "api/generated/cupynumeric.ndarray.__eq__", "api/generated/cupynumeric.ndarray.__float__", "api/generated/cupynumeric.ndarray.__floordiv__", "api/generated/cupynumeric.ndarray.__ge__", "api/generated/cupynumeric.ndarray.__getitem__", "api/generated/cupynumeric.ndarray.__gt__", "api/generated/cupynumeric.ndarray.__iadd__", "api/generated/cupynumeric.ndarray.__iand__", "api/generated/cupynumeric.ndarray.__ifloordiv__", "api/generated/cupynumeric.ndarray.__ilshift__", "api/generated/cupynumeric.ndarray.__imatmul__", "api/generated/cupynumeric.ndarray.__imod__", "api/generated/cupynumeric.ndarray.__imul__", "api/generated/cupynumeric.ndarray.__index__", "api/generated/cupynumeric.ndarray.__int__", "api/generated/cupynumeric.ndarray.__invert__", "api/generated/cupynumeric.ndarray.__ior__", "api/generated/cupynumeric.ndarray.__ipow__", "api/generated/cupynumeric.ndarray.__irshift__", "api/generated/cupynumeric.ndarray.__isub__", "api/generated/cupynumeric.ndarray.__itruediv__", "api/generated/cupynumeric.ndarray.__ixor__", "api/generated/cupynumeric.ndarray.__le__", "api/generated/cupynumeric.ndarray.__len__", "api/generated/cupynumeric.ndarray.__lshift__", "api/generated/cupynumeric.ndarray.__lt__", "api/generated/cupynumeric.ndarray.__matmul__", "api/generated/cupynumeric.ndarray.__mod__", "api/generated/cupynumeric.ndarray.__mul__", "api/generated/cupynumeric.ndarray.__ne__", "api/generated/cupynumeric.ndarray.__neg__", "api/generated/cupynumeric.ndarray.__new__", "api/generated/cupynumeric.ndarray.__or__", "api/generated/cupynumeric.ndarray.__pos__", "api/generated/cupynumeric.ndarray.__pow__", "api/generated/cupynumeric.ndarray.__reduce__", "api/generated/cupynumeric.ndarray.__repr__", "api/generated/cupynumeric.ndarray.__rmatmul__", "api/generated/cupynumeric.ndarray.__rshift__", "api/generated/cupynumeric.ndarray.__setitem__", "api/generated/cupynumeric.ndarray.__setstate__", "api/generated/cupynumeric.ndarray.__str__", "api/generated/cupynumeric.ndarray.__sub__", "api/generated/cupynumeric.ndarray.__truediv__", "api/generated/cupynumeric.ndarray.__xor__", "api/generated/cupynumeric.ndarray.all", "api/generated/cupynumeric.ndarray.any", "api/generated/cupynumeric.ndarray.argmax", "api/generated/cupynumeric.ndarray.argmin", "api/generated/cupynumeric.ndarray.argpartition", "api/generated/cupynumeric.ndarray.argsort", "api/generated/cupynumeric.ndarray.astype", "api/generated/cupynumeric.ndarray.base", "api/generated/cupynumeric.ndarray.choose", "api/generated/cupynumeric.ndarray.clip", "api/generated/cupynumeric.ndarray.compress", "api/generated/cupynumeric.ndarray.conj", "api/generated/cupynumeric.ndarray.conjugate", "api/generated/cupynumeric.ndarray.copy", "api/generated/cupynumeric.ndarray.ctypes", "api/generated/cupynumeric.ndarray.cumprod", "api/generated/cupynumeric.ndarray.cumsum", "api/generated/cupynumeric.ndarray.data", "api/generated/cupynumeric.ndarray.diagonal", "api/generated/cupynumeric.ndarray.dot", "api/generated/cupynumeric.ndarray.dtype", "api/generated/cupynumeric.ndarray.dump", "api/generated/cupynumeric.ndarray.dumps", "api/generated/cupynumeric.ndarray.fill", "api/generated/cupynumeric.ndarray.flags", "api/generated/cupynumeric.ndarray.flat", "api/generated/cupynumeric.ndarray.flatten", "api/generated/cupynumeric.ndarray.flip", "api/generated/cupynumeric.ndarray.getfield", "api/generated/cupynumeric.ndarray.imag", "api/generated/cupynumeric.ndarray.item", "api/generated/cupynumeric.ndarray.itemset", "api/generated/cupynumeric.ndarray.itemsize", "api/generated/cupynumeric.ndarray.max", "api/generated/cupynumeric.ndarray.mean", "api/generated/cupynumeric.ndarray.min", "api/generated/cupynumeric.ndarray.nbytes", "api/generated/cupynumeric.ndarray.ndim", "api/generated/cupynumeric.ndarray.nonzero", "api/generated/cupynumeric.ndarray.partition", "api/generated/cupynumeric.ndarray.prod", "api/generated/cupynumeric.ndarray.put", "api/generated/cupynumeric.ndarray.ravel", "api/generated/cupynumeric.ndarray.real", "api/generated/cupynumeric.ndarray.reshape", "api/generated/cupynumeric.ndarray.searchsorted", "api/generated/cupynumeric.ndarray.setfield", "api/generated/cupynumeric.ndarray.setflags", "api/generated/cupynumeric.ndarray.shape", "api/generated/cupynumeric.ndarray.size", "api/generated/cupynumeric.ndarray.sort", "api/generated/cupynumeric.ndarray.squeeze", "api/generated/cupynumeric.ndarray.strides", "api/generated/cupynumeric.ndarray.sum", "api/generated/cupynumeric.ndarray.swapaxes", "api/generated/cupynumeric.ndarray.take", "api/generated/cupynumeric.ndarray.tobytes", "api/generated/cupynumeric.ndarray.tofile", "api/generated/cupynumeric.ndarray.tolist", "api/generated/cupynumeric.ndarray.tostring", "api/generated/cupynumeric.ndarray.trace", "api/generated/cupynumeric.ndarray.transpose", "api/generated/cupynumeric.ndarray.unique", "api/generated/cupynumeric.ndarray.var", "api/generated/cupynumeric.ndarray.view", "api/generated/cupynumeric.ndim", "api/generated/cupynumeric.negative", "api/generated/cupynumeric.nextafter", "api/generated/cupynumeric.nonzero", "api/generated/cupynumeric.not_equal", "api/generated/cupynumeric.ones", "api/generated/cupynumeric.ones_like", "api/generated/cupynumeric.outer", "api/generated/cupynumeric.packbits", "api/generated/cupynumeric.partition", "api/generated/cupynumeric.percentile", "api/generated/cupynumeric.place", "api/generated/cupynumeric.positive", "api/generated/cupynumeric.power", "api/generated/cupynumeric.prod", "api/generated/cupynumeric.put", "api/generated/cupynumeric.put_along_axis", "api/generated/cupynumeric.putmask", "api/generated/cupynumeric.quantile", "api/generated/cupynumeric.rad2deg", "api/generated/cupynumeric.radians", "api/generated/cupynumeric.random.beta", "api/generated/cupynumeric.random.binomial", "api/generated/cupynumeric.random.bytes", "api/generated/cupynumeric.random.chisquare", "api/generated/cupynumeric.random.default_rng", "api/generated/cupynumeric.random.exponential", "api/generated/cupynumeric.random.f", "api/generated/cupynumeric.random.gamma", "api/generated/cupynumeric.random.geometric", "api/generated/cupynumeric.random.gumbel", "api/generated/cupynumeric.random.hypergeometric", "api/generated/cupynumeric.random.laplace", "api/generated/cupynumeric.random.logistic", "api/generated/cupynumeric.random.lognormal", "api/generated/cupynumeric.random.logseries", "api/generated/cupynumeric.random.negative_binomial", "api/generated/cupynumeric.random.noncentral_chisquare", "api/generated/cupynumeric.random.noncentral_f", "api/generated/cupynumeric.random.normal", "api/generated/cupynumeric.random.pareto", "api/generated/cupynumeric.random.poisson", "api/generated/cupynumeric.random.power", "api/generated/cupynumeric.random.rand", "api/generated/cupynumeric.random.randint", "api/generated/cupynumeric.random.randn", "api/generated/cupynumeric.random.random", "api/generated/cupynumeric.random.random_integers", "api/generated/cupynumeric.random.random_sample", "api/generated/cupynumeric.random.ranf", "api/generated/cupynumeric.random.rayleigh", "api/generated/cupynumeric.random.sample", "api/generated/cupynumeric.random.seed", "api/generated/cupynumeric.random.standard_cauchy", "api/generated/cupynumeric.random.standard_exponential", "api/generated/cupynumeric.random.standard_gamma", "api/generated/cupynumeric.random.standard_t", "api/generated/cupynumeric.random.triangular", "api/generated/cupynumeric.random.uniform", "api/generated/cupynumeric.random.vonmises", "api/generated/cupynumeric.random.wald", "api/generated/cupynumeric.random.weibull", "api/generated/cupynumeric.random.zipf", "api/generated/cupynumeric.ravel", "api/generated/cupynumeric.ravel_multi_index", "api/generated/cupynumeric.real", "api/generated/cupynumeric.real_if_close", "api/generated/cupynumeric.reciprocal", "api/generated/cupynumeric.remainder", "api/generated/cupynumeric.repeat", "api/generated/cupynumeric.reshape", "api/generated/cupynumeric.right_shift", "api/generated/cupynumeric.rint", "api/generated/cupynumeric.roll", "api/generated/cupynumeric.roots", "api/generated/cupynumeric.rot90", "api/generated/cupynumeric.round", "api/generated/cupynumeric.row_stack", "api/generated/cupynumeric.searchsorted", "api/generated/cupynumeric.select", "api/generated/cupynumeric.shape", "api/generated/cupynumeric.sign", "api/generated/cupynumeric.signbit", "api/generated/cupynumeric.sin", "api/generated/cupynumeric.sinh", "api/generated/cupynumeric.sort", "api/generated/cupynumeric.sort_complex", "api/generated/cupynumeric.split", "api/generated/cupynumeric.sqrt", "api/generated/cupynumeric.square", "api/generated/cupynumeric.squeeze", "api/generated/cupynumeric.stack", "api/generated/cupynumeric.subtract", "api/generated/cupynumeric.sum", "api/generated/cupynumeric.swapaxes", "api/generated/cupynumeric.take", "api/generated/cupynumeric.take_along_axis", "api/generated/cupynumeric.tan", "api/generated/cupynumeric.tanh", "api/generated/cupynumeric.tensordot", "api/generated/cupynumeric.tile", "api/generated/cupynumeric.trace", "api/generated/cupynumeric.transpose", "api/generated/cupynumeric.tri", "api/generated/cupynumeric.tril", "api/generated/cupynumeric.tril_indices", "api/generated/cupynumeric.tril_indices_from", "api/generated/cupynumeric.triu", "api/generated/cupynumeric.triu_indices", "api/generated/cupynumeric.triu_indices_from", "api/generated/cupynumeric.true_divide", "api/generated/cupynumeric.trunc", "api/generated/cupynumeric.unique", "api/generated/cupynumeric.unpackbits", "api/generated/cupynumeric.unravel_index", "api/generated/cupynumeric.var", "api/generated/cupynumeric.vdot", "api/generated/cupynumeric.vsplit", "api/generated/cupynumeric.vstack", "api/generated/cupynumeric.where", "api/generated/cupynumeric.zeros", "api/generated/cupynumeric.zeros_like", "api/index", "api/indexing", "api/io", "api/linalg", "api/logic", "api/manipulation", "api/math", "api/ndarray", "api/random", "api/routines", "api/set", "api/settings", "api/sorting", "api/statistics", "api/window", "changes/2509", "changes/2510", "changes/dev", "changes/index", "developer/CONTRIBUTING", "developer/building", "developer/index", "developer/testing", "examples/black_scholes", "examples/cholesky", "examples/compact_finite_difference", "examples/edge_detection", "examples/index", "examples/kmeans", "examples/newton_raphson_2d", "examples/stencil", "examples/torchswe", "faqs", "index", "installation", "oss-licenses", "user/advanced", "user/differences", "user/howtos/benchmarking", "user/howtos/index", "user/howtos/measuring", "user/howtos/patching", "user/index", "user/practices", "user/task", "user/tutorial", "user/usage"], "envversion": {"nbsphinx": 4, "sphinx": 64, "sphinx.domains.c": 3, "sphinx.domains.changeset": 1, "sphinx.domains.citation": 1, "sphinx.domains.cpp": 9, "sphinx.domains.index": 1, "sphinx.domains.javascript": 3, "sphinx.domains.math": 2, "sphinx.domains.python": 4, "sphinx.domains.rst": 2, "sphinx.domains.std": 2, "sphinx.ext.intersphinx": 1}, "filenames": ["_implemented.rst", "api/_bitgenerator.rst", "api/_generator.rst", "api/_grouped.rst", "api/_ndarray.rst", "api/binary.rst", "api/broadcast.rst", "api/classes.rst", "api/comparison.rst", "api/creation.rst", "api/datatype.rst", "api/fft.rst", "api/generated/cupynumeric.absolute.rst", "api/generated/cupynumeric.add.rst", "api/generated/cupynumeric.all.rst", "api/generated/cupynumeric.allclose.rst", "api/generated/cupynumeric.amax.rst", "api/generated/cupynumeric.amin.rst", "api/generated/cupynumeric.angle.rst", "api/generated/cupynumeric.any.rst", "api/generated/cupynumeric.append.rst", "api/generated/cupynumeric.arange.rst", "api/generated/cupynumeric.arccos.rst", "api/generated/cupynumeric.arccosh.rst", "api/generated/cupynumeric.arcsin.rst", "api/generated/cupynumeric.arcsinh.rst", "api/generated/cupynumeric.arctan.rst", "api/generated/cupynumeric.arctan2.rst", "api/generated/cupynumeric.arctanh.rst", "api/generated/cupynumeric.argmax.rst", "api/generated/cupynumeric.argmin.rst", "api/generated/cupynumeric.argpartition.rst", "api/generated/cupynumeric.argsort.rst", "api/generated/cupynumeric.argwhere.rst", "api/generated/cupynumeric.array.rst", "api/generated/cupynumeric.array_equal.rst", "api/generated/cupynumeric.array_split.rst", "api/generated/cupynumeric.asarray.rst", "api/generated/cupynumeric.atleast_1d.rst", "api/generated/cupynumeric.atleast_2d.rst", "api/generated/cupynumeric.atleast_3d.rst", "api/generated/cupynumeric.average.rst", "api/generated/cupynumeric.bartlett.rst", "api/generated/cupynumeric.bincount.rst", "api/generated/cupynumeric.bitwise_and.rst", "api/generated/cupynumeric.bitwise_or.rst", "api/generated/cupynumeric.bitwise_xor.rst", "api/generated/cupynumeric.blackman.rst", "api/generated/cupynumeric.block.rst", "api/generated/cupynumeric.broadcast_arrays.rst", "api/generated/cupynumeric.broadcast_shapes.rst", "api/generated/cupynumeric.broadcast_to.rst", "api/generated/cupynumeric.cbrt.rst", "api/generated/cupynumeric.ceil.rst", "api/generated/cupynumeric.choose.rst", "api/generated/cupynumeric.clip.rst", "api/generated/cupynumeric.column_stack.rst", "api/generated/cupynumeric.compress.rst", "api/generated/cupynumeric.concatenate.rst", "api/generated/cupynumeric.conj.rst", "api/generated/cupynumeric.conjugate.rst", "api/generated/cupynumeric.convolve.rst", "api/generated/cupynumeric.copy.rst", "api/generated/cupynumeric.copysign.rst", "api/generated/cupynumeric.copyto.rst", "api/generated/cupynumeric.cos.rst", "api/generated/cupynumeric.cosh.rst", "api/generated/cupynumeric.count_nonzero.rst", "api/generated/cupynumeric.cov.rst", "api/generated/cupynumeric.cross.rst", "api/generated/cupynumeric.cumprod.rst", "api/generated/cupynumeric.cumsum.rst", "api/generated/cupynumeric.deg2rad.rst", "api/generated/cupynumeric.degrees.rst", "api/generated/cupynumeric.delete.rst", "api/generated/cupynumeric.diag.rst", "api/generated/cupynumeric.diag_indices.rst", "api/generated/cupynumeric.diag_indices_from.rst", "api/generated/cupynumeric.diagflat.rst", "api/generated/cupynumeric.diagonal.rst", "api/generated/cupynumeric.diff.rst", "api/generated/cupynumeric.digitize.rst", "api/generated/cupynumeric.divide.rst", "api/generated/cupynumeric.dot.rst", "api/generated/cupynumeric.dsplit.rst", "api/generated/cupynumeric.dstack.rst", "api/generated/cupynumeric.einsum.rst", "api/generated/cupynumeric.einsum_path.rst", "api/generated/cupynumeric.empty.rst", "api/generated/cupynumeric.empty_like.rst", "api/generated/cupynumeric.equal.rst", "api/generated/cupynumeric.exp.rst", "api/generated/cupynumeric.exp2.rst", "api/generated/cupynumeric.expand_dims.rst", "api/generated/cupynumeric.expm1.rst", "api/generated/cupynumeric.extract.rst", "api/generated/cupynumeric.eye.rst", "api/generated/cupynumeric.fabs.rst", "api/generated/cupynumeric.fft.fft.rst", "api/generated/cupynumeric.fft.fft2.rst", "api/generated/cupynumeric.fft.fftn.rst", "api/generated/cupynumeric.fft.fftshift.rst", "api/generated/cupynumeric.fft.hfft.rst", "api/generated/cupynumeric.fft.ifft.rst", "api/generated/cupynumeric.fft.ifft2.rst", "api/generated/cupynumeric.fft.ifftn.rst", "api/generated/cupynumeric.fft.ifftshift.rst", "api/generated/cupynumeric.fft.ihfft.rst", "api/generated/cupynumeric.fft.irfft.rst", "api/generated/cupynumeric.fft.irfft2.rst", "api/generated/cupynumeric.fft.irfftn.rst", "api/generated/cupynumeric.fft.rfft.rst", "api/generated/cupynumeric.fft.rfft2.rst", "api/generated/cupynumeric.fft.rfftn.rst", "api/generated/cupynumeric.fill_diagonal.rst", "api/generated/cupynumeric.find_common_type.rst", "api/generated/cupynumeric.flatnonzero.rst", "api/generated/cupynumeric.flip.rst", "api/generated/cupynumeric.fliplr.rst", "api/generated/cupynumeric.flipud.rst", "api/generated/cupynumeric.float_power.rst", "api/generated/cupynumeric.floor.rst", "api/generated/cupynumeric.floor_divide.rst", "api/generated/cupynumeric.fmax.rst", "api/generated/cupynumeric.fmin.rst", "api/generated/cupynumeric.fmod.rst", "api/generated/cupynumeric.frexp.rst", "api/generated/cupynumeric.full.rst", "api/generated/cupynumeric.full_like.rst", "api/generated/cupynumeric.gcd.rst", "api/generated/cupynumeric.gradient.rst", "api/generated/cupynumeric.greater.rst", "api/generated/cupynumeric.greater_equal.rst", "api/generated/cupynumeric.hamming.rst", "api/generated/cupynumeric.hanning.rst", "api/generated/cupynumeric.histogram.rst", "api/generated/cupynumeric.histogram2d.rst", "api/generated/cupynumeric.histogramdd.rst", "api/generated/cupynumeric.hsplit.rst", "api/generated/cupynumeric.hstack.rst", "api/generated/cupynumeric.hypot.rst", "api/generated/cupynumeric.identity.rst", "api/generated/cupynumeric.imag.rst", "api/generated/cupynumeric.in1d.rst", "api/generated/cupynumeric.indices.rst", "api/generated/cupynumeric.inner.rst", "api/generated/cupynumeric.insert.rst", "api/generated/cupynumeric.invert.rst", "api/generated/cupynumeric.isclose.rst", "api/generated/cupynumeric.iscomplex.rst", "api/generated/cupynumeric.iscomplexobj.rst", "api/generated/cupynumeric.isfinite.rst", "api/generated/cupynumeric.isinf.rst", "api/generated/cupynumeric.isnan.rst", "api/generated/cupynumeric.isneginf.rst", "api/generated/cupynumeric.isposinf.rst", "api/generated/cupynumeric.isreal.rst", "api/generated/cupynumeric.isrealobj.rst", "api/generated/cupynumeric.isscalar.rst", "api/generated/cupynumeric.ix_.rst", "api/generated/cupynumeric.kaiser.rst", "api/generated/cupynumeric.lcm.rst", "api/generated/cupynumeric.ldexp.rst", "api/generated/cupynumeric.left_shift.rst", "api/generated/cupynumeric.less.rst", "api/generated/cupynumeric.less_equal.rst", "api/generated/cupynumeric.linalg.cholesky.rst", "api/generated/cupynumeric.linalg.eig.rst", "api/generated/cupynumeric.linalg.eigh.rst", "api/generated/cupynumeric.linalg.eigvals.rst", "api/generated/cupynumeric.linalg.eigvalsh.rst", "api/generated/cupynumeric.linalg.expm.rst", "api/generated/cupynumeric.linalg.matrix_power.rst", "api/generated/cupynumeric.linalg.multi_dot.rst", "api/generated/cupynumeric.linalg.norm.rst", "api/generated/cupynumeric.linalg.qr.rst", "api/generated/cupynumeric.linalg.solve.rst", "api/generated/cupynumeric.linalg.svd.rst", "api/generated/cupynumeric.linspace.rst", "api/generated/cupynumeric.load.rst", "api/generated/cupynumeric.log.rst", "api/generated/cupynumeric.log10.rst", "api/generated/cupynumeric.log1p.rst", "api/generated/cupynumeric.log2.rst", "api/generated/cupynumeric.logaddexp.rst", "api/generated/cupynumeric.logaddexp2.rst", "api/generated/cupynumeric.logical_and.rst", "api/generated/cupynumeric.logical_not.rst", "api/generated/cupynumeric.logical_or.rst", "api/generated/cupynumeric.logical_xor.rst", "api/generated/cupynumeric.logspace.rst", "api/generated/cupynumeric.mask_indices.rst", "api/generated/cupynumeric.matmul.rst", "api/generated/cupynumeric.maximum.rst", "api/generated/cupynumeric.mean.rst", "api/generated/cupynumeric.median.rst", "api/generated/cupynumeric.meshgrid.rst", "api/generated/cupynumeric.minimum.rst", "api/generated/cupynumeric.mod.rst", "api/generated/cupynumeric.modf.rst", "api/generated/cupynumeric.moveaxis.rst", "api/generated/cupynumeric.multiply.rst", "api/generated/cupynumeric.nan_to_num.rst", "api/generated/cupynumeric.nanargmax.rst", "api/generated/cupynumeric.nanargmin.rst", "api/generated/cupynumeric.nancumprod.rst", "api/generated/cupynumeric.nancumsum.rst", "api/generated/cupynumeric.nanmax.rst", "api/generated/cupynumeric.nanmean.rst", "api/generated/cupynumeric.nanmedian.rst", "api/generated/cupynumeric.nanmin.rst", "api/generated/cupynumeric.nanpercentile.rst", "api/generated/cupynumeric.nanprod.rst", "api/generated/cupynumeric.nanquantile.rst", "api/generated/cupynumeric.nansum.rst", "api/generated/cupynumeric.ndarray.T.rst", "api/generated/cupynumeric.ndarray.__abs__.rst", "api/generated/cupynumeric.ndarray.__add__.rst", "api/generated/cupynumeric.ndarray.__and__.rst", "api/generated/cupynumeric.ndarray.__array__.rst", "api/generated/cupynumeric.ndarray.__bool__.rst", "api/generated/cupynumeric.ndarray.__complex__.rst", "api/generated/cupynumeric.ndarray.__contains__.rst", "api/generated/cupynumeric.ndarray.__copy__.rst", "api/generated/cupynumeric.ndarray.__deepcopy__.rst", "api/generated/cupynumeric.ndarray.__divmod__.rst", "api/generated/cupynumeric.ndarray.__eq__.rst", "api/generated/cupynumeric.ndarray.__float__.rst", "api/generated/cupynumeric.ndarray.__floordiv__.rst", "api/generated/cupynumeric.ndarray.__ge__.rst", "api/generated/cupynumeric.ndarray.__getitem__.rst", "api/generated/cupynumeric.ndarray.__gt__.rst", "api/generated/cupynumeric.ndarray.__iadd__.rst", "api/generated/cupynumeric.ndarray.__iand__.rst", "api/generated/cupynumeric.ndarray.__ifloordiv__.rst", "api/generated/cupynumeric.ndarray.__ilshift__.rst", "api/generated/cupynumeric.ndarray.__imatmul__.rst", "api/generated/cupynumeric.ndarray.__imod__.rst", "api/generated/cupynumeric.ndarray.__imul__.rst", "api/generated/cupynumeric.ndarray.__index__.rst", "api/generated/cupynumeric.ndarray.__int__.rst", "api/generated/cupynumeric.ndarray.__invert__.rst", "api/generated/cupynumeric.ndarray.__ior__.rst", "api/generated/cupynumeric.ndarray.__ipow__.rst", "api/generated/cupynumeric.ndarray.__irshift__.rst", "api/generated/cupynumeric.ndarray.__isub__.rst", "api/generated/cupynumeric.ndarray.__itruediv__.rst", "api/generated/cupynumeric.ndarray.__ixor__.rst", "api/generated/cupynumeric.ndarray.__le__.rst", "api/generated/cupynumeric.ndarray.__len__.rst", "api/generated/cupynumeric.ndarray.__lshift__.rst", "api/generated/cupynumeric.ndarray.__lt__.rst", "api/generated/cupynumeric.ndarray.__matmul__.rst", "api/generated/cupynumeric.ndarray.__mod__.rst", "api/generated/cupynumeric.ndarray.__mul__.rst", "api/generated/cupynumeric.ndarray.__ne__.rst", "api/generated/cupynumeric.ndarray.__neg__.rst", "api/generated/cupynumeric.ndarray.__new__.rst", "api/generated/cupynumeric.ndarray.__or__.rst", "api/generated/cupynumeric.ndarray.__pos__.rst", "api/generated/cupynumeric.ndarray.__pow__.rst", "api/generated/cupynumeric.ndarray.__reduce__.rst", "api/generated/cupynumeric.ndarray.__repr__.rst", "api/generated/cupynumeric.ndarray.__rmatmul__.rst", "api/generated/cupynumeric.ndarray.__rshift__.rst", "api/generated/cupynumeric.ndarray.__setitem__.rst", "api/generated/cupynumeric.ndarray.__setstate__.rst", "api/generated/cupynumeric.ndarray.__str__.rst", "api/generated/cupynumeric.ndarray.__sub__.rst", "api/generated/cupynumeric.ndarray.__truediv__.rst", "api/generated/cupynumeric.ndarray.__xor__.rst", "api/generated/cupynumeric.ndarray.all.rst", "api/generated/cupynumeric.ndarray.any.rst", "api/generated/cupynumeric.ndarray.argmax.rst", "api/generated/cupynumeric.ndarray.argmin.rst", "api/generated/cupynumeric.ndarray.argpartition.rst", "api/generated/cupynumeric.ndarray.argsort.rst", "api/generated/cupynumeric.ndarray.astype.rst", "api/generated/cupynumeric.ndarray.base.rst", "api/generated/cupynumeric.ndarray.choose.rst", "api/generated/cupynumeric.ndarray.clip.rst", "api/generated/cupynumeric.ndarray.compress.rst", "api/generated/cupynumeric.ndarray.conj.rst", "api/generated/cupynumeric.ndarray.conjugate.rst", "api/generated/cupynumeric.ndarray.copy.rst", "api/generated/cupynumeric.ndarray.ctypes.rst", "api/generated/cupynumeric.ndarray.cumprod.rst", "api/generated/cupynumeric.ndarray.cumsum.rst", "api/generated/cupynumeric.ndarray.data.rst", "api/generated/cupynumeric.ndarray.diagonal.rst", "api/generated/cupynumeric.ndarray.dot.rst", "api/generated/cupynumeric.ndarray.dtype.rst", "api/generated/cupynumeric.ndarray.dump.rst", "api/generated/cupynumeric.ndarray.dumps.rst", "api/generated/cupynumeric.ndarray.fill.rst", "api/generated/cupynumeric.ndarray.flags.rst", "api/generated/cupynumeric.ndarray.flat.rst", "api/generated/cupynumeric.ndarray.flatten.rst", "api/generated/cupynumeric.ndarray.flip.rst", "api/generated/cupynumeric.ndarray.getfield.rst", "api/generated/cupynumeric.ndarray.imag.rst", "api/generated/cupynumeric.ndarray.item.rst", "api/generated/cupynumeric.ndarray.itemset.rst", "api/generated/cupynumeric.ndarray.itemsize.rst", "api/generated/cupynumeric.ndarray.max.rst", "api/generated/cupynumeric.ndarray.mean.rst", "api/generated/cupynumeric.ndarray.min.rst", "api/generated/cupynumeric.ndarray.nbytes.rst", "api/generated/cupynumeric.ndarray.ndim.rst", "api/generated/cupynumeric.ndarray.nonzero.rst", "api/generated/cupynumeric.ndarray.partition.rst", "api/generated/cupynumeric.ndarray.prod.rst", "api/generated/cupynumeric.ndarray.put.rst", "api/generated/cupynumeric.ndarray.ravel.rst", "api/generated/cupynumeric.ndarray.real.rst", "api/generated/cupynumeric.ndarray.reshape.rst", "api/generated/cupynumeric.ndarray.searchsorted.rst", "api/generated/cupynumeric.ndarray.setfield.rst", "api/generated/cupynumeric.ndarray.setflags.rst", "api/generated/cupynumeric.ndarray.shape.rst", "api/generated/cupynumeric.ndarray.size.rst", "api/generated/cupynumeric.ndarray.sort.rst", "api/generated/cupynumeric.ndarray.squeeze.rst", "api/generated/cupynumeric.ndarray.strides.rst", "api/generated/cupynumeric.ndarray.sum.rst", "api/generated/cupynumeric.ndarray.swapaxes.rst", "api/generated/cupynumeric.ndarray.take.rst", "api/generated/cupynumeric.ndarray.tobytes.rst", "api/generated/cupynumeric.ndarray.tofile.rst", "api/generated/cupynumeric.ndarray.tolist.rst", "api/generated/cupynumeric.ndarray.tostring.rst", "api/generated/cupynumeric.ndarray.trace.rst", "api/generated/cupynumeric.ndarray.transpose.rst", "api/generated/cupynumeric.ndarray.unique.rst", "api/generated/cupynumeric.ndarray.var.rst", "api/generated/cupynumeric.ndarray.view.rst", "api/generated/cupynumeric.ndim.rst", "api/generated/cupynumeric.negative.rst", "api/generated/cupynumeric.nextafter.rst", "api/generated/cupynumeric.nonzero.rst", "api/generated/cupynumeric.not_equal.rst", "api/generated/cupynumeric.ones.rst", "api/generated/cupynumeric.ones_like.rst", "api/generated/cupynumeric.outer.rst", "api/generated/cupynumeric.packbits.rst", "api/generated/cupynumeric.partition.rst", "api/generated/cupynumeric.percentile.rst", "api/generated/cupynumeric.place.rst", "api/generated/cupynumeric.positive.rst", "api/generated/cupynumeric.power.rst", "api/generated/cupynumeric.prod.rst", "api/generated/cupynumeric.put.rst", "api/generated/cupynumeric.put_along_axis.rst", "api/generated/cupynumeric.putmask.rst", "api/generated/cupynumeric.quantile.rst", "api/generated/cupynumeric.rad2deg.rst", "api/generated/cupynumeric.radians.rst", "api/generated/cupynumeric.random.beta.rst", "api/generated/cupynumeric.random.binomial.rst", "api/generated/cupynumeric.random.bytes.rst", "api/generated/cupynumeric.random.chisquare.rst", "api/generated/cupynumeric.random.default_rng.rst", "api/generated/cupynumeric.random.exponential.rst", "api/generated/cupynumeric.random.f.rst", "api/generated/cupynumeric.random.gamma.rst", "api/generated/cupynumeric.random.geometric.rst", "api/generated/cupynumeric.random.gumbel.rst", "api/generated/cupynumeric.random.hypergeometric.rst", "api/generated/cupynumeric.random.laplace.rst", "api/generated/cupynumeric.random.logistic.rst", "api/generated/cupynumeric.random.lognormal.rst", "api/generated/cupynumeric.random.logseries.rst", "api/generated/cupynumeric.random.negative_binomial.rst", "api/generated/cupynumeric.random.noncentral_chisquare.rst", "api/generated/cupynumeric.random.noncentral_f.rst", "api/generated/cupynumeric.random.normal.rst", "api/generated/cupynumeric.random.pareto.rst", "api/generated/cupynumeric.random.poisson.rst", "api/generated/cupynumeric.random.power.rst", "api/generated/cupynumeric.random.rand.rst", "api/generated/cupynumeric.random.randint.rst", "api/generated/cupynumeric.random.randn.rst", "api/generated/cupynumeric.random.random.rst", "api/generated/cupynumeric.random.random_integers.rst", "api/generated/cupynumeric.random.random_sample.rst", "api/generated/cupynumeric.random.ranf.rst", "api/generated/cupynumeric.random.rayleigh.rst", "api/generated/cupynumeric.random.sample.rst", "api/generated/cupynumeric.random.seed.rst", "api/generated/cupynumeric.random.standard_cauchy.rst", "api/generated/cupynumeric.random.standard_exponential.rst", "api/generated/cupynumeric.random.standard_gamma.rst", "api/generated/cupynumeric.random.standard_t.rst", "api/generated/cupynumeric.random.triangular.rst", "api/generated/cupynumeric.random.uniform.rst", "api/generated/cupynumeric.random.vonmises.rst", "api/generated/cupynumeric.random.wald.rst", "api/generated/cupynumeric.random.weibull.rst", "api/generated/cupynumeric.random.zipf.rst", "api/generated/cupynumeric.ravel.rst", "api/generated/cupynumeric.ravel_multi_index.rst", "api/generated/cupynumeric.real.rst", "api/generated/cupynumeric.real_if_close.rst", "api/generated/cupynumeric.reciprocal.rst", "api/generated/cupynumeric.remainder.rst", "api/generated/cupynumeric.repeat.rst", "api/generated/cupynumeric.reshape.rst", "api/generated/cupynumeric.right_shift.rst", "api/generated/cupynumeric.rint.rst", "api/generated/cupynumeric.roll.rst", "api/generated/cupynumeric.roots.rst", "api/generated/cupynumeric.rot90.rst", "api/generated/cupynumeric.round.rst", "api/generated/cupynumeric.row_stack.rst", "api/generated/cupynumeric.searchsorted.rst", "api/generated/cupynumeric.select.rst", "api/generated/cupynumeric.shape.rst", "api/generated/cupynumeric.sign.rst", "api/generated/cupynumeric.signbit.rst", "api/generated/cupynumeric.sin.rst", "api/generated/cupynumeric.sinh.rst", "api/generated/cupynumeric.sort.rst", "api/generated/cupynumeric.sort_complex.rst", "api/generated/cupynumeric.split.rst", "api/generated/cupynumeric.sqrt.rst", "api/generated/cupynumeric.square.rst", "api/generated/cupynumeric.squeeze.rst", "api/generated/cupynumeric.stack.rst", "api/generated/cupynumeric.subtract.rst", "api/generated/cupynumeric.sum.rst", "api/generated/cupynumeric.swapaxes.rst", "api/generated/cupynumeric.take.rst", "api/generated/cupynumeric.take_along_axis.rst", "api/generated/cupynumeric.tan.rst", "api/generated/cupynumeric.tanh.rst", "api/generated/cupynumeric.tensordot.rst", "api/generated/cupynumeric.tile.rst", "api/generated/cupynumeric.trace.rst", "api/generated/cupynumeric.transpose.rst", "api/generated/cupynumeric.tri.rst", "api/generated/cupynumeric.tril.rst", "api/generated/cupynumeric.tril_indices.rst", "api/generated/cupynumeric.tril_indices_from.rst", "api/generated/cupynumeric.triu.rst", "api/generated/cupynumeric.triu_indices.rst", "api/generated/cupynumeric.triu_indices_from.rst", "api/generated/cupynumeric.true_divide.rst", "api/generated/cupynumeric.trunc.rst", "api/generated/cupynumeric.unique.rst", "api/generated/cupynumeric.unpackbits.rst", "api/generated/cupynumeric.unravel_index.rst", "api/generated/cupynumeric.var.rst", "api/generated/cupynumeric.vdot.rst", "api/generated/cupynumeric.vsplit.rst", "api/generated/cupynumeric.vstack.rst", "api/generated/cupynumeric.where.rst", "api/generated/cupynumeric.zeros.rst", "api/generated/cupynumeric.zeros_like.rst", "api/index.rst", "api/indexing.rst", "api/io.rst", "api/linalg.rst", "api/logic.rst", "api/manipulation.rst", "api/math.rst", "api/ndarray.rst", "api/random.rst", "api/routines.rst", "api/set.rst", "api/settings.rst", "api/sorting.rst", "api/statistics.rst", "api/window.rst", "changes/2509.rst", "changes/2510.rst", "changes/dev.rst", "changes/index.rst", "developer/CONTRIBUTING.md", "developer/building.rst", "developer/index.rst", "developer/testing.rst", "examples/black_scholes.ipynb", "examples/cholesky.ipynb", "examples/compact_finite_difference.ipynb", "examples/edge_detection.ipynb", "examples/index.rst", "examples/kmeans.ipynb", "examples/newton_raphson_2d.ipynb", "examples/stencil.ipynb", "examples/torchswe.ipynb", "faqs.rst", "index.rst", "installation.rst", "oss-licenses.rst", "user/advanced.rst", "user/differences.rst", "user/howtos/benchmarking.rst", "user/howtos/index.rst", "user/howtos/measuring.rst", "user/howtos/patching.rst", "user/index.rst", "user/practices.rst", "user/task.rst", "user/tutorial.rst", "user/usage.rst"], "indexentries": {"__abs__() (cupynumeric.ndarray method)": [[216, "cupynumeric.ndarray.__abs__", false]], "__add__() (cupynumeric.ndarray method)": [[217, "cupynumeric.ndarray.__add__", false]], "__and__() (cupynumeric.ndarray method)": [[218, "cupynumeric.ndarray.__and__", false]], "__array__() (cupynumeric.ndarray method)": [[219, "cupynumeric.ndarray.__array__", false]], "__bool__() (cupynumeric.ndarray method)": [[220, "cupynumeric.ndarray.__bool__", false]], "__complex__() (cupynumeric.ndarray method)": [[221, "cupynumeric.ndarray.__complex__", false]], "__contains__() (cupynumeric.ndarray method)": [[222, "cupynumeric.ndarray.__contains__", false]], "__copy__() (cupynumeric.ndarray method)": [[223, "cupynumeric.ndarray.__copy__", false]], "__deepcopy__() (cupynumeric.ndarray method)": [[224, "cupynumeric.ndarray.__deepcopy__", false]], "__divmod__() (cupynumeric.ndarray method)": [[225, "cupynumeric.ndarray.__divmod__", false]], "__eq__() (cupynumeric.ndarray method)": [[226, "cupynumeric.ndarray.__eq__", false]], "__float__() (cupynumeric.ndarray method)": [[227, "cupynumeric.ndarray.__float__", false]], "__floordiv__() (cupynumeric.ndarray method)": [[228, "cupynumeric.ndarray.__floordiv__", false]], "__ge__() (cupynumeric.ndarray method)": [[229, "cupynumeric.ndarray.__ge__", false]], "__getitem__() (cupynumeric.ndarray method)": [[230, "cupynumeric.ndarray.__getitem__", false]], "__gt__() (cupynumeric.ndarray method)": [[231, "cupynumeric.ndarray.__gt__", false]], "__iadd__() (cupynumeric.ndarray method)": [[232, "cupynumeric.ndarray.__iadd__", false]], "__iand__() (cupynumeric.ndarray method)": [[233, "cupynumeric.ndarray.__iand__", false]], "__ifloordiv__() (cupynumeric.ndarray method)": [[234, "cupynumeric.ndarray.__ifloordiv__", false]], "__ilshift__() (cupynumeric.ndarray method)": [[235, "cupynumeric.ndarray.__ilshift__", false]], "__imatmul__() (cupynumeric.ndarray method)": [[236, "cupynumeric.ndarray.__imatmul__", false]], "__imod__() (cupynumeric.ndarray method)": [[237, "cupynumeric.ndarray.__imod__", false]], "__imul__() (cupynumeric.ndarray method)": [[238, "cupynumeric.ndarray.__imul__", false]], "__index__() (cupynumeric.ndarray method)": [[239, "cupynumeric.ndarray.__index__", false]], "__init__() (cupynumeric.ndarray method)": [[4, "cupynumeric.ndarray.__init__", false]], "__init__() (cupynumeric.random.bitgenerator method)": [[1, "cupynumeric.random.BitGenerator.__init__", false]], "__init__() (cupynumeric.random.generator method)": [[2, "cupynumeric.random.Generator.__init__", false]], "__int__() (cupynumeric.ndarray method)": [[240, "cupynumeric.ndarray.__int__", false]], "__invert__() (cupynumeric.ndarray method)": [[241, "cupynumeric.ndarray.__invert__", false]], "__ior__() (cupynumeric.ndarray method)": [[242, "cupynumeric.ndarray.__ior__", false]], "__ipow__() (cupynumeric.ndarray method)": [[243, "cupynumeric.ndarray.__ipow__", false]], "__irshift__() (cupynumeric.ndarray method)": [[244, "cupynumeric.ndarray.__irshift__", false]], "__isub__() (cupynumeric.ndarray method)": [[245, "cupynumeric.ndarray.__isub__", false]], "__itruediv__() (cupynumeric.ndarray method)": [[246, "cupynumeric.ndarray.__itruediv__", false]], "__ixor__() (cupynumeric.ndarray method)": [[247, "cupynumeric.ndarray.__ixor__", false]], "__le__() (cupynumeric.ndarray method)": [[248, "cupynumeric.ndarray.__le__", false]], "__len__() (cupynumeric.ndarray method)": [[249, "cupynumeric.ndarray.__len__", false]], "__lshift__() (cupynumeric.ndarray method)": [[250, "cupynumeric.ndarray.__lshift__", false]], "__lt__() (cupynumeric.ndarray method)": [[251, "cupynumeric.ndarray.__lt__", false]], "__matmul__() (cupynumeric.ndarray method)": [[252, "cupynumeric.ndarray.__matmul__", false]], "__mod__() (cupynumeric.ndarray method)": [[253, "cupynumeric.ndarray.__mod__", false]], "__mul__() (cupynumeric.ndarray method)": [[254, "cupynumeric.ndarray.__mul__", false]], "__ne__() (cupynumeric.ndarray method)": [[255, "cupynumeric.ndarray.__ne__", false]], "__neg__() (cupynumeric.ndarray method)": [[256, "cupynumeric.ndarray.__neg__", false]], "__new__() (cupynumeric.ndarray method)": [[257, "cupynumeric.ndarray.__new__", false]], "__or__() (cupynumeric.ndarray method)": [[258, "cupynumeric.ndarray.__or__", false]], "__pos__() (cupynumeric.ndarray method)": [[259, "cupynumeric.ndarray.__pos__", false]], "__pow__() (cupynumeric.ndarray method)": [[260, "cupynumeric.ndarray.__pow__", false]], "__reduce__() (cupynumeric.ndarray method)": [[261, "cupynumeric.ndarray.__reduce__", false]], "__repr__() (cupynumeric.ndarray method)": [[262, "cupynumeric.ndarray.__repr__", false]], "__rmatmul__() (cupynumeric.ndarray method)": [[263, "cupynumeric.ndarray.__rmatmul__", false]], "__rshift__() (cupynumeric.ndarray method)": [[264, "cupynumeric.ndarray.__rshift__", false]], "__setitem__() (cupynumeric.ndarray method)": [[265, "cupynumeric.ndarray.__setitem__", false]], "__setstate__() (cupynumeric.ndarray method)": [[266, "cupynumeric.ndarray.__setstate__", false]], "__str__() (cupynumeric.ndarray method)": [[267, "cupynumeric.ndarray.__str__", false]], "__sub__() (cupynumeric.ndarray method)": [[268, "cupynumeric.ndarray.__sub__", false]], "__truediv__() (cupynumeric.ndarray method)": [[269, "cupynumeric.ndarray.__truediv__", false]], "__xor__() (cupynumeric.ndarray method)": [[270, "cupynumeric.ndarray.__xor__", false]], "absolute() (in module cupynumeric)": [[12, "cupynumeric.absolute", false]], "add() (in module cupynumeric)": [[13, "cupynumeric.add", false]], "aligned (in module cupynumeric)": [[295, "cupynumeric.ALIGNED", false]], "all() (cupynumeric.ndarray method)": [[271, "cupynumeric.ndarray.all", false]], "all() (in module cupynumeric)": [[14, "cupynumeric.all", false]], "allclose() (in module cupynumeric)": [[15, "cupynumeric.allclose", false]], "amax() (in module cupynumeric)": [[16, "cupynumeric.amax", false]], "amin() (in module cupynumeric)": [[17, "cupynumeric.amin", false]], "angle() (in module cupynumeric)": [[18, "cupynumeric.angle", false]], "any() (cupynumeric.ndarray method)": [[272, "cupynumeric.ndarray.any", false]], "any() (in module cupynumeric)": [[19, "cupynumeric.any", false]], "append() (in module cupynumeric)": [[20, "cupynumeric.append", false]], "arange() (in module cupynumeric)": [[21, "cupynumeric.arange", false]], "arccos() (in module cupynumeric)": [[22, "cupynumeric.arccos", false]], "arccosh() (in module cupynumeric)": [[23, "cupynumeric.arccosh", false]], "arcsin() (in module cupynumeric)": [[24, "cupynumeric.arcsin", false]], "arcsinh() (in module cupynumeric)": [[25, "cupynumeric.arcsinh", false]], "arctan() (in module cupynumeric)": [[26, "cupynumeric.arctan", false]], "arctan2() (in module cupynumeric)": [[27, "cupynumeric.arctan2", false]], "arctanh() (in module cupynumeric)": [[28, "cupynumeric.arctanh", false]], "argmax() (cupynumeric.ndarray method)": [[273, "cupynumeric.ndarray.argmax", false]], "argmax() (in module cupynumeric)": [[29, "cupynumeric.argmax", false]], "argmin() (cupynumeric.ndarray method)": [[274, "cupynumeric.ndarray.argmin", false]], "argmin() (in module cupynumeric)": [[30, "cupynumeric.argmin", false]], "argpartition() (cupynumeric.ndarray method)": [[275, "cupynumeric.ndarray.argpartition", false]], "argpartition() (in module cupynumeric)": [[31, "cupynumeric.argpartition", false]], "argsort() (cupynumeric.ndarray method)": [[276, "cupynumeric.ndarray.argsort", false]], "argsort() (in module cupynumeric)": [[32, "cupynumeric.argsort", false]], "argwhere() (in module cupynumeric)": [[33, "cupynumeric.argwhere", false]], "array() (in module cupynumeric)": [[34, "cupynumeric.array", false]], "array_equal() (in module cupynumeric)": [[35, "cupynumeric.array_equal", false]], "array_split() (in module cupynumeric)": [[36, "cupynumeric.array_split", false]], "asarray() (in module cupynumeric)": [[37, "cupynumeric.asarray", false]], "astype() (cupynumeric.ndarray method)": [[277, "cupynumeric.ndarray.astype", false]], "atleast_1d() (in module cupynumeric)": [[38, "cupynumeric.atleast_1d", false]], "atleast_2d() (in module cupynumeric)": [[39, "cupynumeric.atleast_2d", false]], "atleast_3d() (in module cupynumeric)": [[40, "cupynumeric.atleast_3d", false]], "average() (in module cupynumeric)": [[41, "cupynumeric.average", false]], "bartlett() (in module cupynumeric)": [[42, "cupynumeric.bartlett", false]], "base (cupynumeric.ndarray property)": [[278, "cupynumeric.ndarray.base", false]], "behaved (in module cupynumeric)": [[295, "cupynumeric.BEHAVED", false]], "beta() (in module cupynumeric.random)": [[357, "cupynumeric.random.beta", false]], "bincount() (in module cupynumeric)": [[43, "cupynumeric.bincount", false]], "binomial() (in module cupynumeric.random)": [[358, "cupynumeric.random.binomial", false]], "bitgenerator (class in cupynumeric.random)": [[1, "cupynumeric.random.BitGenerator", false]], "bitwise_and() (in module cupynumeric)": [[44, "cupynumeric.bitwise_and", false]], "bitwise_or() (in module cupynumeric)": [[45, "cupynumeric.bitwise_or", false]], "bitwise_xor() (in module cupynumeric)": [[46, "cupynumeric.bitwise_xor", false]], "blackman() (in module cupynumeric)": [[47, "cupynumeric.blackman", false]], "block() (in module cupynumeric)": [[48, "cupynumeric.block", false]], "broadcast (class in cupynumeric)": [[6, "cupynumeric.broadcast", false]], "broadcast_arrays() (in module cupynumeric)": [[49, "cupynumeric.broadcast_arrays", false]], "broadcast_shapes() (in module cupynumeric)": [[50, "cupynumeric.broadcast_shapes", false]], "broadcast_to() (in module cupynumeric)": [[51, "cupynumeric.broadcast_to", false]], "bytes() (in module cupynumeric.random)": [[359, "cupynumeric.random.bytes", false]], "c_contiguous (cupynumeric.ndarray attribute)": [[295, "cupynumeric.ndarray.C_CONTIGUOUS", false]], "carray (in module cupynumeric)": [[295, "cupynumeric.CARRAY", false]], "cbrt() (in module cupynumeric)": [[52, "cupynumeric.cbrt", false]], "ceil() (in module cupynumeric)": [[53, "cupynumeric.ceil", false]], "chisquare() (in module cupynumeric.random)": [[360, "cupynumeric.random.chisquare", false]], "cholesky() (in module cupynumeric.linalg)": [[166, "cupynumeric.linalg.cholesky", false]], "choose() (cupynumeric.ndarray method)": [[279, "cupynumeric.ndarray.choose", false]], "choose() (in module cupynumeric)": [[54, "cupynumeric.choose", false]], "clip() (cupynumeric.ndarray method)": [[280, "cupynumeric.ndarray.clip", false]], "clip() (in module cupynumeric)": [[55, "cupynumeric.clip", false]], "column_stack() (in module cupynumeric)": [[56, "cupynumeric.column_stack", false]], "compress() (cupynumeric.ndarray method)": [[281, "cupynumeric.ndarray.compress", false]], "compress() (in module cupynumeric)": [[57, "cupynumeric.compress", false]], "concatenate() (in module cupynumeric)": [[58, "cupynumeric.concatenate", false]], "conj() (cupynumeric.ndarray method)": [[282, "cupynumeric.ndarray.conj", false]], "conj() (in module cupynumeric)": [[59, "cupynumeric.conj", false]], "conjugate() (cupynumeric.ndarray method)": [[283, "cupynumeric.ndarray.conjugate", false]], "conjugate() (in module cupynumeric)": [[60, "cupynumeric.conjugate", false]], "convolve() (in module cupynumeric)": [[61, "cupynumeric.convolve", false]], "copy() (cupynumeric.ndarray method)": [[284, "cupynumeric.ndarray.copy", false]], "copy() (in module cupynumeric)": [[62, "cupynumeric.copy", false]], "copysign() (in module cupynumeric)": [[63, "cupynumeric.copysign", false]], "copyto() (in module cupynumeric)": [[64, "cupynumeric.copyto", false]], "cos() (in module cupynumeric)": [[65, "cupynumeric.cos", false]], "cosh() (in module cupynumeric)": [[66, "cupynumeric.cosh", false]], "count_nonzero() (in module cupynumeric)": [[67, "cupynumeric.count_nonzero", false]], "cov() (in module cupynumeric)": [[68, "cupynumeric.cov", false]], "cross() (in module cupynumeric)": [[69, "cupynumeric.cross", false]], "ctypes (cupynumeric.ndarray property)": [[285, "cupynumeric.ndarray.ctypes", false]], "cumprod() (cupynumeric.ndarray method)": [[286, "cupynumeric.ndarray.cumprod", false]], "cumprod() (in module cupynumeric)": [[70, "cupynumeric.cumprod", false]], "cumsum() (cupynumeric.ndarray method)": [[287, "cupynumeric.ndarray.cumsum", false]], "cumsum() (in module cupynumeric)": [[71, "cupynumeric.cumsum", false]], "cupynumeric.fft": [[11, "module-cupynumeric.fft", false]], "cupynumeric.linalg": [[461, "module-cupynumeric.linalg", false]], "cupynumeric.random": [[466, "module-cupynumeric.random", false]], "data (cupynumeric.ndarray property)": [[288, "cupynumeric.ndarray.data", false]], "default_rng() (in module cupynumeric.random)": [[361, "cupynumeric.random.default_rng", false]], "deg2rad() (in module cupynumeric)": [[72, "cupynumeric.deg2rad", false]], "degrees() (in module cupynumeric)": [[73, "cupynumeric.degrees", false]], "delete() (in module cupynumeric)": [[74, "cupynumeric.delete", false]], "diag() (in module cupynumeric)": [[75, "cupynumeric.diag", false]], "diag_indices() (in module cupynumeric)": [[76, "cupynumeric.diag_indices", false]], "diag_indices_from() (in module cupynumeric)": [[77, "cupynumeric.diag_indices_from", false]], "diagflat() (in module cupynumeric)": [[78, "cupynumeric.diagflat", false]], "diagonal() (cupynumeric.ndarray method)": [[289, "cupynumeric.ndarray.diagonal", false]], "diagonal() (in module cupynumeric)": [[79, "cupynumeric.diagonal", false]], "diff() (in module cupynumeric)": [[80, "cupynumeric.diff", false]], "digitize() (in module cupynumeric)": [[81, "cupynumeric.digitize", false]], "divide() (in module cupynumeric)": [[82, "cupynumeric.divide", false]], "dot() (cupynumeric.ndarray method)": [[290, "cupynumeric.ndarray.dot", false]], "dot() (in module cupynumeric)": [[83, "cupynumeric.dot", false]], "dsplit() (in module cupynumeric)": [[84, "cupynumeric.dsplit", false]], "dstack() (in module cupynumeric)": [[85, "cupynumeric.dstack", false]], "dtype (cupynumeric.ndarray property)": [[291, "cupynumeric.ndarray.dtype", false]], "dump() (cupynumeric.ndarray method)": [[292, "cupynumeric.ndarray.dump", false]], "dumps() (cupynumeric.ndarray method)": [[293, "cupynumeric.ndarray.dumps", false]], "eig() (in module cupynumeric.linalg)": [[167, "cupynumeric.linalg.eig", false]], "eigh() (in module cupynumeric.linalg)": [[168, "cupynumeric.linalg.eigh", false]], "eigvals() (in module cupynumeric.linalg)": [[169, "cupynumeric.linalg.eigvals", false]], "eigvalsh() (in module cupynumeric.linalg)": [[170, "cupynumeric.linalg.eigvalsh", false]], "einsum() (in module cupynumeric)": [[86, "cupynumeric.einsum", false]], "einsum_path() (in module cupynumeric)": [[87, "cupynumeric.einsum_path", false]], "empty() (in module cupynumeric)": [[88, "cupynumeric.empty", false]], "empty_like() (in module cupynumeric)": [[89, "cupynumeric.empty_like", false]], "equal() (in module cupynumeric)": [[90, "cupynumeric.equal", false]], "exp() (in module cupynumeric)": [[91, "cupynumeric.exp", false]], "exp2() (in module cupynumeric)": [[92, "cupynumeric.exp2", false]], "expand_dims() (in module cupynumeric)": [[93, "cupynumeric.expand_dims", false]], "expm() (in module cupynumeric.linalg)": [[171, "cupynumeric.linalg.expm", false]], "expm1() (in module cupynumeric)": [[94, "cupynumeric.expm1", false]], "exponential() (in module cupynumeric.random)": [[362, "cupynumeric.random.exponential", false]], "extract() (in module cupynumeric)": [[95, "cupynumeric.extract", false]], "eye() (in module cupynumeric)": [[96, "cupynumeric.eye", false]], "f() (in module cupynumeric.random)": [[363, "cupynumeric.random.f", false]], "f_contiguous (in module cupynumeric)": [[295, "cupynumeric.F_CONTIGUOUS", false]], "fabs() (in module cupynumeric)": [[97, "cupynumeric.fabs", false]], "farray (in module cupynumeric)": [[295, "cupynumeric.FARRAY", false]], "fft() (in module cupynumeric.fft)": [[98, "cupynumeric.fft.fft", false]], "fft2() (in module cupynumeric.fft)": [[99, "cupynumeric.fft.fft2", false]], "fftn() (in module cupynumeric.fft)": [[100, "cupynumeric.fft.fftn", false]], "fftshift() (in module cupynumeric.fft)": [[101, "cupynumeric.fft.fftshift", false]], "fill() (cupynumeric.ndarray method)": [[294, "cupynumeric.ndarray.fill", false]], "fill_diagonal() (in module cupynumeric)": [[114, "cupynumeric.fill_diagonal", false]], "find_common_type() (in module cupynumeric)": [[115, "cupynumeric.find_common_type", false]], "flags (cupynumeric.ndarray property)": [[295, "cupynumeric.ndarray.flags", false]], "flat (cupynumeric.ndarray property)": [[296, "cupynumeric.ndarray.flat", false]], "flatnonzero() (in module cupynumeric)": [[116, "cupynumeric.flatnonzero", false]], "flatten() (cupynumeric.ndarray method)": [[297, "cupynumeric.ndarray.flatten", false]], "flip() (cupynumeric.ndarray method)": [[298, "cupynumeric.ndarray.flip", false]], "flip() (in module cupynumeric)": [[117, "cupynumeric.flip", false]], "fliplr() (in module cupynumeric)": [[118, "cupynumeric.fliplr", false]], "flipud() (in module cupynumeric)": [[119, "cupynumeric.flipud", false]], "float_power() (in module cupynumeric)": [[120, "cupynumeric.float_power", false]], "floor() (in module cupynumeric)": [[121, "cupynumeric.floor", false]], "floor_divide() (in module cupynumeric)": [[122, "cupynumeric.floor_divide", false]], "fmax() (in module cupynumeric)": [[123, "cupynumeric.fmax", false]], "fmin() (in module cupynumeric)": [[124, "cupynumeric.fmin", false]], "fmod() (in module cupynumeric)": [[125, "cupynumeric.fmod", false]], "fnc (in module cupynumeric)": [[295, "cupynumeric.FNC", false]], "forc (in module cupynumeric)": [[295, "cupynumeric.FORC", false]], "frexp() (in module cupynumeric)": [[126, "cupynumeric.frexp", false]], "full() (in module cupynumeric)": [[127, "cupynumeric.full", false]], "full_like() (in module cupynumeric)": [[128, "cupynumeric.full_like", false]], "gamma() (in module cupynumeric.random)": [[364, "cupynumeric.random.gamma", false]], "gcd() (in module cupynumeric)": [[129, "cupynumeric.gcd", false]], "generator (class in cupynumeric.random)": [[2, "cupynumeric.random.Generator", false]], "geometric() (in module cupynumeric.random)": [[365, "cupynumeric.random.geometric", false]], "getfield() (cupynumeric.ndarray method)": [[299, "cupynumeric.ndarray.getfield", false]], "gradient() (in module cupynumeric)": [[130, "cupynumeric.gradient", false]], "greater() (in module cupynumeric)": [[131, "cupynumeric.greater", false]], "greater_equal() (in module cupynumeric)": [[132, "cupynumeric.greater_equal", false]], "gumbel() (in module cupynumeric.random)": [[366, "cupynumeric.random.gumbel", false]], "hamming() (in module cupynumeric)": [[133, "cupynumeric.hamming", false]], "hanning() (in module cupynumeric)": [[134, "cupynumeric.hanning", false]], "hfft() (in module cupynumeric.fft)": [[102, "cupynumeric.fft.hfft", false]], "histogram() (in module cupynumeric)": [[135, "cupynumeric.histogram", false]], "histogram2d() (in module cupynumeric)": [[136, "cupynumeric.histogram2d", false]], "histogramdd() (in module cupynumeric)": [[137, "cupynumeric.histogramdd", false]], "hsplit() (in module cupynumeric)": [[138, "cupynumeric.hsplit", false]], "hstack() (in module cupynumeric)": [[139, "cupynumeric.hstack", false]], "hypergeometric() (in module cupynumeric.random)": [[367, "cupynumeric.random.hypergeometric", false]], "hypot() (in module cupynumeric)": [[140, "cupynumeric.hypot", false]], "identity() (in module cupynumeric)": [[141, "cupynumeric.identity", false]], "ifft() (in module cupynumeric.fft)": [[103, "cupynumeric.fft.ifft", false]], "ifft2() (in module cupynumeric.fft)": [[104, "cupynumeric.fft.ifft2", false]], "ifftn() (in module cupynumeric.fft)": [[105, "cupynumeric.fft.ifftn", false]], "ifftshift() (in module cupynumeric.fft)": [[106, "cupynumeric.fft.ifftshift", false]], "ihfft() (in module cupynumeric.fft)": [[107, "cupynumeric.fft.ihfft", false]], "imag (cupynumeric.ndarray property)": [[300, "cupynumeric.ndarray.imag", false]], "imag() (in module cupynumeric)": [[142, "cupynumeric.imag", false]], "in1d() (in module cupynumeric)": [[143, "cupynumeric.in1d", false]], "index (cupynumeric.broadcast property)": [[6, "cupynumeric.broadcast.index", false]], "indices() (in module cupynumeric)": [[144, "cupynumeric.indices", false]], "inner() (in module cupynumeric)": [[145, "cupynumeric.inner", false]], "insert() (in module cupynumeric)": [[146, "cupynumeric.insert", false]], "invert() (in module cupynumeric)": [[147, "cupynumeric.invert", false]], "irfft() (in module cupynumeric.fft)": [[108, "cupynumeric.fft.irfft", false]], "irfft2() (in module cupynumeric.fft)": [[109, "cupynumeric.fft.irfft2", false]], "irfftn() (in module cupynumeric.fft)": [[110, "cupynumeric.fft.irfftn", false]], "isclose() (in module cupynumeric)": [[148, "cupynumeric.isclose", false]], "iscomplex() (in module cupynumeric)": [[149, "cupynumeric.iscomplex", false]], "iscomplexobj() (in module cupynumeric)": [[150, "cupynumeric.iscomplexobj", false]], "isfinite() (in module cupynumeric)": [[151, "cupynumeric.isfinite", false]], "isinf() (in module cupynumeric)": [[152, "cupynumeric.isinf", false]], "isnan() (in module cupynumeric)": [[153, "cupynumeric.isnan", false]], "isneginf() (in module cupynumeric)": [[154, "cupynumeric.isneginf", false]], "isposinf() (in module cupynumeric)": [[155, "cupynumeric.isposinf", false]], "isreal() (in module cupynumeric)": [[156, "cupynumeric.isreal", false]], "isrealobj() (in module cupynumeric)": [[157, "cupynumeric.isrealobj", false]], "isscalar() (in module cupynumeric)": [[158, "cupynumeric.isscalar", false]], "item() (cupynumeric.ndarray method)": [[301, "cupynumeric.ndarray.item", false]], "itemset (cupynumeric.ndarray attribute)": [[302, "cupynumeric.ndarray.itemset", false]], "itemsize (cupynumeric.ndarray property)": [[303, "cupynumeric.ndarray.itemsize", false]], "iters (cupynumeric.broadcast property)": [[6, "cupynumeric.broadcast.iters", false]], "ix_() (in module cupynumeric)": [[159, "cupynumeric.ix_", false]], "kaiser() (in module cupynumeric)": [[160, "cupynumeric.kaiser", false]], "laplace() (in module cupynumeric.random)": [[368, "cupynumeric.random.laplace", false]], "lcm() (in module cupynumeric)": [[161, "cupynumeric.lcm", false]], "ldexp() (in module cupynumeric)": [[162, "cupynumeric.ldexp", false]], "left_shift() (in module cupynumeric)": [[163, "cupynumeric.left_shift", false]], "less() (in module cupynumeric)": [[164, "cupynumeric.less", false]], "less_equal() (in module cupynumeric)": [[165, "cupynumeric.less_equal", false]], "linspace() (in module cupynumeric)": [[178, "cupynumeric.linspace", false]], "load() (in module cupynumeric)": [[179, "cupynumeric.load", false]], "log() (in module cupynumeric)": [[180, "cupynumeric.log", false]], "log10() (in module cupynumeric)": [[181, "cupynumeric.log10", false]], "log1p() (in module cupynumeric)": [[182, "cupynumeric.log1p", false]], "log2() (in module cupynumeric)": [[183, "cupynumeric.log2", false]], "logaddexp() (in module cupynumeric)": [[184, "cupynumeric.logaddexp", false]], "logaddexp2() (in module cupynumeric)": [[185, "cupynumeric.logaddexp2", false]], "logical_and() (in module cupynumeric)": [[186, "cupynumeric.logical_and", false]], "logical_not() (in module cupynumeric)": [[187, "cupynumeric.logical_not", false]], "logical_or() (in module cupynumeric)": [[188, "cupynumeric.logical_or", false]], "logical_xor() (in module cupynumeric)": [[189, "cupynumeric.logical_xor", false]], "logistic() (in module cupynumeric.random)": [[369, "cupynumeric.random.logistic", false]], "lognormal() (in module cupynumeric.random)": [[370, "cupynumeric.random.lognormal", false]], "logseries() (in module cupynumeric.random)": [[371, "cupynumeric.random.logseries", false]], "logspace() (in module cupynumeric)": [[190, "cupynumeric.logspace", false]], "mask_indices() (in module cupynumeric)": [[191, "cupynumeric.mask_indices", false]], "matmul() (in module cupynumeric)": [[192, "cupynumeric.matmul", false]], "matrix_power() (in module cupynumeric.linalg)": [[172, "cupynumeric.linalg.matrix_power", false]], "max() (cupynumeric.ndarray method)": [[304, "cupynumeric.ndarray.max", false]], "maximum() (in module cupynumeric)": [[193, "cupynumeric.maximum", false]], "mean() (cupynumeric.ndarray method)": [[305, "cupynumeric.ndarray.mean", false]], "mean() (in module cupynumeric)": [[194, "cupynumeric.mean", false]], "median() (in module cupynumeric)": [[195, "cupynumeric.median", false]], "meshgrid() (in module cupynumeric)": [[196, "cupynumeric.meshgrid", false]], "min() (cupynumeric.ndarray method)": [[306, "cupynumeric.ndarray.min", false]], "minimum() (in module cupynumeric)": [[197, "cupynumeric.minimum", false]], "mod() (in module cupynumeric)": [[198, "cupynumeric.mod", false]], "modf() (in module cupynumeric)": [[199, "cupynumeric.modf", false]], "module": [[11, "module-cupynumeric.fft", false], [461, "module-cupynumeric.linalg", false], [466, "module-cupynumeric.random", false]], "moveaxis() (in module cupynumeric)": [[200, "cupynumeric.moveaxis", false]], "multi_dot() (in module cupynumeric.linalg)": [[173, "cupynumeric.linalg.multi_dot", false]], "multiply() (in module cupynumeric)": [[201, "cupynumeric.multiply", false]], "nan_to_num() (in module cupynumeric)": [[202, "cupynumeric.nan_to_num", false]], "nanargmax() (in module cupynumeric)": [[203, "cupynumeric.nanargmax", false]], "nanargmin() (in module cupynumeric)": [[204, "cupynumeric.nanargmin", false]], "nancumprod() (in module cupynumeric)": [[205, "cupynumeric.nancumprod", false]], "nancumsum() (in module cupynumeric)": [[206, "cupynumeric.nancumsum", false]], "nanmax() (in module cupynumeric)": [[207, "cupynumeric.nanmax", false]], "nanmean() (in module cupynumeric)": [[208, "cupynumeric.nanmean", false]], "nanmedian() (in module cupynumeric)": [[209, "cupynumeric.nanmedian", false]], "nanmin() (in module cupynumeric)": [[210, "cupynumeric.nanmin", false]], "nanpercentile() (in module cupynumeric)": [[211, "cupynumeric.nanpercentile", false]], "nanprod() (in module cupynumeric)": [[212, "cupynumeric.nanprod", false]], "nanquantile() (in module cupynumeric)": [[213, "cupynumeric.nanquantile", false]], "nansum() (in module cupynumeric)": [[214, "cupynumeric.nansum", false]], "nbytes (cupynumeric.ndarray property)": [[307, "cupynumeric.ndarray.nbytes", false]], "nd (cupynumeric.broadcast property)": [[6, "cupynumeric.broadcast.nd", false]], "ndarray (class in cupynumeric)": [[4, "cupynumeric.ndarray", false]], "ndim (cupynumeric.broadcast property)": [[6, "cupynumeric.broadcast.ndim", false]], "ndim (cupynumeric.ndarray property)": [[308, "cupynumeric.ndarray.ndim", false]], "ndim() (in module cupynumeric)": [[336, "cupynumeric.ndim", false]], "negative() (in module cupynumeric)": [[337, "cupynumeric.negative", false]], "negative_binomial() (in module cupynumeric.random)": [[372, "cupynumeric.random.negative_binomial", false]], "nextafter() (in module cupynumeric)": [[338, "cupynumeric.nextafter", false]], "noncentral_chisquare() (in module cupynumeric.random)": [[373, "cupynumeric.random.noncentral_chisquare", false]], "noncentral_f() (in module cupynumeric.random)": [[374, "cupynumeric.random.noncentral_f", false]], "nonzero() (cupynumeric.ndarray method)": [[309, "cupynumeric.ndarray.nonzero", false]], "nonzero() (in module cupynumeric)": [[339, "cupynumeric.nonzero", false]], "norm() (in module cupynumeric.linalg)": [[174, "cupynumeric.linalg.norm", false]], "normal() (in module cupynumeric.random)": [[375, "cupynumeric.random.normal", false]], "not_equal() (in module cupynumeric)": [[340, "cupynumeric.not_equal", false]], "numiter (cupynumeric.broadcast property)": [[6, "cupynumeric.broadcast.numiter", false]], "ones() (in module cupynumeric)": [[341, "cupynumeric.ones", false]], "ones_like() (in module cupynumeric)": [[342, "cupynumeric.ones_like", false]], "outer() (in module cupynumeric)": [[343, "cupynumeric.outer", false]], "owndata (in module cupynumeric)": [[295, "cupynumeric.OWNDATA", false]], "packbits() (in module cupynumeric)": [[344, "cupynumeric.packbits", false]], "pareto() (in module cupynumeric.random)": [[376, "cupynumeric.random.pareto", false]], "partition() (cupynumeric.ndarray method)": [[310, "cupynumeric.ndarray.partition", false]], "partition() (in module cupynumeric)": [[345, "cupynumeric.partition", false]], "percentile() (in module cupynumeric)": [[346, "cupynumeric.percentile", false]], "place() (in module cupynumeric)": [[347, "cupynumeric.place", false]], "poisson() (in module cupynumeric.random)": [[377, "cupynumeric.random.poisson", false]], "positive() (in module cupynumeric)": [[348, "cupynumeric.positive", false]], "power() (in module cupynumeric)": [[349, "cupynumeric.power", false]], "power() (in module cupynumeric.random)": [[378, "cupynumeric.random.power", false]], "prod() (cupynumeric.ndarray method)": [[311, "cupynumeric.ndarray.prod", false]], "prod() (in module cupynumeric)": [[350, "cupynumeric.prod", false]], "put() (cupynumeric.ndarray method)": [[312, "cupynumeric.ndarray.put", false]], "put() (in module cupynumeric)": [[351, "cupynumeric.put", false]], "put_along_axis() (in module cupynumeric)": [[352, "cupynumeric.put_along_axis", false]], "putmask() (in module cupynumeric)": [[353, "cupynumeric.putmask", false]], "qr() (in module cupynumeric.linalg)": [[175, "cupynumeric.linalg.qr", false]], "quantile() (in module cupynumeric)": [[354, "cupynumeric.quantile", false]], "rad2deg() (in module cupynumeric)": [[355, "cupynumeric.rad2deg", false]], "radians() (in module cupynumeric)": [[356, "cupynumeric.radians", false]], "rand() (in module cupynumeric.random)": [[379, "cupynumeric.random.rand", false]], "randint() (in module cupynumeric.random)": [[380, "cupynumeric.random.randint", false]], "randn() (in module cupynumeric.random)": [[381, "cupynumeric.random.randn", false]], "random() (in module cupynumeric.random)": [[382, "cupynumeric.random.random", false]], "random_integers() (in module cupynumeric.random)": [[383, "cupynumeric.random.random_integers", false]], "random_sample() (in module cupynumeric.random)": [[384, "cupynumeric.random.random_sample", false]], "ranf() (in module cupynumeric.random)": [[385, "cupynumeric.random.ranf", false]], "ravel() (cupynumeric.ndarray method)": [[313, "cupynumeric.ndarray.ravel", false]], "ravel() (in module cupynumeric)": [[399, "cupynumeric.ravel", false]], "ravel_multi_index() (in module cupynumeric)": [[400, "cupynumeric.ravel_multi_index", false]], "rayleigh() (in module cupynumeric.random)": [[386, "cupynumeric.random.rayleigh", false]], "real (cupynumeric.ndarray property)": [[314, "cupynumeric.ndarray.real", false]], "real() (in module cupynumeric)": [[401, "cupynumeric.real", false]], "real_if_close() (in module cupynumeric)": [[402, "cupynumeric.real_if_close", false]], "reciprocal() (in module cupynumeric)": [[403, "cupynumeric.reciprocal", false]], "remainder() (in module cupynumeric)": [[404, "cupynumeric.remainder", false]], "repeat() (in module cupynumeric)": [[405, "cupynumeric.repeat", false]], "reset() (cupynumeric.broadcast method)": [[6, "cupynumeric.broadcast.reset", false]], "reshape() (cupynumeric.ndarray method)": [[315, "cupynumeric.ndarray.reshape", false]], "reshape() (in module cupynumeric)": [[406, "cupynumeric.reshape", false]], "rfft() (in module cupynumeric.fft)": [[111, "cupynumeric.fft.rfft", false]], "rfft2() (in module cupynumeric.fft)": [[112, "cupynumeric.fft.rfft2", false]], "rfftn() (in module cupynumeric.fft)": [[113, "cupynumeric.fft.rfftn", false]], "right_shift() (in module cupynumeric)": [[407, "cupynumeric.right_shift", false]], "rint() (in module cupynumeric)": [[408, "cupynumeric.rint", false]], "roll() (in module cupynumeric)": [[409, "cupynumeric.roll", false]], "roots() (in module cupynumeric)": [[410, "cupynumeric.roots", false]], "rot90() (in module cupynumeric)": [[411, "cupynumeric.rot90", false]], "round() (in module cupynumeric)": [[412, "cupynumeric.round", false]], "row_stack() (in module cupynumeric)": [[413, "cupynumeric.row_stack", false]], "sample() (in module cupynumeric.random)": [[387, "cupynumeric.random.sample", false]], "searchsorted() (cupynumeric.ndarray method)": [[316, "cupynumeric.ndarray.searchsorted", false]], "searchsorted() (in module cupynumeric)": [[414, "cupynumeric.searchsorted", false]], "seed() (in module cupynumeric.random)": [[388, "cupynumeric.random.seed", false]], "select() (in module cupynumeric)": [[415, "cupynumeric.select", false]], "setfield() (cupynumeric.ndarray method)": [[317, "cupynumeric.ndarray.setfield", false]], "setflags() (cupynumeric.ndarray method)": [[318, "cupynumeric.ndarray.setflags", false]], "shape (cupynumeric.broadcast property)": [[6, "cupynumeric.broadcast.shape", false]], "shape (cupynumeric.ndarray property)": [[319, "cupynumeric.ndarray.shape", false]], "shape() (in module cupynumeric)": [[416, "cupynumeric.shape", false]], "sign() (in module cupynumeric)": [[417, "cupynumeric.sign", false]], "signbit() (in module cupynumeric)": [[418, "cupynumeric.signbit", false]], "sin() (in module cupynumeric)": [[419, "cupynumeric.sin", false]], "sinh() (in module cupynumeric)": [[420, "cupynumeric.sinh", false]], "size (cupynumeric.broadcast property)": [[6, "cupynumeric.broadcast.size", false]], "size (cupynumeric.ndarray property)": [[320, "cupynumeric.ndarray.size", false]], "solve() (in module cupynumeric.linalg)": [[176, "cupynumeric.linalg.solve", false]], "sort() (cupynumeric.ndarray method)": [[321, "cupynumeric.ndarray.sort", false]], "sort() (in module cupynumeric)": [[421, "cupynumeric.sort", false]], "sort_complex() (in module cupynumeric)": [[422, "cupynumeric.sort_complex", false]], "split() (in module cupynumeric)": [[423, "cupynumeric.split", false]], "sqrt() (in module cupynumeric)": [[424, "cupynumeric.sqrt", false]], "square() (in module cupynumeric)": [[425, "cupynumeric.square", false]], "squeeze() (cupynumeric.ndarray method)": [[322, "cupynumeric.ndarray.squeeze", false]], "squeeze() (in module cupynumeric)": [[426, "cupynumeric.squeeze", false]], "stack() (in module cupynumeric)": [[427, "cupynumeric.stack", false]], "standard_cauchy() (in module cupynumeric.random)": [[389, "cupynumeric.random.standard_cauchy", false]], "standard_exponential() (in module cupynumeric.random)": [[390, "cupynumeric.random.standard_exponential", false]], "standard_gamma() (in module cupynumeric.random)": [[391, "cupynumeric.random.standard_gamma", false]], "standard_t() (in module cupynumeric.random)": [[392, "cupynumeric.random.standard_t", false]], "strides (cupynumeric.ndarray property)": [[323, "cupynumeric.ndarray.strides", false]], "subtract() (in module cupynumeric)": [[428, "cupynumeric.subtract", false]], "sum() (cupynumeric.ndarray method)": [[324, "cupynumeric.ndarray.sum", false]], "sum() (in module cupynumeric)": [[429, "cupynumeric.sum", false]], "svd() (in module cupynumeric.linalg)": [[177, "cupynumeric.linalg.svd", false]], "swapaxes() (cupynumeric.ndarray method)": [[325, "cupynumeric.ndarray.swapaxes", false]], "swapaxes() (in module cupynumeric)": [[430, "cupynumeric.swapaxes", false]], "t (cupynumeric.ndarray property)": [[215, "cupynumeric.ndarray.T", false]], "take() (cupynumeric.ndarray method)": [[326, "cupynumeric.ndarray.take", false]], "take() (in module cupynumeric)": [[431, "cupynumeric.take", false]], "take_along_axis() (in module cupynumeric)": [[432, "cupynumeric.take_along_axis", false]], "tan() (in module cupynumeric)": [[433, "cupynumeric.tan", false]], "tanh() (in module cupynumeric)": [[434, "cupynumeric.tanh", false]], "tensordot() (in module cupynumeric)": [[435, "cupynumeric.tensordot", false]], "tile() (in module cupynumeric)": [[436, "cupynumeric.tile", false]], "tobytes() (cupynumeric.ndarray method)": [[327, "cupynumeric.ndarray.tobytes", false]], "tofile() (cupynumeric.ndarray method)": [[328, "cupynumeric.ndarray.tofile", false]], "tolist() (cupynumeric.ndarray method)": [[329, "cupynumeric.ndarray.tolist", false]], "tostring() (cupynumeric.ndarray method)": [[330, "cupynumeric.ndarray.tostring", false]], "trace() (cupynumeric.ndarray method)": [[331, "cupynumeric.ndarray.trace", false]], "trace() (in module cupynumeric)": [[437, "cupynumeric.trace", false]], "transpose() (cupynumeric.ndarray method)": [[332, "cupynumeric.ndarray.transpose", false]], "transpose() (in module cupynumeric)": [[438, "cupynumeric.transpose", false]], "tri() (in module cupynumeric)": [[439, "cupynumeric.tri", false]], "triangular() (in module cupynumeric.random)": [[393, "cupynumeric.random.triangular", false]], "tril() (in module cupynumeric)": [[440, "cupynumeric.tril", false]], "tril_indices() (in module cupynumeric)": [[441, "cupynumeric.tril_indices", false]], "tril_indices_from() (in module cupynumeric)": [[442, "cupynumeric.tril_indices_from", false]], "triu() (in module cupynumeric)": [[443, "cupynumeric.triu", false]], "triu_indices() (in module cupynumeric)": [[444, "cupynumeric.triu_indices", false]], "triu_indices_from() (in module cupynumeric)": [[445, "cupynumeric.triu_indices_from", false]], "true_divide() (in module cupynumeric)": [[446, "cupynumeric.true_divide", false]], "trunc() (in module cupynumeric)": [[447, "cupynumeric.trunc", false]], "uniform() (in module cupynumeric.random)": [[394, "cupynumeric.random.uniform", false]], "unique() (cupynumeric.ndarray method)": [[333, "cupynumeric.ndarray.unique", false]], "unique() (in module cupynumeric)": [[448, "cupynumeric.unique", false]], "unpackbits() (in module cupynumeric)": [[449, "cupynumeric.unpackbits", false]], "unravel_index() (in module cupynumeric)": [[450, "cupynumeric.unravel_index", false]], "var() (cupynumeric.ndarray method)": [[334, "cupynumeric.ndarray.var", false]], "var() (in module cupynumeric)": [[451, "cupynumeric.var", false]], "vdot() (in module cupynumeric)": [[452, "cupynumeric.vdot", false]], "view() (cupynumeric.ndarray method)": [[335, "cupynumeric.ndarray.view", false]], "vonmises() (in module cupynumeric.random)": [[395, "cupynumeric.random.vonmises", false]], "vsplit() (in module cupynumeric)": [[453, "cupynumeric.vsplit", false]], "vstack() (in module cupynumeric)": [[454, "cupynumeric.vstack", false]], "wald() (in module cupynumeric.random)": [[396, "cupynumeric.random.wald", false]], "weibull() (in module cupynumeric.random)": [[397, "cupynumeric.random.weibull", false]], "where() (in module cupynumeric)": [[455, "cupynumeric.where", false]], "writeable (in module cupynumeric)": [[295, "cupynumeric.WRITEABLE", false]], "writebackifcopy (in module cupynumeric)": [[295, "cupynumeric.WRITEBACKIFCOPY", false]], "zeros() (in module cupynumeric)": [[456, "cupynumeric.zeros", false]], "zeros_like() (in module cupynumeric)": [[457, "cupynumeric.zeros_like", false]], "zipf() (in module cupynumeric.random)": [[398, "cupynumeric.random.zipf", false]]}, "objects": {"cupynumeric": [[295, 0, 1, "", "ALIGNED"], [295, 0, 1, "", "BEHAVED"], [295, 0, 1, "", "CARRAY"], [295, 0, 1, "", "FARRAY"], [295, 0, 1, "", "FNC"], [295, 0, 1, "", "FORC"], [295, 0, 1, "", "F_CONTIGUOUS"], [295, 0, 1, "", "OWNDATA"], [295, 0, 1, "", "WRITEABLE"], [295, 0, 1, "", "WRITEBACKIFCOPY"], [12, 1, 1, "", "absolute"], [13, 1, 1, "", "add"], [14, 1, 1, "", "all"], [15, 1, 1, "", "allclose"], [16, 1, 1, "", "amax"], [17, 1, 1, "", "amin"], [18, 1, 1, "", "angle"], [19, 1, 1, "", "any"], [20, 1, 1, "", "append"], [21, 1, 1, "", "arange"], [22, 1, 1, "", "arccos"], [23, 1, 1, "", "arccosh"], [24, 1, 1, "", "arcsin"], [25, 1, 1, "", "arcsinh"], [26, 1, 1, "", "arctan"], [27, 1, 1, "", "arctan2"], [28, 1, 1, "", "arctanh"], [29, 1, 1, "", "argmax"], [30, 1, 1, "", "argmin"], [31, 1, 1, "", "argpartition"], [32, 1, 1, "", "argsort"], [33, 1, 1, "", "argwhere"], [34, 1, 1, "", "array"], [35, 1, 1, "", "array_equal"], [36, 1, 1, "", "array_split"], [37, 1, 1, "", "asarray"], [38, 1, 1, "", "atleast_1d"], [39, 1, 1, "", "atleast_2d"], [40, 1, 1, "", "atleast_3d"], [41, 1, 1, "", "average"], [42, 1, 1, "", "bartlett"], [43, 1, 1, "", "bincount"], [44, 1, 1, "", "bitwise_and"], [45, 1, 1, "", "bitwise_or"], [46, 1, 1, "", "bitwise_xor"], [47, 1, 1, "", "blackman"], [48, 1, 1, "", "block"], [6, 2, 1, "", "broadcast"], [49, 1, 1, "", "broadcast_arrays"], [50, 1, 1, "", "broadcast_shapes"], [51, 1, 1, "", "broadcast_to"], [52, 1, 1, "", "cbrt"], [53, 1, 1, "", "ceil"], [54, 1, 1, "", "choose"], [55, 1, 1, "", "clip"], [56, 1, 1, "", "column_stack"], [57, 1, 1, "", "compress"], [58, 1, 1, "", "concatenate"], [59, 1, 1, "", "conj"], [60, 1, 1, "", "conjugate"], [61, 1, 1, "", "convolve"], [62, 1, 1, "", "copy"], [63, 1, 1, "", "copysign"], [64, 1, 1, "", "copyto"], [65, 1, 1, "", "cos"], [66, 1, 1, "", "cosh"], [67, 1, 1, "", "count_nonzero"], [68, 1, 1, "", "cov"], [69, 1, 1, "", "cross"], [70, 1, 1, "", "cumprod"], [71, 1, 1, "", "cumsum"], [72, 1, 1, "", "deg2rad"], [73, 1, 1, "", "degrees"], [74, 1, 1, "", "delete"], [75, 1, 1, "", "diag"], [76, 1, 1, "", "diag_indices"], [77, 1, 1, "", "diag_indices_from"], [78, 1, 1, "", "diagflat"], [79, 1, 1, "", "diagonal"], [80, 1, 1, "", "diff"], [81, 1, 1, "", "digitize"], [82, 1, 1, "", "divide"], [83, 1, 1, "", "dot"], [84, 1, 1, "", "dsplit"], [85, 1, 1, "", "dstack"], [86, 1, 1, "", "einsum"], [87, 1, 1, "", "einsum_path"], [88, 1, 1, "", "empty"], [89, 1, 1, "", "empty_like"], [90, 1, 1, "", "equal"], [91, 1, 1, "", "exp"], [92, 1, 1, "", "exp2"], [93, 1, 1, "", "expand_dims"], [94, 1, 1, "", "expm1"], [95, 1, 1, "", "extract"], [96, 1, 1, "", "eye"], [97, 1, 1, "", "fabs"], [11, 5, 0, "-", "fft"], [114, 1, 1, "", "fill_diagonal"], [115, 1, 1, "", "find_common_type"], [116, 1, 1, "", "flatnonzero"], [117, 1, 1, "", "flip"], [118, 1, 1, "", "fliplr"], [119, 1, 1, "", "flipud"], [120, 1, 1, "", "float_power"], [121, 1, 1, "", "floor"], [122, 1, 1, "", "floor_divide"], [123, 1, 1, "", "fmax"], [124, 1, 1, "", "fmin"], [125, 1, 1, "", "fmod"], [126, 1, 1, "", "frexp"], [127, 1, 1, "", "full"], [128, 1, 1, "", "full_like"], [129, 1, 1, "", "gcd"], [130, 1, 1, "", "gradient"], [131, 1, 1, "", "greater"], [132, 1, 1, "", "greater_equal"], [133, 1, 1, "", "hamming"], [134, 1, 1, "", "hanning"], [135, 1, 1, "", "histogram"], [136, 1, 1, "", "histogram2d"], [137, 1, 1, "", "histogramdd"], [138, 1, 1, "", "hsplit"], [139, 1, 1, "", "hstack"], [140, 1, 1, "", "hypot"], [141, 1, 1, "", "identity"], [142, 1, 1, "", "imag"], [143, 1, 1, "", "in1d"], [144, 1, 1, "", "indices"], [145, 1, 1, "", "inner"], [146, 1, 1, "", "insert"], [147, 1, 1, "", "invert"], [148, 1, 1, "", "isclose"], [149, 1, 1, "", "iscomplex"], [150, 1, 1, "", "iscomplexobj"], [151, 1, 1, "", "isfinite"], [152, 1, 1, "", "isinf"], [153, 1, 1, "", "isnan"], [154, 1, 1, "", "isneginf"], [155, 1, 1, "", "isposinf"], [156, 1, 1, "", "isreal"], [157, 1, 1, "", "isrealobj"], [158, 1, 1, "", "isscalar"], [159, 1, 1, "", "ix_"], [160, 1, 1, "", "kaiser"], [161, 1, 1, "", "lcm"], [162, 1, 1, "", "ldexp"], [163, 1, 1, "", "left_shift"], [164, 1, 1, "", "less"], [165, 1, 1, "", "less_equal"], [461, 5, 0, "-", "linalg"], [178, 1, 1, "", "linspace"], [179, 1, 1, "", "load"], [180, 1, 1, "", "log"], [181, 1, 1, "", "log10"], [182, 1, 1, "", "log1p"], [183, 1, 1, "", "log2"], [184, 1, 1, "", "logaddexp"], [185, 1, 1, "", "logaddexp2"], [186, 1, 1, "", "logical_and"], [187, 1, 1, "", "logical_not"], [188, 1, 1, "", "logical_or"], [189, 1, 1, "", "logical_xor"], [190, 1, 1, "", "logspace"], [191, 1, 1, "", "mask_indices"], [192, 1, 1, "", "matmul"], [193, 1, 1, "", "maximum"], [194, 1, 1, "", "mean"], [195, 1, 1, "", "median"], [196, 1, 1, "", "meshgrid"], [197, 1, 1, "", "minimum"], [198, 1, 1, "", "mod"], [199, 1, 1, "", "modf"], [200, 1, 1, "", "moveaxis"], [201, 1, 1, "", "multiply"], [202, 1, 1, "", "nan_to_num"], [203, 1, 1, "", "nanargmax"], [204, 1, 1, "", "nanargmin"], [205, 1, 1, "", "nancumprod"], [206, 1, 1, "", "nancumsum"], [207, 1, 1, "", "nanmax"], [208, 1, 1, "", "nanmean"], [209, 1, 1, "", "nanmedian"], [210, 1, 1, "", "nanmin"], [211, 1, 1, "", "nanpercentile"], [212, 1, 1, "", "nanprod"], [213, 1, 1, "", "nanquantile"], [214, 1, 1, "", "nansum"], [4, 2, 1, "", "ndarray"], [336, 1, 1, "", "ndim"], [337, 1, 1, "", "negative"], [338, 1, 1, "", "nextafter"], [339, 1, 1, "", "nonzero"], [340, 1, 1, "", "not_equal"], [341, 1, 1, "", "ones"], [342, 1, 1, "", "ones_like"], [343, 1, 1, "", "outer"], [344, 1, 1, "", "packbits"], [345, 1, 1, "", "partition"], [346, 1, 1, "", "percentile"], [347, 1, 1, "", "place"], [348, 1, 1, "", "positive"], [349, 1, 1, "", "power"], [350, 1, 1, "", "prod"], [351, 1, 1, "", "put"], [352, 1, 1, "", "put_along_axis"], [353, 1, 1, "", "putmask"], [354, 1, 1, "", "quantile"], [355, 1, 1, "", "rad2deg"], [356, 1, 1, "", "radians"], [466, 5, 0, "-", "random"], [399, 1, 1, "", "ravel"], [400, 1, 1, "", "ravel_multi_index"], [401, 1, 1, "", "real"], [402, 1, 1, "", "real_if_close"], [403, 1, 1, "", "reciprocal"], [404, 1, 1, "", "remainder"], [405, 1, 1, "", "repeat"], [406, 1, 1, "", "reshape"], [407, 1, 1, "", "right_shift"], [408, 1, 1, "", "rint"], [409, 1, 1, "", "roll"], [410, 1, 1, "", "roots"], [411, 1, 1, "", "rot90"], [412, 1, 1, "", "round"], [413, 1, 1, "", "row_stack"], [414, 1, 1, "", "searchsorted"], [415, 1, 1, "", "select"], [416, 1, 1, "", "shape"], [417, 1, 1, "", "sign"], [418, 1, 1, "", "signbit"], [419, 1, 1, "", "sin"], [420, 1, 1, "", "sinh"], [421, 1, 1, "", "sort"], [422, 1, 1, "", "sort_complex"], [423, 1, 1, "", "split"], [424, 1, 1, "", "sqrt"], [425, 1, 1, "", "square"], [426, 1, 1, "", "squeeze"], [427, 1, 1, "", "stack"], [428, 1, 1, "", "subtract"], [429, 1, 1, "", "sum"], [430, 1, 1, "", "swapaxes"], [431, 1, 1, "", "take"], [432, 1, 1, "", "take_along_axis"], [433, 1, 1, "", "tan"], [434, 1, 1, "", "tanh"], [435, 1, 1, "", "tensordot"], [436, 1, 1, "", "tile"], [437, 1, 1, "", "trace"], [438, 1, 1, "", "transpose"], [439, 1, 1, "", "tri"], [440, 1, 1, "", "tril"], [441, 1, 1, "", "tril_indices"], [442, 1, 1, "", "tril_indices_from"], [443, 1, 1, "", "triu"], [444, 1, 1, "", "triu_indices"], [445, 1, 1, "", "triu_indices_from"], [446, 1, 1, "", "true_divide"], [447, 1, 1, "", "trunc"], [448, 1, 1, "", "unique"], [449, 1, 1, "", "unpackbits"], [450, 1, 1, "", "unravel_index"], [451, 1, 1, "", "var"], [452, 1, 1, "", "vdot"], [453, 1, 1, "", "vsplit"], [454, 1, 1, "", "vstack"], [455, 1, 1, "", "where"], [456, 1, 1, "", "zeros"], [457, 1, 1, "", "zeros_like"]], "cupynumeric.broadcast": [[6, 3, 1, "", "index"], [6, 3, 1, "", "iters"], [6, 3, 1, "", "nd"], [6, 3, 1, "", "ndim"], [6, 3, 1, "", "numiter"], [6, 4, 1, "", "reset"], [6, 3, 1, "", "shape"], [6, 3, 1, "", "size"]], "cupynumeric.fft": [[98, 1, 1, "", "fft"], [99, 1, 1, "", "fft2"], [100, 1, 1, "", "fftn"], [101, 1, 1, "", "fftshift"], [102, 1, 1, "", "hfft"], [103, 1, 1, "", "ifft"], [104, 1, 1, "", "ifft2"], [105, 1, 1, "", "ifftn"], [106, 1, 1, "", "ifftshift"], [107, 1, 1, "", "ihfft"], [108, 1, 1, "", "irfft"], [109, 1, 1, "", "irfft2"], [110, 1, 1, "", "irfftn"], [111, 1, 1, "", "rfft"], [112, 1, 1, "", "rfft2"], [113, 1, 1, "", "rfftn"]], "cupynumeric.linalg": [[166, 1, 1, "", "cholesky"], [167, 1, 1, "", "eig"], [168, 1, 1, "", "eigh"], [169, 1, 1, "", "eigvals"], [170, 1, 1, "", "eigvalsh"], [171, 1, 1, "", "expm"], [172, 1, 1, "", "matrix_power"], [173, 1, 1, "", "multi_dot"], [174, 1, 1, "", "norm"], [175, 1, 1, "", "qr"], [176, 1, 1, "", "solve"], [177, 1, 1, "", "svd"]], "cupynumeric.ndarray": [[295, 0, 1, "", "C_CONTIGUOUS"], [215, 3, 1, "", "T"], [216, 4, 1, "", "__abs__"], [217, 4, 1, "", "__add__"], [218, 4, 1, "", "__and__"], [219, 4, 1, "", "__array__"], [220, 4, 1, "", "__bool__"], [221, 4, 1, "", "__complex__"], [222, 4, 1, "", "__contains__"], [223, 4, 1, "", "__copy__"], [224, 4, 1, "", "__deepcopy__"], [225, 4, 1, "", "__divmod__"], [226, 4, 1, "", "__eq__"], [227, 4, 1, "", "__float__"], [228, 4, 1, "", "__floordiv__"], [229, 4, 1, "", "__ge__"], [230, 4, 1, "", "__getitem__"], [231, 4, 1, "", "__gt__"], [232, 4, 1, "", "__iadd__"], [233, 4, 1, "", "__iand__"], [234, 4, 1, "", "__ifloordiv__"], [235, 4, 1, "", "__ilshift__"], [236, 4, 1, "", "__imatmul__"], [237, 4, 1, "", "__imod__"], [238, 4, 1, "", "__imul__"], [239, 4, 1, "", "__index__"], [4, 4, 1, "", "__init__"], [240, 4, 1, "", "__int__"], [241, 4, 1, "", "__invert__"], [242, 4, 1, "", "__ior__"], [243, 4, 1, "", "__ipow__"], [244, 4, 1, "", "__irshift__"], [245, 4, 1, "", "__isub__"], [246, 4, 1, "", "__itruediv__"], [247, 4, 1, "", "__ixor__"], [248, 4, 1, "", "__le__"], [249, 4, 1, "", "__len__"], [250, 4, 1, "", "__lshift__"], [251, 4, 1, "", "__lt__"], [252, 4, 1, "", "__matmul__"], [253, 4, 1, "", "__mod__"], [254, 4, 1, "", "__mul__"], [255, 4, 1, "", "__ne__"], [256, 4, 1, "", "__neg__"], [257, 4, 1, "", "__new__"], [258, 4, 1, "", "__or__"], [259, 4, 1, "", "__pos__"], [260, 4, 1, "", "__pow__"], [261, 4, 1, "", "__reduce__"], [262, 4, 1, "", "__repr__"], [263, 4, 1, "", "__rmatmul__"], [264, 4, 1, "", "__rshift__"], [265, 4, 1, "", "__setitem__"], [266, 4, 1, "", "__setstate__"], [267, 4, 1, "", "__str__"], [268, 4, 1, "", "__sub__"], [269, 4, 1, "", "__truediv__"], [270, 4, 1, "", "__xor__"], [271, 4, 1, "", "all"], [272, 4, 1, "", "any"], [273, 4, 1, "", "argmax"], [274, 4, 1, "", "argmin"], [275, 4, 1, "", "argpartition"], [276, 4, 1, "", "argsort"], [277, 4, 1, "", "astype"], [278, 3, 1, "", "base"], [279, 4, 1, "", "choose"], [280, 4, 1, "", "clip"], [281, 4, 1, "", "compress"], [282, 4, 1, "", "conj"], [283, 4, 1, "", "conjugate"], [284, 4, 1, "", "copy"], [285, 3, 1, "", "ctypes"], [286, 4, 1, "", "cumprod"], [287, 4, 1, "", "cumsum"], [288, 3, 1, "", "data"], [289, 4, 1, "", "diagonal"], [290, 4, 1, "", "dot"], [291, 3, 1, "", "dtype"], [292, 4, 1, "", "dump"], [293, 4, 1, "", "dumps"], [294, 4, 1, "", "fill"], [295, 3, 1, "", "flags"], [296, 3, 1, "", "flat"], [297, 4, 1, "", "flatten"], [298, 4, 1, "", "flip"], [299, 4, 1, "", "getfield"], [300, 3, 1, "", "imag"], [301, 4, 1, "", "item"], [302, 0, 1, "", "itemset"], [303, 3, 1, "", "itemsize"], [304, 4, 1, "", "max"], [305, 4, 1, "", "mean"], [306, 4, 1, "", "min"], [307, 3, 1, "", "nbytes"], [308, 3, 1, "", "ndim"], [309, 4, 1, "", "nonzero"], [310, 4, 1, "", "partition"], [311, 4, 1, "", "prod"], [312, 4, 1, "", "put"], [313, 4, 1, "", "ravel"], [314, 3, 1, "", "real"], [315, 4, 1, "", "reshape"], [316, 4, 1, "", "searchsorted"], [317, 4, 1, "", "setfield"], [318, 4, 1, "", "setflags"], [319, 3, 1, "", "shape"], [320, 3, 1, "", "size"], [321, 4, 1, "", "sort"], [322, 4, 1, "", "squeeze"], [323, 3, 1, "", "strides"], [324, 4, 1, "", "sum"], [325, 4, 1, "", "swapaxes"], [326, 4, 1, "", "take"], [327, 4, 1, "", "tobytes"], [328, 4, 1, "", "tofile"], [329, 4, 1, "", "tolist"], [330, 4, 1, "", "tostring"], [331, 4, 1, "", "trace"], [332, 4, 1, "", "transpose"], [333, 4, 1, "", "unique"], [334, 4, 1, "", "var"], [335, 4, 1, "", "view"]], "cupynumeric.random": [[1, 2, 1, "", "BitGenerator"], [2, 2, 1, "", "Generator"], [357, 1, 1, "", "beta"], [358, 1, 1, "", "binomial"], [359, 1, 1, "", "bytes"], [360, 1, 1, "", "chisquare"], [361, 1, 1, "", "default_rng"], [362, 1, 1, "", "exponential"], [363, 1, 1, "", "f"], [364, 1, 1, "", "gamma"], [365, 1, 1, "", "geometric"], [366, 1, 1, "", "gumbel"], [367, 1, 1, "", "hypergeometric"], [368, 1, 1, "", "laplace"], [369, 1, 1, "", "logistic"], [370, 1, 1, "", "lognormal"], [371, 1, 1, "", "logseries"], [372, 1, 1, "", "negative_binomial"], [373, 1, 1, "", "noncentral_chisquare"], [374, 1, 1, "", "noncentral_f"], [375, 1, 1, "", "normal"], [376, 1, 1, "", "pareto"], [377, 1, 1, "", "poisson"], [378, 1, 1, "", "power"], [379, 1, 1, "", "rand"], [380, 1, 1, "", "randint"], [381, 1, 1, "", "randn"], [382, 1, 1, "", "random"], [383, 1, 1, "", "random_integers"], [384, 1, 1, "", "random_sample"], [385, 1, 1, "", "ranf"], [386, 1, 1, "", "rayleigh"], [387, 1, 1, "", "sample"], [388, 1, 1, "", "seed"], [389, 1, 1, "", "standard_cauchy"], [390, 1, 1, "", "standard_exponential"], [391, 1, 1, "", "standard_gamma"], [392, 1, 1, "", "standard_t"], [393, 1, 1, "", "triangular"], [394, 1, 1, "", "uniform"], [395, 1, 1, "", "vonmises"], [396, 1, 1, "", "wald"], [397, 1, 1, "", "weibull"], [398, 1, 1, "", "zipf"]], "cupynumeric.random.BitGenerator": [[1, 4, 1, "", "__init__"]], "cupynumeric.random.Generator": [[2, 4, 1, "", "__init__"]]}, "objnames": {"0": ["py", "attribute", "Python attribute"], "1": ["py", "function", "Python function"], "2": ["py", "class", "Python class"], "3": ["py", "property", "Python property"], "4": ["py", "method", "Python method"], "5": ["py", "module", "Python module"]}, "objtypes": {"0": "py:attribute", "1": "py:function", "2": "py:class", "3": "py:property", "4": "py:method", "5": "py:module"}, "terms": {"": [2, 6, 14, 15, 29, 30, 35, 61, 69, 70, 71, 79, 99, 100, 104, 105, 109, 110, 112, 113, 114, 115, 148, 158, 174, 177, 205, 206, 207, 210, 211, 213, 288, 291, 301, 320, 327, 328, 332, 346, 354, 392, 398, 435, 436, 469, 477, 478, 481, 482, 483, 484, 486, 487, 488, 489, 490, 493, 496, 498, 501, 502, 503], "0": [3, 4, 14, 19, 21, 36, 41, 43, 48, 54, 55, 58, 68, 70, 75, 76, 78, 79, 80, 81, 83, 96, 99, 100, 101, 103, 104, 105, 110, 113, 116, 119, 141, 144, 172, 174, 178, 190, 191, 196, 202, 207, 211, 213, 220, 266, 289, 295, 299, 316, 317, 323, 324, 329, 331, 332, 334, 344, 346, 354, 357, 358, 360, 362, 363, 364, 366, 368, 369, 370, 371, 372, 373, 374, 375, 377, 378, 379, 380, 381, 382, 384, 385, 386, 387, 389, 392, 394, 395, 396, 397, 410, 411, 412, 414, 415, 423, 427, 429, 437, 439, 440, 441, 442, 443, 444, 445, 449, 451, 453, 469, 477, 480, 481, 482, 483, 484, 486, 487, 488, 489, 490, 496, 498, 499, 501, 502, 503, 504], "00": 503, "000": 503, "000001": 486, "000028": 490, "000029": 490, "0021705301478625403": 483, "01": [70, 503], "012924932": 503, "017": 492, "03": 480, "041000": 502, "05": [15, 148, 481, 503], "052000": 502, "07": [482, 496, 501], "075726": 480, "08": [15, 148, 480], "0b00000011": [344, 449], "0d": 495, "0x11403f190": 483, "1": [2, 3, 14, 16, 17, 19, 21, 31, 32, 36, 38, 40, 41, 43, 48, 54, 55, 56, 57, 61, 68, 69, 70, 71, 75, 76, 79, 80, 81, 83, 85, 94, 95, 98, 99, 100, 102, 103, 104, 105, 107, 108, 109, 110, 111, 112, 113, 118, 130, 135, 136, 137, 138, 139, 143, 144, 145, 159, 173, 174, 175, 178, 190, 192, 196, 205, 206, 210, 211, 213, 214, 275, 276, 284, 295, 296, 297, 301, 310, 311, 316, 321, 323, 332, 343, 344, 345, 346, 347, 352, 354, 357, 358, 360, 362, 364, 365, 366, 367, 368, 369, 370, 371, 372, 374, 375, 376, 377, 378, 379, 381, 382, 383, 384, 385, 386, 387, 390, 391, 394, 396, 397, 398, 399, 402, 406, 410, 411, 413, 414, 421, 423, 426, 427, 432, 435, 436, 439, 448, 449, 452, 454, 469, 477, 478, 481, 482, 483, 484, 486, 487, 488, 489, 490, 492, 495, 496, 498, 499, 501, 502, 504], "10": [80, 81, 135, 136, 137, 181, 190, 476, 481, 483, 486, 489, 490, 499, 501, 502, 503], "100": [70, 211, 346, 402, 480, 481, 482, 483, 486, 488, 498, 499, 502, 503], "1000": [481, 482, 488, 496, 502, 503], "10000": [179, 503], "100000": 503, "1000000": [481, 503], "10000000": 502, "100000000": 503, "1000000k": 503, "100000k": 503, "10000k": 503, "101": 502, "1024": [469, 489], "1083": 503, "10k": 492, "11": [492, 501, 503], "1100": 503, "11432": 503, "11680": 503, "12": [3, 8, 81, 492, 493, 495, 501], "12000": 503, "1202": 503, "123": 502, "1241": 503, "125": 375, "126": 489, "128": [489, 502], "129": 492, "13": [487, 492, 503], "1300": 503, "13012": 503, "134217728": 469, "135": 480, "14": [3, 487, 502], "14000": 503, "141": 503, "15": [81, 174, 488, 503], "150": 503, "15000": 503, "15000x15000": 503, "15973827": 495, "16": [3, 8, 402, 480, 484, 503], "16000": 503, "16969": 503, "17": 3, "173": 502, "17617": 503, "18": [3, 8, 171, 303, 490], "19": 3, "1956": 396, "196": 480, "1970": 503, "1984": 493, "1985": 174, "1992": 483, "1995": 493, "1996": [211, 213, 346, 354], "1997": 481, "1998": 493, "1d": [41, 57, 352, 405, 432, 436], "1d00000000000001": 490, "1e": [15, 148, 482, 483, 487], "1e00000000000000": 490, "2": [3, 39, 40, 48, 56, 68, 69, 75, 76, 77, 78, 79, 80, 81, 83, 84, 85, 92, 96, 99, 102, 103, 104, 107, 108, 109, 110, 111, 112, 113, 114, 118, 119, 130, 136, 159, 162, 167, 168, 169, 170, 173, 174, 175, 177, 183, 185, 192, 196, 211, 213, 323, 332, 346, 354, 362, 365, 373, 397, 402, 411, 413, 423, 435, 436, 437, 454, 469, 477, 480, 481, 482, 483, 484, 486, 487, 488, 489, 492, 493, 494, 495, 501, 502, 504], "20": [81, 323, 376, 487, 489, 503], "200": [375, 503], "2000": [493, 503], "20000": 503, "2000000": 503, "2000000k": 503, "2001": [362, 375], "2004": [477, 493], "2005": 493, "2006": 477, "2015": 493, "2017": 493, "2020": 503, "2024": [481, 482, 488], "2025": 493, "2048": 491, "21": [3, 303, 503], "2193": 503, "22": [3, 503], "2204460492503131e": 402, "225": 503, "22500x22500": 503, "23": [3, 496, 501], "2316419": 481, "2350": 503, "24": [490, 492], "24000": 503, "2461": 488, "249": 502, "25": [476, 489, 502], "250": 502, "25001932": 503, "253": [3, 8], "255": [80, 484, 503], "256": [486, 502], "259": 503, "2593": 503, "26": [481, 498], "27": 498, "273": 488, "275": 503, "277": 482, "28": [3, 498], "280": 481, "29": 3, "294165": 503, "2960": 503, "2d": [114, 332, 411, 489, 501, 502], "2x": 487, "2x2": 487, "2y": 487, "3": [40, 69, 80, 81, 83, 84, 85, 130, 139, 159, 192, 196, 211, 213, 323, 344, 346, 354, 362, 413, 423, 431, 435, 436, 449, 454, 481, 482, 483, 484, 486, 487, 488, 492, 493, 495, 501, 502, 504], "30": 503, "300": 503, "30000": 503, "30000x30000": 503, "303000": 502, "31": [482, 498], "3110": 503, "31938153": 481, "32": [8, 212, 323, 478, 489, 503], "320": 486, "33": 498, "330274429": 481, "35": 503, "3550": 503, "356563782": 481, "36": 483, "361": [211, 213, 346, 354], "365": [211, 213, 346, 354], "37": 70, "38": [3, 502], "38000": 503, "39": 487, "39894228040143267793994605993438": 481, "3d": [501, 502], "3e": 70, "3rd": 84, "4": [3, 80, 81, 83, 145, 192, 211, 213, 323, 346, 354, 435, 436, 452, 481, 482, 483, 484, 486, 487, 488, 489, 490, 495, 499, 501, 502, 503, 504], "40": [323, 488, 503], "40000": 503, "4096": 469, "42": [3, 8, 486, 501], "434": 503, "4378": 503, "443": [3, 8], "45": [8, 481], "457": 503, "466": 503, "47": 3, "48000": 503, "49": [8, 503], "499": 502, "4f": 503, "4th": [362, 375], "4x": 503, "4y": 487, "5": [80, 81, 83, 159, 192, 211, 213, 323, 346, 354, 436, 481, 482, 483, 484, 486, 488, 490, 501, 503], "50": [178, 190, 211, 213, 346, 354, 502, 503], "500": [502, 503], "50000": 503, "50000x50000": 503, "5050": 503, "50625": 503, "50e": 503, "51": 375, "5384": 503, "5460": 503, "5596": 503, "57": 362, "573000": 502, "6": [3, 80, 81, 211, 213, 323, 346, 354, 480, 481, 482, 483, 486, 487, 488], "600": 489, "6040": 503, "613000": 502, "62": [3, 8], "6368": 503, "64": [212, 502, 503], "655000": 502, "65536": 469, "659": 481, "69664": 503, "6f": 502, "7": [3, 80, 192, 211, 213, 318, 323, 346, 354, 481, 483, 486, 487], "70": 503, "70000": 503, "713": 503, "716000": 502, "725": 503, "748000": 502, "749": 502, "75": 502, "750": 502, "75625": 503, "75625x75625": 503, "767": 503, "769000": 502, "776000": 502, "781477937": 481, "790000": 502, "7f0524da9740": 490, "7fda18f26000": 490, "7fe90fa7d740": 490, "8": [80, 175, 211, 213, 323, 346, 354, 483, 486, 493, 503], "80": 376, "8000": 503, "805182": 490, "8192": 469, "821255978": 481, "8388608": 490, "875": 488, "8850": 503, "9": [192, 211, 213, 323, 346, 354, 483, 484, 486, 502, 503], "90": 411, "902": 502, "919": 503, "926000": 502, "961": 503, "993": 503, "999": 502, "A": [1, 8, 12, 13, 14, 18, 19, 20, 22, 23, 24, 25, 26, 27, 28, 34, 43, 44, 45, 46, 51, 52, 53, 57, 59, 60, 61, 63, 64, 65, 66, 68, 70, 71, 72, 73, 74, 82, 87, 90, 91, 92, 94, 97, 99, 103, 104, 115, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 129, 130, 131, 132, 136, 137, 140, 146, 147, 151, 152, 153, 154, 155, 161, 162, 163, 164, 165, 171, 174, 175, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 191, 192, 193, 195, 197, 198, 199, 201, 202, 205, 206, 209, 212, 214, 277, 292, 295, 296, 297, 298, 301, 318, 323, 327, 330, 337, 338, 340, 343, 348, 349, 355, 356, 361, 377, 381, 392, 399, 403, 404, 406, 407, 408, 411, 412, 417, 418, 419, 420, 423, 424, 425, 428, 431, 433, 434, 436, 438, 446, 447, 449, 451, 469, 482, 483, 486, 490, 493, 496, 502, 503], "AND": [14, 44, 186, 493], "AS": [481, 482, 488, 493], "And": [487, 504], "As": [323, 328, 392, 396, 477, 488, 495, 501, 502, 503], "At": [12, 13, 22, 23, 24, 25, 26, 27, 28, 44, 45, 46, 52, 53, 59, 60, 63, 65, 66, 72, 73, 82, 90, 91, 92, 94, 97, 120, 121, 122, 123, 124, 125, 126, 129, 131, 132, 140, 147, 151, 152, 153, 161, 162, 163, 164, 165, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 193, 197, 198, 199, 201, 337, 338, 340, 348, 349, 355, 356, 403, 404, 407, 408, 417, 418, 419, 420, 424, 425, 428, 433, 434, 446, 447, 482], "BE": 493, "BUT": 493, "BY": 493, "But": [501, 502], "By": [16, 17, 29, 30, 31, 32, 37, 68, 69, 99, 104, 113, 171, 178, 190, 203, 204, 207, 212, 277, 345, 399, 405, 409, 421, 431, 438, 439, 441, 444, 451, 469, 477, 489, 502, 503, 504], "FOR": 493, "For": [12, 13, 21, 22, 23, 24, 25, 26, 27, 28, 36, 40, 44, 45, 46, 52, 53, 55, 59, 60, 61, 63, 65, 66, 70, 71, 72, 73, 74, 76, 80, 81, 82, 85, 86, 90, 91, 92, 94, 97, 98, 102, 103, 105, 108, 109, 111, 112, 114, 118, 119, 120, 121, 122, 123, 124, 125, 126, 129, 131, 132, 139, 140, 147, 148, 151, 152, 153, 161, 162, 163, 164, 165, 172, 174, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 193, 194, 196, 197, 198, 199, 201, 202, 203, 204, 205, 206, 208, 212, 261, 266, 303, 323, 332, 337, 338, 340, 348, 349, 355, 356, 375, 403, 404, 407, 408, 413, 417, 418, 419, 420, 423, 424, 425, 427, 428, 433, 434, 446, 447, 451, 454, 465, 477, 483, 484, 486, 489, 490, 491, 492, 494, 496, 499, 502, 503, 504], "IF": 493, "IN": 493, "ITS": 493, "If": [1, 2, 12, 13, 14, 15, 16, 17, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 34, 35, 41, 42, 43, 44, 45, 46, 47, 48, 49, 52, 53, 54, 55, 57, 58, 59, 60, 61, 63, 64, 65, 66, 68, 69, 70, 71, 72, 73, 74, 75, 79, 80, 81, 82, 83, 86, 87, 90, 91, 92, 94, 96, 97, 98, 99, 100, 102, 103, 104, 105, 107, 108, 110, 111, 113, 114, 117, 120, 121, 122, 123, 124, 125, 126, 129, 130, 131, 132, 133, 134, 135, 136, 137, 140, 142, 143, 144, 145, 146, 147, 148, 151, 152, 153, 154, 155, 156, 160, 161, 162, 163, 164, 165, 167, 168, 169, 170, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 192, 193, 194, 195, 196, 197, 198, 199, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 266, 277, 298, 316, 328, 329, 332, 336, 337, 338, 340, 343, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 383, 384, 385, 386, 387, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 401, 402, 403, 404, 406, 407, 408, 409, 410, 412, 414, 417, 418, 419, 420, 421, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 439, 446, 447, 448, 451, 452, 477, 478, 483, 486, 487, 490, 498, 501, 502, 503], "In": [2, 61, 69, 70, 71, 86, 103, 104, 105, 108, 110, 166, 178, 190, 191, 196, 205, 206, 211, 212, 213, 214, 345, 346, 350, 351, 354, 376, 394, 396, 406, 421, 429, 439, 477, 481, 482, 483, 485, 486, 489, 496, 501, 502, 503], "It": [6, 14, 19, 20, 21, 29, 30, 31, 32, 42, 47, 51, 54, 55, 70, 71, 81, 122, 168, 170, 195, 203, 204, 205, 206, 209, 211, 213, 214, 295, 346, 350, 353, 354, 357, 362, 365, 368, 376, 395, 412, 415, 429, 431, 432, 451, 483, 489, 494, 501, 502, 503, 504], "Its": [55, 57, 352, 362, 437], "NO": 493, "NOT": [147, 187, 388, 493, 503], "No": [166, 502], "Not": [55, 151, 205, 206, 212, 214, 501], "OF": [481, 482, 488, 493], "ON": [478, 493], "OR": [19, 45, 188, 481, 482, 488, 492, 493], "On": 490, "One": [38, 39, 40, 212, 280, 406, 490, 501], "Ones": [34, 205], "Or": 435, "SUCH": 493, "Such": 490, "THE": 493, "TO": 493, "That": 191, "The": [2, 6, 7, 14, 15, 16, 17, 18, 19, 20, 21, 31, 32, 34, 36, 37, 41, 42, 43, 47, 48, 49, 50, 51, 54, 55, 56, 58, 61, 64, 67, 68, 69, 70, 71, 74, 75, 76, 78, 79, 80, 81, 83, 85, 86, 87, 89, 93, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 115, 117, 120, 127, 128, 130, 133, 134, 135, 136, 137, 139, 141, 142, 143, 144, 145, 148, 150, 154, 155, 157, 160, 166, 167, 168, 169, 170, 172, 173, 174, 175, 177, 178, 179, 190, 191, 192, 194, 195, 196, 200, 202, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 266, 277, 285, 292, 295, 297, 298, 300, 303, 314, 318, 323, 327, 328, 329, 336, 341, 342, 344, 345, 346, 350, 351, 352, 354, 357, 361, 362, 363, 364, 365, 366, 368, 373, 375, 376, 377, 379, 380, 381, 383, 386, 389, 393, 394, 395, 396, 397, 398, 399, 401, 405, 406, 409, 410, 411, 412, 413, 415, 416, 421, 423, 426, 427, 429, 431, 432, 435, 436, 437, 439, 441, 442, 444, 445, 448, 449, 450, 451, 452, 454, 456, 457, 458, 478, 479, 480, 481, 483, 484, 486, 487, 489, 490, 492, 493, 495, 498, 499, 501, 502, 503], "Then": [54, 191, 502, 504], "There": [178, 318, 448, 478, 480, 487, 501, 503], "These": [20, 49, 68, 86, 87, 196, 200, 295, 318, 352, 432, 489, 492, 495, 503], "To": [102, 108, 110, 332, 384, 385, 387, 477, 481, 482, 483, 486, 487, 488, 492, 494, 499, 501, 502, 503], "WITH": 493, "With": [14, 16, 17, 19, 29, 30, 41, 174, 194, 195, 203, 204, 207, 208, 209, 210, 211, 212, 213, 214, 346, 350, 354, 429, 451, 489, 491, 502, 503], "_": [410, 483, 501, 502, 503], "__abs__": 0, "__add__": 0, "__and__": 0, "__array__": [0, 34, 335], "__array_function__": [0, 439], "__array_ufunc__": 0, "__bool__": 0, "__buffer__": 0, "__complex__": 0, "__contains__": 0, "__copy__": 0, "__deepcopy__": 0, "__divmod__": 0, "__dlpack__": 0, "__dlpack_device__": 0, "__eq__": 0, "__float__": 0, "__floordiv__": 0, "__format__": 0, "__ge__": 0, "__getitem__": 0, "__gt__": 0, "__hash__": 0, "__iadd__": 0, "__iand__": 0, "__ifloordiv__": 0, "__ilshift__": 0, "__imatmul__": 0, "__imod__": 0, "__imul__": 0, "__index__": 0, "__init__": [0, 1, 2, 4, 498], "__int__": 0, "__invert__": 0, "__ior__": 0, "__ipow__": 0, "__irshift__": 0, "__isub__": 0, "__iter__": 0, "__itruediv__": 0, "__ixor__": 0, "__le__": 0, "__len__": 0, "__lshift__": 0, "__lt__": 0, "__main__": [502, 503], "__matmul__": 0, "__mod__": 0, "__mul__": 0, "__name__": [484, 502, 503], "__ne__": 0, "__neg__": 0, "__or__": 0, "__pos__": 0, "__pow__": 0, "__radd__": 0, "__rand__": 0, "__rdivmod__": 0, "__reduce__": 0, "__reduce_ex__": 0, "__repr__": 0, "__rfloordiv__": 0, "__rmatmul__": 0, "__rmod__": 0, "__rmul__": 0, "__ror__": 0, "__rpow__": 0, "__rshift__": 0, "__rsub__": 0, "__rtruediv__": 0, "__rxor__": 0, "__setitem__": 0, "__setstate__": 0, "__sizeof__": 0, "__str__": 0, "__sub__": 0, "__truediv__": 0, "__xor__": 0, "_f": 174, "a0": 343, "a1": [35, 58, 343, 481, 483], "a100": 491, "a2": [35, 58, 481, 483], "a3": 481, "a4": 481, "a5": 481, "a_": [174, 483], "a_ax": 435, "a_cpn": 502, "a_max": 55, "a_min": 55, "a_swap": 430, "aand": 481, "aarch64": [492, 503], "ab": [15, 172, 174, 216, 481], "abandon": 477, "abil": 503, "abl": [174, 477, 502, 503], "about": [103, 295, 318, 469, 477, 482, 486, 492, 494, 496, 502, 503], "abov": [54, 75, 78, 100, 105, 110, 113, 194, 202, 208, 212, 214, 350, 376, 380, 383, 439, 440, 451, 481, 489, 490, 493, 502, 503], "abramowitz": 481, "abrupt": 484, "absolut": [0, 3, 8, 15, 97, 148, 402], "abstract": 489, "ac": [481, 484], "acceler": [143, 469, 490, 491, 502, 503], "accept": [358, 477, 495, 501], "access": [76, 77, 191, 295, 301, 318, 489, 490, 502, 503], "accomod": 483, "accord": [41, 113, 167, 168, 169, 170, 318, 438], "accordingli": [69, 192, 502], "account": [399, 406, 489, 490, 503], "acct": 503, "acct_nam": 503, "accumul": [70, 71, 205, 206, 212, 214, 350, 429, 437, 495, 502], "accur": [130, 482, 483, 490, 502], "accuraci": [103, 104, 105, 108, 110, 483, 487, 503], "achiev": [332, 365, 489, 491], "aco": [3, 8], "acosh": [3, 8], "across": [486, 489, 502, 503], "action": 493, "activ": [492, 503], "actual": [166, 318, 484, 489, 490, 496, 502, 503], "ad": [15, 332, 376, 489, 498, 502], "adapt": 493, "add": [0, 3, 8, 384, 385, 387, 449, 477, 495, 501, 502, 503, 504], "add_argu": [502, 503], "addit": [2, 68, 166, 171, 176, 332, 448, 469, 480, 483, 484, 487, 489, 490, 492, 494, 501, 502, 503], "addition": [361, 478, 495, 501, 503], "address": [431, 477, 503], "adjac": [21, 489, 503], "advanc": [469, 479, 490, 495, 500], "advantag": [502, 503], "advis": 493, "affect": [21, 143, 318, 483, 502], "afford": [490, 503], "after": [85, 114, 192, 211, 213, 323, 338, 346, 354, 409, 413, 454, 477, 480, 489, 498, 501, 502], "afterward": 502, "again": 335, "against": [6, 14, 15, 16, 17, 19, 29, 30, 41, 49, 50, 143, 174, 194, 195, 203, 204, 207, 208, 209, 210, 211, 212, 213, 214, 346, 350, 352, 354, 429, 432, 451], "aggreg": [502, 503], "agre": [477, 481, 482, 488], "ai": 503, "aim": 491, "alaska": 493, "algebra": [86, 458, 467, 478, 502], "algo_canny_edge_detector": 484, "algorithm": [1, 32, 86, 87, 98, 103, 111, 143, 410, 421, 469, 483, 484, 485, 487, 502, 503], "alia": [330, 382], "alias": 103, "align": [295, 318, 502, 503], "all": [0, 3, 8, 16, 17, 19, 41, 48, 54, 56, 64, 68, 80, 81, 85, 86, 87, 91, 92, 94, 96, 100, 101, 105, 106, 110, 113, 114, 117, 130, 136, 137, 139, 141, 158, 159, 166, 178, 190, 191, 192, 194, 196, 203, 204, 205, 206, 207, 208, 210, 212, 214, 277, 282, 294, 295, 298, 318, 329, 350, 394, 402, 409, 413, 415, 426, 429, 431, 437, 451, 454, 469, 477, 478, 480, 486, 488, 489, 493, 498, 502, 503, 504], "allclos": [0, 3, 8, 498], "allevi": 503, "alloc": [12, 13, 22, 23, 24, 25, 26, 27, 28, 44, 45, 46, 52, 53, 59, 60, 63, 65, 66, 72, 73, 82, 90, 91, 92, 94, 97, 120, 121, 122, 123, 124, 125, 126, 129, 131, 132, 140, 147, 151, 152, 153, 154, 155, 161, 162, 163, 164, 165, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 193, 197, 198, 199, 201, 277, 337, 338, 340, 348, 349, 355, 356, 403, 404, 407, 408, 417, 418, 419, 420, 424, 425, 428, 433, 434, 446, 447, 490, 500, 502, 504], "allow": [16, 17, 36, 48, 64, 83, 86, 135, 145, 179, 192, 195, 207, 209, 210, 211, 213, 277, 346, 354, 431, 435, 439, 452, 477, 484, 489, 502, 503], "alon": 503, "along": [6, 14, 16, 17, 19, 20, 29, 30, 31, 32, 41, 48, 57, 58, 67, 70, 71, 74, 76, 80, 84, 85, 98, 99, 100, 102, 103, 104, 105, 107, 108, 110, 111, 113, 114, 117, 118, 119, 130, 136, 137, 138, 139, 144, 146, 174, 178, 190, 194, 195, 196, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 273, 274, 281, 298, 304, 305, 306, 323, 326, 331, 334, 346, 350, 352, 354, 405, 409, 411, 413, 422, 423, 427, 429, 431, 432, 435, 436, 437, 441, 442, 444, 445, 448, 449, 451, 453, 454, 502, 503], "alongsid": 502, "alpha": [357, 483, 486], "alreadi": [39, 40, 195, 209, 295, 336, 343, 448, 477], "also": [21, 68, 80, 86, 100, 105, 110, 113, 143, 171, 192, 200, 295, 335, 358, 363, 369, 376, 378, 386, 389, 395, 398, 431, 448, 463, 465, 477, 480, 482, 487, 488, 489, 490, 492, 494, 495, 499, 501, 502, 503], "alter": 295, "altern": [14, 16, 17, 19, 70, 71, 194, 195, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 346, 350, 354, 362, 412, 429, 451, 469], "although": [106, 329, 489], "alwai": [54, 79, 84, 120, 138, 158, 167, 168, 169, 170, 179, 328, 426, 453, 469, 477, 490], "am": [343, 477], "amax": [0, 3, 8, 43, 207, 304], "amd": 503, "american": [211, 213, 346, 354], "amin": [0, 3, 8, 210, 306], "among": [285, 503], "amongst": 6, "amount": [490, 503], "an": [2, 6, 12, 13, 14, 16, 17, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 34, 36, 37, 38, 39, 40, 41, 42, 44, 45, 46, 47, 48, 51, 52, 53, 54, 55, 57, 58, 59, 60, 61, 62, 63, 65, 66, 68, 70, 71, 72, 73, 74, 76, 77, 79, 81, 82, 83, 86, 87, 90, 91, 92, 93, 94, 95, 96, 97, 99, 100, 102, 103, 104, 105, 108, 110, 111, 113, 114, 117, 120, 121, 122, 123, 124, 125, 126, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 140, 143, 144, 145, 147, 150, 151, 152, 153, 157, 159, 160, 161, 162, 163, 164, 165, 174, 176, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 223, 224, 266, 279, 280, 281, 285, 293, 298, 301, 310, 315, 316, 320, 321, 323, 326, 328, 329, 332, 333, 335, 336, 337, 338, 340, 342, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 358, 360, 362, 363, 365, 374, 379, 381, 396, 398, 399, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 443, 444, 446, 447, 448, 450, 451, 453, 455, 457, 465, 469, 477, 478, 480, 481, 482, 484, 486, 487, 488, 489, 490, 492, 493, 495, 496, 498, 502, 503], "analog": [104, 105], "analogu": [362, 395], "analysi": [490, 502], "angl": [0, 3, 8, 72, 73, 355, 356, 402], "ani": [0, 3, 6, 8, 12, 13, 14, 16, 17, 20, 21, 22, 23, 24, 25, 26, 27, 28, 34, 36, 37, 44, 45, 46, 48, 49, 52, 53, 54, 59, 60, 63, 64, 65, 66, 68, 70, 71, 72, 73, 74, 80, 81, 82, 86, 87, 90, 91, 92, 94, 97, 99, 100, 104, 105, 110, 113, 114, 115, 120, 121, 122, 123, 124, 125, 126, 127, 129, 130, 131, 132, 139, 140, 143, 147, 149, 150, 151, 152, 153, 156, 157, 158, 159, 161, 162, 163, 164, 165, 172, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 192, 193, 194, 197, 198, 199, 201, 203, 204, 205, 206, 207, 208, 210, 212, 214, 277, 278, 285, 286, 287, 291, 295, 296, 298, 299, 304, 306, 311, 317, 324, 327, 329, 337, 338, 340, 348, 349, 350, 355, 356, 394, 403, 404, 405, 407, 408, 415, 417, 418, 419, 420, 424, 425, 428, 429, 433, 434, 437, 446, 447, 451, 477, 480, 481, 482, 488, 489, 493, 499, 501, 502], "annot": 502, "anoth": [6, 37, 64, 295, 318, 490, 503], "anova": 363, "answer": 503, "anti": 501, "anyth": [303, 480], "ap": 481, "apach": [477, 481, 482, 488], "api": [295, 318, 382, 469, 478, 483, 484, 487, 490, 491, 494, 496, 497, 499, 500, 503], "appear": [42, 47, 93, 118, 119, 133, 134, 160, 277, 448, 477], "append": [0, 3, 8, 79, 80, 87, 146, 192, 489, 501, 503], "appli": [41, 74, 115, 202, 435, 483, 484, 495, 501, 502, 503], "applic": [481, 482, 488, 489, 496, 498, 500, 503, 504], "apply_along_axi": [3, 8], "apply_over_ax": [3, 8], "approach": [396, 477, 489, 501, 503], "appropri": [29, 30, 48, 54, 81, 203, 204, 295, 318, 380, 383, 431, 465, 477, 489, 503], "approx": 503, "approxim": [481, 483], "ar": [13, 14, 15, 16, 17, 19, 20, 21, 27, 29, 30, 33, 35, 37, 38, 39, 40, 41, 42, 44, 45, 46, 48, 49, 54, 55, 56, 57, 58, 61, 63, 64, 68, 69, 70, 71, 75, 79, 80, 81, 82, 83, 86, 87, 90, 96, 99, 100, 102, 103, 104, 105, 108, 110, 113, 116, 117, 118, 119, 120, 122, 123, 124, 125, 129, 131, 132, 135, 136, 137, 140, 143, 145, 148, 161, 162, 163, 164, 165, 166, 172, 174, 177, 178, 184, 185, 186, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 277, 280, 295, 298, 301, 309, 316, 318, 328, 329, 332, 336, 338, 339, 340, 346, 347, 349, 350, 351, 352, 354, 357, 358, 360, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 380, 381, 383, 384, 385, 386, 387, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 404, 407, 409, 410, 412, 414, 415, 427, 428, 429, 431, 435, 437, 439, 442, 445, 446, 448, 449, 450, 451, 469, 477, 478, 480, 481, 483, 484, 486, 487, 489, 492, 493, 495, 496, 498, 501, 502, 503], "ar1": 143, "ar2": 143, "arang": [0, 3, 8, 502], "arbitrari": [88, 89, 295, 320], "arbitrarili": 295, "arc": 27, "arcco": [0, 3, 8], "arccosh": [0, 3, 8], "architectur": [489, 503], "archiv": 328, "arcsin": [0, 3, 8], "arcsinh": [0, 3, 8], "arctan": [0, 3, 8], "arctan2": [0, 3, 8, 18], "arctanh": [0, 3, 8], "area": [295, 318, 489], "arg": [12, 13, 22, 23, 24, 25, 26, 27, 28, 44, 45, 46, 49, 50, 52, 53, 59, 60, 63, 65, 66, 72, 73, 82, 90, 91, 92, 94, 97, 115, 120, 121, 122, 123, 124, 125, 126, 129, 131, 132, 140, 147, 151, 152, 153, 159, 161, 162, 163, 164, 165, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 193, 197, 198, 199, 201, 301, 337, 338, 340, 348, 349, 355, 356, 403, 404, 407, 408, 417, 418, 419, 420, 424, 425, 428, 433, 434, 446, 447, 481, 502, 503], "argmax": [0, 3, 8], "argmin": [0, 3, 8, 486], "argpars": [502, 503], "argpartit": [0, 3, 8, 352, 432], "argsort": [0, 3, 8, 31, 316, 352, 414, 432], "argument": [2, 12, 13, 18, 21, 22, 23, 24, 25, 26, 27, 28, 44, 45, 46, 52, 53, 55, 58, 59, 60, 61, 63, 65, 66, 72, 73, 81, 82, 83, 87, 90, 91, 92, 94, 97, 115, 120, 121, 122, 123, 124, 125, 126, 129, 131, 132, 135, 140, 142, 145, 147, 151, 152, 153, 154, 155, 158, 161, 162, 163, 164, 165, 173, 178, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 196, 197, 198, 199, 201, 266, 277, 285, 301, 332, 335, 337, 338, 340, 348, 349, 355, 356, 379, 381, 401, 403, 404, 407, 408, 417, 418, 419, 420, 424, 425, 427, 428, 433, 434, 435, 439, 446, 447, 448, 452, 500, 502, 503], "argumentpars": [502, 503], "argwher": [0, 3, 8], "ari": [38, 39, 40, 423], "aris": [363, 493], "arithmet": [7, 54, 194, 208, 301, 467], "around": [3, 8, 351, 431, 503], "arr": [20, 51, 62, 74, 77, 95, 146, 195, 209, 295, 347, 352, 431, 432, 442, 445, 495], "arr_t": 277, "arrai": [0, 2, 6, 7, 12, 13, 14, 15, 16, 17, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 159, 160, 161, 162, 163, 164, 165, 167, 168, 169, 170, 171, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 219, 223, 224, 266, 275, 276, 277, 279, 280, 281, 284, 285, 288, 290, 291, 292, 293, 294, 295, 296, 297, 298, 300, 301, 305, 307, 308, 310, 311, 312, 313, 314, 315, 316, 318, 319, 320, 321, 323, 324, 325, 326, 327, 328, 329, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 370, 379, 380, 381, 383, 384, 385, 387, 394, 399, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 467, 469, 482, 483, 484, 486, 487, 488, 489, 490, 495, 496, 498, 502, 504], "array2str": [3, 8], "array_equ": [0, 3, 8], "array_equiv": [3, 8], "array_lik": [6, 12, 13, 14, 15, 16, 17, 18, 19, 20, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 37, 38, 39, 40, 41, 43, 44, 45, 46, 48, 49, 51, 52, 53, 55, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 77, 78, 79, 80, 81, 82, 83, 86, 87, 89, 90, 91, 92, 93, 94, 95, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 113, 114, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 128, 129, 130, 131, 132, 135, 136, 137, 140, 142, 143, 145, 146, 147, 148, 149, 151, 152, 153, 154, 155, 156, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 192, 193, 194, 195, 196, 197, 198, 199, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 298, 316, 336, 337, 338, 339, 340, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 399, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 414, 416, 417, 418, 419, 420, 421, 422, 424, 425, 426, 427, 428, 429, 430, 431, 433, 434, 435, 436, 437, 438, 439, 440, 442, 446, 447, 448, 450, 451, 452, 455, 457], "array_of_diagon": 79, "array_repr": [3, 8], "array_split": [0, 3, 8], "array_str": [3, 8], "array_typ": 41, "arraylik": [55, 137, 415, 455], "articl": 477, "asanyarrai": 3, "asarrai": [0, 3, 8, 502], "asarray_chkfinit": [3, 8], "ascend": [168, 170, 316, 414], "ascontiguousarrai": 3, "asfortranarrai": 3, "asin": [3, 8], "asinh": [3, 8], "ask": [477, 491], "asmatrix": [3, 8], "aspect": 503, "aspir": 490, "assembl": 48, "assert": [483, 486, 501], "assign": [68, 294, 295, 489, 495, 502], "assoc": 486, "associ": [41, 135, 486, 493, 496, 501], "assum": [41, 69, 87, 143, 171, 191, 478, 502], "assume_uniqu": 143, "ast": 179, "astyp": [0, 3, 8, 80, 291, 484, 490, 502, 503], "asynchron": [352, 495, 496, 502], "atan": [3, 8], "atan2": [3, 8], "atanh": [3, 8], "atleast2d": 332, "atleast_1d": [0, 3, 8, 93], "atleast_2d": [0, 3, 8, 93], "atleast_3d": [0, 3, 8, 93], "atol": [15, 148], "attempt": [41, 81, 194, 207, 208, 210, 214, 295, 336, 451, 469, 501, 503], "attribut": [4, 7, 89, 128, 285, 295, 307, 342, 457], "author": 493, "auto": [61, 469], "autom": 477, "automat": [61, 143, 173, 477, 478, 489, 492, 502, 503], "avail": [1, 2, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 216, 217, 218, 222, 223, 224, 225, 226, 228, 229, 231, 232, 233, 234, 235, 236, 237, 238, 241, 242, 243, 244, 245, 246, 247, 248, 250, 251, 252, 253, 254, 255, 256, 258, 259, 260, 262, 263, 264, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 279, 280, 281, 282, 283, 284, 289, 290, 292, 293, 294, 296, 297, 298, 301, 304, 305, 306, 309, 310, 311, 312, 313, 315, 316, 318, 321, 322, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 477, 478, 492, 501, 502, 503, 504], "averag": [0, 3, 8, 68, 194, 208, 305, 467, 488, 489, 503], "averaged_inverted_cdf": [211, 213, 346, 354], "avg": 41, "avoid": [39, 40, 277, 486, 490, 495], "awai": 502, "aweight": 68, "ax": [14, 16, 17, 19, 29, 30, 41, 48, 67, 69, 79, 80, 93, 99, 100, 101, 104, 105, 106, 109, 110, 112, 113, 117, 130, 145, 174, 176, 194, 195, 200, 203, 204, 207, 208, 209, 210, 211, 212, 213, 214, 298, 322, 332, 346, 350, 354, 409, 411, 429, 430, 435, 436, 437, 438, 451, 484, 502, 503], "axi": [14, 16, 17, 18, 19, 20, 29, 30, 31, 32, 36, 41, 57, 58, 67, 69, 70, 71, 74, 79, 80, 83, 84, 85, 93, 98, 99, 100, 102, 103, 104, 105, 107, 108, 109, 110, 111, 112, 113, 117, 118, 119, 130, 138, 139, 144, 146, 174, 178, 190, 194, 195, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 271, 272, 273, 274, 275, 276, 281, 286, 287, 298, 304, 305, 306, 310, 311, 321, 322, 323, 324, 326, 332, 334, 344, 345, 346, 350, 352, 354, 399, 405, 406, 409, 411, 413, 421, 422, 423, 426, 427, 429, 430, 431, 432, 436, 437, 448, 449, 451, 453, 454, 486, 502], "axis1": [79, 289, 325, 331, 430, 437], "axis2": [79, 289, 325, 331, 430, 437], "axisa": 69, "axisb": 69, "axisc": 69, "b": [6, 15, 35, 48, 69, 83, 85, 122, 139, 145, 148, 176, 192, 295, 343, 357, 384, 385, 387, 413, 435, 452, 454, 477, 478, 483, 502, 503], "b0": 343, "b1": 343, "b_ax": 435, "b_cpn": 502, "ba": 54, "back": [31, 54, 158, 292, 293, 345, 399, 406, 469, 481, 487, 490, 498, 502, 503], "backend": 500, "backward": [79, 98, 99, 100, 102, 103, 104, 105, 107, 108, 109, 110, 111, 112, 113, 130, 277, 399], "bad": 367, "balanc": 503, "baltimor": 174, "bar": 501, "barba": 489, "bartlett": [0, 3, 8], "base": [1, 34, 61, 86, 143, 181, 183, 185, 190, 277, 295, 318, 347, 353, 469, 477, 478, 486, 489, 490, 495, 502], "base_repr": [3, 8], "bash": 503, "bashrc": 503, "basi": [469, 481, 482, 488], "basic": [32, 421, 465, 467, 479, 489, 500, 501, 502], "batch": [98, 99, 100, 102, 103, 104, 105, 107, 108, 109, 110, 111, 112, 113, 167, 168, 169, 170, 176, 469, 502], "bayesian": 357, "bbox_to_anchor": 483, "bchoic": 54, "becaus": [21, 301, 375, 396, 481, 482, 488, 490, 495, 501, 502], "becom": [13, 27, 40, 44, 45, 46, 54, 55, 63, 82, 90, 120, 122, 123, 124, 125, 129, 131, 132, 140, 161, 162, 163, 164, 165, 184, 185, 186, 188, 189, 193, 197, 198, 201, 332, 338, 340, 349, 396, 404, 407, 428, 446, 502, 503, 504], "been": [85, 352, 383, 413, 432, 454, 490], "befor": [14, 16, 17, 19, 20, 41, 58, 61, 118, 119, 146, 194, 207, 208, 214, 295, 316, 350, 372, 409, 414, 429, 436, 451, 452, 487, 490, 492, 501, 502, 503], "begin": [178, 190, 479, 487, 503], "behav": [295, 351, 431], "behavior": [61, 81, 192, 327, 330, 352, 353, 380, 383, 436, 469, 489, 492, 500, 502, 503], "being": [21, 137, 426, 477, 490, 503], "bell": 375, "belong": [81, 136, 137, 486], "below": [68, 75, 78, 108, 174, 190, 318, 439, 440, 443, 469, 478, 481, 483, 487, 489, 498, 499, 501, 503, 504], "benchmark": [480, 490, 497, 500, 502, 503], "benefit": 502, "bernoulli": 365, "bessel": 160, "best": [87, 477, 490, 500], "beta": [0, 3, 8, 160, 362, 486], "better": [21, 54, 496, 502, 503], "between": [15, 21, 36, 80, 130, 178, 190, 211, 213, 328, 346, 354, 362, 368, 383, 396, 402, 483, 484, 486, 487, 489, 501, 502, 503], "beyond": [81, 409], "bham": 481, "bi": 136, "bia": 68, "big": [171, 344, 449, 481], "bigger": 503, "billion": 489, "bin": [43, 81, 135, 136, 137, 344, 449, 486, 492, 502, 503], "bin_area": 136, "bin_count": [136, 137], "bin_edg": 135, "bin_volum": 137, "binari": [179, 266, 328, 344, 449, 458, 467, 493], "binary_repr": [3, 8], "binaryio": 179, "binaryoptask": 490, "bincount": [0, 3, 8, 486], "binomi": [0, 3, 8, 372, 377], "bit": [1, 44, 45, 46, 147, 163, 187, 212, 323, 344, 407, 449, 467], "bit_gener": 2, "bitgener": [2, 3, 8, 361], "bitord": [344, 449], "bitwise_and": [0, 3, 8], "bitwise_count": [3, 8], "bitwise_invert": [3, 8], "bitwise_left_shift": [3, 8], "bitwise_or": [0, 3, 8], "bitwise_right_shift": [3, 8], "bitwise_xor": [0, 3, 8], "bla": 478, "black": [485, 486, 492], "black_schol": [480, 481, 492, 503], "blackman": [0, 3, 8], "block": [0, 3, 8, 85, 139, 323, 413, 454, 489, 494, 502], "block_arrai": 48, "blog": 490, "blue": [483, 486], "bmat": [3, 8], "bmatrix": 487, "bn": 343, "boilerpl": 503, "boldsymbol": 503, "bond": 503, "bool": [1, 3, 4, 8, 12, 13, 14, 15, 16, 17, 18, 19, 22, 23, 24, 25, 26, 27, 28, 29, 30, 34, 35, 36, 41, 44, 45, 46, 49, 51, 52, 53, 57, 59, 60, 63, 64, 65, 66, 68, 72, 73, 74, 81, 82, 86, 87, 90, 91, 92, 94, 97, 114, 120, 121, 122, 123, 124, 125, 126, 129, 131, 132, 135, 136, 137, 140, 143, 144, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 161, 162, 163, 164, 165, 174, 177, 178, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 193, 194, 195, 196, 197, 198, 199, 201, 202, 203, 204, 207, 208, 209, 210, 211, 212, 213, 214, 266, 277, 304, 306, 311, 318, 324, 337, 338, 340, 346, 348, 349, 350, 354, 355, 356, 403, 404, 407, 408, 415, 417, 418, 419, 420, 424, 425, 428, 429, 433, 434, 446, 447, 448, 451, 455, 465, 469, 501], "bool_": [3, 8], "boolean": [14, 19, 64, 80, 148, 153, 154, 155, 156, 159, 191, 318, 344, 353, 451, 486], "boolean_sequ": 159, "borrow": 295, "both": [13, 15, 20, 27, 41, 44, 45, 46, 61, 63, 68, 69, 82, 83, 90, 104, 120, 122, 123, 124, 125, 129, 131, 132, 140, 143, 145, 148, 161, 162, 163, 164, 165, 174, 184, 185, 186, 188, 189, 192, 193, 196, 197, 198, 201, 295, 338, 340, 349, 363, 364, 374, 375, 404, 407, 428, 435, 437, 446, 478, 487, 490, 501], "bottleneck": 503, "bound": [57, 81, 351, 431], "boundari": [70, 71, 130, 205, 206, 394, 483, 488, 489, 496], "boundsmod": [54, 400, 431], "break": [486, 487, 501, 502], "bright": 503, "broadcast": [3, 7, 8, 12, 13, 14, 16, 17, 19, 22, 23, 24, 25, 26, 27, 28, 29, 30, 41, 44, 45, 46, 48, 49, 50, 51, 52, 53, 54, 55, 59, 60, 63, 64, 65, 66, 72, 73, 82, 83, 90, 91, 92, 94, 97, 120, 121, 122, 123, 124, 125, 126, 129, 131, 132, 140, 145, 147, 151, 152, 153, 154, 155, 161, 162, 163, 164, 165, 174, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 192, 193, 194, 195, 196, 197, 198, 199, 201, 203, 204, 207, 208, 209, 210, 211, 212, 213, 214, 337, 338, 340, 346, 348, 349, 350, 352, 354, 355, 356, 377, 403, 404, 405, 407, 408, 417, 418, 419, 420, 424, 425, 428, 429, 432, 433, 434, 435, 446, 447, 451, 452, 455, 458, 469, 495, 502, 503], "broadcast_arrai": [0, 3, 8], "broadcast_shap": [0, 3, 8], "broadcast_to": [0, 3, 8, 502], "brownian": 396, "bryan": 481, "bsd": 493, "buffer": [4, 16, 17, 54, 70, 71, 195, 205, 206, 207, 209, 210, 288, 295, 301, 318], "bug": [473, 474, 475], "build": [388, 467, 479, 486, 495, 502, 503], "built": [21, 478, 482, 490, 491, 502, 503], "builtin": 329, "bundl": 492, "busday_count": [3, 8], "busday_offset": [3, 8], "busdaycalendar": [3, 8], "busi": 493, "bypass": [328, 503], "byte": [0, 3, 8, 64, 86, 179, 192, 277, 307, 323, 327, 330, 344, 490], "bytes_": [3, 8], "bytesio": 328, "byteswap": 8, "c": [34, 48, 57, 69, 174, 192, 277, 285, 295, 297, 313, 315, 318, 327, 328, 330, 383, 396, 399, 400, 406, 436, 450, 477, 478, 481, 486, 492, 493, 502, 503], "c_": 68, "c_contigu": 295, "c_cpn": 502, "ca": 295, "calcul": [7, 12, 41, 61, 69, 80, 86, 91, 92, 94, 106, 130, 143, 168, 170, 174, 178, 192, 195, 209, 211, 213, 320, 346, 350, 354, 451, 452, 478, 481, 486, 502, 503], "calculate_dist": 486, "call": [54, 81, 111, 173, 191, 195, 209, 223, 224, 285, 295, 318, 375, 431, 436, 469, 481, 482, 487, 490, 502, 503], "call_result": 481, "callabl": 191, "can": [14, 19, 20, 37, 41, 48, 64, 68, 69, 76, 79, 86, 87, 98, 99, 100, 103, 104, 105, 130, 139, 143, 150, 157, 158, 159, 171, 172, 174, 178, 192, 195, 209, 211, 212, 213, 277, 285, 292, 295, 301, 303, 318, 323, 328, 335, 346, 352, 354, 376, 402, 406, 431, 432, 435, 437, 448, 465, 469, 477, 478, 480, 481, 482, 483, 484, 487, 488, 489, 491, 492, 494, 495, 499, 501, 502, 503, 504], "can_cast": [3, 8], "cannot": [58, 179, 203, 204, 295, 328, 410, 490, 502], "canon": [481, 487, 490], "capabl": [41, 492, 503], "care": 503, "carrai": 295, "cartesian": 196, "case": [14, 19, 21, 31, 32, 34, 41, 54, 61, 69, 70, 71, 79, 80, 81, 83, 102, 130, 144, 178, 190, 191, 196, 205, 206, 211, 212, 213, 214, 301, 318, 320, 344, 345, 346, 350, 351, 352, 354, 357, 380, 383, 384, 385, 386, 387, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 406, 421, 429, 432, 435, 439, 477, 485, 495, 498, 501, 502], "cast": [12, 13, 22, 23, 24, 25, 26, 27, 28, 44, 45, 46, 52, 53, 58, 59, 60, 63, 64, 65, 66, 70, 71, 72, 73, 80, 82, 86, 90, 91, 92, 94, 97, 120, 121, 122, 123, 124, 125, 126, 129, 131, 132, 140, 145, 147, 151, 152, 153, 161, 162, 163, 164, 165, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 192, 193, 194, 195, 197, 198, 199, 201, 202, 205, 206, 208, 209, 212, 214, 277, 291, 337, 338, 340, 343, 348, 349, 350, 355, 356, 403, 404, 407, 408, 412, 417, 418, 419, 420, 424, 425, 428, 429, 433, 434, 435, 446, 447, 451, 452, 487, 502], "castingkind": [12, 13, 22, 23, 24, 25, 26, 27, 28, 44, 45, 46, 52, 53, 58, 59, 60, 63, 65, 66, 72, 73, 82, 86, 90, 91, 92, 94, 97, 120, 121, 122, 123, 124, 125, 126, 129, 131, 132, 140, 147, 151, 152, 153, 161, 162, 163, 164, 165, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 192, 193, 197, 198, 199, 201, 337, 338, 340, 348, 349, 355, 356, 403, 404, 407, 408, 417, 418, 419, 420, 424, 425, 428, 433, 434, 446, 447], "cat": 490, "cauchi": 389, "caus": [288, 489, 493, 501], "cbrt": [0, 3, 8], "cdot": [487, 503], "cdoubl": [3, 8], "ceil": [0, 3, 8, 21], "cell": 489, "center": [61, 101, 395, 483, 486, 488, 503], "centr": 375, "central": [130, 373, 374, 375], "centroid": 486, "centroid_dot": 486, "centroid_mask": 486, "certain": [191, 323, 469, 502], "certif": 479, "certifi": 477, "cfd": 491, "cg": [480, 503], "chain": 173, "challeng": [489, 503], "chanc": 477, "chang": [63, 64, 86, 178, 192, 205, 206, 277, 295, 318, 332, 347, 352, 353, 399, 406, 467, 477, 484, 487, 491, 497, 500, 501, 502, 503, 504], "channel": [85, 139, 413, 454, 489, 492], "chapter": 494, "charact": [3, 8, 498], "characterist": 375, "charg": 493, "check": [71, 81, 150, 157, 166, 205, 206, 477, 484, 486, 487, 490, 492, 501, 503], "chi": [360, 363, 373, 386], "chisquar": [0, 3, 8], "choic": [3, 8, 54, 279, 328], "choicelist": 415, "choleski": [0, 3, 8, 480, 485, 499], "cholesky_tim": 482, "choos": [0, 3, 8, 27, 61, 87, 455, 490, 503], "chosen": [135, 455], "chuang": 489, "chunk": 502, "circl": 395, "circular": 395, "circumst": 295, "claim": [396, 493], "class": [1, 2, 4, 6, 14, 16, 17, 19, 34, 96, 141, 144, 194, 207, 210, 212, 277, 335, 341, 350, 385, 387, 429, 439, 458, 502], "classic": [86, 376], "claus": [493, 501], "clean": 489, "clear": 295, "clearli": 503, "clip": [0, 3, 8, 54, 351, 431], "clipped_arrai": 55, "clongdoubl": [3, 8, 301], "close": [47, 178, 277, 383, 402, 477, 490], "closest": 328, "closest_observ": [211, 213, 346, 354], "cluster": [485, 490, 491, 500], "cmap": [484, 503], "cnd": 481, "cnd_d1": 481, "cnd_d2": 481, "co": [0, 3, 8, 483], "coastal": 489, "code": [32, 48, 196, 421, 479, 480, 489, 491, 493, 494, 497, 500, 501, 502, 504], "codebas": 499, "coeffici": [176, 410, 481], "coercion": 115, "coin": 365, "collaps": [296, 297], "collect": [79, 288, 503], "coloc": 502, "color": [480, 483, 486], "colorama": 480, "column": [8, 34, 56, 68, 96, 114, 118, 119, 138, 139, 141, 167, 168, 173, 175, 297, 323, 332, 399, 439, 441, 444, 450, 498, 502, 503], "column_stack": [0, 3, 8], "com": [477, 484, 490, 493, 495, 503, 504], "combin": [93, 100, 105, 110, 113, 130, 136, 480, 496, 503], "combinatori": 87, "come": [448, 494, 503], "comm": 489, "comm_world": 489, "comma": [86, 480], "comman": 490, "command": [480, 490, 492, 494, 498, 502, 503, 504], "comment": 477, "commit": [477, 489], "common": [13, 27, 44, 45, 46, 54, 63, 82, 86, 90, 115, 120, 122, 123, 124, 125, 129, 131, 132, 140, 161, 162, 163, 164, 165, 184, 185, 186, 188, 189, 193, 197, 198, 201, 338, 340, 349, 362, 397, 404, 407, 428, 446, 501, 502, 503], "common_typ": [3, 8], "commonli": [375, 490, 501], "commun": [477, 489, 490, 501, 503], "compact": 485, "compactli": 483, "companion": 410, "compar": [15, 16, 17, 35, 148, 207, 210, 483, 503], "comparison": [7, 458, 467], "compat": [79, 277, 329, 330, 399, 406, 439, 502, 503], "compil": [318, 478, 502], "complet": [87, 211, 213, 346, 354, 478, 489, 491, 498, 503], "complex": [18, 35, 43, 59, 60, 70, 71, 81, 83, 98, 99, 100, 103, 104, 105, 107, 108, 111, 113, 142, 145, 149, 150, 156, 157, 167, 169, 202, 205, 206, 211, 213, 282, 283, 346, 354, 401, 402, 412, 422, 452, 465, 467, 489, 502, 503], "complex128": [3, 8], "complex256": [3, 8], "complex64": [3, 8, 502], "complexflo": [3, 8], "compli": 477, "complianc": [481, 482, 488], "complic": 489, "compon": [6, 35, 48, 69, 101, 142, 202, 401, 435, 501, 502, 503], "compos": 490, "compound": 481, "compress": [0, 3, 8, 328], "compressed_arrai": 57, "compuat": 498, "comput": [16, 17, 18, 41, 44, 45, 46, 61, 70, 71, 86, 97, 98, 99, 100, 102, 103, 104, 105, 107, 108, 109, 110, 111, 112, 113, 130, 135, 136, 137, 144, 147, 167, 168, 169, 170, 172, 173, 174, 175, 176, 177, 186, 187, 188, 189, 194, 195, 205, 206, 207, 208, 209, 210, 211, 212, 213, 343, 346, 354, 410, 433, 434, 435, 451, 469, 481, 482, 483, 484, 486, 487, 489, 490, 491, 495, 496, 501, 502], "computat": 503, "computation": 171, "compute_uv": 177, "concat": [3, 8], "concaten": [0, 3, 8, 48, 85, 139, 413, 454], "concern": 503, "conclud": [477, 489], "conclus": 489, "cond": [8, 501, 503], "conda": 478, "conda_override_cuda": 492, "condit": [12, 13, 22, 23, 24, 25, 26, 27, 28, 44, 45, 46, 52, 53, 57, 59, 60, 63, 65, 66, 72, 73, 82, 90, 91, 92, 94, 95, 97, 120, 121, 122, 123, 124, 125, 126, 129, 131, 132, 140, 147, 151, 152, 153, 161, 162, 163, 164, 165, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 193, 197, 198, 199, 201, 277, 281, 337, 338, 340, 347, 348, 349, 353, 355, 356, 393, 403, 404, 407, 408, 415, 417, 418, 419, 420, 424, 425, 428, 433, 434, 446, 447, 455, 481, 482, 483, 488, 489, 493, 496, 501, 503], "condition": 501, "condlist": 415, "conduct": 503, "configur": [469, 478, 479, 490, 494, 501, 504], "configurt": 490, "conj": [0, 3, 8], "conjug": [0, 3, 8, 59, 83, 108, 145, 166, 282, 452, 482], "connect": [493, 503], "consecut": 80, "consequ": [18, 452, 490], "consequenti": 493, "conserv": 196, "consid": [15, 35, 68, 70, 86, 87, 136, 148, 168, 170, 376, 483, 487, 503], "consider": [143, 503], "consist": [14, 21, 61, 80, 178, 432, 477, 489, 502], "const": [501, 503], "constant": [130, 298], "constraint": [41, 502, 503], "construct": [7, 48, 54, 75, 117, 118, 119, 159, 279, 327, 361, 436], "constructor": [2, 465], "consum": [171, 307], "contact": 490, "contain": [2, 29, 30, 41, 43, 54, 55, 57, 64, 68, 69, 79, 80, 103, 116, 130, 135, 136, 144, 194, 195, 203, 204, 207, 208, 209, 210, 211, 213, 214, 266, 291, 315, 327, 328, 339, 346, 354, 399, 410, 412, 435, 441, 442, 444, 445, 448, 451, 465, 502, 503], "content": [43, 195, 209, 211, 213, 295, 318, 327, 328, 346, 354, 467, 502], "context": [481, 489], "contigu": [49, 51, 196, 277, 295, 297, 323, 327, 399, 406], "continu": [362, 363, 384, 385, 387, 393, 395, 481], "contour": 503, "contract": [86, 87, 478, 493], "contribut": [8, 41, 135, 479, 503], "contributor": [477, 493], "control": [58, 64, 86, 192, 277, 327, 480, 502, 504], "conveni": 328, "convent": [18, 86, 105, 192, 196], "converg": [167, 168, 169, 170, 177, 486, 487, 501, 503], "convers": [41, 64, 86, 192, 194, 207, 208, 210, 214, 277, 335, 336, 451], "convert": [14, 19, 37, 38, 39, 40, 72, 73, 146, 195, 209, 211, 213, 293, 328, 329, 332, 335, 346, 354, 355, 356, 410, 450, 483, 495, 502, 503], "convolut": [61, 484, 503], "convolv": [0, 8, 484, 503], "convolve_nd": [484, 503], "convolvemethodtyp": 61, "convolvemod": 61, "coord": 137, "coordin": [130, 136, 137, 196, 450, 486], "copi": [0, 3, 8, 20, 34, 37, 38, 39, 40, 48, 49, 57, 64, 74, 75, 79, 146, 196, 202, 223, 224, 277, 295, 296, 297, 301, 318, 327, 329, 345, 399, 406, 411, 421, 422, 440, 443, 477, 481, 482, 488, 490, 493, 500, 502, 503], "copyright": [477, 481, 482, 488, 493], "copysign": [0, 3, 8], "copyto": [0, 3, 8, 347], "core": [2, 469, 480, 481, 490, 494, 502, 503, 504], "corner": [104, 105, 503], "corpor": [481, 482, 488], "corrcoef": [3, 8], "correct": [20, 58, 427, 489, 502], "correctli": [14, 16, 17, 19, 27, 29, 30, 41, 174, 194, 195, 203, 204, 207, 208, 209, 210, 211, 212, 213, 214, 346, 350, 354, 429, 451, 502, 503], "correl": [8, 467], "correspond": [8, 54, 58, 78, 79, 99, 100, 104, 105, 108, 110, 113, 130, 137, 144, 154, 155, 159, 167, 168, 191, 203, 204, 211, 213, 316, 344, 346, 354, 409, 414, 415, 416, 483, 484, 492, 495, 501, 502, 503], "correspondingli": [423, 490], "cosh": [0, 3, 8], "cosin": [22, 23, 47, 65, 66, 133, 134], "cost": [87, 489, 502], "costli": 87, "could": [501, 502], "count": [14, 19, 41, 43, 67, 117, 130, 135, 214, 298, 350, 429, 449, 458, 467, 486, 502], "count_nonzero": [0, 3, 8], "counterclockwis": [18, 411], "cours": 491, "cov": [0, 3, 8], "covari": 68, "cover": [3, 8, 396, 477, 502], "coverag": [469, 497, 499, 500], "cp": 489, "cp_dst": 502, "cp_src": 502, "cpn": 502, "cpu": [1, 2, 3, 8, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 101, 106, 114, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 216, 217, 218, 222, 223, 224, 225, 226, 228, 229, 231, 232, 233, 234, 235, 236, 237, 238, 241, 242, 243, 244, 245, 246, 247, 248, 250, 251, 252, 253, 254, 255, 256, 258, 259, 260, 262, 263, 264, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 279, 280, 281, 282, 283, 284, 289, 290, 292, 293, 294, 296, 297, 298, 301, 304, 305, 306, 309, 310, 311, 312, 313, 315, 316, 318, 321, 322, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 478, 480, 487, 490, 491, 499, 501, 504], "cputsc": 494, "creat": [12, 13, 22, 23, 24, 25, 26, 27, 28, 34, 44, 45, 46, 52, 53, 54, 59, 60, 63, 65, 66, 72, 73, 78, 82, 87, 90, 91, 92, 94, 97, 120, 121, 122, 123, 124, 125, 126, 129, 131, 132, 140, 147, 151, 152, 153, 161, 162, 163, 164, 165, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 193, 197, 198, 199, 201, 202, 285, 291, 295, 337, 338, 340, 348, 349, 352, 355, 356, 379, 403, 404, 407, 408, 412, 417, 418, 419, 420, 424, 425, 428, 430, 433, 434, 446, 447, 477, 483, 488, 489, 492, 501, 502, 503], "create_subarrai": 489, "creation": [87, 295, 439, 458, 465, 467], "critic": [489, 503], "crop": [98, 99, 100, 102, 103, 104, 105, 107, 108, 110, 111, 113], "cross": [0, 3, 8, 159], "crucial": 503, "csingl": [3, 8], "csv": [469, 490, 498], "ct": 98, "ctx": 502, "cube": 52, "cubic": 87, "cubla": 469, "cuda": [469, 478, 480, 489, 492, 503], "cumbersom": 503, "cumprod": [0, 3, 8, 71, 205, 206, 495], "cumsum": [0, 3, 8], "cumul": [70, 71, 205, 206, 481, 503], "cumulative_prod": [3, 8], "cumulative_sum": [3, 8], "cunumer": 490, "cupi": [489, 502], "cupynumer": [0, 3, 7, 458, 463, 467, 469, 478, 480, 481, 482, 484, 486, 487, 488, 489, 492, 494, 495, 496, 498, 499, 500, 504], "cupynumeric_doctor": [469, 501], "cupynumeric_doctor_filenam": 469, "cupynumeric_doctor_format": 469, "cupynumeric_doctor_traceback": 469, "cupynumeric_fallback_stacktrac": 469, "cupynumeric_fast_math": 469, "cupynumeric_force_thunk": 469, "cupynumeric_matmul_cache_s": 469, "cupynumeric_max_eager_volum": 469, "cupynumeric_min_cpu_chunk": 469, "cupynumeric_min_gpu_chunk": 469, "cupynumeric_min_omp_chunk": 469, "cupynumeric_numpy_compat": [203, 204, 207, 210, 469], "cupynumeric_preload_cudalib": 469, "cupynumeric_report_coverag": [469, 498, 499], "cupynumeric_report_dump_callstack": [469, 498], "cupynumeric_report_dump_csv": [469, 498], "cupynumeric_root": 478, "cupynumeric_take_default": 469, "cupynumeric_warn": 469, "curand": 388, "curiou": 483, "current": [6, 31, 32, 61, 166, 175, 177, 179, 219, 295, 335, 345, 352, 405, 421, 439, 448, 469, 481, 490, 494, 495, 498, 501, 503, 504], "curv": [375, 483], "cusolv": 469, "cusolvermp": 176, "custom": [465, 478, 489, 502], "cycl": 159, "d": [2, 40, 41, 43, 56, 57, 61, 68, 70, 71, 75, 77, 78, 79, 83, 85, 96, 109, 112, 114, 118, 119, 137, 139, 143, 144, 145, 159, 173, 174, 192, 196, 205, 206, 207, 214, 284, 296, 297, 316, 332, 344, 347, 399, 406, 413, 414, 423, 429, 436, 437, 448, 449, 452, 454, 477, 478, 481, 482, 503], "d0": [379, 381], "d1": [379, 381, 481, 502], "d2": [481, 502], "d3": 502, "d_1": 503, "d_2": 503, "damag": 493, "data": [16, 17, 21, 33, 34, 37, 41, 58, 62, 64, 68, 78, 85, 86, 88, 89, 96, 98, 99, 100, 102, 103, 104, 105, 107, 108, 109, 110, 111, 112, 113, 115, 127, 128, 135, 136, 137, 139, 141, 144, 157, 167, 168, 169, 170, 176, 178, 179, 190, 191, 192, 194, 195, 202, 208, 209, 211, 212, 213, 214, 219, 266, 277, 285, 291, 295, 301, 303, 315, 318, 327, 328, 329, 332, 335, 341, 342, 346, 347, 350, 351, 352, 354, 399, 402, 406, 412, 413, 426, 429, 432, 437, 439, 440, 451, 454, 456, 457, 458, 467, 469, 486, 487, 489, 493, 496, 501, 502, 503], "data_loc": 502, "data_magnitude_squar": 486, "dataset": [135, 137, 503], "datatyp": [37, 115, 489, 500, 502], "date": 503, "datetim": [481, 482, 488], "datetime64": [3, 8], "datetime_as_str": [3, 8], "ddof": [68, 334, 451], "de": 375, "deadlock": 489, "deal": [493, 503], "dealloc": 295, "deb": 503, "debian": 493, "debug": [480, 489], "decai": 368, "decid": 469, "decim": 412, "declar": 502, "decompos": [126, 482, 489], "decomposit": [166, 177, 467, 485, 489], "decor": 502, "decreas": [81, 481, 487, 490], "decreasingli": [104, 105], "dedic": 490, "deep": [48, 224, 329, 489], "deepcopi": 224, "def": [481, 482, 484, 486, 487, 488, 489, 501, 502, 503], "default": [2, 12, 13, 14, 16, 17, 18, 19, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 34, 37, 41, 44, 45, 46, 52, 53, 54, 57, 58, 59, 60, 61, 63, 65, 66, 67, 68, 69, 70, 71, 72, 73, 75, 78, 79, 80, 81, 82, 86, 87, 88, 90, 91, 92, 94, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 117, 120, 121, 122, 123, 124, 125, 126, 127, 129, 130, 131, 132, 135, 136, 137, 140, 141, 143, 144, 147, 151, 152, 153, 161, 162, 163, 164, 165, 168, 170, 171, 174, 177, 178, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 192, 193, 194, 195, 196, 197, 198, 199, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 266, 277, 297, 298, 327, 328, 337, 338, 340, 341, 344, 345, 346, 348, 349, 350, 354, 355, 356, 357, 358, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 380, 383, 384, 385, 386, 387, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 402, 403, 404, 405, 407, 408, 409, 411, 412, 415, 417, 418, 419, 420, 421, 423, 424, 425, 428, 429, 431, 433, 434, 437, 438, 439, 440, 441, 444, 446, 447, 448, 449, 451, 453, 456, 469, 480, 484, 486, 495, 502, 503, 504], "default_rng": [0, 2, 3, 8, 486], "defer": [469, 481, 482, 488, 490, 495], "defin": [54, 69, 74, 89, 128, 135, 146, 174, 202, 211, 213, 301, 342, 346, 354, 393, 402, 411, 439, 457, 477, 478, 481, 482, 484, 486, 487, 488, 501, 502, 503], "definit": [61, 103, 105, 166, 482, 503], "deg": [18, 171], "deg2rad": [0, 3, 8, 356], "degre": [3, 8, 18, 72, 355, 356, 360, 363, 373, 374, 392, 411, 451, 503], "delai": [501, 503], "delet": [0, 3, 8], "delta": [451, 486], "demand": 489, "democrat": 503, "demonstr": [499, 502, 503], "denomin": [363, 374], "denot": 8, "dens": [144, 483, 502], "densiti": [135, 136, 137, 362, 375], "dep": 478, "depend": [43, 75, 174, 176, 178, 192, 212, 383, 415, 455, 479, 490, 501, 502, 503], "depict": 503, "deprec": [383, 469, 473, 474, 475], "depth": [48, 84, 85, 329], "deriv": [130, 370, 375, 481, 483, 484, 493, 501, 503], "derivative_exact": 483, "descend": 177, "describ": [137, 174, 318, 362, 375, 410, 483, 490, 501], "descript": [103, 105, 135, 137, 277, 480, 502], "descriptor": 335, "design": [47, 364, 391, 500, 503], "desir": [34, 51, 80, 88, 127, 194, 207, 208, 210, 214, 341, 380, 436, 451, 456, 492, 504], "despit": 330, "dest": 489, "destin": [58, 64, 200, 352, 427], "det": [3, 8], "detail": [16, 17, 70, 71, 75, 77, 98, 103, 108, 109, 111, 112, 179, 196, 205, 206, 207, 210, 212, 214, 274, 285, 323, 350, 429, 441, 442, 443, 444, 445, 448, 465, 477, 480, 489, 490, 492, 494, 501, 502, 503], "detect": [485, 492, 502], "detector": 484, "determin": [34, 61, 70, 71, 79, 115, 176, 205, 206, 212, 318, 415, 437, 450, 484, 486, 487, 489, 502, 503], "determinist": [486, 495], "develop": [478, 489, 490, 491, 493, 503], "developercertif": 477, "deviat": [370, 375, 501], "devic": [489, 502, 503], "devin": 493, "df": [360, 373, 392], "dfden": [363, 374], "dfnum": [363, 374], "dft": [98, 103, 111], "dgx": 491, "diag": [0, 3, 8, 483, 495], "diag_indic": [0, 3, 8, 77], "diag_indices_from": [0, 3, 8], "diagflat": [0, 3, 8], "diagnos": 501, "diagon": [0, 3, 8, 75, 76, 77, 78, 96, 114, 141, 166, 168, 170, 331, 437, 439, 440, 441, 442, 443, 444, 445, 483], "diagram": [478, 503], "dictionari": 295, "did": 487, "diff": [0, 3, 8], "differ": [1, 15, 29, 30, 36, 37, 70, 71, 80, 98, 103, 106, 108, 109, 111, 112, 118, 119, 120, 130, 146, 174, 192, 196, 205, 206, 219, 291, 328, 352, 353, 368, 411, 432, 452, 467, 477, 478, 480, 485, 487, 488, 489, 496, 500, 501, 502, 503], "differenc": 80, "differenti": [486, 503], "difficult": [489, 503], "diffus": 503, "digit": [0, 3, 8], "dim": [295, 400], "dimens": [6, 14, 16, 17, 19, 29, 30, 34, 38, 39, 40, 41, 48, 54, 56, 57, 58, 61, 64, 69, 76, 79, 80, 84, 85, 93, 114, 130, 136, 137, 138, 139, 144, 145, 154, 155, 159, 167, 168, 169, 170, 174, 175, 177, 192, 194, 195, 196, 203, 204, 207, 208, 209, 210, 211, 212, 213, 214, 295, 296, 297, 308, 319, 320, 323, 332, 336, 339, 344, 346, 350, 352, 354, 379, 381, 406, 409, 411, 413, 416, 423, 426, 427, 429, 432, 435, 436, 437, 438, 441, 442, 444, 445, 448, 449, 450, 451, 453, 454, 467, 485, 486, 489, 495, 502], "dimension": [7, 38, 43, 48, 61, 68, 74, 77, 78, 81, 86, 98, 99, 100, 103, 104, 105, 108, 110, 111, 112, 113, 114, 130, 136, 137, 171, 196, 295, 336, 343, 426, 436, 458, 484, 486, 488, 495, 501, 502, 503], "dimenson": 196, "direct": [61, 80, 98, 99, 100, 102, 103, 104, 105, 107, 108, 109, 110, 111, 112, 113, 118, 119, 295, 411, 484, 493, 503], "directli": [61, 80, 328, 393, 477, 492, 494, 498, 502], "directori": [478, 503], "dirichlet": [3, 8, 357], "disabl": [86, 431, 503], "disclaim": 493, "discontinu": [211, 213, 346, 354], "discourag": 496, "discret": [61, 80, 98, 99, 100, 103, 104, 105, 108, 110, 111, 113, 380, 383, 398, 458, 467, 483, 502], "discuss": [477, 490], "dispers": 395, "displai": [480, 490, 503], "distanc": [21, 130, 396, 486], "distance_sum": 486, "distribu": 503, "distribut": [2, 288, 357, 358, 360, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 383, 384, 385, 386, 387, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 451, 467, 469, 477, 481, 482, 488, 489, 490, 491, 493, 494, 495, 502, 503], "disturb": 375, "dive": 489, "divid": [3, 8, 36, 85, 139, 413, 423, 454, 486, 489], "divis": [82, 122, 125, 198, 404, 423, 446], "divisor": [129, 451], "divmod": [3, 8, 225], "dn": [379, 381], "do": [61, 81, 191, 195, 209, 301, 328, 478, 486, 493, 494, 495, 496, 501, 503, 504], "doc": [12, 13, 22, 23, 24, 25, 26, 27, 28, 44, 45, 46, 52, 53, 55, 59, 60, 63, 65, 66, 72, 73, 82, 90, 91, 92, 94, 97, 120, 121, 122, 123, 124, 125, 126, 129, 131, 132, 140, 147, 151, 152, 153, 161, 162, 163, 164, 165, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 193, 197, 198, 199, 201, 337, 338, 340, 348, 349, 355, 356, 403, 404, 407, 408, 417, 418, 419, 420, 424, 425, 428, 433, 434, 446, 447, 484, 490, 492, 504], "docstr": 501, "doctor": [458, 501], "doctor_filenam": 458, "doctor_format": 458, "doctorformat": 469, "document": [36, 75, 84, 138, 271, 272, 273, 274, 275, 276, 279, 280, 281, 282, 283, 289, 290, 304, 305, 306, 309, 310, 311, 312, 313, 315, 321, 322, 324, 325, 326, 331, 333, 334, 443, 453, 477, 490, 492, 493, 494, 501, 502, 503], "doe": [14, 16, 17, 19, 21, 36, 69, 74, 81, 114, 146, 167, 168, 169, 170, 175, 177, 179, 194, 202, 205, 206, 207, 210, 212, 277, 295, 301, 307, 332, 335, 350, 361, 423, 429, 431, 452, 477, 484, 495, 498, 501, 502, 503], "doesn": [81, 117, 118, 119, 351, 495, 501], "dollar": 503, "domain": [42, 478, 483, 489], "don": [295, 480, 486, 501, 502, 503], "done": [64, 86, 168, 170, 192, 277, 298, 318, 344, 449, 501], "dot": [0, 3, 8, 173, 192, 435, 452, 482, 486, 487, 498, 503], "dot_product": 503, "doubl": [3, 8, 41, 368, 489], "down": [119, 501, 502, 503], "download": [478, 492, 503], "dr": 489, "draft": 477, "draw": [357, 358, 360, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 386, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398], "drawn": [2, 357, 358, 360, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 380, 383, 384, 385, 386, 387, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 415], "driver": [480, 494, 503], "drop": [482, 490, 491, 503], "dry": 480, "dsplit": [0, 3, 8, 85], "dst": [64, 502], "dstack": [0, 3, 8], "dt": [357, 481], "dtype": [3, 4, 8, 12, 13, 14, 16, 17, 18, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 34, 35, 37, 41, 44, 45, 46, 52, 53, 54, 58, 59, 60, 63, 65, 66, 68, 70, 71, 72, 73, 80, 81, 82, 83, 86, 88, 89, 90, 91, 92, 94, 96, 97, 115, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 131, 132, 140, 141, 144, 145, 147, 151, 152, 153, 161, 162, 163, 164, 165, 167, 169, 173, 178, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 192, 193, 194, 197, 198, 199, 201, 202, 203, 204, 205, 206, 207, 208, 212, 214, 219, 266, 277, 286, 287, 299, 305, 311, 317, 323, 324, 331, 334, 335, 337, 338, 340, 341, 342, 343, 345, 348, 349, 350, 355, 356, 380, 385, 387, 403, 404, 407, 408, 417, 418, 419, 420, 421, 424, 425, 428, 429, 431, 433, 434, 435, 437, 439, 446, 447, 451, 452, 456, 457, 482, 486, 499, 502], "dtypelik": [4, 58, 96, 127, 128, 141, 144, 178, 190, 317, 335, 341, 342, 385, 387, 439, 457], "due": [394, 495, 502], "dump": [0, 8, 469], "dump_data": 496, "duplic": [352, 495, 503], "dure": [469, 478, 490, 502, 503], "dx": 130, "dy": 130, "dynam": 489, "dz": 130, "e": [14, 19, 43, 54, 79, 81, 83, 99, 102, 103, 104, 105, 108, 110, 130, 144, 145, 176, 192, 320, 328, 335, 357, 358, 360, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 380, 383, 384, 385, 386, 387, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 435, 437, 452, 469, 477, 478, 481, 495, 499, 501, 502, 503, 504], "each": [2, 38, 39, 40, 41, 43, 49, 50, 54, 57, 68, 76, 81, 87, 99, 100, 104, 105, 110, 113, 118, 119, 130, 135, 136, 137, 143, 159, 167, 168, 169, 170, 171, 200, 202, 323, 328, 339, 352, 353, 358, 360, 367, 372, 375, 405, 409, 427, 432, 436, 441, 442, 444, 445, 448, 449, 450, 478, 483, 484, 486, 487, 489, 490, 501, 502, 503], "eager": [469, 480, 490, 503], "eagerli": 487, "earli": 503, "earlier": [486, 502], "eas": [382, 503], "easi": [477, 503], "easier": [285, 431, 503], "easiest": [477, 478], "east": [488, 503], "economist": 503, "ed": [362, 375, 484], "edg": [55, 81, 135, 136, 137, 485], "edge_ord": 130, "edgecolor": 486, "ediff1d": [3, 8], "edit": [478, 503], "effect": [87, 196, 332, 388, 449, 488, 503], "effici": [98, 111, 481, 489, 502, 503], "effort": [477, 489], "effortlessli": 489, "eig": [0, 3, 8], "eigenvalu": [167, 168, 169, 170, 410], "eigenvector": [167, 168], "eigh": [0, 3, 8], "eight": [174, 449], "eigval": [0, 3, 8], "eigvalsh": [0, 3, 8], "einstein": 86, "einsum": [0, 8, 87, 480], "einsum_path": [0, 3, 8, 86], "either": [35, 41, 61, 69, 83, 130, 174, 192, 212, 219, 316, 414, 449, 481, 482, 483, 488, 490, 502, 503], "elaps": [480, 481, 482, 488, 492, 496, 502, 503], "elapsed_millisec": 496, "elapsed_tim": 503, "element": [12, 13, 14, 15, 16, 17, 19, 21, 22, 23, 24, 25, 26, 27, 28, 33, 35, 41, 43, 44, 45, 46, 48, 49, 51, 52, 53, 54, 55, 59, 60, 61, 63, 64, 65, 66, 68, 70, 71, 74, 79, 80, 82, 90, 91, 94, 95, 96, 97, 99, 104, 110, 113, 116, 117, 118, 119, 120, 121, 123, 124, 125, 126, 131, 132, 135, 141, 142, 143, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 158, 162, 164, 165, 166, 172, 180, 181, 182, 186, 187, 188, 189, 190, 192, 193, 194, 195, 196, 197, 198, 199, 201, 205, 206, 207, 208, 209, 210, 212, 214, 266, 271, 272, 277, 282, 283, 291, 294, 295, 297, 298, 301, 303, 305, 307, 309, 311, 312, 316, 320, 323, 324, 326, 329, 333, 334, 337, 338, 339, 340, 344, 347, 348, 349, 350, 351, 353, 399, 401, 402, 403, 404, 405, 406, 408, 409, 411, 414, 415, 416, 417, 418, 419, 420, 424, 425, 428, 429, 431, 433, 434, 435, 437, 440, 443, 446, 447, 448, 449, 450, 451, 455, 465, 467, 483, 486, 502, 503], "elementwis": 467, "elimin": [489, 502], "els": [487, 501, 502, 503], "elsewher": [12, 13, 22, 23, 24, 25, 26, 27, 28, 44, 45, 46, 52, 53, 59, 60, 63, 65, 66, 72, 73, 82, 90, 91, 92, 94, 96, 97, 120, 121, 122, 123, 124, 125, 126, 129, 131, 132, 140, 147, 151, 152, 153, 161, 162, 163, 164, 165, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 193, 197, 198, 199, 201, 337, 338, 340, 348, 349, 355, 356, 362, 403, 404, 407, 408, 417, 418, 419, 420, 424, 425, 428, 433, 434, 439, 446, 447, 455], "email": 477, "emerg": 503, "emit": 469, "emphas": 502, "emphasi": 502, "emploi": 477, "empti": [0, 3, 8, 16, 17, 42, 47, 48, 133, 134, 160, 203, 204, 205, 206, 207, 210, 212, 214, 328, 347, 423, 502], "empty_lik": [0, 3, 8], "en": [362, 477], "enabl": [469, 478, 480, 489, 490, 501, 502, 503], "encapsul": 6, "encount": [205, 206, 207, 210, 415, 477, 490, 501, 503], "encumbr": 477, "end": [20, 21, 42, 79, 81, 87, 178, 190, 344, 449, 477, 483, 487, 488, 496, 502, 503], "end_tim": 503, "endian": 328, "endors": 493, "endpoint": [178, 190, 483], "energi": 503, "enhanc": [477, 489, 503], "enough": [171, 478, 496, 501], "ensur": [439, 477, 489, 496, 501, 502, 503], "enter": 480, "entir": [288, 449, 503], "entri": [57, 74, 88, 95, 114, 117, 118, 119, 137, 295, 298, 328, 351, 352, 423, 426], "entropi": [1, 361], "env": [469, 478], "environ": [203, 204, 207, 210, 469, 478, 489, 490, 492, 494, 498, 501, 502, 503], "ep": 402, "epsilon": 402, "epyc": 503, "eq": 481, "eqn": 483, "eqnarrai": 503, "equal": [0, 3, 8, 12, 13, 15, 22, 23, 24, 25, 26, 27, 28, 35, 36, 41, 42, 43, 44, 45, 46, 48, 52, 53, 59, 60, 63, 65, 66, 69, 72, 73, 79, 82, 84, 91, 92, 94, 96, 97, 120, 121, 122, 123, 124, 125, 126, 129, 130, 131, 132, 135, 136, 137, 140, 147, 148, 150, 151, 152, 153, 157, 161, 162, 163, 164, 165, 178, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 193, 197, 198, 199, 201, 320, 337, 338, 340, 348, 349, 355, 356, 358, 364, 367, 372, 386, 394, 396, 402, 403, 404, 407, 408, 417, 418, 419, 420, 423, 424, 425, 428, 433, 434, 439, 441, 444, 446, 447], "equal_nan": [15, 35, 148], "equat": [15, 148, 176, 394, 467, 483, 487, 489, 503], "equiv": [58, 64, 86, 192, 277], "equival": [21, 41, 57, 81, 83, 84, 85, 87, 116, 122, 137, 138, 139, 143, 148, 159, 223, 271, 272, 273, 274, 275, 276, 279, 280, 281, 282, 283, 289, 290, 304, 305, 306, 309, 310, 311, 312, 313, 315, 319, 321, 322, 324, 325, 326, 328, 331, 332, 333, 334, 335, 336, 413, 431, 453, 454, 501], "erf": 481, "error": [195, 209, 351, 423, 426, 431, 483, 486, 489, 495, 502, 503], "errstat": [3, 8], "especi": 501, "essenti": [501, 503], "estim": [61, 68, 211, 213, 346, 354, 503], "etc": [34, 99, 100, 104, 105, 110, 113, 285, 295, 469, 489, 495, 501, 504], "european": 481, "evalu": [14, 19, 57, 86, 87, 150, 157, 173, 196, 271, 272, 415, 495, 501, 502], "even": [68, 101, 103, 106, 111, 150, 157, 167, 169, 295, 410, 477, 480, 493, 502], "evenli": [21, 178, 190, 412], "event": [377, 493], "everi": [61, 110, 477, 481, 486, 501, 502], "every_nit": 501, "everyon": 477, "evid": 503, "evolv": 477, "exact": [83, 145, 176, 435, 452, 483], "exactli": [330, 477, 482, 487, 498, 503], "examin": 68, "exampl": [40, 55, 70, 71, 80, 81, 205, 206, 323, 332, 365, 375, 423, 427, 477, 478, 480, 483, 484, 486, 487, 489, 490, 491, 492, 494, 496, 499, 500, 501, 504], "exce": [423, 449, 469], "exceed": 489, "except": [14, 16, 17, 19, 21, 34, 42, 54, 58, 80, 83, 96, 110, 139, 194, 207, 210, 212, 295, 301, 318, 350, 399, 405, 429, 432, 435, 481, 482, 488, 493], "exchang": 489, "exclud": [20, 21, 178, 394, 496], "exclus": [380, 502], "execut": [469, 478, 480, 481, 482, 487, 488, 496, 498, 499, 500, 501, 503], "exemplari": 493, "exercis": [477, 503], "exhibit": 327, "exist": [58, 93, 179, 467, 478, 492, 499, 503], "exit": 480, "exp": [0, 3, 8, 94, 171, 362, 481], "exp2": [0, 3, 8], "exp_rt": 481, "expand": [80, 93], "expand_dim": [0, 3, 8], "expans": 481, "expect": [14, 16, 17, 19, 70, 71, 108, 145, 191, 194, 195, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 343, 346, 350, 354, 377, 412, 429, 435, 451, 452, 477, 490], "expens": 328, "experi": [365, 503], "expertis": 489, "expir": [481, 503], "explain": [100, 105, 110, 113], "explan": [71, 205, 206, 323, 477], "explicit": [86, 171, 489, 501, 503], "explicitli": [135, 136, 137, 144, 179, 477, 483, 490, 503], "explor": 87, "expm1": [0, 3, 8], "expon": [126, 172, 378, 467], "exponenti": [0, 3, 8, 87, 91, 171, 184, 185, 368, 390], "exponential_distribut": 362, "expos": [2, 34, 295, 318], "expr": [86, 87], "express": [86, 87, 196, 481, 482, 483, 488, 493, 495, 502], "extend": [483, 489, 495, 500], "extra": [502, 503], "extract": [0, 3, 8, 57, 75, 347, 431], "extrema": 467, "ey": [0, 3, 8, 482, 499], "f": [0, 3, 8, 34, 118, 130, 174, 211, 213, 277, 295, 297, 327, 346, 354, 357, 362, 365, 374, 399, 406, 450, 481, 482, 483, 487, 488, 502, 503], "f_": [483, 487], "f_contigu": 295, "f_interior": 483, "fa": 295, "fab": [0, 3, 8], "facilit": 499, "factor": [98, 99, 100, 102, 103, 104, 105, 107, 108, 109, 110, 111, 112, 113, 166, 175, 482, 503], "fail": [166, 175, 490, 501], "failur": [365, 372, 480], "fall": [31, 81, 136, 137, 158, 345, 469, 481, 487, 490, 498, 502], "fallback": 495, "fallback_stacktrac": 458, "fals": [1, 12, 13, 14, 15, 16, 17, 18, 19, 22, 23, 24, 25, 26, 27, 28, 29, 30, 34, 35, 36, 41, 44, 45, 46, 49, 51, 52, 53, 57, 59, 60, 63, 65, 66, 68, 72, 73, 80, 81, 82, 86, 87, 90, 91, 92, 94, 97, 114, 120, 121, 122, 123, 124, 125, 126, 129, 131, 132, 135, 136, 137, 140, 143, 144, 147, 148, 151, 152, 153, 154, 155, 157, 158, 161, 162, 163, 164, 165, 174, 177, 178, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 193, 194, 195, 196, 197, 198, 199, 201, 202, 203, 204, 207, 208, 209, 210, 211, 212, 213, 214, 271, 272, 277, 295, 304, 305, 306, 311, 324, 334, 337, 338, 340, 346, 348, 349, 350, 354, 355, 356, 403, 404, 407, 408, 415, 417, 418, 419, 420, 424, 425, 428, 429, 433, 434, 446, 447, 448, 451, 469, 483, 487], "familiar": [491, 502, 503], "fan": [211, 213, 346, 354], "fanci": 431, "farrai": 295, "fashion": 86, "fast": [98, 99, 100, 104, 105, 110, 111, 113, 500], "fast_math": 458, "faster": [61, 81, 503], "fastest": [173, 399, 406], "fatter": 368, "fbmem": [480, 503], "featur": [477, 480, 503], "feedback": 477, "feel": 477, "fenc": 502, "fetch": 501, "few": [496, 501], "fewer": 490, "fft": [0, 3, 8, 61, 458, 467, 502], "fft2": [0, 3, 8, 104], "fft2d_batched_gpu": 502, "fftfreq": [3, 8], "fftn": [0, 3, 8, 98, 105, 502], "fftshift": [0, 3, 8, 106], "fid": 328, "fidel": 489, "field": [196, 301, 449], "fig": [484, 503], "figsiz": [484, 503], "file": [179, 292, 323, 328, 467, 469, 477, 478, 480, 481, 482, 488, 493, 498, 503], "filenam": [328, 469], "fileno": 328, "fill": [0, 2, 8, 114, 127, 128, 196, 202, 341, 376, 381, 439, 456, 502], "fill_diagon": [0, 3, 8], "fill_valu": [127, 128], "final": [110, 113, 143, 190, 489, 491, 502, 503], "find": [33, 316, 333, 414, 448, 467, 486, 487, 490, 492, 501, 503], "find_centroid": 486, "find_cupynumeric_cpp": 478, "finfo": [3, 8, 402], "finish": [480, 481, 482, 488, 502], "finit": [148, 151, 202, 485], "first": [14, 19, 41, 42, 47, 49, 54, 56, 58, 61, 64, 69, 79, 80, 83, 85, 87, 104, 105, 117, 120, 130, 135, 136, 139, 146, 173, 192, 195, 196, 209, 211, 213, 214, 298, 316, 328, 343, 346, 347, 349, 350, 351, 354, 375, 396, 399, 406, 409, 411, 413, 414, 415, 422, 427, 429, 430, 432, 435, 437, 448, 452, 453, 454, 477, 478, 483, 488, 501, 502, 503], "first_cond": 501, "fisher": [363, 374, 503], "fit": [405, 493], "five": 490, "fix": [3, 8, 303, 320, 377, 473, 474, 475, 481, 502], "flag": [171, 318, 469, 478, 502], "flat": [297, 301, 313, 353, 405, 450, 495], "flatit": [3, 8, 296], "flatnonzero": [0, 3, 8], "flatten": [0, 3, 8, 16, 17, 20, 29, 30, 31, 32, 57, 58, 67, 70, 71, 74, 78, 114, 116, 135, 146, 194, 195, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 296, 313, 343, 344, 345, 346, 351, 352, 354, 399, 405, 409, 421, 431, 432, 448, 449, 450, 451, 452], "flexibl": [3, 8, 86, 303], "flip": [0, 3, 8, 118, 119, 365, 411, 495, 501], "fliplr": [0, 3, 8, 411], "flipud": [0, 3, 8, 411], "float": [14, 15, 16, 17, 19, 21, 43, 55, 70, 71, 83, 86, 88, 120, 128, 135, 137, 141, 142, 148, 160, 172, 174, 178, 192, 194, 195, 202, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 227, 304, 306, 311, 324, 338, 346, 350, 354, 357, 358, 360, 362, 363, 364, 365, 366, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 381, 382, 384, 385, 386, 387, 390, 391, 392, 393, 394, 395, 396, 397, 398, 401, 402, 412, 414, 429, 435, 439, 451, 456, 465, 467, 469, 495, 502], "float128": [3, 8, 495], "float16": [3, 8, 120], "float32": [3, 8, 64, 70, 86, 120, 192, 277, 335, 499, 502], "float64": [3, 4, 8, 18, 41, 64, 68, 86, 88, 96, 120, 192, 194, 195, 208, 209, 211, 213, 277, 341, 346, 354, 385, 387, 451, 456, 482, 495], "float_pow": [0, 3, 8], "flood": 489, "floor": [0, 3, 8], "floor_divid": [0, 3, 8], "flop": 482, "flow": 489, "fluid": 489, "fmax": [3, 8, 207], "fmin": [3, 8], "fmod": [0, 3, 8], "fnc": 295, "focu": [489, 502, 503], "follow": [15, 18, 34, 41, 54, 61, 81, 108, 115, 148, 168, 170, 174, 192, 196, 211, 213, 266, 346, 354, 469, 478, 483, 484, 486, 487, 489, 490, 492, 493, 494, 501, 502, 503], "foo_in_out": 502, "forc": [34, 86, 192, 277, 295, 469, 492], "force_thunk": 458, "forcebuild": 1, "foremost": 503, "forg": [478, 492, 503], "fork": 477, "form": [37, 47, 56, 68, 79, 85, 86, 108, 133, 134, 139, 159, 160, 413, 454, 483, 493, 501, 503], "format": [328, 469, 479, 490, 502, 503], "format_float_posit": [3, 8], "format_float_scientif": [3, 8], "former": [352, 432], "formula": [481, 503], "forset": 319, "fortran": [34, 277, 295, 297, 327, 399, 406, 450, 478], "fortun": 477, "forum": 490, "forumula": 503, "forward": [98, 99, 100, 102, 103, 104, 105, 107, 108, 109, 110, 111, 112, 113, 130, 382], "found": [43, 316, 323, 414, 489, 503], "foundat": [477, 490], "four": [318, 480, 503], "fourier": [61, 98, 99, 100, 103, 104, 105, 108, 110, 111, 113, 458, 467, 500], "frac": [357, 362, 481, 487], "frac12": 481, "fraction": 199, "frame": [477, 498], "framebuff": [480, 490, 503], "framework": [477, 491], "free": [477, 481, 489, 490, 493, 503], "freed": 489, "freedom": [360, 363, 373, 374, 392, 451], "frequenc": [42, 68, 101, 103, 104, 105, 108, 398, 501, 502], "frequent": 491, "fresh": [1, 361], "freshli": [12, 13, 22, 23, 24, 25, 26, 27, 28, 44, 45, 46, 52, 53, 59, 60, 63, 65, 66, 72, 73, 82, 90, 91, 92, 94, 97, 120, 121, 122, 123, 124, 125, 126, 129, 131, 132, 140, 147, 151, 152, 153, 154, 155, 161, 162, 163, 164, 165, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 193, 197, 198, 199, 201, 337, 338, 340, 348, 349, 355, 356, 403, 404, 407, 408, 417, 418, 419, 420, 424, 425, 428, 433, 434, 446, 447], "frexp": [0, 3, 8], "fro": 174, "frobeniu": 174, "frohn": 493, "from": [1, 2, 14, 18, 19, 21, 29, 30, 37, 41, 48, 54, 57, 61, 64, 70, 71, 72, 73, 79, 95, 103, 113, 115, 117, 118, 119, 120, 130, 145, 146, 159, 175, 178, 179, 190, 192, 196, 205, 206, 214, 219, 278, 279, 295, 298, 322, 326, 343, 349, 350, 353, 355, 356, 357, 358, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 383, 384, 385, 386, 387, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 402, 406, 411, 415, 426, 429, 431, 432, 435, 437, 448, 449, 452, 455, 467, 477, 479, 481, 482, 483, 484, 486, 487, 488, 489, 491, 493, 494, 495, 496, 501, 502, 503], "frombuff": 3, "fromfil": [3, 328], "fromfunct": [3, 8], "fromit": 3, "frompyfunc": 3, "fromregex": [3, 8], "fromstr": 3, "front": [144, 469], "fulfil": [393, 469], "full": [0, 3, 8, 61, 77, 128, 176, 271, 272, 273, 275, 276, 279, 280, 281, 282, 283, 289, 290, 304, 305, 306, 309, 310, 311, 312, 313, 315, 318, 321, 322, 324, 325, 326, 331, 333, 334, 344, 442, 445, 469, 477, 480, 489, 494, 498, 502, 503], "full_lik": [0, 3, 8], "full_matric": 177, "fulli": [195, 196, 209], "func": 481, "function": [2, 8, 18, 21, 36, 64, 75, 85, 98, 99, 100, 101, 103, 104, 105, 106, 108, 110, 111, 113, 114, 120, 122, 130, 135, 136, 137, 139, 143, 158, 159, 160, 173, 174, 191, 196, 211, 213, 271, 272, 273, 274, 275, 276, 279, 280, 281, 282, 283, 289, 290, 295, 301, 304, 305, 306, 309, 310, 311, 312, 313, 315, 318, 319, 321, 322, 324, 325, 326, 328, 329, 331, 332, 333, 334, 346, 352, 354, 357, 361, 362, 365, 375, 378, 383, 388, 410, 413, 431, 432, 436, 452, 454, 458, 465, 467, 481, 482, 483, 487, 488, 489, 490, 495, 498, 499, 503], "function_nam": 498, "function_valu": 483, "fundament": [502, 503], "funtion": 499, "furnish": 493, "further": [86, 211, 213, 320, 346, 354, 443, 477, 489, 502], "furthermor": [49, 51, 196], "futur": 481, "fweight": 68, "g": [14, 19, 83, 85, 139, 145, 174, 192, 328, 335, 357, 358, 360, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 380, 383, 384, 385, 386, 387, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 413, 435, 452, 454, 477, 478, 488, 495, 499, 501, 502, 503, 504], "gamma": [0, 3, 8, 357, 391], "gasnet": [500, 503], "gather": 503, "gauss": 375, "gaussian": [368, 375, 381, 396], "gb": 503, "gcd": [0, 3, 8], "gemm": 486, "gener": [1, 3, 8, 21, 41, 42, 85, 103, 139, 178, 190, 295, 361, 373, 376, 381, 386, 388, 394, 413, 454, 467, 478, 483, 486, 488, 490, 495, 496, 498, 500, 502, 503], "genfromtxt": [3, 8], "geometr": [0, 3, 8, 362], "geomspac": [3, 8], "get": [102, 108, 110, 114, 178, 190, 284, 323, 392, 478, 480, 481, 482, 483, 486, 487, 488, 490, 501, 502], "get_bit_gener": [3, 8], "get_includ": [3, 8], "get_legate_runtim": [494, 502], "get_machin": 494, "get_printopt": [3, 8], "get_rank": 489, "get_siz": 489, "get_stat": [3, 8], "get_variant_kind": 502, "getbufs": [3, 8], "getdevicecount": 489, "geterr": [3, 8], "geterrcal": [3, 8], "getfield": [0, 8], "getter": 319, "git": 477, "github": [477, 489, 503], "give": [43, 78, 86, 137, 192, 196, 332, 353, 406, 416, 448, 477, 490, 502], "given": [14, 15, 16, 17, 19, 20, 21, 31, 34, 35, 41, 48, 51, 54, 55, 56, 57, 62, 67, 68, 70, 71, 79, 80, 83, 85, 87, 88, 89, 98, 99, 100, 102, 103, 104, 105, 107, 108, 110, 111, 113, 114, 117, 127, 128, 130, 135, 137, 139, 140, 145, 146, 148, 174, 178, 190, 191, 192, 195, 196, 205, 206, 209, 210, 211, 212, 213, 214, 219, 273, 274, 277, 280, 281, 295, 298, 304, 305, 306, 311, 312, 316, 324, 332, 334, 341, 342, 343, 346, 350, 351, 354, 357, 358, 360, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 383, 384, 385, 386, 387, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 405, 409, 410, 411, 412, 413, 414, 423, 429, 431, 435, 436, 437, 438, 439, 448, 452, 454, 456, 457, 477, 489, 501, 502, 503], "global": [361, 489, 502], "gmail": 493, "gninja": 478, "gnx": 489, "gny": 489, "go": [432, 503], "goal": 503, "golub": 174, "good": [191, 328, 367, 491, 493], "gop": 482, "govern": [481, 482, 488, 503], "gpu": [1, 2, 3, 8, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 216, 217, 218, 222, 223, 224, 225, 226, 228, 229, 231, 232, 233, 234, 235, 236, 237, 238, 241, 242, 243, 244, 245, 246, 247, 248, 250, 251, 252, 253, 254, 255, 256, 258, 259, 260, 262, 263, 264, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 279, 280, 281, 282, 283, 284, 289, 290, 293, 294, 297, 298, 301, 304, 305, 306, 309, 310, 311, 312, 313, 315, 316, 318, 321, 322, 324, 325, 326, 327, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 480, 487, 489, 491, 494, 501, 504], "grad_i": [484, 503], "grad_x": [484, 503], "gradient": [0, 3, 8, 484], "grai": [484, 486, 503], "grant": 493, "granular": [490, 496], "grasmair": 487, "grate": 477, "grayscal": [484, 503], "greater": [0, 3, 8, 21, 54, 84, 363, 376, 394, 398, 426], "greater_equ": [0, 3, 8], "greatest": [48, 129], "greedi": [86, 87], "green": [483, 486], "grep": 490, "grid": [144, 196, 483, 488, 489, 503], "group": [33, 478, 503], "gt": 483, "guarante": [351, 406], "guess": 487, "guid": [323, 491, 502], "guidelin": 500, "gumbel": [0, 3, 8], "gzipfil": 328, "h": [166, 174, 211, 213, 346, 354, 483, 489, 501, 503], "h5py": 501, "ha": [6, 29, 30, 31, 32, 57, 68, 70, 71, 79, 81, 102, 107, 130, 142, 149, 150, 156, 157, 203, 204, 205, 206, 212, 214, 285, 295, 332, 344, 350, 353, 357, 368, 376, 383, 395, 401, 402, 405, 415, 427, 429, 431, 436, 437, 450, 469, 477, 481, 482, 486, 487, 489, 490, 493, 502, 503], "had": [352, 432, 504], "hadamard": 87, "half": [3, 8, 21, 101, 104, 105, 178, 380, 382, 384, 385, 387, 394], "halo": 489, "ham": [0, 3, 8], "han": [0, 3, 8], "hand": 483, "handl": [448, 452, 467, 469, 489, 495, 498, 502, 503], "happen": [41, 477, 495], "har": 503, "hardwar": [295, 318, 500, 502, 504], "have": [12, 13, 14, 19, 22, 23, 24, 25, 26, 27, 28, 33, 34, 35, 39, 40, 41, 44, 45, 46, 47, 52, 53, 54, 56, 58, 59, 60, 63, 65, 66, 68, 69, 70, 71, 72, 73, 82, 83, 85, 86, 90, 91, 92, 94, 97, 104, 105, 113, 120, 121, 122, 123, 124, 125, 126, 129, 131, 132, 139, 140, 145, 147, 151, 152, 153, 154, 155, 161, 162, 163, 164, 165, 173, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 191, 192, 193, 194, 195, 196, 197, 198, 199, 201, 205, 206, 208, 209, 211, 212, 213, 214, 323, 335, 337, 338, 340, 346, 347, 348, 349, 350, 352, 354, 355, 356, 402, 403, 404, 407, 408, 412, 413, 417, 418, 419, 420, 424, 425, 427, 428, 429, 433, 434, 435, 436, 446, 447, 451, 452, 454, 465, 477, 478, 480, 481, 483, 484, 486, 487, 491, 498, 501, 502, 503], "hazen": [211, 213, 346, 354], "header": [179, 478], "heapsort": [32, 421], "heat": 503, "heavisid": [3, 8], "height": [85, 139, 413, 454, 489, 503], "help": [477, 480, 484, 490, 499, 502, 503], "helper": [467, 482, 488], "henc": 130, "here": [8, 108, 397, 477, 478, 483, 489, 496, 499, 501, 502, 503], "herebi": 493, "herein": 493, "hermitian": [102, 107, 108, 166, 168, 170, 177, 467, 482], "hfft": [0, 3, 8], "high": [380, 383, 394, 478, 489, 502, 503], "higher": [38, 80, 145, 211, 213, 295, 346, 354, 503], "highest": [380, 383], "highli": 501, "highlight": [473, 474, 475, 489, 501, 502, 503], "hipr2": 484, "hist": [135, 136, 137, 502], "hist_loc": 502, "histogram": [0, 3, 8, 136, 137, 467, 500], "histogram2d": [0, 3, 8], "histogram_bin_edg": [3, 8], "histogram_task": 502, "histogramdd": [0, 3, 8], "hold": [34, 55, 57, 70, 71, 174, 195, 205, 206, 209, 212, 214, 295, 437, 489], "holder": 493, "home": 481, "homepag": 484, "hope": 477, "hopkin": 174, "horizont": [138, 139, 411], "host": 191, "hous": 484, "how": [54, 318, 323, 332, 351, 431, 478, 479, 482, 483, 487, 494, 496, 502, 503], "howev": [14, 16, 17, 19, 70, 171, 194, 207, 210, 212, 295, 350, 429, 431, 477, 493, 503], "howto": 500, "hpc": [489, 500], "hsplit": [0, 3, 8, 139], "hstack": [0, 3, 8, 56, 501], "htm": 484, "html": [484, 490, 493, 504], "http": [362, 477, 481, 482, 484, 488, 490, 493, 495, 503, 504], "hull": 481, "hundr": [489, 501], "hyndman": [211, 213, 346, 354], "hyperbol": [23, 25, 28, 66, 392, 420, 434, 467], "hypergeometr": [0, 3, 8], "hypot": [0, 3, 8], "hypotenus": 140, "hypothesi": 360, "i": [2, 8, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 41, 42, 43, 44, 45, 46, 47, 48, 49, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 107, 108, 109, 110, 111, 112, 113, 114, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 178, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 219, 223, 224, 266, 277, 278, 295, 297, 298, 301, 303, 316, 318, 320, 323, 327, 328, 329, 332, 335, 336, 337, 338, 340, 341, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 417, 418, 419, 420, 421, 423, 424, 425, 426, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 444, 446, 447, 448, 449, 451, 452, 453, 454, 455, 456, 469, 478, 480, 481, 482, 483, 484, 486, 487, 488, 489, 491, 492, 493, 494, 495, 496, 498, 499, 500, 503, 504], "i0": [3, 8, 144], "i1": 144, "i16_arr": 80, "iN": 144, "idea": 477, "ident": [0, 3, 8, 106, 114, 172, 176, 203, 204, 207, 210, 368, 390, 482], "identifi": 484, "identit": 482, "idiomat": 490, "idx": 486, "ieee": 469, "ifft": [0, 3, 8, 104, 105], "ifft2": [0, 3, 8], "ifftn": [0, 3, 8, 103, 110], "ifftshift": [0, 3, 8], "ignor": [49, 51, 69, 135, 203, 204, 207, 208, 209, 210, 211, 213, 495], "ihfft": [0, 3, 8], "ii": [68, 376], "iinfo": [3, 8], "ij": [68, 196], "ik": 144, "illeg": 48, "illustr": [196, 478, 501, 503], "imag": [0, 3, 8, 402, 484, 488, 502, 503], "image_np": 503, "imagin": [323, 502], "imaginari": [18, 35, 142, 149, 150, 157, 167, 168, 169, 170, 202, 300, 402, 412, 422], "imbal": 503, "immedi": 482, "impact": 501, "imper": 503, "implement": [8, 14, 16, 17, 19, 29, 30, 31, 61, 70, 71, 79, 83, 117, 118, 119, 145, 166, 171, 192, 194, 205, 206, 207, 210, 212, 345, 350, 429, 435, 452, 478, 481, 482, 489, 490, 493, 495, 498, 501, 502, 503], "impli": [68, 344, 449, 481, 482, 488, 493], "implic": 487, "implicit": [86, 171], "implment": 498, "import": [68, 192, 481, 482, 483, 484, 486, 487, 488, 489, 494, 496, 499, 501, 502, 503, 504], "importantli": 81, "improp": 503, "improv": [473, 474, 475, 503], "imshow": [484, 503], "in1d": [0, 3, 8], "in_arr": 502, "in_stor": 502, "inappropri": 360, "incident": 493, "includ": [21, 37, 81, 86, 135, 178, 190, 194, 208, 212, 214, 307, 350, 394, 397, 429, 451, 469, 477, 478, 480, 483, 489, 493, 495, 498, 501, 502], "inclus": [211, 213, 346, 354, 380, 383], "incorpor": 493, "incorrect": [489, 502], "increas": [81, 93, 103, 108, 135, 137, 483, 490, 502, 503], "incur": 501, "ind": [81, 441, 442, 444, 445], "indefinit": 477, "independ": [328, 360, 368, 375, 478, 502, 503], "index": [6, 29, 30, 31, 32, 43, 54, 57, 79, 81, 96, 99, 104, 144, 146, 159, 192, 196, 203, 204, 279, 301, 316, 345, 351, 352, 399, 406, 414, 421, 423, 427, 431, 432, 448, 450, 458, 465, 467, 469, 483, 486, 491, 500], "index_arrai": [29, 30, 32, 33, 203, 204], "indexerror": 81, "indic": [0, 3, 8, 29, 30, 31, 32, 33, 36, 54, 61, 68, 74, 76, 77, 81, 84, 86, 87, 95, 98, 99, 100, 102, 103, 104, 105, 107, 108, 109, 110, 111, 112, 113, 114, 116, 138, 146, 191, 203, 204, 273, 274, 275, 276, 309, 312, 316, 326, 332, 339, 351, 352, 414, 417, 423, 431, 432, 441, 442, 444, 445, 448, 450, 453, 469, 477, 483, 486, 487, 490, 493, 495, 501, 502, 503], "indices_or_sect": [36, 423], "indirect": [31, 493], "individu": [365, 498], "ineffici": 469, "inexact": [3, 8, 120, 202, 212], "inf": [15, 70, 71, 174, 203, 204, 205, 206, 484, 495], "infer": [21, 37, 178, 190, 357, 406], "infin": [151, 152, 154, 155, 202, 396], "infinit": 174, "influenc": 375, "info": [3, 8], "inform": [86, 295, 301, 318, 328, 477, 482, 483, 484, 487, 490, 492, 494, 498, 502, 503, 504], "infti": 481, "inher": 503, "inherit": 295, "init": [388, 486, 496, 503], "initi": [1, 16, 17, 88, 207, 210, 212, 214, 271, 272, 304, 306, 311, 324, 350, 361, 429, 469, 483, 486, 487, 489, 496, 502], "inner": [0, 3, 8, 83, 87, 435, 502], "innermost": 48, "input": [6, 12, 13, 14, 15, 16, 17, 19, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 37, 38, 39, 40, 41, 43, 44, 45, 46, 48, 50, 52, 53, 55, 58, 59, 60, 61, 62, 63, 65, 66, 69, 70, 71, 72, 73, 74, 78, 80, 81, 82, 86, 87, 90, 91, 92, 93, 94, 95, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 129, 130, 131, 132, 135, 137, 140, 142, 143, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 161, 162, 163, 164, 165, 166, 171, 174, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 277, 297, 298, 335, 336, 337, 338, 339, 340, 343, 344, 345, 346, 347, 348, 349, 350, 352, 353, 354, 355, 356, 358, 399, 401, 402, 403, 404, 405, 407, 408, 409, 412, 414, 416, 417, 418, 419, 420, 421, 422, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 440, 446, 447, 448, 449, 451, 452, 458, 467, 481, 484, 490, 499, 501, 502, 503], "inputarrai": 502, "inputstor": 502, "insert": [0, 3, 8, 29, 30, 48, 54, 79, 93, 178, 190, 203, 204, 316, 344, 352, 414, 415, 467, 503], "insid": [501, 502], "instal": [477, 478, 480, 491, 494, 500, 502], "instanc": [48, 85, 102, 139, 320, 361, 413, 454, 478, 492, 502, 503], "instanti": [2, 361, 478], "instead": [14, 16, 17, 19, 41, 43, 48, 135, 144, 192, 194, 195, 207, 208, 209, 211, 213, 214, 277, 301, 346, 350, 354, 383, 429, 451, 469, 481, 482, 483, 484, 488, 489, 490, 499, 500, 503], "instruct": [477, 478, 492, 503], "instrument": 502, "int": [1, 4, 6, 14, 16, 17, 19, 20, 21, 29, 30, 31, 32, 34, 36, 41, 42, 43, 47, 50, 51, 54, 55, 57, 58, 67, 68, 69, 70, 71, 74, 75, 76, 78, 79, 80, 81, 84, 87, 88, 89, 93, 96, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 117, 127, 128, 130, 133, 134, 135, 136, 137, 138, 141, 144, 146, 160, 172, 174, 178, 179, 190, 191, 194, 195, 200, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 239, 240, 266, 298, 299, 303, 304, 306, 307, 308, 311, 316, 317, 320, 323, 324, 332, 336, 341, 342, 344, 345, 346, 350, 352, 354, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 405, 406, 409, 411, 412, 414, 416, 421, 423, 426, 427, 429, 430, 431, 432, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 448, 449, 450, 451, 453, 456, 457, 465, 469, 483, 484, 486, 502, 503], "int16": [3, 8, 80, 335], "int32": [3, 8, 212, 323, 502], "int32_t": 478, "int64": [3, 8, 212, 502], "int64_t": 478, "int8": [3, 8], "int_": [3, 8, 320, 383, 436, 481], "int_0": 357, "int_lik": 381, "int_typ": 301, "intc": [3, 8], "integ": [2, 3, 8, 21, 36, 51, 54, 68, 70, 71, 80, 120, 122, 159, 163, 172, 174, 194, 195, 205, 206, 208, 209, 211, 212, 213, 214, 316, 320, 323, 344, 346, 350, 351, 354, 358, 365, 380, 383, 406, 407, 408, 411, 414, 423, 429, 437, 448, 450, 451, 502], "integer_lik": 435, "integr": [41, 135, 199, 480, 489, 502, 503], "intel": 503, "intellectu": 477, "intend": [196, 328, 487], "intens": [171, 484, 503], "intensity_max": [484, 503], "intensity_min": [484, 503], "intent": 120, "inter": 489, "interact": [285, 503], "interchang": [325, 430], "interest": [481, 482, 503], "interfac": [34, 295, 318, 503], "interior": 130, "intermedi": [86, 87, 194, 208, 211, 213, 346, 354, 501], "intern": 70, "interoper": 490, "interp": [3, 8], "interpolated_inverted_cdf": [211, 213, 346, 354], "interpret": [37, 51, 62, 159, 191, 301, 318, 351, 487], "interrupt": 493, "intersect1d": [3, 8], "interv": [21, 55, 81, 178, 190, 358, 372, 377, 380, 382, 383, 384, 385, 387, 393, 394, 395], "intp": [3, 8, 212], "introduc": [409, 486, 502, 503], "introduct": 500, "introselect": [31, 275, 310, 345], "inund": 489, "inv": [3, 8, 487], "invas": 501, "invers": [22, 23, 24, 25, 26, 28, 93, 103, 104, 105, 106, 107, 108, 109, 110, 147, 172, 187, 362, 396, 398, 487], "invert": [0, 3, 8, 143, 467], "inverted_cdf": [211, 213, 346, 354], "invest": 503, "invoc": [503, 504], "invok": [478, 487, 499, 502], "involv": [477, 489, 502], "irecv": 489, "irfft": [0, 3, 8, 110], "irfft2": [0, 3, 8], "irfftn": [0, 3, 8, 108, 109], "irrespect": [168, 170], "is_busdai": [3, 8], "isclos": [0, 3, 8], "iscomplex": [0, 3, 8], "iscomplexobj": [0, 3, 8], "isdtyp": [3, 8], "isend": 489, "isfinit": [0, 3, 8, 207, 214], "isfortran": [3, 8, 266], "isin": [3, 8], "isinf": [0, 3, 8], "isnan": [0, 3, 8, 207, 210, 212, 214], "isnat": [3, 8], "isneginf": [0, 3, 8], "isol": 478, "isposinf": [0, 3, 8], "isreal": [0, 3, 8], "isrealobj": [0, 3, 8], "isscalar": [0, 3, 8], "issu": [103, 104, 105, 469, 477, 490, 501, 502, 503], "issubdtyp": [3, 8], "issue_execution_f": 502, "item": [0, 8, 33, 328, 329, 367, 398, 448, 486], "items": 295, "iter": [6, 87, 211, 213, 284, 296, 297, 313, 346, 352, 354, 432, 486, 487, 488, 489, 496, 503], "ith": 144, "its": [12, 13, 14, 19, 22, 23, 24, 25, 26, 27, 28, 37, 41, 43, 44, 45, 46, 52, 53, 54, 59, 60, 63, 65, 66, 72, 73, 75, 82, 90, 91, 92, 94, 97, 120, 121, 122, 123, 124, 125, 126, 129, 131, 132, 135, 140, 141, 145, 147, 151, 152, 153, 161, 162, 163, 164, 165, 167, 168, 169, 170, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 192, 193, 197, 198, 199, 201, 295, 318, 330, 332, 337, 338, 340, 343, 348, 349, 355, 356, 375, 383, 398, 403, 404, 406, 407, 408, 417, 418, 419, 420, 424, 425, 428, 433, 434, 435, 437, 438, 439, 446, 447, 452, 477, 482, 486, 489, 493, 501, 502, 503], "itself": [54, 202, 370, 410, 426, 478], "ivan": 493, "ix_": [0, 3, 8], "j": [83, 174, 196, 211, 213, 332, 343, 346, 352, 354, 432, 439, 483, 487, 489, 501, 503], "j0": 54, "j1": 54, "jacobi": 485, "jacobi_stencil": 503, "jacobian": 487, "jcp": 483, "jm": 54, "john": [174, 481], "join": [58, 427, 467], "jr": [362, 375], "json": 469, "jsrun": 494, "june": 493, "jupyt": 500, "just": [56, 397, 477, 481, 482, 488], "k": [12, 13, 22, 23, 24, 25, 26, 27, 28, 34, 44, 45, 46, 52, 53, 59, 60, 63, 65, 66, 72, 73, 75, 78, 82, 83, 90, 91, 92, 94, 96, 97, 120, 121, 122, 123, 124, 125, 126, 129, 131, 132, 140, 144, 147, 151, 152, 153, 161, 162, 163, 164, 165, 175, 176, 177, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 191, 192, 193, 197, 198, 199, 201, 223, 277, 297, 337, 338, 340, 348, 349, 355, 356, 357, 358, 360, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 380, 383, 384, 385, 386, 387, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 403, 404, 407, 408, 411, 417, 418, 419, 420, 424, 425, 428, 433, 434, 439, 440, 441, 442, 443, 444, 445, 446, 447, 469, 481, 483, 485, 487, 502, 503], "kaiser": [0, 3, 8, 47], "kappa": 395, "ke": 503, "keep": [469, 481, 486, 502], "keepdim": [14, 16, 17, 19, 29, 30, 41, 174, 194, 195, 203, 204, 207, 208, 209, 210, 211, 212, 213, 214, 271, 272, 304, 305, 306, 311, 324, 334, 346, 350, 354, 429, 451], "kei": [222, 230, 265, 490, 502, 503], "kern": 493, "kernel": [484, 502, 503, 504], "kernel_i": [484, 503], "kernel_x": [484, 503], "keyword": [2, 12, 13, 22, 23, 24, 25, 26, 27, 28, 44, 45, 46, 52, 53, 55, 59, 60, 63, 65, 66, 68, 72, 73, 82, 90, 91, 92, 94, 97, 120, 121, 122, 123, 124, 125, 126, 129, 131, 132, 140, 147, 151, 152, 153, 161, 162, 163, 164, 165, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 193, 196, 197, 198, 199, 201, 202, 337, 338, 340, 348, 349, 355, 356, 403, 404, 407, 408, 417, 418, 419, 420, 424, 425, 428, 433, 434, 446, 447, 448], "kill": 166, "kind": [31, 32, 58, 64, 86, 143, 192, 275, 276, 277, 310, 321, 345, 421, 467, 481, 482, 488, 490, 493], "know": [477, 487, 490, 501], "knowledg": [477, 489], "known": [323, 363, 376, 378, 389, 395, 398, 503], "kron": [3, 8], "kth": [31, 275, 310, 345], "kwarg": [12, 13, 22, 23, 24, 25, 26, 27, 28, 44, 45, 46, 52, 53, 55, 59, 60, 63, 65, 66, 72, 73, 82, 90, 91, 92, 94, 97, 120, 121, 122, 123, 124, 125, 126, 129, 131, 132, 140, 147, 151, 152, 153, 161, 162, 163, 164, 165, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 193, 197, 198, 199, 201, 257, 337, 338, 340, 348, 349, 355, 356, 403, 404, 407, 408, 417, 418, 419, 420, 424, 425, 428, 433, 434, 446, 447, 448, 481], "l": [36, 166, 168, 170, 482, 493, 503], "l2": [483, 487], "l2_norm": 487, "label": [86, 478, 481, 483, 486], "label_color": 486, "label_color_map": 486, "label_valu": 486, "lam": 377, "lambda": [362, 368, 397], "languag": [481, 482, 488], "laplac": [0, 3, 8, 375], "laptop": 503, "larg": [61, 68, 179, 202, 375, 377, 392, 431, 489, 496, 501, 502, 503], "larger": [43, 55, 80, 98, 99, 100, 103, 104, 105, 107, 110, 111, 113, 179, 393, 437, 449, 496, 503], "larger_imag": 503, "largest": [43, 87, 122, 174, 202, 380, 383], "last": [14, 19, 21, 31, 32, 41, 42, 48, 69, 80, 83, 98, 99, 100, 102, 103, 104, 105, 107, 108, 109, 110, 111, 113, 117, 130, 145, 173, 178, 190, 192, 214, 298, 316, 345, 350, 399, 406, 409, 414, 421, 422, 427, 429, 431, 435], "latenc": 503, "later": [375, 503], "latest": [490, 492, 503, 504], "latter": [352, 432, 501], "launch": [478, 494, 496, 501, 502], "launcher": [490, 494, 502, 503], "law": [398, 481, 482, 488], "layout": [34, 277, 295, 327, 399, 406], "lcm": [0, 3, 8], "ldexp": [0, 3, 8], "lead": [48, 196, 205, 206, 490, 502, 503], "leakag": 47, "learn": 490, "least": [38, 39, 40, 41, 43, 61, 68, 77, 85, 87, 114, 118, 150, 167, 168, 169, 170, 175, 177, 367, 413, 454, 478, 501, 503], "left": [14, 16, 17, 19, 29, 30, 41, 81, 118, 163, 174, 194, 195, 203, 204, 207, 208, 209, 210, 211, 212, 213, 214, 316, 346, 350, 354, 393, 412, 414, 429, 451, 483, 489], "left_shift": [0, 3, 8], "leftmost": 136, "leg": 140, "legaci": 388, "legal": [146, 477, 493], "legales": 479, "legat": [351, 469, 478, 480, 481, 482, 488, 491, 492, 495, 498, 499, 500, 503, 504], "legate_auto_config": 503, "legate_config": [490, 499], "legate_cpus_2": 504, "legate_limit_stdout": 503, "legate_root": 478, "legate_task": 502, "legate_test": [469, 490], "legend": [481, 483], "legion": [500, 503], "legion_default_arg": 494, "lele": 483, "len": [57, 81, 100, 101, 105, 108, 110, 113, 144, 196, 249, 486], "length": [12, 13, 16, 17, 21, 22, 23, 24, 25, 26, 27, 28, 36, 41, 43, 44, 45, 46, 52, 53, 57, 59, 60, 63, 65, 66, 70, 71, 72, 73, 80, 82, 90, 91, 92, 94, 97, 98, 99, 100, 102, 103, 104, 105, 106, 107, 108, 110, 111, 113, 120, 121, 122, 123, 124, 125, 126, 129, 130, 131, 132, 135, 137, 139, 140, 144, 147, 151, 152, 153, 161, 162, 163, 164, 165, 167, 168, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 193, 195, 196, 197, 198, 199, 201, 205, 206, 207, 209, 210, 316, 322, 337, 338, 340, 348, 349, 352, 355, 356, 359, 403, 404, 406, 407, 408, 410, 413, 414, 415, 416, 417, 418, 419, 420, 424, 425, 426, 428, 432, 433, 434, 435, 436, 446, 447, 454, 478, 483, 502], "less": [0, 3, 8, 42, 47, 57, 68, 70, 71, 79, 114, 133, 134, 160, 171, 205, 206, 212, 214, 350, 367, 394, 418, 429, 437, 487, 490, 501], "less_equ": [0, 3, 8], "let": [469, 477, 481, 482, 487, 488, 502, 503], "letter": 318, "level": [48, 68, 329, 465, 478, 495, 501, 503], "leverag": [143, 502, 503], "lexsort": [3, 8], "lg": 502, "lgpatch": 499, "lh": 483, "liabil": 493, "liabl": 493, "liber": [83, 86, 145, 192, 435, 452], "librari": [285, 465, 469, 478, 490, 491, 493, 502, 503], "licens": [477, 481, 482, 488, 493], "lifespan": 489, "lightli": 492, "lightweight": 477, "like": [39, 40, 48, 56, 64, 74, 86, 110, 114, 175, 177, 178, 179, 190, 191, 192, 196, 277, 295, 320, 328, 352, 394, 396, 399, 406, 432, 439, 467, 477, 482, 483, 487, 488, 489, 494, 501, 502, 503, 504], "limit": [55, 98, 99, 100, 102, 103, 104, 105, 107, 108, 109, 110, 111, 112, 113, 167, 168, 169, 170, 176, 280, 375, 377, 393, 394, 481, 482, 488, 493, 503], "linalg": [0, 3, 8, 458, 467, 482, 483, 486, 487, 499, 501], "linalgerror": [8, 167, 168, 169, 170, 175, 176, 177], "line": [477, 480, 489, 490, 498, 502, 503], "linear": [61, 86, 176, 190, 211, 213, 346, 354, 458, 467, 478, 483, 487, 502, 503], "linearli": 501, "link": [495, 503], "linspac": [0, 3, 8, 21, 481, 483, 501], "linux": [477, 490, 492, 500], "list": [8, 21, 31, 32, 36, 37, 38, 39, 40, 48, 49, 54, 84, 86, 87, 93, 101, 114, 115, 130, 137, 138, 266, 329, 345, 415, 421, 423, 435, 438, 453, 478, 480, 486, 493], "liter": [64, 86, 143], "literal_ev": 179, "littl": [83, 145, 192, 344, 435, 449, 452, 482], "live": 502, "ll": [486, 494, 502], "ln": [190, 397, 503], "load": [0, 3, 8, 292, 293, 502, 503], "loadtxt": [3, 8], "loan": 174, "loc": [366, 368, 369, 375, 483], "local": [489, 490, 502, 503], "local_grid": 489, "local_hist": 502, "local_ni": 489, "local_nx": 489, "local_rank": 489, "locat": [12, 13, 22, 23, 24, 25, 26, 27, 28, 44, 45, 46, 49, 51, 52, 53, 59, 60, 63, 65, 66, 72, 73, 82, 90, 91, 92, 94, 97, 114, 120, 121, 122, 123, 124, 125, 126, 129, 131, 132, 140, 147, 151, 152, 153, 154, 155, 161, 162, 163, 164, 165, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 191, 192, 193, 196, 197, 198, 199, 201, 316, 337, 338, 340, 343, 348, 349, 355, 356, 366, 368, 369, 376, 403, 404, 407, 408, 414, 417, 418, 419, 420, 424, 425, 428, 433, 434, 446, 447, 484, 486, 498, 499, 503], "lock": 295, "log": [0, 3, 8, 190, 370, 371, 481, 491], "log10": [0, 3, 8], "log1p": [0, 3, 8], "log2": [0, 3, 8], "log_bas": 190, "logaddexp": [0, 3, 8], "logaddexp2": [0, 3, 8], "logarithm": [180, 181, 182, 183, 184, 185, 371, 467], "logic": [14, 19, 344, 458, 467, 489, 502], "logical_and": [0, 3, 8, 501], "logical_not": [0, 3, 8], "logical_or": [0, 3, 8], "logical_xor": [0, 3, 8], "logist": [0, 3, 8], "lognorm": [0, 3, 8], "logseri": [0, 3, 8], "logspac": [0, 3, 8], "lomax": 376, "long": [3, 8, 383, 503], "longdoubl": [3, 8, 301], "longer": [43, 61, 102, 108, 501], "longlong": [3, 8], "look": [432, 477, 488, 490, 502], "loop": [487, 489], "lorena": 489, "lorentz": 389, "lose": [301, 329], "loss": 493, "lost": 328, "low": [104, 105, 380, 383, 394, 465], "lower": [55, 96, 135, 137, 166, 168, 170, 211, 213, 346, 354, 393, 394, 439, 440, 441, 442, 482, 489], "lowercas": 295, "lowest": [41, 87, 161, 376, 380, 383], "lstsq": [3, 8], "lt": 483, "m": [40, 42, 47, 61, 68, 83, 85, 96, 99, 100, 102, 104, 105, 108, 110, 113, 117, 118, 119, 133, 134, 160, 166, 167, 168, 169, 170, 171, 172, 175, 176, 177, 192, 194, 196, 208, 298, 343, 352, 357, 358, 360, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 380, 383, 384, 385, 386, 387, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 411, 415, 431, 432, 439, 440, 441, 443, 444, 451, 478, 481, 482, 488, 492, 502, 503], "machin": [328, 402, 478, 490, 494, 503, 504], "maco": [490, 492], "made": [34, 38, 202, 277, 295, 318, 399], "magenta": 486, "magnitud": [18, 486, 503], "mai": [6, 14, 19, 21, 29, 30, 49, 51, 54, 55, 58, 64, 70, 71, 86, 130, 174, 179, 192, 196, 202, 205, 206, 277, 295, 320, 329, 352, 358, 394, 395, 410, 469, 477, 480, 481, 482, 483, 487, 488, 490, 493, 495, 498, 499, 502, 503], "main": [75, 76, 77, 78, 79, 96, 114, 141, 437, 439, 440, 483, 494, 503, 504], "maintain": [79, 477, 489], "mainten": 489, "major": [34, 297, 399, 450, 490], "make": [48, 49, 56, 64, 85, 139, 196, 285, 295, 367, 413, 454, 467, 477, 478, 482, 486, 489, 490, 495, 496, 499, 501, 502, 503], "make_grid": 488, "manag": [361, 469, 489, 503], "mani": [86, 323, 362, 449, 478, 502, 503], "manifest": 501, "manipul": [458, 467], "manner": [495, 503], "mantissa": 126, "manual": [436, 477, 489, 492, 496, 503], "map": [54, 486, 489, 502], "mapper": 490, "margin": 81, "mark": 477, "marker": 486, "marku": 487, "mask": [159, 191, 347, 353, 486], "mask_func": 191, "mask_funct": 191, "mask_indic": [0, 3, 8], "mass": [135, 365], "master": 503, "match": [48, 55, 58, 64, 80, 130, 192, 352, 427, 432, 451, 469, 483, 502], "materi": [191, 295, 484, 486, 493], "math": [301, 469, 493], "mathbf": [483, 487, 503], "mathemat": [174, 458, 467, 503], "mathtt": 481, "matmul": [0, 3, 8, 469, 502, 503], "matmul_cache_s": 458, "matmul_task": 502, "matplotlib": [481, 483, 484, 486, 488, 503], "matric": [48, 114, 167, 168, 169, 170, 171, 173, 174, 192, 196, 399, 467, 482, 483, 502, 503], "matrix": [7, 8, 68, 79, 83, 166, 167, 168, 169, 170, 171, 172, 174, 175, 176, 192, 196, 332, 335, 399, 410, 443, 452, 467, 482, 483, 487, 500], "matrix_norm": 8, "matrix_pow": [0, 8], "matrix_rank": [3, 8], "matrix_transpos": [3, 8], "matter": 490, "matthew": 493, "matvec": [3, 8], "max": [0, 135, 174, 210, 280, 436, 484, 486, 501, 503], "max_eager_volum": 458, "max_header_s": 179, "max_it": 488, "maxim": 503, "maximum": [0, 3, 8, 16, 17, 29, 42, 47, 55, 87, 123, 133, 134, 137, 160, 179, 203, 207, 210, 273, 304, 486, 495, 501], "may_share_memori": [3, 8], "mayb": 477, "mb": [480, 503], "md": 174, "me": 477, "mean": [0, 3, 8, 48, 64, 67, 86, 99, 100, 104, 105, 110, 111, 113, 127, 130, 174, 192, 208, 277, 297, 327, 332, 360, 368, 369, 370, 374, 375, 381, 396, 399, 406, 411, 431, 449, 485, 487, 502, 503], "measur": [362, 451, 490, 496, 497, 499, 500, 502, 503], "mechan": [477, 502], "median": [0, 3, 8, 209, 369], "median_unbias": [211, 213, 346, 354], "medic": 502, "meet": [34, 477, 501, 503], "memavail": 490, "meminfo": 490, "memmap": [3, 8], "memo": 224, "memori": [34, 49, 51, 143, 171, 191, 195, 196, 209, 211, 213, 277, 278, 288, 295, 297, 307, 318, 323, 327, 346, 354, 399, 406, 480, 483, 489, 502, 503], "memoryview": 288, "mention": [486, 490, 501, 503], "merchant": 493, "merg": [54, 477, 493, 496, 502], "merged_arrai": 54, "mergesort": [32, 421], "merton": 503, "mesh": [159, 489, 496], "meshgrid": [0, 3, 8, 159], "messag": [490, 496], "met": [493, 501], "method": [1, 2, 4, 7, 14, 16, 17, 19, 34, 61, 171, 179, 194, 207, 210, 211, 212, 213, 301, 319, 320, 328, 336, 346, 350, 354, 429, 481, 485, 495, 502, 503], "mgrid": 159, "microsecond": 501, "middl": [104, 105], "midpoint": [211, 213, 346, 354], "might": [32, 70, 86, 191, 421, 487, 490, 496, 501, 502, 503], "million": [481, 489, 502], "millisecond": [496, 501, 502], "mimic": [344, 449, 489], "mimick": 489, "min": [0, 135, 174, 175, 177, 210, 280], "min_cpu_chunk": 458, "min_gpu_chunk": 458, "min_omp_chunk": 458, "min_scalar_typ": [3, 8], "miniforg": 503, "miniforge3": 503, "minim": [47, 503], "minimum": [0, 3, 8, 16, 17, 30, 34, 43, 55, 120, 124, 137, 204, 207, 210, 274, 306, 503], "minlength": [43, 486], "mintypecod": [3, 8], "mirror": 489, "miscellan": 467, "mise": 395, "mismatch": [48, 54, 57, 502], "mitig": 501, "mkdir": 503, "mod": [3, 8, 54], "mode": [54, 61, 86, 98, 99, 100, 102, 103, 104, 105, 107, 108, 109, 110, 111, 112, 113, 175, 179, 279, 312, 326, 351, 366, 386, 389, 393, 395, 400, 431, 469, 484, 501, 503], "model": [365, 478, 481, 482, 488, 489, 503], "modf": [0, 3, 8], "modif": [477, 489, 493], "modifi": [64, 114, 195, 209, 211, 213, 346, 354, 477, 483, 493], "modul": [285, 410, 503], "modular": 54, "moivr": 375, "monoton": [81, 135, 137], "more": [38, 39, 40, 49, 51, 55, 70, 71, 75, 79, 81, 83, 85, 86, 98, 103, 108, 109, 111, 112, 139, 145, 171, 173, 192, 196, 205, 206, 212, 323, 396, 397, 411, 413, 427, 435, 437, 448, 452, 454, 480, 482, 483, 484, 486, 489, 492, 494, 495, 501, 502, 503, 504], "moshier": 493, "most": [34, 80, 85, 86, 87, 103, 139, 202, 367, 402, 413, 432, 454, 477, 489, 495, 503], "mostli": 490, "motion": 396, "move": [200, 323, 502, 503], "moveaxi": [0, 3, 8], "mpi": [489, 494, 503], "mpi4pi": [489, 496], "mpi_fin": 489, "mpirun": 494, "msg00295": 493, "mt19937": [3, 8], "mu": [368, 376, 395], "much": [42, 477, 501], "multi": [3, 86, 98, 99, 100, 102, 103, 104, 105, 107, 108, 109, 110, 111, 112, 113, 167, 168, 169, 170, 171, 176, 489, 490, 491, 492, 500, 501], "multi_dot": [0, 8], "multi_index": 400, "multidimension": [137, 452], "multinomi": [3, 8], "multipl": [1, 2, 7, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 116, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 176, 178, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 216, 217, 218, 222, 223, 224, 225, 226, 228, 229, 231, 232, 233, 234, 235, 236, 237, 238, 241, 242, 243, 244, 245, 246, 247, 248, 250, 251, 252, 253, 254, 255, 256, 258, 259, 260, 262, 263, 264, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 279, 280, 281, 282, 283, 284, 289, 290, 293, 294, 297, 301, 304, 305, 306, 309, 310, 311, 312, 313, 315, 316, 318, 321, 322, 324, 325, 326, 327, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 480, 487, 489, 490, 492, 500, 501, 504], "multipli": [0, 3, 8, 70, 83, 192, 205, 350, 376, 384, 385, 387, 501, 502], "multivariate_norm": [3, 8], "must": [1, 12, 13, 14, 16, 17, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 41, 44, 45, 46, 48, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 63, 65, 66, 70, 71, 72, 73, 80, 81, 82, 83, 85, 90, 91, 92, 94, 97, 102, 108, 110, 118, 120, 121, 122, 123, 124, 125, 126, 129, 130, 131, 132, 135, 139, 140, 145, 147, 151, 152, 153, 154, 155, 161, 162, 163, 164, 165, 166, 173, 174, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 192, 193, 194, 195, 197, 198, 199, 200, 201, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 266, 280, 295, 332, 337, 338, 340, 346, 347, 348, 349, 350, 352, 354, 355, 356, 360, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 373, 374, 375, 376, 377, 378, 379, 381, 386, 391, 392, 393, 396, 397, 398, 403, 404, 407, 408, 409, 411, 412, 413, 414, 417, 418, 419, 420, 424, 425, 427, 428, 429, 432, 433, 434, 435, 437, 446, 447, 449, 451, 452, 454, 478, 489, 493, 494, 502, 503], "my": 477, "myenv": [492, 503], "myron": 503, "n": [7, 33, 36, 40, 43, 54, 61, 68, 76, 77, 80, 81, 83, 85, 96, 98, 99, 100, 102, 103, 104, 105, 107, 108, 110, 111, 113, 114, 130, 136, 137, 141, 144, 159, 172, 174, 175, 177, 191, 192, 196, 316, 323, 332, 343, 347, 353, 357, 358, 360, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 380, 383, 384, 385, 386, 387, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 410, 413, 414, 423, 435, 439, 440, 441, 444, 445, 451, 454, 458, 481, 482, 483, 486, 488, 492, 494, 502, 503], "n1": 196, "n2": 196, "n3": 196, "n_bin": 502, "n_centroid": 486, "n_dim": 486, "n_element": 486, "n_gpu": 489, "n_iter": 486, "n_iter_check": 486, "n_point": 483, "n_stencil": 483, "n_warmup_it": 496, "naiv": [501, 503], "name": [292, 295, 318, 330, 396, 477, 493, 499, 503, 504], "nan": [15, 29, 30, 35, 148, 153, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 495], "nan_to_num": [0, 3, 8], "nanargmax": [0, 3, 8, 204, 469], "nanargmin": [0, 3, 8, 203, 469], "nancumprod": [0, 3, 8], "nancumsum": [0, 3, 8], "nanmax": [0, 3, 8, 210, 469], "nanmean": [0, 3, 8], "nanmedian": [0, 3, 8], "nanmin": [0, 3, 8, 207, 469], "nanpercentil": [0, 3, 8], "nanprod": [0, 3, 8], "nanquantil": [0, 3, 8], "nanstd": [3, 8], "nansum": [0, 3, 8], "nanvar": [3, 8], "nation": 503, "nativ": 495, "natur": [180, 182, 375, 503], "navier": 489, "nbad": 367, "nd": [6, 48, 301], "ndarrai": [0, 7, 8, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 360, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 383, 384, 385, 386, 387, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 463, 469, 484, 486, 487, 495, 498, 502, 503], "ndenumer": [3, 8], "ndim": [0, 3, 6, 8, 16, 17, 33, 38, 39, 40, 48, 76, 79, 114, 174, 210, 329, 432, 436], "ndindex": [3, 8], "nditer": [3, 8], "ndmin": 34, "ndshape": [6, 50, 319, 400, 416, 450], "ndshapelik": [4, 50, 51, 117, 127, 128, 341, 342, 385, 387, 406, 426, 457], "nearest": [211, 213, 329, 346, 354, 408], "necessari": [38, 43, 48, 54, 64, 70, 71, 102, 108, 110, 114, 194, 195, 205, 206, 208, 209, 212, 214, 350, 351, 412, 429, 451, 489, 498, 502], "necessarili": [54, 481, 482, 488], "need": [34, 49, 64, 81, 195, 196, 209, 399, 431, 432, 455, 469, 478, 482, 486, 489, 490, 501, 502, 503], "neg": [0, 3, 8, 14, 19, 41, 43, 54, 78, 79, 96, 103, 104, 105, 108, 117, 120, 130, 152, 154, 172, 178, 202, 214, 298, 350, 362, 364, 366, 368, 369, 370, 372, 373, 375, 378, 379, 381, 386, 391, 399, 412, 424, 429, 431, 435, 437, 449], "negative_binomi": [0, 3, 8], "neginf": 202, "neglig": 493, "neighbor": [483, 489, 503], "neither": 493, "nersc": 503, "nest": [34, 48, 329, 489, 501], "nested_it": 3, "network": 500, "never": [61, 318], "new": [14, 19, 51, 54, 70, 71, 74, 79, 88, 89, 93, 117, 118, 119, 127, 146, 178, 190, 191, 194, 195, 200, 205, 206, 208, 209, 212, 214, 219, 277, 279, 291, 315, 332, 335, 341, 361, 382, 406, 412, 427, 430, 436, 451, 456, 465, 486, 492, 502, 503], "new_label": 486, "newaxi": [332, 486, 502], "newli": [34, 277], "newshap": 406, "newton": 485, "next": [323, 338, 477, 503], "nextaft": [0, 3, 8], "ngood": 367, "ni": [196, 352, 431, 432], "nightli": 492, "ninja": 478, "niter": [487, 496, 501], "nj": [352, 431, 432], "nk": [352, 431, 432], "nn": 196, "nnewton": 487, "nnode": 503, "node": [295, 480, 489, 490, 491, 492, 500, 504], "non": [14, 16, 17, 19, 21, 33, 39, 40, 41, 43, 67, 116, 135, 149, 159, 174, 178, 191, 194, 196, 202, 207, 210, 212, 295, 307, 309, 339, 347, 350, 362, 364, 366, 368, 369, 370, 373, 374, 375, 378, 379, 381, 386, 391, 424, 429, 435, 449, 489, 495], "nonc": [373, 374], "noncentr": [373, 374], "noncentral_chisquar": [0, 3, 8], "noncentral_f": [0, 3, 8], "none": [1, 2, 4, 6, 12, 13, 14, 16, 17, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 34, 37, 41, 43, 44, 45, 46, 52, 53, 54, 55, 57, 58, 59, 60, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 79, 80, 82, 83, 86, 89, 90, 91, 92, 94, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 117, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 135, 136, 137, 140, 143, 145, 146, 147, 151, 152, 153, 154, 155, 161, 162, 163, 164, 165, 173, 174, 176, 178, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 192, 193, 194, 195, 197, 198, 199, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 271, 272, 273, 274, 275, 276, 278, 279, 280, 281, 285, 286, 287, 289, 290, 293, 298, 299, 301, 304, 305, 306, 310, 311, 312, 316, 317, 318, 321, 322, 324, 326, 329, 331, 332, 334, 335, 337, 338, 340, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 354, 355, 356, 357, 358, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 380, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 403, 404, 405, 407, 408, 409, 412, 414, 417, 418, 419, 420, 421, 424, 425, 426, 427, 428, 429, 431, 432, 433, 434, 435, 437, 438, 439, 441, 444, 446, 447, 448, 449, 451, 452, 455, 457, 469, 486, 502], "noninfring": 493, "nonneg": [367, 397], "nonzero": [0, 3, 8, 95, 116, 159, 344, 501, 503], "nor": 493, "norm": [0, 8, 98, 99, 100, 102, 103, 104, 105, 107, 108, 109, 110, 111, 112, 113, 171, 467, 483, 486, 487, 501], "normal": [0, 3, 8, 42, 47, 48, 68, 98, 99, 100, 102, 103, 104, 105, 107, 108, 109, 110, 111, 112, 113, 133, 134, 135, 136, 137, 160, 167, 168, 357, 360, 368, 370, 381, 392, 395, 481, 484, 486, 503], "normal_unbias": [211, 213, 346, 354], "north": [488, 503], "not_equ": [0, 3, 8, 486], "note": [12, 13, 15, 18, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 34, 37, 44, 45, 46, 52, 53, 54, 59, 60, 61, 63, 64, 65, 66, 68, 70, 71, 72, 73, 74, 79, 80, 81, 82, 83, 86, 87, 90, 91, 92, 94, 97, 98, 99, 100, 101, 102, 103, 104, 105, 107, 108, 109, 110, 111, 112, 113, 114, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 129, 131, 132, 135, 140, 143, 144, 145, 146, 147, 148, 151, 152, 153, 158, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 191, 192, 193, 196, 197, 198, 199, 201, 205, 206, 207, 210, 277, 288, 295, 301, 307, 318, 320, 323, 328, 329, 335, 337, 338, 340, 345, 348, 349, 355, 356, 361, 370, 399, 402, 403, 404, 405, 406, 407, 408, 409, 410, 417, 418, 419, 420, 424, 425, 428, 431, 433, 434, 435, 439, 441, 442, 444, 445, 446, 447, 448, 452, 483, 484, 487, 490, 501, 503], "notebook": 504, "notic": [481, 487, 490, 492], "notion": [168, 170], "novel": 502, "now": [54, 478, 481, 482, 484, 488, 502, 503], "np": [12, 13, 16, 17, 22, 23, 24, 25, 26, 27, 28, 44, 45, 46, 48, 52, 53, 59, 60, 63, 65, 66, 70, 71, 72, 73, 80, 81, 82, 86, 90, 91, 92, 94, 97, 115, 116, 120, 121, 122, 123, 124, 125, 126, 129, 131, 132, 137, 140, 146, 147, 151, 152, 153, 159, 161, 162, 163, 164, 165, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 191, 192, 193, 195, 196, 197, 198, 199, 201, 205, 206, 209, 296, 320, 323, 332, 337, 338, 340, 348, 349, 350, 355, 356, 383, 402, 403, 404, 407, 408, 417, 418, 419, 420, 424, 425, 428, 429, 431, 433, 434, 436, 446, 447, 481, 482, 483, 484, 486, 487, 488, 489, 494, 495, 496, 499, 501, 503, 504], "npoint": 483, "npt": [4, 36, 55, 58, 96, 127, 128, 137, 141, 144, 149, 150, 156, 158, 178, 190, 278, 296, 317, 335, 341, 342, 385, 387, 415, 436, 439, 455, 457], "npy": [179, 467], "npz": [179, 467], "nsampl": 367, "ntask": 503, "ntime": 502, "nuc": 174, "nuclear": 174, "null": 432, "nullabl": 502, "num": [178, 190, 501, 503], "num_bin": 502, "num_parallel": 478, "num_timestep": 489, "numa": 478, "number": [2, 3, 6, 8, 12, 13, 15, 18, 22, 23, 24, 25, 26, 27, 28, 33, 34, 41, 42, 43, 44, 45, 46, 47, 49, 52, 53, 54, 59, 60, 63, 65, 66, 67, 68, 72, 73, 76, 78, 80, 82, 87, 90, 91, 92, 93, 94, 96, 97, 100, 102, 103, 104, 105, 107, 108, 110, 111, 113, 120, 121, 122, 123, 124, 125, 126, 129, 130, 131, 132, 133, 134, 135, 136, 137, 140, 141, 144, 147, 150, 151, 152, 153, 157, 159, 160, 161, 162, 163, 164, 165, 174, 178, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 193, 194, 197, 198, 199, 201, 202, 205, 206, 207, 208, 210, 212, 214, 303, 308, 320, 336, 337, 338, 340, 344, 347, 348, 349, 355, 356, 358, 359, 360, 365, 367, 372, 375, 377, 388, 403, 404, 405, 407, 408, 409, 411, 412, 417, 418, 419, 420, 424, 425, 428, 431, 433, 434, 436, 439, 446, 447, 448, 449, 451, 452, 467, 469, 480, 481, 483, 487, 489, 490, 494, 495, 502, 503], "number_of_dimens": 336, "numer": [103, 104, 105, 108, 110, 154, 155, 174, 337, 348, 363, 374, 467, 489, 495], "numit": 6, "numpi": [1, 2, 3, 4, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 94, 95, 96, 97, 98, 99, 100, 102, 103, 104, 105, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 277, 285, 291, 295, 318, 323, 335, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 401, 402, 403, 404, 405, 406, 407, 408, 410, 413, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 467, 469, 480, 481, 482, 483, 484, 486, 487, 488, 489, 491, 497, 498, 500, 502, 504], "numpy_compat": 458, "nvidia": [481, 482, 484, 488, 490, 492, 503, 504], "nx": [136, 137, 196, 489, 501, 503], "ny": [136, 137, 196, 489, 501, 503], "nyquist": [101, 103, 104, 105], "o": [1, 295, 361, 486, 496, 503], "obj": [34, 74, 146], "object": [6, 14, 19, 34, 62, 146, 158, 166, 174, 179, 195, 209, 211, 213, 266, 278, 285, 288, 295, 301, 303, 307, 327, 328, 329, 335, 346, 354, 361, 406, 435, 439, 448, 502], "object_": [3, 8], "observ": 68, "obtain": [144, 320, 376, 481, 482, 488, 493, 502], "occas": 477, "occasion": 495, "occur": [58, 64, 70, 71, 74, 86, 146, 192, 202, 205, 206, 277, 297, 372, 375, 377, 393, 399, 501, 503], "occurr": [43, 448], "odd": [42, 47, 102, 106, 108, 110, 111, 133, 134, 160], "ofc": 70, "off": [21, 449, 477, 483], "offer": [490, 492, 501], "offload": 469, "offset": [4, 79, 191, 289, 299, 317, 323, 331, 437, 441, 442, 444, 445, 496], "often": [21, 42, 357, 360, 375, 477, 486, 501, 503], "ogrid": 159, "omiss": 335, "omit": [266, 335], "omp": [480, 490, 503], "ompthread": [480, 503], "onc": [477, 478, 489, 503], "one": [6, 14, 16, 17, 19, 29, 30, 38, 41, 42, 43, 47, 49, 51, 54, 55, 64, 74, 86, 96, 98, 99, 102, 103, 104, 106, 107, 108, 110, 111, 130, 133, 134, 141, 144, 150, 159, 160, 174, 182, 194, 195, 196, 203, 204, 205, 207, 208, 209, 210, 211, 212, 213, 214, 288, 295, 296, 297, 301, 322, 323, 339, 346, 350, 354, 365, 376, 380, 415, 426, 427, 429, 441, 442, 444, 445, 451, 465, 477, 481, 489, 490, 492, 496, 501, 502, 503], "ones": [0, 3, 8, 83, 93, 96, 141, 145, 154, 155, 191, 192, 205, 212, 214, 342, 435, 439, 452, 483, 486, 489, 495, 501, 502], "ones_lik": [0, 3, 8], "onli": [12, 13, 22, 23, 24, 25, 26, 27, 28, 34, 36, 38, 41, 42, 44, 45, 46, 47, 52, 53, 55, 59, 60, 61, 63, 64, 65, 66, 72, 73, 82, 83, 86, 87, 90, 91, 92, 94, 97, 101, 120, 121, 122, 123, 124, 125, 126, 129, 130, 131, 132, 133, 134, 135, 140, 144, 147, 151, 152, 153, 160, 161, 162, 163, 164, 165, 166, 168, 170, 174, 178, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 192, 193, 197, 198, 199, 201, 202, 203, 204, 207, 210, 277, 295, 301, 318, 337, 338, 340, 347, 348, 349, 352, 355, 356, 388, 399, 403, 404, 405, 406, 407, 408, 417, 418, 419, 420, 424, 425, 428, 432, 433, 434, 435, 446, 447, 448, 449, 452, 465, 469, 477, 484, 486, 489, 492, 494, 495, 496, 501, 502, 503], "onto": [295, 490], "oom": 490, "op": 388, "open": [21, 81, 159, 178, 179, 328, 380, 382, 384, 385, 387, 394, 477, 484, 490, 492, 503], "openmp": [478, 480, 503], "oper": [7, 16, 17, 85, 86, 87, 93, 122, 139, 145, 166, 202, 207, 298, 343, 352, 405, 413, 435, 448, 452, 454, 458, 467, 469, 483, 484, 489, 495, 496, 502], "operand": [86, 87], "opposit": [277, 295], "optim": [47, 86, 87, 143, 173, 301, 469, 483, 489, 498, 503], "option": [1, 12, 13, 14, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 34, 37, 41, 43, 44, 45, 46, 49, 51, 52, 53, 54, 55, 57, 58, 59, 60, 61, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 78, 79, 80, 81, 82, 83, 86, 88, 89, 90, 91, 92, 94, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 117, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 135, 136, 137, 140, 141, 143, 144, 145, 146, 147, 151, 152, 153, 154, 155, 161, 162, 163, 164, 165, 168, 170, 173, 174, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 266, 277, 297, 298, 316, 318, 327, 335, 337, 338, 340, 341, 342, 343, 344, 345, 346, 348, 349, 350, 351, 354, 355, 356, 357, 358, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 383, 384, 385, 386, 387, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 402, 403, 404, 405, 406, 407, 408, 409, 412, 414, 415, 417, 418, 419, 420, 421, 423, 424, 425, 426, 427, 428, 429, 431, 433, 434, 435, 437, 438, 439, 440, 441, 442, 444, 445, 446, 447, 448, 449, 450, 451, 452, 456, 457, 477, 478, 480, 485, 490, 492, 494, 498, 499, 501, 502], "ord": [174, 486], "order": [4, 12, 13, 22, 23, 24, 25, 26, 27, 28, 31, 32, 34, 44, 45, 46, 52, 53, 59, 60, 63, 64, 65, 66, 72, 73, 79, 81, 82, 86, 87, 90, 91, 92, 94, 97, 103, 104, 105, 108, 110, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 129, 130, 131, 132, 140, 147, 151, 152, 153, 161, 162, 163, 164, 165, 168, 170, 173, 174, 177, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 192, 193, 196, 197, 198, 199, 200, 201, 223, 275, 276, 277, 297, 298, 310, 313, 315, 316, 321, 327, 328, 330, 332, 337, 338, 340, 344, 345, 348, 349, 351, 355, 356, 357, 365, 399, 400, 403, 404, 406, 407, 408, 411, 414, 417, 418, 419, 420, 421, 424, 425, 428, 433, 434, 435, 446, 447, 449, 450, 467, 481, 482, 483, 500, 501, 502, 503], "ordertyp": [4, 399, 400, 406, 450], "ordin": 176, "ordinari": [145, 166], "org": [362, 477, 481, 482, 488, 493], "organ": 493, "orient": [352, 432], "origin": [12, 13, 22, 23, 24, 25, 26, 27, 28, 41, 44, 45, 46, 49, 51, 52, 53, 59, 60, 63, 64, 65, 66, 72, 73, 82, 90, 91, 92, 94, 97, 120, 121, 122, 123, 124, 125, 126, 129, 131, 132, 140, 147, 151, 152, 153, 161, 162, 163, 164, 165, 174, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 193, 195, 196, 197, 198, 199, 200, 201, 209, 211, 213, 337, 338, 340, 346, 348, 349, 354, 355, 356, 403, 404, 406, 407, 408, 409, 417, 418, 419, 420, 424, 425, 428, 433, 434, 446, 447, 448, 479, 484, 489, 499, 502, 503], "ortho": [98, 99, 100, 102, 103, 104, 105, 107, 108, 109, 110, 111, 112, 113], "orthonorm": 175, "oserror": 179, "other": [6, 12, 13, 21, 22, 23, 24, 25, 26, 27, 28, 34, 44, 45, 46, 49, 50, 52, 53, 54, 55, 59, 60, 61, 63, 65, 66, 72, 73, 80, 82, 86, 90, 91, 92, 94, 97, 103, 104, 105, 108, 110, 120, 121, 122, 123, 124, 125, 126, 129, 131, 132, 140, 141, 147, 151, 152, 153, 161, 162, 163, 164, 165, 173, 174, 178, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 193, 197, 198, 199, 200, 201, 211, 213, 277, 278, 285, 295, 318, 320, 323, 337, 338, 340, 346, 348, 349, 354, 355, 356, 376, 393, 394, 403, 404, 407, 408, 410, 417, 418, 419, 420, 424, 425, 428, 433, 434, 439, 446, 447, 467, 469, 477, 481, 490, 493, 496, 501, 502], "otherwis": [15, 29, 30, 34, 35, 41, 67, 68, 80, 143, 145, 178, 190, 194, 195, 203, 204, 207, 208, 209, 210, 211, 213, 277, 297, 327, 346, 354, 388, 399, 406, 414, 430, 437, 438, 439, 451, 455, 469, 489, 493], "ouput": 469, "our": [477, 484, 488, 490, 495, 501, 503], "out": [12, 13, 14, 16, 17, 19, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 34, 37, 42, 43, 44, 45, 46, 47, 52, 53, 54, 55, 57, 58, 59, 60, 61, 63, 65, 66, 68, 70, 71, 72, 73, 74, 75, 78, 80, 82, 83, 86, 88, 89, 90, 91, 92, 94, 97, 98, 99, 100, 102, 103, 104, 105, 107, 108, 109, 110, 111, 112, 113, 117, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 131, 132, 133, 134, 140, 141, 142, 145, 146, 147, 149, 151, 152, 153, 154, 155, 156, 159, 160, 161, 162, 163, 164, 165, 173, 176, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 191, 192, 193, 194, 195, 197, 198, 199, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 271, 272, 273, 274, 279, 280, 281, 286, 287, 290, 298, 304, 305, 306, 311, 324, 326, 331, 332, 334, 337, 338, 340, 341, 342, 343, 345, 346, 348, 349, 350, 351, 354, 355, 356, 357, 358, 359, 360, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 383, 384, 385, 386, 387, 390, 391, 392, 393, 394, 395, 396, 397, 398, 401, 402, 403, 404, 407, 408, 410, 412, 417, 418, 419, 420, 421, 422, 424, 425, 427, 428, 429, 431, 432, 433, 434, 435, 437, 446, 447, 451, 452, 455, 456, 457, 480, 482, 488, 493, 498, 501, 502, 503], "out_arr": 502, "out_stor": 502, "outcom": [365, 503], "outer": [0, 3, 8, 87, 137], "outermost": [48, 54], "outlier": 136, "outlin": 489, "output": [12, 13, 14, 15, 16, 17, 19, 21, 22, 23, 24, 25, 26, 27, 28, 42, 43, 44, 45, 46, 47, 48, 52, 53, 55, 57, 59, 60, 61, 63, 65, 66, 70, 71, 72, 73, 78, 80, 81, 82, 83, 86, 87, 88, 90, 91, 92, 94, 96, 97, 98, 99, 100, 102, 103, 104, 105, 108, 109, 110, 116, 120, 121, 122, 123, 124, 125, 126, 129, 131, 132, 133, 134, 140, 141, 142, 144, 145, 147, 148, 149, 151, 152, 153, 159, 160, 161, 162, 163, 164, 165, 173, 176, 178, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 192, 193, 194, 195, 196, 197, 198, 199, 201, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 328, 337, 338, 340, 343, 344, 346, 348, 349, 350, 354, 355, 356, 357, 358, 360, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 380, 383, 384, 385, 386, 387, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 401, 402, 403, 404, 405, 407, 408, 409, 412, 415, 417, 418, 419, 420, 424, 425, 428, 429, 433, 434, 435, 436, 437, 446, 447, 448, 449, 451, 452, 458, 467, 469, 480, 489, 490, 498, 502, 503], "outputarrai": 502, "outputstor": 502, "outsid": [54, 55, 81, 135, 136, 483], "outweigh": 502, "over": [12, 13, 14, 16, 17, 19, 22, 23, 24, 25, 26, 27, 28, 41, 44, 45, 46, 52, 53, 59, 60, 63, 65, 66, 70, 71, 72, 73, 82, 83, 86, 87, 90, 91, 92, 94, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 117, 120, 121, 122, 123, 124, 125, 126, 129, 131, 132, 135, 140, 145, 147, 151, 152, 153, 161, 162, 163, 164, 165, 174, 178, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 193, 194, 196, 197, 198, 199, 201, 205, 206, 207, 208, 212, 214, 296, 297, 298, 311, 324, 337, 338, 340, 344, 348, 349, 350, 352, 355, 356, 358, 362, 377, 379, 384, 385, 387, 393, 394, 397, 403, 404, 407, 408, 409, 417, 418, 419, 420, 424, 425, 428, 429, 431, 432, 433, 434, 435, 446, 447, 449, 451, 469, 488, 489, 502, 503], "overal": [469, 480, 489, 503], "overcom": 328, "overflow": [21, 120, 320], "overhead": [469, 489, 496, 502], "overlap": 483, "overrid": [69, 89, 128, 342, 457, 492], "overridden": [1, 68], "oversubscrib": 490, "overwrite_input": [195, 209, 211, 213, 346, 354], "own": [295, 318, 375, 477, 492, 503], "owndata": 295, "owner": [295, 318, 493], "p": [92, 196, 358, 362, 365, 371, 372, 375, 410, 438, 503], "p1": 137, "p2": 137, "p3": 137, "pack": [344, 399, 449, 467], "packag": [211, 213, 346, 354, 484, 487, 490, 494, 496, 503], "packbit": [0, 3, 8], "packg": 494, "pad": [8, 61, 98, 99, 100, 102, 103, 104, 105, 107, 108, 110, 111, 113, 344, 449], "pade": 171, "page": [362, 477, 491], "pair": [87, 98, 99, 100, 102, 103, 104, 105, 107, 108, 109, 110, 111, 112, 113, 122], "pairwis": 486, "pairwise_dist": 486, "paper": [211, 213, 346, 354, 483], "parallel": [29, 30, 70, 71, 98, 99, 100, 102, 103, 104, 105, 107, 108, 109, 110, 111, 112, 113, 167, 168, 169, 170, 176, 205, 206, 478, 489, 494, 502, 503], "param": 190, "paramet": [1, 2, 6, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 266, 277, 285, 292, 293, 294, 297, 298, 301, 316, 318, 327, 328, 329, 332, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 383, 384, 385, 386, 387, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 444, 445, 446, 447, 448, 449, 450, 451, 452, 454, 455, 456, 457, 480, 501, 502, 503], "parameter": [357, 358, 360, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 386, 391, 392, 393, 394, 395, 396, 397, 398], "parenthes": 173, "pareto": [0, 3, 8], "parse_arg": [502, 503], "parser": [502, 503], "part": [18, 57, 142, 149, 150, 156, 157, 167, 168, 169, 170, 199, 300, 314, 401, 402, 412, 422, 477, 502], "parti": 492, "partial": [98, 99, 100, 102, 103, 104, 105, 107, 108, 109, 110, 111, 112, 113, 195, 209, 487, 502, 503], "particular": 493, "particularli": 503, "partit": [0, 3, 8, 31, 70, 275, 489, 496, 502, 503], "pass": [14, 16, 17, 18, 19, 34, 48, 137, 159, 179, 191, 194, 202, 207, 210, 212, 277, 350, 361, 429, 439, 478, 480, 496, 500, 502, 503], "past": 503, "patch": 499, "path": [87, 179, 292, 328, 478], "pathlib": [179, 292, 328], "pathlik": 179, "pattern": [41, 469, 501, 502], "pcg64": [3, 8], "pcg64dxsm": [3, 8], "pcolor": 488, "pdf": [393, 481], "peak": [368, 393], "peebl": [362, 375], "pend": [34, 436], "pentadiagon": 483, "per": [469, 478, 480, 484, 489, 502, 503], "percent": 376, "percentag": [469, 490, 498, 503], "percentil": [0, 3, 8, 211], "perform": [14, 19, 31, 41, 54, 55, 61, 80, 86, 99, 100, 104, 105, 110, 113, 117, 143, 166, 171, 191, 194, 208, 214, 298, 350, 352, 410, 429, 451, 452, 481, 482, 484, 487, 489, 490, 497, 500, 502, 503], "performa": 503, "perhap": 81, "period": 483, "perlmutt": [502, 503], "permiss": [54, 481, 482, 488, 493], "permit": [477, 484, 493, 501], "permut": [3, 8, 332, 438], "permute_dim": [3, 8], "perpendicular": 69, "person": [477, 493], "peyton": 362, "pg": 174, "phase": 503, "philox": [3, 8], "pi": [18, 395, 481, 483, 489], "pick": [478, 484], "pickl": [179, 261, 266, 292, 293], "piec": [502, 503], "piecewis": [3, 8], "pil": [484, 503], "pillow": 503, "pin": 490, "pinv": [3, 8], "pip": 492, "pipe": 498, "pixel": [85, 139, 413, 454, 488], "place": [0, 3, 8, 14, 15, 16, 17, 19, 55, 58, 64, 70, 71, 74, 93, 114, 144, 146, 194, 195, 202, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 310, 321, 332, 346, 350, 351, 352, 354, 406, 409, 412, 427, 429, 431, 437, 451, 465, 494], "plai": 503, "plain": [469, 480, 482], "plan": 480, "plane": [18, 411], "platform": [70, 71, 205, 206, 212, 214, 350, 383, 402, 429, 492], "pleas": [36, 84, 138, 196, 443, 453, 477, 487, 490, 492, 494, 502], "plot": [481, 483, 484, 486, 503], "plt": [481, 483, 484, 486, 488, 503], "plu": [182, 502], "png": [484, 503], "point": [21, 42, 47, 70, 71, 83, 86, 98, 102, 103, 107, 108, 110, 111, 130, 133, 134, 136, 148, 160, 172, 192, 194, 202, 205, 206, 208, 288, 316, 338, 381, 394, 412, 414, 435, 467, 469, 478, 482, 483, 486, 489, 495, 502, 503], "poisson": [0, 3, 8, 362], "poisson_process": 362, "poli": [3, 8], "poly1d": [3, 8], "polyadd": [3, 8], "polyd": [3, 8], "polydiv": [3, 8], "polyfit": [3, 8], "polyint": [3, 8], "polymul": [3, 8], "polynomi": 410, "polysub": [3, 8], "polyv": [3, 8], "pool": 490, "popul": 379, "port": [382, 489], "portion": [493, 502, 503], "posinf": 202, "posit": [0, 3, 8, 15, 18, 21, 43, 54, 78, 79, 93, 96, 103, 104, 105, 108, 120, 152, 155, 166, 172, 200, 202, 323, 357, 365, 368, 376, 378, 381, 409, 412, 415, 437, 482, 503], "possess": [6, 285], "possibl": [12, 13, 22, 23, 24, 25, 26, 27, 28, 39, 40, 44, 45, 46, 47, 52, 53, 59, 60, 63, 65, 66, 72, 73, 82, 87, 90, 91, 92, 94, 97, 120, 121, 122, 123, 124, 125, 126, 129, 131, 132, 135, 137, 140, 147, 151, 152, 153, 161, 162, 163, 164, 165, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 191, 193, 197, 198, 199, 201, 277, 295, 337, 338, 340, 348, 349, 355, 356, 403, 404, 406, 407, 408, 417, 418, 419, 420, 423, 424, 425, 428, 433, 434, 438, 446, 447, 477, 480, 490, 493, 494, 496, 501, 504], "possibli": [329, 495], "post": 490, "potenti": [288, 495, 501], "pow": [3, 8, 260], "power": [0, 3, 8, 120, 172, 190, 503], "pp": [211, 213, 346, 354, 375], "pr": 477, "practic": [490, 500], "pre": [34, 436, 477, 478], "precis": [41, 68, 70, 71, 86, 120, 191, 205, 206, 212, 214, 320, 328, 329, 350, 383, 429, 437, 469, 495, 502, 503], "predict": 489, "prefer": [83, 490], "preload": 469, "preload_cudalib": 458, "prepar": 502, "prepend": [48, 80, 144, 192, 436], "prescrib": 490, "present": [16, 17, 83, 143, 145, 207, 210, 435, 452], "preserv": [14, 19, 34, 38, 39, 40, 55, 57, 64, 80, 86, 117, 118, 119, 168, 170, 192, 195, 209, 277, 298, 316, 335, 414, 437], "press": 174, "pressur": 277, "prevent": [477, 502, 503], "previou": [41, 477, 502], "previous": [295, 503], "price": [485, 503], "primarili": 48, "principl": [362, 375], "print": [81, 402, 469, 480, 481, 482, 483, 486, 487, 488, 498, 502, 503, 504], "printabl": 87, "printopt": [3, 8], "prior": [80, 478, 493, 503], "prior_distance_sum": 486, "privileg": 502, "probabl": [2, 68, 135, 136, 137, 195, 209, 357, 358, 362, 363, 365, 372, 375, 393, 395, 398], "problem": [328, 477, 487, 489, 490, 496, 500, 501, 503], "proc": 490, "proce": 503, "process": [42, 166, 362, 479, 490, 501, 502, 503], "processor": [480, 489, 490, 501, 503], "procur": 493, "prod": [0, 3, 8, 212, 320], "produc": [6, 295, 327, 328, 352, 432, 488, 495, 502, 503], "product": [69, 70, 83, 87, 145, 159, 173, 192, 205, 212, 214, 290, 311, 320, 343, 350, 435, 452, 467, 482, 489, 491, 493, 503], "product_along_axi": 350, "prof": 489, "profil": 483, "profit": 493, "program": [478, 489, 490, 491, 494, 499, 502, 503, 504], "project": [458, 477, 481, 492], "promot": [115, 120, 192, 436, 493, 502], "prone": [489, 503], "propag": [70, 71, 205, 206, 495], "proper": [467, 489, 502], "properli": [318, 503], "properti": [6, 215, 278, 285, 288, 291, 295, 296, 300, 303, 307, 308, 314, 319, 320, 323, 332, 463], "proport": 398, "propos": 477, "protocol": 439, "prototyp": 89, "provid": [1, 8, 12, 13, 22, 23, 24, 25, 26, 27, 28, 29, 30, 44, 45, 46, 52, 53, 54, 58, 59, 60, 63, 64, 65, 66, 72, 73, 82, 84, 85, 86, 87, 90, 91, 92, 94, 97, 120, 121, 122, 123, 124, 125, 126, 129, 131, 132, 135, 139, 140, 147, 151, 152, 153, 154, 155, 161, 162, 163, 164, 165, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 192, 193, 194, 197, 198, 199, 201, 203, 204, 208, 212, 219, 318, 332, 337, 338, 340, 348, 349, 355, 356, 380, 381, 383, 403, 404, 407, 408, 413, 417, 418, 419, 420, 424, 425, 427, 428, 431, 433, 434, 446, 447, 448, 449, 454, 477, 490, 491, 493, 494, 501, 502, 503], "pseudonym": 477, "ptp": [3, 8], "public": 477, "publish": [490, 493], "pull": [1, 361, 477, 478], "purpos": [174, 493, 502], "put": [0, 3, 8, 347, 352, 353, 481, 502, 503], "put_along_axi": [0, 3, 8], "put_result": 481, "putmask": [0, 3, 8], "pwd": 478, "py": [478, 480, 481, 490, 492, 493, 494, 498, 499, 502, 503, 504], "pyarray_resolvewritebackifcopi": [295, 318], "pypi": 503, "pyplot": [481, 483, 484, 486, 488, 503], "python": [21, 122, 288, 301, 320, 327, 328, 329, 402, 478, 481, 482, 488, 491, 492, 494, 495, 496, 501, 502, 503, 504], "python3": 478, "q": [175, 211, 213, 346, 354], "qo": 503, "qr": [0, 3, 8], "quadrant": 27, "quadrat": 503, "quantil": [0, 3, 8, 211, 213, 346], "quantiti": 503, "queri": [490, 503], "question": [75, 491, 495], "quick": [328, 499], "quickli": [159, 482], "quicksort": [32, 421], "r": [69, 85, 139, 175, 211, 213, 346, 354, 375, 413, 454, 481, 503], "r0": 144, "rad2deg": [0, 3, 8, 73], "radian": [3, 8, 18, 72, 73, 355], "raindrop": 362, "rainstorm": 362, "rais": [14, 16, 17, 19, 41, 43, 48, 54, 57, 64, 69, 79, 81, 114, 120, 167, 168, 169, 170, 172, 174, 175, 176, 177, 179, 194, 195, 203, 204, 207, 209, 210, 211, 212, 213, 279, 295, 312, 326, 346, 349, 350, 351, 354, 360, 378, 400, 410, 423, 426, 429, 431, 437], "ram": 504, "ran": 490, "rand": [0, 3, 8, 503], "randint": [0, 3, 8, 383, 502], "randn": [0, 3, 8, 503], "random": [0, 458, 467, 486, 502, 503], "random_integ": [0, 3, 8], "random_sampl": [0, 3, 8, 382, 385, 387, 394], "random_se": 486, "randomli": [367, 381, 486], "randomst": [3, 8], "ranf": [3, 8], "rang": [18, 21, 54, 81, 135, 136, 137, 196, 351, 371, 376, 431, 467, 486, 487, 488, 489, 496, 501, 502, 503], "rank": [95, 176, 398, 410, 489, 492, 502, 503], "raphson": 485, "rare": 477, "rate": [362, 481, 503], "rather": [21, 79, 295, 496, 501, 502], "ratio": 363, "ration": 467, "ravel": [0, 3, 8, 116, 174, 297], "ravel_multi_index": [0, 3, 8], "raw": 327, "rawdata": 266, "rayleigh": [0, 3, 8], "rbf": 484, "re": [20, 39, 40, 58, 116, 409, 503], "reach": [48, 372, 477], "read": [179, 292, 295, 399, 406, 469, 484, 503], "readi": 477, "readonli": 51, "real": [0, 3, 8, 18, 35, 102, 108, 109, 110, 111, 112, 113, 142, 156, 166, 168, 170, 202, 402, 412, 422, 467, 477, 489], "real_if_clos": [0, 3, 8], "realist": 502, "realli": [98, 103, 108, 109, 111, 112, 477, 501], "realm": 500, "realm_default_arg": 494, "rearrang": 467, "reason": [34, 110, 477], "rebuild": [85, 139, 413, 454], "recarrai": [3, 8], "receiv": [489, 502], "reciproc": [0, 3, 8], "recommend": [2, 54, 496, 500, 503], "reconstruct": 448, "record": [3, 8, 477], "recov": [328, 502], "recreat": 329, "recurs": 80, "recv": 489, "recv_typ": 489, "red": [483, 486], "redistribut": [477, 493], "reduc": [14, 16, 17, 19, 29, 30, 41, 194, 195, 196, 203, 204, 207, 208, 209, 210, 211, 212, 213, 214, 277, 346, 350, 354, 429, 451, 483, 489, 490, 502, 503], "reduct": [14, 19, 211, 213, 346, 354, 451, 500, 502, 503], "reductionarrai": 502, "refer": [14, 19, 36, 49, 51, 70, 71, 84, 96, 99, 100, 104, 105, 110, 113, 138, 154, 155, 174, 194, 196, 205, 206, 208, 211, 213, 219, 271, 272, 273, 274, 275, 276, 279, 280, 281, 282, 283, 289, 290, 295, 304, 305, 306, 309, 310, 311, 312, 313, 315, 321, 322, 323, 324, 325, 326, 331, 333, 334, 346, 350, 354, 362, 375, 396, 399, 406, 412, 429, 439, 443, 451, 453, 486, 489, 490, 491, 492, 501, 502, 503], "referenc": 318, "reflect": [295, 490, 502], "regard": 492, "regardless": [19, 138, 453, 490], "region": 490, "reinterpret": 335, "reject": 477, "rel": [15, 68, 148], "relabel": 486, "relat": [357, 489, 501, 503], "relationship": [68, 396], "releas": [477, 493, 496, 503], "relev": [178, 190, 320, 502], "reli": [61, 410], "reliabl": 502, "remain": [12, 13, 19, 22, 23, 24, 25, 26, 27, 28, 44, 45, 46, 52, 53, 59, 60, 63, 65, 66, 72, 73, 82, 90, 91, 92, 94, 97, 113, 120, 121, 122, 123, 124, 125, 126, 129, 131, 132, 135, 140, 147, 151, 152, 153, 161, 162, 163, 164, 165, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 193, 197, 198, 199, 200, 201, 211, 213, 295, 337, 338, 340, 346, 348, 349, 354, 355, 356, 376, 403, 404, 406, 407, 408, 417, 418, 419, 420, 424, 425, 428, 433, 434, 446, 447, 502], "remaind": [0, 3, 8, 122, 125, 198], "remot": 503, "remov": [29, 30, 74, 79, 93, 192, 203, 204, 207, 322, 350, 426, 429, 437, 467, 489, 495], "reopen": 477, "reorder": [117, 200, 298], "rep": 436, "repeat": [0, 3, 8, 68, 99, 100, 104, 105, 110, 114, 167, 168, 169, 170, 172, 196, 347, 351, 353, 436, 503], "repeated_arrai": 405, "repeatedli": [488, 503], "repetit": [405, 436], "replac": [55, 202, 205, 206, 312, 351, 431, 482, 490, 491, 502, 503, 504], "replic": 436, "repo": 477, "report": 469, "report_coverag": 458, "report_dump_callstack": 458, "report_dump_csv": 458, "repositori": [477, 489], "repr": 262, "repres": [41, 68, 86, 103, 144, 154, 155, 196, 344, 368, 449, 451, 483, 484, 486, 489, 490, 495, 502], "represent": [87, 144, 202, 465], "reproduc": [486, 493], "req": 489, "request": [37, 362, 377, 477, 486, 489, 490], "requir": [3, 8, 34, 179, 202, 469, 478, 479, 481, 482, 488, 489, 490, 492, 494, 498, 500, 501, 502], "requri": 503, "res2": [39, 40], "rese": 388, "research": [481, 489, 502, 503], "resembl": 392, "reserv": [480, 490, 493, 503], "reset": 6, "reshap": [0, 3, 8, 85, 93, 319, 332, 413, 454, 490, 495], "reshaped_arrai": 406, "resid": 192, "resiz": [3, 8, 93, 503], "resolut": [483, 489], "resourc": [481, 490, 500, 502, 504], "respect": [61, 130, 192, 318, 483, 490, 503], "respons": [477, 489, 503], "rest": 36, "restor": 409, "restrict": [493, 494], "result": [6, 12, 13, 14, 16, 17, 18, 19, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 34, 41, 43, 44, 45, 46, 52, 53, 54, 55, 58, 59, 60, 63, 65, 66, 68, 70, 71, 72, 73, 75, 79, 80, 81, 82, 87, 89, 90, 91, 92, 93, 94, 95, 97, 109, 112, 115, 120, 121, 122, 123, 124, 125, 126, 128, 129, 131, 132, 135, 137, 140, 143, 144, 145, 147, 151, 152, 153, 154, 155, 161, 162, 163, 164, 165, 167, 169, 174, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 277, 316, 328, 335, 337, 338, 340, 342, 343, 344, 345, 346, 348, 349, 350, 352, 354, 355, 356, 360, 380, 383, 384, 385, 387, 392, 403, 404, 406, 407, 408, 412, 414, 417, 418, 419, 420, 421, 423, 424, 425, 427, 428, 429, 431, 432, 433, 434, 435, 436, 437, 439, 446, 447, 448, 451, 452, 457, 469, 480, 481, 482, 483, 488, 489, 495, 496, 502, 503], "result_typ": [3, 8, 481], "ret": 38, "retain": [12, 13, 22, 23, 24, 25, 26, 27, 28, 44, 45, 46, 52, 53, 59, 60, 63, 65, 66, 72, 73, 82, 90, 91, 92, 94, 97, 120, 121, 122, 123, 124, 125, 126, 129, 131, 132, 140, 147, 151, 152, 153, 161, 162, 163, 164, 165, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 193, 197, 198, 199, 201, 337, 338, 340, 348, 349, 355, 356, 403, 404, 407, 408, 417, 418, 419, 420, 424, 425, 428, 433, 434, 446, 447, 493], "retstep": 178, "return": [2, 6, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 216, 217, 218, 219, 220, 222, 223, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 258, 259, 260, 262, 263, 264, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 280, 281, 283, 285, 289, 290, 293, 296, 297, 298, 301, 304, 305, 306, 309, 311, 313, 315, 316, 320, 324, 325, 327, 329, 330, 331, 332, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 348, 349, 350, 352, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 454, 455, 456, 457, 465, 481, 482, 484, 486, 487, 488, 490, 500, 502, 503], "return_count": 448, "return_index": 448, "return_invers": 448, "retval": 41, "revers": [81, 117, 118, 119, 298, 332, 344, 399, 411, 438, 449], "review": [479, 490, 492], "rf": 503, "rfft": [0, 3, 8, 108, 113], "rfft2": [0, 3, 8, 109], "rfftfreq": [3, 8], "rfftn": [0, 3, 8, 110, 111, 112], "rh": [290, 483], "richer": 502, "right": [55, 57, 79, 81, 118, 140, 167, 168, 316, 393, 407, 414, 437, 477, 483, 489, 492, 493], "right_shift": [0, 3, 8], "rightmost": [135, 136], "rint": [0, 3, 8], "rippl": 42, "risk": [481, 489, 492, 503], "river": 489, "rk_hypergeometric_hrua": 493, "rk_hypergeometric_hyp": 493, "rk_triangular": 493, "rm": 503, "rn": 144, "rng": 486, "rober": 503, "robert": 493, "roll": [0, 3, 8], "rollaxi": [3, 8], "root": [0, 3, 8, 52, 424, 478], "rot90": [0, 3, 8], "rotat": 411, "roughli": 503, "round": [0, 21, 394, 408, 467], "rounded_arrai": 412, "roundoff": 122, "routin": [458, 465, 469, 478, 502], "row": [34, 68, 96, 118, 119, 137, 141, 173, 297, 323, 399, 413, 439, 441, 450, 453, 454, 484, 489, 502, 503], "row_stack": [3, 8], "rowvar": 68, "rsqrt2pi": 481, "rst": 323, "rt": [502, 503], "rtol": [15, 148], "rule": [21, 41, 48, 64, 115, 376, 496], "run": [191, 365, 477, 478, 479, 488, 490, 491, 492, 494, 498, 499, 500, 501, 504], "run_kmean": 486, "runfil": 503, "runtim": [207, 210, 469, 480, 489, 490, 494, 496, 499, 501, 502, 504], "runtimeerror": 295, "runtimewarn": [481, 487, 490], "rv": 493, "s0": 503, "s_0": 503, "s_0n": 503, "safe": [58, 64, 86, 179, 192, 277, 502], "sai": [490, 496], "salloc": 503, "same": [14, 15, 16, 17, 19, 20, 29, 30, 31, 32, 34, 35, 41, 43, 48, 54, 56, 58, 61, 68, 70, 71, 79, 80, 81, 85, 89, 95, 103, 104, 105, 110, 128, 130, 135, 139, 154, 155, 156, 172, 173, 194, 195, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 277, 291, 315, 316, 320, 323, 330, 332, 335, 342, 344, 345, 346, 347, 350, 353, 354, 399, 405, 409, 412, 413, 414, 415, 421, 422, 427, 429, 431, 435, 437, 440, 442, 445, 449, 450, 451, 454, 457, 477, 481, 482, 484, 486, 487, 488, 490, 492, 499, 501, 502, 503], "same_kind": [12, 13, 22, 23, 24, 25, 26, 27, 28, 44, 45, 46, 52, 53, 58, 59, 60, 63, 64, 65, 66, 72, 73, 82, 86, 90, 91, 92, 94, 97, 120, 121, 122, 123, 124, 125, 126, 129, 131, 132, 140, 147, 151, 152, 153, 161, 162, 163, 164, 165, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 192, 193, 197, 198, 199, 201, 277, 337, 338, 340, 348, 349, 355, 356, 403, 404, 407, 408, 417, 418, 419, 420, 424, 425, 428, 433, 434, 446, 447], "sampl": [42, 47, 68, 106, 130, 133, 135, 136, 137, 160, 178, 190, 211, 213, 346, 354, 357, 358, 360, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 383, 384, 385, 386, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 458, 467], "sample_count": [136, 137], "satisfi": [34, 81, 95, 277, 398, 415, 487, 490, 501], "save": [3, 8, 195, 209, 211, 213, 346, 354, 469, 477, 483, 498], "savetxt": [3, 8], "savez": [3, 8], "savez_compress": [3, 8], "saxpi": 500, "saxpy_task": 502, "scalabl": [489, 490, 501, 503], "scalar": [12, 13, 15, 16, 17, 18, 22, 23, 24, 25, 26, 27, 28, 35, 38, 44, 45, 46, 48, 52, 53, 55, 59, 60, 63, 65, 66, 69, 72, 73, 80, 82, 83, 90, 91, 92, 94, 97, 114, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 135, 140, 142, 145, 147, 148, 151, 152, 153, 158, 161, 162, 163, 164, 165, 176, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 191, 192, 193, 196, 197, 198, 199, 201, 207, 210, 211, 212, 213, 214, 294, 301, 316, 329, 336, 337, 338, 340, 346, 348, 349, 350, 354, 355, 356, 357, 358, 360, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 386, 389, 391, 392, 393, 394, 395, 396, 397, 398, 401, 403, 404, 407, 408, 414, 415, 417, 418, 419, 420, 424, 425, 428, 429, 431, 433, 434, 435, 446, 447, 465, 500, 501, 502], "scale": [87, 98, 99, 100, 102, 103, 104, 105, 107, 108, 109, 110, 111, 112, 113, 190, 362, 364, 366, 368, 369, 375, 376, 386, 390, 391, 396, 397, 484, 489, 490, 491, 501, 502, 503], "scatter": [486, 503], "scenario": 502, "schedul": [481, 482, 488, 490], "scheme": 485, "schole": [485, 492], "scientif": [489, 490, 503], "scientist": 489, "scikit": 478, "scipi": [171, 376, 484, 503], "scope": 500, "scp": 503, "script": [478, 480, 490, 494, 499, 502, 504], "seamlessli": [490, 502], "search": [87, 458, 467, 491], "searchsort": [0, 3, 8, 81], "second": [41, 48, 61, 69, 79, 83, 85, 87, 104, 105, 120, 130, 135, 136, 138, 139, 143, 154, 155, 191, 192, 196, 343, 349, 411, 413, 422, 430, 435, 437, 452, 454, 483, 501, 502, 503], "second_cond": 501, "section": [34, 36, 100, 105, 110, 113, 490, 502, 503], "secur": [179, 503], "see": [12, 13, 15, 16, 17, 22, 23, 24, 25, 26, 27, 28, 34, 44, 45, 46, 48, 52, 53, 55, 59, 60, 63, 65, 66, 68, 70, 71, 72, 73, 75, 77, 82, 86, 90, 91, 92, 94, 97, 98, 99, 100, 102, 103, 104, 105, 107, 108, 109, 110, 111, 112, 113, 120, 121, 122, 123, 124, 125, 126, 129, 131, 132, 135, 137, 140, 147, 148, 151, 152, 153, 161, 162, 163, 164, 165, 174, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 193, 196, 197, 198, 199, 201, 205, 206, 207, 210, 212, 214, 277, 285, 318, 332, 337, 338, 340, 348, 349, 350, 355, 356, 380, 383, 403, 404, 407, 408, 417, 418, 419, 420, 424, 425, 428, 429, 433, 434, 441, 442, 444, 445, 446, 447, 448, 451, 463, 465, 478, 480, 481, 482, 483, 484, 487, 488, 490, 492, 493, 494, 495, 501, 502, 503, 504], "seed": [0, 1, 3, 8, 361, 467, 486], "seedsequ": [3, 8], "seek": [179, 487], "seem": 477, "seen": 357, "segment": 295, "seldom": 120, "select": [0, 3, 8, 16, 17, 57, 64, 143, 173, 207, 281, 367, 426, 431, 451, 486, 489, 502, 503, 504], "selectkind": [31, 345], "selector": 171, "self": [6, 215, 216, 217, 218, 219, 220, 222, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 258, 259, 260, 262, 263, 264, 265, 267, 268, 269, 270, 281, 295], "sell": 493, "semant": [135, 137], "send": 489, "send_typ": 489, "sens": [85, 139, 413, 454, 495], "sep": 328, "separ": [86, 202, 328, 412, 478, 480, 492, 494, 498, 501, 503], "sequenc": [18, 31, 34, 39, 40, 48, 50, 54, 56, 58, 85, 87, 99, 100, 104, 105, 109, 110, 112, 113, 135, 136, 137, 139, 144, 146, 159, 173, 178, 190, 195, 200, 209, 211, 213, 266, 345, 346, 347, 354, 377, 411, 413, 415, 427, 435, 436, 454, 496, 502], "seri": 371, "serial": 478, "servic": [480, 493], "session": 503, "set": [12, 13, 14, 16, 17, 19, 22, 23, 24, 25, 26, 27, 28, 29, 30, 41, 44, 45, 46, 52, 53, 59, 60, 63, 65, 66, 68, 72, 73, 76, 78, 82, 90, 91, 92, 94, 97, 120, 121, 122, 123, 124, 125, 126, 129, 131, 132, 140, 141, 147, 151, 152, 153, 161, 162, 163, 164, 165, 174, 178, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 193, 194, 195, 197, 198, 199, 201, 203, 204, 207, 208, 209, 210, 211, 212, 213, 214, 265, 277, 279, 295, 318, 319, 335, 337, 338, 340, 346, 348, 349, 350, 353, 354, 355, 356, 367, 376, 403, 404, 407, 408, 417, 418, 419, 420, 424, 425, 428, 429, 433, 434, 446, 447, 451, 458, 467, 477, 478, 483, 487, 489, 490, 495, 496, 501, 502, 503], "set_bit_gener": [3, 8], "set_devic": 489, "set_printopt": [3, 8], "set_stat": [3, 8], "set_titl": [484, 503], "set_xtick": [484, 503], "set_ytick": [484, 503], "setbufs": [3, 8], "setdevic": 489, "setdiff1d": [3, 8], "seterr": [3, 8], "seterrcal": [3, 8], "setfield": [0, 8], "setflag": [0, 8, 295], "setup": [487, 502], "setxor1d": [3, 8], "sever": [478, 490, 503], "sfc64": [3, 8], "sh": [478, 503], "shall": 493, "shallow": 489, "shape": [0, 2, 3, 4, 6, 8, 12, 13, 14, 16, 17, 19, 20, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 40, 41, 43, 44, 45, 46, 48, 50, 51, 52, 53, 54, 55, 57, 58, 59, 60, 63, 65, 66, 70, 71, 72, 73, 76, 79, 80, 81, 82, 83, 85, 88, 89, 90, 91, 92, 93, 94, 96, 97, 99, 100, 101, 104, 105, 106, 109, 110, 112, 113, 117, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 135, 136, 139, 140, 144, 145, 146, 147, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 171, 172, 173, 176, 177, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 191, 192, 193, 194, 195, 196, 197, 198, 199, 201, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 266, 277, 285, 295, 298, 315, 316, 320, 332, 336, 337, 338, 340, 341, 342, 344, 345, 346, 348, 349, 350, 352, 353, 354, 355, 356, 357, 358, 360, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 383, 384, 385, 386, 387, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 403, 404, 405, 406, 407, 408, 409, 412, 413, 414, 417, 418, 419, 420, 421, 422, 424, 425, 426, 427, 428, 429, 431, 433, 434, 435, 436, 437, 439, 440, 445, 446, 447, 449, 450, 451, 452, 454, 455, 456, 457, 467, 482, 486, 500, 501, 502, 503], "share": [285, 489, 490, 503], "shares_memori": [3, 8], "sharp": 503, "sharper": 368, "shift": [101, 106, 163, 376, 407, 409], "short": [3, 8, 295, 327, 502], "shorter": [102, 108, 351], "should": [29, 30, 34, 36, 48, 54, 64, 68, 79, 80, 86, 87, 103, 104, 105, 110, 146, 159, 192, 200, 203, 204, 277, 344, 406, 431, 437, 449, 450, 452, 469, 481, 482, 483, 488, 496, 501, 502, 503], "show": [327, 478, 483, 486, 498, 502, 503], "show_config": [3, 8], "show_runtim": [3, 8], "showcas": 503, "shown": [483, 487, 499, 501, 503], "shuffl": [3, 8], "side": [81, 130, 316, 414, 483, 489], "sigma": [370, 503], "sign": [0, 3, 8, 15, 54, 63, 214, 350, 380, 383, 429], "signal": [42, 102, 107, 362, 375, 484, 502, 503], "signatur": [191, 192, 477], "signbit": [0, 3, 8], "signedinteg": [3, 8], "signific": 489, "significantli": [481, 487, 489, 490, 502, 503], "signoff": 477, "similar": [34, 42, 191, 301, 368, 495, 496, 502, 503], "similarli": 489, "simpl": [68, 86, 329, 467, 482, 489, 500, 503, 504], "simple_in_out": 502, "simple_mm": 503, "simpler": [490, 502, 503], "simplest": 480, "simpli": [135, 332, 477, 478, 503], "simplic": 502, "simplifi": [285, 376, 489, 503], "simul": 489, "simultan": [295, 409], "sin": [0, 3, 8, 483], "sinc": [3, 8, 108, 298, 329, 352, 483, 484, 490, 495, 501, 502, 503], "sine": [24, 25, 419, 420, 483], "sing": 174, "singl": [2, 3, 8, 14, 16, 17, 19, 41, 48, 49, 50, 51, 56, 68, 87, 117, 118, 119, 130, 148, 173, 175, 176, 177, 179, 194, 196, 207, 208, 211, 213, 214, 292, 295, 296, 298, 301, 310, 318, 328, 346, 350, 354, 357, 358, 360, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 383, 384, 385, 386, 387, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 410, 411, 426, 429, 435, 451, 469, 487, 490, 491, 501, 502], "singleton": 93, "singular": [174, 176, 177], "sinh": [0, 3, 8], "site": 498, "situat": [362, 477, 490], "sixth": 483, "size": [2, 6, 14, 16, 17, 19, 21, 29, 30, 36, 41, 43, 48, 57, 61, 70, 71, 76, 79, 81, 87, 95, 130, 174, 178, 179, 190, 191, 194, 195, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 301, 303, 328, 346, 347, 350, 353, 354, 357, 358, 360, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 380, 382, 383, 384, 385, 386, 387, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 409, 429, 444, 449, 451, 469, 483, 489, 490, 496, 502, 503], "skbuild_build_opt": 478, "skip": 323, "slice": [16, 17, 57, 74, 146, 171, 203, 204, 205, 206, 207, 210, 212, 214, 281, 295, 352, 432, 469, 483, 489, 502], "slide": 503, "slightli": [47, 171], "slogdet": [3, 8], "slower": 501, "slowest": [399, 406], "small": [15, 171, 202, 488, 490, 496, 499, 501, 502], "smaller": [55, 68, 80, 98, 99, 100, 103, 104, 105, 107, 110, 111, 113, 122, 135, 195, 209, 211, 213, 346, 347, 353, 354, 469], "smallest": [174, 376], "smi": 490, "snippet": [196, 489], "so": [19, 48, 80, 120, 122, 135, 146, 157, 178, 196, 295, 318, 328, 344, 436, 486, 493, 501, 502, 503], "sobel": [484, 503], "sobol": 484, "softwar": [481, 482, 488, 490, 492, 493], "solut": [176, 483, 487, 489], "solv": [0, 3, 8, 467, 483, 487, 489, 503], "solver": 489, "some": [21, 34, 95, 278, 295, 318, 328, 396, 455, 469, 477, 478, 482, 488, 490, 495, 496, 501, 503], "somebodi": 477, "sometim": [329, 364, 391, 495], "soon": 477, "sort": [0, 8, 32, 143, 177, 195, 209, 211, 213, 276, 316, 345, 346, 354, 414, 422, 423, 432, 448, 458, 467, 503], "sort_complex": [0, 3, 8], "sorter": [316, 414], "sortsid": 414, "sorttyp": [32, 421], "sound": 502, "sourc": [200, 431, 432, 477, 479, 489, 493, 499, 502, 503], "south": [488, 503], "space": [3, 8, 21, 101, 130, 137, 178, 190, 469, 483], "sparingli": 501, "spars": [144, 196], "speak": 174, "spec": 490, "special": [7, 357, 392, 399, 489, 493], "specif": [2, 83, 137, 469, 481, 482, 488, 489, 493, 502, 503], "specifi": [14, 19, 20, 21, 29, 30, 31, 32, 34, 41, 43, 54, 55, 58, 68, 70, 71, 74, 79, 86, 87, 98, 99, 100, 102, 103, 104, 105, 107, 108, 110, 111, 113, 117, 130, 136, 168, 170, 174, 178, 192, 194, 195, 203, 204, 205, 206, 207, 208, 209, 211, 212, 213, 214, 277, 289, 292, 298, 301, 312, 335, 346, 350, 351, 352, 354, 358, 363, 364, 366, 367, 368, 369, 370, 371, 372, 374, 376, 380, 391, 395, 398, 399, 411, 412, 427, 429, 431, 432, 435, 437, 448, 449, 451, 469, 480, 486, 487, 490, 494, 498, 502, 503], "spectral": 483, "spectrum": [101, 102], "speed": [143, 301, 328], "speedup": 502, "spelt": 48, "spent": 496, "split": [0, 3, 8, 36, 84, 138, 453, 467, 502], "spread": [375, 451, 503], "sqrt": [0, 3, 8, 481, 484, 503], "sqrt_t": 481, "squar": [0, 3, 8, 141, 166, 167, 168, 169, 170, 172, 176, 191, 360, 363, 373, 374, 424, 486], "squeez": [0, 3, 8, 93], "src": [64, 502], "srun": [494, 502, 503], "ssh": 503, "stabl": [32, 171, 421], "stack": [0, 3, 8, 56, 85, 139, 192, 413, 454, 469, 490], "stackoverflow": 495, "stage": 479, "standard": [301, 320, 332, 360, 370, 375, 376, 381, 389, 390, 391, 392, 465, 467, 477, 481, 482, 488, 494, 496, 499, 503], "standard_cauchi": [0, 3, 8], "standard_exponenti": [0, 3, 8], "standard_gamma": [0, 3, 8], "standard_norm": [3, 8, 392], "standard_t": [0, 3, 8], "start": [21, 87, 103, 178, 190, 212, 214, 288, 350, 429, 477, 480, 481, 482, 483, 488, 489, 496, 501, 502, 503], "start_tim": 503, "startup": 502, "state": [266, 384, 385, 387, 467], "statement": [484, 487, 495, 501, 504], "statist": [211, 213, 346, 354, 357, 458, 467, 502], "statistician": [211, 213, 346, 354], "std": [3, 8], "stdout": [469, 480], "stecil": 483, "stegun": 481, "stencil": [483, 485, 489], "step": [21, 87, 178, 190, 323, 477, 478, 489, 495, 496, 501, 503], "stephen": 493, "still": [41, 174, 196, 502, 503], "stock": [481, 503], "stoke": 489, "stop": [21, 178, 190, 481, 482, 488, 501, 503], "storag": 328, "store": [12, 13, 22, 23, 24, 25, 26, 27, 28, 44, 45, 46, 52, 53, 59, 60, 63, 65, 66, 72, 73, 82, 90, 91, 92, 94, 97, 120, 121, 122, 123, 124, 125, 126, 129, 131, 132, 140, 147, 151, 152, 153, 154, 155, 161, 162, 163, 164, 165, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 192, 193, 197, 198, 199, 201, 323, 337, 338, 340, 343, 348, 349, 355, 356, 403, 404, 407, 408, 417, 418, 419, 420, 424, 425, 428, 433, 434, 446, 447, 483, 502, 503], "str": [12, 13, 22, 23, 24, 25, 26, 27, 28, 31, 32, 44, 45, 46, 52, 53, 58, 59, 60, 63, 65, 66, 72, 73, 82, 86, 87, 90, 91, 92, 94, 97, 98, 99, 100, 102, 103, 104, 105, 107, 108, 109, 110, 111, 112, 113, 120, 121, 122, 123, 124, 125, 126, 129, 131, 132, 140, 147, 151, 152, 153, 161, 162, 163, 164, 165, 168, 170, 171, 174, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 193, 196, 197, 198, 199, 201, 211, 213, 266, 267, 277, 292, 312, 328, 330, 337, 338, 340, 345, 346, 348, 349, 351, 354, 355, 356, 403, 404, 407, 408, 417, 418, 419, 420, 421, 424, 425, 428, 433, 434, 446, 447, 469, 484, 486, 502, 503], "str_": [3, 8], "straightforward": [501, 503], "strategi": [469, 503], "stream": 1, "streamlin": 503, "strict": [469, 493], "strictli": 174, "stride": [4, 285, 295, 318, 399, 478], "strike": [481, 503], "string": [61, 171, 179, 196, 266, 292, 293, 295, 318, 328, 359, 465, 478], "string_repr": 87, "strong": 477, "structur": [448, 489, 496, 501, 502, 503], "student": 392, "studi": [396, 485], "style": [295, 297, 399, 450], "sub": [14, 16, 17, 19, 34, 36, 74, 79, 84, 138, 194, 207, 210, 212, 277, 335, 350, 423, 429, 437, 439, 453], "subarrai": [74, 144, 448], "subdomain": 489, "subgrid": 489, "subject": 493, "sublicens": 493, "submit": 477, "subok": [34, 49, 51, 277], "subplot": [484, 503], "subscript": [86, 87], "subsequ": 295, "subset": [367, 426, 496], "substanti": [489, 493], "substitut": [487, 493], "subtract": [0, 3, 8, 501], "subtyp": 399, "succe": 501, "success": [358, 365, 372], "suffici": 502, "suggest": [320, 477, 490, 503], "suit": [480, 503], "suitabl": [301, 316, 332, 352, 414, 432, 502, 503], "sum": [0, 3, 8, 41, 61, 71, 83, 103, 135, 136, 137, 145, 174, 184, 185, 206, 212, 214, 323, 331, 360, 367, 374, 435, 437, 467, 486, 487, 502, 503], "sum_": 174, "sum_along_axi": 429, "sum_along_diagon": 437, "sum_of_weight": 41, "summar": [211, 213, 346, 354], "summari": [3, 8, 480], "summat": [47, 86, 87], "supercomput": 502, "supercomputerloc": 503, "superpod": 491, "suppli": [154, 155, 171, 173, 381], "support": [31, 32, 61, 81, 83, 86, 175, 177, 179, 192, 196, 295, 328, 335, 345, 352, 365, 405, 409, 410, 421, 435, 439, 448, 478, 484, 492, 494, 500, 503], "suppos": 54, "sure": [486, 496, 502], "surfac": 489, "surpris": 80, "surround": 489, "svd": [0, 8], "svdval": 8, "swap": [61, 101], "swapax": [0, 3, 8], "switch": 487, "symmetr": [108, 166, 503], "symmetri": [102, 107], "synchron": [489, 502, 503], "syntax": 502, "sysmem": 503, "system": [176, 191, 483, 487, 489, 490, 492, 495, 502, 503], "system_mem": 490, "t": [68, 81, 117, 118, 119, 295, 332, 351, 357, 392, 439, 463, 480, 481, 482, 486, 495, 501, 502, 503], "tabl": [143, 174, 398], "tack": 477, "tackl": [489, 503], "tail": 368, "take": [0, 2, 3, 8, 56, 57, 159, 191, 347, 352, 399, 406, 432, 469, 477, 490, 502, 503], "take_along_axi": [0, 3, 8], "take_default": 458, "taken": [41, 54, 79, 80, 87, 102, 108, 110, 112, 113, 194, 208, 367, 415, 437, 439, 441, 444, 452, 484, 496], "tall": 114, "talli": 136, "tan": [0, 3, 8], "tangent": [26, 27, 28, 433, 434], "tanh": [0, 3, 8], "taper": [42, 47, 133, 134, 160], "target": [351, 353, 478, 502], "task": [469, 481, 482, 488, 489, 496, 500, 503], "taskcontext": 502, "tasktarget": 494, "taylor": 171, "tdma": 483, "teach": [483, 486, 487, 502], "technic": 490, "techniqu": 503, "tell": [323, 490], "templat": 503, "temporari": 469, "tend": 496, "tensor": [87, 435, 469, 478], "tensordot": [0, 3, 8], "tensorinv": [3, 8], "tensorsolv": [3, 8], "term": [47, 83, 87, 103, 104, 105, 108, 145, 192, 435, 452, 483, 492], "termin": [480, 487, 503], "test": [0, 14, 19, 143, 148, 149, 151, 152, 153, 154, 155, 295, 360, 363, 458, 467, 479, 486, 488, 489, 498, 499], "test_view": 480, "test_vstack": 480, "test_wher": 480, "test_window": 480, "testsystem": 480, "text": [328, 477], "tf32": 469, "th": [75, 78, 80, 96, 130, 144, 211, 213, 332, 346, 354, 415, 440, 443], "than": [21, 43, 47, 49, 51, 54, 55, 57, 61, 70, 71, 79, 83, 84, 98, 99, 100, 102, 103, 104, 105, 107, 108, 110, 111, 113, 114, 118, 119, 135, 145, 171, 192, 195, 196, 205, 206, 209, 211, 212, 213, 214, 346, 347, 350, 351, 353, 354, 363, 367, 376, 393, 394, 398, 418, 426, 427, 429, 435, 437, 449, 452, 469, 482, 487, 495, 496, 501, 502, 503], "thei": [13, 15, 27, 44, 45, 46, 49, 63, 70, 71, 80, 81, 82, 90, 120, 122, 123, 124, 125, 129, 131, 132, 140, 161, 162, 163, 164, 165, 184, 185, 186, 188, 189, 192, 193, 197, 198, 201, 205, 206, 316, 338, 340, 349, 358, 399, 404, 407, 414, 428, 446, 465, 484, 486, 496, 501, 502, 503], "them": [56, 465, 477, 486, 490, 492, 501, 502, 503], "themselv": [285, 483], "theorem": 375, "theoret": 503, "theori": 493, "therefor": [168, 170, 365], "theta": 364, "thi": [12, 13, 14, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 33, 34, 37, 41, 43, 44, 45, 46, 48, 49, 51, 52, 53, 54, 55, 58, 59, 60, 63, 64, 65, 66, 72, 73, 74, 75, 76, 80, 81, 82, 83, 85, 86, 87, 90, 91, 92, 94, 97, 98, 99, 100, 101, 102, 103, 104, 105, 108, 109, 110, 111, 112, 113, 114, 116, 118, 119, 120, 121, 122, 123, 124, 125, 126, 129, 131, 132, 135, 136, 139, 140, 143, 145, 147, 151, 152, 153, 158, 159, 161, 162, 163, 164, 165, 168, 170, 173, 174, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 207, 208, 209, 210, 211, 212, 213, 214, 275, 276, 277, 285, 288, 290, 294, 295, 298, 301, 303, 318, 320, 323, 327, 328, 329, 332, 335, 337, 338, 340, 343, 346, 347, 348, 349, 350, 352, 353, 354, 355, 356, 360, 361, 376, 380, 383, 388, 396, 399, 403, 404, 406, 407, 408, 410, 411, 413, 417, 418, 419, 420, 424, 425, 426, 428, 429, 431, 432, 433, 434, 435, 436, 439, 446, 447, 448, 451, 452, 454, 469, 477, 478, 480, 481, 482, 483, 484, 486, 487, 488, 489, 492, 493, 495, 498, 499, 501, 503, 504], "thing": [431, 477, 482, 502, 503], "think": 477, "third": [69, 84, 85, 139, 413, 435, 454, 492, 501], "those": [55, 61, 68, 74, 172, 352, 489, 495], "though": [43, 410], "thought": 395, "thread": [478, 480, 487, 490, 503], "three": [40, 47, 55, 211, 213, 346, 354, 448, 490, 501, 502], "threshold": 469, "through": [14, 16, 17, 19, 34, 159, 191, 194, 196, 207, 210, 212, 277, 350, 429, 469, 492, 502, 503], "throughout": 489, "thu": [54, 179, 436, 501, 503], "thumb": 496, "tile": [0, 3, 8, 467, 502], "time": [68, 80, 86, 99, 100, 104, 105, 110, 295, 298, 362, 377, 396, 411, 436, 448, 477, 480, 481, 482, 488, 489, 492, 502, 503], "timedelta64": [3, 8], "timer": 496, "timestep": 489, "tini": 375, "titl": [481, 483], "tobyt": [0, 8, 328, 330], "tofil": [0, 3, 8], "togeth": [15, 58, 68, 103, 159, 192, 502], "tol": [402, 487, 501, 503], "toler": [15, 148, 402, 487, 501], "tolist": [0, 3, 8], "too": [42, 81, 431, 490], "took": 503, "tool": [477, 489, 490, 499], "toolkit": [478, 503], "top": [478, 491, 492], "topic": [479, 490, 500], "topographi": 489, "torchsw": 485, "tort": 493, "total": [6, 67, 307, 372, 482, 486, 503], "toward": [135, 338, 411], "trace": [0, 3, 8, 469], "traceback": 469, "tracker": 490, "transfer": [487, 503], "transform": [61, 98, 99, 100, 102, 103, 104, 105, 107, 108, 109, 110, 111, 112, 113, 458, 467, 500, 501], "translat": [383, 483, 501], "transpar": 502, "transport": 328, "transpos": [0, 3, 8, 68, 166, 215, 467, 482], "trapezoid": [3, 8], "trapz": [3, 8], "travers": 323, "treat": [15, 54, 168, 170, 173, 192, 195, 196, 205, 206, 209, 212, 214, 352, 432, 436, 448], "tree": [478, 492], "tri": [0, 3, 8], "trial": [358, 365], "triangl": [140, 439, 440, 441, 442, 443, 444, 445], "triangular": [0, 3, 8, 42, 166, 168, 170, 175, 482], "tridiagon": 483, "trigger": [490, 495], "trigonometr": [22, 26, 419, 467], "tril": [0, 3, 8, 191, 441, 442, 443], "tril_indic": [0, 3, 8, 442], "tril_indices_from": [0, 3, 8], "trim": 449, "trim_zero": [3, 8], "triu": [0, 3, 8, 191, 444, 445], "triu_indic": [0, 3, 8, 445], "triu_indices_from": [0, 3, 8], "trivial": 477, "true": [4, 12, 13, 14, 15, 16, 17, 18, 19, 22, 23, 24, 25, 26, 27, 28, 29, 30, 34, 35, 41, 44, 45, 46, 52, 53, 57, 59, 60, 63, 64, 65, 66, 68, 72, 73, 80, 81, 82, 86, 87, 90, 91, 92, 94, 95, 97, 114, 120, 121, 122, 123, 124, 125, 126, 129, 131, 132, 135, 136, 137, 140, 143, 144, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 161, 162, 163, 164, 165, 171, 174, 177, 178, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 193, 194, 195, 196, 197, 198, 199, 201, 202, 203, 204, 207, 208, 209, 210, 211, 212, 213, 214, 271, 272, 277, 295, 304, 306, 311, 318, 337, 338, 340, 346, 347, 348, 349, 350, 353, 354, 355, 356, 403, 404, 407, 408, 415, 417, 418, 419, 420, 424, 425, 428, 429, 433, 434, 446, 447, 448, 451, 455, 495, 498], "true_divid": [0, 3, 8, 82], "truli": 295, "trunc": [0, 3, 8], "truncat": [57, 98, 99, 100, 102, 103, 104, 105, 107, 108, 110, 111, 113, 358, 447], "trust": [203, 204], "truth": [131, 132, 164, 165, 186, 188, 189, 465, 467], "try": [482, 483, 484, 487, 490, 495, 497, 500, 503], "tup": [56, 85, 139, 413, 454], "tupl": [2, 4, 6, 12, 13, 14, 16, 17, 19, 22, 23, 24, 25, 26, 27, 28, 36, 37, 41, 44, 45, 46, 50, 51, 52, 53, 59, 60, 63, 65, 66, 67, 72, 73, 76, 77, 82, 87, 88, 89, 90, 91, 92, 93, 94, 97, 101, 106, 117, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 135, 136, 137, 140, 144, 147, 151, 152, 153, 159, 161, 162, 163, 164, 165, 167, 168, 174, 175, 177, 178, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 191, 193, 194, 195, 196, 197, 198, 199, 201, 207, 208, 209, 210, 211, 213, 214, 266, 298, 301, 319, 323, 332, 337, 338, 339, 340, 341, 342, 346, 348, 349, 350, 354, 355, 356, 357, 358, 360, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 380, 383, 384, 385, 386, 387, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 400, 403, 404, 406, 407, 408, 409, 416, 417, 418, 419, 420, 424, 425, 426, 428, 429, 433, 434, 435, 441, 442, 444, 445, 446, 447, 450, 451, 455, 456, 457, 486, 501, 502, 503], "tuple_of_arrai": 339, "turn": [56, 469], "tutori": [490, 500, 502], "tweedi": 396, "twice": 501, "two": [15, 21, 35, 39, 44, 45, 46, 48, 61, 68, 69, 78, 79, 80, 83, 99, 103, 104, 109, 126, 136, 145, 148, 173, 192, 343, 363, 365, 368, 411, 430, 435, 437, 441, 442, 444, 445, 452, 484, 485, 486, 488, 501, 502, 503, 504], "type": [6, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 78, 79, 80, 81, 82, 83, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 127, 128, 129, 130, 131, 132, 133, 134, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 169, 170, 171, 172, 173, 174, 176, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 219, 266, 277, 285, 291, 297, 298, 301, 303, 316, 318, 320, 327, 328, 329, 332, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 348, 349, 350, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 383, 384, 385, 386, 387, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 444, 445, 446, 447, 449, 450, 451, 452, 454, 455, 456, 457, 458, 467, 469, 478, 486, 489, 490, 502, 503], "typecod": 277, "typeerror": [43, 64, 81, 211, 213, 346, 354], "typenam": [3, 8], "typic": [15, 49, 51, 68, 102, 316, 414, 478, 489, 496, 503], "u": [168, 170, 177, 212, 323, 397, 477, 482, 484, 488, 490, 493, 503], "u8_arr": 80, "ubyt": [3, 8], "ucx": 494, "ufunc": [8, 12, 13, 16, 17, 22, 23, 24, 25, 26, 27, 28, 44, 45, 46, 52, 53, 55, 59, 60, 63, 65, 66, 72, 73, 82, 90, 91, 92, 94, 97, 120, 121, 122, 123, 124, 125, 126, 129, 131, 132, 140, 147, 151, 152, 153, 161, 162, 163, 164, 165, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 193, 197, 198, 199, 201, 207, 210, 212, 214, 337, 338, 340, 348, 349, 350, 355, 356, 403, 404, 407, 408, 417, 418, 419, 420, 424, 425, 428, 429, 433, 434, 446, 447], "uic": 318, "uid": 490, "uint": [3, 8], "uint16": [3, 8], "uint32": [3, 8], "uint64": [3, 8, 486], "uint8": [3, 8, 80, 344, 449], "uintc": [3, 8], "uintp": [3, 8], "uk": [481, 484], "ulong": [3, 8], "ulonglong": [3, 8], "ultim": [295, 318], "unabl": 490, "unalt": 361, "unari": 465, "unbias": 68, "unbound": 376, "unchang": [34, 113], "undefin": [195, 209, 211, 213, 346, 352, 354, 495], "under": [174, 295, 477, 481, 482, 488, 493], "underli": [32, 370, 399, 406, 421, 481, 503], "understand": [477, 487], "undesir": 501, "undo": 449, "unexpect": 212, "unif": [384, 385, 387], "uniform": [0, 3, 8, 135, 190, 379, 380, 383, 384, 385, 387, 397], "uniformli": 394, "uniniti": [12, 13, 22, 23, 24, 25, 26, 27, 28, 44, 45, 46, 52, 53, 59, 60, 63, 65, 66, 72, 73, 82, 88, 89, 90, 91, 92, 94, 97, 120, 121, 122, 123, 124, 125, 126, 129, 131, 132, 140, 147, 151, 152, 153, 161, 162, 163, 164, 165, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 193, 197, 198, 199, 201, 337, 338, 340, 348, 349, 355, 356, 403, 404, 407, 408, 417, 418, 419, 420, 424, 425, 428, 433, 434, 446, 447], "union1d": [3, 8], "uniqu": [0, 3, 8, 143, 200, 375, 486], "unique_al": [3, 8], "unique_count": [3, 8, 448], "unique_indic": 448, "unique_invers": [3, 8, 448], "unique_valu": [3, 8], "unit": [159, 167, 168, 395, 396, 495], "unitari": [130, 177, 495], "uniti": 135, "univari": 381, "univers": [174, 396], "unknown": 503, "unless": [14, 19, 34, 54, 70, 71, 79, 86, 135, 174, 178, 190, 205, 206, 212, 214, 277, 301, 344, 350, 380, 383, 384, 385, 387, 412, 429, 448, 477, 481, 482, 488], "unlik": [61, 79, 167, 169, 393], "unmodifi": [48, 491], "unnecessari": 477, "unpack": 449, "unpackbit": [0, 3, 8], "unpartit": 502, "unpickl": [266, 318], "unpredict": [1, 361], "unravel": 450, "unravel_index": [0, 3, 8], "unraveled_coord": 450, "unsaf": [58, 64, 86, 145, 192, 277, 343, 435, 452], "unsign": [80, 214, 350, 429], "unsignedinteg": [3, 8], "unstack": [3, 8], "unsupport": 495, "until": [48, 87, 486, 501, 502, 503], "unwrap": [3, 8], "up": [85, 119, 122, 139, 143, 301, 413, 432, 448, 454, 469, 478, 484, 489, 490, 495, 496, 502, 503], "updat": [295, 318, 351, 352, 487, 489, 502, 503], "uplo": [168, 170], "upon": 477, "upper": [55, 96, 135, 137, 166, 168, 170, 175, 318, 393, 394, 443, 444, 445], "uppoer": 175, "us": [2, 6, 16, 17, 20, 21, 31, 32, 42, 47, 48, 54, 58, 61, 68, 70, 71, 75, 76, 79, 80, 83, 86, 87, 98, 99, 100, 102, 103, 104, 105, 107, 108, 110, 111, 113, 130, 133, 134, 137, 142, 143, 148, 159, 160, 166, 171, 173, 174, 178, 190, 192, 194, 195, 196, 202, 205, 206, 207, 208, 209, 211, 212, 213, 214, 223, 224, 279, 285, 295, 301, 318, 320, 328, 335, 345, 346, 347, 350, 352, 354, 358, 360, 362, 383, 388, 396, 399, 401, 402, 405, 406, 409, 415, 421, 429, 431, 432, 437, 448, 450, 451, 452, 465, 469, 477, 478, 480, 481, 482, 483, 484, 487, 488, 489, 491, 492, 493, 495, 498, 499, 500, 502, 504], "usabl": 120, "usag": [98, 99, 100, 102, 103, 104, 105, 107, 108, 109, 110, 111, 112, 113, 167, 168, 169, 170, 176, 469, 477, 479, 490, 500, 501, 502], "use_explicit": 171, "use_openmp": 478, "use_thread": 478, "user": [202, 295, 318, 478, 487, 489, 490, 491, 502, 503], "ushort": [3, 8], "usual": [76, 477, 490, 504], "util": [480, 481, 482, 488, 490, 503], "v": [48, 61, 75, 78, 316, 414, 458, 480, 481, 483], "v1": 481, "v100": 503, "val": [114, 142, 158, 317, 344, 347, 401, 449, 501, 503], "valid": [48, 61, 191, 441, 442, 444, 445, 477, 489, 492, 502], "valu": [2, 12, 13, 14, 15, 16, 17, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 35, 41, 42, 43, 44, 45, 46, 47, 52, 53, 54, 55, 59, 60, 63, 64, 65, 66, 67, 68, 70, 71, 72, 73, 80, 81, 82, 86, 90, 91, 92, 94, 95, 96, 97, 103, 111, 114, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 140, 143, 144, 146, 147, 148, 150, 151, 152, 153, 154, 155, 156, 157, 159, 160, 161, 162, 163, 164, 165, 166, 168, 170, 172, 174, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 197, 198, 199, 201, 202, 203, 204, 205, 206, 207, 208, 210, 211, 212, 213, 214, 217, 218, 225, 226, 228, 229, 231, 232, 233, 234, 235, 236, 237, 238, 242, 243, 244, 245, 246, 247, 248, 250, 251, 252, 253, 254, 255, 256, 258, 259, 260, 263, 264, 265, 268, 269, 270, 273, 274, 277, 280, 291, 294, 304, 306, 312, 316, 318, 320, 323, 337, 338, 340, 344, 347, 348, 349, 350, 351, 352, 353, 355, 356, 357, 358, 360, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 383, 384, 385, 386, 387, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 403, 404, 405, 406, 407, 408, 409, 410, 412, 414, 417, 418, 419, 420, 424, 425, 428, 429, 431, 432, 433, 434, 437, 438, 446, 447, 448, 449, 451, 455, 465, 467, 469, 481, 483, 486, 487, 488, 489, 490, 500, 501, 502, 503], "valuabl": 489, "valueerror": [41, 43, 48, 54, 57, 69, 79, 81, 114, 174, 203, 204, 207, 210, 360, 378, 410, 423, 426, 437], "van": 174, "vander": [3, 8], "vanilla": 469, "var": [0, 3, 8, 469], "vararg": 130, "vari": [32, 68, 144, 402, 421, 483, 484, 489, 503], "variabl": [68, 176, 203, 204, 207, 210, 360, 362, 368, 375, 469, 487, 489, 490, 494, 496, 498, 501, 502, 503], "varianc": [68, 334, 360, 381, 451, 467], "variant": [502, 503], "variantcod": 502, "variat": [211, 213, 346, 354, 363, 503], "varieti": 2, "variou": [174, 467, 469, 489, 499], "vdot": [0, 3, 8], "vecdot": [3, 8], "vecmat": [3, 8], "vector": [3, 8, 68, 69, 83, 145, 173, 174, 192, 196, 332, 343, 452, 467, 502, 503, 504], "vector1": 503, "vector2": 503, "vector_norm": 8, "venv": [492, 503], "verbatim": 477, "verbos": [480, 487, 490, 503], "veri": [15, 42, 202, 301, 496], "verifi": 166, "version": [67, 75, 116, 195, 209, 211, 213, 266, 346, 354, 376, 450, 477, 481, 482, 488, 489, 492, 503], "vertic": [411, 413, 453, 454, 489], "vh": 177, "via": [12, 13, 22, 23, 24, 25, 26, 27, 28, 44, 45, 46, 52, 53, 59, 60, 63, 65, 66, 72, 73, 82, 90, 91, 92, 94, 97, 120, 121, 122, 123, 124, 125, 126, 129, 131, 132, 140, 147, 151, 152, 153, 161, 162, 163, 164, 165, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 193, 197, 198, 199, 201, 295, 329, 337, 338, 340, 348, 349, 355, 356, 403, 404, 407, 408, 417, 418, 419, 420, 424, 425, 428, 433, 434, 439, 446, 447, 480, 490, 494, 502, 503], "view": [0, 8, 37, 39, 40, 49, 51, 75, 93, 117, 118, 119, 196, 200, 291, 295, 298, 325, 332, 352, 406, 423, 426, 430, 432, 438, 450, 490, 500, 502], "violat": [64, 469], "vision": 503, "visit": [477, 490], "vital": 503, "void": [3, 8, 301], "volatil": [481, 503], "von": 395, "vonmis": [0, 3, 8], "vpi": 484, "vsplit": [0, 3, 8, 413, 454], "vstack": [0, 3, 8, 413, 501], "vv": 480, "w": [169, 170, 295, 318], "w_i": [136, 137], "wa": [47, 83, 145, 173, 372, 396, 412, 435, 452, 477, 484, 487, 490], "wai": [87, 103, 104, 105, 110, 192, 367, 449, 477, 478, 480, 481, 482, 483, 488, 493, 494, 501, 502], "wait": 502, "waital": 489, "wald": [0, 3, 8], "walk": 478, "want": [477, 478, 488, 502, 503], "warm": [496, 502], "warn": [191, 203, 204, 207, 210, 351, 458, 487, 503], "warranti": [481, 482, 488, 493], "wasilla": 493, "water": 489, "wavenumb": 483, "we": [8, 54, 68, 323, 477, 478, 481, 482, 483, 484, 486, 487, 488, 489, 490, 501, 502, 503], "weak": 491, "weibul": [0, 3, 8, 211, 213, 346, 354, 386], "weigh": [136, 137], "weight": [41, 43, 68, 133, 134, 135, 136, 137, 376, 486], "welcom": [8, 477], "well": [86, 176, 318, 350, 480, 482, 489, 502], "were": [58, 192, 316, 381, 414, 427, 490, 493, 498, 503], "west": [488, 503], "wget": 503, "what": [58, 64, 75, 86, 98, 99, 100, 102, 103, 104, 105, 107, 108, 109, 110, 111, 112, 113, 145, 149, 192, 277, 343, 427, 435, 452, 488, 498, 500, 501, 503], "wheel": [492, 503], "when": [18, 21, 29, 30, 34, 41, 48, 57, 64, 69, 70, 71, 80, 110, 135, 143, 166, 171, 174, 178, 191, 192, 195, 196, 203, 204, 205, 206, 207, 209, 210, 212, 285, 301, 318, 323, 328, 360, 361, 388, 399, 410, 415, 431, 432, 469, 477, 478, 487, 489, 492, 494, 495, 496, 498, 501, 502, 503], "whenev": [438, 469, 501], "where": [0, 3, 8, 12, 13, 14, 16, 17, 19, 21, 22, 23, 24, 25, 26, 27, 28, 33, 39, 40, 44, 45, 46, 48, 52, 53, 54, 55, 57, 59, 60, 63, 64, 65, 66, 68, 69, 72, 73, 80, 82, 83, 90, 91, 92, 93, 94, 95, 96, 97, 102, 108, 110, 120, 121, 122, 123, 124, 125, 126, 129, 131, 132, 136, 139, 140, 143, 144, 147, 148, 149, 151, 152, 153, 154, 155, 156, 161, 162, 163, 164, 165, 166, 175, 177, 178, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 191, 193, 194, 197, 198, 199, 201, 207, 208, 210, 212, 214, 271, 272, 304, 306, 311, 316, 324, 337, 338, 340, 343, 347, 348, 349, 350, 353, 355, 356, 357, 358, 363, 364, 365, 372, 374, 376, 393, 403, 404, 407, 408, 414, 415, 417, 418, 419, 420, 423, 424, 425, 428, 429, 433, 434, 437, 446, 447, 451, 481, 483, 484, 486, 489, 493, 495, 501, 502, 503], "wherea": 495, "wherev": 64, "whether": [14, 15, 19, 35, 75, 81, 143, 148, 149, 166, 168, 170, 178, 202, 212, 318, 450, 469, 477, 480, 493, 498, 501, 503], "which": [1, 12, 13, 14, 16, 17, 19, 20, 22, 23, 24, 25, 26, 27, 28, 29, 30, 34, 41, 44, 45, 46, 48, 52, 53, 54, 57, 58, 59, 60, 61, 63, 64, 65, 66, 67, 68, 70, 71, 72, 73, 74, 76, 78, 79, 80, 81, 82, 86, 87, 90, 91, 92, 94, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 117, 120, 121, 122, 123, 124, 125, 126, 129, 130, 131, 132, 139, 140, 143, 146, 147, 151, 152, 153, 154, 155, 158, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 174, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 197, 198, 199, 201, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 277, 285, 298, 301, 318, 320, 335, 337, 338, 340, 344, 346, 348, 349, 350, 351, 354, 355, 356, 362, 367, 380, 383, 384, 385, 386, 387, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 403, 404, 405, 407, 408, 409, 412, 415, 417, 418, 419, 420, 423, 424, 425, 427, 428, 429, 431, 433, 434, 437, 439, 440, 441, 444, 446, 447, 449, 451, 455, 469, 477, 484, 487, 489, 490, 493, 496, 498, 501, 502, 503], "while": [68, 113, 173, 196, 209, 211, 213, 214, 295, 350, 376, 409, 429, 439, 486, 490, 496, 501, 502, 503], "whilst": 38, "who": 477, "whole": 477, "whom": 493, "whose": [34, 79, 95, 96, 114, 191, 194, 200, 207, 208, 210, 214, 280, 344, 437, 442, 445, 450, 451], "why": [108, 477], "wide": [362, 490, 502], "width": [85, 135, 139, 375, 413, 454, 503], "wiki": 362, "wikipedia": 362, "window": [42, 47, 133, 134, 160, 458, 467, 492, 502], "wise": [12, 13, 15, 22, 23, 24, 25, 26, 27, 28, 44, 45, 46, 52, 53, 59, 60, 63, 65, 66, 82, 85, 90, 97, 98, 99, 100, 102, 103, 104, 105, 107, 108, 109, 110, 111, 112, 113, 120, 121, 123, 124, 125, 131, 132, 138, 139, 147, 148, 151, 152, 153, 154, 155, 162, 164, 165, 167, 168, 169, 170, 176, 180, 181, 182, 186, 187, 188, 189, 193, 197, 198, 199, 201, 283, 337, 338, 340, 348, 349, 403, 404, 413, 417, 418, 419, 420, 424, 425, 428, 433, 434, 446, 447, 453, 454, 502, 503], "wish": 75, "within": [12, 13, 15, 21, 22, 23, 24, 25, 26, 27, 28, 44, 45, 46, 52, 53, 59, 60, 63, 64, 65, 66, 72, 73, 82, 86, 90, 91, 92, 94, 97, 103, 104, 105, 108, 110, 120, 121, 122, 123, 124, 125, 126, 129, 131, 132, 140, 147, 148, 151, 152, 153, 161, 162, 163, 164, 165, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 192, 193, 197, 198, 199, 201, 277, 337, 338, 340, 348, 349, 355, 356, 367, 394, 403, 404, 407, 408, 417, 418, 419, 420, 424, 425, 428, 433, 434, 446, 447, 502, 503], "without": [42, 48, 57, 83, 88, 145, 318, 332, 406, 477, 481, 482, 488, 489, 493, 497, 500, 502, 503], "word": [21, 103, 104, 105, 108, 110, 394, 439], "work": [48, 57, 301, 351, 465, 477, 478, 481, 495, 496, 501, 502, 503], "worker": [480, 490, 503], "workflow": 478, "workload": 503, "workstat": 503, "worri": 503, "wors": 47, "would": [32, 58, 83, 145, 173, 191, 275, 276, 301, 316, 343, 414, 423, 427, 435, 452, 469, 481, 482, 487, 488, 489, 501, 503], "wrap": [54, 114, 351, 361, 431], "wrapper": [494, 503], "write": [49, 75, 114, 196, 318, 328, 406, 481, 482, 488, 491, 503], "writeabl": [4, 295, 318], "writebackifcopi": [295, 318], "written": [114, 295, 318, 328, 493, 501, 504], "wrong": 57, "wsl": 492, "www": [481, 482, 488], "x": [12, 22, 23, 24, 25, 26, 28, 43, 52, 53, 59, 60, 65, 66, 68, 72, 73, 80, 81, 91, 92, 94, 97, 99, 100, 101, 104, 105, 106, 113, 121, 126, 135, 136, 141, 147, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 171, 174, 176, 180, 181, 182, 183, 187, 191, 196, 199, 202, 295, 318, 323, 337, 348, 355, 356, 357, 362, 397, 403, 408, 410, 417, 418, 419, 420, 424, 425, 433, 434, 447, 455, 481, 483, 484, 486, 487, 495, 501, 502, 503, 504], "x1": [13, 27, 44, 45, 46, 63, 82, 90, 120, 122, 123, 124, 125, 129, 131, 132, 140, 161, 162, 163, 164, 165, 184, 185, 186, 188, 189, 193, 196, 197, 198, 201, 338, 340, 349, 404, 407, 428, 446], "x2": [13, 27, 44, 45, 46, 63, 82, 90, 120, 122, 123, 124, 125, 129, 131, 132, 140, 161, 162, 163, 164, 165, 184, 185, 186, 188, 189, 193, 196, 197, 198, 201, 338, 340, 349, 404, 407, 428, 446], "x86": 503, "x86_64": [492, 503], "x_": 487, "x_1": 68, "x_2": 68, "x_current": 501, "x_edg": 136, "x_global": 502, "x_i": [68, 136, 137], "x_j": 68, "x_local": 502, "x_n": 68, "x_prev": 501, "xcoord": 136, "xedg": 136, "xeon": 503, "xi": 196, "xk": 487, "xk_old": 487, "xlabel": [481, 483], "xmax": 136, "xmin": 136, "xn": 196, "xor": [46, 189], "xorwow": 361, "xp": 502, "xv": 196, "xy": 196, "y": [13, 27, 44, 45, 46, 63, 68, 82, 90, 101, 106, 120, 122, 123, 124, 125, 129, 131, 132, 136, 140, 148, 157, 161, 162, 163, 164, 165, 184, 185, 186, 188, 189, 193, 196, 197, 198, 201, 211, 213, 297, 329, 338, 340, 346, 349, 354, 399, 404, 407, 411, 428, 446, 455, 484, 486, 487, 501, 502, 503, 504], "y1": [126, 199], "y2": [126, 199], "y_edg": 136, "y_global": 502, "y_i": [136, 137], "y_local": 502, "ycoord": 136, "year": [375, 503], "yedg": 136, "yellow": 486, "yet": [8, 448], "yield": [29, 30, 70, 71, 205, 206, 212, 455, 496, 503], "ylabel": [481, 483], "ymax": 136, "ymin": 136, "you": [49, 64, 75, 86, 192, 195, 196, 209, 402, 431, 477, 478, 481, 482, 483, 486, 487, 488, 489, 490, 491, 492, 494, 499, 501, 502, 503, 504], "your": [477, 490, 491, 501, 503, 504], "yueh": 489, "yv": 196, "z": [18, 69, 301, 362, 381, 501, 502, 504], "z_global": 502, "z_i": 137, "z_local": 502, "zero": [0, 3, 8, 18, 33, 41, 42, 47, 61, 67, 69, 80, 96, 98, 99, 100, 101, 102, 103, 104, 105, 107, 108, 110, 111, 113, 116, 133, 134, 149, 150, 154, 155, 156, 157, 160, 167, 168, 169, 170, 172, 174, 191, 202, 206, 214, 309, 336, 339, 344, 363, 376, 402, 418, 439, 440, 443, 449, 451, 457, 483, 486, 488, 502, 503], "zero_point": 486, "zerodivisionerror": 41, "zeros_lik": [0, 3, 8], "zeta": 398, "zipf": [0, 3, 8], "zsh": 503}, "titles": ["&lt;no title&gt;", "cupynumeric.random.BitGenerator", "cupynumeric.random.Generator", "Convolve and Correlate", "cupynumeric.ndarray", "Binary operations", "cupynumeric.broadcast", "Classes", "Project comparisons", "Array creation routines", "Data type routines", "Discrete Fourier Transform (<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">cupynumeric.fft</span></code>)", "cupynumeric.absolute", "cupynumeric.add", "cupynumeric.all", "cupynumeric.allclose", "cupynumeric.amax", "cupynumeric.amin", "cupynumeric.angle", "cupynumeric.any", "cupynumeric.append", "cupynumeric.arange", "cupynumeric.arccos", "cupynumeric.arccosh", "cupynumeric.arcsin", "cupynumeric.arcsinh", "cupynumeric.arctan", "cupynumeric.arctan2", "cupynumeric.arctanh", "cupynumeric.argmax", "cupynumeric.argmin", "cupynumeric.argpartition", "cupynumeric.argsort", "cupynumeric.argwhere", "cupynumeric.array", "cupynumeric.array_equal", "cupynumeric.array_split", "cupynumeric.asarray", "cupynumeric.atleast_1d", "cupynumeric.atleast_2d", "cupynumeric.atleast_3d", "cupynumeric.average", "cupynumeric.bartlett", "cupynumeric.bincount", "cupynumeric.bitwise_and", "cupynumeric.bitwise_or", "cupynumeric.bitwise_xor", "cupynumeric.blackman", "cupynumeric.block", "cupynumeric.broadcast_arrays", "cupynumeric.broadcast_shapes", "cupynumeric.broadcast_to", "cupynumeric.cbrt", "cupynumeric.ceil", "cupynumeric.choose", "cupynumeric.clip", "cupynumeric.column_stack", "cupynumeric.compress", "cupynumeric.concatenate", "cupynumeric.conj", "cupynumeric.conjugate", "cupynumeric.convolve", "cupynumeric.copy", "cupynumeric.copysign", "cupynumeric.copyto", "cupynumeric.cos", "cupynumeric.cosh", "cupynumeric.count_nonzero", "cupynumeric.cov", "cupynumeric.cross", "cupynumeric.cumprod", "cupynumeric.cumsum", "cupynumeric.deg2rad", "cupynumeric.degrees", "cupynumeric.delete", "cupynumeric.diag", "cupynumeric.diag_indices", "cupynumeric.diag_indices_from", "cupynumeric.diagflat", "cupynumeric.diagonal", "cupynumeric.diff", "cupynumeric.digitize", "cupynumeric.divide", "cupynumeric.dot", "cupynumeric.dsplit", "cupynumeric.dstack", "cupynumeric.einsum", "cupynumeric.einsum_path", "cupynumeric.empty", "cupynumeric.empty_like", "cupynumeric.equal", "cupynumeric.exp", "cupynumeric.exp2", "cupynumeric.expand_dims", "cupynumeric.expm1", "cupynumeric.extract", "cupynumeric.eye", "cupynumeric.fabs", "cupynumeric.fft.fft", "cupynumeric.fft.fft2", "cupynumeric.fft.fftn", "cupynumeric.fft.fftshift", "cupynumeric.fft.hfft", "cupynumeric.fft.ifft", "cupynumeric.fft.ifft2", "cupynumeric.fft.ifftn", "cupynumeric.fft.ifftshift", "cupynumeric.fft.ihfft", "cupynumeric.fft.irfft", "cupynumeric.fft.irfft2", "cupynumeric.fft.irfftn", "cupynumeric.fft.rfft", "cupynumeric.fft.rfft2", "cupynumeric.fft.rfftn", "cupynumeric.fill_diagonal", "cupynumeric.find_common_type", "cupynumeric.flatnonzero", "cupynumeric.flip", "cupynumeric.fliplr", "cupynumeric.flipud", "cupynumeric.float_power", "cupynumeric.floor", "cupynumeric.floor_divide", "cupynumeric.fmax", "cupynumeric.fmin", "cupynumeric.fmod", "cupynumeric.frexp", "cupynumeric.full", "cupynumeric.full_like", "cupynumeric.gcd", "cupynumeric.gradient", "cupynumeric.greater", "cupynumeric.greater_equal", "cupynumeric.hamming", "cupynumeric.hanning", "cupynumeric.histogram", "cupynumeric.histogram2d", "cupynumeric.histogramdd", "cupynumeric.hsplit", "cupynumeric.hstack", "cupynumeric.hypot", "cupynumeric.identity", "cupynumeric.imag", "cupynumeric.in1d", "cupynumeric.indices", "cupynumeric.inner", "cupynumeric.insert", "cupynumeric.invert", "cupynumeric.isclose", "cupynumeric.iscomplex", "cupynumeric.iscomplexobj", "cupynumeric.isfinite", "cupynumeric.isinf", "cupynumeric.isnan", "cupynumeric.isneginf", "cupynumeric.isposinf", "cupynumeric.isreal", "cupynumeric.isrealobj", "cupynumeric.isscalar", "cupynumeric.ix_", "cupynumeric.kaiser", "cupynumeric.lcm", "cupynumeric.ldexp", "cupynumeric.left_shift", "cupynumeric.less", "cupynumeric.less_equal", "cupynumeric.linalg.cholesky", "cupynumeric.linalg.eig", "cupynumeric.linalg.eigh", "cupynumeric.linalg.eigvals", "cupynumeric.linalg.eigvalsh", "cupynumeric.linalg.expm", "cupynumeric.linalg.matrix_power", "cupynumeric.linalg.multi_dot", "cupynumeric.linalg.norm", "cupynumeric.linalg.qr", "cupynumeric.linalg.solve", "cupynumeric.linalg.svd", "cupynumeric.linspace", "cupynumeric.load", "cupynumeric.log", "cupynumeric.log10", "cupynumeric.log1p", "cupynumeric.log2", "cupynumeric.logaddexp", "cupynumeric.logaddexp2", "cupynumeric.logical_and", "cupynumeric.logical_not", "cupynumeric.logical_or", "cupynumeric.logical_xor", "cupynumeric.logspace", "cupynumeric.mask_indices", "cupynumeric.matmul", "cupynumeric.maximum", "cupynumeric.mean", "cupynumeric.median", "cupynumeric.meshgrid", "cupynumeric.minimum", "cupynumeric.mod", "cupynumeric.modf", "cupynumeric.moveaxis", "cupynumeric.multiply", "cupynumeric.nan_to_num", "cupynumeric.nanargmax", "cupynumeric.nanargmin", "cupynumeric.nancumprod", "cupynumeric.nancumsum", "cupynumeric.nanmax", "cupynumeric.nanmean", "cupynumeric.nanmedian", "cupynumeric.nanmin", "cupynumeric.nanpercentile", "cupynumeric.nanprod", "cupynumeric.nanquantile", "cupynumeric.nansum", "cupynumeric.ndarray.T", "cupynumeric.ndarray.__abs__", "cupynumeric.ndarray.__add__", "cupynumeric.ndarray.__and__", "cupynumeric.ndarray.__array__", "cupynumeric.ndarray.__bool__", "cupynumeric.ndarray.__complex__", "cupynumeric.ndarray.__contains__", "cupynumeric.ndarray.__copy__", "cupynumeric.ndarray.__deepcopy__", "cupynumeric.ndarray.__divmod__", "cupynumeric.ndarray.__eq__", "cupynumeric.ndarray.__float__", "cupynumeric.ndarray.__floordiv__", "cupynumeric.ndarray.__ge__", "cupynumeric.ndarray.__getitem__", "cupynumeric.ndarray.__gt__", "cupynumeric.ndarray.__iadd__", "cupynumeric.ndarray.__iand__", "cupynumeric.ndarray.__ifloordiv__", "cupynumeric.ndarray.__ilshift__", "cupynumeric.ndarray.__imatmul__", "cupynumeric.ndarray.__imod__", "cupynumeric.ndarray.__imul__", "cupynumeric.ndarray.__index__", "cupynumeric.ndarray.__int__", "cupynumeric.ndarray.__invert__", "cupynumeric.ndarray.__ior__", "cupynumeric.ndarray.__ipow__", "cupynumeric.ndarray.__irshift__", "cupynumeric.ndarray.__isub__", "cupynumeric.ndarray.__itruediv__", "cupynumeric.ndarray.__ixor__", "cupynumeric.ndarray.__le__", "cupynumeric.ndarray.__len__", "cupynumeric.ndarray.__lshift__", "cupynumeric.ndarray.__lt__", "cupynumeric.ndarray.__matmul__", "cupynumeric.ndarray.__mod__", "cupynumeric.ndarray.__mul__", "cupynumeric.ndarray.__ne__", "cupynumeric.ndarray.__neg__", "cupynumeric.ndarray.__new__", "cupynumeric.ndarray.__or__", "cupynumeric.ndarray.__pos__", "cupynumeric.ndarray.__pow__", "cupynumeric.ndarray.__reduce__", "cupynumeric.ndarray.__repr__", "cupynumeric.ndarray.__rmatmul__", "cupynumeric.ndarray.__rshift__", "cupynumeric.ndarray.__setitem__", "cupynumeric.ndarray.__setstate__", "cupynumeric.ndarray.__str__", "cupynumeric.ndarray.__sub__", "cupynumeric.ndarray.__truediv__", "cupynumeric.ndarray.__xor__", "cupynumeric.ndarray.all", "cupynumeric.ndarray.any", "cupynumeric.ndarray.argmax", "cupynumeric.ndarray.argmin", "cupynumeric.ndarray.argpartition", "cupynumeric.ndarray.argsort", "cupynumeric.ndarray.astype", "cupynumeric.ndarray.base", "cupynumeric.ndarray.choose", "cupynumeric.ndarray.clip", "cupynumeric.ndarray.compress", "cupynumeric.ndarray.conj", "cupynumeric.ndarray.conjugate", "cupynumeric.ndarray.copy", "cupynumeric.ndarray.ctypes", "cupynumeric.ndarray.cumprod", "cupynumeric.ndarray.cumsum", "cupynumeric.ndarray.data", "cupynumeric.ndarray.diagonal", "cupynumeric.ndarray.dot", "cupynumeric.ndarray.dtype", "cupynumeric.ndarray.dump", "cupynumeric.ndarray.dumps", "cupynumeric.ndarray.fill", "cupynumeric.ndarray.flags", "cupynumeric.ndarray.flat", "cupynumeric.ndarray.flatten", "cupynumeric.ndarray.flip", "cupynumeric.ndarray.getfield", "cupynumeric.ndarray.imag", "cupynumeric.ndarray.item", "cupynumeric.ndarray.itemset", "cupynumeric.ndarray.itemsize", "cupynumeric.ndarray.max", "cupynumeric.ndarray.mean", "cupynumeric.ndarray.min", "cupynumeric.ndarray.nbytes", "cupynumeric.ndarray.ndim", "cupynumeric.ndarray.nonzero", "cupynumeric.ndarray.partition", "cupynumeric.ndarray.prod", "cupynumeric.ndarray.put", "cupynumeric.ndarray.ravel", "cupynumeric.ndarray.real", "cupynumeric.ndarray.reshape", "cupynumeric.ndarray.searchsorted", "cupynumeric.ndarray.setfield", "cupynumeric.ndarray.setflags", "cupynumeric.ndarray.shape", "cupynumeric.ndarray.size", "cupynumeric.ndarray.sort", "cupynumeric.ndarray.squeeze", "cupynumeric.ndarray.strides", "cupynumeric.ndarray.sum", "cupynumeric.ndarray.swapaxes", "cupynumeric.ndarray.take", "cupynumeric.ndarray.tobytes", "cupynumeric.ndarray.tofile", "cupynumeric.ndarray.tolist", "cupynumeric.ndarray.tostring", "cupynumeric.ndarray.trace", "cupynumeric.ndarray.transpose", "cupynumeric.ndarray.unique", "cupynumeric.ndarray.var", "cupynumeric.ndarray.view", "cupynumeric.ndim", "cupynumeric.negative", "cupynumeric.nextafter", "cupynumeric.nonzero", "cupynumeric.not_equal", "cupynumeric.ones", "cupynumeric.ones_like", "cupynumeric.outer", "cupynumeric.packbits", "cupynumeric.partition", "cupynumeric.percentile", "cupynumeric.place", "cupynumeric.positive", "cupynumeric.power", "cupynumeric.prod", "cupynumeric.put", "cupynumeric.put_along_axis", "cupynumeric.putmask", "cupynumeric.quantile", "cupynumeric.rad2deg", "cupynumeric.radians", "cupynumeric.random.beta", "cupynumeric.random.binomial", "cupynumeric.random.bytes", "cupynumeric.random.chisquare", "cupynumeric.random.default_rng", "cupynumeric.random.exponential", "cupynumeric.random.f", "cupynumeric.random.gamma", "cupynumeric.random.geometric", "cupynumeric.random.gumbel", "cupynumeric.random.hypergeometric", "cupynumeric.random.laplace", "cupynumeric.random.logistic", "cupynumeric.random.lognormal", "cupynumeric.random.logseries", "cupynumeric.random.negative_binomial", "cupynumeric.random.noncentral_chisquare", "cupynumeric.random.noncentral_f", "cupynumeric.random.normal", "cupynumeric.random.pareto", "cupynumeric.random.poisson", "cupynumeric.random.power", "cupynumeric.random.rand", "cupynumeric.random.randint", "cupynumeric.random.randn", "cupynumeric.random.random", "cupynumeric.random.random_integers", "cupynumeric.random.random_sample", "cupynumeric.random.ranf", "cupynumeric.random.rayleigh", "cupynumeric.random.sample", "cupynumeric.random.seed", "cupynumeric.random.standard_cauchy", "cupynumeric.random.standard_exponential", "cupynumeric.random.standard_gamma", "cupynumeric.random.standard_t", "cupynumeric.random.triangular", "cupynumeric.random.uniform", "cupynumeric.random.vonmises", "cupynumeric.random.wald", "cupynumeric.random.weibull", "cupynumeric.random.zipf", "cupynumeric.ravel", "cupynumeric.ravel_multi_index", "cupynumeric.real", "cupynumeric.real_if_close", "cupynumeric.reciprocal", "cupynumeric.remainder", "cupynumeric.repeat", "cupynumeric.reshape", "cupynumeric.right_shift", "cupynumeric.rint", "cupynumeric.roll", "cupynumeric.roots", "cupynumeric.rot90", "cupynumeric.round", "cupynumeric.row_stack", "cupynumeric.searchsorted", "cupynumeric.select", "cupynumeric.shape", "cupynumeric.sign", "cupynumeric.signbit", "cupynumeric.sin", "cupynumeric.sinh", "cupynumeric.sort", "cupynumeric.sort_complex", "cupynumeric.split", "cupynumeric.sqrt", "cupynumeric.square", "cupynumeric.squeeze", "cupynumeric.stack", "cupynumeric.subtract", "cupynumeric.sum", "cupynumeric.swapaxes", "cupynumeric.take", "cupynumeric.take_along_axis", "cupynumeric.tan", "cupynumeric.tanh", "cupynumeric.tensordot", "cupynumeric.tile", "cupynumeric.trace", "cupynumeric.transpose", "cupynumeric.tri", "cupynumeric.tril", "cupynumeric.tril_indices", "cupynumeric.tril_indices_from", "cupynumeric.triu", "cupynumeric.triu_indices", "cupynumeric.triu_indices_from", "cupynumeric.true_divide", "cupynumeric.trunc", "cupynumeric.unique", "cupynumeric.unpackbits", "cupynumeric.unravel_index", "cupynumeric.var", "cupynumeric.vdot", "cupynumeric.vsplit", "cupynumeric.vstack", "cupynumeric.where", "cupynumeric.zeros", "cupynumeric.zeros_like", "API Reference", "Indexing routines", "Input and output", "Linear algebra (<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">cupynumeric.linalg</span></code>)", "Logic functions", "Array manipulation routines", "Mathematical functions", "The N-Dimensional array (<code class=\"xref py py-class docutils literal notranslate\"><span class=\"pre\">cupynumeric.ndarray</span></code>)", "Random sampling (<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">cupynumeric.random</span></code>)", "Routines", "Set routines", "Settings", "Sorting, searching, and counting", "Statistics", "Window functions", "Changes: 25.09", "Changes: 25.10", "Changes: 25.10", "Change Log", "Contributing to cuPyNumeric", "Building from source", "Developer guide", "Running tests", "Black-Scholes options pricing", "Cholesky decomposition", "Compact Finite Difference Scheme", "Edge Detection", "Examples", "K-Means Clustering Algorithm", "Newton Raphson Method In Two Dimensions", "Jacobi stencil", "TorchSWE case study", "Frequently Asked Questions", "NVIDIA cuPyNumeric", "Installation", "Third-party notices", "Advanced topics", "Differences with Numpy", "Performance Benchmarking", "Howtos", "Measure API coverage", "Trying Numpy code without changes", "User guide", "Best practices", "Extend cuPyNumeric with Legate-tasks", "Tutorial", "Usage"], "titleterms": {"09": 473, "1": 503, "10": [474, 475], "2": 503, "25": [473, 474, 475], "3": 503, "In": 487, "Of": 490, "The": [465, 477], "__abs__": 216, "__add__": 217, "__and__": 218, "__array__": 219, "__bool__": 220, "__complex__": 221, "__contains__": 222, "__copy__": 223, "__deepcopy__": 224, "__divmod__": 225, "__eq__": 226, "__float__": 227, "__floordiv__": 228, "__ge__": 229, "__getitem__": 230, "__gt__": 231, "__iadd__": 232, "__iand__": 233, "__ifloordiv__": 234, "__ilshift__": 235, "__imatmul__": 236, "__imod__": 237, "__imul__": 238, "__index__": 239, "__int__": 240, "__invert__": 241, "__ior__": 242, "__ipow__": 243, "__irshift__": 244, "__isub__": 245, "__itruediv__": 246, "__ixor__": 247, "__le__": 248, "__len__": 249, "__lshift__": 250, "__lt__": 251, "__matmul__": 252, "__mod__": 253, "__mul__": 254, "__ne__": 255, "__neg__": 256, "__new__": 257, "__or__": 258, "__pos__": 259, "__pow__": 260, "__reduce__": 261, "__repr__": 262, "__rmatmul__": 263, "__rshift__": 264, "__setitem__": 265, "__setstate__": 266, "__str__": 267, "__sub__": 268, "__truediv__": 269, "__xor__": 270, "about": 490, "absolut": 12, "add": 13, "advanc": [3, 478, 494, 501, 503], "algebra": [8, 461], "algorithm": 486, "all": [14, 271], "allclos": 15, "alloc": [501, 503], "amax": 16, "amin": 17, "an": 501, "angl": 18, "ani": [19, 272], "anoth": 501, "anti": 490, "api": [8, 458, 498, 501], "append": 20, "applic": [490, 501], "ar": 490, "arang": 21, "arcco": 22, "arccosh": 23, "arcsin": 24, "arcsinh": 25, "arctan": 26, "arctan2": 27, "arctanh": 28, "argmax": [29, 273], "argmin": [30, 274], "argpartit": [31, 275], "argsort": [32, 276], "argument": [490, 494, 495, 501], "argwher": 33, "arithmet": [464, 465], "arrai": [3, 8, 9, 34, 459, 462, 463, 465, 501, 503], "array_equ": 35, "array_split": 36, "asarrai": 37, "ask": 490, "astyp": 277, "atleast_1d": 38, "atleast_2d": 39, "atleast_3d": 40, "attribut": 465, "avail": 490, "averag": [41, 471], "avoid": [501, 503], "backend": 494, "background": [483, 484, 486, 487], "bartlett": 42, "base": [278, 501, 503], "basic": [463, 478, 480, 503], "begin": 477, "behavior": 495, "benchmark": 496, "best": [501, 503], "beta": 357, "better": 501, "between": 490, "binari": [5, 460], "bincount": 43, "binomi": 358, "bit": [3, 5, 466], "bitgener": 1, "bitwise_and": 44, "bitwise_or": 45, "bitwise_xor": 46, "black": [481, 503], "blackman": 47, "block": [48, 501], "boolean": [501, 503], "broadcast": 6, "broadcast_arrai": 49, "broadcast_shap": 50, "broadcast_to": 51, "build": [9, 478, 492], "byte": 359, "calcul": 465, "call": 498, "can": 490, "case": 489, "cbrt": 52, "ceil": 53, "ceph": 493, "certif": 477, "chang": [463, 473, 474, 475, 476, 486, 499], "chisquar": 360, "choleski": [166, 482], "choos": [54, 279], "class": 7, "clip": [55, 280], "cluster": [486, 503], "cmake": 478, "co": 65, "code": [477, 490, 499, 503], "column_stack": 56, "compact": 483, "comparison": [8, 462, 465], "complet": 502, "complex": 464, "compress": [57, 281], "comput": 503, "concaten": 58, "conda": [492, 503], "configur": 480, "conj": [59, 282], "conjug": [60, 283, 503], "construct": 465, "content": [462, 491], "contribut": 477, "convers": 465, "convolv": [3, 61], "copi": [62, 284, 495, 501], "copysign": 63, "copyto": 64, "correl": [3, 471], "cosh": 66, "count": [3, 470], "count_nonzero": 67, "cov": 68, "coverag": 498, "cpu": [492, 502, 503], "creation": [3, 9], "cross": 69, "ctype": 285, "cumprod": [70, 286], "cumsum": [71, 287], "cupi": 490, "cupynumer": [1, 2, 4, 6, 8, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 461, 465, 466, 477, 490, 491, 501, 502, 503], "data": [9, 10, 288, 459, 463, 465, 466], "datatyp": 495, "dco": 477, "decomposit": [461, 482], "default": 490, "default_rng": 361, "deg2rad": 72, "degre": 73, "delet": 74, "depend": 478, "design": 501, "detail": 498, "detect": [484, 503], "determin": 490, "develop": [477, 479], "diag": 75, "diag_indic": 76, "diag_indices_from": 77, "diagflat": 78, "diagon": [79, 289], "diff": 80, "differ": [464, 483, 490, 495], "digit": 81, "dimens": [463, 487], "dimension": [8, 465], "discret": [3, 8, 11], "distribut": 466, "divid": 82, "do": [477, 490], "doctor": 469, "doctor_filenam": 469, "doctor_format": 469, "doe": 490, "doesn": 490, "don": 490, "dot": [83, 290], "dsplit": 84, "dstack": 85, "dtype": 291, "dump": [292, 293], "edg": [484, 503], "eig": 167, "eigenvalu": 3, "eigh": 168, "eigval": 169, "eigvalsh": 170, "einsum": [3, 86], "einsum_path": 87, "element": [463, 501], "elementwis": 5, "empti": 88, "empty_lik": 89, "equal": 90, "equat": 461, "error": 490, "exampl": [485, 502, 503], "execut": [490, 494, 502], "exercis": 486, "exist": 9, "exp": 91, "exp2": 92, "expand_dim": 93, "expm": 171, "expm1": 94, "expon": 464, "exponenti": 362, "extend": 502, "extract": 95, "extrema": 464, "ey": 96, "f": 363, "fab": 97, "factor": 3, "fallback_stacktrac": 469, "fast": 502, "fast_math": 469, "faster": 501, "fft": [11, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113], "fft2": 99, "fftn": 100, "fftshift": 101, "file": 460, "fill": 294, "fill_diagon": 114, "find": 464, "find_common_typ": 115, "finit": 483, "flag": 295, "flat": 296, "flatnonzero": 116, "flatten": 297, "flip": [117, 298], "fliplr": 118, "flipud": 119, "float": 464, "float_pow": 120, "floor": 121, "floor_divid": 122, "fmax": 123, "fmin": 124, "fmod": 125, "force_thunk": 469, "format": 477, "fourier": [3, 8, 11, 502], "frequent": 490, "frexp": 126, "from": [9, 463, 478, 490, 492], "full": 127, "full_lik": 128, "function": [3, 461, 462, 464, 472, 501, 502], "gamma": 364, "gasnet": 494, "gcd": 129, "gener": [2, 459, 466, 501], "geometr": 365, "getfield": 299, "gpu": [490, 492, 502, 503], "gradient": [130, 503], "greater": 131, "greater_equ": 132, "guid": [479, 500], "guidelin": [496, 501], "gumbel": 366, "ham": 133, "han": 134, "handl": [464, 490], "hardwar": 503, "have": 490, "helper": 11, "hermitian": 11, "hfft": 102, "histogram": [135, 471, 502], "histogram2d": 136, "histogramdd": 137, "how": [477, 486, 490], "howto": 497, "hpc": 503, "hsplit": 138, "hstack": 139, "hyperbol": 464, "hypergeometr": 367, "hypot": 140, "i": [477, 490, 501, 502], "ident": 141, "ifft": 103, "ifft2": 104, "ifftn": 105, "ifftshift": 106, "ihfft": 107, "imag": [142, 300], "implement": [483, 484, 486, 487], "in1d": 143, "index": [3, 459, 495, 501, 503], "indic": [144, 491], "inner": 145, "input": [3, 460, 486], "insert": [146, 459], "instal": [492, 503], "instead": [495, 501], "introduct": 503, "invert": [147, 461], "irfft": 108, "irfft2": 109, "irfftn": 110, "isclos": 148, "iscomplex": 149, "iscomplexobj": 150, "isfinit": 151, "isinf": 152, "isnan": 153, "isneginf": 154, "isposinf": 155, "isreal": 156, "isrealobj": 157, "isscalar": 158, "item": [301, 465], "items": 303, "itemset": 302, "iter": 501, "ix_": 159, "jacobi": [488, 503], "join": 463, "jupyt": [490, 504], "k": 486, "kaiser": 160, "kind": 463, "kit": 493, "kmean": 486, "laplac": 368, "laptop": 490, "layout": 465, "lcm": 161, "ldexp": 162, "learn": [483, 484, 486, 487], "left_shift": 163, "legales": 477, "legat": [490, 494, 496, 502], "legion": [490, 494], "less": 164, "less_equ": 165, "let": 486, "level": 8, "licens": 492, "like": [459, 463], "linalg": [166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 461], "linear": [8, 461], "linspac": 178, "linux": 503, "list": [501, 503], "load": 179, "log": [180, 476], "log10": 181, "log1p": 182, "log2": 183, "logaddexp": 184, "logaddexp2": 185, "logarithm": 464, "logic": [3, 462, 501], "logical_and": 186, "logical_not": 187, "logical_or": 188, "logical_xor": 189, "logist": 369, "lognorm": 370, "logseri": 371, "logspac": 190, "loop": [501, 503], "lu": 3, "main": 502, "make": 468, "manag": 494, "manipul": [3, 463, 465, 501], "manual": 494, "mask": [501, 503], "mask_indic": 191, "mathemat": [3, 464, 501], "matmul": 192, "matmul_cache_s": 469, "matric": [9, 461], "matrix": [3, 461, 465, 502, 503], "matrix_pow": 172, "max": 304, "max_eager_volum": 469, "maximum": 193, "mean": [194, 305, 486, 490], "measur": 498, "median": 195, "memori": [465, 490, 501], "merg": 501, "meshgrid": 196, "method": [465, 487], "min": 306, "min_cpu_chunk": 469, "min_gpu_chunk": 469, "min_omp_chunk": 469, "minimum": 197, "miscellan": [3, 464], "mod": 198, "modf": 199, "modul": [8, 502], "more": 490, "moveaxi": 200, "multi": [8, 494, 502, 503], "multi_dot": 173, "multipl": [465, 502, 503], "multipli": 201, "my": 490, "n": 465, "nan_to_num": 202, "nanargmax": 203, "nanargmin": 204, "nancumprod": 205, "nancumsum": 206, "nanmax": 207, "nanmean": 208, "nanmedian": 209, "nanmin": 210, "nanpercentil": 211, "nanprod": 212, "nanquantil": 213, "nansum": 214, "nativ": [501, 503], "nbyte": 307, "ndarrai": [3, 4, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 465], "ndim": [308, 336], "neg": 337, "negative_binomi": 372, "network": 494, "newton": 487, "nextaft": 338, "node": [494, 502, 503], "noncentral_chisquar": 373, "noncentral_f": 374, "nonzero": [309, 339], "norm": [174, 461], "normal": 375, "not_equ": 340, "notebook": 490, "notic": 493, "npy": 460, "npz": 460, "number": [461, 463, 464, 486], "numer": 9, "numpi": [8, 460, 490, 493, 495, 499, 501, 503], "numpy_compat": 469, "nvidia": 491, "o": 501, "observ": 486, "ones": 341, "ones_lik": 342, "openbla": 478, "oper": [3, 5, 459, 462, 463, 464, 465, 501, 503], "option": [481, 503], "order": [471, 495], "origin": 477, "other": [461, 465, 503], "out": 490, "outcom": [483, 484, 486, 487], "outer": 343, "output": [3, 460, 501], "overal": 498, "overhead": 501, "pack": [3, 5], "packag": 492, "packbit": 344, "pad": 3, "pareto": 376, "parti": 493, "partit": [310, 345], "pass": [490, 494], "pattern": 490, "penalti": 501, "percentil": 346, "perform": [496, 501], "pip": [478, 503], "pitfal": 501, "place": 347, "point": 464, "poisson": 377, "posit": 348, "power": [349, 378], "practic": [501, 503], "preload_cudalib": 469, "price": 481, "problem": 502, "process": 477, "prod": [311, 350], "product": [461, 464], "program": 3, "project": 8, "proper": 468, "put": [312, 351], "put_along_axi": 352, "putmask": [353, 501], "pypi": 492, "python": 490, "qr": 175, "quantil": 354, "question": 490, "quick": 502, "rad2deg": 355, "radian": 356, "rand": 379, "randint": 380, "randn": 381, "random": [1, 2, 3, 8, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 466, 493], "random_integ": 383, "random_sampl": 384, "ranf": 385, "rang": 9, "raphson": 487, "ration": 464, "ravel": [313, 399], "ravel_multi_index": 400, "rayleigh": 386, "read": 490, "real": [11, 314, 401], "real_if_clos": 402, "realm": [490, 494], "rearrang": 463, "reciproc": 403, "recommend": 501, "reduc": 501, "reduct": 495, "refer": 458, "relat": 3, "remaind": 404, "remov": 463, "repeat": 405, "report": 498, "report_coverag": 469, "report_dump_callstack": 469, "report_dump_csv": 469, "requir": [477, 503], "reshap": [315, 406, 501], "resourc": [494, 503], "result": [490, 501], "return": [495, 501], "review": 477, "rfft": 111, "rfft2": 112, "rfftn": 113, "right_shift": 407, "rint": 408, "roll": 409, "root": 410, "rot90": 411, "round": [412, 464], "routin": [3, 9, 10, 11, 459, 463, 464, 467, 468, 501], "row_stack": 413, "run": [480, 486, 502, 503], "sampl": [3, 8, 387, 466, 503], "saxpi": 502, "scalar": 495, "scheme": 483, "schole": [481, 503], "scope": 494, "search": [3, 470], "searchsort": [316, 414], "see": 486, "seed": [388, 466], "select": [415, 465], "set": [3, 468, 469, 486], "setfield": 317, "setflag": 318, "setup": 503, "shape": [9, 319, 416, 463, 465, 495], "sign": [417, 477], "signbit": 418, "simpl": [466, 502], "sin": 419, "singl": 503, "sinh": 420, "size": 320, "slower": 490, "solv": [176, 461], "sort": [3, 321, 421, 470], "sort_complex": 422, "sourc": [478, 492], "special": 465, "split": [423, 463], "sqrt": 424, "squar": 425, "squeez": [322, 426], "stack": [427, 498, 501], "stage": 480, "standard": 11, "standard_cauchi": 389, "standard_exponenti": 390, "standard_gamma": 391, "standard_t": 392, "state": 466, "statist": [3, 471], "stencil": [488, 503], "stride": 323, "studi": 489, "subtract": 428, "sum": [324, 429, 464], "support": 495, "svd": [3, 177], "swapax": [325, 430], "t": [215, 490], "tabl": 491, "take": [326, 431], "take_along_axi": 432, "take_default": 469, "tan": 433, "tanh": 434, "task": [490, 494, 501, 502], "tbli": [478, 493], "tensordot": 435, "test": [10, 462, 469, 480], "than": 490, "thi": [490, 502], "third": 493, "three": 503, "through": [478, 501], "tile": [436, 463], "time": [490, 496], "tip": 503, "tobyt": 327, "tofil": 328, "tolist": 329, "tool": 496, "top": 503, "topic": [478, 494], "torchsw": 489, "tostr": 330, "trace": [331, 437], "transform": [3, 8, 11, 502], "transpos": [332, 438, 463], "tri": 439, "triangular": 393, "trigonometr": 464, "tril": 440, "tril_indic": 441, "tril_indices_from": 442, "triu": 443, "triu_indic": 444, "triu_indices_from": 445, "true_divid": 446, "trunc": 447, "truth": 462, "try": 499, "tutori": 503, "two": 487, "type": [10, 462, 465], "ufunc": 3, "understand": 502, "uniform": 394, "uniqu": [333, 448], "unpack": 3, "unpackbit": 449, "unravel_index": 450, "updat": 501, "us": [486, 490, 494, 496, 501, 503], "usag": [480, 504], "user": 500, "v": [8, 490, 503], "valu": [9, 462, 495], "var": [334, 451], "varianc": 471, "variant": [490, 492], "variou": 472, "vdot": 452, "vector": [461, 501], "verifi": 492, "version": 490, "view": [335, 495, 501], "vonmis": 395, "vsplit": 453, "vstack": 454, "wald": 396, "warn": [469, 490], "weibul": 397, "what": [490, 502], "when": 490, "where": [455, 490], "why": 490, "window": 472, "wise": 501, "without": 499, "your": 492, "zero": 456, "zeros_lik": 457, "zipf": 398}})