Search.setIndex({"alltitles": {"1. Use cuPyNumeric arrays, AVOID native lists": [[485, "use-cupynumeric-arrays-avoid-native-lists"]], "2. Use array-based operations, AVOID loops with indexing": [[485, "use-array-based-operations-avoid-loops-with-indexing"]], "3. Use boolean masks, AVOID advanced indexing": [[485, "use-boolean-masks-avoid-advanced-indexing"]], "API Reference": [[445, null]], "Advanced statistics": [[3, "advanced-statistics"]], "Advanced topics": [[461, "advanced-topics"], [477, null]], "Arithmetic operations": [[451, "arithmetic-operations"]], "Arithmetic, matrix multiplication, and comparison operations": [[452, "arithmetic-matrix-multiplication-and-comparison-operations"]], "Array Attributes": [[452, "array-attributes"]], "Array Manipulation Routine Pitfalls": [[484, "array-manipulation-routine-pitfalls"]], "Array Methods": [[452, "array-methods"]], "Array contents": [[449, "array-contents"]], "Array conversion": [[452, "array-conversion"]], "Array creation": [[3, "array-creation"]], "Array creation (ndarray)": [[3, "array-creation-ndarray"]], "Array creation routines": [[9, null]], "Array manipulation": [[3, "array-manipulation"]], "Array manipulation (ndarray)": [[3, "array-manipulation-ndarray"]], "Array manipulation routines": [[450, null]], "Array type testing": [[449, "array-type-testing"]], "Averages and variances": [[458, "averages-and-variances"]], "Avoid blocking operations": [[484, "avoid-blocking-operations"]], "Background": [[466, "Background"], [467, "Background"], [469, "Background"], [470, "Background"]], "Basic Linux installation": [[485, "basic-linux-installation"]], "Basic build": [[461, "basic-build"]], "Basic operations": [[450, "basic-operations"]], "Basic usage": [[463, "basic-usage"]], "Best practices": [[484, null], [485, "best-practices"]], "Binary operations": [[5, null]], "Bit Generators": [[453, "bit-generators"]], "Bit packing": [[5, "bit-packing"]], "Black-Scholes": [[485, "black-scholes"]], "Black-Scholes options pricing": [[464, null]], "Building from source": [[461, null], [475, "building-from-source"]], "Building matrices": [[9, "building-matrices"]], "Building through pip & cmake": [[461, "building-through-pip-cmake"]], "Calculation": [[452, "calculation"], [452, "id1"]], "Call stack reporting": [[481, "call-stack-reporting"]], "Cephes": [[476, "cephes"]], "Changing array shape": [[450, "changing-array-shape"]], "Changing kind of array": [[450, "changing-kind-of-array"]], "Changing number of dimensions": [[450, "changing-number-of-dimensions"]], "Cholesky decomposition": [[465, null]], "Classes": [[7, null]], "Code Formatting Requirements": [[460, "code-formatting-requirements"]], "Compact Finite Difference Scheme": [[466, null]], "Comparison": [[449, "comparison"]], "Conda": [[485, "conda"]], "Conda and GPU / CPU Variants": [[475, "conda-and-gpu-cpu-variants"]], "Conjugate gradient": [[485, "conjugate-gradient"]], "Constructing arrays": [[452, "constructing-arrays"]], "Contents:": [[474, null]], "Contributing to cuPyNumeric": [[460, null]], "Convolve and Correlate": [[3, null]], "Correlating": [[458, "correlating"]], "Counting": [[457, "counting"]], "Data Type": [[452, "data-type"]], "Data type routines": [[10, null]], "Data type testing": [[10, "data-type-testing"]], "Decompositions": [[448, "decompositions"]], "Dependencies": [[461, "dependencies"]], "Detailed coverage report": [[481, "detailed-coverage-report"]], "Developer guide": [[462, null]], "Differences with Numpy": [[478, null]], "Discrete Fourier Transform": [[8, "discrete-fourier-transform"]], "Discrete Fourier Transform (cupynumeric.fft)": [[11, null]], "Discrete Fourier transform": [[3, "discrete-fourier-transform"]], "Distributions": [[453, "distributions"]], "Edge Detection": [[467, null]], "Edge detection": [[485, "edge-detection"]], "Eigenvalues": [[3, "eigenvalues"]], "Einsum and related": [[3, "einsum-and-related"]], "Elementwise bit operations": [[5, "elementwise-bit-operations"]], "Example 1": [[485, "example-1"]], "Example 2": [[485, "example-2"]], "Examples": [[468, null], [485, "examples"]], "Exercise: Change the number of clusters and number of observations and see how the clusters change": [[469, "Exercise:-Change-the-number-of-clusters-and-number-of-observations-and-see-how-the-clusters-change"]], "Exponents and logarithms": [[451, "exponents-and-logarithms"]], "Extrema Finding": [[451, "extrema-finding"]], "Factorizations": [[3, "factorizations"]], "Faster I/O Routines": [[484, "faster-i-o-routines"]], "Floating point routines": [[451, "floating-point-routines"]], "Frequently Asked Questions": [[473, null]], "From existing data": [[9, "from-existing-data"]], "From shape or value": [[9, "from-shape-or-value"]], "Functional programming": [[3, "functional-programming"]], "General Recommendations": [[484, "general-recommendations"]], "Generating index arrays": [[446, "generating-index-arrays"]], "Guidelines for performance benchmarks": [[479, "guidelines-for-performance-benchmarks"]], "Guidelines on designing cuPyNumeric applications": [[484, "guidelines-on-designing-cupynumeric-applications"]], "Guidelines on using cuPyNumeric APIs": [[484, "guidelines-on-using-cupynumeric-apis"]], "HPC cluster installation": [[485, "hpc-cluster-installation"]], "Handling complex numbers": [[451, "handling-complex-numbers"]], "Hardware requirements": [[485, "hardware-requirements"]], "Helper routines": [[11, "helper-routines"]], "Hermitian FFTs": [[11, "hermitian-ffts"]], "Histograms": [[458, "histograms"]], "How Do I Sign the DCO?": [[460, "how-do-i-sign-the-dco"]], "How do I time the execution of my application?": [[473, "how-do-i-time-the-execution-of-my-application"]], "How do I use Jupyter Notebooks?": [[473, "how-do-i-use-jupyter-notebooks"]], "How to begin": [[460, "how-to-begin"]], "How to determine available memory?": [[473, "how-to-determine-available-memory"]], "How to handle Out-Of-Memory errors?": [[473, "how-to-handle-out-of-memory-errors"]], "How to pass Legion and Realm arguments?": [[473, "how-to-pass-legion-and-realm-arguments"]], "Howtos": [[480, null]], "Hyperbolic functions": [[451, "hyperbolic-functions"]], "Implementation": [[466, "Implementation"], [467, "Implementation"], [469, "Implementation"], [470, "Implementation"]], "Indexing": [[3, "indexing"]], "Indexing behavior": [[478, "indexing-behavior"]], "Indexing routines": [[446, null]], "Indexing-like operations": [[446, "indexing-like-operations"]], "Indices and tables": [[474, "indices-and-tables"]], "Input and output": [[3, "input-and-output"], [447, null]], "Input and output (ndarray)": [[3, "input-and-output-ndarray"]], "Inserting data into arrays": [[446, "inserting-data-into-arrays"]], "Installation": [[475, null]], "Installing Conda Packages": [[475, "installing-conda-packages"]], "Installing PyPI Packages": [[475, "installing-pypi-packages"]], "Introduction": [[485, "introduction"]], "Item selection and manipulation": [[452, "item-selection-and-manipulation"]], "Jacobi stencil": [[471, null], [485, "jacobi-stencil"]], "Joining arrays": [[450, "joining-arrays"]], "K-Means Clustering Algorithm": [[469, null]], "LU factorization and related": [[3, "lu-factorization-and-related"]], "Learning Outcomes": [[466, "Learning-Outcomes"], [467, "Learning-Outcomes"], [469, "Learning-Outcomes"], [470, "Learning-Outcomes"]], "Lets run the kmeans algorithm using a set of inputs": [[469, "Lets-run-the-kmeans-algorithm-using-a-set-of-inputs"]], "Licenses": [[475, "licenses"]], "Linear Algebra": [[8, "linear-algebra"]], "Linear algebra (cupynumeric.linalg)": [[448, null]], "Logic functions": [[449, null]], "Logic operations": [[449, "logic-operations"]], "Logical operations": [[3, "logical-operations"]], "Making proper sets": [[455, "making-proper-sets"]], "Mathematical functions": [[3, "mathematical-functions"], [451, null]], "Matrix Functions": [[448, "matrix-functions"]], "Matrix and vector products": [[448, "matrix-and-vector-products"]], "Matrix multiplication": [[485, "matrix-multiplication"]], "Measure API coverage": [[481, null]], "Memory Layout": [[452, "memory-layout"]], "Merge tasks to reduce overhead": [[484, "merge-tasks-to-reduce-overhead"]], "Miscellaneous": [[451, "miscellaneous"]], "Miscellaneous matrix routines": [[3, "miscellaneous-matrix-routines"]], "Module-Level": [[8, "module-level"]], "Multi-Dimensional Array": [[8, "multi-dimensional-array"]], "Multi-node HPC": [[485, "multi-node-hpc"]], "Multi-node execution": [[477, "multi-node-execution"]], "NVIDIA cuPyNumeric": [[474, null]], "Newton Raphson Method In Two Dimensions": [[470, null]], "Norms and other numbers": [[448, "norms-and-other-numbers"]], "NumPy": [[476, "numpy"], [485, "numpy"]], "NumPy binary files (npy, npz)": [[447, "numpy-binary-files-npy-npz"]], "NumPy vs cuPyNumeric APIs": [[8, "numpy-vs-cupynumeric-apis"]], "Numerical ranges": [[9, "numerical-ranges"]], "OpenBLAS": [[461, "openblas"]], "Order argument": [[478, "order-argument"]], "Order statistics": [[458, "order-statistics"]], "Other Attributes": [[452, "other-attributes"]], "Other options": [[485, "other-options"]], "Overall coverage report": [[481, "overall-coverage-report"]], "Packing and unpacking bits": [[3, "packing-and-unpacking-bits"]], "Padding arrays": [[3, "padding-arrays"]], "Passing Legion and Realm arguments": [[477, "passing-legion-and-realm-arguments"]], "Performance Benchmarking": [[479, null]], "Pip": [[485, "pip"]], "Project comparisons": [[8, null]], "Questions?": [[473, "questions"]], "Random Generator": [[453, "random-generator"]], "Random Kit": [[476, "random-kit"]], "Random Sampling": [[8, "random-sampling"]], "Random sampling": [[3, "random-sampling"]], "Random sampling (cupynumeric.random)": [[453, null]], "Rational routines": [[451, "rational-routines"]], "Real FFTs": [[11, "real-ffts"]], "Rearranging elements": [[450, "rearranging-elements"]], "Reductions": [[478, "reductions"]], "Reshape returns a copy instead of view": [[484, "reshape-returns-a-copy-instead-of-view"]], "Resource allocation": [[485, "resource-allocation"]], "Returning a copy instead of a view": [[478, "returning-a-copy-instead-of-a-view"]], "Review Process": [[460, "review-process"]], "Rounding": [[451, "rounding"]], "Routines": [[454, null]], "Running cuPyNumeric code": [[485, "running-cupynumeric-code"]], "Running on CPU": [[485, "running-on-cpu"], [485, "id2"], [485, "id4"], [485, "id6"]], "Running on GPU": [[485, "running-on-gpu"], [485, "id3"], [485, "id5"], [485, "id7"], [485, "id9"]], "Running on GPU cluster": [[485, "running-on-gpu-cluster"]], "Running tests": [[463, null]], "SVD and related": [[3, "svd-and-related"]], "Sample Code": [[485, "sample-code"], [485, "id8"]], "Sample computation": [[485, "sample-computation"]], "Scalar return values": [[478, "scalar-return-values"]], "Searching": [[457, "searching"]], "Searching, sorting, and counting": [[3, "searching-sorting-and-counting"]], "Seeding and State": [[453, "seeding-and-state"]], "Set operations": [[3, "set-operations"]], "Set routines": [[455, null]], "Settings": [[456, null]], "Shape manipulation": [[452, "shape-manipulation"]], "Simple random data": [[453, "simple-random-data"]], "Single node": [[485, "single-node"]], "Single-node setup": [[485, "single-node-setup"]], "Solving equations and inverting matrices": [[448, "solving-equations-and-inverting-matrices"]], "Sorting": [[457, "sorting"]], "Sorting, searching, and counting": [[457, null]], "Special methods": [[452, "special-methods"]], "Splitting arrays": [[450, "splitting-arrays"]], "Stack results in a performance penalty": [[484, "stack-results-in-a-performance-penalty"]], "Stage configuration": [[463, "stage-configuration"]], "Standard FFTs": [[11, "standard-ffts"]], "Statistics": [[458, null]], "Sums, products, differences": [[451, "sums-products-differences"]], "Supported shapes and datatypes": [[478, "supported-shapes-and-datatypes"]], "TBLIS": [[461, "tblis"], [476, "tblis"]], "The Legalese: Developer Certificate of Origin": [[460, "the-legalese-developer-certificate-of-origin"]], "The N-Dimensional array (cupynumeric.ndarray)": [[452, null]], "Third-party notices": [[476, null]], "Tiling arrays": [[450, "tiling-arrays"]], "Top three Tips": [[485, "top-three-tips"]], "TorchSWE case study": [[472, null]], "Transpose-like operations": [[450, "transpose-like-operations"]], "Trigonometric functions": [[451, "trigonometric-functions"]], "Truth value testing": [[449, "truth-value-testing"]], "Trying Numpy code without changes": [[482, null]], "Tutorial": [[485, null]], "Ufuncs": [[3, "ufuncs"]], "Usage": [[486, null]], "Use array-based operations, AVOID loops with indexing": [[484, "use-array-based-operations-avoid-loops-with-indexing"]], "Use boolean masks, AVOID advanced indexing": [[484, "use-boolean-masks-avoid-advanced-indexing"]], "Use cuPyNumeric or NumPy arrays, AVOID native lists": [[484, "use-cupynumeric-or-numpy-arrays-avoid-native-lists"]], "Use logic functions, AVOID iterating through a loop": [[484, "use-logic-functions-avoid-iterating-through-a-loop"]], "Use mathematical functions, AVOID element-wise loops": [[484, "use-mathematical-functions-avoid-element-wise-loops"]], "Use output arguments to reduce memory allocation": [[484, "use-output-arguments-to-reduce-memory-allocation"]], "Use putmask to update an array based on another array": [[484, "use-putmask-to-update-an-array-based-on-another-array"]], "User guide": [[483, null]], "Using Legate timing tools": [[479, "using-legate-timing-tools"]], "Using a manual task manager": [[477, "using-a-manual-task-manager"]], "Using legate": [[477, "using-legate"]], "Various windows": [[459, "various-windows"]], "Vectorize for better performance": [[484, "vectorize-for-better-performance"]], "Verify your Installation": [[475, "verify-your-installation"]], "What are the anti-patterns in a NumPy code?": [[473, "what-are-the-anti-patterns-in-a-numpy-code"]], "What are the defaults?": [[473, "what-are-the-defaults"]], "What are the different task variants available in Legate?": [[473, "what-are-the-different-task-variants-available-in-legate"]], "What does this warning mean?": [[473, "what-does-this-warning-mean"]], "What if I don\u2019t have a GPU?": [[473, "what-if-i-dont-have-a-gpu"]], "What is the difference between Legate and cuPyNumeric?": [[473, "what-is-the-difference-between-legate-and-cupynumeric"]], "What is the version of legate?": [[473, "what-is-the-version-of-legate"]], "When to use python vs legate?": [[473, "when-to-use-python-vs-legate"]], "Where I can read more about cuPyNumeric?": [[473, "where-i-can-read-more-about-cupynumeric"]], "Why are the results different from NumPy?": [[473, "why-are-the-results-different-from-numpy"]], "Why doesn\u2019t Legate use my GPU?": [[473, "why-doesnt-legate-use-my-gpu"]], "Why is cuPyNumeric slower than CuPy on my laptop?": [[473, "why-is-cupynumeric-slower-than-cupy-on-my-laptop"]], "Why is cuPyNumeric slower than NumPy on my laptop?": [[473, "why-is-cupynumeric-slower-than-numpy-on-my-laptop"]], "Window functions": [[459, null]], "cuPyNumeric": [[485, "cupynumeric"]], "cuPyNumeric vs NumPy": [[485, "cupynumeric-vs-numpy"]], "cupynumeric.absolute": [[12, null]], "cupynumeric.add": [[13, null]], "cupynumeric.all": [[14, null]], "cupynumeric.allclose": [[15, null]], "cupynumeric.amax": [[16, null]], "cupynumeric.amin": [[17, null]], "cupynumeric.angle": [[18, null]], "cupynumeric.any": [[19, null]], "cupynumeric.append": [[20, null]], "cupynumeric.arange": [[21, null]], "cupynumeric.arccos": [[22, null]], "cupynumeric.arccosh": [[23, null]], "cupynumeric.arcsin": [[24, null]], "cupynumeric.arcsinh": [[25, null]], "cupynumeric.arctan": [[26, null]], "cupynumeric.arctan2": [[27, null]], "cupynumeric.arctanh": [[28, null]], "cupynumeric.argmax": [[29, null]], "cupynumeric.argmin": [[30, null]], "cupynumeric.argpartition": [[31, null]], "cupynumeric.argsort": [[32, null]], "cupynumeric.argwhere": [[33, null]], "cupynumeric.array": [[34, null]], "cupynumeric.array_equal": [[35, null]], "cupynumeric.array_split": [[36, null]], "cupynumeric.asarray": [[37, null]], "cupynumeric.atleast_1d": [[38, null]], "cupynumeric.atleast_2d": [[39, null]], "cupynumeric.atleast_3d": [[40, null]], "cupynumeric.average": [[41, null]], "cupynumeric.bartlett": [[42, null]], "cupynumeric.bincount": [[43, null]], "cupynumeric.bitwise_and": [[44, null]], "cupynumeric.bitwise_or": [[45, null]], "cupynumeric.bitwise_xor": [[46, null]], "cupynumeric.blackman": [[47, null]], "cupynumeric.block": [[48, null]], "cupynumeric.broadcast": [[6, null]], "cupynumeric.broadcast_arrays": [[49, null]], "cupynumeric.broadcast_shapes": [[50, null]], "cupynumeric.broadcast_to": [[51, null]], "cupynumeric.cbrt": [[52, null]], "cupynumeric.ceil": [[53, null]], "cupynumeric.choose": [[54, null]], "cupynumeric.clip": [[55, null]], "cupynumeric.column_stack": [[56, null]], "cupynumeric.compress": [[57, null]], "cupynumeric.concatenate": [[58, null]], "cupynumeric.conj": [[59, null]], "cupynumeric.conjugate": [[60, null]], "cupynumeric.convolve": [[61, null]], "cupynumeric.copy": [[62, null]], "cupynumeric.copysign": [[63, null]], "cupynumeric.cos": [[64, null]], "cupynumeric.cosh": [[65, null]], "cupynumeric.count_nonzero": [[66, null]], "cupynumeric.cov": [[67, null]], "cupynumeric.cumprod": [[68, null]], "cupynumeric.cumsum": [[69, null]], "cupynumeric.deg2rad": [[70, null]], "cupynumeric.degrees": [[71, null]], "cupynumeric.diag": [[72, null]], "cupynumeric.diag_indices": [[73, null]], "cupynumeric.diag_indices_from": [[74, null]], "cupynumeric.diagonal": [[75, null]], "cupynumeric.diff": [[76, null]], "cupynumeric.digitize": [[77, null]], "cupynumeric.divide": [[78, null]], "cupynumeric.dot": [[79, null]], "cupynumeric.dsplit": [[80, null]], "cupynumeric.dstack": [[81, null]], "cupynumeric.einsum": [[82, null]], "cupynumeric.einsum_path": [[83, null]], "cupynumeric.empty": [[84, null]], "cupynumeric.empty_like": [[85, null]], "cupynumeric.equal": [[86, null]], "cupynumeric.exp": [[87, null]], "cupynumeric.exp2": [[88, null]], "cupynumeric.expand_dims": [[89, null]], "cupynumeric.expm1": [[90, null]], "cupynumeric.extract": [[91, null]], "cupynumeric.eye": [[92, null]], "cupynumeric.fabs": [[93, null]], "cupynumeric.fft.fft": [[94, null]], "cupynumeric.fft.fft2": [[95, null]], "cupynumeric.fft.fftn": [[96, null]], "cupynumeric.fft.fftshift": [[97, null]], "cupynumeric.fft.hfft": [[98, null]], "cupynumeric.fft.ifft": [[99, null]], "cupynumeric.fft.ifft2": [[100, null]], "cupynumeric.fft.ifftn": [[101, null]], "cupynumeric.fft.ifftshift": [[102, null]], "cupynumeric.fft.ihfft": [[103, null]], "cupynumeric.fft.irfft": [[104, null]], "cupynumeric.fft.irfft2": [[105, null]], "cupynumeric.fft.irfftn": [[106, null]], "cupynumeric.fft.rfft": [[107, null]], "cupynumeric.fft.rfft2": [[108, null]], "cupynumeric.fft.rfftn": [[109, null]], "cupynumeric.fill_diagonal": [[110, null]], "cupynumeric.find_common_type": [[111, null]], "cupynumeric.flatnonzero": [[112, null]], "cupynumeric.flip": [[113, null]], "cupynumeric.fliplr": [[114, null]], "cupynumeric.flipud": [[115, null]], "cupynumeric.float_power": [[116, null]], "cupynumeric.floor": [[117, null]], "cupynumeric.floor_divide": [[118, null]], "cupynumeric.fmax": [[119, null]], "cupynumeric.fmin": [[120, null]], "cupynumeric.fmod": [[121, null]], "cupynumeric.frexp": [[122, null]], "cupynumeric.full": [[123, null]], "cupynumeric.full_like": [[124, null]], "cupynumeric.gcd": [[125, null]], "cupynumeric.gradient": [[126, null]], "cupynumeric.greater": [[127, null]], "cupynumeric.greater_equal": [[128, null]], "cupynumeric.hamming": [[129, null]], "cupynumeric.hanning": [[130, null]], "cupynumeric.histogram": [[131, null]], "cupynumeric.hsplit": [[132, null]], "cupynumeric.hstack": [[133, null]], "cupynumeric.hypot": [[134, null]], "cupynumeric.identity": [[135, null]], "cupynumeric.imag": [[136, null]], "cupynumeric.indices": [[137, null]], "cupynumeric.inner": [[138, null]], "cupynumeric.invert": [[139, null]], "cupynumeric.isclose": [[140, null]], "cupynumeric.iscomplex": [[141, null]], "cupynumeric.iscomplexobj": [[142, null]], "cupynumeric.isfinite": [[143, null]], "cupynumeric.isinf": [[144, null]], "cupynumeric.isnan": [[145, null]], "cupynumeric.isneginf": [[146, null]], "cupynumeric.isposinf": [[147, null]], "cupynumeric.isreal": [[148, null]], "cupynumeric.isrealobj": [[149, null]], "cupynumeric.isscalar": [[150, null]], "cupynumeric.ix_": [[151, null]], "cupynumeric.kaiser": [[152, null]], "cupynumeric.lcm": [[153, null]], "cupynumeric.ldexp": [[154, null]], "cupynumeric.left_shift": [[155, null]], "cupynumeric.less": [[156, null]], "cupynumeric.less_equal": [[157, null]], "cupynumeric.linalg.cholesky": [[158, null]], "cupynumeric.linalg.eig": [[159, null]], "cupynumeric.linalg.eigh": [[160, null]], "cupynumeric.linalg.eigvals": [[161, null]], "cupynumeric.linalg.eigvalsh": [[162, null]], "cupynumeric.linalg.expm": [[163, null]], "cupynumeric.linalg.matrix_power": [[164, null]], "cupynumeric.linalg.multi_dot": [[165, null]], "cupynumeric.linalg.norm": [[166, null]], "cupynumeric.linalg.qr": [[167, null]], "cupynumeric.linalg.solve": [[168, null]], "cupynumeric.linalg.svd": [[169, null]], "cupynumeric.linspace": [[170, null]], "cupynumeric.load": [[171, null]], "cupynumeric.log": [[172, null]], "cupynumeric.log10": [[173, null]], "cupynumeric.log1p": [[174, null]], "cupynumeric.log2": [[175, null]], "cupynumeric.logaddexp": [[176, null]], "cupynumeric.logaddexp2": [[177, null]], "cupynumeric.logical_and": [[178, null]], "cupynumeric.logical_not": [[179, null]], "cupynumeric.logical_or": [[180, null]], "cupynumeric.logical_xor": [[181, null]], "cupynumeric.mask_indices": [[182, null]], "cupynumeric.matmul": [[183, null]], "cupynumeric.maximum": [[184, null]], "cupynumeric.mean": [[185, null]], "cupynumeric.median": [[186, null]], "cupynumeric.meshgrid": [[187, null]], "cupynumeric.minimum": [[188, null]], "cupynumeric.mod": [[189, null]], "cupynumeric.modf": [[190, null]], "cupynumeric.moveaxis": [[191, null]], "cupynumeric.multiply": [[192, null]], "cupynumeric.nanargmax": [[193, null]], "cupynumeric.nanargmin": [[194, null]], "cupynumeric.nancumprod": [[195, null]], "cupynumeric.nancumsum": [[196, null]], "cupynumeric.nanmax": [[197, null]], "cupynumeric.nanmean": [[198, null]], "cupynumeric.nanmedian": [[199, null]], "cupynumeric.nanmin": [[200, null]], "cupynumeric.nanpercentile": [[201, null]], "cupynumeric.nanprod": [[202, null]], "cupynumeric.nanquantile": [[203, null]], "cupynumeric.nansum": [[204, null]], "cupynumeric.ndarray": [[4, null]], "cupynumeric.ndarray.T": [[205, null]], "cupynumeric.ndarray.__abs__": [[206, null]], "cupynumeric.ndarray.__add__": [[207, null]], "cupynumeric.ndarray.__and__": [[208, null]], "cupynumeric.ndarray.__array__": [[209, null]], "cupynumeric.ndarray.__bool__": [[210, null]], "cupynumeric.ndarray.__complex__": [[211, null]], "cupynumeric.ndarray.__contains__": [[212, null]], "cupynumeric.ndarray.__copy__": [[213, null]], "cupynumeric.ndarray.__deepcopy__": [[214, null]], "cupynumeric.ndarray.__divmod__": [[215, null]], "cupynumeric.ndarray.__eq__": [[216, null]], "cupynumeric.ndarray.__float__": [[217, null]], "cupynumeric.ndarray.__floordiv__": [[218, null]], "cupynumeric.ndarray.__ge__": [[219, null]], "cupynumeric.ndarray.__getitem__": [[220, null]], "cupynumeric.ndarray.__gt__": [[221, null]], "cupynumeric.ndarray.__iadd__": [[222, null]], "cupynumeric.ndarray.__iand__": [[223, null]], "cupynumeric.ndarray.__ifloordiv__": [[224, null]], "cupynumeric.ndarray.__ilshift__": [[225, null]], "cupynumeric.ndarray.__imatmul__": [[226, null]], "cupynumeric.ndarray.__imod__": [[227, null]], "cupynumeric.ndarray.__imul__": [[228, null]], "cupynumeric.ndarray.__index__": [[229, null]], "cupynumeric.ndarray.__int__": [[230, null]], "cupynumeric.ndarray.__invert__": [[231, null]], "cupynumeric.ndarray.__ior__": [[232, null]], "cupynumeric.ndarray.__ipow__": [[233, null]], "cupynumeric.ndarray.__irshift__": [[234, null]], "cupynumeric.ndarray.__isub__": [[235, null]], "cupynumeric.ndarray.__itruediv__": [[236, null]], "cupynumeric.ndarray.__ixor__": [[237, null]], "cupynumeric.ndarray.__le__": [[238, null]], "cupynumeric.ndarray.__len__": [[239, null]], "cupynumeric.ndarray.__lshift__": [[240, null]], "cupynumeric.ndarray.__lt__": [[241, null]], "cupynumeric.ndarray.__matmul__": [[242, null]], "cupynumeric.ndarray.__mod__": [[243, null]], "cupynumeric.ndarray.__mul__": [[244, null]], "cupynumeric.ndarray.__ne__": [[245, null]], "cupynumeric.ndarray.__neg__": [[246, null]], "cupynumeric.ndarray.__new__": [[247, null]], "cupynumeric.ndarray.__or__": [[248, null]], "cupynumeric.ndarray.__pos__": [[249, null]], "cupynumeric.ndarray.__pow__": [[250, null]], "cupynumeric.ndarray.__reduce__": [[251, null]], "cupynumeric.ndarray.__repr__": [[252, null]], "cupynumeric.ndarray.__rmatmul__": [[253, null]], "cupynumeric.ndarray.__rshift__": [[254, null]], "cupynumeric.ndarray.__setitem__": [[255, null]], "cupynumeric.ndarray.__setstate__": [[256, null]], "cupynumeric.ndarray.__str__": [[257, null]], "cupynumeric.ndarray.__sub__": [[258, null]], "cupynumeric.ndarray.__truediv__": [[259, null]], "cupynumeric.ndarray.__xor__": [[260, null]], "cupynumeric.ndarray.all": [[261, null]], "cupynumeric.ndarray.any": [[262, null]], "cupynumeric.ndarray.argmax": [[263, null]], "cupynumeric.ndarray.argmin": [[264, null]], "cupynumeric.ndarray.argpartition": [[265, null]], "cupynumeric.ndarray.argsort": [[266, null]], "cupynumeric.ndarray.astype": [[267, null]], "cupynumeric.ndarray.base": [[268, null]], "cupynumeric.ndarray.choose": [[269, null]], "cupynumeric.ndarray.clip": [[270, null]], "cupynumeric.ndarray.compress": [[271, null]], "cupynumeric.ndarray.conj": [[272, null]], "cupynumeric.ndarray.conjugate": [[273, null]], "cupynumeric.ndarray.copy": [[274, null]], "cupynumeric.ndarray.ctypes": [[275, null]], "cupynumeric.ndarray.cumprod": [[276, null]], "cupynumeric.ndarray.cumsum": [[277, null]], "cupynumeric.ndarray.data": [[278, null]], "cupynumeric.ndarray.diagonal": [[279, null]], "cupynumeric.ndarray.dot": [[280, null]], "cupynumeric.ndarray.dtype": [[281, null]], "cupynumeric.ndarray.dump": [[282, null]], "cupynumeric.ndarray.dumps": [[283, null]], "cupynumeric.ndarray.fill": [[284, null]], "cupynumeric.ndarray.flags": [[285, null]], "cupynumeric.ndarray.flat": [[286, null]], "cupynumeric.ndarray.flatten": [[287, null]], "cupynumeric.ndarray.flip": [[288, null]], "cupynumeric.ndarray.getfield": [[289, null]], "cupynumeric.ndarray.imag": [[290, null]], "cupynumeric.ndarray.item": [[291, null]], "cupynumeric.ndarray.itemset": [[292, null]], "cupynumeric.ndarray.itemsize": [[293, null]], "cupynumeric.ndarray.max": [[294, null]], "cupynumeric.ndarray.mean": [[295, null]], "cupynumeric.ndarray.min": [[296, null]], "cupynumeric.ndarray.nbytes": [[297, null]], "cupynumeric.ndarray.ndim": [[298, null]], "cupynumeric.ndarray.nonzero": [[299, null]], "cupynumeric.ndarray.partition": [[300, null]], "cupynumeric.ndarray.prod": [[301, null]], "cupynumeric.ndarray.put": [[302, null]], "cupynumeric.ndarray.ravel": [[303, null]], "cupynumeric.ndarray.real": [[304, null]], "cupynumeric.ndarray.reshape": [[305, null]], "cupynumeric.ndarray.searchsorted": [[306, null]], "cupynumeric.ndarray.setfield": [[307, null]], "cupynumeric.ndarray.setflags": [[308, null]], "cupynumeric.ndarray.shape": [[309, null]], "cupynumeric.ndarray.size": [[310, null]], "cupynumeric.ndarray.sort": [[311, null]], "cupynumeric.ndarray.squeeze": [[312, null]], "cupynumeric.ndarray.strides": [[313, null]], "cupynumeric.ndarray.sum": [[314, null]], "cupynumeric.ndarray.swapaxes": [[315, null]], "cupynumeric.ndarray.take": [[316, null]], "cupynumeric.ndarray.tobytes": [[317, null]], "cupynumeric.ndarray.tofile": [[318, null]], "cupynumeric.ndarray.tolist": [[319, null]], "cupynumeric.ndarray.tostring": [[320, null]], "cupynumeric.ndarray.trace": [[321, null]], "cupynumeric.ndarray.transpose": [[322, null]], "cupynumeric.ndarray.unique": [[323, null]], "cupynumeric.ndarray.var": [[324, null]], "cupynumeric.ndarray.view": [[325, null]], "cupynumeric.ndim": [[326, null]], "cupynumeric.negative": [[327, null]], "cupynumeric.nextafter": [[328, null]], "cupynumeric.nonzero": [[329, null]], "cupynumeric.not_equal": [[330, null]], "cupynumeric.ones": [[331, null]], "cupynumeric.ones_like": [[332, null]], "cupynumeric.outer": [[333, null]], "cupynumeric.packbits": [[334, null]], "cupynumeric.partition": [[335, null]], "cupynumeric.percentile": [[336, null]], "cupynumeric.place": [[337, null]], "cupynumeric.positive": [[338, null]], "cupynumeric.power": [[339, null]], "cupynumeric.prod": [[340, null]], "cupynumeric.put": [[341, null]], "cupynumeric.put_along_axis": [[342, null]], "cupynumeric.putmask": [[343, null]], "cupynumeric.quantile": [[344, null]], "cupynumeric.rad2deg": [[345, null]], "cupynumeric.radians": [[346, null]], "cupynumeric.random.BitGenerator": [[1, null]], "cupynumeric.random.Generator": [[2, null]], "cupynumeric.random.beta": [[347, null]], "cupynumeric.random.binomial": [[348, null]], "cupynumeric.random.bytes": [[349, null]], "cupynumeric.random.chisquare": [[350, null]], "cupynumeric.random.default_rng": [[351, null]], "cupynumeric.random.exponential": [[352, null]], "cupynumeric.random.f": [[353, null]], "cupynumeric.random.gamma": [[354, null]], "cupynumeric.random.geometric": [[355, null]], "cupynumeric.random.gumbel": [[356, null]], "cupynumeric.random.hypergeometric": [[357, null]], "cupynumeric.random.laplace": [[358, null]], "cupynumeric.random.logistic": [[359, null]], "cupynumeric.random.lognormal": [[360, null]], "cupynumeric.random.logseries": [[361, null]], "cupynumeric.random.negative_binomial": [[362, null]], "cupynumeric.random.noncentral_chisquare": [[363, null]], "cupynumeric.random.noncentral_f": [[364, null]], "cupynumeric.random.normal": [[365, null]], "cupynumeric.random.pareto": [[366, null]], "cupynumeric.random.poisson": [[367, null]], "cupynumeric.random.power": [[368, null]], "cupynumeric.random.rand": [[369, null]], "cupynumeric.random.randint": [[370, null]], "cupynumeric.random.randn": [[371, null]], "cupynumeric.random.random": [[372, null]], "cupynumeric.random.random_integers": [[373, null]], "cupynumeric.random.random_sample": [[374, null]], "cupynumeric.random.ranf": [[375, null]], "cupynumeric.random.rayleigh": [[376, null]], "cupynumeric.random.sample": [[377, null]], "cupynumeric.random.seed": [[378, null]], "cupynumeric.random.standard_cauchy": [[379, null]], "cupynumeric.random.standard_exponential": [[380, null]], "cupynumeric.random.standard_gamma": [[381, null]], "cupynumeric.random.standard_t": [[382, null]], "cupynumeric.random.triangular": [[383, null]], "cupynumeric.random.uniform": [[384, null]], "cupynumeric.random.vonmises": [[385, null]], "cupynumeric.random.wald": [[386, null]], "cupynumeric.random.weibull": [[387, null]], "cupynumeric.random.zipf": [[388, null]], "cupynumeric.ravel": [[389, null]], "cupynumeric.real": [[390, null]], "cupynumeric.reciprocal": [[391, null]], "cupynumeric.remainder": [[392, null]], "cupynumeric.repeat": [[393, null]], "cupynumeric.reshape": [[394, null]], "cupynumeric.right_shift": [[395, null]], "cupynumeric.rint": [[396, null]], "cupynumeric.roll": [[397, null]], "cupynumeric.rot90": [[398, null]], "cupynumeric.round": [[399, null]], "cupynumeric.row_stack": [[400, null]], "cupynumeric.searchsorted": [[401, null]], "cupynumeric.select": [[402, null]], "cupynumeric.shape": [[403, null]], "cupynumeric.sign": [[404, null]], "cupynumeric.signbit": [[405, null]], "cupynumeric.sin": [[406, null]], "cupynumeric.sinh": [[407, null]], "cupynumeric.sort": [[408, null]], "cupynumeric.sort_complex": [[409, null]], "cupynumeric.split": [[410, null]], "cupynumeric.sqrt": [[411, null]], "cupynumeric.square": [[412, null]], "cupynumeric.squeeze": [[413, null]], "cupynumeric.stack": [[414, null]], "cupynumeric.subtract": [[415, null]], "cupynumeric.sum": [[416, null]], "cupynumeric.swapaxes": [[417, null]], "cupynumeric.take": [[418, null]], "cupynumeric.take_along_axis": [[419, null]], "cupynumeric.tan": [[420, null]], "cupynumeric.tanh": [[421, null]], "cupynumeric.tensordot": [[422, null]], "cupynumeric.tile": [[423, null]], "cupynumeric.trace": [[424, null]], "cupynumeric.transpose": [[425, null]], "cupynumeric.tri": [[426, null]], "cupynumeric.tril": [[427, null]], "cupynumeric.tril_indices": [[428, null]], "cupynumeric.tril_indices_from": [[429, null]], "cupynumeric.triu": [[430, null]], "cupynumeric.triu_indices": [[431, null]], "cupynumeric.triu_indices_from": [[432, null]], "cupynumeric.true_divide": [[433, null]], "cupynumeric.trunc": [[434, null]], "cupynumeric.unique": [[435, null]], "cupynumeric.unpackbits": [[436, null]], "cupynumeric.unravel_index": [[437, null]], "cupynumeric.var": [[438, null]], "cupynumeric.vdot": [[439, null]], "cupynumeric.vsplit": [[440, null]], "cupynumeric.vstack": [[441, null]], "cupynumeric.where": [[442, null]], "cupynumeric.zeros": [[443, null]], "cupynumeric.zeros_like": [[444, null]], "doctor": [[456, "doctor"]], "doctor_filename": [[456, "doctor-filename"], [456, "id2"]], "doctor_format": [[456, "doctor-format"]], "fast_math": [[456, "fast-math"]], "force_thunk": [[456, "force-thunk"]], "matmul_cache_size": [[456, "matmul-cache-size"]], "min_cpu_chunk": [[456, "min-cpu-chunk"]], "min_gpu_chunk": [[456, "min-gpu-chunk"]], "min_omp_chunk": [[456, "min-omp-chunk"]], "numpy_compat": [[456, "numpy-compat"]], "preload_cudalibs": [[456, "preload-cudalibs"]], "report_coverage": [[456, "report-coverage"]], "report_dump_callstack": [[456, "report-dump-callstack"]], "report_dump_csv": [[456, "report-dump-csv"]], "warn": [[456, "warn"]]}, "docnames": ["_implemented", "api/_bitgenerator", "api/_generator", "api/_grouped", "api/_ndarray", "api/binary", "api/broadcast", "api/classes", "api/comparison", "api/creation", "api/datatype", "api/fft", "api/generated/cupynumeric.absolute", "api/generated/cupynumeric.add", "api/generated/cupynumeric.all", "api/generated/cupynumeric.allclose", "api/generated/cupynumeric.amax", "api/generated/cupynumeric.amin", "api/generated/cupynumeric.angle", "api/generated/cupynumeric.any", "api/generated/cupynumeric.append", "api/generated/cupynumeric.arange", "api/generated/cupynumeric.arccos", "api/generated/cupynumeric.arccosh", "api/generated/cupynumeric.arcsin", "api/generated/cupynumeric.arcsinh", "api/generated/cupynumeric.arctan", "api/generated/cupynumeric.arctan2", "api/generated/cupynumeric.arctanh", "api/generated/cupynumeric.argmax", "api/generated/cupynumeric.argmin", "api/generated/cupynumeric.argpartition", "api/generated/cupynumeric.argsort", "api/generated/cupynumeric.argwhere", "api/generated/cupynumeric.array", "api/generated/cupynumeric.array_equal", "api/generated/cupynumeric.array_split", "api/generated/cupynumeric.asarray", "api/generated/cupynumeric.atleast_1d", "api/generated/cupynumeric.atleast_2d", "api/generated/cupynumeric.atleast_3d", "api/generated/cupynumeric.average", "api/generated/cupynumeric.bartlett", "api/generated/cupynumeric.bincount", "api/generated/cupynumeric.bitwise_and", "api/generated/cupynumeric.bitwise_or", "api/generated/cupynumeric.bitwise_xor", "api/generated/cupynumeric.blackman", "api/generated/cupynumeric.block", "api/generated/cupynumeric.broadcast_arrays", "api/generated/cupynumeric.broadcast_shapes", "api/generated/cupynumeric.broadcast_to", "api/generated/cupynumeric.cbrt", "api/generated/cupynumeric.ceil", "api/generated/cupynumeric.choose", "api/generated/cupynumeric.clip", "api/generated/cupynumeric.column_stack", "api/generated/cupynumeric.compress", "api/generated/cupynumeric.concatenate", "api/generated/cupynumeric.conj", "api/generated/cupynumeric.conjugate", "api/generated/cupynumeric.convolve", "api/generated/cupynumeric.copy", "api/generated/cupynumeric.copysign", "api/generated/cupynumeric.cos", "api/generated/cupynumeric.cosh", "api/generated/cupynumeric.count_nonzero", "api/generated/cupynumeric.cov", "api/generated/cupynumeric.cumprod", "api/generated/cupynumeric.cumsum", "api/generated/cupynumeric.deg2rad", "api/generated/cupynumeric.degrees", "api/generated/cupynumeric.diag", "api/generated/cupynumeric.diag_indices", "api/generated/cupynumeric.diag_indices_from", "api/generated/cupynumeric.diagonal", "api/generated/cupynumeric.diff", "api/generated/cupynumeric.digitize", "api/generated/cupynumeric.divide", "api/generated/cupynumeric.dot", "api/generated/cupynumeric.dsplit", "api/generated/cupynumeric.dstack", "api/generated/cupynumeric.einsum", "api/generated/cupynumeric.einsum_path", "api/generated/cupynumeric.empty", "api/generated/cupynumeric.empty_like", "api/generated/cupynumeric.equal", "api/generated/cupynumeric.exp", "api/generated/cupynumeric.exp2", "api/generated/cupynumeric.expand_dims", "api/generated/cupynumeric.expm1", "api/generated/cupynumeric.extract", "api/generated/cupynumeric.eye", "api/generated/cupynumeric.fabs", "api/generated/cupynumeric.fft.fft", "api/generated/cupynumeric.fft.fft2", "api/generated/cupynumeric.fft.fftn", "api/generated/cupynumeric.fft.fftshift", "api/generated/cupynumeric.fft.hfft", "api/generated/cupynumeric.fft.ifft", "api/generated/cupynumeric.fft.ifft2", "api/generated/cupynumeric.fft.ifftn", "api/generated/cupynumeric.fft.ifftshift", "api/generated/cupynumeric.fft.ihfft", "api/generated/cupynumeric.fft.irfft", "api/generated/cupynumeric.fft.irfft2", "api/generated/cupynumeric.fft.irfftn", "api/generated/cupynumeric.fft.rfft", "api/generated/cupynumeric.fft.rfft2", "api/generated/cupynumeric.fft.rfftn", "api/generated/cupynumeric.fill_diagonal", "api/generated/cupynumeric.find_common_type", "api/generated/cupynumeric.flatnonzero", "api/generated/cupynumeric.flip", "api/generated/cupynumeric.fliplr", "api/generated/cupynumeric.flipud", "api/generated/cupynumeric.float_power", "api/generated/cupynumeric.floor", "api/generated/cupynumeric.floor_divide", "api/generated/cupynumeric.fmax", "api/generated/cupynumeric.fmin", "api/generated/cupynumeric.fmod", "api/generated/cupynumeric.frexp", "api/generated/cupynumeric.full", "api/generated/cupynumeric.full_like", "api/generated/cupynumeric.gcd", "api/generated/cupynumeric.gradient", "api/generated/cupynumeric.greater", "api/generated/cupynumeric.greater_equal", "api/generated/cupynumeric.hamming", "api/generated/cupynumeric.hanning", "api/generated/cupynumeric.histogram", "api/generated/cupynumeric.hsplit", "api/generated/cupynumeric.hstack", "api/generated/cupynumeric.hypot", "api/generated/cupynumeric.identity", "api/generated/cupynumeric.imag", "api/generated/cupynumeric.indices", "api/generated/cupynumeric.inner", "api/generated/cupynumeric.invert", "api/generated/cupynumeric.isclose", "api/generated/cupynumeric.iscomplex", "api/generated/cupynumeric.iscomplexobj", "api/generated/cupynumeric.isfinite", "api/generated/cupynumeric.isinf", "api/generated/cupynumeric.isnan", "api/generated/cupynumeric.isneginf", "api/generated/cupynumeric.isposinf", "api/generated/cupynumeric.isreal", "api/generated/cupynumeric.isrealobj", "api/generated/cupynumeric.isscalar", "api/generated/cupynumeric.ix_", "api/generated/cupynumeric.kaiser", "api/generated/cupynumeric.lcm", "api/generated/cupynumeric.ldexp", "api/generated/cupynumeric.left_shift", "api/generated/cupynumeric.less", "api/generated/cupynumeric.less_equal", "api/generated/cupynumeric.linalg.cholesky", "api/generated/cupynumeric.linalg.eig", "api/generated/cupynumeric.linalg.eigh", "api/generated/cupynumeric.linalg.eigvals", "api/generated/cupynumeric.linalg.eigvalsh", "api/generated/cupynumeric.linalg.expm", "api/generated/cupynumeric.linalg.matrix_power", "api/generated/cupynumeric.linalg.multi_dot", "api/generated/cupynumeric.linalg.norm", "api/generated/cupynumeric.linalg.qr", "api/generated/cupynumeric.linalg.solve", "api/generated/cupynumeric.linalg.svd", "api/generated/cupynumeric.linspace", "api/generated/cupynumeric.load", "api/generated/cupynumeric.log", "api/generated/cupynumeric.log10", "api/generated/cupynumeric.log1p", "api/generated/cupynumeric.log2", "api/generated/cupynumeric.logaddexp", "api/generated/cupynumeric.logaddexp2", "api/generated/cupynumeric.logical_and", "api/generated/cupynumeric.logical_not", "api/generated/cupynumeric.logical_or", "api/generated/cupynumeric.logical_xor", "api/generated/cupynumeric.mask_indices", "api/generated/cupynumeric.matmul", "api/generated/cupynumeric.maximum", "api/generated/cupynumeric.mean", "api/generated/cupynumeric.median", "api/generated/cupynumeric.meshgrid", "api/generated/cupynumeric.minimum", "api/generated/cupynumeric.mod", "api/generated/cupynumeric.modf", "api/generated/cupynumeric.moveaxis", "api/generated/cupynumeric.multiply", "api/generated/cupynumeric.nanargmax", "api/generated/cupynumeric.nanargmin", "api/generated/cupynumeric.nancumprod", "api/generated/cupynumeric.nancumsum", "api/generated/cupynumeric.nanmax", "api/generated/cupynumeric.nanmean", "api/generated/cupynumeric.nanmedian", "api/generated/cupynumeric.nanmin", "api/generated/cupynumeric.nanpercentile", "api/generated/cupynumeric.nanprod", "api/generated/cupynumeric.nanquantile", "api/generated/cupynumeric.nansum", "api/generated/cupynumeric.ndarray.T", "api/generated/cupynumeric.ndarray.__abs__", "api/generated/cupynumeric.ndarray.__add__", "api/generated/cupynumeric.ndarray.__and__", "api/generated/cupynumeric.ndarray.__array__", "api/generated/cupynumeric.ndarray.__bool__", "api/generated/cupynumeric.ndarray.__complex__", "api/generated/cupynumeric.ndarray.__contains__", "api/generated/cupynumeric.ndarray.__copy__", "api/generated/cupynumeric.ndarray.__deepcopy__", "api/generated/cupynumeric.ndarray.__divmod__", "api/generated/cupynumeric.ndarray.__eq__", "api/generated/cupynumeric.ndarray.__float__", "api/generated/cupynumeric.ndarray.__floordiv__", "api/generated/cupynumeric.ndarray.__ge__", "api/generated/cupynumeric.ndarray.__getitem__", "api/generated/cupynumeric.ndarray.__gt__", "api/generated/cupynumeric.ndarray.__iadd__", "api/generated/cupynumeric.ndarray.__iand__", "api/generated/cupynumeric.ndarray.__ifloordiv__", "api/generated/cupynumeric.ndarray.__ilshift__", "api/generated/cupynumeric.ndarray.__imatmul__", "api/generated/cupynumeric.ndarray.__imod__", "api/generated/cupynumeric.ndarray.__imul__", "api/generated/cupynumeric.ndarray.__index__", "api/generated/cupynumeric.ndarray.__int__", "api/generated/cupynumeric.ndarray.__invert__", "api/generated/cupynumeric.ndarray.__ior__", "api/generated/cupynumeric.ndarray.__ipow__", "api/generated/cupynumeric.ndarray.__irshift__", "api/generated/cupynumeric.ndarray.__isub__", "api/generated/cupynumeric.ndarray.__itruediv__", "api/generated/cupynumeric.ndarray.__ixor__", "api/generated/cupynumeric.ndarray.__le__", "api/generated/cupynumeric.ndarray.__len__", "api/generated/cupynumeric.ndarray.__lshift__", "api/generated/cupynumeric.ndarray.__lt__", "api/generated/cupynumeric.ndarray.__matmul__", "api/generated/cupynumeric.ndarray.__mod__", "api/generated/cupynumeric.ndarray.__mul__", "api/generated/cupynumeric.ndarray.__ne__", "api/generated/cupynumeric.ndarray.__neg__", "api/generated/cupynumeric.ndarray.__new__", "api/generated/cupynumeric.ndarray.__or__", "api/generated/cupynumeric.ndarray.__pos__", "api/generated/cupynumeric.ndarray.__pow__", "api/generated/cupynumeric.ndarray.__reduce__", "api/generated/cupynumeric.ndarray.__repr__", "api/generated/cupynumeric.ndarray.__rmatmul__", "api/generated/cupynumeric.ndarray.__rshift__", "api/generated/cupynumeric.ndarray.__setitem__", "api/generated/cupynumeric.ndarray.__setstate__", "api/generated/cupynumeric.ndarray.__str__", "api/generated/cupynumeric.ndarray.__sub__", "api/generated/cupynumeric.ndarray.__truediv__", "api/generated/cupynumeric.ndarray.__xor__", "api/generated/cupynumeric.ndarray.all", "api/generated/cupynumeric.ndarray.any", "api/generated/cupynumeric.ndarray.argmax", "api/generated/cupynumeric.ndarray.argmin", "api/generated/cupynumeric.ndarray.argpartition", "api/generated/cupynumeric.ndarray.argsort", "api/generated/cupynumeric.ndarray.astype", "api/generated/cupynumeric.ndarray.base", "api/generated/cupynumeric.ndarray.choose", "api/generated/cupynumeric.ndarray.clip", "api/generated/cupynumeric.ndarray.compress", "api/generated/cupynumeric.ndarray.conj", "api/generated/cupynumeric.ndarray.conjugate", "api/generated/cupynumeric.ndarray.copy", "api/generated/cupynumeric.ndarray.ctypes", "api/generated/cupynumeric.ndarray.cumprod", "api/generated/cupynumeric.ndarray.cumsum", "api/generated/cupynumeric.ndarray.data", "api/generated/cupynumeric.ndarray.diagonal", "api/generated/cupynumeric.ndarray.dot", "api/generated/cupynumeric.ndarray.dtype", "api/generated/cupynumeric.ndarray.dump", "api/generated/cupynumeric.ndarray.dumps", "api/generated/cupynumeric.ndarray.fill", "api/generated/cupynumeric.ndarray.flags", "api/generated/cupynumeric.ndarray.flat", "api/generated/cupynumeric.ndarray.flatten", "api/generated/cupynumeric.ndarray.flip", "api/generated/cupynumeric.ndarray.getfield", "api/generated/cupynumeric.ndarray.imag", "api/generated/cupynumeric.ndarray.item", "api/generated/cupynumeric.ndarray.itemset", "api/generated/cupynumeric.ndarray.itemsize", "api/generated/cupynumeric.ndarray.max", "api/generated/cupynumeric.ndarray.mean", "api/generated/cupynumeric.ndarray.min", "api/generated/cupynumeric.ndarray.nbytes", "api/generated/cupynumeric.ndarray.ndim", "api/generated/cupynumeric.ndarray.nonzero", "api/generated/cupynumeric.ndarray.partition", "api/generated/cupynumeric.ndarray.prod", "api/generated/cupynumeric.ndarray.put", "api/generated/cupynumeric.ndarray.ravel", "api/generated/cupynumeric.ndarray.real", "api/generated/cupynumeric.ndarray.reshape", "api/generated/cupynumeric.ndarray.searchsorted", "api/generated/cupynumeric.ndarray.setfield", "api/generated/cupynumeric.ndarray.setflags", "api/generated/cupynumeric.ndarray.shape", "api/generated/cupynumeric.ndarray.size", "api/generated/cupynumeric.ndarray.sort", "api/generated/cupynumeric.ndarray.squeeze", "api/generated/cupynumeric.ndarray.strides", "api/generated/cupynumeric.ndarray.sum", "api/generated/cupynumeric.ndarray.swapaxes", "api/generated/cupynumeric.ndarray.take", "api/generated/cupynumeric.ndarray.tobytes", "api/generated/cupynumeric.ndarray.tofile", "api/generated/cupynumeric.ndarray.tolist", "api/generated/cupynumeric.ndarray.tostring", "api/generated/cupynumeric.ndarray.trace", "api/generated/cupynumeric.ndarray.transpose", "api/generated/cupynumeric.ndarray.unique", "api/generated/cupynumeric.ndarray.var", "api/generated/cupynumeric.ndarray.view", "api/generated/cupynumeric.ndim", "api/generated/cupynumeric.negative", "api/generated/cupynumeric.nextafter", "api/generated/cupynumeric.nonzero", "api/generated/cupynumeric.not_equal", "api/generated/cupynumeric.ones", "api/generated/cupynumeric.ones_like", "api/generated/cupynumeric.outer", "api/generated/cupynumeric.packbits", "api/generated/cupynumeric.partition", "api/generated/cupynumeric.percentile", "api/generated/cupynumeric.place", "api/generated/cupynumeric.positive", "api/generated/cupynumeric.power", "api/generated/cupynumeric.prod", "api/generated/cupynumeric.put", "api/generated/cupynumeric.put_along_axis", "api/generated/cupynumeric.putmask", "api/generated/cupynumeric.quantile", "api/generated/cupynumeric.rad2deg", "api/generated/cupynumeric.radians", "api/generated/cupynumeric.random.beta", "api/generated/cupynumeric.random.binomial", "api/generated/cupynumeric.random.bytes", "api/generated/cupynumeric.random.chisquare", "api/generated/cupynumeric.random.default_rng", "api/generated/cupynumeric.random.exponential", "api/generated/cupynumeric.random.f", "api/generated/cupynumeric.random.gamma", "api/generated/cupynumeric.random.geometric", "api/generated/cupynumeric.random.gumbel", "api/generated/cupynumeric.random.hypergeometric", "api/generated/cupynumeric.random.laplace", "api/generated/cupynumeric.random.logistic", "api/generated/cupynumeric.random.lognormal", "api/generated/cupynumeric.random.logseries", "api/generated/cupynumeric.random.negative_binomial", "api/generated/cupynumeric.random.noncentral_chisquare", "api/generated/cupynumeric.random.noncentral_f", "api/generated/cupynumeric.random.normal", "api/generated/cupynumeric.random.pareto", "api/generated/cupynumeric.random.poisson", "api/generated/cupynumeric.random.power", "api/generated/cupynumeric.random.rand", "api/generated/cupynumeric.random.randint", "api/generated/cupynumeric.random.randn", "api/generated/cupynumeric.random.random", "api/generated/cupynumeric.random.random_integers", "api/generated/cupynumeric.random.random_sample", "api/generated/cupynumeric.random.ranf", "api/generated/cupynumeric.random.rayleigh", "api/generated/cupynumeric.random.sample", "api/generated/cupynumeric.random.seed", "api/generated/cupynumeric.random.standard_cauchy", "api/generated/cupynumeric.random.standard_exponential", "api/generated/cupynumeric.random.standard_gamma", "api/generated/cupynumeric.random.standard_t", "api/generated/cupynumeric.random.triangular", "api/generated/cupynumeric.random.uniform", "api/generated/cupynumeric.random.vonmises", "api/generated/cupynumeric.random.wald", "api/generated/cupynumeric.random.weibull", "api/generated/cupynumeric.random.zipf", "api/generated/cupynumeric.ravel", "api/generated/cupynumeric.real", "api/generated/cupynumeric.reciprocal", "api/generated/cupynumeric.remainder", "api/generated/cupynumeric.repeat", "api/generated/cupynumeric.reshape", "api/generated/cupynumeric.right_shift", "api/generated/cupynumeric.rint", "api/generated/cupynumeric.roll", "api/generated/cupynumeric.rot90", "api/generated/cupynumeric.round", "api/generated/cupynumeric.row_stack", "api/generated/cupynumeric.searchsorted", "api/generated/cupynumeric.select", "api/generated/cupynumeric.shape", "api/generated/cupynumeric.sign", "api/generated/cupynumeric.signbit", "api/generated/cupynumeric.sin", "api/generated/cupynumeric.sinh", "api/generated/cupynumeric.sort", "api/generated/cupynumeric.sort_complex", "api/generated/cupynumeric.split", "api/generated/cupynumeric.sqrt", "api/generated/cupynumeric.square", "api/generated/cupynumeric.squeeze", "api/generated/cupynumeric.stack", "api/generated/cupynumeric.subtract", "api/generated/cupynumeric.sum", "api/generated/cupynumeric.swapaxes", "api/generated/cupynumeric.take", "api/generated/cupynumeric.take_along_axis", "api/generated/cupynumeric.tan", "api/generated/cupynumeric.tanh", "api/generated/cupynumeric.tensordot", "api/generated/cupynumeric.tile", "api/generated/cupynumeric.trace", "api/generated/cupynumeric.transpose", "api/generated/cupynumeric.tri", "api/generated/cupynumeric.tril", "api/generated/cupynumeric.tril_indices", "api/generated/cupynumeric.tril_indices_from", "api/generated/cupynumeric.triu", "api/generated/cupynumeric.triu_indices", "api/generated/cupynumeric.triu_indices_from", "api/generated/cupynumeric.true_divide", "api/generated/cupynumeric.trunc", "api/generated/cupynumeric.unique", "api/generated/cupynumeric.unpackbits", "api/generated/cupynumeric.unravel_index", "api/generated/cupynumeric.var", "api/generated/cupynumeric.vdot", "api/generated/cupynumeric.vsplit", "api/generated/cupynumeric.vstack", "api/generated/cupynumeric.where", "api/generated/cupynumeric.zeros", "api/generated/cupynumeric.zeros_like", "api/index", "api/indexing", "api/io", "api/linalg", "api/logic", "api/manipulation", "api/math", "api/ndarray", "api/random", "api/routines", "api/set", "api/settings", "api/sorting", "api/statistics", "api/window", "developer/CONTRIBUTING", "developer/building", "developer/index", "developer/testing", "examples/black_scholes", "examples/cholesky", "examples/compact_finite_difference", "examples/edge_detection", "examples/index", "examples/kmeans", "examples/newton_raphson_2d", "examples/stencil", "examples/torchswe", "faqs", "index", "installation", "oss-licenses", "user/advanced", "user/differences", "user/howtos/benchmarking", "user/howtos/index", "user/howtos/measuring", "user/howtos/patching", "user/index", "user/practices", "user/tutorial", "user/usage"], "envversion": {"nbsphinx": 4, "sphinx": 64, "sphinx.domains.c": 3, "sphinx.domains.changeset": 1, "sphinx.domains.citation": 1, "sphinx.domains.cpp": 9, "sphinx.domains.index": 1, "sphinx.domains.javascript": 3, "sphinx.domains.math": 2, "sphinx.domains.python": 4, "sphinx.domains.rst": 2, "sphinx.domains.std": 2, "sphinx.ext.intersphinx": 1}, "filenames": ["_implemented.rst", "api/_bitgenerator.rst", "api/_generator.rst", "api/_grouped.rst", "api/_ndarray.rst", "api/binary.rst", "api/broadcast.rst", "api/classes.rst", "api/comparison.rst", "api/creation.rst", "api/datatype.rst", "api/fft.rst", "api/generated/cupynumeric.absolute.rst", "api/generated/cupynumeric.add.rst", "api/generated/cupynumeric.all.rst", "api/generated/cupynumeric.allclose.rst", "api/generated/cupynumeric.amax.rst", "api/generated/cupynumeric.amin.rst", "api/generated/cupynumeric.angle.rst", "api/generated/cupynumeric.any.rst", "api/generated/cupynumeric.append.rst", "api/generated/cupynumeric.arange.rst", "api/generated/cupynumeric.arccos.rst", "api/generated/cupynumeric.arccosh.rst", "api/generated/cupynumeric.arcsin.rst", "api/generated/cupynumeric.arcsinh.rst", "api/generated/cupynumeric.arctan.rst", "api/generated/cupynumeric.arctan2.rst", "api/generated/cupynumeric.arctanh.rst", "api/generated/cupynumeric.argmax.rst", "api/generated/cupynumeric.argmin.rst", "api/generated/cupynumeric.argpartition.rst", "api/generated/cupynumeric.argsort.rst", "api/generated/cupynumeric.argwhere.rst", "api/generated/cupynumeric.array.rst", "api/generated/cupynumeric.array_equal.rst", "api/generated/cupynumeric.array_split.rst", "api/generated/cupynumeric.asarray.rst", "api/generated/cupynumeric.atleast_1d.rst", "api/generated/cupynumeric.atleast_2d.rst", "api/generated/cupynumeric.atleast_3d.rst", "api/generated/cupynumeric.average.rst", "api/generated/cupynumeric.bartlett.rst", "api/generated/cupynumeric.bincount.rst", "api/generated/cupynumeric.bitwise_and.rst", "api/generated/cupynumeric.bitwise_or.rst", "api/generated/cupynumeric.bitwise_xor.rst", "api/generated/cupynumeric.blackman.rst", "api/generated/cupynumeric.block.rst", "api/generated/cupynumeric.broadcast_arrays.rst", "api/generated/cupynumeric.broadcast_shapes.rst", "api/generated/cupynumeric.broadcast_to.rst", "api/generated/cupynumeric.cbrt.rst", "api/generated/cupynumeric.ceil.rst", "api/generated/cupynumeric.choose.rst", "api/generated/cupynumeric.clip.rst", "api/generated/cupynumeric.column_stack.rst", "api/generated/cupynumeric.compress.rst", "api/generated/cupynumeric.concatenate.rst", "api/generated/cupynumeric.conj.rst", "api/generated/cupynumeric.conjugate.rst", "api/generated/cupynumeric.convolve.rst", "api/generated/cupynumeric.copy.rst", "api/generated/cupynumeric.copysign.rst", "api/generated/cupynumeric.cos.rst", "api/generated/cupynumeric.cosh.rst", "api/generated/cupynumeric.count_nonzero.rst", "api/generated/cupynumeric.cov.rst", "api/generated/cupynumeric.cumprod.rst", "api/generated/cupynumeric.cumsum.rst", "api/generated/cupynumeric.deg2rad.rst", "api/generated/cupynumeric.degrees.rst", "api/generated/cupynumeric.diag.rst", "api/generated/cupynumeric.diag_indices.rst", "api/generated/cupynumeric.diag_indices_from.rst", "api/generated/cupynumeric.diagonal.rst", "api/generated/cupynumeric.diff.rst", "api/generated/cupynumeric.digitize.rst", "api/generated/cupynumeric.divide.rst", "api/generated/cupynumeric.dot.rst", "api/generated/cupynumeric.dsplit.rst", "api/generated/cupynumeric.dstack.rst", "api/generated/cupynumeric.einsum.rst", "api/generated/cupynumeric.einsum_path.rst", "api/generated/cupynumeric.empty.rst", "api/generated/cupynumeric.empty_like.rst", "api/generated/cupynumeric.equal.rst", "api/generated/cupynumeric.exp.rst", "api/generated/cupynumeric.exp2.rst", "api/generated/cupynumeric.expand_dims.rst", "api/generated/cupynumeric.expm1.rst", "api/generated/cupynumeric.extract.rst", "api/generated/cupynumeric.eye.rst", "api/generated/cupynumeric.fabs.rst", "api/generated/cupynumeric.fft.fft.rst", "api/generated/cupynumeric.fft.fft2.rst", "api/generated/cupynumeric.fft.fftn.rst", "api/generated/cupynumeric.fft.fftshift.rst", "api/generated/cupynumeric.fft.hfft.rst", "api/generated/cupynumeric.fft.ifft.rst", "api/generated/cupynumeric.fft.ifft2.rst", "api/generated/cupynumeric.fft.ifftn.rst", "api/generated/cupynumeric.fft.ifftshift.rst", "api/generated/cupynumeric.fft.ihfft.rst", "api/generated/cupynumeric.fft.irfft.rst", "api/generated/cupynumeric.fft.irfft2.rst", "api/generated/cupynumeric.fft.irfftn.rst", "api/generated/cupynumeric.fft.rfft.rst", "api/generated/cupynumeric.fft.rfft2.rst", "api/generated/cupynumeric.fft.rfftn.rst", "api/generated/cupynumeric.fill_diagonal.rst", "api/generated/cupynumeric.find_common_type.rst", "api/generated/cupynumeric.flatnonzero.rst", "api/generated/cupynumeric.flip.rst", "api/generated/cupynumeric.fliplr.rst", "api/generated/cupynumeric.flipud.rst", "api/generated/cupynumeric.float_power.rst", "api/generated/cupynumeric.floor.rst", "api/generated/cupynumeric.floor_divide.rst", "api/generated/cupynumeric.fmax.rst", "api/generated/cupynumeric.fmin.rst", "api/generated/cupynumeric.fmod.rst", "api/generated/cupynumeric.frexp.rst", "api/generated/cupynumeric.full.rst", "api/generated/cupynumeric.full_like.rst", "api/generated/cupynumeric.gcd.rst", "api/generated/cupynumeric.gradient.rst", "api/generated/cupynumeric.greater.rst", "api/generated/cupynumeric.greater_equal.rst", "api/generated/cupynumeric.hamming.rst", "api/generated/cupynumeric.hanning.rst", "api/generated/cupynumeric.histogram.rst", "api/generated/cupynumeric.hsplit.rst", "api/generated/cupynumeric.hstack.rst", "api/generated/cupynumeric.hypot.rst", "api/generated/cupynumeric.identity.rst", "api/generated/cupynumeric.imag.rst", "api/generated/cupynumeric.indices.rst", "api/generated/cupynumeric.inner.rst", "api/generated/cupynumeric.invert.rst", "api/generated/cupynumeric.isclose.rst", "api/generated/cupynumeric.iscomplex.rst", "api/generated/cupynumeric.iscomplexobj.rst", "api/generated/cupynumeric.isfinite.rst", "api/generated/cupynumeric.isinf.rst", "api/generated/cupynumeric.isnan.rst", "api/generated/cupynumeric.isneginf.rst", "api/generated/cupynumeric.isposinf.rst", "api/generated/cupynumeric.isreal.rst", "api/generated/cupynumeric.isrealobj.rst", "api/generated/cupynumeric.isscalar.rst", "api/generated/cupynumeric.ix_.rst", "api/generated/cupynumeric.kaiser.rst", "api/generated/cupynumeric.lcm.rst", "api/generated/cupynumeric.ldexp.rst", "api/generated/cupynumeric.left_shift.rst", "api/generated/cupynumeric.less.rst", "api/generated/cupynumeric.less_equal.rst", "api/generated/cupynumeric.linalg.cholesky.rst", "api/generated/cupynumeric.linalg.eig.rst", "api/generated/cupynumeric.linalg.eigh.rst", "api/generated/cupynumeric.linalg.eigvals.rst", "api/generated/cupynumeric.linalg.eigvalsh.rst", "api/generated/cupynumeric.linalg.expm.rst", "api/generated/cupynumeric.linalg.matrix_power.rst", "api/generated/cupynumeric.linalg.multi_dot.rst", "api/generated/cupynumeric.linalg.norm.rst", "api/generated/cupynumeric.linalg.qr.rst", "api/generated/cupynumeric.linalg.solve.rst", "api/generated/cupynumeric.linalg.svd.rst", "api/generated/cupynumeric.linspace.rst", "api/generated/cupynumeric.load.rst", "api/generated/cupynumeric.log.rst", "api/generated/cupynumeric.log10.rst", "api/generated/cupynumeric.log1p.rst", "api/generated/cupynumeric.log2.rst", "api/generated/cupynumeric.logaddexp.rst", "api/generated/cupynumeric.logaddexp2.rst", "api/generated/cupynumeric.logical_and.rst", "api/generated/cupynumeric.logical_not.rst", "api/generated/cupynumeric.logical_or.rst", "api/generated/cupynumeric.logical_xor.rst", "api/generated/cupynumeric.mask_indices.rst", "api/generated/cupynumeric.matmul.rst", "api/generated/cupynumeric.maximum.rst", "api/generated/cupynumeric.mean.rst", "api/generated/cupynumeric.median.rst", "api/generated/cupynumeric.meshgrid.rst", "api/generated/cupynumeric.minimum.rst", "api/generated/cupynumeric.mod.rst", "api/generated/cupynumeric.modf.rst", "api/generated/cupynumeric.moveaxis.rst", "api/generated/cupynumeric.multiply.rst", "api/generated/cupynumeric.nanargmax.rst", "api/generated/cupynumeric.nanargmin.rst", "api/generated/cupynumeric.nancumprod.rst", "api/generated/cupynumeric.nancumsum.rst", "api/generated/cupynumeric.nanmax.rst", "api/generated/cupynumeric.nanmean.rst", "api/generated/cupynumeric.nanmedian.rst", "api/generated/cupynumeric.nanmin.rst", "api/generated/cupynumeric.nanpercentile.rst", "api/generated/cupynumeric.nanprod.rst", "api/generated/cupynumeric.nanquantile.rst", "api/generated/cupynumeric.nansum.rst", "api/generated/cupynumeric.ndarray.T.rst", "api/generated/cupynumeric.ndarray.__abs__.rst", "api/generated/cupynumeric.ndarray.__add__.rst", "api/generated/cupynumeric.ndarray.__and__.rst", "api/generated/cupynumeric.ndarray.__array__.rst", "api/generated/cupynumeric.ndarray.__bool__.rst", "api/generated/cupynumeric.ndarray.__complex__.rst", "api/generated/cupynumeric.ndarray.__contains__.rst", "api/generated/cupynumeric.ndarray.__copy__.rst", "api/generated/cupynumeric.ndarray.__deepcopy__.rst", "api/generated/cupynumeric.ndarray.__divmod__.rst", "api/generated/cupynumeric.ndarray.__eq__.rst", "api/generated/cupynumeric.ndarray.__float__.rst", "api/generated/cupynumeric.ndarray.__floordiv__.rst", "api/generated/cupynumeric.ndarray.__ge__.rst", "api/generated/cupynumeric.ndarray.__getitem__.rst", "api/generated/cupynumeric.ndarray.__gt__.rst", "api/generated/cupynumeric.ndarray.__iadd__.rst", "api/generated/cupynumeric.ndarray.__iand__.rst", "api/generated/cupynumeric.ndarray.__ifloordiv__.rst", "api/generated/cupynumeric.ndarray.__ilshift__.rst", "api/generated/cupynumeric.ndarray.__imatmul__.rst", "api/generated/cupynumeric.ndarray.__imod__.rst", "api/generated/cupynumeric.ndarray.__imul__.rst", "api/generated/cupynumeric.ndarray.__index__.rst", "api/generated/cupynumeric.ndarray.__int__.rst", "api/generated/cupynumeric.ndarray.__invert__.rst", "api/generated/cupynumeric.ndarray.__ior__.rst", "api/generated/cupynumeric.ndarray.__ipow__.rst", "api/generated/cupynumeric.ndarray.__irshift__.rst", "api/generated/cupynumeric.ndarray.__isub__.rst", "api/generated/cupynumeric.ndarray.__itruediv__.rst", "api/generated/cupynumeric.ndarray.__ixor__.rst", "api/generated/cupynumeric.ndarray.__le__.rst", "api/generated/cupynumeric.ndarray.__len__.rst", "api/generated/cupynumeric.ndarray.__lshift__.rst", "api/generated/cupynumeric.ndarray.__lt__.rst", "api/generated/cupynumeric.ndarray.__matmul__.rst", "api/generated/cupynumeric.ndarray.__mod__.rst", "api/generated/cupynumeric.ndarray.__mul__.rst", "api/generated/cupynumeric.ndarray.__ne__.rst", "api/generated/cupynumeric.ndarray.__neg__.rst", "api/generated/cupynumeric.ndarray.__new__.rst", "api/generated/cupynumeric.ndarray.__or__.rst", "api/generated/cupynumeric.ndarray.__pos__.rst", "api/generated/cupynumeric.ndarray.__pow__.rst", "api/generated/cupynumeric.ndarray.__reduce__.rst", "api/generated/cupynumeric.ndarray.__repr__.rst", "api/generated/cupynumeric.ndarray.__rmatmul__.rst", "api/generated/cupynumeric.ndarray.__rshift__.rst", "api/generated/cupynumeric.ndarray.__setitem__.rst", "api/generated/cupynumeric.ndarray.__setstate__.rst", "api/generated/cupynumeric.ndarray.__str__.rst", "api/generated/cupynumeric.ndarray.__sub__.rst", "api/generated/cupynumeric.ndarray.__truediv__.rst", "api/generated/cupynumeric.ndarray.__xor__.rst", "api/generated/cupynumeric.ndarray.all.rst", "api/generated/cupynumeric.ndarray.any.rst", "api/generated/cupynumeric.ndarray.argmax.rst", "api/generated/cupynumeric.ndarray.argmin.rst", "api/generated/cupynumeric.ndarray.argpartition.rst", "api/generated/cupynumeric.ndarray.argsort.rst", "api/generated/cupynumeric.ndarray.astype.rst", "api/generated/cupynumeric.ndarray.base.rst", "api/generated/cupynumeric.ndarray.choose.rst", "api/generated/cupynumeric.ndarray.clip.rst", "api/generated/cupynumeric.ndarray.compress.rst", "api/generated/cupynumeric.ndarray.conj.rst", "api/generated/cupynumeric.ndarray.conjugate.rst", "api/generated/cupynumeric.ndarray.copy.rst", "api/generated/cupynumeric.ndarray.ctypes.rst", "api/generated/cupynumeric.ndarray.cumprod.rst", "api/generated/cupynumeric.ndarray.cumsum.rst", "api/generated/cupynumeric.ndarray.data.rst", "api/generated/cupynumeric.ndarray.diagonal.rst", "api/generated/cupynumeric.ndarray.dot.rst", "api/generated/cupynumeric.ndarray.dtype.rst", "api/generated/cupynumeric.ndarray.dump.rst", "api/generated/cupynumeric.ndarray.dumps.rst", "api/generated/cupynumeric.ndarray.fill.rst", "api/generated/cupynumeric.ndarray.flags.rst", "api/generated/cupynumeric.ndarray.flat.rst", "api/generated/cupynumeric.ndarray.flatten.rst", "api/generated/cupynumeric.ndarray.flip.rst", "api/generated/cupynumeric.ndarray.getfield.rst", "api/generated/cupynumeric.ndarray.imag.rst", "api/generated/cupynumeric.ndarray.item.rst", "api/generated/cupynumeric.ndarray.itemset.rst", "api/generated/cupynumeric.ndarray.itemsize.rst", "api/generated/cupynumeric.ndarray.max.rst", "api/generated/cupynumeric.ndarray.mean.rst", "api/generated/cupynumeric.ndarray.min.rst", "api/generated/cupynumeric.ndarray.nbytes.rst", "api/generated/cupynumeric.ndarray.ndim.rst", "api/generated/cupynumeric.ndarray.nonzero.rst", "api/generated/cupynumeric.ndarray.partition.rst", "api/generated/cupynumeric.ndarray.prod.rst", "api/generated/cupynumeric.ndarray.put.rst", "api/generated/cupynumeric.ndarray.ravel.rst", "api/generated/cupynumeric.ndarray.real.rst", "api/generated/cupynumeric.ndarray.reshape.rst", "api/generated/cupynumeric.ndarray.searchsorted.rst", "api/generated/cupynumeric.ndarray.setfield.rst", "api/generated/cupynumeric.ndarray.setflags.rst", "api/generated/cupynumeric.ndarray.shape.rst", "api/generated/cupynumeric.ndarray.size.rst", "api/generated/cupynumeric.ndarray.sort.rst", "api/generated/cupynumeric.ndarray.squeeze.rst", "api/generated/cupynumeric.ndarray.strides.rst", "api/generated/cupynumeric.ndarray.sum.rst", "api/generated/cupynumeric.ndarray.swapaxes.rst", "api/generated/cupynumeric.ndarray.take.rst", "api/generated/cupynumeric.ndarray.tobytes.rst", "api/generated/cupynumeric.ndarray.tofile.rst", "api/generated/cupynumeric.ndarray.tolist.rst", "api/generated/cupynumeric.ndarray.tostring.rst", "api/generated/cupynumeric.ndarray.trace.rst", "api/generated/cupynumeric.ndarray.transpose.rst", "api/generated/cupynumeric.ndarray.unique.rst", "api/generated/cupynumeric.ndarray.var.rst", "api/generated/cupynumeric.ndarray.view.rst", "api/generated/cupynumeric.ndim.rst", "api/generated/cupynumeric.negative.rst", "api/generated/cupynumeric.nextafter.rst", "api/generated/cupynumeric.nonzero.rst", "api/generated/cupynumeric.not_equal.rst", "api/generated/cupynumeric.ones.rst", "api/generated/cupynumeric.ones_like.rst", "api/generated/cupynumeric.outer.rst", "api/generated/cupynumeric.packbits.rst", "api/generated/cupynumeric.partition.rst", "api/generated/cupynumeric.percentile.rst", "api/generated/cupynumeric.place.rst", "api/generated/cupynumeric.positive.rst", "api/generated/cupynumeric.power.rst", "api/generated/cupynumeric.prod.rst", "api/generated/cupynumeric.put.rst", "api/generated/cupynumeric.put_along_axis.rst", "api/generated/cupynumeric.putmask.rst", "api/generated/cupynumeric.quantile.rst", "api/generated/cupynumeric.rad2deg.rst", "api/generated/cupynumeric.radians.rst", "api/generated/cupynumeric.random.beta.rst", "api/generated/cupynumeric.random.binomial.rst", "api/generated/cupynumeric.random.bytes.rst", "api/generated/cupynumeric.random.chisquare.rst", "api/generated/cupynumeric.random.default_rng.rst", "api/generated/cupynumeric.random.exponential.rst", "api/generated/cupynumeric.random.f.rst", "api/generated/cupynumeric.random.gamma.rst", "api/generated/cupynumeric.random.geometric.rst", "api/generated/cupynumeric.random.gumbel.rst", "api/generated/cupynumeric.random.hypergeometric.rst", "api/generated/cupynumeric.random.laplace.rst", "api/generated/cupynumeric.random.logistic.rst", "api/generated/cupynumeric.random.lognormal.rst", "api/generated/cupynumeric.random.logseries.rst", "api/generated/cupynumeric.random.negative_binomial.rst", "api/generated/cupynumeric.random.noncentral_chisquare.rst", "api/generated/cupynumeric.random.noncentral_f.rst", "api/generated/cupynumeric.random.normal.rst", "api/generated/cupynumeric.random.pareto.rst", "api/generated/cupynumeric.random.poisson.rst", "api/generated/cupynumeric.random.power.rst", "api/generated/cupynumeric.random.rand.rst", "api/generated/cupynumeric.random.randint.rst", "api/generated/cupynumeric.random.randn.rst", "api/generated/cupynumeric.random.random.rst", "api/generated/cupynumeric.random.random_integers.rst", "api/generated/cupynumeric.random.random_sample.rst", "api/generated/cupynumeric.random.ranf.rst", "api/generated/cupynumeric.random.rayleigh.rst", "api/generated/cupynumeric.random.sample.rst", "api/generated/cupynumeric.random.seed.rst", "api/generated/cupynumeric.random.standard_cauchy.rst", "api/generated/cupynumeric.random.standard_exponential.rst", "api/generated/cupynumeric.random.standard_gamma.rst", "api/generated/cupynumeric.random.standard_t.rst", "api/generated/cupynumeric.random.triangular.rst", "api/generated/cupynumeric.random.uniform.rst", "api/generated/cupynumeric.random.vonmises.rst", "api/generated/cupynumeric.random.wald.rst", "api/generated/cupynumeric.random.weibull.rst", "api/generated/cupynumeric.random.zipf.rst", "api/generated/cupynumeric.ravel.rst", "api/generated/cupynumeric.real.rst", "api/generated/cupynumeric.reciprocal.rst", "api/generated/cupynumeric.remainder.rst", "api/generated/cupynumeric.repeat.rst", "api/generated/cupynumeric.reshape.rst", "api/generated/cupynumeric.right_shift.rst", "api/generated/cupynumeric.rint.rst", "api/generated/cupynumeric.roll.rst", "api/generated/cupynumeric.rot90.rst", "api/generated/cupynumeric.round.rst", "api/generated/cupynumeric.row_stack.rst", "api/generated/cupynumeric.searchsorted.rst", "api/generated/cupynumeric.select.rst", "api/generated/cupynumeric.shape.rst", "api/generated/cupynumeric.sign.rst", "api/generated/cupynumeric.signbit.rst", "api/generated/cupynumeric.sin.rst", "api/generated/cupynumeric.sinh.rst", "api/generated/cupynumeric.sort.rst", "api/generated/cupynumeric.sort_complex.rst", "api/generated/cupynumeric.split.rst", "api/generated/cupynumeric.sqrt.rst", "api/generated/cupynumeric.square.rst", "api/generated/cupynumeric.squeeze.rst", "api/generated/cupynumeric.stack.rst", "api/generated/cupynumeric.subtract.rst", "api/generated/cupynumeric.sum.rst", "api/generated/cupynumeric.swapaxes.rst", "api/generated/cupynumeric.take.rst", "api/generated/cupynumeric.take_along_axis.rst", "api/generated/cupynumeric.tan.rst", "api/generated/cupynumeric.tanh.rst", "api/generated/cupynumeric.tensordot.rst", "api/generated/cupynumeric.tile.rst", "api/generated/cupynumeric.trace.rst", "api/generated/cupynumeric.transpose.rst", "api/generated/cupynumeric.tri.rst", "api/generated/cupynumeric.tril.rst", "api/generated/cupynumeric.tril_indices.rst", "api/generated/cupynumeric.tril_indices_from.rst", "api/generated/cupynumeric.triu.rst", "api/generated/cupynumeric.triu_indices.rst", "api/generated/cupynumeric.triu_indices_from.rst", "api/generated/cupynumeric.true_divide.rst", "api/generated/cupynumeric.trunc.rst", "api/generated/cupynumeric.unique.rst", "api/generated/cupynumeric.unpackbits.rst", "api/generated/cupynumeric.unravel_index.rst", "api/generated/cupynumeric.var.rst", "api/generated/cupynumeric.vdot.rst", "api/generated/cupynumeric.vsplit.rst", "api/generated/cupynumeric.vstack.rst", "api/generated/cupynumeric.where.rst", "api/generated/cupynumeric.zeros.rst", "api/generated/cupynumeric.zeros_like.rst", "api/index.rst", "api/indexing.rst", "api/io.rst", "api/linalg.rst", "api/logic.rst", "api/manipulation.rst", "api/math.rst", "api/ndarray.rst", "api/random.rst", "api/routines.rst", "api/set.rst", "api/settings.rst", "api/sorting.rst", "api/statistics.rst", "api/window.rst", "developer/CONTRIBUTING.md", "developer/building.rst", "developer/index.rst", "developer/testing.rst", "examples/black_scholes.ipynb", "examples/cholesky.ipynb", "examples/compact_finite_difference.ipynb", "examples/edge_detection.ipynb", "examples/index.rst", "examples/kmeans.ipynb", "examples/newton_raphson_2d.ipynb", "examples/stencil.ipynb", "examples/torchswe.ipynb", "faqs.rst", "index.rst", "installation.rst", "oss-licenses.rst", "user/advanced.rst", "user/differences.rst", "user/howtos/benchmarking.rst", "user/howtos/index.rst", "user/howtos/measuring.rst", "user/howtos/patching.rst", "user/index.rst", "user/practices.rst", "user/tutorial.rst", "user/usage.rst"], "indexentries": {"__abs__() (cupynumeric.ndarray method)": [[206, "cupynumeric.ndarray.__abs__", false]], "__add__() (cupynumeric.ndarray method)": [[207, "cupynumeric.ndarray.__add__", false]], "__and__() (cupynumeric.ndarray method)": [[208, "cupynumeric.ndarray.__and__", false]], "__array__() (cupynumeric.ndarray method)": [[209, "cupynumeric.ndarray.__array__", false]], "__bool__() (cupynumeric.ndarray method)": [[210, "cupynumeric.ndarray.__bool__", false]], "__complex__() (cupynumeric.ndarray method)": [[211, "cupynumeric.ndarray.__complex__", false]], "__contains__() (cupynumeric.ndarray method)": [[212, "cupynumeric.ndarray.__contains__", false]], "__copy__() (cupynumeric.ndarray method)": [[213, "cupynumeric.ndarray.__copy__", false]], "__deepcopy__() (cupynumeric.ndarray method)": [[214, "cupynumeric.ndarray.__deepcopy__", false]], "__divmod__() (cupynumeric.ndarray method)": [[215, "cupynumeric.ndarray.__divmod__", false]], "__eq__() (cupynumeric.ndarray method)": [[216, "cupynumeric.ndarray.__eq__", false]], "__float__() (cupynumeric.ndarray method)": [[217, "cupynumeric.ndarray.__float__", false]], "__floordiv__() (cupynumeric.ndarray method)": [[218, "cupynumeric.ndarray.__floordiv__", false]], "__ge__() (cupynumeric.ndarray method)": [[219, "cupynumeric.ndarray.__ge__", false]], "__getitem__() (cupynumeric.ndarray method)": [[220, "cupynumeric.ndarray.__getitem__", false]], "__gt__() (cupynumeric.ndarray method)": [[221, "cupynumeric.ndarray.__gt__", false]], "__iadd__() (cupynumeric.ndarray method)": [[222, "cupynumeric.ndarray.__iadd__", false]], "__iand__() (cupynumeric.ndarray method)": [[223, "cupynumeric.ndarray.__iand__", false]], "__ifloordiv__() (cupynumeric.ndarray method)": [[224, "cupynumeric.ndarray.__ifloordiv__", false]], "__ilshift__() (cupynumeric.ndarray method)": [[225, "cupynumeric.ndarray.__ilshift__", false]], "__imatmul__() (cupynumeric.ndarray method)": [[226, "cupynumeric.ndarray.__imatmul__", false]], "__imod__() (cupynumeric.ndarray method)": [[227, "cupynumeric.ndarray.__imod__", false]], "__imul__() (cupynumeric.ndarray method)": [[228, "cupynumeric.ndarray.__imul__", false]], "__index__() (cupynumeric.ndarray method)": [[229, "cupynumeric.ndarray.__index__", false]], "__init__() (cupynumeric.ndarray method)": [[4, "cupynumeric.ndarray.__init__", false]], "__init__() (cupynumeric.random.bitgenerator method)": [[1, "cupynumeric.random.BitGenerator.__init__", false]], "__init__() (cupynumeric.random.generator method)": [[2, "cupynumeric.random.Generator.__init__", false]], "__int__() (cupynumeric.ndarray method)": [[230, "cupynumeric.ndarray.__int__", false]], "__invert__() (cupynumeric.ndarray method)": [[231, "cupynumeric.ndarray.__invert__", false]], "__ior__() (cupynumeric.ndarray method)": [[232, "cupynumeric.ndarray.__ior__", false]], "__ipow__() (cupynumeric.ndarray method)": [[233, "cupynumeric.ndarray.__ipow__", false]], "__irshift__() (cupynumeric.ndarray method)": [[234, "cupynumeric.ndarray.__irshift__", false]], "__isub__() (cupynumeric.ndarray method)": [[235, "cupynumeric.ndarray.__isub__", false]], "__itruediv__() (cupynumeric.ndarray method)": [[236, "cupynumeric.ndarray.__itruediv__", false]], "__ixor__() (cupynumeric.ndarray method)": [[237, "cupynumeric.ndarray.__ixor__", false]], "__le__() (cupynumeric.ndarray method)": [[238, "cupynumeric.ndarray.__le__", false]], "__len__() (cupynumeric.ndarray method)": [[239, "cupynumeric.ndarray.__len__", false]], "__lshift__() (cupynumeric.ndarray method)": [[240, "cupynumeric.ndarray.__lshift__", false]], "__lt__() (cupynumeric.ndarray method)": [[241, "cupynumeric.ndarray.__lt__", false]], "__matmul__() (cupynumeric.ndarray method)": [[242, "cupynumeric.ndarray.__matmul__", false]], "__mod__() (cupynumeric.ndarray method)": [[243, "cupynumeric.ndarray.__mod__", false]], "__mul__() (cupynumeric.ndarray method)": [[244, "cupynumeric.ndarray.__mul__", false]], "__ne__() (cupynumeric.ndarray method)": [[245, "cupynumeric.ndarray.__ne__", false]], "__neg__() (cupynumeric.ndarray method)": [[246, "cupynumeric.ndarray.__neg__", false]], "__new__() (cupynumeric.ndarray method)": [[247, "cupynumeric.ndarray.__new__", false]], "__or__() (cupynumeric.ndarray method)": [[248, "cupynumeric.ndarray.__or__", false]], "__pos__() (cupynumeric.ndarray method)": [[249, "cupynumeric.ndarray.__pos__", false]], "__pow__() (cupynumeric.ndarray method)": [[250, "cupynumeric.ndarray.__pow__", false]], "__reduce__() (cupynumeric.ndarray method)": [[251, "cupynumeric.ndarray.__reduce__", false]], "__repr__() (cupynumeric.ndarray method)": [[252, "cupynumeric.ndarray.__repr__", false]], "__rmatmul__() (cupynumeric.ndarray method)": [[253, "cupynumeric.ndarray.__rmatmul__", false]], "__rshift__() (cupynumeric.ndarray method)": [[254, "cupynumeric.ndarray.__rshift__", false]], "__setitem__() (cupynumeric.ndarray method)": [[255, "cupynumeric.ndarray.__setitem__", false]], "__setstate__() (cupynumeric.ndarray method)": [[256, "cupynumeric.ndarray.__setstate__", false]], "__str__() (cupynumeric.ndarray method)": [[257, "cupynumeric.ndarray.__str__", false]], "__sub__() (cupynumeric.ndarray method)": [[258, "cupynumeric.ndarray.__sub__", false]], "__truediv__() (cupynumeric.ndarray method)": [[259, "cupynumeric.ndarray.__truediv__", false]], "__xor__() (cupynumeric.ndarray method)": [[260, "cupynumeric.ndarray.__xor__", false]], "absolute() (in module cupynumeric)": [[12, "cupynumeric.absolute", false]], "add() (in module cupynumeric)": [[13, "cupynumeric.add", false]], "aligned (in module cupynumeric)": [[285, "cupynumeric.ALIGNED", false]], "all() (cupynumeric.ndarray method)": [[261, "cupynumeric.ndarray.all", false]], "all() (in module cupynumeric)": [[14, "cupynumeric.all", false]], "allclose() (in module cupynumeric)": [[15, "cupynumeric.allclose", false]], "amax() (in module cupynumeric)": [[16, "cupynumeric.amax", false]], "amin() (in module cupynumeric)": [[17, "cupynumeric.amin", false]], "angle() (in module cupynumeric)": [[18, "cupynumeric.angle", false]], "any() (cupynumeric.ndarray method)": [[262, "cupynumeric.ndarray.any", false]], "any() (in module cupynumeric)": [[19, "cupynumeric.any", false]], "append() (in module cupynumeric)": [[20, "cupynumeric.append", false]], "arange() (in module cupynumeric)": [[21, "cupynumeric.arange", false]], "arccos() (in module cupynumeric)": [[22, "cupynumeric.arccos", false]], "arccosh() (in module cupynumeric)": [[23, "cupynumeric.arccosh", false]], "arcsin() (in module cupynumeric)": [[24, "cupynumeric.arcsin", false]], "arcsinh() (in module cupynumeric)": [[25, "cupynumeric.arcsinh", false]], "arctan() (in module cupynumeric)": [[26, "cupynumeric.arctan", false]], "arctan2() (in module cupynumeric)": [[27, "cupynumeric.arctan2", false]], "arctanh() (in module cupynumeric)": [[28, "cupynumeric.arctanh", false]], "argmax() (cupynumeric.ndarray method)": [[263, "cupynumeric.ndarray.argmax", false]], "argmax() (in module cupynumeric)": [[29, "cupynumeric.argmax", false]], "argmin() (cupynumeric.ndarray method)": [[264, "cupynumeric.ndarray.argmin", false]], "argmin() (in module cupynumeric)": [[30, "cupynumeric.argmin", false]], "argpartition() (cupynumeric.ndarray method)": [[265, "cupynumeric.ndarray.argpartition", false]], "argpartition() (in module cupynumeric)": [[31, "cupynumeric.argpartition", false]], "argsort() (cupynumeric.ndarray method)": [[266, "cupynumeric.ndarray.argsort", false]], "argsort() (in module cupynumeric)": [[32, "cupynumeric.argsort", false]], "argwhere() (in module cupynumeric)": [[33, "cupynumeric.argwhere", false]], "array() (in module cupynumeric)": [[34, "cupynumeric.array", false]], "array_equal() (in module cupynumeric)": [[35, "cupynumeric.array_equal", false]], "array_split() (in module cupynumeric)": [[36, "cupynumeric.array_split", false]], "asarray() (in module cupynumeric)": [[37, "cupynumeric.asarray", false]], "astype() (cupynumeric.ndarray method)": [[267, "cupynumeric.ndarray.astype", false]], "atleast_1d() (in module cupynumeric)": [[38, "cupynumeric.atleast_1d", false]], "atleast_2d() (in module cupynumeric)": [[39, "cupynumeric.atleast_2d", false]], "atleast_3d() (in module cupynumeric)": [[40, "cupynumeric.atleast_3d", false]], "average() (in module cupynumeric)": [[41, "cupynumeric.average", false]], "bartlett() (in module cupynumeric)": [[42, "cupynumeric.bartlett", false]], "base (cupynumeric.ndarray property)": [[268, "cupynumeric.ndarray.base", false]], "behaved (in module cupynumeric)": [[285, "cupynumeric.BEHAVED", false]], "beta() (in module cupynumeric.random)": [[347, "cupynumeric.random.beta", false]], "bincount() (in module cupynumeric)": [[43, "cupynumeric.bincount", false]], "binomial() (in module cupynumeric.random)": [[348, "cupynumeric.random.binomial", false]], "bitgenerator (class in cupynumeric.random)": [[1, "cupynumeric.random.BitGenerator", false]], "bitwise_and() (in module cupynumeric)": [[44, "cupynumeric.bitwise_and", false]], "bitwise_or() (in module cupynumeric)": [[45, "cupynumeric.bitwise_or", false]], "bitwise_xor() (in module cupynumeric)": [[46, "cupynumeric.bitwise_xor", false]], "blackman() (in module cupynumeric)": [[47, "cupynumeric.blackman", false]], "block() (in module cupynumeric)": [[48, "cupynumeric.block", false]], "broadcast (class in cupynumeric)": [[6, "cupynumeric.broadcast", false]], "broadcast_arrays() (in module cupynumeric)": [[49, "cupynumeric.broadcast_arrays", false]], "broadcast_shapes() (in module cupynumeric)": [[50, "cupynumeric.broadcast_shapes", false]], "broadcast_to() (in module cupynumeric)": [[51, "cupynumeric.broadcast_to", false]], "bytes() (in module cupynumeric.random)": [[349, "cupynumeric.random.bytes", false]], "c_contiguous (cupynumeric.ndarray attribute)": [[285, "cupynumeric.ndarray.C_CONTIGUOUS", false]], "carray (in module cupynumeric)": [[285, "cupynumeric.CARRAY", false]], "cbrt() (in module cupynumeric)": [[52, "cupynumeric.cbrt", false]], "ceil() (in module cupynumeric)": [[53, "cupynumeric.ceil", false]], "chisquare() (in module cupynumeric.random)": [[350, "cupynumeric.random.chisquare", false]], "cholesky() (in module cupynumeric.linalg)": [[158, "cupynumeric.linalg.cholesky", false]], "choose() (cupynumeric.ndarray method)": [[269, "cupynumeric.ndarray.choose", false]], "choose() (in module cupynumeric)": [[54, "cupynumeric.choose", false]], "clip() (cupynumeric.ndarray method)": [[270, "cupynumeric.ndarray.clip", false]], "clip() (in module cupynumeric)": [[55, "cupynumeric.clip", false]], "column_stack() (in module cupynumeric)": [[56, "cupynumeric.column_stack", false]], "compress() (cupynumeric.ndarray method)": [[271, "cupynumeric.ndarray.compress", false]], "compress() (in module cupynumeric)": [[57, "cupynumeric.compress", false]], "concatenate() (in module cupynumeric)": [[58, "cupynumeric.concatenate", false]], "conj() (cupynumeric.ndarray method)": [[272, "cupynumeric.ndarray.conj", false]], "conj() (in module cupynumeric)": [[59, "cupynumeric.conj", false]], "conjugate() (cupynumeric.ndarray method)": [[273, "cupynumeric.ndarray.conjugate", false]], "conjugate() (in module cupynumeric)": [[60, "cupynumeric.conjugate", false]], "convolve() (in module cupynumeric)": [[61, "cupynumeric.convolve", false]], "copy() (cupynumeric.ndarray method)": [[274, "cupynumeric.ndarray.copy", false]], "copy() (in module cupynumeric)": [[62, "cupynumeric.copy", false]], "copysign() (in module cupynumeric)": [[63, "cupynumeric.copysign", false]], "cos() (in module cupynumeric)": [[64, "cupynumeric.cos", false]], "cosh() (in module cupynumeric)": [[65, "cupynumeric.cosh", false]], "count_nonzero() (in module cupynumeric)": [[66, "cupynumeric.count_nonzero", false]], "cov() (in module cupynumeric)": [[67, "cupynumeric.cov", false]], "ctypes (cupynumeric.ndarray property)": [[275, "cupynumeric.ndarray.ctypes", false]], "cumprod() (cupynumeric.ndarray method)": [[276, "cupynumeric.ndarray.cumprod", false]], "cumprod() (in module cupynumeric)": [[68, "cupynumeric.cumprod", false]], "cumsum() (cupynumeric.ndarray method)": [[277, "cupynumeric.ndarray.cumsum", false]], "cumsum() (in module cupynumeric)": [[69, "cupynumeric.cumsum", false]], "cupynumeric.fft": [[11, "module-cupynumeric.fft", false]], "cupynumeric.linalg": [[448, "module-cupynumeric.linalg", false]], "cupynumeric.random": [[453, "module-cupynumeric.random", false]], "data (cupynumeric.ndarray property)": [[278, "cupynumeric.ndarray.data", false]], "default_rng() (in module cupynumeric.random)": [[351, "cupynumeric.random.default_rng", false]], "deg2rad() (in module cupynumeric)": [[70, "cupynumeric.deg2rad", false]], "degrees() (in module cupynumeric)": [[71, "cupynumeric.degrees", false]], "diag() (in module cupynumeric)": [[72, "cupynumeric.diag", false]], "diag_indices() (in module cupynumeric)": [[73, "cupynumeric.diag_indices", false]], "diag_indices_from() (in module cupynumeric)": [[74, "cupynumeric.diag_indices_from", false]], "diagonal() (cupynumeric.ndarray method)": [[279, "cupynumeric.ndarray.diagonal", false]], "diagonal() (in module cupynumeric)": [[75, "cupynumeric.diagonal", false]], "diff() (in module cupynumeric)": [[76, "cupynumeric.diff", false]], "digitize() (in module cupynumeric)": [[77, "cupynumeric.digitize", false]], "divide() (in module cupynumeric)": [[78, "cupynumeric.divide", false]], "dot() (cupynumeric.ndarray method)": [[280, "cupynumeric.ndarray.dot", false]], "dot() (in module cupynumeric)": [[79, "cupynumeric.dot", false]], "dsplit() (in module cupynumeric)": [[80, "cupynumeric.dsplit", false]], "dstack() (in module cupynumeric)": [[81, "cupynumeric.dstack", false]], "dtype (cupynumeric.ndarray property)": [[281, "cupynumeric.ndarray.dtype", false]], "dump() (cupynumeric.ndarray method)": [[282, "cupynumeric.ndarray.dump", false]], "dumps() (cupynumeric.ndarray method)": [[283, "cupynumeric.ndarray.dumps", false]], "eig() (in module cupynumeric.linalg)": [[159, "cupynumeric.linalg.eig", false]], "eigh() (in module cupynumeric.linalg)": [[160, "cupynumeric.linalg.eigh", false]], "eigvals() (in module cupynumeric.linalg)": [[161, "cupynumeric.linalg.eigvals", false]], "eigvalsh() (in module cupynumeric.linalg)": [[162, "cupynumeric.linalg.eigvalsh", false]], "einsum() (in module cupynumeric)": [[82, "cupynumeric.einsum", false]], "einsum_path() (in module cupynumeric)": [[83, "cupynumeric.einsum_path", false]], "empty() (in module cupynumeric)": [[84, "cupynumeric.empty", false]], "empty_like() (in module cupynumeric)": [[85, "cupynumeric.empty_like", false]], "equal() (in module cupynumeric)": [[86, "cupynumeric.equal", false]], "exp() (in module cupynumeric)": [[87, "cupynumeric.exp", false]], "exp2() (in module cupynumeric)": [[88, "cupynumeric.exp2", false]], "expand_dims() (in module cupynumeric)": [[89, "cupynumeric.expand_dims", false]], "expm() (in module cupynumeric.linalg)": [[163, "cupynumeric.linalg.expm", false]], "expm1() (in module cupynumeric)": [[90, "cupynumeric.expm1", false]], "exponential() (in module cupynumeric.random)": [[352, "cupynumeric.random.exponential", false]], "extract() (in module cupynumeric)": [[91, "cupynumeric.extract", false]], "eye() (in module cupynumeric)": [[92, "cupynumeric.eye", false]], "f() (in module cupynumeric.random)": [[353, "cupynumeric.random.f", false]], "f_contiguous (in module cupynumeric)": [[285, "cupynumeric.F_CONTIGUOUS", false]], "fabs() (in module cupynumeric)": [[93, "cupynumeric.fabs", false]], "farray (in module cupynumeric)": [[285, "cupynumeric.FARRAY", false]], "fft() (in module cupynumeric.fft)": [[94, "cupynumeric.fft.fft", false]], "fft2() (in module cupynumeric.fft)": [[95, "cupynumeric.fft.fft2", false]], "fftn() (in module cupynumeric.fft)": [[96, "cupynumeric.fft.fftn", false]], "fftshift() (in module cupynumeric.fft)": [[97, "cupynumeric.fft.fftshift", false]], "fill() (cupynumeric.ndarray method)": [[284, "cupynumeric.ndarray.fill", false]], "fill_diagonal() (in module cupynumeric)": [[110, "cupynumeric.fill_diagonal", false]], "find_common_type() (in module cupynumeric)": [[111, "cupynumeric.find_common_type", false]], "flags (cupynumeric.ndarray property)": [[285, "cupynumeric.ndarray.flags", false]], "flat (cupynumeric.ndarray property)": [[286, "cupynumeric.ndarray.flat", false]], "flatnonzero() (in module cupynumeric)": [[112, "cupynumeric.flatnonzero", false]], "flatten() (cupynumeric.ndarray method)": [[287, "cupynumeric.ndarray.flatten", false]], "flip() (cupynumeric.ndarray method)": [[288, "cupynumeric.ndarray.flip", false]], "flip() (in module cupynumeric)": [[113, "cupynumeric.flip", false]], "fliplr() (in module cupynumeric)": [[114, "cupynumeric.fliplr", false]], "flipud() (in module cupynumeric)": [[115, "cupynumeric.flipud", false]], "float_power() (in module cupynumeric)": [[116, "cupynumeric.float_power", false]], "floor() (in module cupynumeric)": [[117, "cupynumeric.floor", false]], "floor_divide() (in module cupynumeric)": [[118, "cupynumeric.floor_divide", false]], "fmax() (in module cupynumeric)": [[119, "cupynumeric.fmax", false]], "fmin() (in module cupynumeric)": [[120, "cupynumeric.fmin", false]], "fmod() (in module cupynumeric)": [[121, "cupynumeric.fmod", false]], "fnc (in module cupynumeric)": [[285, "cupynumeric.FNC", false]], "forc (in module cupynumeric)": [[285, "cupynumeric.FORC", false]], "frexp() (in module cupynumeric)": [[122, "cupynumeric.frexp", false]], "full() (in module cupynumeric)": [[123, "cupynumeric.full", false]], "full_like() (in module cupynumeric)": [[124, "cupynumeric.full_like", false]], "gamma() (in module cupynumeric.random)": [[354, "cupynumeric.random.gamma", false]], "gcd() (in module cupynumeric)": [[125, "cupynumeric.gcd", false]], "generator (class in cupynumeric.random)": [[2, "cupynumeric.random.Generator", false]], "geometric() (in module cupynumeric.random)": [[355, "cupynumeric.random.geometric", false]], "getfield() (cupynumeric.ndarray method)": [[289, "cupynumeric.ndarray.getfield", false]], "gradient() (in module cupynumeric)": [[126, "cupynumeric.gradient", false]], "greater() (in module cupynumeric)": [[127, "cupynumeric.greater", false]], "greater_equal() (in module cupynumeric)": [[128, "cupynumeric.greater_equal", false]], "gumbel() (in module cupynumeric.random)": [[356, "cupynumeric.random.gumbel", false]], "hamming() (in module cupynumeric)": [[129, "cupynumeric.hamming", false]], "hanning() (in module cupynumeric)": [[130, "cupynumeric.hanning", false]], "hfft() (in module cupynumeric.fft)": [[98, "cupynumeric.fft.hfft", false]], "histogram() (in module cupynumeric)": [[131, "cupynumeric.histogram", false]], "hsplit() (in module cupynumeric)": [[132, "cupynumeric.hsplit", false]], "hstack() (in module cupynumeric)": [[133, "cupynumeric.hstack", false]], "hypergeometric() (in module cupynumeric.random)": [[357, "cupynumeric.random.hypergeometric", false]], "hypot() (in module cupynumeric)": [[134, "cupynumeric.hypot", false]], "identity() (in module cupynumeric)": [[135, "cupynumeric.identity", false]], "ifft() (in module cupynumeric.fft)": [[99, "cupynumeric.fft.ifft", false]], "ifft2() (in module cupynumeric.fft)": [[100, "cupynumeric.fft.ifft2", false]], "ifftn() (in module cupynumeric.fft)": [[101, "cupynumeric.fft.ifftn", false]], "ifftshift() (in module cupynumeric.fft)": [[102, "cupynumeric.fft.ifftshift", false]], "ihfft() (in module cupynumeric.fft)": [[103, "cupynumeric.fft.ihfft", false]], "imag (cupynumeric.ndarray property)": [[290, "cupynumeric.ndarray.imag", false]], "imag() (in module cupynumeric)": [[136, "cupynumeric.imag", false]], "index (cupynumeric.broadcast property)": [[6, "cupynumeric.broadcast.index", false]], "indices() (in module cupynumeric)": [[137, "cupynumeric.indices", false]], "inner() (in module cupynumeric)": [[138, "cupynumeric.inner", false]], "invert() (in module cupynumeric)": [[139, "cupynumeric.invert", false]], "irfft() (in module cupynumeric.fft)": [[104, "cupynumeric.fft.irfft", false]], "irfft2() (in module cupynumeric.fft)": [[105, "cupynumeric.fft.irfft2", false]], "irfftn() (in module cupynumeric.fft)": [[106, "cupynumeric.fft.irfftn", false]], "isclose() (in module cupynumeric)": [[140, "cupynumeric.isclose", false]], "iscomplex() (in module cupynumeric)": [[141, "cupynumeric.iscomplex", false]], "iscomplexobj() (in module cupynumeric)": [[142, "cupynumeric.iscomplexobj", false]], "isfinite() (in module cupynumeric)": [[143, "cupynumeric.isfinite", false]], "isinf() (in module cupynumeric)": [[144, "cupynumeric.isinf", false]], "isnan() (in module cupynumeric)": [[145, "cupynumeric.isnan", false]], "isneginf() (in module cupynumeric)": [[146, "cupynumeric.isneginf", false]], "isposinf() (in module cupynumeric)": [[147, "cupynumeric.isposinf", false]], "isreal() (in module cupynumeric)": [[148, "cupynumeric.isreal", false]], "isrealobj() (in module cupynumeric)": [[149, "cupynumeric.isrealobj", false]], "isscalar() (in module cupynumeric)": [[150, "cupynumeric.isscalar", false]], "item() (cupynumeric.ndarray method)": [[291, "cupynumeric.ndarray.item", false]], "itemset (cupynumeric.ndarray attribute)": [[292, "cupynumeric.ndarray.itemset", false]], "itemsize (cupynumeric.ndarray property)": [[293, "cupynumeric.ndarray.itemsize", false]], "iters (cupynumeric.broadcast property)": [[6, "cupynumeric.broadcast.iters", false]], "ix_() (in module cupynumeric)": [[151, "cupynumeric.ix_", false]], "kaiser() (in module cupynumeric)": [[152, "cupynumeric.kaiser", false]], "laplace() (in module cupynumeric.random)": [[358, "cupynumeric.random.laplace", false]], "lcm() (in module cupynumeric)": [[153, "cupynumeric.lcm", false]], "ldexp() (in module cupynumeric)": [[154, "cupynumeric.ldexp", false]], "left_shift() (in module cupynumeric)": [[155, "cupynumeric.left_shift", false]], "less() (in module cupynumeric)": [[156, "cupynumeric.less", false]], "less_equal() (in module cupynumeric)": [[157, "cupynumeric.less_equal", false]], "linspace() (in module cupynumeric)": [[170, "cupynumeric.linspace", false]], "load() (in module cupynumeric)": [[171, "cupynumeric.load", false]], "log() (in module cupynumeric)": [[172, "cupynumeric.log", false]], "log10() (in module cupynumeric)": [[173, "cupynumeric.log10", false]], "log1p() (in module cupynumeric)": [[174, "cupynumeric.log1p", false]], "log2() (in module cupynumeric)": [[175, "cupynumeric.log2", false]], "logaddexp() (in module cupynumeric)": [[176, "cupynumeric.logaddexp", false]], "logaddexp2() (in module cupynumeric)": [[177, "cupynumeric.logaddexp2", false]], "logical_and() (in module cupynumeric)": [[178, "cupynumeric.logical_and", false]], "logical_not() (in module cupynumeric)": [[179, "cupynumeric.logical_not", false]], "logical_or() (in module cupynumeric)": [[180, "cupynumeric.logical_or", false]], "logical_xor() (in module cupynumeric)": [[181, "cupynumeric.logical_xor", false]], "logistic() (in module cupynumeric.random)": [[359, "cupynumeric.random.logistic", false]], "lognormal() (in module cupynumeric.random)": [[360, "cupynumeric.random.lognormal", false]], "logseries() (in module cupynumeric.random)": [[361, "cupynumeric.random.logseries", false]], "mask_indices() (in module cupynumeric)": [[182, "cupynumeric.mask_indices", false]], "matmul() (in module cupynumeric)": [[183, "cupynumeric.matmul", false]], "matrix_power() (in module cupynumeric.linalg)": [[164, "cupynumeric.linalg.matrix_power", false]], "max() (cupynumeric.ndarray method)": [[294, "cupynumeric.ndarray.max", false]], "maximum() (in module cupynumeric)": [[184, "cupynumeric.maximum", false]], "mean() (cupynumeric.ndarray method)": [[295, "cupynumeric.ndarray.mean", false]], "mean() (in module cupynumeric)": [[185, "cupynumeric.mean", false]], "median() (in module cupynumeric)": [[186, "cupynumeric.median", false]], "meshgrid() (in module cupynumeric)": [[187, "cupynumeric.meshgrid", false]], "min() (cupynumeric.ndarray method)": [[296, "cupynumeric.ndarray.min", false]], "minimum() (in module cupynumeric)": [[188, "cupynumeric.minimum", false]], "mod() (in module cupynumeric)": [[189, "cupynumeric.mod", false]], "modf() (in module cupynumeric)": [[190, "cupynumeric.modf", false]], "module": [[11, "module-cupynumeric.fft", false], [448, "module-cupynumeric.linalg", false], [453, "module-cupynumeric.random", false]], "moveaxis() (in module cupynumeric)": [[191, "cupynumeric.moveaxis", false]], "multi_dot() (in module cupynumeric.linalg)": [[165, "cupynumeric.linalg.multi_dot", false]], "multiply() (in module cupynumeric)": [[192, "cupynumeric.multiply", false]], "nanargmax() (in module cupynumeric)": [[193, "cupynumeric.nanargmax", false]], "nanargmin() (in module cupynumeric)": [[194, "cupynumeric.nanargmin", false]], "nancumprod() (in module cupynumeric)": [[195, "cupynumeric.nancumprod", false]], "nancumsum() (in module cupynumeric)": [[196, "cupynumeric.nancumsum", false]], "nanmax() (in module cupynumeric)": [[197, "cupynumeric.nanmax", false]], "nanmean() (in module cupynumeric)": [[198, "cupynumeric.nanmean", false]], "nanmedian() (in module cupynumeric)": [[199, "cupynumeric.nanmedian", false]], "nanmin() (in module cupynumeric)": [[200, "cupynumeric.nanmin", false]], "nanpercentile() (in module cupynumeric)": [[201, "cupynumeric.nanpercentile", false]], "nanprod() (in module cupynumeric)": [[202, "cupynumeric.nanprod", false]], "nanquantile() (in module cupynumeric)": [[203, "cupynumeric.nanquantile", false]], "nansum() (in module cupynumeric)": [[204, "cupynumeric.nansum", false]], "nbytes (cupynumeric.ndarray property)": [[297, "cupynumeric.ndarray.nbytes", false]], "nd (cupynumeric.broadcast property)": [[6, "cupynumeric.broadcast.nd", false]], "ndarray (class in cupynumeric)": [[4, "cupynumeric.ndarray", false]], "ndim (cupynumeric.broadcast property)": [[6, "cupynumeric.broadcast.ndim", false]], "ndim (cupynumeric.ndarray property)": [[298, "cupynumeric.ndarray.ndim", false]], "ndim() (in module cupynumeric)": [[326, "cupynumeric.ndim", false]], "negative() (in module cupynumeric)": [[327, "cupynumeric.negative", false]], "negative_binomial() (in module cupynumeric.random)": [[362, "cupynumeric.random.negative_binomial", false]], "nextafter() (in module cupynumeric)": [[328, "cupynumeric.nextafter", false]], "noncentral_chisquare() (in module cupynumeric.random)": [[363, "cupynumeric.random.noncentral_chisquare", false]], "noncentral_f() (in module cupynumeric.random)": [[364, "cupynumeric.random.noncentral_f", false]], "nonzero() (cupynumeric.ndarray method)": [[299, "cupynumeric.ndarray.nonzero", false]], "nonzero() (in module cupynumeric)": [[329, "cupynumeric.nonzero", false]], "norm() (in module cupynumeric.linalg)": [[166, "cupynumeric.linalg.norm", false]], "normal() (in module cupynumeric.random)": [[365, "cupynumeric.random.normal", false]], "not_equal() (in module cupynumeric)": [[330, "cupynumeric.not_equal", false]], "numiter (cupynumeric.broadcast property)": [[6, "cupynumeric.broadcast.numiter", false]], "ones() (in module cupynumeric)": [[331, "cupynumeric.ones", false]], "ones_like() (in module cupynumeric)": [[332, "cupynumeric.ones_like", false]], "outer() (in module cupynumeric)": [[333, "cupynumeric.outer", false]], "owndata (in module cupynumeric)": [[285, "cupynumeric.OWNDATA", false]], "packbits() (in module cupynumeric)": [[334, "cupynumeric.packbits", false]], "pareto() (in module cupynumeric.random)": [[366, "cupynumeric.random.pareto", false]], "partition() (cupynumeric.ndarray method)": [[300, "cupynumeric.ndarray.partition", false]], "partition() (in module cupynumeric)": [[335, "cupynumeric.partition", false]], "percentile() (in module cupynumeric)": [[336, "cupynumeric.percentile", false]], "place() (in module cupynumeric)": [[337, "cupynumeric.place", false]], "poisson() (in module cupynumeric.random)": [[367, "cupynumeric.random.poisson", false]], "positive() (in module cupynumeric)": [[338, "cupynumeric.positive", false]], "power() (in module cupynumeric)": [[339, "cupynumeric.power", false]], "power() (in module cupynumeric.random)": [[368, "cupynumeric.random.power", false]], "prod() (cupynumeric.ndarray method)": [[301, "cupynumeric.ndarray.prod", false]], "prod() (in module cupynumeric)": [[340, "cupynumeric.prod", false]], "put() (cupynumeric.ndarray method)": [[302, "cupynumeric.ndarray.put", false]], "put() (in module cupynumeric)": [[341, "cupynumeric.put", false]], "put_along_axis() (in module cupynumeric)": [[342, "cupynumeric.put_along_axis", false]], "putmask() (in module cupynumeric)": [[343, "cupynumeric.putmask", false]], "qr() (in module cupynumeric.linalg)": [[167, "cupynumeric.linalg.qr", false]], "quantile() (in module cupynumeric)": [[344, "cupynumeric.quantile", false]], "rad2deg() (in module cupynumeric)": [[345, "cupynumeric.rad2deg", false]], "radians() (in module cupynumeric)": [[346, "cupynumeric.radians", false]], "rand() (in module cupynumeric.random)": [[369, "cupynumeric.random.rand", false]], "randint() (in module cupynumeric.random)": [[370, "cupynumeric.random.randint", false]], "randn() (in module cupynumeric.random)": [[371, "cupynumeric.random.randn", false]], "random() (in module cupynumeric.random)": [[372, "cupynumeric.random.random", false]], "random_integers() (in module cupynumeric.random)": [[373, "cupynumeric.random.random_integers", false]], "random_sample() (in module cupynumeric.random)": [[374, "cupynumeric.random.random_sample", false]], "ranf() (in module cupynumeric.random)": [[375, "cupynumeric.random.ranf", false]], "ravel() (cupynumeric.ndarray method)": [[303, "cupynumeric.ndarray.ravel", false]], "ravel() (in module cupynumeric)": [[389, "cupynumeric.ravel", false]], "rayleigh() (in module cupynumeric.random)": [[376, "cupynumeric.random.rayleigh", false]], "real (cupynumeric.ndarray property)": [[304, "cupynumeric.ndarray.real", false]], "real() (in module cupynumeric)": [[390, "cupynumeric.real", false]], "reciprocal() (in module cupynumeric)": [[391, "cupynumeric.reciprocal", false]], "remainder() (in module cupynumeric)": [[392, "cupynumeric.remainder", false]], "repeat() (in module cupynumeric)": [[393, "cupynumeric.repeat", false]], "reset() (cupynumeric.broadcast method)": [[6, "cupynumeric.broadcast.reset", false]], "reshape() (cupynumeric.ndarray method)": [[305, "cupynumeric.ndarray.reshape", false]], "reshape() (in module cupynumeric)": [[394, "cupynumeric.reshape", false]], "rfft() (in module cupynumeric.fft)": [[107, "cupynumeric.fft.rfft", false]], "rfft2() (in module cupynumeric.fft)": [[108, "cupynumeric.fft.rfft2", false]], "rfftn() (in module cupynumeric.fft)": [[109, "cupynumeric.fft.rfftn", false]], "right_shift() (in module cupynumeric)": [[395, "cupynumeric.right_shift", false]], "rint() (in module cupynumeric)": [[396, "cupynumeric.rint", false]], "roll() (in module cupynumeric)": [[397, "cupynumeric.roll", false]], "rot90() (in module cupynumeric)": [[398, "cupynumeric.rot90", false]], "round() (in module cupynumeric)": [[399, "cupynumeric.round", false]], "row_stack() (in module cupynumeric)": [[400, "cupynumeric.row_stack", false]], "sample() (in module cupynumeric.random)": [[377, "cupynumeric.random.sample", false]], "searchsorted() (cupynumeric.ndarray method)": [[306, "cupynumeric.ndarray.searchsorted", false]], "searchsorted() (in module cupynumeric)": [[401, "cupynumeric.searchsorted", false]], "seed() (in module cupynumeric.random)": [[378, "cupynumeric.random.seed", false]], "select() (in module cupynumeric)": [[402, "cupynumeric.select", false]], "setfield() (cupynumeric.ndarray method)": [[307, "cupynumeric.ndarray.setfield", false]], "setflags() (cupynumeric.ndarray method)": [[308, "cupynumeric.ndarray.setflags", false]], "shape (cupynumeric.broadcast property)": [[6, "cupynumeric.broadcast.shape", false]], "shape (cupynumeric.ndarray property)": [[309, "cupynumeric.ndarray.shape", false]], "shape() (in module cupynumeric)": [[403, "cupynumeric.shape", false]], "sign() (in module cupynumeric)": [[404, "cupynumeric.sign", false]], "signbit() (in module cupynumeric)": [[405, "cupynumeric.signbit", false]], "sin() (in module cupynumeric)": [[406, "cupynumeric.sin", false]], "sinh() (in module cupynumeric)": [[407, "cupynumeric.sinh", false]], "size (cupynumeric.broadcast property)": [[6, "cupynumeric.broadcast.size", false]], "size (cupynumeric.ndarray property)": [[310, "cupynumeric.ndarray.size", false]], "solve() (in module cupynumeric.linalg)": [[168, "cupynumeric.linalg.solve", false]], "sort() (cupynumeric.ndarray method)": [[311, "cupynumeric.ndarray.sort", false]], "sort() (in module cupynumeric)": [[408, "cupynumeric.sort", false]], "sort_complex() (in module cupynumeric)": [[409, "cupynumeric.sort_complex", false]], "split() (in module cupynumeric)": [[410, "cupynumeric.split", false]], "sqrt() (in module cupynumeric)": [[411, "cupynumeric.sqrt", false]], "square() (in module cupynumeric)": [[412, "cupynumeric.square", false]], "squeeze() (cupynumeric.ndarray method)": [[312, "cupynumeric.ndarray.squeeze", false]], "squeeze() (in module cupynumeric)": [[413, "cupynumeric.squeeze", false]], "stack() (in module cupynumeric)": [[414, "cupynumeric.stack", false]], "standard_cauchy() (in module cupynumeric.random)": [[379, "cupynumeric.random.standard_cauchy", false]], "standard_exponential() (in module cupynumeric.random)": [[380, "cupynumeric.random.standard_exponential", false]], "standard_gamma() (in module cupynumeric.random)": [[381, "cupynumeric.random.standard_gamma", false]], "standard_t() (in module cupynumeric.random)": [[382, "cupynumeric.random.standard_t", false]], "strides (cupynumeric.ndarray property)": [[313, "cupynumeric.ndarray.strides", false]], "subtract() (in module cupynumeric)": [[415, "cupynumeric.subtract", false]], "sum() (cupynumeric.ndarray method)": [[314, "cupynumeric.ndarray.sum", false]], "sum() (in module cupynumeric)": [[416, "cupynumeric.sum", false]], "svd() (in module cupynumeric.linalg)": [[169, "cupynumeric.linalg.svd", false]], "swapaxes() (cupynumeric.ndarray method)": [[315, "cupynumeric.ndarray.swapaxes", false]], "swapaxes() (in module cupynumeric)": [[417, "cupynumeric.swapaxes", false]], "t (cupynumeric.ndarray property)": [[205, "cupynumeric.ndarray.T", false]], "take() (cupynumeric.ndarray method)": [[316, "cupynumeric.ndarray.take", false]], "take() (in module cupynumeric)": [[418, "cupynumeric.take", false]], "take_along_axis() (in module cupynumeric)": [[419, "cupynumeric.take_along_axis", false]], "tan() (in module cupynumeric)": [[420, "cupynumeric.tan", false]], "tanh() (in module cupynumeric)": [[421, "cupynumeric.tanh", false]], "tensordot() (in module cupynumeric)": [[422, "cupynumeric.tensordot", false]], "tile() (in module cupynumeric)": [[423, "cupynumeric.tile", false]], "tobytes() (cupynumeric.ndarray method)": [[317, "cupynumeric.ndarray.tobytes", false]], "tofile() (cupynumeric.ndarray method)": [[318, "cupynumeric.ndarray.tofile", false]], "tolist() (cupynumeric.ndarray method)": [[319, "cupynumeric.ndarray.tolist", false]], "tostring() (cupynumeric.ndarray method)": [[320, "cupynumeric.ndarray.tostring", false]], "trace() (cupynumeric.ndarray method)": [[321, "cupynumeric.ndarray.trace", false]], "trace() (in module cupynumeric)": [[424, "cupynumeric.trace", false]], "transpose() (cupynumeric.ndarray method)": [[322, "cupynumeric.ndarray.transpose", false]], "transpose() (in module cupynumeric)": [[425, "cupynumeric.transpose", false]], "tri() (in module cupynumeric)": [[426, "cupynumeric.tri", false]], "triangular() (in module cupynumeric.random)": [[383, "cupynumeric.random.triangular", false]], "tril() (in module cupynumeric)": [[427, "cupynumeric.tril", false]], "tril_indices() (in module cupynumeric)": [[428, "cupynumeric.tril_indices", false]], "tril_indices_from() (in module cupynumeric)": [[429, "cupynumeric.tril_indices_from", false]], "triu() (in module cupynumeric)": [[430, "cupynumeric.triu", false]], "triu_indices() (in module cupynumeric)": [[431, "cupynumeric.triu_indices", false]], "triu_indices_from() (in module cupynumeric)": [[432, "cupynumeric.triu_indices_from", false]], "true_divide() (in module cupynumeric)": [[433, "cupynumeric.true_divide", false]], "trunc() (in module cupynumeric)": [[434, "cupynumeric.trunc", false]], "uniform() (in module cupynumeric.random)": [[384, "cupynumeric.random.uniform", false]], "unique() (cupynumeric.ndarray method)": [[323, "cupynumeric.ndarray.unique", false]], "unique() (in module cupynumeric)": [[435, "cupynumeric.unique", false]], "unpackbits() (in module cupynumeric)": [[436, "cupynumeric.unpackbits", false]], "unravel_index() (in module cupynumeric)": [[437, "cupynumeric.unravel_index", false]], "var() (cupynumeric.ndarray method)": [[324, "cupynumeric.ndarray.var", false]], "var() (in module cupynumeric)": [[438, "cupynumeric.var", false]], "vdot() (in module cupynumeric)": [[439, "cupynumeric.vdot", false]], "view() (cupynumeric.ndarray method)": [[325, "cupynumeric.ndarray.view", false]], "vonmises() (in module cupynumeric.random)": [[385, "cupynumeric.random.vonmises", false]], "vsplit() (in module cupynumeric)": [[440, "cupynumeric.vsplit", false]], "vstack() (in module cupynumeric)": [[441, "cupynumeric.vstack", false]], "wald() (in module cupynumeric.random)": [[386, "cupynumeric.random.wald", false]], "weibull() (in module cupynumeric.random)": [[387, "cupynumeric.random.weibull", false]], "where() (in module cupynumeric)": [[442, "cupynumeric.where", false]], "writeable (in module cupynumeric)": [[285, "cupynumeric.WRITEABLE", false]], "writebackifcopy (in module cupynumeric)": [[285, "cupynumeric.WRITEBACKIFCOPY", false]], "zeros() (in module cupynumeric)": [[443, "cupynumeric.zeros", false]], "zeros_like() (in module cupynumeric)": [[444, "cupynumeric.zeros_like", false]], "zipf() (in module cupynumeric.random)": [[388, "cupynumeric.random.zipf", false]]}, "objects": {"cupynumeric": [[285, 0, 1, "", "ALIGNED"], [285, 0, 1, "", "BEHAVED"], [285, 0, 1, "", "CARRAY"], [285, 0, 1, "", "FARRAY"], [285, 0, 1, "", "FNC"], [285, 0, 1, "", "FORC"], [285, 0, 1, "", "F_CONTIGUOUS"], [285, 0, 1, "", "OWNDATA"], [285, 0, 1, "", "WRITEABLE"], [285, 0, 1, "", "WRITEBACKIFCOPY"], [12, 1, 1, "", "absolute"], [13, 1, 1, "", "add"], [14, 1, 1, "", "all"], [15, 1, 1, "", "allclose"], [16, 1, 1, "", "amax"], [17, 1, 1, "", "amin"], [18, 1, 1, "", "angle"], [19, 1, 1, "", "any"], [20, 1, 1, "", "append"], [21, 1, 1, "", "arange"], [22, 1, 1, "", "arccos"], [23, 1, 1, "", "arccosh"], [24, 1, 1, "", "arcsin"], [25, 1, 1, "", "arcsinh"], [26, 1, 1, "", "arctan"], [27, 1, 1, "", "arctan2"], [28, 1, 1, "", "arctanh"], [29, 1, 1, "", "argmax"], [30, 1, 1, "", "argmin"], [31, 1, 1, "", "argpartition"], [32, 1, 1, "", "argsort"], [33, 1, 1, "", "argwhere"], [34, 1, 1, "", "array"], [35, 1, 1, "", "array_equal"], [36, 1, 1, "", "array_split"], [37, 1, 1, "", "asarray"], [38, 1, 1, "", "atleast_1d"], [39, 1, 1, "", "atleast_2d"], [40, 1, 1, "", "atleast_3d"], [41, 1, 1, "", "average"], [42, 1, 1, "", "bartlett"], [43, 1, 1, "", "bincount"], [44, 1, 1, "", "bitwise_and"], [45, 1, 1, "", "bitwise_or"], [46, 1, 1, "", "bitwise_xor"], [47, 1, 1, "", "blackman"], [48, 1, 1, "", "block"], [6, 2, 1, "", "broadcast"], [49, 1, 1, "", "broadcast_arrays"], [50, 1, 1, "", "broadcast_shapes"], [51, 1, 1, "", "broadcast_to"], [52, 1, 1, "", "cbrt"], [53, 1, 1, "", "ceil"], [54, 1, 1, "", "choose"], [55, 1, 1, "", "clip"], [56, 1, 1, "", "column_stack"], [57, 1, 1, "", "compress"], [58, 1, 1, "", "concatenate"], [59, 1, 1, "", "conj"], [60, 1, 1, "", "conjugate"], [61, 1, 1, "", "convolve"], [62, 1, 1, "", "copy"], [63, 1, 1, "", "copysign"], [64, 1, 1, "", "cos"], [65, 1, 1, "", "cosh"], [66, 1, 1, "", "count_nonzero"], [67, 1, 1, "", "cov"], [68, 1, 1, "", "cumprod"], [69, 1, 1, "", "cumsum"], [70, 1, 1, "", "deg2rad"], [71, 1, 1, "", "degrees"], [72, 1, 1, "", "diag"], [73, 1, 1, "", "diag_indices"], [74, 1, 1, "", "diag_indices_from"], [75, 1, 1, "", "diagonal"], [76, 1, 1, "", "diff"], [77, 1, 1, "", "digitize"], [78, 1, 1, "", "divide"], [79, 1, 1, "", "dot"], [80, 1, 1, "", "dsplit"], [81, 1, 1, "", "dstack"], [82, 1, 1, "", "einsum"], [83, 1, 1, "", "einsum_path"], [84, 1, 1, "", "empty"], [85, 1, 1, "", "empty_like"], [86, 1, 1, "", "equal"], [87, 1, 1, "", "exp"], [88, 1, 1, "", "exp2"], [89, 1, 1, "", "expand_dims"], [90, 1, 1, "", "expm1"], [91, 1, 1, "", "extract"], [92, 1, 1, "", "eye"], [93, 1, 1, "", "fabs"], [11, 5, 0, "-", "fft"], [110, 1, 1, "", "fill_diagonal"], [111, 1, 1, "", "find_common_type"], [112, 1, 1, "", "flatnonzero"], [113, 1, 1, "", "flip"], [114, 1, 1, "", "fliplr"], [115, 1, 1, "", "flipud"], [116, 1, 1, "", "float_power"], [117, 1, 1, "", "floor"], [118, 1, 1, "", "floor_divide"], [119, 1, 1, "", "fmax"], [120, 1, 1, "", "fmin"], [121, 1, 1, "", "fmod"], [122, 1, 1, "", "frexp"], [123, 1, 1, "", "full"], [124, 1, 1, "", "full_like"], [125, 1, 1, "", "gcd"], [126, 1, 1, "", "gradient"], [127, 1, 1, "", "greater"], [128, 1, 1, "", "greater_equal"], [129, 1, 1, "", "hamming"], [130, 1, 1, "", "hanning"], [131, 1, 1, "", "histogram"], [132, 1, 1, "", "hsplit"], [133, 1, 1, "", "hstack"], [134, 1, 1, "", "hypot"], [135, 1, 1, "", "identity"], [136, 1, 1, "", "imag"], [137, 1, 1, "", "indices"], [138, 1, 1, "", "inner"], [139, 1, 1, "", "invert"], [140, 1, 1, "", "isclose"], [141, 1, 1, "", "iscomplex"], [142, 1, 1, "", "iscomplexobj"], [143, 1, 1, "", "isfinite"], [144, 1, 1, "", "isinf"], [145, 1, 1, "", "isnan"], [146, 1, 1, "", "isneginf"], [147, 1, 1, "", "isposinf"], [148, 1, 1, "", "isreal"], [149, 1, 1, "", "isrealobj"], [150, 1, 1, "", "isscalar"], [151, 1, 1, "", "ix_"], [152, 1, 1, "", "kaiser"], [153, 1, 1, "", "lcm"], [154, 1, 1, "", "ldexp"], [155, 1, 1, "", "left_shift"], [156, 1, 1, "", "less"], [157, 1, 1, "", "less_equal"], [448, 5, 0, "-", "linalg"], [170, 1, 1, "", "linspace"], [171, 1, 1, "", "load"], [172, 1, 1, "", "log"], [173, 1, 1, "", "log10"], [174, 1, 1, "", "log1p"], [175, 1, 1, "", "log2"], [176, 1, 1, "", "logaddexp"], [177, 1, 1, "", "logaddexp2"], [178, 1, 1, "", "logical_and"], [179, 1, 1, "", "logical_not"], [180, 1, 1, "", "logical_or"], [181, 1, 1, "", "logical_xor"], [182, 1, 1, "", "mask_indices"], [183, 1, 1, "", "matmul"], [184, 1, 1, "", "maximum"], [185, 1, 1, "", "mean"], [186, 1, 1, "", "median"], [187, 1, 1, "", "meshgrid"], [188, 1, 1, "", "minimum"], [189, 1, 1, "", "mod"], [190, 1, 1, "", "modf"], [191, 1, 1, "", "moveaxis"], [192, 1, 1, "", "multiply"], [193, 1, 1, "", "nanargmax"], [194, 1, 1, "", "nanargmin"], [195, 1, 1, "", "nancumprod"], [196, 1, 1, "", "nancumsum"], [197, 1, 1, "", "nanmax"], [198, 1, 1, "", "nanmean"], [199, 1, 1, "", "nanmedian"], [200, 1, 1, "", "nanmin"], [201, 1, 1, "", "nanpercentile"], [202, 1, 1, "", "nanprod"], [203, 1, 1, "", "nanquantile"], [204, 1, 1, "", "nansum"], [4, 2, 1, "", "ndarray"], [326, 1, 1, "", "ndim"], [327, 1, 1, "", "negative"], [328, 1, 1, "", "nextafter"], [329, 1, 1, "", "nonzero"], [330, 1, 1, "", "not_equal"], [331, 1, 1, "", "ones"], [332, 1, 1, "", "ones_like"], [333, 1, 1, "", "outer"], [334, 1, 1, "", "packbits"], [335, 1, 1, "", "partition"], [336, 1, 1, "", "percentile"], [337, 1, 1, "", "place"], [338, 1, 1, "", "positive"], [339, 1, 1, "", "power"], [340, 1, 1, "", "prod"], [341, 1, 1, "", "put"], [342, 1, 1, "", "put_along_axis"], [343, 1, 1, "", "putmask"], [344, 1, 1, "", "quantile"], [345, 1, 1, "", "rad2deg"], [346, 1, 1, "", "radians"], [453, 5, 0, "-", "random"], [389, 1, 1, "", "ravel"], [390, 1, 1, "", "real"], [391, 1, 1, "", "reciprocal"], [392, 1, 1, "", "remainder"], [393, 1, 1, "", "repeat"], [394, 1, 1, "", "reshape"], [395, 1, 1, "", "right_shift"], [396, 1, 1, "", "rint"], [397, 1, 1, "", "roll"], [398, 1, 1, "", "rot90"], [399, 1, 1, "", "round"], [400, 1, 1, "", "row_stack"], [401, 1, 1, "", "searchsorted"], [402, 1, 1, "", "select"], [403, 1, 1, "", "shape"], [404, 1, 1, "", "sign"], [405, 1, 1, "", "signbit"], [406, 1, 1, "", "sin"], [407, 1, 1, "", "sinh"], [408, 1, 1, "", "sort"], [409, 1, 1, "", "sort_complex"], [410, 1, 1, "", "split"], [411, 1, 1, "", "sqrt"], [412, 1, 1, "", "square"], [413, 1, 1, "", "squeeze"], [414, 1, 1, "", "stack"], [415, 1, 1, "", "subtract"], [416, 1, 1, "", "sum"], [417, 1, 1, "", "swapaxes"], [418, 1, 1, "", "take"], [419, 1, 1, "", "take_along_axis"], [420, 1, 1, "", "tan"], [421, 1, 1, "", "tanh"], [422, 1, 1, "", "tensordot"], [423, 1, 1, "", "tile"], [424, 1, 1, "", "trace"], [425, 1, 1, "", "transpose"], [426, 1, 1, "", "tri"], [427, 1, 1, "", "tril"], [428, 1, 1, "", "tril_indices"], [429, 1, 1, "", "tril_indices_from"], [430, 1, 1, "", "triu"], [431, 1, 1, "", "triu_indices"], [432, 1, 1, "", "triu_indices_from"], [433, 1, 1, "", "true_divide"], [434, 1, 1, "", "trunc"], [435, 1, 1, "", "unique"], [436, 1, 1, "", "unpackbits"], [437, 1, 1, "", "unravel_index"], [438, 1, 1, "", "var"], [439, 1, 1, "", "vdot"], [440, 1, 1, "", "vsplit"], [441, 1, 1, "", "vstack"], [442, 1, 1, "", "where"], [443, 1, 1, "", "zeros"], [444, 1, 1, "", "zeros_like"]], "cupynumeric.broadcast": [[6, 3, 1, "", "index"], [6, 3, 1, "", "iters"], [6, 3, 1, "", "nd"], [6, 3, 1, "", "ndim"], [6, 3, 1, "", "numiter"], [6, 4, 1, "", "reset"], [6, 3, 1, "", "shape"], [6, 3, 1, "", "size"]], "cupynumeric.fft": [[94, 1, 1, "", "fft"], [95, 1, 1, "", "fft2"], [96, 1, 1, "", "fftn"], [97, 1, 1, "", "fftshift"], [98, 1, 1, "", "hfft"], [99, 1, 1, "", "ifft"], [100, 1, 1, "", "ifft2"], [101, 1, 1, "", "ifftn"], [102, 1, 1, "", "ifftshift"], [103, 1, 1, "", "ihfft"], [104, 1, 1, "", "irfft"], [105, 1, 1, "", "irfft2"], [106, 1, 1, "", "irfftn"], [107, 1, 1, "", "rfft"], [108, 1, 1, "", "rfft2"], [109, 1, 1, "", "rfftn"]], "cupynumeric.linalg": [[158, 1, 1, "", "cholesky"], [159, 1, 1, "", "eig"], [160, 1, 1, "", "eigh"], [161, 1, 1, "", "eigvals"], [162, 1, 1, "", "eigvalsh"], [163, 1, 1, "", "expm"], [164, 1, 1, "", "matrix_power"], [165, 1, 1, "", "multi_dot"], [166, 1, 1, "", "norm"], [167, 1, 1, "", "qr"], [168, 1, 1, "", "solve"], [169, 1, 1, "", "svd"]], "cupynumeric.ndarray": [[285, 0, 1, "", "C_CONTIGUOUS"], [205, 3, 1, "", "T"], [206, 4, 1, "", "__abs__"], [207, 4, 1, "", "__add__"], [208, 4, 1, "", "__and__"], [209, 4, 1, "", "__array__"], [210, 4, 1, "", "__bool__"], [211, 4, 1, "", "__complex__"], [212, 4, 1, "", "__contains__"], [213, 4, 1, "", "__copy__"], [214, 4, 1, "", "__deepcopy__"], [215, 4, 1, "", "__divmod__"], [216, 4, 1, "", "__eq__"], [217, 4, 1, "", "__float__"], [218, 4, 1, "", "__floordiv__"], [219, 4, 1, "", "__ge__"], [220, 4, 1, "", "__getitem__"], [221, 4, 1, "", "__gt__"], [222, 4, 1, "", "__iadd__"], [223, 4, 1, "", "__iand__"], [224, 4, 1, "", "__ifloordiv__"], [225, 4, 1, "", "__ilshift__"], [226, 4, 1, "", "__imatmul__"], [227, 4, 1, "", "__imod__"], [228, 4, 1, "", "__imul__"], [229, 4, 1, "", "__index__"], [4, 4, 1, "", "__init__"], [230, 4, 1, "", "__int__"], [231, 4, 1, "", "__invert__"], [232, 4, 1, "", "__ior__"], [233, 4, 1, "", "__ipow__"], [234, 4, 1, "", "__irshift__"], [235, 4, 1, "", "__isub__"], [236, 4, 1, "", "__itruediv__"], [237, 4, 1, "", "__ixor__"], [238, 4, 1, "", "__le__"], [239, 4, 1, "", "__len__"], [240, 4, 1, "", "__lshift__"], [241, 4, 1, "", "__lt__"], [242, 4, 1, "", "__matmul__"], [243, 4, 1, "", "__mod__"], [244, 4, 1, "", "__mul__"], [245, 4, 1, "", "__ne__"], [246, 4, 1, "", "__neg__"], [247, 4, 1, "", "__new__"], [248, 4, 1, "", "__or__"], [249, 4, 1, "", "__pos__"], [250, 4, 1, "", "__pow__"], [251, 4, 1, "", "__reduce__"], [252, 4, 1, "", "__repr__"], [253, 4, 1, "", "__rmatmul__"], [254, 4, 1, "", "__rshift__"], [255, 4, 1, "", "__setitem__"], [256, 4, 1, "", "__setstate__"], [257, 4, 1, "", "__str__"], [258, 4, 1, "", "__sub__"], [259, 4, 1, "", "__truediv__"], [260, 4, 1, "", "__xor__"], [261, 4, 1, "", "all"], [262, 4, 1, "", "any"], [263, 4, 1, "", "argmax"], [264, 4, 1, "", "argmin"], [265, 4, 1, "", "argpartition"], [266, 4, 1, "", "argsort"], [267, 4, 1, "", "astype"], [268, 3, 1, "", "base"], [269, 4, 1, "", "choose"], [270, 4, 1, "", "clip"], [271, 4, 1, "", "compress"], [272, 4, 1, "", "conj"], [273, 4, 1, "", "conjugate"], [274, 4, 1, "", "copy"], [275, 3, 1, "", "ctypes"], [276, 4, 1, "", "cumprod"], [277, 4, 1, "", "cumsum"], [278, 3, 1, "", "data"], [279, 4, 1, "", "diagonal"], [280, 4, 1, "", "dot"], [281, 3, 1, "", "dtype"], [282, 4, 1, "", "dump"], [283, 4, 1, "", "dumps"], [284, 4, 1, "", "fill"], [285, 3, 1, "", "flags"], [286, 3, 1, "", "flat"], [287, 4, 1, "", "flatten"], [288, 4, 1, "", "flip"], [289, 4, 1, "", "getfield"], [290, 3, 1, "", "imag"], [291, 4, 1, "", "item"], [292, 0, 1, "", "itemset"], [293, 3, 1, "", "itemsize"], [294, 4, 1, "", "max"], [295, 4, 1, "", "mean"], [296, 4, 1, "", "min"], [297, 3, 1, "", "nbytes"], [298, 3, 1, "", "ndim"], [299, 4, 1, "", "nonzero"], [300, 4, 1, "", "partition"], [301, 4, 1, "", "prod"], [302, 4, 1, "", "put"], [303, 4, 1, "", "ravel"], [304, 3, 1, "", "real"], [305, 4, 1, "", "reshape"], [306, 4, 1, "", "searchsorted"], [307, 4, 1, "", "setfield"], [308, 4, 1, "", "setflags"], [309, 3, 1, "", "shape"], [310, 3, 1, "", "size"], [311, 4, 1, "", "sort"], [312, 4, 1, "", "squeeze"], [313, 3, 1, "", "strides"], [314, 4, 1, "", "sum"], [315, 4, 1, "", "swapaxes"], [316, 4, 1, "", "take"], [317, 4, 1, "", "tobytes"], [318, 4, 1, "", "tofile"], [319, 4, 1, "", "tolist"], [320, 4, 1, "", "tostring"], [321, 4, 1, "", "trace"], [322, 4, 1, "", "transpose"], [323, 4, 1, "", "unique"], [324, 4, 1, "", "var"], [325, 4, 1, "", "view"]], "cupynumeric.random": [[1, 2, 1, "", "BitGenerator"], [2, 2, 1, "", "Generator"], [347, 1, 1, "", "beta"], [348, 1, 1, "", "binomial"], [349, 1, 1, "", "bytes"], [350, 1, 1, "", "chisquare"], [351, 1, 1, "", "default_rng"], [352, 1, 1, "", "exponential"], [353, 1, 1, "", "f"], [354, 1, 1, "", "gamma"], [355, 1, 1, "", "geometric"], [356, 1, 1, "", "gumbel"], [357, 1, 1, "", "hypergeometric"], [358, 1, 1, "", "laplace"], [359, 1, 1, "", "logistic"], [360, 1, 1, "", "lognormal"], [361, 1, 1, "", "logseries"], [362, 1, 1, "", "negative_binomial"], [363, 1, 1, "", "noncentral_chisquare"], [364, 1, 1, "", "noncentral_f"], [365, 1, 1, "", "normal"], [366, 1, 1, "", "pareto"], [367, 1, 1, "", "poisson"], [368, 1, 1, "", "power"], [369, 1, 1, "", "rand"], [370, 1, 1, "", "randint"], [371, 1, 1, "", "randn"], [372, 1, 1, "", "random"], [373, 1, 1, "", "random_integers"], [374, 1, 1, "", "random_sample"], [375, 1, 1, "", "ranf"], [376, 1, 1, "", "rayleigh"], [377, 1, 1, "", "sample"], [378, 1, 1, "", "seed"], [379, 1, 1, "", "standard_cauchy"], [380, 1, 1, "", "standard_exponential"], [381, 1, 1, "", "standard_gamma"], [382, 1, 1, "", "standard_t"], [383, 1, 1, "", "triangular"], [384, 1, 1, "", "uniform"], [385, 1, 1, "", "vonmises"], [386, 1, 1, "", "wald"], [387, 1, 1, "", "weibull"], [388, 1, 1, "", "zipf"]], "cupynumeric.random.BitGenerator": [[1, 4, 1, "", "__init__"]], "cupynumeric.random.Generator": [[2, 4, 1, "", "__init__"]]}, "objnames": {"0": ["py", "attribute", "Python attribute"], "1": ["py", "function", "Python function"], "2": ["py", "class", "Python class"], "3": ["py", "property", "Python property"], "4": ["py", "method", "Python method"], "5": ["py", "module", "Python module"]}, "objtypes": {"0": "py:attribute", "1": "py:function", "2": "py:class", "3": "py:property", "4": "py:method", "5": "py:module"}, "terms": {"": [2, 6, 14, 15, 29, 30, 35, 61, 68, 69, 75, 95, 96, 100, 101, 105, 106, 108, 109, 110, 111, 140, 150, 166, 169, 195, 196, 197, 200, 201, 203, 278, 281, 291, 310, 317, 318, 322, 336, 344, 382, 388, 422, 423, 456, 460, 461, 464, 465, 466, 467, 469, 470, 471, 472, 473, 476, 479, 481, 484, 485], "0": [3, 4, 14, 19, 21, 36, 41, 43, 48, 54, 55, 58, 67, 68, 72, 73, 75, 76, 77, 79, 92, 95, 96, 97, 99, 100, 101, 106, 109, 112, 115, 135, 137, 164, 166, 170, 182, 187, 197, 201, 203, 210, 256, 279, 285, 289, 306, 307, 313, 314, 319, 321, 322, 324, 334, 336, 344, 347, 348, 350, 352, 353, 354, 356, 358, 359, 360, 361, 362, 363, 364, 365, 367, 368, 369, 370, 371, 372, 374, 375, 376, 377, 379, 382, 384, 385, 386, 387, 398, 399, 401, 402, 410, 414, 416, 424, 426, 427, 428, 429, 430, 431, 432, 436, 438, 440, 456, 460, 463, 464, 465, 466, 467, 469, 470, 471, 472, 473, 479, 481, 482, 484, 485, 486], "00": 485, "000": 485, "000001": 469, "000028": 473, "000029": 473, "0021705301478625403": 466, "01": [68, 485], "012924932": 485, "017": 475, "03": 463, "05": [15, 140, 464, 485], "07": [465, 479, 484], "075726": 463, "08": [15, 140, 463], "0b00000011": [334, 436], "0d": 478, "0x11403f190": 466, "1": [2, 3, 14, 16, 17, 19, 21, 31, 32, 36, 38, 40, 41, 43, 48, 54, 55, 56, 57, 61, 67, 68, 69, 72, 73, 75, 76, 77, 79, 81, 90, 91, 94, 95, 96, 98, 99, 100, 101, 103, 104, 105, 106, 107, 108, 109, 114, 126, 131, 132, 133, 137, 138, 151, 165, 166, 167, 170, 183, 187, 195, 196, 200, 201, 203, 204, 265, 266, 274, 285, 286, 287, 291, 300, 301, 306, 311, 313, 322, 333, 334, 335, 336, 337, 342, 344, 347, 348, 350, 352, 354, 355, 356, 357, 358, 359, 360, 361, 362, 364, 365, 366, 367, 368, 369, 371, 372, 373, 374, 375, 376, 377, 380, 381, 384, 386, 387, 388, 389, 394, 398, 400, 401, 408, 410, 413, 414, 419, 422, 423, 426, 435, 436, 439, 441, 456, 460, 461, 464, 465, 466, 467, 469, 470, 471, 472, 473, 475, 478, 479, 481, 482, 484, 486], "10": [76, 77, 131, 173, 464, 466, 469, 472, 473, 482, 484, 485], "100": [68, 201, 336, 463, 464, 465, 466, 469, 471, 481, 482, 485], "1000": [464, 465, 471, 479, 485], "10000": [171, 485], "100000": 485, "1000000": [464, 485], "100000000": 485, "1000000k": 485, "100000k": 485, "10000k": 485, "1024": [456, 472], "1083": 485, "10k": 475, "11": [475, 484, 485], "1100": 485, "11432": 485, "11680": 485, "12": [3, 8, 77, 475, 476, 478, 484], "12000": 485, "1202": 485, "1241": 485, "125": 365, "126": 472, "128": 472, "129": 475, "13": [470, 475, 485], "1300": 485, "13012": 485, "134217728": 456, "135": 463, "14": [3, 470], "14000": 485, "141": 485, "15": [77, 166, 471, 485], "150": 485, "15000": 485, "15000x15000": 485, "15973827": 478, "16": [3, 8, 463, 467, 485], "16000": 485, "16969": 485, "17": 3, "17617": 485, "18": [3, 8, 163, 293, 473], "19": 3, "1956": 386, "196": 463, "1970": 485, "1984": 476, "1985": 166, "1992": 466, "1995": 476, "1996": [201, 203, 336, 344], "1997": 464, "1998": 476, "1d": [41, 57, 342, 393, 419, 423], "1d00000000000001": 473, "1e": [15, 140, 465, 466, 470], "1e00000000000000": 473, "2": [3, 39, 40, 48, 56, 67, 72, 73, 74, 75, 76, 77, 79, 80, 81, 88, 92, 95, 98, 99, 100, 103, 104, 105, 106, 107, 108, 109, 110, 114, 115, 126, 151, 154, 159, 160, 161, 162, 165, 166, 167, 169, 175, 177, 183, 187, 201, 203, 313, 322, 336, 344, 352, 355, 363, 387, 398, 400, 410, 422, 423, 424, 441, 456, 460, 463, 464, 465, 466, 467, 469, 470, 471, 472, 475, 476, 477, 478, 484, 486], "20": [77, 313, 366, 470, 472, 485], "200": [365, 485], "2000": [476, 485], "20000": 485, "2000000": 485, "2000000k": 485, "2001": [352, 365], "2004": [460, 476], "2005": 476, "2006": 460, "2015": 476, "2017": 476, "2020": 485, "2024": [464, 465, 471], "2025": 476, "2048": 474, "21": [3, 293, 485], "2193": 485, "22": [3, 485], "225": 485, "22500x22500": 485, "23": [3, 479, 484], "2316419": 464, "2350": 485, "24": [473, 475], "240": [3, 8], "24000": 485, "2461": 471, "25": 472, "25001932": 485, "255": [76, 467, 485], "256": 469, "259": 485, "2593": 485, "26": [464, 481], "27": 481, "273": 471, "275": 485, "277": 465, "28": [3, 481], "280": 464, "29": 3, "294165": 485, "2960": 485, "2d": [110, 322, 398, 472, 484], "2x": 470, "2x2": 470, "2y": 470, "3": [40, 76, 77, 79, 80, 81, 126, 133, 151, 183, 187, 201, 203, 313, 334, 336, 344, 352, 400, 410, 418, 422, 423, 436, 441, 464, 465, 466, 467, 469, 470, 471, 475, 476, 478, 484, 486], "30": 485, "300": 485, "30000": 485, "30000x30000": 485, "31": [465, 481], "3110": 485, "31938153": 464, "32": [8, 202, 313, 461, 472, 485], "320": 469, "33": 481, "330274429": 464, "35": [3, 485], "3550": 485, "356563782": 464, "36": 466, "361": [201, 203, 336, 344], "365": [201, 203, 336, 344], "37": 68, "38000": 485, "39": 470, "39894228040143267793994605993438": 464, "3d": 484, "3e": 68, "3rd": 80, "4": [3, 76, 77, 79, 138, 183, 201, 203, 313, 336, 344, 422, 423, 439, 464, 465, 466, 467, 469, 470, 471, 472, 473, 478, 482, 484, 485, 486], "40": [313, 471, 485], "40000": 485, "4096": 456, "42": [3, 8, 469, 484], "434": 485, "4378": 485, "443": [3, 8], "45": 464, "457": 485, "46": 8, "466": 485, "47": 3, "48000": 485, "49": 485, "4f": 485, "4th": [352, 365], "4x": 485, "4y": 470, "5": [76, 77, 79, 151, 183, 201, 203, 313, 336, 344, 423, 464, 465, 466, 467, 469, 471, 473, 484, 485], "50": [170, 201, 203, 336, 344, 485], "500": 485, "50000": 485, "50000x50000": 485, "5050": 485, "50625": 485, "50e": 485, "51": [8, 365], "5384": 485, "5460": 485, "5596": 485, "57": 352, "6": [3, 76, 77, 201, 203, 313, 336, 344, 463, 464, 465, 466, 469, 470, 471], "600": 472, "6040": 485, "62": [3, 8], "6368": 485, "64": [202, 485], "65536": 456, "659": 464, "69664": 485, "7": [3, 76, 183, 201, 203, 308, 313, 336, 344, 464, 466, 469, 470], "70": 485, "70000": 485, "713": 485, "725": 485, "75625": 485, "75625x75625": 485, "767": 485, "781477937": 464, "7f0524da9740": 473, "7fda18f26000": 473, "7fe90fa7d740": 473, "8": [76, 167, 201, 203, 313, 336, 344, 466, 469, 476, 485], "80": 366, "8000": 485, "805182": 473, "8192": 456, "821255978": 464, "8388608": 473, "875": 471, "8850": 485, "9": [183, 201, 203, 313, 336, 344, 466, 467, 469, 485], "90": 398, "919": 485, "961": 485, "993": 485, "A": [1, 8, 12, 13, 14, 18, 19, 20, 22, 23, 24, 25, 26, 27, 28, 34, 43, 44, 45, 46, 51, 52, 53, 57, 59, 60, 61, 63, 64, 65, 67, 68, 69, 70, 71, 78, 83, 86, 87, 88, 90, 93, 95, 99, 100, 111, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 125, 126, 127, 128, 134, 139, 143, 144, 145, 146, 147, 153, 154, 155, 156, 157, 163, 166, 167, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 186, 188, 189, 190, 192, 195, 196, 199, 202, 204, 267, 282, 285, 286, 287, 288, 291, 308, 313, 317, 320, 327, 328, 330, 333, 338, 339, 345, 346, 351, 367, 371, 382, 389, 391, 392, 394, 395, 396, 398, 399, 404, 405, 406, 407, 410, 411, 412, 415, 418, 420, 421, 423, 425, 433, 434, 436, 438, 456, 465, 466, 469, 473, 476, 479, 485], "AND": [14, 44, 178, 476], "AS": [464, 465, 471, 476], "And": [470, 486], "As": [313, 318, 382, 386, 460, 471, 478, 484, 485], "At": [12, 13, 22, 23, 24, 25, 26, 27, 28, 44, 45, 46, 52, 53, 59, 60, 63, 64, 65, 70, 71, 78, 86, 87, 88, 90, 93, 116, 117, 118, 119, 120, 121, 122, 125, 127, 128, 134, 139, 143, 144, 145, 153, 154, 155, 156, 157, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 184, 188, 189, 190, 192, 327, 328, 330, 338, 339, 345, 346, 391, 392, 395, 396, 404, 405, 406, 407, 411, 412, 415, 420, 421, 433, 434, 465], "BE": 476, "BUT": 476, "BY": 476, "But": 484, "By": [16, 17, 29, 30, 31, 32, 37, 67, 95, 100, 109, 163, 170, 193, 194, 197, 202, 267, 335, 389, 393, 397, 408, 418, 425, 426, 428, 431, 438, 456, 460, 472, 485, 486], "FOR": 476, "For": [12, 13, 21, 22, 23, 24, 25, 26, 27, 28, 36, 40, 44, 45, 46, 52, 53, 55, 59, 60, 61, 63, 64, 65, 68, 69, 70, 71, 73, 76, 77, 78, 81, 82, 86, 87, 88, 90, 93, 94, 98, 99, 101, 104, 105, 107, 108, 110, 114, 115, 116, 117, 118, 119, 120, 121, 122, 125, 127, 128, 133, 134, 139, 140, 143, 144, 145, 153, 154, 155, 156, 157, 164, 166, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 184, 185, 187, 188, 189, 190, 192, 193, 194, 195, 196, 198, 202, 251, 256, 293, 313, 322, 327, 328, 330, 338, 339, 345, 346, 365, 391, 392, 395, 396, 400, 404, 405, 406, 407, 410, 411, 412, 414, 415, 420, 421, 433, 434, 438, 441, 452, 460, 466, 467, 469, 472, 473, 474, 475, 479, 482, 485, 486], "IF": 476, "IN": 476, "ITS": 476, "If": [1, 2, 12, 13, 14, 15, 16, 17, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 34, 35, 37, 41, 42, 43, 44, 45, 46, 47, 48, 49, 52, 53, 54, 55, 57, 58, 59, 60, 61, 63, 64, 65, 67, 68, 69, 70, 71, 72, 75, 76, 77, 78, 79, 82, 83, 86, 87, 88, 90, 92, 93, 94, 95, 96, 98, 99, 100, 101, 103, 104, 106, 107, 109, 110, 113, 116, 117, 118, 119, 120, 121, 122, 125, 126, 127, 128, 129, 130, 131, 134, 136, 137, 138, 139, 140, 143, 144, 145, 146, 147, 148, 152, 153, 154, 155, 156, 157, 159, 160, 161, 162, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 183, 184, 185, 186, 187, 188, 189, 190, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 256, 267, 288, 306, 318, 319, 322, 326, 327, 328, 330, 333, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 373, 374, 375, 376, 377, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 390, 391, 392, 394, 395, 396, 397, 399, 401, 404, 405, 406, 407, 408, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 426, 433, 434, 435, 438, 439, 460, 461, 466, 469, 470, 473, 481, 484, 485], "In": [2, 61, 68, 69, 82, 99, 100, 101, 104, 106, 158, 170, 182, 187, 195, 196, 201, 202, 203, 204, 335, 336, 340, 341, 344, 366, 384, 386, 394, 408, 416, 426, 460, 464, 465, 466, 468, 469, 472, 479, 484, 485], "It": [6, 14, 19, 20, 21, 29, 30, 31, 32, 42, 47, 51, 54, 55, 68, 69, 77, 118, 160, 162, 186, 193, 194, 195, 196, 199, 201, 203, 204, 285, 336, 340, 343, 344, 347, 352, 355, 358, 366, 385, 399, 402, 416, 418, 419, 438, 466, 472, 477, 484, 485], "Its": [55, 57, 342, 352, 424], "NO": 476, "NOT": [139, 179, 378, 476, 485], "No": [37, 158], "Not": [55, 143, 195, 196, 202, 204, 484], "OF": [464, 465, 471, 476], "ON": [461, 476], "OR": [19, 45, 180, 464, 465, 471, 475, 476], "On": 473, "One": [38, 39, 40, 202, 270, 394, 473, 484], "Ones": [34, 195], "Or": 422, "SUCH": 476, "Such": 473, "THE": 476, "TO": 476, "That": 182, "The": [2, 6, 7, 14, 15, 16, 17, 18, 19, 20, 21, 31, 32, 34, 36, 41, 42, 43, 47, 48, 49, 50, 51, 54, 55, 56, 58, 61, 66, 67, 68, 69, 72, 73, 75, 76, 77, 79, 81, 82, 83, 85, 89, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 111, 113, 116, 123, 124, 126, 129, 130, 131, 133, 135, 136, 137, 138, 140, 142, 146, 147, 149, 152, 158, 159, 160, 161, 162, 164, 165, 166, 167, 169, 170, 171, 182, 183, 185, 186, 187, 191, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 256, 267, 275, 282, 285, 287, 288, 290, 293, 304, 308, 313, 317, 318, 319, 326, 331, 332, 334, 335, 336, 340, 341, 342, 344, 347, 351, 352, 353, 354, 355, 356, 358, 363, 365, 366, 367, 369, 370, 371, 373, 376, 379, 383, 384, 385, 386, 387, 388, 389, 390, 393, 394, 397, 398, 399, 400, 402, 403, 408, 410, 413, 414, 416, 418, 419, 422, 423, 424, 426, 428, 429, 431, 432, 435, 436, 437, 438, 439, 441, 443, 444, 445, 461, 462, 463, 464, 466, 467, 469, 470, 472, 473, 475, 476, 478, 481, 482, 484, 485], "Then": [54, 182, 486], "There": [170, 308, 435, 461, 463, 470, 484, 485], "These": [20, 49, 67, 82, 83, 187, 191, 285, 308, 342, 419, 472, 478, 485], "To": [98, 104, 106, 322, 374, 375, 377, 460, 464, 465, 466, 469, 470, 471, 475, 482, 484, 485], "WITH": 476, "With": [14, 16, 17, 19, 29, 30, 41, 166, 185, 186, 193, 194, 197, 198, 199, 200, 201, 202, 203, 204, 336, 340, 344, 416, 438, 472, 474, 485], "_": [466, 484, 485], "__abs__": 0, "__add__": 0, "__and__": 0, "__array__": [0, 34, 325], "__array_function__": [0, 426], "__array_ufunc__": 0, "__bool__": 0, "__buffer__": 0, "__complex__": 0, "__contains__": 0, "__copy__": 0, "__deepcopy__": 0, "__divmod__": 0, "__eq__": 0, "__float__": 0, "__floordiv__": 0, "__format__": 0, "__ge__": 0, "__getitem__": 0, "__gt__": 0, "__hash__": 0, "__iadd__": 0, "__iand__": 0, "__ifloordiv__": 0, "__ilshift__": 0, "__imatmul__": 0, "__imod__": 0, "__imul__": 0, "__index__": 0, "__init__": [0, 1, 2, 4, 481], "__int__": 0, "__invert__": 0, "__ior__": 0, "__ipow__": 0, "__irshift__": 0, "__isub__": 0, "__iter__": 0, "__itruediv__": 0, "__ixor__": 0, "__le__": 0, "__len__": 0, "__lshift__": 0, "__lt__": 0, "__main__": 485, "__matmul__": 0, "__mod__": 0, "__mul__": 0, "__name__": [467, 485], "__ne__": 0, "__neg__": 0, "__or__": 0, "__pos__": 0, "__pow__": 0, "__radd__": 0, "__rand__": 0, "__rdivmod__": 0, "__reduce__": 0, "__reduce_ex__": 0, "__repr__": 0, "__rfloordiv__": 0, "__rmatmul__": 0, "__rmod__": 0, "__rmul__": 0, "__ror__": 0, "__rpow__": 0, "__rshift__": 0, "__rsub__": 0, "__rtruediv__": 0, "__rxor__": 0, "__setitem__": 0, "__setstate__": 0, "__sizeof__": 0, "__str__": 0, "__sub__": 0, "__truediv__": 0, "__xor__": 0, "_f": 166, "a0": 333, "a1": [35, 58, 333, 464, 466], "a100": 474, "a2": [35, 58, 464, 466], "a3": 464, "a4": 464, "a5": 464, "a_": [166, 466], "a_ax": 422, "a_max": 55, "a_min": 55, "a_swap": 417, "aand": 464, "aarch64": [475, 485], "ab": [15, 164, 166, 206, 464], "abandon": 460, "abil": 485, "abl": [166, 460, 485], "about": [99, 285, 308, 456, 460, 465, 469, 475, 479, 485], "abov": [54, 72, 96, 101, 106, 109, 185, 198, 202, 204, 340, 366, 370, 373, 426, 427, 438, 464, 472, 473, 476, 485], "abramowitz": 464, "abrupt": 467, "absolut": [0, 3, 8, 15, 93, 140], "abstract": 472, "ac": [464, 467], "acceler": [456, 473, 474, 485], "accept": [348, 460, 478, 484], "access": [73, 74, 182, 285, 291, 308, 472, 473, 485], "accomod": 466, "accord": [41, 109, 159, 160, 161, 162, 308, 425], "accordingli": 183, "account": [389, 394, 472, 473, 485], "acct": 485, "acct_nam": 485, "accumul": [68, 69, 195, 196, 202, 204, 340, 416, 424, 478], "accur": [126, 465, 466, 473], "accuraci": [99, 100, 101, 104, 106, 466, 470, 485], "achiev": [322, 355, 472, 474], "aco": [3, 8], "acosh": [3, 8], "across": [469, 472, 485], "action": 476, "activ": [475, 485], "actual": [158, 308, 467, 472, 473, 479, 485], "ad": [15, 322, 366, 472, 481], "adapt": 476, "add": [0, 3, 8, 374, 375, 377, 436, 460, 478, 484, 485, 486], "add_argu": 485, "addit": [2, 67, 158, 163, 322, 435, 456, 463, 466, 467, 470, 472, 473, 475, 484, 485], "addition": [351, 461, 478, 484, 485], "address": [418, 460, 485], "adjac": [21, 472, 485], "advanc": [462, 473, 478, 483], "advantag": 485, "advis": 476, "affect": [21, 308, 466], "afford": [473, 485], "after": [81, 110, 183, 201, 203, 313, 328, 336, 344, 397, 400, 441, 460, 463, 472, 481, 484], "again": 325, "against": [6, 14, 15, 16, 17, 19, 29, 30, 41, 49, 50, 166, 185, 186, 193, 194, 197, 198, 199, 200, 201, 202, 203, 204, 336, 340, 342, 344, 416, 419, 438], "aggreg": 485, "agre": [460, 464, 465, 471], "ai": 485, "aim": 474, "alaska": 476, "algebra": [82, 445, 454, 461], "algo_canny_edge_detector": 467, "algorithm": [1, 32, 82, 83, 94, 99, 107, 408, 466, 467, 468, 470, 485], "alia": [320, 372], "alias": 99, "align": [285, 308, 485], "all": [0, 3, 8, 16, 17, 19, 41, 48, 54, 56, 67, 76, 77, 81, 82, 83, 87, 88, 90, 92, 96, 97, 101, 102, 106, 109, 110, 113, 126, 133, 135, 150, 151, 158, 170, 182, 183, 185, 187, 193, 194, 195, 196, 197, 198, 200, 202, 204, 267, 272, 284, 285, 288, 308, 319, 340, 384, 397, 400, 402, 413, 416, 418, 424, 438, 441, 456, 460, 461, 463, 469, 471, 472, 476, 481, 485, 486], "allclos": [0, 3, 8, 481], "allevi": 485, "alloc": [12, 13, 22, 23, 24, 25, 26, 27, 28, 44, 45, 46, 52, 53, 59, 60, 63, 64, 65, 70, 71, 78, 86, 87, 88, 90, 93, 116, 117, 118, 119, 120, 121, 122, 125, 127, 128, 134, 139, 143, 144, 145, 146, 147, 153, 154, 155, 156, 157, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 184, 188, 189, 190, 192, 267, 327, 328, 330, 338, 339, 345, 346, 391, 392, 395, 396, 404, 405, 406, 407, 411, 412, 415, 420, 421, 433, 434, 473, 483, 486], "allow": [16, 17, 36, 48, 79, 82, 131, 138, 171, 183, 186, 197, 199, 200, 201, 203, 267, 336, 344, 418, 422, 426, 439, 460, 467, 472, 485], "alon": 485, "along": [6, 14, 16, 17, 19, 20, 29, 30, 31, 32, 41, 48, 57, 58, 66, 68, 69, 73, 76, 80, 81, 94, 95, 96, 98, 99, 100, 101, 103, 104, 106, 107, 109, 110, 113, 114, 115, 126, 132, 133, 137, 166, 170, 185, 186, 187, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 263, 264, 271, 288, 294, 295, 296, 313, 316, 321, 324, 336, 340, 342, 344, 393, 397, 398, 400, 409, 410, 414, 416, 418, 419, 422, 423, 424, 428, 429, 431, 432, 435, 436, 438, 440, 441, 485], "alpha": [347, 466, 469], "alreadi": [37, 39, 40, 186, 199, 285, 326, 333, 435, 460], "also": [21, 67, 76, 82, 96, 101, 106, 109, 163, 183, 191, 285, 325, 348, 353, 359, 366, 368, 376, 379, 385, 388, 418, 435, 450, 452, 460, 463, 465, 470, 471, 472, 473, 475, 477, 478, 482, 484, 485], "alter": 285, "altern": [14, 16, 17, 19, 68, 69, 185, 186, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 336, 340, 344, 352, 399, 416, 438], "although": [102, 319, 472], "alwai": [54, 75, 80, 116, 132, 150, 159, 160, 161, 162, 171, 318, 413, 440, 456, 460, 473], "am": [333, 460], "amax": [0, 3, 8, 43, 197, 294], "amd": 485, "american": [201, 203, 336, 344], "amin": [0, 3, 8, 200, 296], "among": [275, 485], "amongst": 6, "amount": [473, 485], "an": [2, 6, 12, 13, 14, 16, 17, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 34, 36, 37, 38, 39, 40, 41, 42, 44, 45, 46, 47, 48, 51, 52, 53, 54, 55, 57, 58, 59, 60, 61, 62, 63, 64, 65, 67, 68, 69, 70, 71, 73, 74, 75, 77, 78, 79, 82, 83, 86, 87, 88, 89, 90, 91, 92, 93, 95, 96, 98, 99, 100, 101, 104, 106, 107, 109, 110, 113, 116, 117, 118, 119, 120, 121, 122, 125, 126, 127, 128, 129, 130, 131, 132, 134, 137, 138, 139, 142, 143, 144, 145, 149, 151, 152, 153, 154, 155, 156, 157, 166, 168, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 184, 185, 186, 187, 188, 189, 190, 191, 192, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 213, 214, 256, 269, 270, 271, 275, 283, 288, 291, 300, 305, 306, 310, 311, 313, 316, 318, 319, 322, 323, 325, 326, 327, 328, 330, 332, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 348, 350, 352, 353, 355, 364, 369, 371, 386, 388, 389, 391, 392, 393, 394, 395, 396, 397, 398, 399, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 430, 431, 433, 434, 435, 437, 438, 440, 442, 444, 452, 456, 460, 461, 463, 464, 465, 467, 469, 470, 471, 472, 473, 475, 476, 478, 479, 481, 485], "analog": [100, 101], "analogu": [352, 385], "analysi": 473, "angl": [0, 3, 8, 70, 71, 345, 346], "ani": [0, 3, 4, 6, 8, 12, 13, 14, 16, 17, 20, 21, 22, 23, 24, 25, 26, 27, 28, 34, 36, 37, 44, 45, 46, 48, 49, 52, 53, 54, 59, 60, 63, 64, 65, 67, 68, 69, 70, 71, 76, 77, 78, 82, 83, 86, 87, 88, 90, 93, 95, 96, 100, 101, 106, 109, 110, 111, 116, 117, 118, 119, 120, 121, 122, 123, 125, 126, 127, 128, 133, 134, 139, 141, 142, 143, 144, 145, 148, 149, 150, 151, 153, 154, 155, 156, 157, 164, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 183, 184, 185, 188, 189, 190, 192, 193, 194, 195, 196, 197, 198, 200, 202, 204, 267, 268, 275, 276, 277, 281, 285, 286, 288, 289, 294, 296, 301, 307, 314, 317, 319, 327, 328, 330, 338, 339, 340, 345, 346, 384, 391, 392, 393, 395, 396, 402, 404, 405, 406, 407, 411, 412, 415, 416, 420, 421, 424, 433, 434, 438, 460, 463, 464, 465, 471, 472, 476, 482, 484], "anoth": [6, 285, 308, 473, 485], "anova": 353, "answer": 485, "anti": 484, "anyth": [293, 463], "ap": 464, "apach": [460, 464, 465, 471], "api": [285, 308, 372, 456, 461, 466, 467, 470, 473, 474, 479, 480, 482, 483, 485], "appear": [42, 47, 89, 114, 115, 129, 130, 152, 267, 435, 460], "append": [0, 3, 8, 75, 76, 83, 183, 472, 484, 485], "appli": [41, 111, 422, 466, 467, 478, 484, 485], "applic": [464, 465, 471, 472, 479, 481, 483, 485, 486], "apply_along_axi": [3, 8], "apply_over_ax": [3, 8], "approach": [386, 460, 472, 484, 485], "appropri": [29, 30, 48, 54, 77, 193, 194, 285, 308, 370, 373, 418, 452, 460, 472, 485], "approx": 485, "approxim": [464, 466], "ar": [13, 14, 15, 16, 17, 19, 20, 21, 27, 29, 30, 33, 35, 38, 39, 40, 41, 42, 44, 45, 46, 48, 49, 54, 55, 56, 57, 58, 61, 63, 67, 68, 69, 72, 75, 76, 77, 78, 79, 82, 83, 86, 92, 95, 96, 98, 99, 100, 101, 104, 106, 109, 112, 113, 114, 115, 116, 118, 119, 120, 121, 125, 127, 128, 131, 134, 138, 140, 153, 154, 155, 156, 157, 158, 164, 166, 169, 170, 176, 177, 178, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 267, 270, 285, 288, 291, 299, 306, 308, 318, 319, 322, 326, 328, 329, 330, 336, 337, 339, 340, 341, 342, 344, 347, 348, 350, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 370, 371, 373, 374, 375, 376, 377, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 392, 395, 397, 399, 401, 402, 414, 415, 416, 418, 422, 424, 426, 429, 432, 433, 435, 436, 437, 438, 456, 460, 461, 463, 464, 466, 467, 469, 470, 472, 475, 476, 478, 479, 481, 484, 485], "arang": [0, 3, 8], "arbitrari": [84, 85, 285, 310], "arbitrarili": 285, "arc": 27, "arcco": [0, 3, 8], "arccosh": [0, 3, 8], "architectur": [472, 485], "archiv": 318, "arcsin": [0, 3, 8], "arcsinh": [0, 3, 8], "arctan": [0, 3, 8], "arctan2": [0, 3, 8, 18], "arctanh": [0, 3, 8], "area": [285, 308, 472], "arg": [12, 13, 22, 23, 24, 25, 26, 27, 28, 44, 45, 46, 49, 50, 52, 53, 59, 60, 63, 64, 65, 70, 71, 78, 86, 87, 88, 90, 93, 111, 116, 117, 118, 119, 120, 121, 122, 125, 127, 128, 134, 139, 143, 144, 145, 151, 153, 154, 155, 156, 157, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 184, 188, 189, 190, 192, 291, 327, 328, 330, 338, 339, 345, 346, 391, 392, 395, 396, 404, 405, 406, 407, 411, 412, 415, 420, 421, 433, 434, 464, 485], "argmax": [0, 3, 8], "argmin": [0, 3, 8, 469], "argpars": 485, "argpartit": [0, 3, 8, 342, 419], "argsort": [0, 3, 8, 31, 306, 342, 401, 419], "argument": [2, 12, 13, 18, 21, 22, 23, 24, 25, 26, 27, 28, 44, 45, 46, 52, 53, 55, 58, 59, 60, 61, 63, 64, 65, 70, 71, 77, 78, 79, 83, 86, 87, 88, 90, 93, 111, 116, 117, 118, 119, 120, 121, 122, 125, 127, 128, 131, 134, 136, 138, 139, 143, 144, 145, 146, 147, 150, 153, 154, 155, 156, 157, 165, 170, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 187, 188, 189, 190, 192, 256, 267, 275, 291, 322, 325, 327, 328, 330, 338, 339, 345, 346, 369, 371, 390, 391, 392, 395, 396, 404, 405, 406, 407, 411, 412, 414, 415, 420, 421, 422, 426, 433, 434, 435, 439, 483, 485], "argumentpars": 485, "argwher": [0, 3, 8], "ari": [38, 39, 40, 410], "aris": [353, 476], "arithmet": [7, 54, 185, 198, 291, 454], "around": [3, 8, 341, 418, 485], "arr": [20, 51, 62, 74, 91, 186, 199, 285, 337, 342, 418, 419, 429, 432, 478], "arr_t": 267, "arrai": [0, 2, 6, 7, 12, 13, 14, 15, 16, 17, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 151, 152, 153, 154, 155, 156, 157, 159, 160, 161, 162, 163, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 209, 213, 214, 256, 265, 266, 267, 269, 270, 271, 274, 275, 278, 280, 281, 282, 283, 284, 285, 286, 287, 288, 290, 291, 295, 297, 298, 300, 301, 302, 303, 304, 305, 306, 308, 309, 310, 311, 313, 314, 315, 316, 317, 318, 319, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 360, 369, 370, 371, 373, 374, 375, 377, 384, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 454, 456, 465, 466, 467, 469, 470, 471, 472, 473, 478, 479, 481, 486], "array2str": [3, 8], "array_equ": [0, 3, 8], "array_equiv": [3, 8], "array_lik": [6, 12, 13, 14, 15, 16, 17, 18, 19, 20, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 37, 38, 39, 40, 41, 43, 44, 45, 46, 48, 49, 51, 52, 53, 55, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 74, 75, 76, 77, 78, 79, 82, 83, 85, 86, 87, 88, 89, 90, 91, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 109, 110, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 124, 125, 126, 127, 128, 131, 134, 136, 138, 139, 140, 141, 143, 144, 145, 146, 147, 148, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 183, 184, 185, 186, 187, 188, 189, 190, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 288, 306, 326, 327, 328, 329, 330, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 401, 403, 404, 405, 406, 407, 408, 409, 411, 412, 413, 414, 415, 416, 417, 418, 420, 421, 422, 423, 424, 425, 426, 427, 429, 433, 434, 435, 437, 438, 439, 442, 444], "array_of_diagon": 75, "array_repr": [3, 8], "array_split": [0, 3, 8], "array_str": [3, 8], "array_typ": 41, "arraylik": [55, 131, 402, 442], "articl": 460, "asanyarrai": 3, "asarrai": [0, 3, 8], "asarray_chkfinit": [3, 8], "ascend": [160, 162, 306, 401], "ascontiguousarrai": 3, "asfortranarrai": 3, "asin": [3, 8], "asinh": [3, 8], "ask": [460, 474], "asmatrix": [3, 8], "aspect": 485, "aspir": 473, "assembl": 48, "assert": [466, 469, 484], "assign": [67, 284, 285, 472, 478], "assoc": 469, "associ": [41, 131, 469, 476, 479, 484], "assum": [41, 83, 163, 182, 461], "ast": 171, "astyp": [0, 3, 8, 76, 281, 467, 473, 485], "asynchron": [342, 478, 479], "atan": [3, 8], "atan2": [3, 8], "atanh": [3, 8], "atleast2d": 322, "atleast_1d": [0, 3, 8, 89], "atleast_2d": [0, 3, 8, 89], "atleast_3d": [0, 3, 8, 89], "atol": [15, 140], "attempt": [41, 77, 185, 197, 198, 200, 204, 285, 326, 438, 456, 484, 485], "attribut": [4, 7, 85, 124, 275, 285, 297, 332, 444], "author": 476, "auto": 61, "autom": 460, "automat": [61, 165, 460, 461, 472, 475, 485], "avail": [1, 2, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 206, 207, 208, 212, 213, 214, 215, 216, 218, 219, 221, 222, 223, 224, 225, 226, 227, 228, 231, 232, 233, 234, 235, 236, 237, 238, 240, 241, 242, 243, 244, 245, 246, 248, 249, 250, 252, 253, 254, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 269, 270, 271, 272, 273, 274, 279, 280, 282, 283, 284, 286, 287, 288, 291, 294, 295, 296, 299, 300, 301, 302, 303, 305, 306, 308, 311, 312, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 460, 461, 475, 484, 485, 486], "averag": [0, 3, 8, 67, 185, 198, 295, 454, 471, 472, 485], "averaged_inverted_cdf": [201, 203, 336, 344], "avg": 41, "avoid": [39, 40, 267, 469, 473, 478], "aweight": 67, "ax": [14, 16, 17, 19, 29, 30, 41, 48, 66, 75, 76, 89, 95, 96, 97, 100, 101, 102, 105, 106, 108, 109, 113, 126, 138, 166, 168, 185, 186, 191, 193, 194, 197, 198, 199, 200, 201, 202, 203, 204, 288, 312, 322, 336, 340, 344, 397, 398, 416, 417, 422, 423, 424, 425, 438, 467, 485], "axi": [14, 16, 17, 18, 19, 20, 29, 30, 31, 32, 36, 41, 57, 58, 66, 68, 69, 75, 76, 79, 80, 81, 89, 94, 95, 96, 98, 99, 100, 101, 103, 104, 105, 106, 107, 108, 109, 113, 114, 115, 126, 132, 133, 137, 166, 170, 185, 186, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 261, 262, 263, 264, 265, 266, 271, 276, 277, 288, 294, 295, 296, 300, 301, 311, 312, 313, 314, 316, 322, 324, 334, 335, 336, 340, 342, 344, 389, 393, 394, 397, 398, 400, 408, 409, 410, 413, 414, 416, 417, 418, 419, 423, 424, 435, 436, 438, 440, 441, 469], "axis1": [75, 279, 315, 321, 417, 424], "axis2": [75, 279, 315, 321, 417, 424], "b": [6, 15, 35, 48, 79, 81, 118, 133, 138, 140, 168, 183, 285, 333, 347, 374, 375, 377, 400, 422, 439, 441, 460, 461, 466, 485], "b0": 333, "b1": 333, "b_ax": 422, "ba": 54, "back": [31, 54, 150, 282, 283, 335, 389, 394, 456, 464, 470, 473, 481, 485], "backward": [75, 94, 95, 96, 98, 99, 100, 101, 103, 104, 105, 106, 107, 108, 109, 126, 267, 389], "bad": 357, "balanc": 485, "baltimor": 166, "bar": 484, "barba": 472, "bartlett": [0, 3, 8], "base": [1, 34, 37, 61, 82, 173, 175, 177, 267, 285, 308, 337, 343, 456, 460, 461, 469, 472, 473, 478], "base_repr": [3, 8], "bash": 485, "bashrc": 485, "basi": [456, 464, 465, 471], "basic": [32, 408, 452, 454, 462, 472, 483, 484], "batch": [94, 95, 96, 98, 99, 100, 101, 103, 104, 105, 106, 107, 108, 109, 159, 160, 161, 162, 456], "bayesian": 347, "bbox_to_anchor": 466, "bchoic": 54, "becaus": [21, 291, 365, 386, 464, 465, 471, 473, 478, 484], "becom": [13, 27, 40, 44, 45, 46, 54, 55, 63, 78, 86, 116, 118, 119, 120, 121, 125, 127, 128, 134, 153, 154, 155, 156, 157, 176, 177, 178, 180, 181, 184, 188, 189, 192, 322, 328, 330, 339, 386, 392, 395, 415, 433, 485, 486], "been": [81, 342, 373, 400, 419, 441, 473], "befor": [14, 16, 17, 19, 20, 41, 58, 61, 114, 115, 185, 197, 198, 204, 285, 306, 340, 362, 397, 401, 416, 423, 438, 439, 470, 473, 475, 484, 485], "begin": [170, 462, 470, 485], "behav": [285, 341, 418], "behavior": [61, 77, 183, 317, 320, 342, 343, 370, 373, 423, 456, 472, 475, 483, 485], "being": [21, 413, 460, 473, 485], "bell": 365, "belong": [77, 469], "below": [67, 72, 104, 166, 308, 426, 427, 430, 461, 464, 466, 470, 472, 481, 482, 484, 485, 486], "benchmark": [463, 473, 480, 483, 485], "bernoulli": 355, "bessel": 152, "best": [83, 460, 473, 483], "beta": [0, 3, 8, 152, 352, 469], "better": [21, 54, 479, 485], "between": [15, 21, 36, 76, 126, 170, 201, 203, 318, 336, 344, 352, 358, 373, 386, 466, 467, 469, 470, 472, 484, 485], "beyond": [77, 397], "bham": 464, "bia": 67, "big": [163, 334, 436, 464], "bigger": 485, "billion": 472, "bin": [43, 77, 131, 334, 436, 469, 475, 485], "bin_edg": 131, "binari": [171, 256, 318, 334, 436, 445, 454, 476], "binary_repr": [3, 8], "binaryio": 171, "binaryoptask": 473, "bincount": [0, 3, 8, 469], "binomi": [0, 3, 8, 362, 367], "bit": [1, 44, 45, 46, 139, 155, 179, 202, 313, 334, 395, 436, 454], "bit_gener": 2, "bitgener": [2, 3, 8, 351], "bitord": [334, 436], "bitwise_and": [0, 3, 8], "bitwise_count": [3, 8], "bitwise_invert": [3, 8], "bitwise_left_shift": [3, 8], "bitwise_or": [0, 3, 8], "bitwise_right_shift": [3, 8], "bitwise_xor": [0, 3, 8], "bla": 461, "black": [468, 469, 475], "black_schol": [463, 464, 475, 485], "blackman": [0, 3, 8], "block": [0, 3, 8, 81, 133, 313, 400, 441, 472], "block_arrai": 48, "blog": 473, "blue": [466, 469], "bmat": [3, 8], "bmatrix": 470, "bn": 333, "boilerpl": 485, "boldsymbol": 485, "bond": 485, "bool": [1, 3, 4, 8, 12, 13, 14, 15, 16, 17, 18, 19, 22, 23, 24, 25, 26, 27, 28, 29, 30, 34, 35, 36, 41, 44, 45, 46, 49, 51, 52, 53, 57, 59, 60, 63, 64, 65, 67, 70, 71, 77, 78, 82, 83, 86, 87, 88, 90, 93, 110, 116, 117, 118, 119, 120, 121, 122, 125, 127, 128, 131, 134, 137, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 153, 154, 155, 156, 157, 166, 169, 170, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 184, 185, 186, 187, 188, 189, 190, 192, 193, 194, 197, 198, 199, 200, 201, 202, 203, 204, 256, 267, 294, 296, 301, 308, 314, 327, 328, 330, 336, 338, 339, 340, 344, 345, 346, 391, 392, 395, 396, 402, 404, 405, 406, 407, 411, 412, 415, 416, 420, 421, 433, 434, 435, 438, 442, 452, 456, 484], "bool_": [3, 8], "boolean": [14, 19, 76, 140, 145, 146, 147, 148, 151, 182, 308, 334, 343, 438, 469], "boolean_sequ": 151, "borrow": 285, "both": [13, 15, 20, 27, 41, 44, 45, 46, 61, 63, 67, 78, 79, 86, 100, 116, 118, 119, 120, 121, 125, 127, 128, 134, 138, 140, 153, 154, 155, 156, 157, 166, 176, 177, 178, 180, 181, 183, 184, 187, 188, 189, 192, 285, 328, 330, 339, 353, 354, 364, 365, 392, 395, 415, 422, 424, 433, 461, 470, 473, 484], "bottleneck": 485, "bound": [57, 77, 341, 418], "boundari": [68, 69, 126, 195, 196, 384, 466, 471, 472, 479], "boundsmod": [54, 418], "break": [469, 470, 484], "bright": 485, "broadcast": [3, 7, 8, 12, 13, 14, 16, 17, 19, 22, 23, 24, 25, 26, 27, 28, 29, 30, 41, 44, 45, 46, 48, 49, 50, 51, 52, 53, 54, 55, 59, 60, 63, 64, 65, 70, 71, 78, 79, 86, 87, 88, 90, 93, 116, 117, 118, 119, 120, 121, 122, 125, 127, 128, 134, 138, 139, 143, 144, 145, 146, 147, 153, 154, 155, 156, 157, 166, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 183, 184, 185, 186, 187, 188, 189, 190, 192, 193, 194, 197, 198, 199, 200, 201, 202, 203, 204, 327, 328, 330, 336, 338, 339, 340, 342, 344, 345, 346, 367, 391, 392, 393, 395, 396, 404, 405, 406, 407, 411, 412, 415, 416, 419, 420, 421, 422, 433, 434, 438, 439, 442, 445, 478, 485], "broadcast_arrai": [0, 3, 8], "broadcast_shap": [0, 3, 8], "broadcast_to": [0, 3, 8], "brownian": 386, "bryan": 464, "bsd": 476, "buffer": [4, 16, 17, 54, 68, 69, 186, 195, 196, 197, 199, 200, 278, 285, 291, 308], "build": [378, 454, 462, 469, 478, 485], "built": [21, 461, 465, 473, 474, 485], "builtin": 319, "bundl": 475, "busday_count": [3, 8], "busday_offset": [3, 8], "busdaycalendar": [3, 8], "busi": 476, "bypass": [318, 485], "byte": [0, 3, 8, 82, 171, 183, 267, 297, 313, 317, 320, 334, 473], "bytes_": [3, 8], "bytesio": 318, "byteswap": 8, "c": [34, 48, 57, 166, 183, 267, 275, 285, 287, 303, 305, 308, 317, 318, 320, 373, 386, 389, 394, 423, 437, 460, 461, 464, 469, 475, 476, 485], "c_": 67, "c_contigu": 285, "ca": 285, "calcul": [7, 12, 41, 61, 76, 82, 87, 88, 90, 102, 126, 160, 162, 166, 170, 183, 186, 199, 201, 203, 310, 336, 340, 344, 438, 439, 461, 464, 469, 485], "calculate_dist": 469, "call": [54, 77, 107, 165, 182, 186, 199, 213, 214, 275, 285, 308, 365, 418, 423, 456, 464, 465, 470, 473, 485], "call_result": 464, "callabl": 182, "can": [14, 19, 20, 37, 41, 48, 67, 73, 75, 82, 83, 94, 95, 96, 99, 100, 101, 126, 133, 142, 149, 150, 151, 163, 164, 166, 170, 183, 186, 199, 201, 202, 203, 267, 275, 282, 285, 291, 293, 308, 313, 318, 325, 336, 342, 344, 366, 394, 418, 419, 422, 424, 435, 452, 456, 460, 461, 463, 464, 465, 466, 467, 470, 471, 472, 474, 475, 477, 478, 482, 484, 485], "can_cast": [3, 8], "cannot": [58, 171, 193, 194, 285, 318, 473], "canon": [464, 470, 473], "capabl": [41, 475, 485], "care": 485, "carrai": 285, "cartesian": 187, "case": [14, 19, 21, 31, 32, 34, 41, 54, 61, 68, 69, 75, 76, 77, 79, 98, 126, 137, 170, 182, 187, 195, 196, 201, 202, 203, 204, 291, 308, 310, 334, 335, 336, 340, 341, 342, 344, 347, 370, 373, 374, 375, 376, 377, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 394, 408, 416, 419, 422, 426, 460, 468, 478, 481, 484], "cast": [12, 13, 22, 23, 24, 25, 26, 27, 28, 44, 45, 46, 52, 53, 58, 59, 60, 63, 64, 65, 68, 69, 70, 71, 76, 78, 82, 86, 87, 88, 90, 93, 116, 117, 118, 119, 120, 121, 122, 125, 127, 128, 134, 138, 139, 143, 144, 145, 153, 154, 155, 156, 157, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 183, 184, 185, 186, 188, 189, 190, 192, 195, 196, 198, 199, 202, 204, 267, 281, 327, 328, 330, 333, 338, 339, 340, 345, 346, 391, 392, 395, 396, 399, 404, 405, 406, 407, 411, 412, 415, 416, 420, 421, 422, 433, 434, 438, 439, 470], "castingkind": [12, 13, 22, 23, 24, 25, 26, 27, 28, 44, 45, 46, 52, 53, 58, 59, 60, 63, 64, 65, 70, 71, 78, 82, 86, 87, 88, 90, 93, 116, 117, 118, 119, 120, 121, 122, 125, 127, 128, 134, 139, 143, 144, 145, 153, 154, 155, 156, 157, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 183, 184, 188, 189, 190, 192, 327, 328, 330, 338, 339, 345, 346, 391, 392, 395, 396, 404, 405, 406, 407, 411, 412, 415, 420, 421, 433, 434], "cat": 473, "cauchi": 379, "caus": [278, 472, 476, 484], "cbrt": [0, 3, 8], "cdot": [470, 485], "cdoubl": [3, 8], "ceil": [0, 3, 8, 21], "cell": 472, "center": [61, 97, 385, 466, 469, 471, 485], "centr": 365, "central": [126, 363, 364, 365], "centroid": 469, "centroid_dot": 469, "centroid_mask": 469, "certain": [182, 313, 456], "certif": 462, "certifi": 460, "cfd": 474, "cg": [463, 485], "chain": 165, "challeng": [472, 485], "chanc": 460, "chang": [63, 82, 170, 183, 195, 196, 267, 285, 308, 322, 337, 342, 343, 389, 394, 454, 460, 467, 470, 474, 480, 483, 484, 485, 486], "channel": [81, 133, 400, 441, 472, 475], "charact": [3, 8, 481], "characterist": 365, "charg": 476, "check": [69, 77, 142, 149, 158, 195, 196, 460, 467, 469, 470, 473, 475, 484, 485], "chi": [350, 353, 363, 376], "chisquar": [0, 3, 8], "choic": [3, 8, 54, 269, 318], "choicelist": 402, "choleski": [0, 3, 8, 463, 468, 482], "cholesky_tim": 465, "choos": [0, 3, 8, 27, 61, 83, 442, 473, 485], "chosen": [131, 442], "chuang": 472, "circl": 385, "circular": 385, "circumst": 285, "claim": [386, 476], "class": [1, 2, 4, 6, 14, 16, 17, 19, 34, 37, 92, 135, 137, 185, 197, 200, 202, 267, 325, 331, 340, 375, 377, 416, 426, 445], "classic": [82, 366], "claus": [476, 484], "clean": 472, "clear": 285, "clearli": 485, "clip": [0, 3, 8, 54, 341, 418], "clipped_arrai": 55, "clongdoubl": [3, 8, 291], "close": [47, 170, 267, 373, 460, 473], "closest": 318, "closest_observ": [201, 203, 336, 344], "cluster": [468, 473, 474, 483], "cmap": [467, 485], "cnd": 464, "cnd_d1": 464, "cnd_d2": 464, "co": [0, 3, 8, 65, 466], "coastal": 472, "code": [32, 48, 187, 408, 456, 462, 463, 472, 474, 476, 480, 483, 484], "codebas": 482, "coeffici": [168, 464], "coercion": 111, "coin": 355, "collaps": [286, 287], "collect": [75, 278, 485], "color": [463, 466, 469], "colorama": 463, "column": [8, 34, 56, 67, 92, 110, 114, 115, 132, 133, 135, 159, 160, 165, 167, 287, 313, 322, 389, 426, 428, 431, 437, 481, 485], "column_stack": [0, 3, 8], "com": [460, 467, 473, 476, 478, 485, 486], "combin": [89, 96, 101, 106, 109, 126, 463, 479, 485], "combinatori": 83, "come": [435, 485], "comm": 472, "comm_world": 472, "comma": [82, 463], "comman": 473, "command": [463, 473, 475, 477, 481, 485], "comment": 460, "commit": [460, 472], "common": [13, 27, 44, 45, 46, 54, 63, 78, 82, 86, 111, 116, 118, 119, 120, 121, 125, 127, 128, 134, 153, 154, 155, 156, 157, 176, 177, 178, 180, 181, 184, 188, 189, 192, 328, 330, 339, 352, 387, 392, 395, 415, 433, 484, 485], "common_typ": [3, 8], "commonli": [365, 473, 484], "commun": [460, 472, 473, 484, 485], "compact": 468, "compactli": 466, "compar": [15, 16, 17, 35, 140, 197, 200, 466, 485], "comparison": [7, 445, 454], "compat": [75, 267, 319, 320, 389, 394, 426, 485], "compil": [168, 308, 461], "complet": [83, 201, 203, 336, 344, 461, 472, 474, 481, 485], "complex": [18, 35, 43, 59, 60, 68, 69, 77, 79, 94, 95, 96, 99, 100, 101, 103, 104, 107, 109, 136, 138, 141, 142, 148, 149, 159, 161, 195, 196, 201, 203, 272, 273, 336, 344, 390, 399, 409, 439, 452, 454, 472, 485], "complex128": [3, 8], "complex256": [3, 8], "complex64": [3, 8], "complexflo": [3, 8], "compli": 460, "complianc": [464, 465, 471], "complic": 472, "compon": [6, 35, 48, 97, 136, 390, 422, 484, 485], "compos": 473, "compound": 464, "compress": [0, 3, 8, 318], "compressed_arrai": 57, "compuat": 481, "comput": [16, 17, 18, 41, 44, 45, 46, 61, 68, 69, 82, 93, 94, 95, 96, 98, 99, 100, 101, 103, 104, 105, 106, 107, 108, 109, 126, 131, 137, 139, 159, 160, 161, 162, 164, 165, 166, 167, 168, 169, 178, 179, 180, 181, 185, 186, 195, 196, 197, 198, 199, 200, 201, 202, 203, 333, 336, 344, 420, 421, 422, 438, 456, 464, 465, 466, 467, 469, 470, 472, 473, 474, 478, 479, 484], "computat": 485, "computation": 163, "compute_uv": 169, "concat": [3, 8], "concaten": [0, 3, 8, 48, 81, 133, 400, 441], "concern": 485, "conclud": [460, 472], "conclus": 472, "cond": [8, 484, 485], "conda": 461, "conda_override_cuda": 475, "condit": [12, 13, 22, 23, 24, 25, 26, 27, 28, 44, 45, 46, 52, 53, 57, 59, 60, 63, 64, 65, 70, 71, 78, 86, 87, 88, 90, 91, 93, 116, 117, 118, 119, 120, 121, 122, 125, 127, 128, 134, 139, 143, 144, 145, 153, 154, 155, 156, 157, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 184, 188, 189, 190, 192, 267, 271, 327, 328, 330, 337, 338, 339, 343, 345, 346, 383, 391, 392, 395, 396, 402, 404, 405, 406, 407, 411, 412, 415, 420, 421, 433, 434, 442, 464, 465, 466, 471, 472, 476, 479, 484, 485], "condition": 484, "condlist": 402, "conduct": 485, "configur": [456, 461, 462, 473, 484], "configurt": 473, "conj": [0, 3, 8], "conjug": [0, 3, 8, 59, 79, 104, 138, 158, 272, 439, 465], "connect": [476, 485], "consecut": 76, "consequ": [18, 439, 473], "consequenti": 476, "conserv": 187, "consid": [15, 35, 67, 68, 82, 83, 140, 160, 162, 366, 466, 470, 485], "consider": 485, "consist": [14, 21, 61, 76, 170, 419, 460, 472], "const": [484, 485], "constant": [126, 288], "constraint": [41, 485], "construct": [7, 48, 54, 72, 113, 114, 115, 151, 269, 317, 351, 423], "constructor": [2, 452], "consum": [163, 297], "contact": 473, "contain": [2, 29, 30, 41, 43, 54, 55, 57, 67, 75, 76, 99, 112, 126, 131, 137, 185, 186, 193, 194, 197, 198, 199, 200, 201, 203, 204, 256, 281, 305, 317, 318, 329, 336, 344, 389, 399, 422, 428, 429, 431, 432, 435, 438, 452, 485], "content": [43, 186, 199, 201, 203, 285, 308, 317, 318, 336, 344, 454], "context": [464, 472], "contigu": [49, 51, 187, 267, 285, 287, 313, 317, 389, 394], "continu": [352, 353, 374, 375, 377, 383, 385, 464], "contour": 485, "contract": [82, 83, 461, 476], "contribut": [8, 41, 131, 462, 485], "contributor": [460, 476], "control": [58, 82, 183, 267, 317, 463, 486], "conveni": 318, "convent": [18, 82, 101, 183, 187], "converg": [159, 160, 161, 162, 169, 469, 470, 484, 485], "convers": [41, 82, 183, 185, 197, 198, 200, 204, 267, 325, 326, 438], "convert": [14, 19, 37, 38, 39, 40, 70, 71, 186, 199, 201, 203, 283, 318, 319, 322, 325, 336, 344, 345, 346, 437, 466, 478, 485], "convolut": [61, 467, 485], "convolv": [0, 8, 467, 485], "convolve_nd": [467, 485], "convolvemethodtyp": 61, "convolvemod": 61, "coordin": [126, 187, 437, 469], "copi": [0, 3, 8, 20, 34, 37, 38, 39, 40, 48, 49, 57, 72, 75, 187, 213, 214, 267, 285, 286, 287, 291, 308, 317, 319, 335, 389, 394, 398, 408, 409, 427, 430, 460, 464, 465, 471, 473, 476, 483, 485], "copyright": [460, 464, 465, 471, 476], "copysign": [0, 3, 8], "copyto": [3, 8, 337], "core": [2, 456, 463, 464, 473, 485, 486], "corner": [100, 101, 485], "corpor": [464, 465, 471], "corrcoef": [3, 8], "correct": [20, 58, 414, 472], "correctli": [14, 16, 17, 19, 27, 29, 30, 41, 166, 185, 186, 193, 194, 197, 198, 199, 200, 201, 202, 203, 204, 336, 340, 344, 416, 438, 485], "correl": [8, 454], "correspond": [8, 54, 58, 75, 95, 96, 100, 101, 104, 106, 109, 126, 137, 146, 147, 151, 159, 160, 182, 193, 194, 201, 203, 306, 334, 336, 344, 397, 401, 402, 403, 466, 467, 475, 478, 484, 485], "correspondingli": [410, 473], "cosh": [3, 8], "cosin": [22, 23, 47, 64, 65, 129, 130], "cost": [83, 472], "costli": 83, "could": 484, "count": [14, 19, 41, 43, 66, 113, 126, 131, 204, 288, 340, 416, 436, 445, 454, 469], "count_nonzero": [0, 3, 8], "counterclockwis": [18, 398], "cours": 474, "cov": [0, 3, 8], "covari": 67, "cover": [3, 8, 386, 460], "coverag": [456, 480, 482, 483], "cp": 472, "cpu": [1, 2, 3, 8, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 97, 102, 110, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 206, 207, 208, 212, 213, 214, 215, 216, 218, 219, 221, 222, 223, 224, 225, 226, 227, 228, 231, 232, 233, 234, 235, 236, 237, 238, 240, 241, 242, 243, 244, 245, 246, 248, 249, 250, 252, 253, 254, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 269, 270, 271, 272, 273, 274, 279, 280, 282, 283, 284, 286, 287, 288, 291, 294, 295, 296, 299, 300, 301, 302, 303, 305, 306, 308, 311, 312, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 456, 461, 463, 470, 473, 474, 482, 484, 486], "cputsc": 477, "creat": [12, 13, 22, 23, 24, 25, 26, 27, 28, 34, 44, 45, 46, 52, 53, 54, 59, 60, 63, 64, 65, 70, 71, 78, 83, 86, 87, 88, 90, 93, 116, 117, 118, 119, 120, 121, 122, 125, 127, 128, 134, 139, 143, 144, 145, 153, 154, 155, 156, 157, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 184, 188, 189, 190, 192, 275, 281, 285, 327, 328, 330, 338, 339, 342, 345, 346, 369, 391, 392, 395, 396, 399, 404, 405, 406, 407, 411, 412, 415, 417, 420, 421, 433, 434, 460, 466, 471, 472, 475, 484, 485], "create_subarrai": 472, "creation": [83, 285, 426, 445, 452, 454], "critic": [472, 485], "crop": [94, 95, 96, 98, 99, 100, 101, 103, 104, 106, 107, 109], "cross": [3, 8, 151], "crucial": 485, "csingl": [3, 8], "csv": [456, 473, 481], "ct": 94, "cube": 52, "cubic": 83, "cubla": 456, "cuda": [456, 461, 463, 472, 475, 485], "cumbersom": 485, "cumprod": [0, 3, 8, 69, 195, 196, 478], "cumsum": [0, 3, 8], "cumul": [68, 69, 195, 196, 464, 485], "cumulative_prod": [3, 8], "cumulative_sum": [3, 8], "cunumer": 473, "cupi": 472, "cupynumer": [0, 3, 7, 445, 450, 454, 456, 461, 463, 464, 465, 467, 469, 470, 471, 472, 475, 477, 478, 479, 481, 482, 483, 486], "cupynumeric_doctor": [456, 484], "cupynumeric_doctor_filenam": 456, "cupynumeric_doctor_format": 456, "cupynumeric_doctor_traceback": 456, "cupynumeric_fast_math": 456, "cupynumeric_force_thunk": 456, "cupynumeric_matmul_cache_s": 456, "cupynumeric_min_cpu_chunk": 456, "cupynumeric_min_gpu_chunk": 456, "cupynumeric_min_omp_chunk": 456, "cupynumeric_numpy_compat": [193, 194, 197, 200, 456], "cupynumeric_preload_cudalib": 456, "cupynumeric_report_coverag": [456, 481, 482], "cupynumeric_report_dump_callstack": [456, 481], "cupynumeric_report_dump_csv": [456, 481], "cupynumeric_root": 461, "cupynumeric_warn": 456, "curand": 378, "curiou": 466, "current": [6, 31, 32, 61, 158, 167, 169, 171, 209, 285, 325, 335, 342, 393, 408, 426, 435, 456, 464, 473, 477, 478, 481, 484, 485, 486], "curv": [365, 466], "cusolv": 456, "cusolvermp": 168, "custom": [452, 461, 472], "cycl": 151, "d": [2, 40, 41, 43, 56, 57, 61, 67, 68, 69, 72, 74, 75, 79, 81, 92, 105, 108, 110, 114, 115, 133, 137, 138, 151, 165, 166, 183, 187, 195, 196, 197, 204, 274, 286, 287, 306, 322, 334, 337, 389, 394, 400, 401, 410, 416, 423, 424, 435, 436, 439, 441, 460, 461, 464, 465, 485], "d0": [369, 371], "d1": [369, 371, 464], "d2": 464, "d_1": 485, "d_2": 485, "damag": 476, "data": [16, 17, 21, 33, 34, 37, 41, 58, 62, 67, 81, 82, 84, 85, 92, 94, 95, 96, 98, 99, 100, 101, 103, 104, 105, 106, 107, 108, 109, 111, 123, 124, 131, 133, 135, 137, 149, 159, 160, 161, 162, 170, 171, 182, 183, 185, 186, 198, 199, 201, 202, 203, 204, 209, 256, 267, 275, 281, 285, 291, 293, 305, 308, 317, 318, 319, 322, 325, 331, 332, 336, 337, 340, 341, 342, 344, 389, 394, 399, 400, 413, 416, 419, 424, 426, 427, 438, 441, 443, 444, 445, 454, 469, 470, 472, 476, 479, 484, 485], "data_magnitude_squar": 469, "dataset": [131, 485], "datatyp": [111, 472, 483], "date": 485, "datetim": [464, 465, 471], "datetime64": [3, 8], "datetime_as_str": [3, 8], "ddof": [67, 324, 438], "de": 365, "deadlock": 472, "deal": [476, 485], "dealloc": 285, "deb": 485, "debian": 476, "debug": [463, 472], "decai": 358, "decid": 456, "decim": 399, "decompos": [122, 465, 472], "decomposit": [158, 169, 454, 468, 472], "decreas": [77, 464, 470, 473], "decreasingli": [100, 101], "dedic": 473, "deep": [48, 214, 319, 472], "deepcopi": 214, "def": [464, 465, 467, 469, 470, 471, 472, 484, 485], "default": [2, 12, 13, 14, 16, 17, 18, 19, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 34, 37, 41, 44, 45, 46, 52, 53, 54, 57, 58, 59, 60, 61, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 75, 76, 77, 78, 82, 83, 84, 86, 87, 88, 90, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 113, 116, 117, 118, 119, 120, 121, 122, 123, 125, 126, 127, 128, 131, 134, 135, 137, 139, 143, 144, 145, 153, 154, 155, 156, 157, 160, 162, 163, 166, 169, 170, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 183, 184, 185, 186, 187, 188, 189, 190, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 256, 267, 287, 288, 317, 318, 327, 328, 330, 331, 334, 335, 336, 338, 339, 340, 344, 345, 346, 347, 348, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 370, 373, 374, 375, 376, 377, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 391, 392, 393, 395, 396, 397, 398, 399, 402, 404, 405, 406, 407, 408, 410, 411, 412, 415, 416, 418, 420, 421, 424, 425, 426, 427, 428, 431, 433, 434, 435, 436, 438, 440, 443, 456, 463, 467, 469, 478, 485, 486], "default_rng": [0, 2, 3, 8, 469], "defer": [4, 456, 464, 465, 471, 473, 478], "defin": [54, 85, 124, 131, 166, 201, 203, 291, 332, 336, 344, 383, 398, 426, 444, 460, 461, 464, 465, 467, 469, 470, 471, 484, 485], "definit": [61, 99, 101, 158, 465, 485], "deg": [18, 163], "deg2rad": [0, 3, 8, 346], "degre": [3, 8, 18, 70, 345, 346, 350, 353, 363, 364, 382, 398, 438, 485], "delai": [484, 485], "delet": [3, 8], "delta": [438, 469], "demand": 472, "democrat": 485, "demonstr": [482, 485], "denomin": [353, 364], "denot": 8, "dens": [137, 466], "densiti": [131, 352, 365], "dep": 461, "depend": [43, 72, 166, 168, 170, 183, 202, 373, 402, 442, 462, 473, 484, 485], "depict": 485, "deprec": 373, "depth": [48, 80, 81, 319], "deriv": [126, 360, 365, 464, 466, 467, 476, 484, 485], "derivative_exact": 466, "descend": 169, "describ": [166, 308, 352, 365, 466, 473, 484], "descript": [99, 101, 131, 267, 463], "descriptor": 325, "design": [47, 354, 381, 483, 485], "desir": [34, 51, 76, 84, 123, 185, 197, 198, 200, 204, 331, 370, 423, 438, 443, 475], "despit": 320, "dest": 472, "destin": [58, 191, 342, 414], "det": [3, 8], "detail": [16, 17, 68, 69, 72, 74, 94, 99, 104, 105, 107, 108, 171, 187, 195, 196, 197, 200, 202, 204, 264, 275, 313, 340, 416, 428, 429, 430, 431, 432, 435, 452, 460, 463, 472, 473, 475, 484, 485], "detect": [468, 475], "detector": 467, "determin": [34, 61, 68, 69, 75, 111, 168, 195, 196, 202, 308, 402, 424, 437, 467, 469, 470, 472, 485], "determinist": [469, 478], "develop": [461, 472, 473, 474, 476, 485], "developercertif": 460, "deviat": [360, 365, 484], "devic": [472, 485], "devin": 476, "df": [350, 363, 382], "dfden": [353, 364], "dfnum": [353, 364], "dft": [94, 99, 107], "dgx": 474, "diag": [0, 3, 8, 466, 478], "diag_indic": [0, 3, 8, 74], "diag_indices_from": [0, 3, 8], "diagflat": [3, 8], "diagnos": 484, "diagon": [0, 3, 8, 72, 73, 74, 92, 110, 135, 158, 160, 162, 321, 424, 426, 427, 428, 429, 430, 431, 432, 466], "diagram": [461, 485], "dictionari": 285, "did": 470, "diff": [0, 3, 8], "differ": [1, 15, 29, 30, 36, 68, 69, 76, 94, 99, 102, 104, 105, 107, 108, 114, 115, 116, 126, 166, 183, 187, 195, 196, 209, 281, 318, 342, 343, 358, 398, 419, 439, 454, 460, 461, 463, 468, 470, 471, 472, 479, 483, 484, 485], "differenc": 76, "differenti": [469, 485], "difficult": [472, 485], "diffus": 485, "digit": [0, 3, 8], "dim": 285, "dimens": [6, 14, 16, 17, 19, 29, 30, 34, 38, 39, 40, 41, 48, 54, 56, 57, 58, 61, 73, 75, 76, 80, 81, 89, 110, 126, 132, 133, 137, 138, 146, 147, 151, 159, 160, 161, 162, 166, 167, 169, 183, 185, 186, 187, 193, 194, 197, 198, 199, 200, 201, 202, 203, 204, 285, 286, 287, 298, 309, 310, 313, 322, 326, 329, 334, 336, 340, 342, 344, 369, 371, 394, 397, 398, 400, 403, 410, 413, 414, 416, 419, 422, 423, 424, 425, 428, 429, 431, 432, 435, 436, 437, 438, 440, 441, 454, 468, 469, 472, 478], "dimension": [7, 38, 43, 48, 61, 67, 74, 77, 82, 94, 95, 96, 99, 100, 101, 104, 106, 107, 108, 109, 110, 126, 163, 187, 285, 326, 333, 413, 423, 445, 467, 469, 471, 478, 484, 485], "dimenson": 187, "direct": [61, 76, 94, 95, 96, 98, 99, 100, 101, 103, 104, 105, 106, 107, 108, 109, 114, 115, 285, 398, 467, 476, 485], "directli": [61, 76, 318, 383, 460, 475, 477, 481], "directori": [461, 485], "dirichlet": [3, 8, 347], "disabl": [82, 418, 485], "disclaim": 476, "discontinu": [201, 203, 336, 344], "discourag": 479, "discret": [61, 76, 94, 95, 96, 99, 100, 101, 104, 106, 107, 109, 370, 373, 388, 445, 454, 466], "discuss": [460, 473], "dispers": 385, "displai": [463, 473, 485], "distanc": [21, 126, 386, 469], "distance_sum": 469, "distribu": 485, "distribut": [2, 278, 347, 348, 350, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 373, 374, 375, 376, 377, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 438, 454, 456, 460, 464, 465, 471, 472, 473, 474, 476, 478, 485], "disturb": 365, "dive": 472, "divid": [3, 8, 36, 81, 133, 400, 410, 441, 469, 472], "divis": [78, 118, 121, 189, 392, 410, 433], "divisor": [125, 438], "divmod": [3, 8, 215], "dn": [369, 371], "do": [61, 77, 182, 186, 199, 291, 318, 461, 469, 476, 478, 479, 484, 485, 486], "doc": [12, 13, 22, 23, 24, 25, 26, 27, 28, 44, 45, 46, 52, 53, 55, 59, 60, 63, 64, 65, 70, 71, 78, 86, 87, 88, 90, 93, 116, 117, 118, 119, 120, 121, 122, 125, 127, 128, 134, 139, 143, 144, 145, 153, 154, 155, 156, 157, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 184, 188, 189, 190, 192, 327, 328, 330, 338, 339, 345, 346, 391, 392, 395, 396, 404, 405, 406, 407, 411, 412, 415, 420, 421, 433, 434, 467, 473, 486], "docstr": 484, "doctor": [445, 484], "doctor_filenam": 445, "doctor_format": 445, "doctorformat": 456, "document": [36, 72, 80, 132, 261, 262, 263, 264, 265, 266, 269, 270, 271, 272, 273, 279, 280, 294, 295, 296, 299, 300, 301, 302, 303, 305, 311, 312, 314, 315, 316, 321, 323, 324, 430, 440, 460, 473, 475, 476, 484, 485], "doe": [14, 16, 17, 19, 21, 36, 77, 110, 159, 160, 161, 162, 167, 169, 171, 185, 195, 196, 197, 200, 202, 267, 285, 291, 297, 322, 325, 340, 351, 410, 416, 418, 439, 460, 467, 478, 481, 484, 485], "doesn": [77, 113, 114, 115, 341, 478, 484], "dollar": 485, "domain": [42, 461, 466, 472], "don": [285, 463, 469, 484, 485], "done": [82, 160, 162, 183, 267, 288, 308, 334, 436, 484], "dot": [0, 3, 8, 165, 183, 422, 439, 465, 469, 470, 481, 485], "dot_product": 485, "doubl": [3, 8, 41, 358, 472], "down": [115, 484, 485], "download": [461, 475, 485], "dr": 472, "draft": 460, "draw": [347, 348, 350, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 376, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388], "drawn": [2, 347, 348, 350, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 370, 373, 374, 375, 376, 377, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 402], "driver": [463, 477, 485], "drop": [465, 473, 474, 485], "dry": 463, "dsplit": [0, 3, 8, 81], "dstack": [0, 3, 8], "dt": [347, 464], "dtype": [3, 4, 8, 12, 13, 14, 16, 17, 18, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 34, 35, 37, 41, 44, 45, 46, 52, 53, 54, 58, 59, 60, 63, 64, 65, 67, 68, 69, 70, 71, 76, 77, 78, 79, 82, 84, 85, 86, 87, 88, 90, 92, 93, 111, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 127, 128, 134, 135, 137, 138, 139, 143, 144, 145, 153, 154, 155, 156, 157, 159, 161, 165, 170, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 183, 184, 185, 188, 189, 190, 192, 193, 194, 195, 196, 197, 198, 202, 204, 209, 256, 267, 276, 277, 289, 295, 301, 307, 313, 314, 321, 324, 325, 327, 328, 330, 331, 332, 333, 335, 338, 339, 340, 345, 346, 370, 375, 377, 391, 392, 395, 396, 404, 405, 406, 407, 408, 411, 412, 415, 416, 418, 420, 421, 422, 424, 426, 433, 434, 438, 439, 443, 444, 465, 469, 482], "dtypelik": [4, 58, 92, 123, 124, 135, 137, 170, 307, 325, 331, 332, 375, 377, 426, 444], "due": [384, 478], "dump": [0, 8, 456], "dump_data": 479, "duplic": [342, 478, 485], "dure": [456, 461, 473, 485], "dx": 126, "dy": 126, "dynam": 472, "dz": 126, "e": [14, 19, 43, 54, 75, 77, 79, 95, 98, 99, 100, 101, 104, 106, 126, 137, 138, 168, 183, 310, 318, 325, 347, 348, 350, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 370, 373, 374, 375, 376, 377, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 422, 424, 439, 456, 460, 461, 464, 478, 482, 484, 485, 486], "each": [2, 38, 39, 40, 41, 43, 49, 50, 54, 57, 67, 73, 77, 83, 95, 96, 100, 101, 106, 109, 114, 115, 126, 131, 151, 159, 160, 161, 162, 163, 191, 313, 318, 329, 342, 343, 348, 350, 357, 362, 365, 393, 397, 414, 419, 423, 428, 429, 431, 432, 435, 436, 437, 461, 466, 467, 469, 470, 472, 473, 484, 485], "eager": [4, 456, 463, 473, 485], "eagerli": 470, "earli": 485, "earlier": 469, "eas": [372, 485], "easi": [460, 485], "easier": [275, 418, 485], "easiest": [460, 461], "east": [471, 485], "economist": 485, "ed": [352, 365, 467], "edg": [55, 77, 131, 468], "edge_ord": 126, "edgecolor": 469, "ediff1d": [3, 8], "edit": [461, 485], "effect": [83, 187, 322, 378, 436, 471, 485], "effici": [94, 107, 464, 472, 485], "effort": [460, 472], "effortlessli": 472, "eig": [0, 3, 8], "eigenvalu": [159, 160, 161, 162], "eigenvector": [159, 160], "eigh": [0, 3, 8], "eight": [166, 436], "eigval": [0, 3, 8], "eigvalsh": [0, 3, 8], "einstein": 82, "einsum": [0, 8, 83, 463], "einsum_path": [0, 3, 8, 82], "either": [35, 41, 61, 79, 126, 166, 183, 202, 209, 306, 401, 436, 464, 465, 466, 471, 473, 485], "elaps": [463, 464, 465, 471, 475, 479, 485], "elapsed_millisec": 479, "elapsed_tim": 485, "element": [12, 13, 14, 15, 16, 17, 19, 21, 22, 23, 24, 25, 26, 27, 28, 33, 35, 41, 43, 44, 45, 46, 48, 49, 51, 52, 53, 54, 55, 59, 60, 61, 63, 64, 65, 67, 68, 69, 75, 76, 78, 86, 87, 90, 91, 92, 93, 95, 100, 106, 109, 112, 113, 114, 115, 116, 117, 119, 120, 121, 122, 127, 128, 131, 135, 136, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 150, 154, 156, 157, 158, 164, 172, 173, 174, 178, 179, 180, 181, 183, 184, 185, 186, 187, 188, 189, 190, 192, 195, 196, 197, 198, 199, 200, 202, 204, 256, 261, 262, 267, 272, 273, 281, 284, 285, 287, 288, 291, 293, 295, 297, 299, 301, 302, 306, 310, 313, 314, 316, 319, 323, 324, 327, 328, 329, 330, 334, 337, 338, 339, 340, 341, 343, 389, 390, 391, 392, 393, 394, 396, 397, 398, 401, 402, 403, 404, 405, 406, 407, 411, 412, 415, 416, 418, 420, 421, 422, 424, 427, 430, 433, 434, 435, 436, 437, 438, 442, 452, 454, 466, 469, 485], "elementwis": 454, "elimin": 472, "els": [470, 484, 485], "elsewher": [12, 13, 22, 23, 24, 25, 26, 27, 28, 44, 45, 46, 52, 53, 59, 60, 63, 64, 65, 70, 71, 78, 86, 87, 88, 90, 92, 93, 116, 117, 118, 119, 120, 121, 122, 125, 127, 128, 134, 139, 143, 144, 145, 153, 154, 155, 156, 157, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 184, 188, 189, 190, 192, 327, 328, 330, 338, 339, 345, 346, 352, 391, 392, 395, 396, 404, 405, 406, 407, 411, 412, 415, 420, 421, 426, 433, 434, 442], "email": 460, "emerg": 485, "emploi": 460, "empti": [0, 3, 8, 16, 17, 42, 47, 48, 129, 130, 152, 193, 194, 195, 196, 197, 200, 202, 204, 318, 337, 410], "empty_lik": [0, 3, 8], "en": [352, 460], "enabl": [456, 461, 463, 472, 473, 484, 485], "encapsul": 6, "encount": [195, 196, 197, 200, 402, 460, 473, 484, 485], "encumbr": 460, "end": [20, 21, 42, 75, 77, 83, 170, 334, 436, 460, 466, 470, 471, 479, 485], "end_tim": 485, "endian": 318, "endors": 476, "endpoint": [170, 466], "energi": 485, "enhanc": [460, 472, 485], "enough": [163, 461, 479, 484], "ensur": [426, 460, 472, 479, 484, 485], "enter": 463, "entir": [278, 436, 485], "entri": [57, 84, 91, 110, 113, 114, 115, 285, 288, 318, 341, 342, 410, 413], "entropi": [1, 351], "env": [456, 461], "environ": [193, 194, 197, 200, 456, 461, 472, 473, 475, 477, 481, 484, 485], "epyc": 485, "eq": 464, "eqn": 466, "eqnarrai": 485, "equal": [0, 3, 8, 12, 13, 15, 22, 23, 24, 25, 26, 27, 28, 35, 36, 41, 42, 43, 44, 45, 46, 48, 52, 53, 59, 60, 63, 64, 65, 70, 71, 75, 78, 80, 87, 88, 90, 92, 93, 116, 117, 118, 119, 120, 121, 122, 125, 126, 127, 128, 131, 134, 139, 140, 142, 143, 144, 145, 149, 153, 154, 155, 156, 157, 170, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 184, 188, 189, 190, 192, 310, 327, 328, 330, 338, 339, 345, 346, 348, 354, 357, 362, 376, 384, 386, 391, 392, 395, 396, 404, 405, 406, 407, 410, 411, 412, 415, 420, 421, 426, 428, 431, 433, 434], "equal_nan": [15, 35, 140], "equat": [15, 140, 168, 384, 454, 466, 470, 472, 485], "equiv": [58, 82, 183, 267], "equival": [21, 41, 57, 77, 79, 80, 81, 83, 112, 118, 132, 133, 140, 151, 213, 261, 262, 263, 264, 265, 266, 269, 270, 271, 272, 273, 279, 280, 294, 295, 296, 299, 300, 301, 302, 303, 305, 309, 311, 312, 314, 315, 316, 318, 321, 322, 323, 324, 325, 326, 400, 418, 440, 441, 484], "erf": 464, "error": [186, 199, 341, 410, 413, 418, 466, 469, 472, 478, 485], "errstat": [3, 8], "especi": 484, "essenti": [484, 485], "estim": [61, 67, 201, 203, 336, 344, 485], "etc": [34, 95, 96, 100, 101, 106, 109, 275, 285, 456, 472, 478, 484, 486], "european": 464, "evalu": [14, 19, 57, 82, 83, 142, 149, 165, 187, 261, 262, 402, 478, 484], "even": [67, 97, 99, 102, 107, 142, 149, 159, 161, 285, 460, 463, 476], "evenli": [21, 170, 399], "event": [367, 476], "everi": [61, 106, 460, 464, 469, 484], "every_nit": 484, "everyon": 460, "evid": 485, "evolv": 460, "exact": [79, 138, 168, 422, 439, 466], "exactli": [320, 460, 465, 470, 481, 485], "examin": 67, "exampl": [40, 55, 68, 69, 76, 77, 195, 196, 313, 322, 355, 365, 410, 414, 460, 461, 463, 466, 467, 469, 470, 472, 473, 474, 475, 477, 479, 482, 483, 484, 486], "exce": [410, 436, 456], "exceed": 472, "except": [14, 16, 17, 19, 21, 34, 42, 54, 58, 76, 79, 92, 106, 133, 185, 197, 200, 202, 285, 291, 308, 340, 389, 393, 416, 419, 422, 464, 465, 471, 476], "exchang": 472, "exclud": [20, 21, 170, 384, 479], "exclus": 370, "execut": [456, 461, 463, 464, 465, 470, 471, 479, 481, 482, 483, 484, 485], "exemplari": 476, "exercis": [460, 485], "exhibit": 317, "exist": [58, 89, 171, 454, 461, 475, 482, 485], "exit": 463, "exp": [0, 3, 8, 90, 163, 352, 464], "exp2": [0, 3, 8], "exp_rt": 464, "expand": [76, 89], "expand_dim": [0, 3, 8], "expans": 464, "expect": [14, 16, 17, 19, 68, 69, 104, 138, 182, 185, 186, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 333, 336, 340, 344, 367, 399, 416, 422, 438, 439, 460, 473], "expens": 318, "experi": [355, 485], "expertis": 472, "expir": [464, 485], "explain": [96, 101, 106, 109], "explan": [69, 195, 196, 313, 460], "explicit": [82, 163, 472, 484, 485], "explicitli": [131, 137, 171, 460, 466, 473, 485], "explor": 83, "expm1": [0, 3, 8], "expon": [122, 164, 368, 454], "exponenti": [0, 3, 8, 83, 87, 163, 176, 177, 358, 380], "exponential_distribut": 352, "expos": [2, 34, 285, 308], "expr": [82, 83], "express": [82, 83, 187, 464, 465, 466, 471, 476, 478], "extend": [466, 472, 478], "extra": 485, "extract": [0, 3, 8, 57, 72, 337, 418], "extrema": 454, "ey": [0, 3, 8, 465, 482], "f": [0, 3, 8, 34, 114, 126, 166, 201, 203, 267, 285, 287, 317, 336, 344, 347, 352, 355, 364, 389, 394, 437, 464, 465, 466, 470, 471, 485], "f_": [466, 470], "f_contigu": 285, "f_interior": 466, "fa": 285, "fab": [0, 3, 8], "facilit": 482, "factor": [94, 95, 96, 98, 99, 100, 101, 103, 104, 105, 106, 107, 108, 109, 158, 167, 465, 485], "fail": [158, 167, 473, 484], "failur": [355, 362, 463], "fall": [31, 77, 150, 335, 456, 464, 470, 473, 481], "fallback": 478, "fals": [1, 12, 13, 14, 15, 16, 17, 18, 19, 22, 23, 24, 25, 26, 27, 28, 29, 30, 34, 35, 36, 41, 44, 45, 46, 49, 51, 52, 53, 57, 59, 60, 63, 64, 65, 67, 70, 71, 76, 77, 78, 82, 83, 86, 87, 88, 90, 93, 110, 116, 117, 118, 119, 120, 121, 122, 125, 127, 128, 131, 134, 137, 139, 140, 143, 144, 145, 146, 147, 149, 150, 153, 154, 155, 156, 157, 166, 169, 170, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 184, 185, 186, 187, 188, 189, 190, 192, 193, 194, 197, 198, 199, 200, 201, 202, 203, 204, 261, 262, 267, 285, 294, 295, 296, 301, 314, 324, 327, 328, 330, 336, 338, 339, 340, 344, 345, 346, 391, 392, 395, 396, 402, 404, 405, 406, 407, 411, 412, 415, 416, 420, 421, 433, 434, 435, 438, 456, 466, 470], "familiar": [474, 485], "fan": [201, 203, 336, 344], "fanci": 418, "farrai": 285, "fashion": 82, "fast": [94, 95, 96, 100, 101, 106, 107, 109], "fast_math": 445, "faster": [61, 77, 485], "fastest": [165, 389, 394], "fatter": 358, "fbmem": [463, 485], "featur": [460, 463, 485], "feedback": 460, "feel": 460, "fetch": 484, "few": [479, 484], "fewer": 473, "fft": [0, 3, 8, 61, 445, 454], "fft2": [0, 3, 8, 100], "fftfreq": [3, 8], "fftn": [0, 3, 8, 94, 101], "fftshift": [0, 3, 8, 102], "fid": 318, "fidel": 472, "field": [187, 291, 436], "fig": [467, 485], "figsiz": [467, 485], "file": [171, 282, 313, 318, 454, 456, 460, 461, 463, 464, 465, 471, 476, 481, 485], "filenam": [318, 456], "fileno": 318, "fill": [0, 2, 8, 110, 123, 124, 187, 331, 366, 371, 426, 443], "fill_diagon": [0, 3, 8], "fill_valu": [123, 124], "final": [106, 109, 472, 474, 485], "find": [33, 306, 323, 401, 435, 454, 469, 470, 473, 475, 484, 485], "find_centroid": 469, "find_cupynumeric_cpp": 461, "finfo": [3, 8], "finish": [463, 464, 465, 471], "finit": [140, 143, 468], "first": [14, 19, 41, 42, 47, 49, 54, 56, 58, 61, 75, 76, 79, 81, 83, 100, 101, 113, 116, 126, 131, 133, 165, 183, 186, 187, 199, 201, 203, 204, 288, 306, 318, 333, 336, 337, 339, 340, 341, 344, 365, 386, 389, 394, 397, 398, 400, 401, 402, 409, 414, 416, 417, 419, 422, 424, 435, 439, 440, 441, 460, 461, 466, 471, 484, 485], "first_cond": 484, "fisher": [353, 364, 485], "fit": [393, 476], "five": 473, "fix": [3, 8, 293, 310, 367, 464], "flag": [163, 308, 456, 461], "flat": [287, 291, 303, 343, 393, 437, 478], "flatit": [3, 8, 286], "flatnonzero": [0, 3, 8], "flatten": [0, 3, 8, 16, 17, 20, 29, 30, 31, 32, 57, 58, 66, 68, 69, 110, 112, 131, 185, 186, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 286, 303, 333, 334, 335, 336, 341, 342, 344, 389, 393, 397, 408, 418, 419, 435, 436, 437, 438, 439], "flexibl": [3, 8, 82, 293], "flip": [0, 3, 8, 114, 115, 355, 398, 478, 484], "fliplr": [0, 3, 8, 398], "flipud": [0, 3, 8, 398], "float": [14, 15, 16, 17, 19, 21, 43, 55, 68, 69, 79, 82, 84, 116, 124, 131, 135, 136, 140, 152, 164, 166, 170, 183, 185, 186, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 217, 294, 296, 301, 314, 328, 336, 340, 344, 347, 348, 350, 352, 353, 354, 355, 356, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 371, 372, 374, 375, 376, 377, 380, 381, 382, 383, 384, 385, 386, 387, 388, 390, 399, 401, 416, 422, 426, 438, 443, 452, 454, 456, 478], "float128": [3, 8, 478], "float16": [3, 8, 116], "float32": [3, 8, 68, 82, 116, 183, 267, 325, 482], "float64": [3, 4, 8, 18, 41, 67, 82, 84, 92, 116, 183, 185, 186, 198, 199, 201, 203, 267, 331, 336, 344, 375, 377, 438, 443, 465, 478], "float_pow": [0, 3, 8], "flood": 472, "floor": [0, 3, 8], "floor_divid": [0, 3, 8], "flop": 465, "flow": 472, "fluid": 472, "fmax": [3, 8, 197], "fmin": [3, 8], "fmod": [0, 3, 8], "fnc": 285, "focu": [472, 485], "follow": [15, 18, 34, 41, 54, 61, 77, 104, 111, 140, 160, 162, 166, 183, 187, 201, 203, 256, 336, 344, 456, 461, 466, 467, 469, 470, 472, 473, 475, 476, 477, 484, 485], "forc": [34, 82, 183, 267, 285, 456, 475], "force_thunk": [4, 445], "forcebuild": 1, "foremost": 485, "forg": [461, 475, 485], "fork": 460, "form": [37, 47, 56, 67, 75, 81, 82, 104, 129, 130, 133, 151, 152, 400, 441, 466, 476, 484, 485], "format": [318, 456, 462, 473, 485], "format_float_posit": [3, 8], "format_float_scientif": [3, 8], "former": [342, 419], "formula": [464, 485], "forset": 309, "fortran": [34, 267, 285, 287, 317, 389, 394, 437, 461], "fortun": 460, "forum": 473, "forumula": 485, "forward": [94, 95, 96, 98, 99, 100, 101, 103, 104, 105, 106, 107, 108, 109, 126, 372], "found": [43, 306, 313, 401, 472, 485], "foundat": [460, 473], "four": [308, 463, 485], "fourier": [61, 94, 95, 96, 99, 100, 101, 104, 106, 107, 109, 445, 454], "frac": [347, 352, 464, 470], "frac12": 464, "fraction": 190, "frame": [460, 481], "framebuff": [463, 473, 485], "framework": [460, 474], "free": [460, 464, 472, 473, 476, 485], "freed": 472, "freedom": [350, 353, 363, 364, 382, 438], "frequenc": [42, 67, 97, 99, 100, 101, 104, 388, 484], "frequent": 474, "fresh": [1, 351], "freshli": [12, 13, 22, 23, 24, 25, 26, 27, 28, 44, 45, 46, 52, 53, 59, 60, 63, 64, 65, 70, 71, 78, 86, 87, 88, 90, 93, 116, 117, 118, 119, 120, 121, 122, 125, 127, 128, 134, 139, 143, 144, 145, 146, 147, 153, 154, 155, 156, 157, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 184, 188, 189, 190, 192, 327, 328, 330, 338, 339, 345, 346, 391, 392, 395, 396, 404, 405, 406, 407, 411, 412, 415, 420, 421, 433, 434], "frexp": [0, 3, 8], "fro": 166, "frobeniu": 166, "frohn": 476, "from": [1, 2, 14, 18, 19, 21, 29, 30, 37, 41, 48, 54, 57, 61, 68, 69, 70, 71, 75, 91, 99, 109, 111, 113, 114, 115, 116, 126, 138, 151, 167, 170, 171, 183, 187, 195, 196, 204, 209, 268, 269, 285, 288, 312, 316, 333, 339, 340, 343, 345, 346, 347, 348, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 373, 374, 375, 376, 377, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 394, 398, 402, 413, 416, 418, 419, 422, 424, 435, 436, 439, 442, 454, 460, 462, 464, 465, 466, 467, 469, 470, 471, 472, 474, 476, 478, 479, 484, 485], "frombuff": 3, "fromfil": [3, 318], "fromfunct": [3, 8], "fromit": 3, "frompyfunc": 3, "fromregex": [3, 8], "fromstr": 3, "front": [137, 456], "fulfil": [383, 456], "full": [0, 3, 8, 61, 74, 124, 168, 261, 262, 263, 265, 266, 269, 270, 271, 272, 273, 279, 280, 294, 295, 296, 299, 300, 301, 302, 303, 305, 308, 311, 312, 314, 315, 316, 321, 323, 324, 334, 429, 432, 456, 460, 463, 472, 481, 485], "full_lik": [0, 3, 8], "full_matric": 169, "fulli": [186, 187, 199], "func": 464, "function": [2, 8, 18, 21, 36, 72, 81, 94, 95, 96, 97, 99, 100, 101, 102, 104, 106, 107, 109, 110, 116, 118, 126, 131, 133, 150, 151, 152, 165, 166, 182, 187, 201, 203, 261, 262, 263, 264, 265, 266, 269, 270, 271, 272, 273, 279, 280, 285, 291, 294, 295, 296, 299, 300, 301, 302, 303, 305, 308, 309, 311, 312, 314, 315, 316, 318, 319, 321, 322, 323, 324, 336, 342, 344, 347, 351, 352, 355, 365, 368, 373, 378, 400, 418, 419, 423, 439, 441, 445, 452, 454, 464, 465, 466, 470, 471, 472, 473, 478, 481, 482, 485], "function_nam": 481, "function_valu": 466, "fundament": 485, "funtion": 482, "furnish": 476, "further": [82, 201, 203, 310, 336, 344, 430, 460, 472], "furthermor": [49, 51, 187], "futur": 464, "fweight": 67, "g": [14, 19, 79, 81, 133, 138, 166, 183, 318, 325, 347, 348, 350, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 370, 373, 374, 375, 376, 377, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 400, 422, 439, 441, 460, 461, 471, 478, 482, 484, 485, 486], "gamma": [0, 3, 8, 347, 381], "gasnet": 485, "gather": 485, "gauss": 365, "gaussian": [358, 365, 371, 386], "gb": 485, "gcd": [0, 3, 8], "gemm": 469, "gener": [1, 3, 8, 21, 41, 42, 81, 99, 133, 170, 285, 351, 363, 366, 371, 376, 378, 384, 400, 441, 454, 461, 466, 469, 471, 473, 478, 479, 481, 483, 485], "genfromtxt": [3, 8], "geometr": [0, 3, 8, 352], "geomspac": [3, 8], "get": [98, 104, 106, 110, 170, 274, 313, 382, 461, 463, 464, 465, 466, 469, 470, 471, 473, 484], "get_bit_gener": [3, 8], "get_includ": [3, 8], "get_printopt": [3, 8], "get_rank": 472, "get_siz": 472, "get_stat": [3, 8], "getbufs": [3, 8], "getdevicecount": 472, "geterr": [3, 8], "geterrcal": [3, 8], "getfield": [0, 8], "getter": 309, "git": 460, "github": [460, 472, 485], "give": [43, 82, 183, 187, 322, 343, 394, 403, 435, 460, 473], "given": [14, 15, 16, 17, 19, 20, 21, 31, 34, 35, 41, 48, 51, 54, 55, 56, 57, 62, 66, 67, 68, 69, 75, 76, 79, 81, 83, 84, 85, 94, 95, 96, 98, 99, 100, 101, 103, 104, 106, 107, 109, 110, 113, 123, 124, 126, 131, 133, 134, 138, 140, 166, 170, 182, 183, 186, 187, 195, 196, 199, 200, 201, 202, 203, 204, 209, 263, 264, 267, 270, 271, 285, 288, 294, 295, 296, 301, 302, 306, 314, 322, 324, 331, 332, 333, 336, 340, 341, 344, 347, 348, 350, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 373, 374, 375, 376, 377, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 393, 397, 398, 399, 400, 401, 410, 416, 418, 422, 423, 424, 425, 426, 435, 439, 441, 443, 444, 460, 472, 484, 485], "global": [351, 472], "gmail": 476, "gninja": 461, "gnx": 472, "gny": 472, "go": [419, 485], "goal": 485, "golub": 166, "good": [182, 318, 357, 474, 476], "gop": 465, "govern": [464, 465, 471, 485], "gpu": [1, 2, 3, 8, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 206, 207, 208, 212, 213, 214, 215, 216, 218, 219, 221, 222, 223, 224, 225, 226, 227, 228, 231, 232, 233, 234, 235, 236, 237, 238, 240, 241, 242, 243, 244, 245, 246, 248, 249, 250, 252, 253, 254, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 269, 270, 271, 272, 273, 274, 279, 280, 283, 284, 287, 288, 291, 294, 295, 296, 299, 300, 301, 302, 303, 305, 306, 308, 311, 312, 314, 315, 316, 317, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 456, 463, 470, 472, 474, 484, 486], "grad_i": [467, 485], "grad_x": [467, 485], "gradient": [0, 3, 8, 467], "grai": [467, 469, 485], "grant": 476, "granular": [473, 479], "grasmair": 470, "grate": 460, "grayscal": [467, 485], "greater": [0, 3, 8, 21, 54, 80, 353, 366, 384, 388, 413], "greater_equ": [0, 3, 8], "greatest": [48, 125], "greedi": [82, 83], "green": [466, 469], "grep": 473, "grid": [137, 187, 466, 471, 472, 485], "group": [33, 461, 485], "gt": 466, "guarante": [341, 394], "guess": 470, "guid": [313, 474], "guidelin": 483, "gumbel": [0, 3, 8], "gzipfil": 318, "h": [158, 166, 201, 203, 336, 344, 466, 472, 484, 485], "h5py": 484, "ha": [6, 29, 30, 31, 32, 57, 67, 68, 69, 75, 77, 98, 103, 126, 136, 141, 142, 148, 149, 193, 194, 195, 196, 202, 204, 275, 285, 322, 334, 340, 343, 347, 358, 366, 373, 385, 390, 393, 402, 414, 416, 418, 423, 424, 437, 456, 460, 464, 465, 469, 470, 472, 473, 476, 485], "had": [342, 419, 486], "hadamard": 83, "half": [3, 8, 21, 97, 100, 101, 170, 370, 372, 374, 375, 377, 384], "halo": 472, "ham": [0, 3, 8], "han": [0, 3, 8], "hand": 466, "handl": [435, 439, 454, 456, 472, 478, 481, 485], "happen": [41, 460, 478], "har": 485, "hardwar": [285, 308, 483, 486], "have": [12, 13, 14, 19, 22, 23, 24, 25, 26, 27, 28, 33, 34, 35, 39, 40, 41, 44, 45, 46, 47, 52, 53, 54, 56, 58, 59, 60, 63, 64, 65, 67, 68, 69, 70, 71, 78, 79, 81, 82, 86, 87, 88, 90, 93, 100, 101, 109, 116, 117, 118, 119, 120, 121, 122, 125, 127, 128, 133, 134, 138, 139, 143, 144, 145, 146, 147, 153, 154, 155, 156, 157, 165, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 192, 195, 196, 198, 199, 201, 202, 203, 204, 313, 325, 327, 328, 330, 336, 337, 338, 339, 340, 342, 344, 345, 346, 391, 392, 395, 396, 399, 400, 404, 405, 406, 407, 411, 412, 414, 415, 416, 420, 421, 422, 423, 433, 434, 438, 439, 441, 452, 460, 461, 463, 464, 466, 467, 469, 470, 474, 481, 484, 485], "hazen": [201, 203, 336, 344], "header": [171, 461], "heapsort": [32, 408], "heat": 485, "heavisid": [3, 8], "height": [81, 133, 400, 441, 472, 485], "help": [460, 463, 467, 473, 482, 485], "helper": [454, 465, 471], "henc": 126, "here": [8, 104, 387, 460, 461, 466, 472, 479, 482, 484, 485], "herebi": 476, "herein": 476, "hermitian": [98, 103, 104, 158, 160, 162, 169, 454, 465], "hfft": [0, 3, 8], "high": [370, 373, 384, 461, 472, 485], "higher": [38, 76, 138, 201, 203, 285, 336, 344, 485], "highest": [370, 373], "highli": 484, "highlight": [472, 484, 485], "hipr2": 467, "hist": 131, "histogram": [0, 3, 8, 454], "histogram2d": [3, 8], "histogram_bin_edg": [3, 8], "histogramdd": [3, 8], "hold": [34, 55, 57, 68, 69, 166, 186, 195, 196, 199, 202, 204, 285, 424, 472], "holder": 476, "home": 464, "homepag": 467, "hope": 460, "hopkin": 166, "horizont": [132, 133, 398], "host": 182, "hous": 467, "how": [54, 308, 313, 322, 341, 418, 461, 462, 465, 466, 470, 479, 485], "howev": [14, 16, 17, 19, 68, 163, 185, 197, 200, 202, 285, 340, 416, 418, 460, 476, 485], "howto": 483, "hpc": [472, 483], "hsplit": [0, 3, 8, 133], "hstack": [0, 3, 8, 56, 484], "htm": 467, "html": [467, 473, 476, 486], "http": [352, 460, 464, 465, 467, 471, 473, 476, 478, 485, 486], "hull": 464, "hundr": [472, 484], "hyndman": [201, 203, 336, 344], "hyperbol": [23, 25, 28, 65, 382, 407, 421, 454], "hypergeometr": [0, 3, 8], "hypot": [0, 3, 8], "hypotenus": 134, "hypothesi": 350, "i": [2, 8, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 41, 42, 43, 44, 45, 46, 47, 48, 49, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 103, 104, 105, 106, 107, 108, 109, 110, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 170, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 209, 213, 214, 256, 267, 268, 285, 287, 288, 291, 293, 306, 308, 310, 313, 317, 318, 319, 322, 325, 326, 327, 328, 330, 331, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 404, 405, 406, 407, 408, 410, 411, 412, 413, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 431, 433, 434, 435, 436, 438, 439, 440, 441, 442, 443, 456, 461, 463, 464, 465, 466, 467, 469, 470, 471, 472, 474, 475, 476, 477, 478, 479, 481, 482, 485, 486], "i0": [3, 8, 137], "i1": 137, "i16_arr": 76, "iN": 137, "idea": 460, "ident": [0, 3, 8, 102, 110, 164, 168, 193, 194, 197, 200, 358, 380, 465], "identifi": 467, "identit": 465, "idiomat": 473, "idx": 469, "ieee": 456, "ifft": [0, 3, 8, 100, 101], "ifft2": [0, 3, 8], "ifftn": [0, 3, 8, 99, 106], "ifftshift": [0, 3, 8], "ignor": [49, 51, 131, 193, 194, 197, 198, 199, 200, 201, 203, 478], "ihfft": [0, 3, 8], "ii": [67, 366], "iinfo": [3, 8], "ij": [67, 187], "ik": 137, "illeg": 48, "illustr": [187, 461, 484, 485], "imag": [0, 3, 8, 467, 471, 485], "image_np": 485, "imagin": 313, "imaginari": [18, 35, 136, 141, 142, 149, 159, 160, 161, 162, 290, 399, 409], "imbal": 485, "immedi": 465, "impact": 484, "imper": 485, "implement": [8, 14, 16, 17, 19, 29, 30, 31, 61, 68, 69, 75, 79, 113, 114, 115, 138, 158, 163, 183, 185, 195, 196, 197, 200, 202, 335, 340, 416, 422, 439, 461, 464, 465, 472, 473, 476, 478, 481, 484, 485], "impli": [67, 334, 436, 464, 465, 471, 476], "implic": 470, "implicit": [82, 163], "implment": 481, "import": [67, 183, 464, 465, 466, 467, 469, 470, 471, 472, 479, 482, 484, 485, 486], "importantli": 77, "improp": 485, "improv": 485, "imshow": [467, 485], "in1d": [3, 8], "inappropri": 350, "incident": 476, "includ": [21, 37, 77, 82, 131, 170, 185, 198, 202, 204, 297, 340, 384, 387, 416, 438, 456, 460, 461, 463, 466, 472, 476, 478, 481, 484], "inclus": [201, 203, 336, 344, 370, 373], "incorpor": 476, "incorrect": 472, "increas": [77, 89, 99, 104, 131, 466, 473, 485], "incur": 484, "ind": [77, 428, 429, 431, 432], "indefinit": 460, "independ": [318, 350, 358, 365, 461, 485], "index": [6, 29, 30, 31, 32, 43, 54, 57, 75, 77, 92, 95, 100, 137, 151, 183, 187, 193, 194, 269, 291, 306, 335, 341, 342, 389, 394, 401, 408, 410, 414, 418, 419, 435, 437, 445, 452, 454, 466, 469, 474, 483], "index_arrai": [29, 30, 32, 33, 193, 194], "indexerror": 77, "indic": [0, 3, 8, 29, 30, 31, 32, 33, 36, 54, 61, 67, 73, 74, 77, 80, 82, 83, 91, 94, 95, 96, 98, 99, 100, 101, 103, 104, 105, 106, 107, 108, 109, 110, 112, 132, 182, 193, 194, 263, 264, 265, 266, 299, 302, 306, 316, 322, 329, 341, 342, 401, 404, 410, 418, 419, 428, 429, 431, 432, 435, 437, 440, 460, 466, 469, 470, 473, 476, 478, 484, 485], "indices_or_sect": [36, 410], "indirect": [31, 476], "individu": [355, 481], "ineffici": 456, "inexact": [3, 8, 116, 202], "inf": [15, 68, 69, 166, 193, 194, 195, 196, 467, 478], "infer": [21, 37, 170, 347, 394], "infin": [143, 144, 146, 147, 386], "infinit": 166, "influenc": 365, "info": [3, 8], "inform": [82, 285, 291, 308, 318, 460, 465, 466, 467, 470, 473, 475, 481, 485, 486], "infti": 464, "inher": 485, "inherit": 285, "init": [378, 469, 479, 485], "initi": [1, 16, 17, 84, 197, 200, 202, 204, 261, 262, 294, 296, 301, 314, 340, 351, 416, 456, 466, 469, 470, 472, 479], "inner": [0, 3, 8, 79, 83, 422], "innermost": 48, "input": [4, 6, 12, 13, 14, 15, 16, 17, 19, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 37, 38, 39, 40, 41, 43, 44, 45, 46, 48, 50, 52, 53, 55, 58, 59, 60, 61, 62, 63, 64, 65, 68, 69, 70, 71, 76, 77, 78, 82, 83, 86, 87, 88, 89, 90, 91, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 125, 126, 127, 128, 131, 134, 136, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 153, 154, 155, 156, 157, 158, 163, 166, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 267, 287, 288, 325, 326, 327, 328, 329, 330, 333, 334, 335, 336, 337, 338, 339, 340, 342, 343, 344, 345, 346, 348, 389, 390, 391, 392, 393, 395, 396, 397, 399, 401, 403, 404, 405, 406, 407, 408, 409, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 427, 433, 434, 435, 436, 438, 439, 445, 454, 464, 467, 473, 482, 484, 485], "insert": [3, 8, 29, 30, 48, 54, 75, 89, 170, 193, 194, 306, 334, 342, 401, 402, 454, 485], "insid": 484, "instal": [460, 461, 463, 474, 483], "instanc": [48, 81, 98, 133, 310, 351, 400, 441, 461, 475, 485], "instanti": [2, 351, 461], "instead": [14, 16, 17, 19, 41, 43, 48, 131, 137, 183, 185, 186, 197, 198, 199, 201, 203, 204, 267, 291, 336, 340, 344, 373, 416, 438, 464, 465, 466, 467, 471, 472, 473, 482, 483, 485], "instruct": [460, 461, 475, 485], "int": [1, 4, 6, 14, 16, 17, 19, 20, 21, 29, 30, 31, 32, 34, 36, 41, 42, 43, 47, 50, 51, 54, 55, 57, 58, 66, 67, 68, 69, 72, 73, 75, 76, 77, 80, 83, 84, 85, 89, 92, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 113, 123, 124, 126, 129, 130, 131, 132, 135, 137, 152, 164, 166, 170, 171, 182, 185, 186, 191, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 229, 230, 256, 288, 289, 293, 294, 296, 297, 298, 301, 306, 307, 309, 310, 313, 314, 322, 326, 331, 332, 334, 335, 336, 340, 342, 344, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 393, 394, 397, 398, 399, 401, 403, 408, 410, 413, 414, 416, 417, 418, 419, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 435, 436, 437, 438, 440, 443, 444, 452, 456, 466, 467, 469, 485], "int16": [3, 8, 76, 325], "int32": [3, 8, 202, 313], "int32_t": 461, "int64": [3, 8, 202], "int64_t": 461, "int8": [3, 8], "int_": [3, 8, 310, 373, 423, 464], "int_0": 347, "int_lik": 371, "int_typ": 291, "intc": [3, 8], "integ": [2, 3, 8, 21, 36, 51, 54, 67, 68, 69, 76, 116, 118, 151, 155, 164, 166, 185, 186, 195, 196, 198, 199, 201, 202, 203, 204, 306, 310, 313, 334, 336, 340, 341, 344, 348, 355, 370, 373, 394, 395, 396, 398, 401, 410, 416, 424, 435, 437, 438], "integer_lik": 422, "integr": [41, 131, 190, 463, 472, 485], "intel": 485, "intellectu": 460, "intend": [187, 318, 470], "intens": [163, 467, 485], "intensity_max": [467, 485], "intensity_min": [467, 485], "intent": 116, "inter": 472, "interact": [275, 485], "interchang": [315, 417], "interest": [464, 465, 485], "interfac": [34, 285, 308, 485], "interior": 126, "intermedi": [82, 83, 185, 198, 201, 203, 336, 344, 484], "intern": 68, "interoper": 473, "interp": [3, 8], "interpolated_inverted_cdf": [201, 203, 336, 344], "interpret": [37, 51, 62, 151, 182, 291, 308, 341, 470], "interrupt": 476, "intersect1d": [3, 8], "interv": [21, 55, 77, 170, 348, 362, 367, 370, 372, 373, 374, 375, 377, 383, 384, 385], "intp": [3, 8, 202], "introduc": [397, 469, 485], "introduct": 483, "introselect": [31, 265, 300, 335], "inund": 472, "inv": [3, 8, 470], "invas": 484, "invers": [22, 23, 24, 25, 26, 28, 89, 99, 100, 101, 102, 103, 104, 105, 106, 139, 164, 179, 352, 386, 388, 470], "invert": [0, 3, 8, 179, 454], "inverted_cdf": [201, 203, 336, 344], "invest": 485, "invoc": [485, 486], "invok": [461, 470, 482], "involv": [460, 472], "irecv": 472, "irfft": [0, 3, 8, 106], "irfft2": [0, 3, 8], "irfftn": [0, 3, 8, 104, 105], "irrespect": [160, 162], "is_busdai": [3, 8], "isclos": [0, 3, 8], "iscomplex": [0, 3, 8], "iscomplexobj": [0, 3, 8], "isdtyp": [3, 8], "isend": 472, "isfinit": [0, 3, 8, 197, 204], "isfortran": [3, 8, 256], "isin": [3, 8], "isinf": [0, 3, 8], "isnan": [0, 3, 8, 197, 200, 202, 204], "isnat": [3, 8], "isneginf": [0, 3, 8], "isol": 461, "isposinf": [0, 3, 8], "isreal": [0, 3, 8], "isrealobj": [0, 3, 8], "isscalar": [0, 3, 8], "issu": [99, 100, 101, 456, 460, 473, 484, 485], "issubdtyp": [3, 8], "item": [0, 8, 33, 318, 319, 357, 388, 435, 469], "items": 285, "iter": [6, 83, 201, 203, 274, 286, 287, 303, 336, 342, 344, 419, 469, 470, 471, 472, 479, 485], "ith": 137, "its": [12, 13, 14, 19, 22, 23, 24, 25, 26, 27, 28, 41, 43, 44, 45, 46, 52, 53, 54, 59, 60, 63, 64, 65, 70, 71, 72, 78, 86, 87, 88, 90, 93, 116, 117, 118, 119, 120, 121, 122, 125, 127, 128, 131, 134, 135, 138, 139, 143, 144, 145, 153, 154, 155, 156, 157, 159, 160, 161, 162, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 183, 184, 188, 189, 190, 192, 285, 308, 320, 322, 327, 328, 330, 333, 338, 339, 345, 346, 365, 373, 388, 391, 392, 394, 395, 396, 404, 405, 406, 407, 411, 412, 415, 420, 421, 422, 424, 425, 426, 433, 434, 439, 460, 465, 469, 472, 476, 484, 485], "itself": [54, 360, 413, 461], "ivan": 476, "ix_": [0, 3, 8], "j": [79, 166, 187, 201, 203, 322, 333, 336, 342, 344, 419, 426, 466, 470, 472, 484, 485], "j0": 54, "j1": 54, "jacobi": 468, "jacobi_stencil": 485, "jacobian": 470, "jcp": 466, "jm": 54, "john": [166, 464], "join": [58, 414, 454], "jr": [352, 365], "json": 456, "jsrun": 477, "june": 476, "just": [56, 387, 460, 464, 465, 471], "k": [12, 13, 22, 23, 24, 25, 26, 27, 28, 34, 44, 45, 46, 52, 53, 59, 60, 63, 64, 65, 70, 71, 72, 78, 79, 86, 87, 88, 90, 92, 93, 116, 117, 118, 119, 120, 121, 122, 125, 127, 128, 134, 137, 139, 143, 144, 145, 153, 154, 155, 156, 157, 167, 168, 169, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 188, 189, 190, 192, 213, 267, 287, 327, 328, 330, 338, 339, 345, 346, 347, 348, 350, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 370, 373, 374, 375, 376, 377, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 391, 392, 395, 396, 398, 404, 405, 406, 407, 411, 412, 415, 420, 421, 426, 427, 428, 429, 430, 431, 432, 433, 434, 456, 464, 466, 468, 470, 485], "kaiser": [0, 3, 8, 47], "kappa": 385, "ke": 485, "keep": [456, 464, 469], "keepdim": [14, 16, 17, 19, 29, 30, 41, 166, 185, 186, 193, 194, 197, 198, 199, 200, 201, 202, 203, 204, 261, 262, 294, 295, 296, 301, 314, 324, 336, 340, 344, 416, 438], "kei": [212, 220, 255, 473, 485], "kern": 476, "kernel": [467, 485], "kernel_i": [467, 485], "kernel_x": [467, 485], "keyword": [2, 12, 13, 22, 23, 24, 25, 26, 27, 28, 44, 45, 46, 52, 53, 55, 59, 60, 63, 64, 65, 67, 70, 71, 78, 86, 87, 88, 90, 93, 116, 117, 118, 119, 120, 121, 122, 125, 127, 128, 134, 139, 143, 144, 145, 153, 154, 155, 156, 157, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 184, 187, 188, 189, 190, 192, 327, 328, 330, 338, 339, 345, 346, 391, 392, 395, 396, 404, 405, 406, 407, 411, 412, 415, 420, 421, 433, 434, 435], "kill": 158, "kind": [31, 32, 58, 82, 183, 265, 266, 267, 300, 311, 335, 408, 454, 464, 465, 471, 473, 476], "know": [460, 470, 473, 484], "knowledg": [460, 472], "known": [313, 353, 366, 368, 379, 385, 388, 485], "kron": [3, 8], "kth": [31, 265, 300, 335], "kwarg": [12, 13, 22, 23, 24, 25, 26, 27, 28, 44, 45, 46, 52, 53, 55, 59, 60, 63, 64, 65, 70, 71, 78, 86, 87, 88, 90, 93, 116, 117, 118, 119, 120, 121, 122, 125, 127, 128, 134, 139, 143, 144, 145, 153, 154, 155, 156, 157, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 184, 188, 189, 190, 192, 247, 327, 328, 330, 338, 339, 345, 346, 391, 392, 395, 396, 404, 405, 406, 407, 411, 412, 415, 420, 421, 433, 434, 435, 464], "l": [36, 158, 160, 162, 465, 476, 485], "l2": [466, 470], "l2_norm": 470, "label": [82, 461, 464, 466, 469], "label_color": 469, "label_color_map": 469, "label_valu": 469, "lam": 367, "lambda": [352, 358, 387], "languag": [464, 465, 471], "laplac": [0, 3, 8, 365], "laptop": 485, "larg": [61, 67, 171, 365, 367, 382, 418, 472, 479, 484, 485], "larger": [43, 55, 76, 94, 95, 96, 99, 100, 101, 103, 106, 107, 109, 171, 383, 424, 436, 479, 485], "larger_imag": 485, "largest": [43, 83, 118, 166, 370, 373], "last": [14, 19, 21, 31, 32, 41, 42, 48, 76, 79, 94, 95, 96, 98, 99, 100, 101, 103, 104, 105, 106, 107, 109, 113, 126, 138, 165, 170, 183, 204, 288, 306, 335, 340, 389, 394, 397, 401, 408, 409, 414, 416, 418, 422], "latenc": 485, "later": [365, 485], "latest": [473, 475, 485, 486], "latter": [342, 419, 484], "launch": [461, 479, 484], "launcher": [473, 477, 485], "law": [388, 464, 465, 471], "layout": [34, 267, 285, 317, 389, 394], "lcm": [0, 3, 8], "ldexp": [0, 3, 8], "lead": [48, 187, 195, 196, 473, 485], "leakag": 47, "learn": 473, "least": [38, 39, 40, 41, 43, 61, 67, 74, 81, 83, 110, 114, 142, 159, 160, 161, 162, 167, 169, 357, 400, 441, 461, 484, 485], "left": [14, 16, 17, 19, 29, 30, 41, 77, 114, 155, 166, 185, 186, 193, 194, 197, 198, 199, 200, 201, 202, 203, 204, 306, 336, 340, 344, 383, 399, 401, 416, 438, 466, 472], "left_shift": [0, 3, 8], "leg": 134, "legaci": 378, "legal": [460, 476], "legales": 462, "legat": [341, 456, 461, 463, 464, 465, 471, 474, 475, 478, 481, 482, 485, 486], "legate_auto_config": 485, "legate_config": [473, 482], "legate_limit_stdout": 485, "legate_root": 461, "legate_test": 473, "legend": [464, 466], "legion": [483, 485], "legion_default_arg": 477, "lele": 466, "len": [57, 77, 96, 97, 101, 104, 106, 109, 137, 187, 239, 469], "length": [12, 13, 16, 17, 21, 22, 23, 24, 25, 26, 27, 28, 36, 41, 43, 44, 45, 46, 52, 53, 57, 59, 60, 63, 64, 65, 68, 69, 70, 71, 76, 78, 86, 87, 88, 90, 93, 94, 95, 96, 98, 99, 100, 101, 102, 103, 104, 106, 107, 109, 116, 117, 118, 119, 120, 121, 122, 125, 126, 127, 128, 131, 133, 134, 137, 139, 143, 144, 145, 153, 154, 155, 156, 157, 159, 160, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 184, 186, 187, 188, 189, 190, 192, 195, 196, 197, 199, 200, 306, 312, 327, 328, 330, 338, 339, 342, 345, 346, 349, 391, 392, 394, 395, 396, 400, 401, 402, 403, 404, 405, 406, 407, 411, 412, 413, 415, 419, 420, 421, 422, 423, 433, 434, 441, 461, 466], "less": [0, 3, 8, 42, 47, 57, 67, 68, 69, 75, 110, 129, 130, 152, 157, 163, 195, 196, 202, 204, 340, 357, 384, 405, 416, 424, 470, 473, 484], "less_equ": [3, 8], "let": [460, 464, 465, 470, 471, 485], "letter": 308, "level": [48, 67, 319, 452, 461, 478, 484, 485], "leverag": 485, "lexsort": [3, 8], "lgpatch": 482, "lh": 466, "liabil": 476, "liabl": 476, "liber": [79, 82, 138, 183, 422, 439], "librari": [275, 452, 456, 461, 473, 474, 476, 485], "licens": [460, 464, 465, 471, 476], "lifespan": 472, "lightweight": 460, "like": [39, 40, 48, 56, 82, 106, 110, 167, 169, 170, 171, 182, 183, 187, 267, 285, 310, 318, 342, 384, 386, 389, 394, 419, 426, 454, 456, 460, 465, 466, 470, 471, 472, 477, 484, 485, 486], "limit": [55, 94, 95, 96, 98, 99, 100, 101, 103, 104, 105, 106, 107, 108, 109, 159, 160, 161, 162, 270, 365, 367, 383, 384, 464, 465, 471, 476, 485], "linalg": [0, 3, 8, 445, 454, 465, 466, 469, 470, 482, 484], "linalgerror": [8, 159, 160, 161, 162, 167, 168, 169], "line": [460, 463, 472, 473, 481, 485], "linear": [61, 82, 168, 201, 203, 336, 344, 445, 454, 461, 466, 470, 485], "linearli": 484, "link": [478, 485], "linspac": [0, 3, 8, 21, 464, 466, 484], "linux": [460, 473, 475, 483], "list": [8, 21, 31, 32, 36, 37, 38, 39, 40, 48, 49, 54, 80, 82, 83, 89, 97, 110, 111, 126, 132, 256, 319, 335, 402, 408, 410, 422, 425, 440, 461, 463, 469, 476], "liter": [4, 82], "literal_ev": 171, "littl": [79, 138, 183, 334, 422, 436, 439, 465], "ll": [469, 477], "ln": [387, 485], "load": [0, 3, 8, 282, 283, 485], "loadtxt": [3, 8], "loan": 166, "loc": [356, 358, 359, 365, 466], "local": [472, 473, 485], "local_grid": 472, "local_ni": 472, "local_nx": 472, "local_rank": 472, "locat": [12, 13, 22, 23, 24, 25, 26, 27, 28, 44, 45, 46, 49, 51, 52, 53, 59, 60, 63, 64, 65, 70, 71, 78, 86, 87, 88, 90, 93, 110, 116, 117, 118, 119, 120, 121, 122, 125, 127, 128, 134, 139, 143, 144, 145, 146, 147, 153, 154, 155, 156, 157, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 187, 188, 189, 190, 192, 306, 327, 328, 330, 333, 338, 339, 345, 346, 356, 358, 359, 366, 391, 392, 395, 396, 401, 404, 405, 406, 407, 411, 412, 415, 420, 421, 433, 434, 467, 469, 481, 482, 485], "lock": 285, "log": [0, 3, 8, 360, 361, 464], "log10": [0, 3, 8], "log1p": [0, 3, 8], "log2": [0, 3, 8], "logaddexp": [0, 3, 8], "logaddexp2": [0, 3, 8], "logarithm": [172, 173, 174, 175, 176, 177, 361, 454], "logic": [14, 19, 334, 445, 454, 472], "logical_and": [0, 3, 8, 484], "logical_not": [3, 8], "logical_or": [0, 3, 8], "logical_xor": [0, 3, 8], "logist": [0, 3, 8], "lognorm": [0, 3, 8], "logseri": [0, 3, 8], "logspac": [3, 8], "lomax": 366, "long": [3, 8, 373, 485], "longdoubl": [3, 8, 291], "longer": [43, 61, 98, 104, 484], "longlong": [3, 8], "look": [419, 460, 471, 473], "loop": [470, 472], "lorena": 472, "lorentz": 379, "lose": [291, 319], "loss": 476, "lost": 318, "low": [100, 101, 370, 373, 384, 452], "lower": [55, 92, 131, 158, 160, 162, 201, 203, 336, 344, 383, 384, 426, 427, 428, 429, 465, 472], "lowercas": 285, "lowest": [41, 83, 153, 366, 370, 373], "lstsq": [3, 8], "lt": 466, "m": [40, 42, 47, 61, 67, 79, 81, 92, 95, 96, 98, 100, 101, 104, 106, 109, 113, 114, 115, 129, 130, 152, 158, 159, 160, 161, 162, 163, 164, 167, 168, 169, 183, 185, 187, 198, 288, 333, 342, 347, 348, 350, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 370, 373, 374, 375, 376, 377, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 398, 402, 418, 419, 426, 427, 428, 430, 431, 438, 461, 464, 465, 471, 475, 485], "machin": [318, 461, 473, 485, 486], "maco": 473, "made": [34, 38, 267, 285, 308, 389], "magenta": 469, "magnitud": [18, 469, 485], "mai": [6, 14, 19, 21, 29, 30, 49, 51, 54, 55, 58, 68, 69, 82, 126, 166, 171, 183, 187, 195, 196, 267, 285, 310, 319, 342, 348, 384, 385, 456, 460, 463, 464, 465, 466, 470, 471, 473, 476, 478, 481, 482, 485], "main": [72, 73, 74, 75, 92, 110, 135, 424, 426, 427, 466, 477, 485, 486], "maintain": [75, 460, 472], "mainten": 472, "major": [34, 287, 389, 437, 473], "make": [48, 49, 56, 81, 133, 187, 275, 285, 357, 400, 441, 454, 460, 461, 465, 469, 472, 473, 478, 479, 482, 484, 485], "make_grid": 471, "manag": [351, 456, 472, 485], "mani": [82, 313, 352, 436, 461, 485], "manifest": 484, "manipul": [445, 454], "manner": [478, 485], "mantissa": 122, "manual": [423, 460, 472, 475, 479, 485], "map": [54, 469, 472], "mapper": 473, "margin": 77, "mark": 460, "marker": 469, "marku": 470, "mask": [151, 182, 337, 343, 469], "mask_func": 182, "mask_funct": 182, "mask_indic": [0, 3, 8], "mass": [131, 355], "master": 485, "match": [37, 48, 55, 58, 76, 126, 183, 342, 414, 419, 438, 456, 466], "materi": [182, 285, 467, 469, 476], "math": [291, 456, 476], "mathbf": [466, 470, 485], "mathemat": [166, 445, 454, 485], "mathtt": 464, "matmul": [0, 3, 8, 456, 485], "matmul_cache_s": 445, "matplotlib": [464, 466, 467, 469, 471, 485], "matric": [48, 110, 159, 160, 161, 162, 163, 165, 166, 183, 187, 389, 454, 465, 466, 485], "matrix": [7, 8, 67, 75, 79, 158, 159, 160, 161, 162, 163, 164, 166, 167, 168, 183, 187, 322, 325, 389, 430, 439, 454, 465, 466, 470], "matrix_norm": 8, "matrix_pow": [0, 8], "matrix_rank": [3, 8], "matrix_transpos": [3, 8], "matter": 473, "matthew": 476, "matvec": [3, 8], "max": [0, 131, 166, 200, 270, 423, 467, 469, 484, 485], "max_header_s": 171, "maxim": 485, "maximum": [0, 3, 8, 16, 17, 29, 42, 47, 55, 83, 119, 129, 130, 152, 171, 193, 197, 200, 263, 294, 469, 478, 484], "may_share_memori": [3, 8], "mayb": 460, "mb": [463, 485], "md": 166, "me": 460, "mean": [0, 3, 8, 48, 66, 82, 95, 96, 100, 101, 106, 107, 109, 123, 126, 166, 183, 198, 267, 287, 317, 322, 350, 358, 359, 360, 364, 365, 371, 386, 389, 394, 398, 418, 436, 468, 470, 485], "measur": [352, 438, 473, 479, 480, 482, 483, 485], "mechan": 460, "median": [0, 3, 8, 199, 359], "median_unbias": [201, 203, 336, 344], "meet": [34, 460, 484, 485], "memavail": 473, "meminfo": 473, "memmap": [3, 8], "memo": 214, "memori": [34, 49, 51, 163, 182, 186, 187, 199, 201, 203, 267, 268, 278, 285, 287, 297, 308, 313, 317, 336, 344, 389, 394, 463, 466, 472, 485], "memoryview": 278, "mention": [469, 473, 484, 485], "merchant": 476, "merg": [54, 460, 476, 479], "merged_arrai": 54, "mergesort": [32, 408], "merton": 485, "mesh": [151, 472, 479], "meshgrid": [0, 3, 8, 151], "messag": [473, 479], "met": [476, 484], "method": [1, 2, 4, 7, 14, 16, 17, 19, 34, 61, 163, 171, 185, 197, 200, 201, 202, 203, 291, 309, 310, 318, 326, 336, 340, 344, 416, 464, 468, 478, 485], "mgrid": 151, "microsecond": 484, "middl": [100, 101], "midpoint": [201, 203, 336, 344], "might": [32, 68, 82, 182, 408, 470, 473, 479, 484, 485], "million": [464, 472], "millisecond": [479, 484], "mimic": [334, 436, 472], "mimick": 472, "min": [0, 131, 166, 167, 169, 200, 270], "min_cpu_chunk": 445, "min_gpu_chunk": 445, "min_omp_chunk": 445, "min_scalar_typ": [3, 8], "miniforg": 485, "miniforge3": 485, "minim": [47, 485], "minimum": [0, 3, 8, 16, 17, 30, 34, 43, 55, 116, 120, 194, 197, 200, 264, 296, 485], "minlength": [43, 469], "mintypecod": [3, 8], "mirror": 472, "miscellan": 454, "mise": 385, "mismatch": [48, 54, 57], "mitig": 484, "mkdir": 485, "mod": [3, 8, 54], "mode": [54, 61, 82, 94, 95, 96, 98, 99, 100, 101, 103, 104, 105, 106, 107, 108, 109, 167, 171, 269, 302, 316, 341, 356, 376, 379, 383, 385, 418, 456, 467, 484, 485], "model": [355, 461, 464, 465, 471, 472, 485], "modf": [0, 3, 8], "modif": [460, 472, 476], "modifi": [110, 186, 199, 201, 203, 336, 344, 460, 466, 476], "modul": [275, 485], "modular": 54, "moivr": 365, "monoton": [77, 131], "more": [38, 39, 40, 49, 51, 55, 68, 69, 72, 75, 77, 79, 81, 82, 94, 99, 104, 105, 107, 108, 133, 138, 163, 165, 183, 187, 195, 196, 202, 313, 386, 387, 398, 400, 414, 422, 424, 435, 439, 441, 463, 465, 466, 467, 469, 472, 475, 478, 484, 485, 486], "moshier": 476, "most": [34, 76, 81, 82, 83, 99, 133, 357, 400, 419, 441, 460, 472, 478, 485], "mostli": 473, "motion": 386, "move": [191, 313, 485], "moveaxi": [0, 3, 8], "mpi": [472, 485], "mpi4pi": [472, 479], "mpi_fin": 472, "mpirun": 477, "msg00295": 476, "mt19937": [3, 8], "mu": [358, 366, 385], "much": [42, 460, 484], "multi": [3, 82, 94, 95, 96, 98, 99, 100, 101, 103, 104, 105, 106, 107, 108, 109, 159, 160, 161, 162, 163, 168, 472, 473, 474, 475, 483, 484], "multi_dot": [0, 8], "multidimension": 439, "multinomi": [3, 8], "multipl": [1, 2, 7, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 112, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 168, 170, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 206, 207, 208, 212, 213, 214, 215, 216, 218, 219, 221, 222, 223, 224, 225, 226, 227, 228, 231, 232, 233, 234, 235, 236, 237, 238, 240, 241, 242, 243, 244, 245, 246, 248, 249, 250, 252, 253, 254, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 269, 270, 271, 272, 273, 274, 279, 280, 283, 284, 287, 291, 294, 295, 296, 299, 300, 301, 302, 303, 305, 306, 308, 311, 312, 314, 315, 316, 317, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 463, 470, 472, 473, 475, 484, 486], "multipli": [0, 3, 8, 68, 79, 183, 195, 340, 366, 374, 375, 377, 484], "multivariate_norm": [3, 8], "must": [1, 12, 13, 14, 16, 17, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 41, 44, 45, 46, 48, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 63, 64, 65, 68, 69, 70, 71, 76, 77, 78, 79, 81, 86, 87, 88, 90, 93, 98, 104, 106, 114, 116, 117, 118, 119, 120, 121, 122, 125, 126, 127, 128, 131, 133, 134, 138, 139, 143, 144, 145, 146, 147, 153, 154, 155, 156, 157, 158, 165, 166, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 183, 184, 185, 186, 188, 189, 190, 191, 192, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 256, 270, 285, 322, 327, 328, 330, 336, 337, 338, 339, 340, 342, 344, 345, 346, 350, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 363, 364, 365, 366, 367, 368, 369, 371, 376, 381, 382, 383, 386, 387, 388, 391, 392, 395, 396, 397, 398, 399, 400, 401, 404, 405, 406, 407, 411, 412, 414, 415, 416, 419, 420, 421, 422, 424, 433, 434, 436, 438, 439, 441, 461, 472, 476, 477, 485], "my": 460, "myenv": [475, 485], "myron": 485, "n": [7, 33, 36, 40, 43, 54, 61, 67, 73, 74, 76, 77, 79, 81, 92, 94, 95, 96, 98, 99, 100, 101, 103, 104, 106, 107, 109, 110, 126, 135, 137, 151, 164, 166, 167, 169, 182, 183, 187, 306, 313, 322, 333, 337, 343, 347, 348, 350, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 370, 373, 374, 375, 376, 377, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 400, 401, 410, 422, 426, 427, 428, 431, 432, 438, 441, 445, 464, 465, 466, 469, 471, 475, 477, 485], "n1": 187, "n2": 187, "n3": 187, "n_centroid": 469, "n_dim": 469, "n_element": 469, "n_gpu": 472, "n_iter": 469, "n_iter_check": 469, "n_point": 466, "n_stencil": 466, "n_warmup_it": 479, "naiv": [484, 485], "name": [282, 285, 308, 320, 386, 460, 476, 482, 485], "nan": [15, 29, 30, 35, 140, 145, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 478], "nan_to_num": [3, 8], "nanargmax": [0, 3, 8, 194, 456], "nanargmin": [0, 3, 8, 193, 456], "nancumprod": [0, 3, 8], "nancumsum": [0, 3, 8], "nanmax": [0, 3, 8, 200, 456], "nanmean": [0, 3, 8], "nanmedian": [0, 3, 8], "nanmin": [0, 3, 8, 197, 456], "nanpercentil": [0, 3, 8], "nanprod": [0, 3, 8], "nanquantil": [0, 3, 8], "nanstd": [3, 8], "nansum": [0, 3, 8], "nanvar": [3, 8], "nation": 485, "nativ": [456, 478], "natur": [172, 174, 365, 485], "navier": 472, "nbad": 357, "nd": [6, 48, 291], "ndarrai": [0, 7, 8, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 350, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 373, 374, 375, 376, 377, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 450, 456, 467, 469, 470, 478, 481, 485], "ndenumer": [3, 8], "ndim": [0, 3, 6, 8, 16, 17, 33, 38, 39, 40, 48, 73, 75, 110, 166, 200, 319, 419, 423], "ndimag": 467, "ndindex": [3, 8], "nditer": [3, 8], "ndmin": 34, "ndshape": [6, 50, 403, 437], "ndshapelik": [50, 51, 113, 123, 124, 331, 332, 375, 377, 394, 413, 444], "nearest": [201, 203, 319, 336, 344, 396], "necessari": [38, 43, 48, 54, 68, 69, 98, 104, 106, 110, 185, 186, 195, 196, 198, 199, 202, 204, 340, 341, 399, 416, 438, 472, 481], "necessarili": [54, 464, 465, 471], "need": [34, 49, 77, 186, 187, 199, 389, 418, 419, 442, 456, 461, 465, 469, 472, 473, 484, 485], "neg": [0, 3, 8, 14, 19, 41, 43, 54, 75, 92, 99, 100, 101, 104, 113, 116, 126, 144, 146, 164, 170, 204, 288, 340, 352, 354, 356, 358, 359, 360, 362, 363, 365, 368, 369, 371, 376, 381, 389, 399, 411, 416, 418, 422, 424, 436], "negative_binomi": [0, 3, 8], "neglig": 476, "neighbor": [466, 472, 485], "neither": 476, "nersc": 485, "nest": [34, 48, 319, 472, 484], "nested_it": 3, "never": [61, 308], "new": [14, 19, 51, 54, 68, 69, 75, 84, 85, 89, 113, 114, 115, 123, 170, 182, 185, 186, 191, 195, 196, 198, 199, 202, 204, 209, 267, 269, 281, 305, 322, 325, 331, 351, 372, 394, 399, 414, 417, 423, 438, 443, 452, 469, 475, 485], "new_label": 469, "newaxi": [322, 469], "newli": [34, 267], "newshap": 394, "newton": 468, "next": [313, 328, 460, 485], "nextaft": [0, 3, 8], "ngood": 357, "ni": [187, 342, 418, 419], "ninja": 461, "niter": [470, 479, 484], "nj": [342, 418, 419], "nk": [342, 418, 419], "nn": 187, "nnewton": 470, "nnode": 485, "node": [285, 463, 472, 473, 474, 475, 483, 486], "non": [14, 16, 17, 19, 21, 33, 39, 40, 41, 43, 66, 112, 131, 141, 151, 166, 170, 182, 185, 187, 197, 200, 202, 285, 297, 299, 329, 337, 340, 352, 354, 356, 358, 359, 360, 363, 364, 365, 368, 369, 371, 376, 381, 411, 416, 422, 436, 472, 478], "nonc": [363, 364], "noncentr": [363, 364], "noncentral_chisquar": [0, 3, 8], "noncentral_f": [0, 3, 8], "none": [1, 2, 4, 6, 12, 13, 14, 16, 17, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 34, 37, 41, 43, 44, 45, 46, 52, 53, 54, 55, 57, 58, 59, 60, 63, 64, 65, 66, 67, 68, 69, 70, 71, 75, 76, 78, 79, 82, 85, 86, 87, 88, 90, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 113, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 131, 134, 138, 139, 143, 144, 145, 146, 147, 153, 154, 155, 156, 157, 165, 166, 168, 170, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 183, 184, 185, 186, 188, 189, 190, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 261, 262, 263, 264, 265, 266, 268, 269, 270, 271, 275, 276, 277, 279, 280, 283, 288, 289, 291, 294, 295, 296, 300, 301, 302, 306, 307, 308, 311, 312, 314, 316, 319, 321, 322, 324, 325, 327, 328, 330, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 344, 345, 346, 347, 348, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 370, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 391, 392, 393, 395, 396, 397, 399, 401, 404, 405, 406, 407, 408, 411, 412, 413, 414, 415, 416, 418, 419, 420, 421, 422, 424, 425, 426, 428, 431, 433, 434, 435, 436, 438, 439, 442, 444, 456, 469], "noninfring": 476, "nonneg": [357, 387], "nonzero": [0, 3, 8, 91, 112, 151, 334, 484, 485], "nor": 476, "norm": [0, 8, 94, 95, 96, 98, 99, 100, 101, 103, 104, 105, 106, 107, 108, 109, 163, 454, 466, 469, 470, 484], "normal": [0, 3, 8, 42, 47, 48, 67, 94, 95, 96, 98, 99, 100, 101, 103, 104, 105, 106, 107, 108, 109, 129, 130, 131, 152, 159, 160, 347, 350, 358, 360, 371, 382, 385, 464, 467, 469, 485], "normal_unbias": [201, 203, 336, 344], "north": [471, 485], "not_equ": [0, 3, 8, 469], "note": [12, 13, 15, 18, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 34, 44, 45, 46, 52, 53, 54, 59, 60, 61, 63, 64, 65, 67, 68, 69, 70, 71, 75, 76, 77, 78, 79, 82, 83, 86, 87, 88, 90, 93, 94, 95, 96, 97, 98, 99, 100, 101, 103, 104, 105, 106, 107, 108, 109, 110, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 125, 127, 128, 131, 134, 137, 138, 139, 140, 143, 144, 145, 150, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 187, 188, 189, 190, 192, 195, 196, 197, 200, 267, 278, 285, 291, 297, 308, 310, 313, 318, 319, 325, 327, 328, 330, 335, 338, 339, 345, 346, 351, 360, 389, 391, 392, 393, 394, 395, 396, 397, 404, 405, 406, 407, 411, 412, 415, 418, 420, 421, 422, 426, 428, 429, 431, 432, 433, 434, 435, 439, 466, 467, 470, 473, 484, 485], "notic": [464, 470, 473, 475], "notion": [160, 162], "now": [54, 461, 464, 465, 467, 471, 485], "np": [12, 13, 16, 17, 22, 23, 24, 25, 26, 27, 28, 44, 45, 46, 48, 52, 53, 59, 60, 63, 64, 65, 68, 69, 70, 71, 76, 77, 78, 82, 86, 87, 88, 90, 93, 111, 112, 116, 117, 118, 119, 120, 121, 122, 125, 127, 128, 134, 139, 143, 144, 145, 151, 153, 154, 155, 156, 157, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 186, 187, 188, 189, 190, 192, 195, 196, 199, 286, 310, 313, 322, 327, 328, 330, 338, 339, 340, 345, 346, 373, 391, 392, 395, 396, 404, 405, 406, 407, 411, 412, 415, 416, 418, 420, 421, 423, 433, 434, 464, 465, 466, 467, 469, 470, 471, 472, 477, 478, 479, 482, 484, 485, 486], "npoint": 466, "npt": [4, 36, 55, 58, 92, 123, 124, 131, 135, 137, 141, 142, 148, 150, 170, 268, 286, 307, 325, 331, 332, 375, 377, 402, 423, 426, 442, 444], "npy": [171, 454], "npz": [171, 454], "nsampl": 357, "ntask": 485, "nuc": 166, "nuclear": 166, "null": 419, "num": [170, 484, 485], "num_parallel": 461, "num_timestep": 472, "numa": 461, "number": [2, 3, 6, 8, 12, 13, 15, 18, 22, 23, 24, 25, 26, 27, 28, 33, 34, 41, 42, 43, 44, 45, 46, 47, 49, 52, 53, 54, 59, 60, 63, 64, 65, 66, 67, 70, 71, 73, 76, 78, 83, 86, 87, 88, 89, 90, 92, 93, 96, 98, 99, 100, 101, 103, 104, 106, 107, 109, 116, 117, 118, 119, 120, 121, 122, 125, 126, 127, 128, 129, 130, 131, 134, 135, 137, 139, 142, 143, 144, 145, 149, 151, 152, 153, 154, 155, 156, 157, 166, 170, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 184, 185, 188, 189, 190, 192, 195, 196, 197, 198, 200, 202, 204, 293, 298, 310, 326, 327, 328, 330, 334, 337, 338, 339, 345, 346, 348, 349, 350, 355, 357, 362, 365, 367, 378, 391, 392, 393, 395, 396, 397, 398, 399, 404, 405, 406, 407, 411, 412, 415, 418, 420, 421, 423, 426, 433, 434, 435, 436, 438, 439, 454, 456, 463, 464, 466, 470, 472, 473, 477, 478, 485], "number_of_dimens": 326, "numer": [99, 100, 101, 104, 106, 146, 147, 166, 327, 338, 353, 364, 454, 472, 478], "numit": 6, "numpi": [1, 2, 3, 4, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 90, 91, 92, 93, 94, 95, 96, 98, 99, 100, 101, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 267, 275, 281, 285, 308, 313, 325, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 400, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 454, 456, 463, 464, 465, 466, 467, 469, 470, 471, 472, 474, 480, 481, 483, 486], "numpy_compat": 445, "numpythunk": 4, "nvidia": [464, 465, 467, 471, 473, 475, 485, 486], "nx": [187, 472, 484, 485], "ny": [187, 472, 484, 485], "nyquist": [97, 99, 100, 101], "o": [1, 285, 351, 469, 479, 485], "obj": 34, "object": [6, 14, 19, 34, 62, 150, 158, 166, 171, 186, 199, 201, 203, 256, 268, 275, 278, 285, 291, 293, 297, 317, 318, 319, 325, 336, 344, 351, 394, 422, 426, 435], "object_": [3, 8], "observ": 67, "obtain": [137, 310, 366, 464, 465, 471, 476], "occas": 460, "occasion": 478, "occur": [58, 68, 69, 82, 183, 195, 196, 267, 287, 362, 365, 367, 383, 389, 484, 485], "occurr": [43, 435], "odd": [42, 47, 98, 102, 104, 106, 107, 129, 130, 152], "ofc": 68, "off": [21, 436, 460, 466], "offer": [473, 475, 484], "offload": 456, "offset": [4, 75, 182, 279, 289, 307, 313, 321, 424, 428, 429, 431, 432, 456, 479], "often": [21, 42, 347, 350, 365, 460, 469, 484, 485], "ogrid": 151, "omiss": 325, "omit": [256, 325], "omp": [463, 473, 485], "ompthread": [463, 485], "onc": [460, 461, 472, 485], "one": [6, 14, 16, 17, 19, 29, 30, 38, 41, 42, 43, 47, 49, 51, 54, 55, 82, 92, 94, 95, 98, 99, 100, 102, 103, 104, 106, 107, 126, 129, 130, 135, 137, 142, 151, 152, 166, 174, 185, 186, 187, 193, 194, 195, 197, 198, 199, 200, 201, 202, 203, 204, 278, 285, 286, 287, 291, 312, 313, 329, 336, 340, 344, 355, 366, 370, 402, 413, 414, 416, 428, 429, 431, 432, 438, 452, 460, 464, 472, 473, 475, 479, 484, 485], "ones": [0, 3, 8, 79, 89, 92, 135, 138, 146, 147, 182, 183, 195, 202, 204, 332, 422, 426, 439, 466, 469, 472, 478, 484], "ones_lik": [0, 3, 8], "onli": [12, 13, 22, 23, 24, 25, 26, 27, 28, 34, 36, 38, 41, 42, 44, 45, 46, 47, 52, 53, 55, 59, 60, 61, 63, 64, 65, 70, 71, 78, 79, 82, 83, 86, 87, 88, 90, 93, 97, 116, 117, 118, 119, 120, 121, 122, 125, 126, 127, 128, 129, 130, 131, 134, 137, 139, 143, 144, 145, 152, 153, 154, 155, 156, 157, 158, 160, 162, 166, 168, 170, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 183, 184, 188, 189, 190, 192, 193, 194, 197, 200, 267, 285, 291, 308, 327, 328, 330, 337, 338, 339, 342, 345, 346, 378, 389, 391, 392, 393, 394, 395, 396, 404, 405, 406, 407, 411, 412, 415, 419, 420, 421, 422, 433, 434, 435, 436, 439, 452, 456, 460, 467, 469, 472, 475, 478, 479, 484, 485], "onto": [285, 473], "oom": 473, "op": 378, "open": [21, 77, 151, 170, 171, 318, 370, 372, 374, 375, 377, 384, 460, 467, 473, 475, 485], "openmp": [456, 461, 463, 485], "oper": [7, 16, 17, 81, 82, 83, 89, 118, 133, 138, 158, 197, 288, 333, 342, 393, 400, 422, 435, 439, 441, 445, 454, 456, 466, 467, 472, 478, 479], "operand": [82, 83], "opposit": [267, 285], "optim": [47, 82, 83, 165, 291, 456, 466, 472, 481, 485], "option": [1, 12, 13, 14, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 34, 37, 41, 43, 44, 45, 46, 49, 51, 52, 53, 54, 55, 57, 58, 59, 60, 61, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 75, 76, 77, 78, 79, 82, 84, 85, 86, 87, 88, 90, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 113, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 131, 134, 135, 137, 138, 139, 143, 144, 145, 146, 147, 153, 154, 155, 156, 157, 160, 162, 165, 166, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 256, 267, 287, 288, 306, 308, 317, 325, 327, 328, 330, 331, 332, 333, 334, 335, 336, 338, 339, 340, 341, 344, 345, 346, 347, 348, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 373, 374, 375, 376, 377, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 391, 392, 393, 394, 395, 396, 397, 399, 401, 402, 404, 405, 406, 407, 408, 410, 411, 412, 413, 414, 415, 416, 418, 420, 421, 422, 424, 425, 426, 427, 428, 429, 431, 432, 433, 434, 435, 436, 437, 438, 439, 443, 444, 460, 461, 463, 468, 473, 475, 477, 481, 482, 484], "ord": [166, 469], "order": [4, 12, 13, 22, 23, 24, 25, 26, 27, 28, 31, 32, 34, 44, 45, 46, 52, 53, 59, 60, 63, 64, 65, 70, 71, 75, 77, 78, 82, 83, 86, 87, 88, 90, 93, 99, 100, 101, 104, 106, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 125, 126, 127, 128, 134, 139, 143, 144, 145, 153, 154, 155, 156, 157, 160, 162, 165, 166, 169, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 183, 184, 187, 188, 189, 190, 191, 192, 213, 265, 266, 267, 287, 288, 300, 303, 305, 306, 311, 317, 318, 320, 322, 327, 328, 330, 334, 335, 338, 339, 341, 345, 346, 347, 355, 389, 391, 392, 394, 395, 396, 398, 401, 404, 405, 406, 407, 408, 411, 412, 415, 420, 421, 422, 433, 434, 436, 437, 454, 464, 465, 466, 483, 484, 485], "ordertyp": [4, 389, 394, 437], "ordin": 168, "ordinari": [138, 158], "org": [352, 460, 464, 465, 471, 476], "organ": 476, "orient": [342, 419], "origin": [12, 13, 22, 23, 24, 25, 26, 27, 28, 41, 44, 45, 46, 49, 51, 52, 53, 59, 60, 63, 64, 65, 70, 71, 78, 86, 87, 88, 90, 93, 116, 117, 118, 119, 120, 121, 122, 125, 127, 128, 134, 139, 143, 144, 145, 153, 154, 155, 156, 157, 166, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 184, 186, 187, 188, 189, 190, 191, 192, 199, 201, 203, 327, 328, 330, 336, 338, 339, 344, 345, 346, 391, 392, 394, 395, 396, 397, 404, 405, 406, 407, 411, 412, 415, 420, 421, 433, 434, 435, 462, 467, 472, 482, 485], "ortho": [94, 95, 96, 98, 99, 100, 101, 103, 104, 105, 106, 107, 108, 109], "orthonorm": 167, "oserror": 171, "other": [6, 12, 13, 21, 22, 23, 24, 25, 26, 27, 28, 34, 44, 45, 46, 49, 50, 52, 53, 54, 55, 59, 60, 61, 63, 64, 65, 70, 71, 76, 78, 82, 86, 87, 88, 90, 93, 99, 100, 101, 104, 106, 116, 117, 118, 119, 120, 121, 122, 125, 127, 128, 134, 135, 139, 143, 144, 145, 153, 154, 155, 156, 157, 165, 166, 170, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 184, 188, 189, 190, 191, 192, 201, 203, 267, 268, 275, 285, 308, 310, 313, 327, 328, 330, 336, 338, 339, 344, 345, 346, 366, 383, 384, 391, 392, 395, 396, 404, 405, 406, 407, 411, 412, 415, 420, 421, 426, 433, 434, 454, 460, 464, 473, 476, 479, 484], "otherwis": [15, 29, 30, 34, 35, 41, 66, 67, 76, 138, 170, 185, 186, 193, 194, 197, 198, 199, 200, 201, 203, 267, 287, 317, 336, 344, 378, 389, 394, 401, 417, 424, 425, 426, 438, 442, 456, 472, 476], "ouput": 456, "our": [460, 467, 471, 473, 478, 484, 485], "out": [12, 13, 14, 16, 17, 19, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 34, 37, 42, 43, 44, 45, 46, 47, 52, 53, 54, 55, 57, 58, 59, 60, 61, 63, 64, 65, 67, 68, 69, 70, 71, 72, 76, 78, 79, 82, 84, 85, 86, 87, 88, 90, 93, 94, 95, 96, 98, 99, 100, 101, 103, 104, 105, 106, 107, 108, 109, 113, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 127, 128, 129, 130, 134, 135, 136, 138, 139, 141, 143, 144, 145, 146, 147, 148, 151, 152, 153, 154, 155, 156, 157, 165, 168, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 188, 189, 190, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 261, 262, 263, 264, 269, 270, 271, 276, 277, 280, 288, 294, 295, 296, 301, 314, 316, 321, 322, 324, 327, 328, 330, 331, 332, 333, 335, 336, 338, 339, 340, 341, 344, 345, 346, 347, 348, 349, 350, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 373, 374, 375, 376, 377, 380, 381, 382, 383, 384, 385, 386, 387, 388, 390, 391, 392, 395, 396, 399, 404, 405, 406, 407, 408, 409, 411, 412, 414, 415, 416, 418, 419, 420, 421, 422, 424, 433, 434, 438, 439, 442, 443, 444, 463, 465, 471, 476, 481, 484, 485], "outcom": [355, 485], "outer": [0, 3, 8, 83], "outermost": [48, 54], "outlin": 472, "output": [12, 13, 14, 15, 16, 17, 19, 21, 22, 23, 24, 25, 26, 27, 28, 42, 43, 44, 45, 46, 47, 48, 52, 53, 55, 57, 59, 60, 61, 63, 64, 65, 68, 69, 70, 71, 76, 77, 78, 79, 82, 83, 84, 86, 87, 88, 90, 92, 93, 94, 95, 96, 98, 99, 100, 101, 104, 105, 106, 112, 116, 117, 118, 119, 120, 121, 122, 125, 127, 128, 129, 130, 134, 135, 136, 137, 138, 139, 140, 141, 143, 144, 145, 151, 152, 153, 154, 155, 156, 157, 165, 168, 170, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 183, 184, 185, 186, 187, 188, 189, 190, 192, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 318, 327, 328, 330, 333, 334, 336, 338, 339, 340, 344, 345, 346, 347, 348, 350, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 370, 373, 374, 375, 376, 377, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 390, 391, 392, 393, 395, 396, 397, 399, 402, 404, 405, 406, 407, 411, 412, 415, 416, 420, 421, 422, 423, 424, 433, 434, 435, 436, 438, 439, 445, 454, 456, 463, 472, 473, 481, 485], "outsid": [54, 55, 77, 131, 466], "over": [12, 13, 14, 16, 17, 19, 22, 23, 24, 25, 26, 27, 28, 41, 44, 45, 46, 52, 53, 59, 60, 63, 64, 65, 68, 69, 70, 71, 78, 79, 82, 83, 86, 87, 88, 90, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 113, 116, 117, 118, 119, 120, 121, 122, 125, 127, 128, 131, 134, 138, 139, 143, 144, 145, 153, 154, 155, 156, 157, 166, 170, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 184, 185, 187, 188, 189, 190, 192, 195, 196, 197, 198, 202, 204, 286, 287, 288, 301, 314, 327, 328, 330, 334, 338, 339, 340, 342, 345, 346, 348, 352, 367, 369, 374, 375, 377, 383, 384, 387, 391, 392, 395, 396, 397, 404, 405, 406, 407, 411, 412, 415, 416, 418, 419, 420, 421, 422, 433, 434, 436, 438, 456, 471, 472, 485], "overal": [456, 463, 472, 485], "overcom": 318, "overflow": [21, 116, 310], "overhead": [456, 472, 479], "overlap": 466, "overrid": [85, 124, 332, 444, 475], "overridden": [1, 67], "oversubscrib": 473, "overwrite_input": [186, 199, 201, 203, 336, 344], "own": [285, 308, 365, 460, 485], "owndata": 285, "owner": [285, 308, 476], "p": [88, 187, 348, 352, 355, 361, 362, 365, 425, 485], "pack": [334, 389, 436, 454], "packag": [201, 203, 336, 344, 467, 470, 473, 479, 485], "packbit": [0, 3, 8], "pad": [8, 61, 94, 95, 96, 98, 99, 100, 101, 103, 104, 106, 107, 109, 334, 436], "pade": 163, "page": [352, 460, 474], "pair": [83, 94, 95, 96, 98, 99, 100, 101, 103, 104, 105, 106, 107, 108, 109, 118], "pairwis": 469, "pairwise_dist": 469, "paper": [201, 203, 336, 344, 466], "parallel": [29, 30, 68, 69, 94, 95, 96, 98, 99, 100, 101, 103, 104, 105, 106, 107, 108, 109, 159, 160, 161, 162, 195, 196, 461, 472, 477, 485], "paramet": [1, 2, 6, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 256, 267, 275, 282, 283, 284, 287, 288, 291, 306, 308, 317, 318, 319, 322, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 373, 374, 375, 376, 377, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 431, 432, 433, 434, 435, 436, 437, 438, 439, 441, 442, 443, 444, 463, 484, 485], "parameter": [347, 348, 350, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 376, 381, 382, 383, 384, 385, 386, 387, 388], "parenthes": 165, "pareto": [0, 3, 8], "parse_arg": 485, "parser": 485, "part": [18, 57, 136, 141, 142, 148, 149, 159, 160, 161, 162, 190, 290, 304, 390, 399, 409, 460], "parti": 475, "partial": [186, 199, 470, 485], "particular": 476, "particularli": 485, "partit": [0, 3, 8, 31, 68, 265, 472, 479, 485], "pass": [14, 16, 17, 18, 19, 34, 48, 151, 171, 182, 185, 197, 200, 202, 267, 340, 351, 416, 426, 461, 463, 479, 483, 485], "past": 485, "patch": 482, "path": [83, 171, 282, 318, 461], "pathlib": [171, 282, 318], "pathlik": 171, "pattern": [41, 456, 484], "pcg64": [3, 8], "pcg64dxsm": [3, 8], "pcolor": 471, "pdf": [383, 464], "peak": [358, 383], "peebl": [352, 365], "pend": [34, 423], "pentadiagon": 466, "per": [456, 461, 463, 467, 472, 485], "percent": 366, "percentag": [456, 473, 481, 485], "percentil": [0, 3, 8, 201], "perform": [14, 19, 31, 37, 41, 54, 55, 61, 76, 82, 95, 96, 100, 101, 106, 109, 113, 158, 163, 182, 185, 198, 204, 288, 340, 342, 416, 438, 439, 464, 465, 467, 470, 472, 473, 480, 483, 485], "performa": 485, "perhap": 77, "period": 466, "perlmutt": 485, "permiss": [54, 464, 465, 471, 476], "permit": [460, 467, 476, 484], "permut": [3, 8, 322, 425], "permute_dim": [3, 8], "person": [460, 476], "peyton": 352, "pg": 166, "phase": 485, "philox": [3, 8], "pi": [18, 385, 464, 466, 472], "pick": [461, 467], "pickl": [171, 251, 256, 282, 283], "piec": 485, "piecewis": [3, 8], "pil": [467, 485], "pillow": 485, "pin": 473, "pinv": [3, 8], "pip": 475, "pipe": 481, "pixel": [81, 133, 400, 441, 471], "place": [0, 3, 8, 14, 15, 16, 17, 19, 55, 58, 68, 69, 89, 110, 137, 185, 186, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 300, 311, 322, 336, 340, 341, 342, 344, 394, 397, 399, 414, 416, 418, 424, 438, 452, 477], "plai": 485, "plain": [456, 463, 465], "plan": 463, "plane": [18, 398], "platform": [68, 69, 195, 196, 202, 204, 340, 373, 416, 475], "pleas": [36, 80, 132, 187, 430, 440, 460, 470, 473, 475], "plot": [464, 466, 467, 469, 485], "plt": [464, 466, 467, 469, 471, 485], "plu": 174, "png": [467, 485], "point": [21, 42, 47, 68, 69, 79, 82, 94, 98, 99, 103, 104, 106, 107, 126, 129, 130, 140, 152, 164, 183, 185, 195, 196, 198, 278, 306, 328, 371, 384, 399, 401, 422, 454, 456, 461, 465, 466, 469, 472, 478, 485], "poisson": [0, 3, 8, 352], "poisson_process": 352, "poli": [3, 8], "poly1d": [3, 8], "polyadd": [3, 8], "polyd": [3, 8], "polydiv": [3, 8], "polyfit": [3, 8], "polyint": [3, 8], "polymul": [3, 8], "polysub": [3, 8], "polyv": [3, 8], "pool": 473, "popul": 369, "port": [372, 472], "portion": [476, 485], "posit": [0, 3, 8, 15, 18, 21, 43, 54, 75, 89, 92, 99, 100, 101, 104, 116, 144, 147, 158, 164, 191, 313, 347, 355, 358, 366, 368, 371, 397, 399, 402, 424, 465, 485], "possess": [6, 275], "possibl": [12, 13, 22, 23, 24, 25, 26, 27, 28, 39, 40, 44, 45, 46, 47, 52, 53, 59, 60, 63, 64, 65, 70, 71, 78, 83, 86, 87, 88, 90, 93, 116, 117, 118, 119, 120, 121, 122, 125, 127, 128, 131, 134, 139, 143, 144, 145, 153, 154, 155, 156, 157, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 184, 188, 189, 190, 192, 267, 285, 327, 328, 330, 338, 339, 345, 346, 391, 392, 394, 395, 396, 404, 405, 406, 407, 410, 411, 412, 415, 420, 421, 425, 433, 434, 460, 463, 473, 476, 477, 479, 484], "possibli": [319, 478], "post": 473, "potenti": [278, 478, 484], "pow": [3, 8, 250], "power": [0, 3, 8, 116, 164, 485], "pp": [201, 203, 336, 344, 365], "pr": 460, "practic": [473, 483], "pre": [34, 423, 460, 461], "precis": [41, 67, 68, 69, 82, 116, 182, 195, 196, 202, 204, 310, 318, 319, 340, 373, 416, 424, 456, 478, 485], "predict": 472, "prefer": [79, 473], "preload": 456, "preload_cudalib": 445, "prepend": [48, 76, 137, 183, 423], "prescrib": 473, "present": [16, 17, 79, 138, 197, 200, 422, 439], "preserv": [14, 19, 34, 38, 39, 40, 55, 57, 76, 82, 113, 114, 115, 160, 162, 183, 186, 199, 267, 288, 306, 325, 401, 424], "press": 166, "pressur": 267, "prevent": [460, 485], "previou": [41, 460], "previous": [285, 485], "price": [468, 485], "primarili": 48, "principl": [352, 365], "print": [77, 456, 463, 464, 465, 466, 469, 470, 471, 481, 485, 486], "printabl": 83, "printopt": [3, 8], "prior": [76, 461, 476, 485], "prior_distance_sum": 469, "probabl": [2, 67, 131, 186, 199, 347, 348, 352, 353, 355, 362, 365, 383, 385, 388], "problem": [318, 460, 470, 472, 473, 479, 484, 485], "proc": 473, "proce": 485, "process": [42, 158, 352, 462, 473, 484, 485], "processor": [463, 472, 473, 484, 485], "procur": 476, "prod": [0, 3, 8, 202, 310], "produc": [6, 285, 317, 318, 342, 419, 471, 478, 485], "product": [68, 79, 83, 138, 151, 165, 183, 195, 202, 204, 280, 301, 310, 333, 340, 422, 439, 454, 465, 472, 474, 476, 485], "product_along_axi": 340, "prof": 472, "profil": 466, "profit": 476, "program": [461, 472, 473, 474, 477, 482, 485, 486], "project": [445, 460, 464, 475], "promot": [111, 116, 183, 423, 476], "prone": [472, 485], "propag": [68, 69, 195, 196, 478], "proper": [454, 472], "properli": [308, 485], "properti": [6, 205, 268, 275, 278, 281, 285, 286, 290, 293, 297, 298, 304, 309, 310, 313, 322, 450], "proport": 388, "propos": 460, "protocol": 426, "prototyp": 85, "provid": [1, 8, 12, 13, 22, 23, 24, 25, 26, 27, 28, 29, 30, 44, 45, 46, 52, 53, 54, 58, 59, 60, 63, 64, 65, 70, 71, 78, 80, 81, 82, 83, 86, 87, 88, 90, 93, 116, 117, 118, 119, 120, 121, 122, 125, 127, 128, 131, 133, 134, 139, 143, 144, 145, 146, 147, 153, 154, 155, 156, 157, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 183, 184, 185, 188, 189, 190, 192, 193, 194, 198, 202, 209, 308, 322, 327, 328, 330, 338, 339, 345, 346, 370, 371, 373, 391, 392, 395, 396, 400, 404, 405, 406, 407, 411, 412, 414, 415, 418, 420, 421, 433, 434, 435, 436, 441, 460, 473, 474, 476, 484, 485], "pseudonym": 460, "ptp": [3, 8], "public": 460, "publish": [473, 476], "pull": [1, 351, 460, 461], "purpos": [166, 476], "put": [0, 3, 8, 337, 342, 343, 464, 485], "put_along_axi": [0, 3, 8], "put_result": 464, "putmask": [0, 3, 8], "pwd": 461, "py": [461, 463, 464, 473, 475, 476, 477, 481, 482, 485, 486], "pyarray_resolvewritebackifcopi": [285, 308], "pypi": 485, "pyplot": [464, 466, 467, 469, 471, 485], "python": [21, 118, 278, 291, 310, 317, 318, 319, 461, 464, 465, 471, 474, 475, 477, 478, 479, 484, 485, 486], "python3": 461, "q": [167, 201, 203, 336, 344], "qo": 485, "qr": [0, 3, 8], "quadrant": 27, "quadrat": 485, "quantil": [0, 3, 8, 201, 203, 336], "quantiti": 485, "queri": [473, 485], "question": [72, 474, 478], "quick": [318, 482], "quickli": [151, 465], "quicksort": [32, 408], "r": [81, 133, 167, 201, 203, 336, 344, 365, 400, 441, 464, 485], "r0": 137, "rad2deg": [0, 3, 8, 71], "radian": [3, 8, 18, 70, 71, 345], "raindrop": 352, "rainstorm": 352, "rais": [14, 16, 17, 19, 41, 43, 48, 54, 57, 75, 77, 110, 116, 159, 160, 161, 162, 164, 166, 167, 168, 169, 171, 185, 186, 193, 194, 197, 199, 200, 201, 202, 203, 269, 285, 302, 316, 336, 339, 340, 341, 344, 350, 368, 410, 413, 416, 418, 424], "ram": 486, "ran": 473, "rand": [0, 3, 8, 485], "randint": [0, 3, 8, 373], "randn": [0, 3, 8, 485], "random": [0, 445, 454, 469, 485], "random_integ": [0, 3, 8], "random_sampl": [0, 3, 8, 372, 375, 377, 384], "random_se": 469, "randomli": [357, 371, 469], "randomst": [3, 8], "ranf": [3, 8], "rang": [18, 21, 54, 77, 131, 187, 341, 361, 366, 418, 454, 469, 470, 471, 472, 479, 484, 485], "rank": [91, 168, 388, 472, 475, 485], "raphson": 468, "rare": 460, "rate": [352, 464, 485], "rather": [21, 75, 285, 456, 479, 484], "ratio": 353, "ration": 454, "ravel": [0, 3, 8, 112, 166, 287], "ravel_multi_index": [3, 8], "raw": 317, "rawdata": 256, "rayleigh": [0, 3, 8], "rbf": 467, "re": [20, 39, 40, 58, 112, 397, 485], "reach": [48, 362, 460], "read": [171, 282, 285, 389, 394, 456, 467, 485], "readi": 460, "readonli": 51, "real": [0, 3, 8, 18, 35, 98, 104, 105, 106, 107, 108, 109, 136, 148, 158, 160, 162, 399, 409, 454, 460, 472], "real_if_clos": [3, 8], "realli": [94, 99, 104, 105, 107, 108, 460, 484], "realm": 483, "realm_default_arg": 477, "rearrang": 454, "reason": [34, 106, 460], "rebuild": [81, 133, 400, 441], "recarrai": [3, 8], "receiv": 472, "reciproc": [0, 3, 8], "recommend": [2, 54, 479, 483, 485], "reconstruct": 435, "record": [3, 8, 460], "recov": 318, "recreat": 319, "recurs": 76, "recv": 472, "recv_typ": 472, "red": [466, 469], "redistribut": [460, 476], "reduc": [14, 16, 17, 19, 29, 30, 41, 185, 186, 187, 193, 194, 197, 198, 199, 200, 201, 202, 203, 204, 267, 336, 340, 344, 416, 438, 466, 472, 473, 485], "reduct": [14, 19, 201, 203, 336, 344, 438, 483, 485], "refer": [14, 19, 36, 49, 51, 68, 69, 80, 92, 95, 96, 100, 101, 106, 109, 132, 146, 147, 166, 185, 187, 195, 196, 198, 201, 203, 209, 261, 262, 263, 264, 265, 266, 269, 270, 271, 272, 273, 279, 280, 285, 294, 295, 296, 299, 300, 301, 302, 303, 305, 311, 312, 313, 314, 315, 316, 321, 323, 324, 336, 340, 344, 352, 365, 386, 389, 394, 399, 416, 426, 430, 438, 440, 469, 472, 473, 474, 484, 485], "referenc": 308, "reflect": [285, 473], "regard": 475, "regardless": [19, 132, 440, 473], "region": 473, "reinterpret": 325, "reject": 460, "rel": [15, 67, 140], "relabel": 469, "relat": [347, 472, 484, 485], "relationship": [67, 386], "releas": [460, 476, 479, 485], "relev": [170, 310], "reli": 61, "remain": [12, 13, 19, 22, 23, 24, 25, 26, 27, 28, 44, 45, 46, 52, 53, 59, 60, 63, 64, 65, 70, 71, 78, 86, 87, 88, 90, 93, 109, 116, 117, 118, 119, 120, 121, 122, 125, 127, 128, 131, 134, 139, 143, 144, 145, 153, 154, 155, 156, 157, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 184, 188, 189, 190, 191, 192, 201, 203, 285, 327, 328, 330, 336, 338, 339, 344, 345, 346, 366, 391, 392, 394, 395, 396, 404, 405, 406, 407, 411, 412, 415, 420, 421, 433, 434], "remaind": [0, 3, 8, 118, 121, 189], "remot": 485, "remov": [29, 30, 75, 89, 183, 193, 194, 197, 312, 340, 413, 416, 424, 472, 478], "reopen": 460, "reorder": [113, 191, 288], "rep": 423, "repeat": [0, 3, 8, 67, 95, 96, 100, 101, 106, 110, 159, 160, 161, 162, 164, 187, 337, 341, 343, 423, 485], "repeated_arrai": 393, "repeatedli": [471, 485], "repetit": [393, 423], "replac": [55, 195, 196, 302, 341, 418, 465, 473, 474, 485, 486], "replic": 423, "repo": 460, "report": 456, "report_coverag": 445, "report_dump_callstack": 445, "report_dump_csv": 445, "repositori": [460, 472], "repr": 252, "repres": [41, 67, 82, 99, 137, 146, 147, 187, 334, 358, 436, 438, 466, 467, 469, 472, 473, 478], "represent": [83, 137, 452], "reproduc": [469, 476], "req": 472, "request": [352, 367, 460, 469, 472, 473], "requir": [3, 8, 34, 171, 456, 461, 462, 464, 465, 471, 472, 473, 475, 481, 483, 484], "requri": 485, "res2": [39, 40], "rese": 378, "research": [464, 472, 485], "resembl": 382, "reserv": [463, 473, 476, 485], "reset": 6, "reshap": [0, 3, 8, 81, 89, 309, 322, 400, 441, 473, 478], "reshaped_arrai": 394, "resid": 183, "resiz": [3, 8, 89, 485], "resolut": [466, 472], "resourc": [464, 473, 483, 486], "respect": [61, 126, 183, 308, 466, 473, 485], "respons": [460, 472, 485], "rest": 36, "restor": 397, "restrict": 476, "result": [6, 12, 13, 14, 16, 17, 18, 19, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 34, 41, 43, 44, 45, 46, 52, 53, 54, 55, 58, 59, 60, 63, 64, 65, 67, 68, 69, 70, 71, 72, 75, 76, 77, 78, 83, 85, 86, 87, 88, 89, 90, 91, 93, 105, 108, 111, 116, 117, 118, 119, 120, 121, 122, 124, 125, 127, 128, 131, 134, 137, 138, 139, 143, 144, 145, 146, 147, 153, 154, 155, 156, 157, 159, 161, 166, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 267, 306, 318, 325, 327, 328, 330, 332, 333, 334, 335, 336, 338, 339, 340, 342, 344, 345, 346, 350, 370, 373, 374, 375, 377, 382, 391, 392, 394, 395, 396, 399, 401, 404, 405, 406, 407, 408, 410, 411, 412, 414, 415, 416, 418, 419, 420, 421, 422, 423, 424, 426, 433, 434, 435, 438, 439, 444, 456, 463, 464, 465, 466, 471, 472, 478, 479, 485], "result_typ": [3, 8, 464], "ret": 38, "retain": [12, 13, 22, 23, 24, 25, 26, 27, 28, 44, 45, 46, 52, 53, 59, 60, 63, 64, 65, 70, 71, 78, 86, 87, 88, 90, 93, 116, 117, 118, 119, 120, 121, 122, 125, 127, 128, 134, 139, 143, 144, 145, 153, 154, 155, 156, 157, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 184, 188, 189, 190, 192, 327, 328, 330, 338, 339, 345, 346, 391, 392, 395, 396, 404, 405, 406, 407, 411, 412, 415, 420, 421, 433, 434, 476], "retstep": 170, "return": [2, 6, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 206, 207, 208, 209, 210, 212, 213, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 248, 249, 250, 252, 253, 254, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 270, 271, 273, 275, 279, 280, 283, 286, 287, 288, 291, 294, 295, 296, 299, 301, 303, 305, 306, 310, 314, 315, 317, 319, 320, 321, 322, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 338, 339, 340, 342, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 441, 442, 443, 444, 452, 464, 465, 467, 469, 470, 471, 473, 483, 485], "return_count": 435, "return_index": 435, "return_invers": 435, "retval": 41, "revers": [77, 113, 114, 115, 288, 322, 334, 389, 398, 425, 436], "review": [462, 473, 475], "rf": 485, "rfft": [0, 3, 8, 104, 109], "rfft2": [0, 3, 8, 105], "rfftfreq": [3, 8], "rfftn": [0, 3, 8, 106, 107, 108], "rh": [280, 466], "right": [55, 57, 75, 77, 114, 134, 159, 160, 306, 383, 395, 401, 424, 460, 466, 472, 475, 476], "right_shift": [0, 3, 8], "rightmost": 131, "rint": [0, 3, 8], "rippl": 42, "risk": [464, 472, 485], "river": 472, "rk_hypergeometric_hrua": 476, "rk_hypergeometric_hyp": 476, "rk_triangular": 476, "rm": 485, "rn": 137, "rng": 469, "rober": 485, "robert": 476, "roll": [0, 3, 8], "rollaxi": [3, 8], "root": [3, 8, 52, 411, 461], "rot90": [0, 3, 8], "rotat": 398, "roughli": 485, "round": [0, 21, 384, 396, 454], "rounded_arrai": 399, "roundoff": 118, "routin": [445, 452, 456, 461], "row": [34, 67, 92, 114, 115, 135, 165, 287, 313, 389, 400, 426, 428, 437, 440, 441, 467, 472, 485], "row_stack": [3, 8], "rowvar": 67, "rsqrt2pi": 464, "rst": 313, "rt": 485, "rtol": [15, 140], "rule": [21, 41, 48, 111, 366, 479], "run": [182, 355, 460, 461, 462, 471, 473, 474, 475, 477, 481, 482, 483, 484, 486], "run_kmean": 469, "runfil": 485, "runtim": [197, 200, 456, 463, 472, 473, 477, 479, 482, 484], "runtimeerror": 285, "runtimewarn": [464, 470, 473], "rv": 476, "s0": 485, "s_0": 485, "s_0n": 485, "safe": [58, 82, 171, 183, 267], "sai": [473, 479], "salloc": 485, "same": [14, 15, 16, 17, 19, 20, 29, 30, 31, 32, 34, 35, 41, 43, 48, 54, 56, 58, 61, 67, 68, 69, 75, 76, 77, 81, 85, 91, 99, 100, 101, 106, 124, 126, 131, 133, 146, 147, 148, 164, 165, 185, 186, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 267, 281, 305, 306, 310, 313, 320, 322, 325, 332, 334, 335, 336, 337, 340, 343, 344, 389, 393, 397, 399, 400, 401, 402, 408, 409, 414, 416, 418, 422, 424, 427, 429, 432, 436, 437, 438, 441, 444, 460, 464, 465, 467, 469, 470, 471, 473, 475, 482, 484, 485], "same_kind": [12, 13, 22, 23, 24, 25, 26, 27, 28, 44, 45, 46, 52, 53, 58, 59, 60, 63, 64, 65, 70, 71, 78, 82, 86, 87, 88, 90, 93, 116, 117, 118, 119, 120, 121, 122, 125, 127, 128, 134, 139, 143, 144, 145, 153, 154, 155, 156, 157, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 183, 184, 188, 189, 190, 192, 267, 327, 328, 330, 338, 339, 345, 346, 391, 392, 395, 396, 404, 405, 406, 407, 411, 412, 415, 420, 421, 433, 434], "sampl": [42, 47, 67, 102, 126, 129, 131, 152, 170, 201, 203, 336, 344, 347, 348, 350, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 373, 374, 375, 376, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 445, 454], "satisfi": [34, 77, 91, 267, 388, 402, 470, 473, 484], "save": [3, 8, 186, 199, 201, 203, 336, 344, 456, 460, 466, 481], "savetxt": [3, 8], "savez": [3, 8], "savez_compress": [3, 8], "scalabl": [472, 473, 484, 485], "scalar": [12, 13, 15, 16, 17, 18, 22, 23, 24, 25, 26, 27, 28, 35, 38, 44, 45, 46, 48, 52, 53, 55, 59, 60, 63, 64, 65, 70, 71, 76, 78, 79, 86, 87, 88, 90, 93, 110, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 131, 134, 136, 138, 139, 140, 143, 144, 145, 150, 153, 154, 155, 156, 157, 168, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 187, 188, 189, 190, 192, 197, 200, 201, 202, 203, 204, 284, 291, 306, 319, 326, 327, 328, 330, 336, 338, 339, 340, 344, 345, 346, 347, 348, 350, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 376, 379, 381, 382, 383, 384, 385, 386, 387, 388, 390, 391, 392, 395, 396, 401, 402, 404, 405, 406, 407, 411, 412, 415, 416, 418, 420, 421, 422, 433, 434, 452, 483, 484], "scale": [83, 94, 95, 96, 98, 99, 100, 101, 103, 104, 105, 106, 107, 108, 109, 352, 354, 356, 358, 359, 365, 366, 376, 380, 381, 386, 387, 467, 472, 473, 474, 484, 485], "scatter": [469, 485], "schedul": [464, 465, 471, 473], "scheme": 468, "schole": [468, 475], "scientif": [472, 473, 485], "scientist": 472, "scikit": 461, "scipi": [163, 366, 467, 485], "scp": 485, "script": [461, 463, 473, 477, 482, 486], "seamlessli": 473, "search": [83, 445, 454, 474], "searchsort": [0, 3, 8, 77], "second": [41, 48, 61, 75, 79, 81, 83, 100, 101, 116, 126, 131, 132, 133, 146, 147, 182, 183, 187, 333, 339, 398, 400, 409, 417, 422, 424, 439, 441, 466, 484, 485], "second_cond": 484, "section": [34, 36, 96, 101, 106, 109, 473, 485], "secur": [171, 485], "see": [12, 13, 15, 16, 17, 22, 23, 24, 25, 26, 27, 28, 34, 44, 45, 46, 48, 52, 53, 55, 59, 60, 63, 64, 65, 67, 68, 69, 70, 71, 72, 74, 78, 82, 86, 87, 88, 90, 93, 94, 95, 96, 98, 99, 100, 101, 103, 104, 105, 106, 107, 108, 109, 116, 117, 118, 119, 120, 121, 122, 125, 127, 128, 131, 134, 139, 140, 143, 144, 145, 153, 154, 155, 156, 157, 166, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 184, 187, 188, 189, 190, 192, 195, 196, 197, 200, 202, 204, 267, 275, 308, 322, 327, 328, 330, 338, 339, 340, 345, 346, 370, 373, 391, 392, 395, 396, 404, 405, 406, 407, 411, 412, 415, 416, 420, 421, 428, 429, 431, 432, 433, 434, 435, 438, 450, 452, 461, 463, 464, 465, 466, 467, 470, 471, 473, 475, 476, 478, 484, 485, 486], "seed": [0, 1, 3, 8, 351, 454, 469], "seedsequ": [3, 8], "seek": [171, 470], "seem": 460, "seen": 347, "segment": 285, "seldom": 116, "select": [0, 3, 8, 16, 17, 57, 165, 197, 271, 357, 413, 418, 438, 469, 472, 485], "selectkind": [31, 335], "selector": 163, "self": [6, 205, 206, 207, 208, 209, 210, 212, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 248, 249, 250, 252, 253, 254, 255, 257, 258, 259, 260, 271, 285], "sell": 476, "semant": 131, "send": 472, "send_typ": 472, "sens": [81, 133, 400, 441, 478], "sep": 318, "separ": [82, 318, 399, 461, 463, 481, 484, 485], "sequenc": [18, 31, 34, 39, 40, 48, 50, 54, 56, 58, 81, 83, 95, 96, 100, 101, 105, 106, 108, 109, 131, 133, 137, 151, 165, 170, 186, 191, 199, 201, 203, 256, 335, 336, 337, 344, 367, 398, 400, 402, 414, 422, 423, 441, 479], "seri": 361, "serial": 461, "servic": [463, 476], "session": 485, "set": [12, 13, 14, 16, 17, 19, 22, 23, 24, 25, 26, 27, 28, 29, 30, 41, 44, 45, 46, 52, 53, 59, 60, 63, 64, 65, 67, 70, 71, 73, 78, 86, 87, 88, 90, 93, 116, 117, 118, 119, 120, 121, 122, 125, 127, 128, 134, 135, 139, 143, 144, 145, 153, 154, 155, 156, 157, 166, 170, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 184, 185, 186, 188, 189, 190, 192, 193, 194, 197, 198, 199, 200, 201, 202, 203, 204, 255, 267, 269, 285, 308, 309, 325, 327, 328, 330, 336, 338, 339, 340, 343, 344, 345, 346, 357, 366, 391, 392, 395, 396, 404, 405, 406, 407, 411, 412, 415, 416, 420, 421, 433, 434, 438, 445, 454, 460, 461, 466, 470, 472, 473, 478, 479, 484, 485], "set_bit_gener": [3, 8], "set_devic": 472, "set_printopt": [3, 8], "set_stat": [3, 8], "set_titl": [467, 485], "set_xtick": [467, 485], "set_ytick": [467, 485], "setbufs": [3, 8], "setdevic": 472, "setdiff1d": [3, 8], "seterr": [3, 8], "seterrcal": [3, 8], "setfield": [0, 8], "setflag": [0, 8, 285], "setup": 470, "setxor1d": [3, 8], "sever": [461, 473, 485], "sfc64": [3, 8], "sh": [461, 485], "shall": 476, "shallow": 472, "shape": [0, 2, 3, 4, 6, 8, 12, 13, 14, 16, 17, 19, 20, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 40, 41, 43, 44, 45, 46, 48, 50, 51, 52, 53, 54, 55, 57, 58, 59, 60, 63, 64, 65, 68, 69, 70, 71, 73, 75, 76, 77, 78, 79, 81, 84, 85, 86, 87, 88, 89, 90, 92, 93, 95, 96, 97, 100, 101, 102, 105, 106, 108, 109, 113, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 131, 133, 134, 137, 138, 139, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 163, 164, 165, 168, 169, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 256, 267, 275, 285, 288, 305, 306, 310, 322, 326, 327, 328, 330, 331, 332, 334, 335, 336, 338, 339, 340, 342, 343, 344, 345, 346, 347, 348, 350, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 373, 374, 375, 376, 377, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 391, 392, 393, 394, 395, 396, 397, 399, 400, 401, 404, 405, 406, 407, 408, 409, 411, 412, 413, 414, 415, 416, 418, 420, 421, 422, 423, 424, 426, 427, 432, 433, 434, 436, 437, 438, 439, 441, 442, 443, 444, 454, 465, 469, 483, 484, 485], "share": [275, 472, 473, 485], "shares_memori": [3, 8], "sharp": 485, "sharper": 358, "shift": [97, 102, 155, 366, 395, 397], "short": [3, 8, 285, 317], "shorter": [98, 104, 341], "should": [29, 30, 34, 36, 48, 54, 67, 75, 76, 82, 83, 99, 100, 101, 106, 151, 183, 191, 193, 194, 267, 334, 394, 418, 424, 436, 437, 439, 456, 464, 465, 466, 471, 479, 484, 485], "show": [317, 461, 466, 469, 481, 485], "show_config": [3, 8], "show_runtim": [3, 8], "showcas": 485, "shown": [466, 470, 482, 484, 485], "shuffl": [3, 8], "side": [77, 126, 306, 401, 466, 472], "sigma": [360, 485], "sign": [0, 3, 8, 15, 54, 63, 204, 340, 370, 373, 416], "signal": [42, 98, 103, 352, 365, 467, 485], "signatur": [182, 183, 460], "signbit": [0, 3, 8], "signedinteg": [3, 8], "signific": 472, "significantli": [464, 470, 472, 473, 485], "signoff": 460, "similar": [34, 42, 182, 291, 358, 478, 479, 485], "similarli": 472, "simpl": [67, 82, 319, 454, 465, 472, 485, 486], "simple_mm": 485, "simpler": [473, 485], "simplest": 463, "simpli": [131, 322, 460, 461, 485], "simplifi": [275, 366, 472, 485], "simul": 472, "simultan": [285, 397], "sin": [0, 3, 8, 466], "sinc": [3, 8, 104, 288, 319, 342, 466, 467, 473, 478, 484, 485], "sine": [24, 25, 406, 407, 466], "sing": 166, "singl": [2, 3, 8, 14, 16, 17, 19, 41, 48, 49, 50, 51, 56, 67, 83, 113, 114, 115, 126, 140, 165, 167, 168, 169, 171, 185, 187, 197, 198, 201, 203, 204, 282, 285, 286, 288, 291, 300, 308, 318, 336, 340, 344, 347, 348, 350, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 373, 374, 375, 376, 377, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 398, 413, 416, 422, 438, 456, 470, 473, 474, 484], "singleton": 89, "singular": [166, 168, 169], "sinh": [0, 3, 8], "site": 481, "situat": [352, 460, 473], "sixth": 466, "size": [2, 6, 14, 16, 17, 19, 21, 29, 30, 36, 41, 43, 48, 57, 61, 68, 69, 73, 75, 77, 83, 91, 126, 166, 170, 171, 182, 185, 186, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 291, 293, 318, 336, 337, 340, 343, 344, 347, 348, 350, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 370, 372, 373, 374, 375, 376, 377, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 397, 416, 431, 436, 438, 456, 466, 472, 473, 479, 485], "skbuild_build_opt": 461, "skip": 313, "slice": [16, 17, 57, 163, 193, 194, 195, 196, 197, 200, 202, 204, 271, 285, 342, 419, 456, 466, 472], "slide": 485, "slightli": [47, 163], "slogdet": [3, 8], "slower": 484, "slowest": [389, 394], "small": [15, 163, 471, 473, 479, 482, 484], "smaller": [55, 67, 76, 94, 95, 96, 99, 100, 101, 103, 106, 107, 109, 118, 131, 186, 199, 201, 203, 336, 337, 343, 344, 456], "smallest": [166, 366], "smi": 473, "snippet": [187, 472], "so": [19, 48, 76, 116, 118, 131, 149, 170, 187, 285, 308, 318, 334, 423, 469, 476, 484, 485], "sobel": [467, 485], "sobol": 467, "softwar": [464, 465, 471, 473, 475, 476], "solut": [168, 466, 470, 472], "solv": [0, 3, 8, 454, 466, 470, 472, 485], "solver": 472, "some": [21, 34, 91, 268, 285, 308, 318, 386, 442, 456, 460, 461, 465, 471, 473, 478, 479, 484, 485], "somebodi": 460, "sometim": [319, 354, 381, 478], "soon": 460, "sort": [0, 8, 32, 169, 186, 199, 201, 203, 266, 306, 335, 336, 344, 401, 409, 410, 419, 435, 445, 454, 485], "sort_complex": [0, 3, 8], "sorter": [306, 401], "sortsid": 401, "sorttyp": [32, 408], "sourc": [191, 418, 419, 460, 462, 472, 476, 482, 485], "south": [471, 485], "space": [3, 8, 21, 97, 126, 170, 456, 466], "sparingli": 484, "spars": [137, 187], "speak": 166, "spec": 473, "special": [7, 347, 382, 389, 472, 476], "specif": [2, 79, 456, 464, 465, 471, 472, 476, 485], "specifi": [14, 19, 20, 21, 29, 30, 31, 32, 34, 41, 43, 54, 55, 58, 67, 68, 69, 75, 82, 83, 94, 95, 96, 98, 99, 100, 101, 103, 104, 106, 107, 109, 113, 126, 160, 162, 166, 170, 183, 185, 186, 193, 194, 195, 196, 197, 198, 199, 201, 202, 203, 204, 267, 279, 282, 288, 291, 302, 325, 336, 340, 341, 342, 344, 348, 353, 354, 356, 357, 358, 359, 360, 361, 362, 364, 366, 370, 381, 385, 388, 389, 398, 399, 414, 416, 418, 419, 422, 424, 435, 436, 438, 456, 463, 469, 470, 473, 477, 481, 485], "spectral": 466, "spectrum": [97, 98], "speed": [291, 318], "spelt": 48, "spent": 479, "split": [0, 3, 8, 36, 80, 132, 440, 454], "spread": [365, 438, 485], "sqrt": [0, 3, 8, 464, 467, 485], "sqrt_t": 464, "squar": [0, 3, 8, 135, 158, 159, 160, 161, 162, 164, 168, 182, 350, 353, 363, 364, 411, 469], "squeez": [0, 3, 8, 89], "srun": [477, 485], "ssh": 485, "stabl": [32, 163, 408], "stack": [0, 3, 8, 56, 81, 133, 183, 400, 441, 456, 473], "stackoverflow": 478, "stage": 462, "standard": [291, 310, 322, 350, 360, 365, 366, 371, 379, 380, 381, 382, 452, 454, 460, 464, 465, 471, 477, 479, 482, 485], "standard_cauchi": [0, 3, 8], "standard_exponenti": [0, 3, 8], "standard_gamma": [0, 3, 8], "standard_norm": [3, 8, 382], "standard_t": [0, 3, 8], "start": [21, 83, 99, 170, 202, 204, 278, 340, 416, 460, 463, 464, 465, 466, 471, 472, 479, 484, 485], "start_tim": 485, "state": [256, 374, 375, 377, 454], "statement": [467, 470, 478, 484, 486], "statist": [201, 203, 336, 344, 347, 445, 454], "statistician": [201, 203, 336, 344], "std": [3, 8], "stdout": [456, 463], "stecil": 466, "stegun": 464, "stencil": [466, 468, 472], "step": [21, 83, 170, 313, 460, 461, 472, 478, 479, 484, 485], "stephen": 476, "still": [41, 166, 187, 485], "stock": [464, 485], "stoke": 472, "stop": [21, 170, 464, 465, 471, 484, 485], "storag": 318, "store": [12, 13, 22, 23, 24, 25, 26, 27, 28, 44, 45, 46, 52, 53, 59, 60, 63, 64, 65, 70, 71, 78, 86, 87, 88, 90, 93, 116, 117, 118, 119, 120, 121, 122, 125, 127, 128, 134, 139, 143, 144, 145, 146, 147, 153, 154, 155, 156, 157, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 183, 184, 188, 189, 190, 192, 313, 327, 328, 330, 333, 338, 339, 345, 346, 391, 392, 395, 396, 404, 405, 406, 407, 411, 412, 415, 420, 421, 433, 434, 466, 485], "str": [12, 13, 22, 23, 24, 25, 26, 27, 28, 31, 32, 44, 45, 46, 52, 53, 58, 59, 60, 63, 64, 65, 70, 71, 78, 82, 83, 86, 87, 88, 90, 93, 94, 95, 96, 98, 99, 100, 101, 103, 104, 105, 106, 107, 108, 109, 116, 117, 118, 119, 120, 121, 122, 125, 127, 128, 134, 139, 143, 144, 145, 153, 154, 155, 156, 157, 160, 162, 163, 166, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 184, 187, 188, 189, 190, 192, 201, 203, 256, 257, 267, 282, 302, 318, 320, 327, 328, 330, 335, 336, 338, 339, 341, 344, 345, 346, 391, 392, 395, 396, 404, 405, 406, 407, 408, 411, 412, 415, 420, 421, 433, 434, 456, 467, 469, 485], "str_": [3, 8], "straightforward": [484, 485], "strategi": [456, 485], "stream": 1, "streamlin": 485, "strict": [456, 476], "strictli": 166, "stride": [4, 275, 285, 308, 389, 461], "strike": [464, 485], "string": [61, 163, 171, 187, 256, 282, 283, 285, 308, 318, 349, 452, 461], "string_repr": 83, "strong": 460, "structur": [435, 472, 479, 484, 485], "student": 382, "studi": [386, 468], "style": [285, 287, 389, 437], "sub": [14, 16, 17, 19, 34, 36, 75, 80, 132, 185, 197, 200, 202, 267, 325, 340, 410, 416, 424, 426, 440], "subarrai": [137, 435], "subclass": 37, "subdomain": 472, "subgrid": 472, "subject": 476, "sublicens": 476, "submit": 460, "subok": [34, 49, 51, 267], "subplot": [467, 485], "subscript": [82, 83], "subsequ": 285, "subset": [357, 413, 479], "substanti": [472, 476], "substitut": [470, 476], "subtract": [0, 3, 8, 484], "subtyp": 389, "succe": 484, "success": [348, 355, 362], "suggest": [310, 460, 473, 485], "suit": [463, 485], "suitabl": [291, 306, 322, 342, 401, 419, 485], "sum": [0, 3, 8, 41, 61, 69, 79, 99, 131, 138, 166, 176, 177, 196, 202, 204, 313, 321, 350, 357, 364, 422, 424, 454, 469, 470, 485], "sum_": 166, "sum_along_axi": 416, "sum_along_diagon": 424, "sum_of_weight": 41, "summar": [201, 203, 336, 344], "summari": [3, 8, 463], "summat": [47, 82, 83], "supercomputerloc": 485, "superpod": 474, "suppli": [146, 147, 163, 165, 371], "support": [31, 32, 61, 77, 79, 82, 167, 169, 171, 183, 187, 285, 318, 325, 335, 342, 355, 393, 397, 408, 422, 426, 435, 461, 467, 475, 477, 483, 485], "suppos": 54, "sure": [469, 479], "surfac": 472, "surpris": 76, "surround": 472, "svd": [0, 8], "svdval": 8, "swap": [61, 97], "swapax": [0, 3, 8], "switch": 470, "symmetr": [104, 158, 485], "symmetri": [98, 103], "synchron": [472, 485], "sysmem": 485, "system": [168, 182, 466, 470, 472, 473, 475, 478, 485], "system_mem": 473, "t": [67, 77, 113, 114, 115, 285, 322, 341, 347, 382, 426, 450, 463, 464, 465, 469, 478, 484, 485], "tabl": [166, 388], "tack": 460, "tackl": [472, 485], "tail": 358, "take": [0, 2, 3, 8, 56, 57, 151, 182, 337, 342, 389, 394, 419, 460, 473, 485], "take_along_axi": [0, 3, 8], "taken": [41, 54, 75, 76, 83, 98, 104, 106, 108, 109, 185, 198, 357, 402, 424, 426, 428, 431, 439, 467, 479], "tall": 110, "tan": [0, 3, 8], "tangent": [26, 27, 28, 420, 421], "tanh": [0, 3, 8], "taper": [42, 47, 129, 130, 152], "target": [341, 343, 461], "task": [456, 464, 465, 471, 472, 479, 485], "taylor": 163, "tdma": 466, "teach": [466, 469, 470], "technic": 473, "techniqu": 485, "tell": [313, 473], "templat": 485, "temporari": 456, "tend": 479, "tensor": [83, 422, 456, 461], "tensordot": [0, 3, 8], "tensorinv": [3, 8], "tensorsolv": [3, 8], "term": [47, 79, 83, 99, 100, 101, 104, 138, 183, 422, 439, 466, 475], "termin": [463, 470, 485], "test": [0, 14, 19, 140, 141, 143, 144, 145, 146, 147, 285, 350, 353, 454, 456, 462, 469, 471, 472, 481, 482], "test_view": 463, "test_vstack": 463, "test_wher": 463, "test_window": 463, "testsystem": 463, "text": [318, 460], "tf32": 456, "th": [72, 76, 92, 126, 137, 201, 203, 322, 336, 344, 402, 427, 430], "than": [21, 43, 47, 49, 51, 54, 55, 57, 61, 68, 69, 75, 79, 80, 94, 95, 96, 98, 99, 100, 101, 103, 104, 106, 107, 109, 110, 114, 115, 131, 138, 163, 183, 186, 187, 195, 196, 199, 201, 202, 203, 204, 336, 337, 340, 341, 343, 344, 353, 357, 366, 383, 384, 388, 405, 413, 414, 416, 422, 424, 436, 439, 456, 465, 470, 478, 479, 484, 485], "thei": [13, 15, 27, 44, 45, 46, 49, 63, 68, 69, 76, 77, 78, 86, 116, 118, 119, 120, 121, 125, 127, 128, 134, 153, 154, 155, 156, 157, 176, 177, 178, 180, 181, 183, 184, 188, 189, 192, 195, 196, 306, 328, 330, 339, 348, 389, 392, 395, 401, 415, 433, 452, 467, 469, 479, 484, 485], "them": [56, 452, 460, 469, 473, 484, 485], "themselv": [275, 466], "theorem": 365, "theoret": 485, "theori": 476, "therefor": [160, 162, 355], "theta": 354, "thi": [12, 13, 14, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 33, 34, 37, 41, 43, 44, 45, 46, 48, 49, 51, 52, 53, 54, 55, 58, 59, 60, 63, 64, 65, 70, 71, 72, 73, 76, 77, 78, 79, 81, 82, 83, 86, 87, 88, 90, 93, 94, 95, 96, 97, 98, 99, 100, 101, 104, 105, 106, 107, 108, 109, 110, 112, 114, 115, 116, 117, 118, 119, 120, 121, 122, 125, 127, 128, 131, 133, 134, 138, 139, 143, 144, 145, 150, 151, 153, 154, 155, 156, 157, 160, 162, 165, 166, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 197, 198, 199, 200, 201, 202, 203, 204, 265, 266, 267, 275, 278, 280, 284, 285, 288, 291, 293, 308, 310, 313, 317, 318, 319, 322, 325, 327, 328, 330, 333, 336, 337, 338, 339, 340, 342, 343, 344, 345, 346, 350, 351, 366, 370, 373, 378, 386, 389, 391, 392, 394, 395, 396, 398, 400, 404, 405, 406, 407, 411, 412, 413, 415, 416, 418, 419, 420, 421, 422, 423, 426, 433, 434, 435, 438, 439, 441, 456, 460, 461, 463, 464, 465, 466, 467, 469, 470, 471, 472, 475, 476, 478, 481, 482, 484, 485, 486], "thing": [418, 460, 465, 485], "think": 460, "third": [80, 81, 133, 400, 422, 441, 475, 484], "those": [55, 61, 67, 164, 342, 472, 478], "though": 43, "thought": 385, "thread": [461, 463, 470, 473, 485], "three": [40, 47, 55, 201, 203, 336, 344, 435, 473, 484], "threshold": 456, "through": [14, 16, 17, 19, 34, 151, 182, 185, 187, 197, 200, 202, 267, 340, 416, 456, 485], "throughout": 472, "thu": [54, 171, 423, 484, 485], "thumb": 479, "thunk": 4, "tile": [0, 3, 8, 454], "time": [67, 76, 82, 95, 96, 100, 101, 106, 285, 288, 352, 367, 386, 398, 423, 435, 460, 463, 464, 465, 471, 472, 475, 485], "timedelta64": [3, 8], "timer": 479, "timestep": 472, "tini": 365, "titl": [464, 466], "to_devic": 8, "tobyt": [0, 8, 318, 320], "tofil": [0, 3, 8], "togeth": [15, 58, 67, 99, 151, 183], "tol": [470, 484, 485], "toler": [15, 140, 470, 484], "tolist": [0, 3, 8], "too": [42, 77, 418, 473], "took": 485, "tool": [460, 472, 473, 482], "toolkit": [461, 485], "top": [461, 474], "topic": [462, 473, 483], "topographi": 472, "torchsw": 468, "tort": 476, "tostr": [0, 8], "total": [6, 66, 297, 362, 465, 469, 485], "total_chang": 469, "toward": [131, 328, 398], "trace": [0, 3, 8], "traceback": 456, "tracker": 473, "transfer": [470, 485], "transform": [61, 94, 95, 96, 98, 99, 100, 101, 103, 104, 105, 106, 107, 108, 109, 445, 454, 484], "translat": [373, 466, 484], "transport": 318, "transpos": [0, 3, 8, 67, 158, 205, 454, 465], "trapezoid": [3, 8], "trapz": [3, 8], "travers": 313, "treat": [15, 54, 160, 162, 165, 183, 186, 187, 195, 196, 199, 202, 204, 342, 419, 423, 435], "tree": 461, "tri": [0, 3, 8], "trial": [348, 355], "triangl": [134, 426, 427, 428, 429, 430, 431, 432], "triangular": [0, 3, 8, 42, 158, 160, 162, 167, 465], "tridiagon": 466, "trigger": [473, 478], "trigonometr": [22, 26, 406, 454], "tril": [0, 3, 8, 182, 428, 429, 430], "tril_indic": [0, 3, 8, 429], "tril_indices_from": [0, 3, 8], "trim": 436, "trim_zero": [3, 8], "triu": [0, 3, 8, 182, 431, 432], "triu_indic": [0, 3, 8, 432], "triu_indices_from": [0, 3, 8], "trivial": 460, "true": [4, 12, 13, 14, 15, 16, 17, 18, 19, 22, 23, 24, 25, 26, 27, 28, 29, 30, 34, 35, 41, 44, 45, 46, 52, 53, 57, 59, 60, 63, 64, 65, 67, 70, 71, 76, 77, 78, 82, 83, 86, 87, 88, 90, 91, 93, 110, 116, 117, 118, 119, 120, 121, 122, 125, 127, 128, 131, 134, 137, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 153, 154, 155, 156, 157, 163, 166, 169, 170, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 184, 185, 186, 187, 188, 189, 190, 192, 193, 194, 197, 198, 199, 200, 201, 202, 203, 204, 261, 262, 267, 285, 294, 296, 301, 308, 327, 328, 330, 336, 337, 338, 339, 340, 343, 344, 345, 346, 391, 392, 395, 396, 402, 404, 405, 406, 407, 411, 412, 415, 416, 420, 421, 433, 434, 435, 438, 442, 478, 481], "true_divid": [0, 3, 8, 78], "truli": 285, "trunc": [0, 3, 8], "truncat": [57, 94, 95, 96, 98, 99, 100, 101, 103, 104, 106, 107, 109, 348, 434], "trust": [193, 194], "truth": [127, 128, 156, 157, 178, 180, 181, 452, 454], "try": [465, 466, 467, 470, 473, 478, 480, 483, 485], "tup": [56, 81, 133, 400, 441], "tupl": [2, 4, 6, 12, 13, 14, 16, 17, 19, 22, 23, 24, 25, 26, 27, 28, 36, 37, 41, 44, 45, 46, 50, 51, 52, 53, 59, 60, 63, 64, 65, 66, 70, 71, 73, 74, 78, 83, 84, 85, 86, 87, 88, 89, 90, 93, 97, 102, 113, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 131, 134, 137, 139, 143, 144, 145, 151, 153, 154, 155, 156, 157, 159, 160, 166, 167, 169, 170, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 184, 185, 186, 187, 188, 189, 190, 192, 197, 198, 199, 200, 201, 203, 204, 256, 288, 291, 309, 313, 322, 327, 328, 329, 330, 331, 332, 336, 338, 339, 340, 344, 345, 346, 347, 348, 350, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 370, 373, 374, 375, 376, 377, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 391, 392, 394, 395, 396, 397, 403, 404, 405, 406, 407, 411, 412, 413, 415, 416, 420, 421, 422, 428, 429, 431, 432, 433, 434, 437, 438, 442, 443, 444, 469, 484, 485], "tuple_of_arrai": 329, "turn": [56, 456], "tutori": [473, 483], "tweedi": 386, "twice": 484, "two": [15, 21, 35, 39, 44, 45, 46, 48, 61, 67, 75, 76, 79, 95, 99, 100, 105, 122, 138, 140, 165, 183, 333, 353, 355, 358, 398, 417, 422, 424, 428, 429, 431, 432, 439, 467, 468, 469, 471, 484, 485, 486], "type": [6, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 75, 76, 77, 78, 79, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 123, 124, 125, 126, 127, 128, 129, 130, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 161, 162, 163, 164, 165, 166, 168, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 209, 256, 267, 275, 281, 287, 288, 291, 293, 306, 308, 310, 317, 318, 319, 322, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 338, 339, 340, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 373, 374, 375, 376, 377, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 431, 432, 433, 434, 436, 437, 438, 439, 441, 442, 443, 444, 445, 454, 456, 461, 469, 472, 473, 485], "typecod": 267, "typeerror": [43, 77, 201, 203, 336, 344], "typenam": [3, 8], "typic": [15, 49, 51, 67, 98, 306, 401, 461, 472, 479, 485], "u": [160, 162, 169, 202, 313, 387, 460, 465, 467, 471, 473, 476, 485], "u8_arr": 76, "ubyt": [3, 8], "ufunc": [8, 12, 13, 16, 17, 22, 23, 24, 25, 26, 27, 28, 44, 45, 46, 52, 53, 55, 59, 60, 63, 64, 65, 70, 71, 78, 86, 87, 88, 90, 93, 116, 117, 118, 119, 120, 121, 122, 125, 127, 128, 134, 139, 143, 144, 145, 153, 154, 155, 156, 157, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 184, 188, 189, 190, 192, 197, 200, 202, 204, 327, 328, 330, 338, 339, 340, 345, 346, 391, 392, 395, 396, 404, 405, 406, 407, 411, 412, 415, 416, 420, 421, 433, 434], "uic": 308, "uid": 473, "uint": [3, 8], "uint16": [3, 8], "uint32": [3, 8], "uint64": [3, 8, 469], "uint8": [3, 8, 76, 334, 436], "uintc": [3, 8], "uintp": [3, 8], "uk": [464, 467], "ulong": [3, 8], "ulonglong": [3, 8], "ultim": [285, 308], "unabl": 473, "unalt": 351, "unari": 452, "unbias": 67, "unbound": 366, "unchang": [34, 109], "undefin": [186, 199, 201, 203, 336, 342, 344, 478], "under": [166, 285, 460, 464, 465, 471, 476], "underli": [32, 360, 389, 394, 408, 464, 485], "understand": [460, 470], "undesir": 484, "undo": 436, "unexpect": 202, "unif": [374, 375, 377], "uniform": [0, 3, 8, 131, 369, 370, 373, 374, 375, 377, 387], "uniformli": 384, "uniniti": [12, 13, 22, 23, 24, 25, 26, 27, 28, 44, 45, 46, 52, 53, 59, 60, 63, 64, 65, 70, 71, 78, 84, 85, 86, 87, 88, 90, 93, 116, 117, 118, 119, 120, 121, 122, 125, 127, 128, 134, 139, 143, 144, 145, 153, 154, 155, 156, 157, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 184, 188, 189, 190, 192, 327, 328, 330, 338, 339, 345, 346, 391, 392, 395, 396, 404, 405, 406, 407, 411, 412, 415, 420, 421, 433, 434], "union1d": [3, 8], "uniqu": [0, 3, 8, 191, 365, 469], "unique_al": [3, 8], "unique_count": [3, 8, 435], "unique_indic": 435, "unique_invers": [3, 8, 435], "unique_valu": [3, 8], "unit": [151, 159, 160, 385, 386, 478], "unitari": [126, 169, 478], "uniti": 131, "univari": 371, "univers": [166, 386], "unknown": 485, "unless": [14, 19, 34, 54, 68, 69, 75, 82, 131, 166, 170, 195, 196, 202, 204, 267, 291, 334, 340, 370, 373, 374, 375, 377, 399, 416, 435, 460, 464, 465, 471], "unlik": [61, 75, 159, 161, 383], "unmodifi": [48, 474], "unnecessari": 460, "unpack": 436, "unpackbit": [0, 3, 8], "unpickl": [256, 308], "unpredict": [1, 351], "unravel": 437, "unravel_index": [0, 3, 8], "unraveled_coord": 437, "unsaf": [58, 82, 138, 183, 267, 333, 422, 439], "unsign": [76, 204, 340, 416], "unsignedinteg": [3, 8], "unstack": [3, 8], "unsupport": 478, "until": [48, 83, 469, 484, 485], "unwrap": [3, 8], "up": [81, 115, 118, 133, 291, 400, 419, 435, 441, 456, 461, 467, 472, 473, 478, 479, 485], "updat": [285, 308, 341, 342, 470, 472, 485], "uplo": [160, 162], "upon": 460, "upper": [55, 92, 131, 158, 160, 162, 167, 308, 383, 384, 430, 431, 432], "uppoer": 167, "us": [2, 6, 16, 17, 20, 21, 31, 32, 42, 47, 48, 54, 58, 61, 67, 68, 69, 72, 73, 75, 76, 79, 82, 83, 94, 95, 96, 98, 99, 100, 101, 103, 104, 106, 107, 109, 126, 129, 130, 136, 140, 151, 152, 158, 163, 165, 166, 170, 183, 185, 186, 187, 195, 196, 197, 198, 199, 201, 202, 203, 204, 213, 214, 269, 275, 285, 291, 308, 310, 318, 325, 335, 336, 337, 340, 342, 344, 348, 350, 352, 373, 378, 386, 389, 390, 393, 394, 397, 402, 408, 416, 418, 419, 424, 435, 437, 438, 439, 452, 456, 460, 461, 463, 464, 465, 466, 467, 470, 471, 472, 474, 475, 476, 478, 481, 482, 483, 486], "usabl": 116, "usag": [94, 95, 96, 98, 99, 100, 101, 103, 104, 105, 106, 107, 108, 109, 159, 160, 161, 162, 168, 456, 460, 462, 473, 483, 484], "use_explicit": 163, "use_openmp": 461, "use_thread": 461, "user": [285, 308, 461, 470, 472, 473, 474, 485], "ushort": [3, 8], "usual": [73, 460, 473, 486], "util": [463, 464, 465, 471, 473, 485], "v": [48, 61, 72, 306, 401, 445, 463, 464, 466], "v1": 464, "v100": 485, "val": [110, 136, 150, 307, 334, 337, 390, 436, 484, 485], "valid": [48, 61, 182, 428, 429, 431, 432, 460, 472], "valu": [2, 12, 13, 14, 15, 16, 17, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 35, 41, 42, 43, 44, 45, 46, 47, 52, 53, 54, 55, 59, 60, 63, 64, 65, 66, 67, 68, 69, 70, 71, 76, 77, 78, 82, 86, 87, 88, 90, 91, 92, 93, 99, 107, 110, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 134, 137, 139, 140, 142, 143, 144, 145, 146, 147, 148, 149, 151, 152, 153, 154, 155, 156, 157, 158, 160, 162, 164, 166, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 188, 189, 190, 192, 193, 194, 195, 196, 197, 198, 200, 201, 202, 203, 204, 207, 208, 215, 216, 218, 219, 221, 222, 223, 224, 225, 226, 227, 228, 232, 233, 234, 235, 236, 237, 238, 240, 241, 242, 243, 244, 245, 246, 248, 249, 250, 253, 254, 255, 258, 259, 260, 263, 264, 267, 270, 281, 284, 294, 296, 302, 306, 308, 310, 313, 327, 328, 330, 334, 337, 338, 339, 340, 341, 342, 343, 345, 346, 347, 348, 350, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 373, 374, 375, 376, 377, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 391, 392, 393, 394, 395, 396, 397, 399, 401, 404, 405, 406, 407, 411, 412, 415, 416, 418, 419, 420, 421, 424, 425, 433, 434, 435, 436, 438, 442, 452, 454, 456, 464, 466, 469, 470, 471, 472, 473, 483, 484, 485], "valuabl": 472, "valueerror": [41, 43, 48, 54, 57, 75, 77, 110, 166, 193, 194, 197, 200, 350, 368, 410, 413, 424], "van": 166, "vander": [3, 8], "vanilla": 456, "var": [0, 3, 8, 456], "vararg": 126, "vari": [32, 67, 137, 408, 466, 467, 472, 485], "variabl": [67, 168, 193, 194, 197, 200, 350, 352, 358, 365, 456, 470, 472, 473, 477, 479, 481, 484, 485], "varianc": [67, 324, 350, 371, 438, 454], "variant": 485, "variat": [201, 203, 336, 344, 353, 485], "varieti": 2, "variou": [166, 454, 472, 482], "vdot": [0, 3, 8], "vecdot": [3, 8], "vecmat": [3, 8], "vector": [3, 8, 67, 79, 138, 165, 166, 183, 187, 322, 333, 439, 454, 485, 486], "vector1": 485, "vector2": 485, "vector_norm": 8, "venv": [475, 485], "verbatim": 460, "verbos": [463, 470, 473, 485], "veri": [15, 42, 291, 479], "verifi": 158, "version": [66, 72, 112, 186, 199, 201, 203, 256, 336, 344, 366, 437, 460, 464, 465, 471, 472, 475, 485], "vertic": [398, 400, 440, 441, 472], "vh": 169, "via": [12, 13, 22, 23, 24, 25, 26, 27, 28, 44, 45, 46, 52, 53, 59, 60, 63, 64, 65, 70, 71, 78, 86, 87, 88, 90, 93, 116, 117, 118, 119, 120, 121, 122, 125, 127, 128, 134, 139, 143, 144, 145, 153, 154, 155, 156, 157, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 184, 188, 189, 190, 192, 285, 319, 327, 328, 330, 338, 339, 345, 346, 391, 392, 395, 396, 404, 405, 406, 407, 411, 412, 415, 420, 421, 426, 433, 434, 463, 473, 477, 485], "view": [0, 8, 39, 40, 49, 51, 72, 89, 113, 114, 115, 187, 191, 281, 285, 288, 315, 322, 342, 394, 410, 413, 417, 419, 425, 437, 473, 483], "violat": 456, "vision": 485, "visit": [460, 473], "vital": 485, "void": [3, 8, 291], "volatil": [464, 485], "von": 385, "vonmis": [0, 3, 8], "vpi": 467, "vsplit": [0, 3, 8, 400, 441], "vstack": [0, 3, 8, 400, 484], "vv": 463, "w": [161, 162, 285, 308], "wa": [47, 79, 138, 165, 362, 386, 399, 422, 439, 460, 467, 470, 473], "wai": [83, 99, 100, 101, 106, 183, 357, 436, 460, 461, 463, 464, 465, 466, 471, 476, 477, 484], "waital": 472, "wald": [0, 3, 8], "walk": 461, "want": [460, 461, 471, 485], "warm": 479, "warn": [182, 193, 194, 197, 200, 341, 445, 470, 485], "warranti": [464, 465, 471, 476], "wasilla": 476, "water": 472, "wavenumb": 466, "we": [8, 54, 67, 313, 460, 461, 464, 465, 466, 467, 469, 470, 471, 472, 473, 484, 485], "weak": 474, "weibul": [0, 3, 8, 201, 203, 336, 344, 376], "weight": [41, 43, 67, 129, 130, 131, 366, 469], "welcom": [8, 460], "well": [82, 168, 308, 340, 463, 465, 472], "were": [58, 183, 306, 371, 401, 414, 473, 476, 481, 485], "west": [471, 485], "wget": 485, "what": [58, 72, 82, 94, 95, 96, 98, 99, 100, 101, 103, 104, 105, 106, 107, 108, 109, 138, 141, 183, 267, 333, 414, 422, 439, 471, 481, 484, 485], "wheel": 485, "when": [18, 21, 29, 30, 34, 41, 48, 57, 68, 69, 76, 106, 131, 158, 163, 166, 168, 170, 182, 183, 186, 187, 193, 194, 195, 196, 197, 199, 200, 202, 275, 291, 308, 313, 318, 350, 351, 378, 389, 402, 418, 419, 456, 460, 461, 470, 472, 477, 478, 479, 481, 484, 485], "whenev": [425, 456, 484], "where": [0, 3, 8, 12, 13, 14, 16, 17, 19, 21, 22, 23, 24, 25, 26, 27, 28, 33, 39, 40, 44, 45, 46, 48, 52, 53, 54, 55, 57, 59, 60, 63, 64, 65, 67, 70, 71, 76, 78, 79, 86, 87, 88, 89, 90, 91, 92, 93, 98, 104, 106, 116, 117, 118, 119, 120, 121, 122, 125, 127, 128, 133, 134, 137, 139, 140, 141, 143, 144, 145, 146, 147, 148, 153, 154, 155, 156, 157, 158, 167, 169, 170, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 184, 185, 188, 189, 190, 192, 197, 198, 200, 202, 204, 261, 262, 294, 296, 301, 306, 314, 327, 328, 330, 333, 337, 338, 339, 340, 343, 345, 346, 347, 348, 353, 354, 355, 362, 364, 366, 383, 391, 392, 395, 396, 401, 402, 404, 405, 406, 407, 410, 411, 412, 415, 416, 420, 421, 424, 433, 434, 438, 464, 466, 467, 469, 472, 476, 478, 484, 485], "wherea": 478, "whether": [14, 15, 19, 35, 72, 77, 140, 141, 158, 160, 162, 170, 202, 308, 437, 456, 460, 463, 476, 481, 484, 485], "which": [1, 12, 13, 14, 16, 17, 19, 20, 22, 23, 24, 25, 26, 27, 28, 29, 30, 34, 41, 44, 45, 46, 48, 52, 53, 54, 57, 58, 59, 60, 61, 63, 64, 65, 66, 67, 68, 69, 70, 71, 73, 75, 76, 77, 78, 82, 83, 86, 87, 88, 90, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 113, 116, 117, 118, 119, 120, 121, 122, 125, 126, 127, 128, 133, 134, 139, 143, 144, 145, 146, 147, 150, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 166, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 188, 189, 190, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 267, 275, 288, 291, 308, 310, 325, 327, 328, 330, 334, 336, 338, 339, 340, 341, 344, 345, 346, 352, 357, 370, 373, 374, 375, 376, 377, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 391, 392, 393, 395, 396, 397, 399, 402, 404, 405, 406, 407, 410, 411, 412, 414, 415, 416, 418, 420, 421, 424, 426, 427, 428, 431, 433, 434, 436, 438, 442, 456, 460, 467, 470, 472, 473, 476, 479, 481, 484, 485], "while": [67, 109, 165, 187, 199, 201, 203, 204, 285, 340, 366, 397, 416, 426, 469, 473, 479, 484, 485], "whilst": 38, "who": 460, "whole": 460, "whom": 476, "whose": [34, 75, 91, 92, 110, 182, 185, 191, 197, 198, 200, 204, 270, 334, 424, 429, 432, 437, 438], "why": [104, 460], "wide": [352, 473], "width": [81, 131, 133, 365, 400, 441, 485], "wiki": 352, "wikipedia": 352, "window": [42, 47, 129, 130, 152, 445, 454], "wise": [12, 13, 15, 22, 23, 24, 25, 26, 27, 28, 44, 45, 46, 52, 53, 59, 60, 63, 64, 65, 78, 81, 86, 93, 94, 95, 96, 98, 99, 100, 101, 103, 104, 105, 106, 107, 108, 109, 116, 117, 119, 120, 121, 127, 128, 132, 133, 139, 140, 143, 144, 145, 146, 147, 154, 156, 157, 159, 160, 161, 162, 172, 173, 174, 178, 179, 180, 181, 184, 188, 189, 190, 192, 273, 327, 328, 330, 338, 339, 391, 392, 400, 404, 405, 406, 407, 411, 412, 415, 420, 421, 433, 434, 440, 441, 485], "wish": 72, "within": [12, 13, 15, 21, 22, 23, 24, 25, 26, 27, 28, 44, 45, 46, 52, 53, 59, 60, 63, 64, 65, 70, 71, 78, 82, 86, 87, 88, 90, 93, 99, 100, 101, 104, 106, 116, 117, 118, 119, 120, 121, 122, 125, 127, 128, 134, 139, 140, 143, 144, 145, 153, 154, 155, 156, 157, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 183, 184, 188, 189, 190, 192, 267, 327, 328, 330, 338, 339, 345, 346, 357, 384, 391, 392, 395, 396, 404, 405, 406, 407, 411, 412, 415, 420, 421, 433, 434, 485], "without": [42, 48, 57, 79, 84, 138, 308, 322, 394, 460, 464, 465, 471, 472, 476, 480, 483, 485], "word": [21, 99, 100, 101, 104, 106, 384, 426], "work": [48, 57, 291, 341, 452, 460, 461, 464, 478, 479, 484, 485], "worker": [463, 473, 485], "workflow": 461, "workload": 485, "workstat": 485, "worri": 485, "wors": 47, "would": [32, 58, 79, 138, 165, 182, 265, 266, 291, 306, 333, 401, 410, 414, 422, 439, 456, 464, 465, 470, 471, 472, 484, 485], "wrap": [54, 110, 341, 351, 418], "wrapper": 485, "write": [49, 72, 110, 187, 308, 318, 394, 464, 465, 471, 474, 485], "writeabl": [4, 285, 308], "writebackifcopi": [285, 308], "written": [110, 285, 308, 318, 476, 484, 486], "wrong": 57, "www": [464, 465, 471], "x": [12, 22, 23, 24, 25, 26, 28, 43, 52, 53, 59, 60, 64, 65, 67, 70, 71, 76, 77, 87, 88, 90, 93, 95, 96, 97, 100, 101, 102, 109, 117, 122, 131, 135, 139, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 163, 166, 168, 172, 173, 174, 175, 179, 182, 187, 190, 285, 308, 313, 327, 338, 345, 346, 347, 352, 387, 391, 396, 404, 405, 406, 407, 411, 412, 420, 421, 434, 442, 464, 466, 467, 469, 470, 478, 484, 485, 486], "x1": [13, 27, 44, 45, 46, 63, 78, 86, 116, 118, 119, 120, 121, 125, 127, 128, 134, 153, 154, 155, 156, 157, 176, 177, 178, 180, 181, 184, 187, 188, 189, 192, 328, 330, 339, 392, 395, 415, 433], "x2": [13, 27, 44, 45, 46, 63, 78, 86, 116, 118, 119, 120, 121, 125, 127, 128, 134, 153, 154, 155, 156, 157, 176, 177, 178, 180, 181, 184, 187, 188, 189, 192, 328, 330, 339, 392, 395, 415, 433], "x86": 485, "x86_64": [475, 485], "x_": 470, "x_1": 67, "x_2": 67, "x_current": 484, "x_i": 67, "x_j": 67, "x_n": 67, "x_prev": 484, "xeon": 485, "xi": 187, "xk": 470, "xk_old": 470, "xlabel": [464, 466], "xn": 187, "xor": [46, 181], "xorwow": 351, "xv": 187, "xy": 187, "y": [13, 27, 44, 45, 46, 63, 67, 78, 86, 97, 102, 116, 118, 119, 120, 121, 125, 127, 128, 134, 140, 149, 153, 154, 155, 156, 157, 176, 177, 178, 180, 181, 184, 187, 188, 189, 192, 201, 203, 287, 319, 328, 330, 336, 339, 344, 389, 392, 395, 398, 415, 433, 442, 467, 469, 470, 484, 485, 486], "y1": [122, 190], "y2": [122, 190], "year": [365, 485], "yellow": 469, "yet": [8, 435], "yield": [29, 30, 68, 69, 195, 196, 202, 442, 479, 485], "ylabel": [464, 466], "you": [49, 72, 82, 183, 186, 187, 199, 418, 460, 461, 464, 465, 466, 469, 470, 471, 472, 473, 474, 475, 482, 484, 485, 486], "your": [460, 473, 474, 484, 485, 486], "yueh": 472, "yv": 187, "z": [18, 291, 352, 371, 484, 486], "zero": [0, 3, 8, 18, 33, 41, 42, 47, 61, 66, 76, 92, 94, 95, 96, 97, 98, 99, 100, 101, 103, 104, 106, 107, 109, 112, 129, 130, 141, 142, 146, 147, 148, 149, 152, 159, 160, 161, 162, 164, 166, 182, 196, 204, 299, 326, 329, 334, 353, 366, 405, 426, 427, 430, 436, 438, 444, 466, 469, 471, 485], "zero_point": 469, "zerodivisionerror": 41, "zeros_lik": [0, 3, 8], "zeta": 388, "zipf": [0, 3, 8], "zsh": 485}, "titles": ["&lt;no title&gt;", "cupynumeric.random.BitGenerator", "cupynumeric.random.Generator", "Convolve and Correlate", "cupynumeric.ndarray", "Binary operations", "cupynumeric.broadcast", "Classes", "Project comparisons", "Array creation routines", "Data type routines", "Discrete Fourier Transform (<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">cupynumeric.fft</span></code>)", "cupynumeric.absolute", "cupynumeric.add", "cupynumeric.all", "cupynumeric.allclose", "cupynumeric.amax", "cupynumeric.amin", "cupynumeric.angle", "cupynumeric.any", "cupynumeric.append", "cupynumeric.arange", "cupynumeric.arccos", "cupynumeric.arccosh", "cupynumeric.arcsin", "cupynumeric.arcsinh", "cupynumeric.arctan", "cupynumeric.arctan2", "cupynumeric.arctanh", "cupynumeric.argmax", "cupynumeric.argmin", "cupynumeric.argpartition", "cupynumeric.argsort", "cupynumeric.argwhere", "cupynumeric.array", "cupynumeric.array_equal", "cupynumeric.array_split", "cupynumeric.asarray", "cupynumeric.atleast_1d", "cupynumeric.atleast_2d", "cupynumeric.atleast_3d", "cupynumeric.average", "cupynumeric.bartlett", "cupynumeric.bincount", "cupynumeric.bitwise_and", "cupynumeric.bitwise_or", "cupynumeric.bitwise_xor", "cupynumeric.blackman", "cupynumeric.block", "cupynumeric.broadcast_arrays", "cupynumeric.broadcast_shapes", "cupynumeric.broadcast_to", "cupynumeric.cbrt", "cupynumeric.ceil", "cupynumeric.choose", "cupynumeric.clip", "cupynumeric.column_stack", "cupynumeric.compress", "cupynumeric.concatenate", "cupynumeric.conj", "cupynumeric.conjugate", "cupynumeric.convolve", "cupynumeric.copy", "cupynumeric.copysign", "cupynumeric.cos", "cupynumeric.cosh", "cupynumeric.count_nonzero", "cupynumeric.cov", "cupynumeric.cumprod", "cupynumeric.cumsum", "cupynumeric.deg2rad", "cupynumeric.degrees", "cupynumeric.diag", "cupynumeric.diag_indices", "cupynumeric.diag_indices_from", "cupynumeric.diagonal", "cupynumeric.diff", "cupynumeric.digitize", "cupynumeric.divide", "cupynumeric.dot", "cupynumeric.dsplit", "cupynumeric.dstack", "cupynumeric.einsum", "cupynumeric.einsum_path", "cupynumeric.empty", "cupynumeric.empty_like", "cupynumeric.equal", "cupynumeric.exp", "cupynumeric.exp2", "cupynumeric.expand_dims", "cupynumeric.expm1", "cupynumeric.extract", "cupynumeric.eye", "cupynumeric.fabs", "cupynumeric.fft.fft", "cupynumeric.fft.fft2", "cupynumeric.fft.fftn", "cupynumeric.fft.fftshift", "cupynumeric.fft.hfft", "cupynumeric.fft.ifft", "cupynumeric.fft.ifft2", "cupynumeric.fft.ifftn", "cupynumeric.fft.ifftshift", "cupynumeric.fft.ihfft", "cupynumeric.fft.irfft", "cupynumeric.fft.irfft2", "cupynumeric.fft.irfftn", "cupynumeric.fft.rfft", "cupynumeric.fft.rfft2", "cupynumeric.fft.rfftn", "cupynumeric.fill_diagonal", "cupynumeric.find_common_type", "cupynumeric.flatnonzero", "cupynumeric.flip", "cupynumeric.fliplr", "cupynumeric.flipud", "cupynumeric.float_power", "cupynumeric.floor", "cupynumeric.floor_divide", "cupynumeric.fmax", "cupynumeric.fmin", "cupynumeric.fmod", "cupynumeric.frexp", "cupynumeric.full", "cupynumeric.full_like", "cupynumeric.gcd", "cupynumeric.gradient", "cupynumeric.greater", "cupynumeric.greater_equal", "cupynumeric.hamming", "cupynumeric.hanning", "cupynumeric.histogram", "cupynumeric.hsplit", "cupynumeric.hstack", "cupynumeric.hypot", "cupynumeric.identity", "cupynumeric.imag", "cupynumeric.indices", "cupynumeric.inner", "cupynumeric.invert", "cupynumeric.isclose", "cupynumeric.iscomplex", "cupynumeric.iscomplexobj", "cupynumeric.isfinite", "cupynumeric.isinf", "cupynumeric.isnan", "cupynumeric.isneginf", "cupynumeric.isposinf", "cupynumeric.isreal", "cupynumeric.isrealobj", "cupynumeric.isscalar", "cupynumeric.ix_", "cupynumeric.kaiser", "cupynumeric.lcm", "cupynumeric.ldexp", "cupynumeric.left_shift", "cupynumeric.less", "cupynumeric.less_equal", "cupynumeric.linalg.cholesky", "cupynumeric.linalg.eig", "cupynumeric.linalg.eigh", "cupynumeric.linalg.eigvals", "cupynumeric.linalg.eigvalsh", "cupynumeric.linalg.expm", "cupynumeric.linalg.matrix_power", "cupynumeric.linalg.multi_dot", "cupynumeric.linalg.norm", "cupynumeric.linalg.qr", "cupynumeric.linalg.solve", "cupynumeric.linalg.svd", "cupynumeric.linspace", "cupynumeric.load", "cupynumeric.log", "cupynumeric.log10", "cupynumeric.log1p", "cupynumeric.log2", "cupynumeric.logaddexp", "cupynumeric.logaddexp2", "cupynumeric.logical_and", "cupynumeric.logical_not", "cupynumeric.logical_or", "cupynumeric.logical_xor", "cupynumeric.mask_indices", "cupynumeric.matmul", "cupynumeric.maximum", "cupynumeric.mean", "cupynumeric.median", "cupynumeric.meshgrid", "cupynumeric.minimum", "cupynumeric.mod", "cupynumeric.modf", "cupynumeric.moveaxis", "cupynumeric.multiply", "cupynumeric.nanargmax", "cupynumeric.nanargmin", "cupynumeric.nancumprod", "cupynumeric.nancumsum", "cupynumeric.nanmax", "cupynumeric.nanmean", "cupynumeric.nanmedian", "cupynumeric.nanmin", "cupynumeric.nanpercentile", "cupynumeric.nanprod", "cupynumeric.nanquantile", "cupynumeric.nansum", "cupynumeric.ndarray.T", "cupynumeric.ndarray.__abs__", "cupynumeric.ndarray.__add__", "cupynumeric.ndarray.__and__", "cupynumeric.ndarray.__array__", "cupynumeric.ndarray.__bool__", "cupynumeric.ndarray.__complex__", "cupynumeric.ndarray.__contains__", "cupynumeric.ndarray.__copy__", "cupynumeric.ndarray.__deepcopy__", "cupynumeric.ndarray.__divmod__", "cupynumeric.ndarray.__eq__", "cupynumeric.ndarray.__float__", "cupynumeric.ndarray.__floordiv__", "cupynumeric.ndarray.__ge__", "cupynumeric.ndarray.__getitem__", "cupynumeric.ndarray.__gt__", "cupynumeric.ndarray.__iadd__", "cupynumeric.ndarray.__iand__", "cupynumeric.ndarray.__ifloordiv__", "cupynumeric.ndarray.__ilshift__", "cupynumeric.ndarray.__imatmul__", "cupynumeric.ndarray.__imod__", "cupynumeric.ndarray.__imul__", "cupynumeric.ndarray.__index__", "cupynumeric.ndarray.__int__", "cupynumeric.ndarray.__invert__", "cupynumeric.ndarray.__ior__", "cupynumeric.ndarray.__ipow__", "cupynumeric.ndarray.__irshift__", "cupynumeric.ndarray.__isub__", "cupynumeric.ndarray.__itruediv__", "cupynumeric.ndarray.__ixor__", "cupynumeric.ndarray.__le__", "cupynumeric.ndarray.__len__", "cupynumeric.ndarray.__lshift__", "cupynumeric.ndarray.__lt__", "cupynumeric.ndarray.__matmul__", "cupynumeric.ndarray.__mod__", "cupynumeric.ndarray.__mul__", "cupynumeric.ndarray.__ne__", "cupynumeric.ndarray.__neg__", "cupynumeric.ndarray.__new__", "cupynumeric.ndarray.__or__", "cupynumeric.ndarray.__pos__", "cupynumeric.ndarray.__pow__", "cupynumeric.ndarray.__reduce__", "cupynumeric.ndarray.__repr__", "cupynumeric.ndarray.__rmatmul__", "cupynumeric.ndarray.__rshift__", "cupynumeric.ndarray.__setitem__", "cupynumeric.ndarray.__setstate__", "cupynumeric.ndarray.__str__", "cupynumeric.ndarray.__sub__", "cupynumeric.ndarray.__truediv__", "cupynumeric.ndarray.__xor__", "cupynumeric.ndarray.all", "cupynumeric.ndarray.any", "cupynumeric.ndarray.argmax", "cupynumeric.ndarray.argmin", "cupynumeric.ndarray.argpartition", "cupynumeric.ndarray.argsort", "cupynumeric.ndarray.astype", "cupynumeric.ndarray.base", "cupynumeric.ndarray.choose", "cupynumeric.ndarray.clip", "cupynumeric.ndarray.compress", "cupynumeric.ndarray.conj", "cupynumeric.ndarray.conjugate", "cupynumeric.ndarray.copy", "cupynumeric.ndarray.ctypes", "cupynumeric.ndarray.cumprod", "cupynumeric.ndarray.cumsum", "cupynumeric.ndarray.data", "cupynumeric.ndarray.diagonal", "cupynumeric.ndarray.dot", "cupynumeric.ndarray.dtype", "cupynumeric.ndarray.dump", "cupynumeric.ndarray.dumps", "cupynumeric.ndarray.fill", "cupynumeric.ndarray.flags", "cupynumeric.ndarray.flat", "cupynumeric.ndarray.flatten", "cupynumeric.ndarray.flip", "cupynumeric.ndarray.getfield", "cupynumeric.ndarray.imag", "cupynumeric.ndarray.item", "cupynumeric.ndarray.itemset", "cupynumeric.ndarray.itemsize", "cupynumeric.ndarray.max", "cupynumeric.ndarray.mean", "cupynumeric.ndarray.min", "cupynumeric.ndarray.nbytes", "cupynumeric.ndarray.ndim", "cupynumeric.ndarray.nonzero", "cupynumeric.ndarray.partition", "cupynumeric.ndarray.prod", "cupynumeric.ndarray.put", "cupynumeric.ndarray.ravel", "cupynumeric.ndarray.real", "cupynumeric.ndarray.reshape", "cupynumeric.ndarray.searchsorted", "cupynumeric.ndarray.setfield", "cupynumeric.ndarray.setflags", "cupynumeric.ndarray.shape", "cupynumeric.ndarray.size", "cupynumeric.ndarray.sort", "cupynumeric.ndarray.squeeze", "cupynumeric.ndarray.strides", "cupynumeric.ndarray.sum", "cupynumeric.ndarray.swapaxes", "cupynumeric.ndarray.take", "cupynumeric.ndarray.tobytes", "cupynumeric.ndarray.tofile", "cupynumeric.ndarray.tolist", "cupynumeric.ndarray.tostring", "cupynumeric.ndarray.trace", "cupynumeric.ndarray.transpose", "cupynumeric.ndarray.unique", "cupynumeric.ndarray.var", "cupynumeric.ndarray.view", "cupynumeric.ndim", "cupynumeric.negative", "cupynumeric.nextafter", "cupynumeric.nonzero", "cupynumeric.not_equal", "cupynumeric.ones", "cupynumeric.ones_like", "cupynumeric.outer", "cupynumeric.packbits", "cupynumeric.partition", "cupynumeric.percentile", "cupynumeric.place", "cupynumeric.positive", "cupynumeric.power", "cupynumeric.prod", "cupynumeric.put", "cupynumeric.put_along_axis", "cupynumeric.putmask", "cupynumeric.quantile", "cupynumeric.rad2deg", "cupynumeric.radians", "cupynumeric.random.beta", "cupynumeric.random.binomial", "cupynumeric.random.bytes", "cupynumeric.random.chisquare", "cupynumeric.random.default_rng", "cupynumeric.random.exponential", "cupynumeric.random.f", "cupynumeric.random.gamma", "cupynumeric.random.geometric", "cupynumeric.random.gumbel", "cupynumeric.random.hypergeometric", "cupynumeric.random.laplace", "cupynumeric.random.logistic", "cupynumeric.random.lognormal", "cupynumeric.random.logseries", "cupynumeric.random.negative_binomial", "cupynumeric.random.noncentral_chisquare", "cupynumeric.random.noncentral_f", "cupynumeric.random.normal", "cupynumeric.random.pareto", "cupynumeric.random.poisson", "cupynumeric.random.power", "cupynumeric.random.rand", "cupynumeric.random.randint", "cupynumeric.random.randn", "cupynumeric.random.random", "cupynumeric.random.random_integers", "cupynumeric.random.random_sample", "cupynumeric.random.ranf", "cupynumeric.random.rayleigh", "cupynumeric.random.sample", "cupynumeric.random.seed", "cupynumeric.random.standard_cauchy", "cupynumeric.random.standard_exponential", "cupynumeric.random.standard_gamma", "cupynumeric.random.standard_t", "cupynumeric.random.triangular", "cupynumeric.random.uniform", "cupynumeric.random.vonmises", "cupynumeric.random.wald", "cupynumeric.random.weibull", "cupynumeric.random.zipf", "cupynumeric.ravel", "cupynumeric.real", "cupynumeric.reciprocal", "cupynumeric.remainder", "cupynumeric.repeat", "cupynumeric.reshape", "cupynumeric.right_shift", "cupynumeric.rint", "cupynumeric.roll", "cupynumeric.rot90", "cupynumeric.round", "cupynumeric.row_stack", "cupynumeric.searchsorted", "cupynumeric.select", "cupynumeric.shape", "cupynumeric.sign", "cupynumeric.signbit", "cupynumeric.sin", "cupynumeric.sinh", "cupynumeric.sort", "cupynumeric.sort_complex", "cupynumeric.split", "cupynumeric.sqrt", "cupynumeric.square", "cupynumeric.squeeze", "cupynumeric.stack", "cupynumeric.subtract", "cupynumeric.sum", "cupynumeric.swapaxes", "cupynumeric.take", "cupynumeric.take_along_axis", "cupynumeric.tan", "cupynumeric.tanh", "cupynumeric.tensordot", "cupynumeric.tile", "cupynumeric.trace", "cupynumeric.transpose", "cupynumeric.tri", "cupynumeric.tril", "cupynumeric.tril_indices", "cupynumeric.tril_indices_from", "cupynumeric.triu", "cupynumeric.triu_indices", "cupynumeric.triu_indices_from", "cupynumeric.true_divide", "cupynumeric.trunc", "cupynumeric.unique", "cupynumeric.unpackbits", "cupynumeric.unravel_index", "cupynumeric.var", "cupynumeric.vdot", "cupynumeric.vsplit", "cupynumeric.vstack", "cupynumeric.where", "cupynumeric.zeros", "cupynumeric.zeros_like", "API Reference", "Indexing routines", "Input and output", "Linear algebra (<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">cupynumeric.linalg</span></code>)", "Logic functions", "Array manipulation routines", "Mathematical functions", "The N-Dimensional array (<code class=\"xref py py-class docutils literal notranslate\"><span class=\"pre\">cupynumeric.ndarray</span></code>)", "Random sampling (<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">cupynumeric.random</span></code>)", "Routines", "Set routines", "Settings", "Sorting, searching, and counting", "Statistics", "Window functions", "Contributing to cuPyNumeric", "Building from source", "Developer guide", "Running tests", "Black-Scholes options pricing", "Cholesky decomposition", "Compact Finite Difference Scheme", "Edge Detection", "Examples", "K-Means Clustering Algorithm", "Newton Raphson Method In Two Dimensions", "Jacobi stencil", "TorchSWE case study", "Frequently Asked Questions", "NVIDIA cuPyNumeric", "Installation", "Third-party notices", "Advanced topics", "Differences with Numpy", "Performance Benchmarking", "Howtos", "Measure API coverage", "Trying Numpy code without changes", "User guide", "Best practices", "Tutorial", "Usage"], "titleterms": {"1": 485, "2": 485, "3": 485, "In": 470, "Of": 473, "The": [452, 460], "__abs__": 206, "__add__": 207, "__and__": 208, "__array__": 209, "__bool__": 210, "__complex__": 211, "__contains__": 212, "__copy__": 213, "__deepcopy__": 214, "__divmod__": 215, "__eq__": 216, "__float__": 217, "__floordiv__": 218, "__ge__": 219, "__getitem__": 220, "__gt__": 221, "__iadd__": 222, "__iand__": 223, "__ifloordiv__": 224, "__ilshift__": 225, "__imatmul__": 226, "__imod__": 227, "__imul__": 228, "__index__": 229, "__int__": 230, "__invert__": 231, "__ior__": 232, "__ipow__": 233, "__irshift__": 234, "__isub__": 235, "__itruediv__": 236, "__ixor__": 237, "__le__": 238, "__len__": 239, "__lshift__": 240, "__lt__": 241, "__matmul__": 242, "__mod__": 243, "__mul__": 244, "__ne__": 245, "__neg__": 246, "__new__": 247, "__or__": 248, "__pos__": 249, "__pow__": 250, "__reduce__": 251, "__repr__": 252, "__rmatmul__": 253, "__rshift__": 254, "__setitem__": 255, "__setstate__": 256, "__str__": 257, "__sub__": 258, "__truediv__": 259, "__xor__": 260, "about": 473, "absolut": 12, "add": 13, "advanc": [3, 461, 477, 484, 485], "algebra": [8, 448], "algorithm": 469, "all": [14, 261], "allclos": 15, "alloc": [484, 485], "amax": 16, "amin": 17, "an": 484, "angl": 18, "ani": [19, 262], "anoth": 484, "anti": 473, "api": [8, 445, 481, 484], "append": 20, "applic": [473, 484], "ar": 473, "arang": 21, "arcco": 22, "arccosh": 23, "arcsin": 24, "arcsinh": 25, "arctan": 26, "arctan2": 27, "arctanh": 28, "argmax": [29, 263], "argmin": [30, 264], "argpartit": [31, 265], "argsort": [32, 266], "argument": [473, 477, 478, 484], "argwher": 33, "arithmet": [451, 452], "arrai": [3, 8, 9, 34, 446, 449, 450, 452, 484, 485], "array_equ": 35, "array_split": 36, "asarrai": 37, "ask": 473, "astyp": 267, "atleast_1d": 38, "atleast_2d": 39, "atleast_3d": 40, "attribut": 452, "avail": 473, "averag": [41, 458], "avoid": [484, 485], "background": [466, 467, 469, 470], "bartlett": 42, "base": [268, 484, 485], "basic": [450, 461, 463, 485], "begin": 460, "behavior": 478, "benchmark": 479, "best": [484, 485], "beta": 347, "better": 484, "between": 473, "binari": [5, 447], "bincount": 43, "binomi": 348, "bit": [3, 5, 453], "bitgener": 1, "bitwise_and": 44, "bitwise_or": 45, "bitwise_xor": 46, "black": [464, 485], "blackman": 47, "block": [48, 484], "boolean": [484, 485], "broadcast": 6, "broadcast_arrai": 49, "broadcast_shap": 50, "broadcast_to": 51, "build": [9, 461, 475], "byte": 349, "calcul": 452, "call": 481, "can": 473, "case": 472, "cbrt": 52, "ceil": 53, "ceph": 476, "certif": 460, "chang": [450, 469, 482], "chisquar": 350, "choleski": [158, 465], "choos": [54, 269], "class": 7, "clip": [55, 270], "cluster": [469, 485], "cmake": 461, "co": 64, "code": [460, 473, 482, 485], "column_stack": 56, "compact": 466, "comparison": [8, 449, 452], "complex": 451, "compress": [57, 271], "comput": 485, "concaten": 58, "conda": [475, 485], "configur": 463, "conj": [59, 272], "conjug": [60, 273, 485], "construct": 452, "content": [449, 474], "contribut": 460, "convers": 452, "convolv": [3, 61], "copi": [62, 274, 478, 484], "copysign": 63, "correl": [3, 458], "cosh": 65, "count": [3, 457], "count_nonzero": 66, "cov": 67, "coverag": 481, "cpu": [475, 485], "creation": [3, 9], "ctype": 275, "cumprod": [68, 276], "cumsum": [69, 277], "cupi": 473, "cupynumer": [1, 2, 4, 6, 8, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 448, 452, 453, 460, 473, 474, 484, 485], "data": [9, 10, 278, 446, 452, 453], "datatyp": 478, "dco": 460, "decomposit": [448, 465], "default": 473, "default_rng": 351, "deg2rad": 70, "degre": 71, "depend": 461, "design": 484, "detail": 481, "detect": [467, 485], "determin": 473, "develop": [460, 462], "diag": 72, "diag_indic": 73, "diag_indices_from": 74, "diagon": [75, 279], "diff": 76, "differ": [451, 466, 473, 478], "digit": 77, "dimens": [450, 470], "dimension": [8, 452], "discret": [3, 8, 11], "distribut": 453, "divid": 78, "do": [460, 473], "doctor": 456, "doctor_filenam": 456, "doctor_format": 456, "doe": 473, "doesn": 473, "don": 473, "dot": [79, 280], "dsplit": 80, "dstack": 81, "dtype": 281, "dump": [282, 283], "edg": [467, 485], "eig": 159, "eigenvalu": 3, "eigh": 160, "eigval": 161, "eigvalsh": 162, "einsum": [3, 82], "einsum_path": 83, "element": [450, 484], "elementwis": 5, "empti": 84, "empty_lik": 85, "equal": 86, "equat": 448, "error": 473, "exampl": [468, 485], "execut": [473, 477], "exercis": 469, "exist": 9, "exp": 87, "exp2": 88, "expand_dim": 89, "expm": 163, "expm1": 90, "expon": 451, "exponenti": 352, "extract": 91, "extrema": 451, "ey": 92, "f": 353, "fab": 93, "factor": 3, "fast_math": 456, "faster": 484, "fft": [11, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109], "fft2": 95, "fftn": 96, "fftshift": 97, "file": 447, "fill": 284, "fill_diagon": 110, "find": 451, "find_common_typ": 111, "finit": 466, "flag": 285, "flat": 286, "flatnonzero": 112, "flatten": 287, "flip": [113, 288], "fliplr": 114, "flipud": 115, "float": 451, "float_pow": 116, "floor": 117, "floor_divid": 118, "fmax": 119, "fmin": 120, "fmod": 121, "force_thunk": 456, "format": 460, "fourier": [3, 8, 11], "frequent": 473, "frexp": 122, "from": [9, 461, 473, 475], "full": 123, "full_lik": 124, "function": [3, 448, 449, 451, 459, 484], "gamma": 354, "gcd": 125, "gener": [2, 446, 453, 484], "geometr": 355, "getfield": 289, "gpu": [473, 475, 485], "gradient": [126, 485], "greater": 127, "greater_equ": 128, "guid": [462, 483], "guidelin": [479, 484], "gumbel": 356, "ham": 129, "han": 130, "handl": [451, 473], "hardwar": 485, "have": 473, "helper": 11, "hermitian": 11, "hfft": 98, "histogram": [131, 458], "how": [460, 469, 473], "howto": 480, "hpc": 485, "hsplit": 132, "hstack": 133, "hyperbol": 451, "hypergeometr": 357, "hypot": 134, "i": [460, 473, 484], "ident": 135, "ifft": 99, "ifft2": 100, "ifftn": 101, "ifftshift": 102, "ihfft": 103, "imag": [136, 290], "implement": [466, 467, 469, 470], "index": [3, 446, 478, 484, 485], "indic": [137, 474], "inner": 138, "input": [3, 447, 469], "insert": 446, "instal": [475, 485], "instead": [478, 484], "introduct": 485, "invert": [139, 448], "irfft": 104, "irfft2": 105, "irfftn": 106, "isclos": 140, "iscomplex": 141, "iscomplexobj": 142, "isfinit": 143, "isinf": 144, "isnan": 145, "isneginf": 146, "isposinf": 147, "isreal": 148, "isrealobj": 149, "isscalar": 150, "item": [291, 452], "items": 293, "itemset": 292, "iter": 484, "ix_": 151, "jacobi": [471, 485], "join": 450, "jupyt": 473, "k": 469, "kaiser": 152, "kind": 450, "kit": 476, "kmean": 469, "laplac": 358, "laptop": 473, "layout": 452, "lcm": 153, "ldexp": 154, "learn": [466, 467, 469, 470], "left_shift": 155, "legales": 460, "legat": [473, 477, 479], "legion": [473, 477], "less": 156, "less_equ": 157, "let": 469, "level": 8, "licens": 475, "like": [446, 450], "linalg": [158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 448], "linear": [8, 448], "linspac": 170, "linux": 485, "list": [484, 485], "load": 171, "log": 172, "log10": 173, "log1p": 174, "log2": 175, "logaddexp": 176, "logaddexp2": 177, "logarithm": 451, "logic": [3, 449, 484], "logical_and": 178, "logical_not": 179, "logical_or": 180, "logical_xor": 181, "logist": 359, "lognorm": 360, "logseri": 361, "loop": [484, 485], "lu": 3, "make": 455, "manag": 477, "manipul": [3, 450, 452, 484], "manual": 477, "mask": [484, 485], "mask_indic": 182, "mathemat": [3, 451, 484], "matmul": 183, "matmul_cache_s": 456, "matric": [9, 448], "matrix": [3, 448, 452, 485], "matrix_pow": 164, "max": 294, "maximum": 184, "mean": [185, 295, 469, 473], "measur": 481, "median": 186, "memori": [452, 473, 484], "merg": 484, "meshgrid": 187, "method": [452, 470], "min": 296, "min_cpu_chunk": 456, "min_gpu_chunk": 456, "min_omp_chunk": 456, "minimum": 188, "miscellan": [3, 451], "mod": 189, "modf": 190, "modul": 8, "more": 473, "moveaxi": 191, "multi": [8, 477, 485], "multi_dot": 165, "multipl": [452, 485], "multipli": 192, "my": 473, "n": 452, "nanargmax": 193, "nanargmin": 194, "nancumprod": 195, "nancumsum": 196, "nanmax": 197, "nanmean": 198, "nanmedian": 199, "nanmin": 200, "nanpercentil": 201, "nanprod": 202, "nanquantil": 203, "nansum": 204, "nativ": [484, 485], "nbyte": 297, "ndarrai": [3, 4, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 452], "ndim": [298, 326], "neg": 327, "negative_binomi": 362, "newton": 470, "nextaft": 328, "node": [477, 485], "noncentral_chisquar": 363, "noncentral_f": 364, "nonzero": [299, 329], "norm": [166, 448], "normal": 365, "not_equ": 330, "notebook": 473, "notic": 476, "npy": 447, "npz": 447, "number": [448, 450, 451, 469], "numer": 9, "numpi": [8, 447, 473, 476, 478, 482, 484, 485], "numpy_compat": 456, "nvidia": 474, "o": 484, "observ": 469, "ones": 331, "ones_lik": 332, "openbla": 461, "oper": [3, 5, 446, 449, 450, 451, 452, 484, 485], "option": [464, 485], "order": [458, 478], "origin": 460, "other": [448, 452, 485], "out": 473, "outcom": [466, 467, 469, 470], "outer": 333, "output": [3, 447, 484], "overal": 481, "overhead": 484, "pack": [3, 5], "packag": 475, "packbit": 334, "pad": 3, "pareto": 366, "parti": 476, "partit": [300, 335], "pass": [473, 477], "pattern": 473, "penalti": 484, "percentil": 336, "perform": [479, 484], "pip": [461, 485], "pitfal": 484, "place": 337, "point": 451, "poisson": 367, "posit": 338, "power": [339, 368], "practic": [484, 485], "preload_cudalib": 456, "price": 464, "process": 460, "prod": [301, 340], "product": [448, 451], "program": 3, "project": 8, "proper": 455, "put": [302, 341], "put_along_axi": 342, "putmask": [343, 484], "pypi": 475, "python": 473, "qr": 167, "quantil": 344, "question": 473, "rad2deg": 345, "radian": 346, "rand": 369, "randint": 370, "randn": 371, "random": [1, 2, 3, 8, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 453, 476], "random_integ": 373, "random_sampl": 374, "ranf": 375, "rang": 9, "raphson": 470, "ration": 451, "ravel": [303, 389], "rayleigh": 376, "read": 473, "real": [11, 304, 390], "realm": [473, 477], "rearrang": 450, "reciproc": 391, "recommend": 484, "reduc": 484, "reduct": 478, "refer": 445, "relat": 3, "remaind": 392, "repeat": 393, "report": 481, "report_coverag": 456, "report_dump_callstack": 456, "report_dump_csv": 456, "requir": [460, 485], "reshap": [305, 394, 484], "resourc": 485, "result": [473, 484], "return": [478, 484], "review": 460, "rfft": 107, "rfft2": 108, "rfftn": 109, "right_shift": 395, "rint": 396, "roll": 397, "rot90": 398, "round": [399, 451], "routin": [3, 9, 10, 11, 446, 450, 451, 454, 455, 484], "row_stack": 400, "run": [463, 469, 485], "sampl": [3, 8, 377, 453, 485], "scalar": 478, "scheme": 466, "schole": [464, 485], "search": [3, 457], "searchsort": [306, 401], "see": 469, "seed": [378, 453], "select": [402, 452], "set": [3, 455, 456, 469], "setfield": 307, "setflag": 308, "setup": 485, "shape": [9, 309, 403, 450, 452, 478], "sign": [404, 460], "signbit": 405, "simpl": 453, "sin": 406, "singl": 485, "sinh": 407, "size": 310, "slower": 473, "solv": [168, 448], "sort": [3, 311, 408, 457], "sort_complex": 409, "sourc": [461, 475], "special": 452, "split": [410, 450], "sqrt": 411, "squar": 412, "squeez": [312, 413], "stack": [414, 481, 484], "stage": 463, "standard": 11, "standard_cauchi": 379, "standard_exponenti": 380, "standard_gamma": 381, "standard_t": 382, "state": 453, "statist": [3, 458], "stencil": [471, 485], "stride": 313, "studi": 472, "subtract": 415, "sum": [314, 416, 451], "support": 478, "svd": [3, 169], "swapax": [315, 417], "t": [205, 473], "tabl": 474, "take": [316, 418], "take_along_axi": 419, "tan": 420, "tanh": 421, "task": [473, 477, 484], "tbli": [461, 476], "tensordot": 422, "test": [10, 449, 463], "than": 473, "thi": 473, "third": 476, "three": 485, "through": [461, 484], "tile": [423, 450], "time": [473, 479], "tip": 485, "tobyt": 317, "tofil": 318, "tolist": 319, "tool": 479, "top": 485, "topic": [461, 477], "torchsw": 472, "tostr": 320, "trace": [321, 424], "transform": [3, 8, 11], "transpos": [322, 425, 450], "tri": 426, "triangular": 383, "trigonometr": 451, "tril": 427, "tril_indic": 428, "tril_indices_from": 429, "triu": 430, "triu_indic": 431, "triu_indices_from": 432, "true_divid": 433, "trunc": 434, "truth": 449, "try": 482, "tutori": 485, "two": 470, "type": [10, 449, 452], "ufunc": 3, "uniform": 384, "uniqu": [323, 435], "unpack": 3, "unpackbit": 436, "unravel_index": 437, "updat": 484, "us": [469, 473, 477, 479, 484, 485], "usag": [463, 486], "user": 483, "v": [8, 473, 485], "valu": [9, 449, 478], "var": [324, 438], "varianc": 458, "variant": [473, 475], "variou": 459, "vdot": 439, "vector": [448, 484], "verifi": 475, "version": 473, "view": [325, 478, 484], "vonmis": 385, "vsplit": 440, "vstack": 441, "wald": 386, "warn": [456, 473], "weibul": 387, "what": 473, "when": 473, "where": [442, 473], "why": 473, "window": 459, "wise": 484, "without": 482, "your": 475, "zero": 443, "zeros_lik": 444, "zipf": 388}})