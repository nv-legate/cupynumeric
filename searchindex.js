Search.setIndex({"alltitles": {"1. Use cuPyNumeric arrays, AVOID native lists": [[486, "use-cupynumeric-arrays-avoid-native-lists"]], "2. Use array-based operations, AVOID loops with indexing": [[486, "use-array-based-operations-avoid-loops-with-indexing"]], "3. Use boolean masks, AVOID advanced indexing": [[486, "use-boolean-masks-avoid-advanced-indexing"]], "API Reference": [[446, null]], "Advanced statistics": [[3, "advanced-statistics"]], "Advanced topics": [[462, "advanced-topics"], [478, null]], "Arithmetic operations": [[452, "arithmetic-operations"]], "Arithmetic, matrix multiplication, and comparison operations": [[453, "arithmetic-matrix-multiplication-and-comparison-operations"]], "Array Attributes": [[453, "array-attributes"]], "Array Manipulation Routine Pitfalls": [[485, "array-manipulation-routine-pitfalls"]], "Array Methods": [[453, "array-methods"]], "Array contents": [[450, "array-contents"]], "Array conversion": [[453, "array-conversion"]], "Array creation": [[3, "array-creation"]], "Array creation (ndarray)": [[3, "array-creation-ndarray"]], "Array creation routines": [[9, null]], "Array manipulation": [[3, "array-manipulation"]], "Array manipulation (ndarray)": [[3, "array-manipulation-ndarray"]], "Array manipulation routines": [[451, null]], "Array type testing": [[450, "array-type-testing"]], "Averages and variances": [[459, "averages-and-variances"]], "Avoid blocking operations": [[485, "avoid-blocking-operations"]], "Background": [[467, "Background"], [468, "Background"], [470, "Background"], [471, "Background"]], "Basic Linux installation": [[486, "basic-linux-installation"]], "Basic build": [[462, "basic-build"]], "Basic operations": [[451, "basic-operations"]], "Basic usage": [[464, "basic-usage"]], "Best practices": [[485, null], [486, "best-practices"]], "Binary operations": [[5, null]], "Bit Generators": [[454, "bit-generators"]], "Bit packing": [[5, "bit-packing"]], "Black-Scholes": [[486, "black-scholes"]], "Black-Scholes options pricing": [[465, null]], "Building from source": [[462, null], [476, "building-from-source"]], "Building matrices": [[9, "building-matrices"]], "Building through pip & cmake": [[462, "building-through-pip-cmake"]], "Calculation": [[453, "calculation"], [453, "id1"]], "Call stack reporting": [[482, "call-stack-reporting"]], "Cephes": [[477, "cephes"]], "Changing array shape": [[451, "changing-array-shape"]], "Changing kind of array": [[451, "changing-kind-of-array"]], "Changing number of dimensions": [[451, "changing-number-of-dimensions"]], "Cholesky decomposition": [[466, null]], "Classes": [[7, null]], "Code Formatting Requirements": [[461, "code-formatting-requirements"]], "Compact Finite Difference Scheme": [[467, null]], "Comparison": [[450, "comparison"]], "Conda": [[486, "conda"]], "Conda and GPU / CPU Variants": [[476, "conda-and-gpu-cpu-variants"]], "Conjugate gradient": [[486, "conjugate-gradient"]], "Constructing arrays": [[453, "constructing-arrays"]], "Contents:": [[475, null]], "Contributing to cuPyNumeric": [[461, null]], "Convolve and Correlate": [[3, null]], "Correlating": [[459, "correlating"]], "Counting": [[458, "counting"]], "Data Type": [[453, "data-type"]], "Data type routines": [[10, null]], "Data type testing": [[10, "data-type-testing"]], "Decompositions": [[449, "decompositions"]], "Dependencies": [[462, "dependencies"]], "Detailed coverage report": [[482, "detailed-coverage-report"]], "Developer guide": [[463, null]], "Differences with Numpy": [[479, null]], "Discrete Fourier Transform": [[8, "discrete-fourier-transform"]], "Discrete Fourier Transform (cupynumeric.fft)": [[11, null]], "Discrete Fourier transform": [[3, "discrete-fourier-transform"]], "Distributions": [[454, "distributions"]], "Edge Detection": [[468, null]], "Edge detection": [[486, "edge-detection"]], "Eigenvalues": [[3, "eigenvalues"]], "Einsum and related": [[3, "einsum-and-related"]], "Elementwise bit operations": [[5, "elementwise-bit-operations"]], "Example 1": [[486, "example-1"]], "Example 2": [[486, "example-2"]], "Examples": [[469, null], [486, "examples"]], "Exercise: Change the number of clusters and number of observations and see how the clusters change": [[470, "Exercise:-Change-the-number-of-clusters-and-number-of-observations-and-see-how-the-clusters-change"]], "Exponents and logarithms": [[452, "exponents-and-logarithms"]], "Extrema Finding": [[452, "extrema-finding"]], "Factorizations": [[3, "factorizations"]], "Faster I/O Routines": [[485, "faster-i-o-routines"]], "Floating point routines": [[452, "floating-point-routines"]], "Frequently Asked Questions": [[474, null]], "From existing data": [[9, "from-existing-data"]], "From shape or value": [[9, "from-shape-or-value"]], "Functional programming": [[3, "functional-programming"]], "General Recommendations": [[485, "general-recommendations"]], "Generating index arrays": [[447, "generating-index-arrays"]], "Guidelines for performance benchmarks": [[480, "guidelines-for-performance-benchmarks"]], "Guidelines on designing cuPyNumeric applications": [[485, "guidelines-on-designing-cupynumeric-applications"]], "Guidelines on using cuPyNumeric APIs": [[485, "guidelines-on-using-cupynumeric-apis"]], "HPC cluster installation": [[486, "hpc-cluster-installation"]], "Handling complex numbers": [[452, "handling-complex-numbers"]], "Hardware requirements": [[486, "hardware-requirements"]], "Helper routines": [[11, "helper-routines"]], "Hermitian FFTs": [[11, "hermitian-ffts"]], "Histograms": [[459, "histograms"]], "How Do I Sign the DCO?": [[461, "how-do-i-sign-the-dco"]], "How do I time the execution of my application?": [[474, "how-do-i-time-the-execution-of-my-application"]], "How do I use Jupyter Notebooks?": [[474, "how-do-i-use-jupyter-notebooks"]], "How to begin": [[461, "how-to-begin"]], "How to determine available memory?": [[474, "how-to-determine-available-memory"]], "How to handle Out-Of-Memory errors?": [[474, "how-to-handle-out-of-memory-errors"]], "How to pass Legion and Realm arguments?": [[474, "how-to-pass-legion-and-realm-arguments"]], "Howtos": [[481, null]], "Hyperbolic functions": [[452, "hyperbolic-functions"]], "Implementation": [[467, "Implementation"], [468, "Implementation"], [470, "Implementation"], [471, "Implementation"]], "Indexing": [[3, "indexing"]], "Indexing behavior": [[479, "indexing-behavior"]], "Indexing routines": [[447, null]], "Indexing-like operations": [[447, "indexing-like-operations"]], "Indices and tables": [[475, "indices-and-tables"]], "Input and output": [[3, "input-and-output"], [448, null]], "Input and output (ndarray)": [[3, "input-and-output-ndarray"]], "Inserting data into arrays": [[447, "inserting-data-into-arrays"]], "Installation": [[476, null]], "Installing Conda Packages": [[476, "installing-conda-packages"]], "Installing PyPI Packages": [[476, "installing-pypi-packages"]], "Introduction": [[486, "introduction"]], "Item selection and manipulation": [[453, "item-selection-and-manipulation"]], "Jacobi stencil": [[472, null], [486, "jacobi-stencil"]], "Joining arrays": [[451, "joining-arrays"]], "K-Means Clustering Algorithm": [[470, null]], "LU factorization and related": [[3, "lu-factorization-and-related"]], "Learning Outcomes": [[467, "Learning-Outcomes"], [468, "Learning-Outcomes"], [470, "Learning-Outcomes"], [471, "Learning-Outcomes"]], "Lets run the kmeans algorithm using a set of inputs": [[470, "Lets-run-the-kmeans-algorithm-using-a-set-of-inputs"]], "Licenses": [[476, "licenses"]], "Linear Algebra": [[8, "linear-algebra"]], "Linear algebra (cupynumeric.linalg)": [[449, null]], "Logic functions": [[450, null]], "Logic operations": [[450, "logic-operations"]], "Logical operations": [[3, "logical-operations"]], "Making proper sets": [[456, "making-proper-sets"]], "Mathematical functions": [[3, "mathematical-functions"], [452, null]], "Matrix Functions": [[449, "matrix-functions"]], "Matrix and vector products": [[449, "matrix-and-vector-products"]], "Matrix multiplication": [[486, "matrix-multiplication"]], "Measure API coverage": [[482, null]], "Memory Layout": [[453, "memory-layout"]], "Merge tasks to reduce overhead": [[485, "merge-tasks-to-reduce-overhead"]], "Miscellaneous": [[452, "miscellaneous"]], "Miscellaneous matrix routines": [[3, "miscellaneous-matrix-routines"]], "Module-Level": [[8, "module-level"]], "Multi-Dimensional Array": [[8, "multi-dimensional-array"]], "Multi-node HPC": [[486, "multi-node-hpc"]], "Multi-node execution": [[478, "multi-node-execution"]], "NVIDIA cuPyNumeric": [[475, null]], "Newton Raphson Method In Two Dimensions": [[471, null]], "Norms and other numbers": [[449, "norms-and-other-numbers"]], "NumPy": [[477, "numpy"], [486, "numpy"]], "NumPy binary files (npy, npz)": [[448, "numpy-binary-files-npy-npz"]], "NumPy vs cuPyNumeric APIs": [[8, "numpy-vs-cupynumeric-apis"]], "Numerical ranges": [[9, "numerical-ranges"]], "OpenBLAS": [[462, "openblas"]], "Order argument": [[479, "order-argument"]], "Order statistics": [[459, "order-statistics"]], "Other Attributes": [[453, "other-attributes"]], "Other options": [[486, "other-options"]], "Overall coverage report": [[482, "overall-coverage-report"]], "Packing and unpacking bits": [[3, "packing-and-unpacking-bits"]], "Padding arrays": [[3, "padding-arrays"]], "Passing Legion and Realm arguments": [[478, "passing-legion-and-realm-arguments"]], "Performance Benchmarking": [[480, null]], "Pip": [[486, "pip"]], "Project comparisons": [[8, null]], "Questions?": [[474, "questions"]], "Random Generator": [[454, "random-generator"]], "Random Kit": [[477, "random-kit"]], "Random Sampling": [[8, "random-sampling"]], "Random sampling": [[3, "random-sampling"]], "Random sampling (cupynumeric.random)": [[454, null]], "Rational routines": [[452, "rational-routines"]], "Real FFTs": [[11, "real-ffts"]], "Rearranging elements": [[451, "rearranging-elements"]], "Reductions": [[479, "reductions"]], "Removing data from arrays": [[451, "removing-data-from-arrays"]], "Reshape returns a copy instead of view": [[485, "reshape-returns-a-copy-instead-of-view"]], "Resource allocation": [[486, "resource-allocation"]], "Returning a copy instead of a view": [[479, "returning-a-copy-instead-of-a-view"]], "Review Process": [[461, "review-process"]], "Rounding": [[452, "rounding"]], "Routines": [[455, null]], "Running cuPyNumeric code": [[486, "running-cupynumeric-code"]], "Running on CPU": [[486, "running-on-cpu"], [486, "id2"], [486, "id4"], [486, "id6"]], "Running on GPU": [[486, "running-on-gpu"], [486, "id3"], [486, "id5"], [486, "id7"], [486, "id9"]], "Running on GPU cluster": [[486, "running-on-gpu-cluster"]], "Running tests": [[464, null]], "SVD and related": [[3, "svd-and-related"]], "Sample Code": [[486, "sample-code"], [486, "id8"]], "Sample computation": [[486, "sample-computation"]], "Scalar return values": [[479, "scalar-return-values"]], "Searching": [[458, "searching"]], "Searching, sorting, and counting": [[3, "searching-sorting-and-counting"]], "Seeding and State": [[454, "seeding-and-state"]], "Set operations": [[3, "set-operations"]], "Set routines": [[456, null]], "Settings": [[457, null]], "Shape manipulation": [[453, "shape-manipulation"]], "Simple random data": [[454, "simple-random-data"]], "Single node": [[486, "single-node"]], "Single-node setup": [[486, "single-node-setup"]], "Solving equations and inverting matrices": [[449, "solving-equations-and-inverting-matrices"]], "Sorting": [[458, "sorting"]], "Sorting, searching, and counting": [[458, null]], "Special methods": [[453, "special-methods"]], "Splitting arrays": [[451, "splitting-arrays"]], "Stack results in a performance penalty": [[485, "stack-results-in-a-performance-penalty"]], "Stage configuration": [[464, "stage-configuration"]], "Standard FFTs": [[11, "standard-ffts"]], "Statistics": [[459, null]], "Sums, products, differences": [[452, "sums-products-differences"]], "Supported shapes and datatypes": [[479, "supported-shapes-and-datatypes"]], "TBLIS": [[462, "tblis"], [477, "tblis"]], "The Legalese: Developer Certificate of Origin": [[461, "the-legalese-developer-certificate-of-origin"]], "The N-Dimensional array (cupynumeric.ndarray)": [[453, null]], "Third-party notices": [[477, null]], "Tiling arrays": [[451, "tiling-arrays"]], "Top three Tips": [[486, "top-three-tips"]], "TorchSWE case study": [[473, null]], "Transpose-like operations": [[451, "transpose-like-operations"]], "Trigonometric functions": [[452, "trigonometric-functions"]], "Truth value testing": [[450, "truth-value-testing"]], "Trying Numpy code without changes": [[483, null]], "Tutorial": [[486, null]], "Ufuncs": [[3, "ufuncs"]], "Usage": [[487, null]], "Use array-based operations, AVOID loops with indexing": [[485, "use-array-based-operations-avoid-loops-with-indexing"]], "Use boolean masks, AVOID advanced indexing": [[485, "use-boolean-masks-avoid-advanced-indexing"]], "Use cuPyNumeric or NumPy arrays, AVOID native lists": [[485, "use-cupynumeric-or-numpy-arrays-avoid-native-lists"]], "Use logic functions, AVOID iterating through a loop": [[485, "use-logic-functions-avoid-iterating-through-a-loop"]], "Use mathematical functions, AVOID element-wise loops": [[485, "use-mathematical-functions-avoid-element-wise-loops"]], "Use output arguments to reduce memory allocation": [[485, "use-output-arguments-to-reduce-memory-allocation"]], "Use putmask to update an array based on another array": [[485, "use-putmask-to-update-an-array-based-on-another-array"]], "User guide": [[484, null]], "Using Legate timing tools": [[480, "using-legate-timing-tools"]], "Using a manual task manager": [[478, "using-a-manual-task-manager"]], "Using legate": [[478, "using-legate"]], "Various windows": [[460, "various-windows"]], "Vectorize for better performance": [[485, "vectorize-for-better-performance"]], "Verify your Installation": [[476, "verify-your-installation"]], "What are the anti-patterns in a NumPy code?": [[474, "what-are-the-anti-patterns-in-a-numpy-code"]], "What are the defaults?": [[474, "what-are-the-defaults"]], "What are the different task variants available in Legate?": [[474, "what-are-the-different-task-variants-available-in-legate"]], "What does this warning mean?": [[474, "what-does-this-warning-mean"]], "What if I don\u2019t have a GPU?": [[474, "what-if-i-dont-have-a-gpu"]], "What is the difference between Legate and cuPyNumeric?": [[474, "what-is-the-difference-between-legate-and-cupynumeric"]], "What is the version of legate?": [[474, "what-is-the-version-of-legate"]], "When to use python vs legate?": [[474, "when-to-use-python-vs-legate"]], "Where I can read more about cuPyNumeric?": [[474, "where-i-can-read-more-about-cupynumeric"]], "Why are the results different from NumPy?": [[474, "why-are-the-results-different-from-numpy"]], "Why doesn\u2019t Legate use my GPU?": [[474, "why-doesnt-legate-use-my-gpu"]], "Why is cuPyNumeric slower than CuPy on my laptop?": [[474, "why-is-cupynumeric-slower-than-cupy-on-my-laptop"]], "Why is cuPyNumeric slower than NumPy on my laptop?": [[474, "why-is-cupynumeric-slower-than-numpy-on-my-laptop"]], "Window functions": [[460, null]], "cuPyNumeric": [[486, "cupynumeric"]], "cuPyNumeric vs NumPy": [[486, "cupynumeric-vs-numpy"]], "cupynumeric.absolute": [[12, null]], "cupynumeric.add": [[13, null]], "cupynumeric.all": [[14, null]], "cupynumeric.allclose": [[15, null]], "cupynumeric.amax": [[16, null]], "cupynumeric.amin": [[17, null]], "cupynumeric.angle": [[18, null]], "cupynumeric.any": [[19, null]], "cupynumeric.append": [[20, null]], "cupynumeric.arange": [[21, null]], "cupynumeric.arccos": [[22, null]], "cupynumeric.arccosh": [[23, null]], "cupynumeric.arcsin": [[24, null]], "cupynumeric.arcsinh": [[25, null]], "cupynumeric.arctan": [[26, null]], "cupynumeric.arctan2": [[27, null]], "cupynumeric.arctanh": [[28, null]], "cupynumeric.argmax": [[29, null]], "cupynumeric.argmin": [[30, null]], "cupynumeric.argpartition": [[31, null]], "cupynumeric.argsort": [[32, null]], "cupynumeric.argwhere": [[33, null]], "cupynumeric.array": [[34, null]], "cupynumeric.array_equal": [[35, null]], "cupynumeric.array_split": [[36, null]], "cupynumeric.asarray": [[37, null]], "cupynumeric.atleast_1d": [[38, null]], "cupynumeric.atleast_2d": [[39, null]], "cupynumeric.atleast_3d": [[40, null]], "cupynumeric.average": [[41, null]], "cupynumeric.bartlett": [[42, null]], "cupynumeric.bincount": [[43, null]], "cupynumeric.bitwise_and": [[44, null]], "cupynumeric.bitwise_or": [[45, null]], "cupynumeric.bitwise_xor": [[46, null]], "cupynumeric.blackman": [[47, null]], "cupynumeric.block": [[48, null]], "cupynumeric.broadcast": [[6, null]], "cupynumeric.broadcast_arrays": [[49, null]], "cupynumeric.broadcast_shapes": [[50, null]], "cupynumeric.broadcast_to": [[51, null]], "cupynumeric.cbrt": [[52, null]], "cupynumeric.ceil": [[53, null]], "cupynumeric.choose": [[54, null]], "cupynumeric.clip": [[55, null]], "cupynumeric.column_stack": [[56, null]], "cupynumeric.compress": [[57, null]], "cupynumeric.concatenate": [[58, null]], "cupynumeric.conj": [[59, null]], "cupynumeric.conjugate": [[60, null]], "cupynumeric.convolve": [[61, null]], "cupynumeric.copy": [[62, null]], "cupynumeric.copysign": [[63, null]], "cupynumeric.cos": [[64, null]], "cupynumeric.cosh": [[65, null]], "cupynumeric.count_nonzero": [[66, null]], "cupynumeric.cov": [[67, null]], "cupynumeric.cumprod": [[68, null]], "cupynumeric.cumsum": [[69, null]], "cupynumeric.deg2rad": [[70, null]], "cupynumeric.degrees": [[71, null]], "cupynumeric.delete": [[72, null]], "cupynumeric.diag": [[73, null]], "cupynumeric.diag_indices": [[74, null]], "cupynumeric.diag_indices_from": [[75, null]], "cupynumeric.diagonal": [[76, null]], "cupynumeric.diff": [[77, null]], "cupynumeric.digitize": [[78, null]], "cupynumeric.divide": [[79, null]], "cupynumeric.dot": [[80, null]], "cupynumeric.dsplit": [[81, null]], "cupynumeric.dstack": [[82, null]], "cupynumeric.einsum": [[83, null]], "cupynumeric.einsum_path": [[84, null]], "cupynumeric.empty": [[85, null]], "cupynumeric.empty_like": [[86, null]], "cupynumeric.equal": [[87, null]], "cupynumeric.exp": [[88, null]], "cupynumeric.exp2": [[89, null]], "cupynumeric.expand_dims": [[90, null]], "cupynumeric.expm1": [[91, null]], "cupynumeric.extract": [[92, null]], "cupynumeric.eye": [[93, null]], "cupynumeric.fabs": [[94, null]], "cupynumeric.fft.fft": [[95, null]], "cupynumeric.fft.fft2": [[96, null]], "cupynumeric.fft.fftn": [[97, null]], "cupynumeric.fft.fftshift": [[98, null]], "cupynumeric.fft.hfft": [[99, null]], "cupynumeric.fft.ifft": [[100, null]], "cupynumeric.fft.ifft2": [[101, null]], "cupynumeric.fft.ifftn": [[102, null]], "cupynumeric.fft.ifftshift": [[103, null]], "cupynumeric.fft.ihfft": [[104, null]], "cupynumeric.fft.irfft": [[105, null]], "cupynumeric.fft.irfft2": [[106, null]], "cupynumeric.fft.irfftn": [[107, null]], "cupynumeric.fft.rfft": [[108, null]], "cupynumeric.fft.rfft2": [[109, null]], "cupynumeric.fft.rfftn": [[110, null]], "cupynumeric.fill_diagonal": [[111, null]], "cupynumeric.find_common_type": [[112, null]], "cupynumeric.flatnonzero": [[113, null]], "cupynumeric.flip": [[114, null]], "cupynumeric.fliplr": [[115, null]], "cupynumeric.flipud": [[116, null]], "cupynumeric.float_power": [[117, null]], "cupynumeric.floor": [[118, null]], "cupynumeric.floor_divide": [[119, null]], "cupynumeric.fmax": [[120, null]], "cupynumeric.fmin": [[121, null]], "cupynumeric.fmod": [[122, null]], "cupynumeric.frexp": [[123, null]], "cupynumeric.full": [[124, null]], "cupynumeric.full_like": [[125, null]], "cupynumeric.gcd": [[126, null]], "cupynumeric.gradient": [[127, null]], "cupynumeric.greater": [[128, null]], "cupynumeric.greater_equal": [[129, null]], "cupynumeric.hamming": [[130, null]], "cupynumeric.hanning": [[131, null]], "cupynumeric.histogram": [[132, null]], "cupynumeric.hsplit": [[133, null]], "cupynumeric.hstack": [[134, null]], "cupynumeric.hypot": [[135, null]], "cupynumeric.identity": [[136, null]], "cupynumeric.imag": [[137, null]], "cupynumeric.indices": [[138, null]], "cupynumeric.inner": [[139, null]], "cupynumeric.invert": [[140, null]], "cupynumeric.isclose": [[141, null]], "cupynumeric.iscomplex": [[142, null]], "cupynumeric.iscomplexobj": [[143, null]], "cupynumeric.isfinite": [[144, null]], "cupynumeric.isinf": [[145, null]], "cupynumeric.isnan": [[146, null]], "cupynumeric.isneginf": [[147, null]], "cupynumeric.isposinf": [[148, null]], "cupynumeric.isreal": [[149, null]], "cupynumeric.isrealobj": [[150, null]], "cupynumeric.isscalar": [[151, null]], "cupynumeric.ix_": [[152, null]], "cupynumeric.kaiser": [[153, null]], "cupynumeric.lcm": [[154, null]], "cupynumeric.ldexp": [[155, null]], "cupynumeric.left_shift": [[156, null]], "cupynumeric.less": [[157, null]], "cupynumeric.less_equal": [[158, null]], "cupynumeric.linalg.cholesky": [[159, null]], "cupynumeric.linalg.eig": [[160, null]], "cupynumeric.linalg.eigh": [[161, null]], "cupynumeric.linalg.eigvals": [[162, null]], "cupynumeric.linalg.eigvalsh": [[163, null]], "cupynumeric.linalg.expm": [[164, null]], "cupynumeric.linalg.matrix_power": [[165, null]], "cupynumeric.linalg.multi_dot": [[166, null]], "cupynumeric.linalg.norm": [[167, null]], "cupynumeric.linalg.qr": [[168, null]], "cupynumeric.linalg.solve": [[169, null]], "cupynumeric.linalg.svd": [[170, null]], "cupynumeric.linspace": [[171, null]], "cupynumeric.load": [[172, null]], "cupynumeric.log": [[173, null]], "cupynumeric.log10": [[174, null]], "cupynumeric.log1p": [[175, null]], "cupynumeric.log2": [[176, null]], "cupynumeric.logaddexp": [[177, null]], "cupynumeric.logaddexp2": [[178, null]], "cupynumeric.logical_and": [[179, null]], "cupynumeric.logical_not": [[180, null]], "cupynumeric.logical_or": [[181, null]], "cupynumeric.logical_xor": [[182, null]], "cupynumeric.mask_indices": [[183, null]], "cupynumeric.matmul": [[184, null]], "cupynumeric.maximum": [[185, null]], "cupynumeric.mean": [[186, null]], "cupynumeric.median": [[187, null]], "cupynumeric.meshgrid": [[188, null]], "cupynumeric.minimum": [[189, null]], "cupynumeric.mod": [[190, null]], "cupynumeric.modf": [[191, null]], "cupynumeric.moveaxis": [[192, null]], "cupynumeric.multiply": [[193, null]], "cupynumeric.nanargmax": [[194, null]], "cupynumeric.nanargmin": [[195, null]], "cupynumeric.nancumprod": [[196, null]], "cupynumeric.nancumsum": [[197, null]], "cupynumeric.nanmax": [[198, null]], "cupynumeric.nanmean": [[199, null]], "cupynumeric.nanmedian": [[200, null]], "cupynumeric.nanmin": [[201, null]], "cupynumeric.nanpercentile": [[202, null]], "cupynumeric.nanprod": [[203, null]], "cupynumeric.nanquantile": [[204, null]], "cupynumeric.nansum": [[205, null]], "cupynumeric.ndarray": [[4, null]], "cupynumeric.ndarray.T": [[206, null]], "cupynumeric.ndarray.__abs__": [[207, null]], "cupynumeric.ndarray.__add__": [[208, null]], "cupynumeric.ndarray.__and__": [[209, null]], "cupynumeric.ndarray.__array__": [[210, null]], "cupynumeric.ndarray.__bool__": [[211, null]], "cupynumeric.ndarray.__complex__": [[212, null]], "cupynumeric.ndarray.__contains__": [[213, null]], "cupynumeric.ndarray.__copy__": [[214, null]], "cupynumeric.ndarray.__deepcopy__": [[215, null]], "cupynumeric.ndarray.__divmod__": [[216, null]], "cupynumeric.ndarray.__eq__": [[217, null]], "cupynumeric.ndarray.__float__": [[218, null]], "cupynumeric.ndarray.__floordiv__": [[219, null]], "cupynumeric.ndarray.__ge__": [[220, null]], "cupynumeric.ndarray.__getitem__": [[221, null]], "cupynumeric.ndarray.__gt__": [[222, null]], "cupynumeric.ndarray.__iadd__": [[223, null]], "cupynumeric.ndarray.__iand__": [[224, null]], "cupynumeric.ndarray.__ifloordiv__": [[225, null]], "cupynumeric.ndarray.__ilshift__": [[226, null]], "cupynumeric.ndarray.__imatmul__": [[227, null]], "cupynumeric.ndarray.__imod__": [[228, null]], "cupynumeric.ndarray.__imul__": [[229, null]], "cupynumeric.ndarray.__index__": [[230, null]], "cupynumeric.ndarray.__int__": [[231, null]], "cupynumeric.ndarray.__invert__": [[232, null]], "cupynumeric.ndarray.__ior__": [[233, null]], "cupynumeric.ndarray.__ipow__": [[234, null]], "cupynumeric.ndarray.__irshift__": [[235, null]], "cupynumeric.ndarray.__isub__": [[236, null]], "cupynumeric.ndarray.__itruediv__": [[237, null]], "cupynumeric.ndarray.__ixor__": [[238, null]], "cupynumeric.ndarray.__le__": [[239, null]], "cupynumeric.ndarray.__len__": [[240, null]], "cupynumeric.ndarray.__lshift__": [[241, null]], "cupynumeric.ndarray.__lt__": [[242, null]], "cupynumeric.ndarray.__matmul__": [[243, null]], "cupynumeric.ndarray.__mod__": [[244, null]], "cupynumeric.ndarray.__mul__": [[245, null]], "cupynumeric.ndarray.__ne__": [[246, null]], "cupynumeric.ndarray.__neg__": [[247, null]], "cupynumeric.ndarray.__new__": [[248, null]], "cupynumeric.ndarray.__or__": [[249, null]], "cupynumeric.ndarray.__pos__": [[250, null]], "cupynumeric.ndarray.__pow__": [[251, null]], "cupynumeric.ndarray.__reduce__": [[252, null]], "cupynumeric.ndarray.__repr__": [[253, null]], "cupynumeric.ndarray.__rmatmul__": [[254, null]], "cupynumeric.ndarray.__rshift__": [[255, null]], "cupynumeric.ndarray.__setitem__": [[256, null]], "cupynumeric.ndarray.__setstate__": [[257, null]], "cupynumeric.ndarray.__str__": [[258, null]], "cupynumeric.ndarray.__sub__": [[259, null]], "cupynumeric.ndarray.__truediv__": [[260, null]], "cupynumeric.ndarray.__xor__": [[261, null]], "cupynumeric.ndarray.all": [[262, null]], "cupynumeric.ndarray.any": [[263, null]], "cupynumeric.ndarray.argmax": [[264, null]], "cupynumeric.ndarray.argmin": [[265, null]], "cupynumeric.ndarray.argpartition": [[266, null]], "cupynumeric.ndarray.argsort": [[267, null]], "cupynumeric.ndarray.astype": [[268, null]], "cupynumeric.ndarray.base": [[269, null]], "cupynumeric.ndarray.choose": [[270, null]], "cupynumeric.ndarray.clip": [[271, null]], "cupynumeric.ndarray.compress": [[272, null]], "cupynumeric.ndarray.conj": [[273, null]], "cupynumeric.ndarray.conjugate": [[274, null]], "cupynumeric.ndarray.copy": [[275, null]], "cupynumeric.ndarray.ctypes": [[276, null]], "cupynumeric.ndarray.cumprod": [[277, null]], "cupynumeric.ndarray.cumsum": [[278, null]], "cupynumeric.ndarray.data": [[279, null]], "cupynumeric.ndarray.diagonal": [[280, null]], "cupynumeric.ndarray.dot": [[281, null]], "cupynumeric.ndarray.dtype": [[282, null]], "cupynumeric.ndarray.dump": [[283, null]], "cupynumeric.ndarray.dumps": [[284, null]], "cupynumeric.ndarray.fill": [[285, null]], "cupynumeric.ndarray.flags": [[286, null]], "cupynumeric.ndarray.flat": [[287, null]], "cupynumeric.ndarray.flatten": [[288, null]], "cupynumeric.ndarray.flip": [[289, null]], "cupynumeric.ndarray.getfield": [[290, null]], "cupynumeric.ndarray.imag": [[291, null]], "cupynumeric.ndarray.item": [[292, null]], "cupynumeric.ndarray.itemset": [[293, null]], "cupynumeric.ndarray.itemsize": [[294, null]], "cupynumeric.ndarray.max": [[295, null]], "cupynumeric.ndarray.mean": [[296, null]], "cupynumeric.ndarray.min": [[297, null]], "cupynumeric.ndarray.nbytes": [[298, null]], "cupynumeric.ndarray.ndim": [[299, null]], "cupynumeric.ndarray.nonzero": [[300, null]], "cupynumeric.ndarray.partition": [[301, null]], "cupynumeric.ndarray.prod": [[302, null]], "cupynumeric.ndarray.put": [[303, null]], "cupynumeric.ndarray.ravel": [[304, null]], "cupynumeric.ndarray.real": [[305, null]], "cupynumeric.ndarray.reshape": [[306, null]], "cupynumeric.ndarray.searchsorted": [[307, null]], "cupynumeric.ndarray.setfield": [[308, null]], "cupynumeric.ndarray.setflags": [[309, null]], "cupynumeric.ndarray.shape": [[310, null]], "cupynumeric.ndarray.size": [[311, null]], "cupynumeric.ndarray.sort": [[312, null]], "cupynumeric.ndarray.squeeze": [[313, null]], "cupynumeric.ndarray.strides": [[314, null]], "cupynumeric.ndarray.sum": [[315, null]], "cupynumeric.ndarray.swapaxes": [[316, null]], "cupynumeric.ndarray.take": [[317, null]], "cupynumeric.ndarray.tobytes": [[318, null]], "cupynumeric.ndarray.tofile": [[319, null]], "cupynumeric.ndarray.tolist": [[320, null]], "cupynumeric.ndarray.tostring": [[321, null]], "cupynumeric.ndarray.trace": [[322, null]], "cupynumeric.ndarray.transpose": [[323, null]], "cupynumeric.ndarray.unique": [[324, null]], "cupynumeric.ndarray.var": [[325, null]], "cupynumeric.ndarray.view": [[326, null]], "cupynumeric.ndim": [[327, null]], "cupynumeric.negative": [[328, null]], "cupynumeric.nextafter": [[329, null]], "cupynumeric.nonzero": [[330, null]], "cupynumeric.not_equal": [[331, null]], "cupynumeric.ones": [[332, null]], "cupynumeric.ones_like": [[333, null]], "cupynumeric.outer": [[334, null]], "cupynumeric.packbits": [[335, null]], "cupynumeric.partition": [[336, null]], "cupynumeric.percentile": [[337, null]], "cupynumeric.place": [[338, null]], "cupynumeric.positive": [[339, null]], "cupynumeric.power": [[340, null]], "cupynumeric.prod": [[341, null]], "cupynumeric.put": [[342, null]], "cupynumeric.put_along_axis": [[343, null]], "cupynumeric.putmask": [[344, null]], "cupynumeric.quantile": [[345, null]], "cupynumeric.rad2deg": [[346, null]], "cupynumeric.radians": [[347, null]], "cupynumeric.random.BitGenerator": [[1, null]], "cupynumeric.random.Generator": [[2, null]], "cupynumeric.random.beta": [[348, null]], "cupynumeric.random.binomial": [[349, null]], "cupynumeric.random.bytes": [[350, null]], "cupynumeric.random.chisquare": [[351, null]], "cupynumeric.random.default_rng": [[352, null]], "cupynumeric.random.exponential": [[353, null]], "cupynumeric.random.f": [[354, null]], "cupynumeric.random.gamma": [[355, null]], "cupynumeric.random.geometric": [[356, null]], "cupynumeric.random.gumbel": [[357, null]], "cupynumeric.random.hypergeometric": [[358, null]], "cupynumeric.random.laplace": [[359, null]], "cupynumeric.random.logistic": [[360, null]], "cupynumeric.random.lognormal": [[361, null]], "cupynumeric.random.logseries": [[362, null]], "cupynumeric.random.negative_binomial": [[363, null]], "cupynumeric.random.noncentral_chisquare": [[364, null]], "cupynumeric.random.noncentral_f": [[365, null]], "cupynumeric.random.normal": [[366, null]], "cupynumeric.random.pareto": [[367, null]], "cupynumeric.random.poisson": [[368, null]], "cupynumeric.random.power": [[369, null]], "cupynumeric.random.rand": [[370, null]], "cupynumeric.random.randint": [[371, null]], "cupynumeric.random.randn": [[372, null]], "cupynumeric.random.random": [[373, null]], "cupynumeric.random.random_integers": [[374, null]], "cupynumeric.random.random_sample": [[375, null]], "cupynumeric.random.ranf": [[376, null]], "cupynumeric.random.rayleigh": [[377, null]], "cupynumeric.random.sample": [[378, null]], "cupynumeric.random.seed": [[379, null]], "cupynumeric.random.standard_cauchy": [[380, null]], "cupynumeric.random.standard_exponential": [[381, null]], "cupynumeric.random.standard_gamma": [[382, null]], "cupynumeric.random.standard_t": [[383, null]], "cupynumeric.random.triangular": [[384, null]], "cupynumeric.random.uniform": [[385, null]], "cupynumeric.random.vonmises": [[386, null]], "cupynumeric.random.wald": [[387, null]], "cupynumeric.random.weibull": [[388, null]], "cupynumeric.random.zipf": [[389, null]], "cupynumeric.ravel": [[390, null]], "cupynumeric.real": [[391, null]], "cupynumeric.reciprocal": [[392, null]], "cupynumeric.remainder": [[393, null]], "cupynumeric.repeat": [[394, null]], "cupynumeric.reshape": [[395, null]], "cupynumeric.right_shift": [[396, null]], "cupynumeric.rint": [[397, null]], "cupynumeric.roll": [[398, null]], "cupynumeric.rot90": [[399, null]], "cupynumeric.round": [[400, null]], "cupynumeric.row_stack": [[401, null]], "cupynumeric.searchsorted": [[402, null]], "cupynumeric.select": [[403, null]], "cupynumeric.shape": [[404, null]], "cupynumeric.sign": [[405, null]], "cupynumeric.signbit": [[406, null]], "cupynumeric.sin": [[407, null]], "cupynumeric.sinh": [[408, null]], "cupynumeric.sort": [[409, null]], "cupynumeric.sort_complex": [[410, null]], "cupynumeric.split": [[411, null]], "cupynumeric.sqrt": [[412, null]], "cupynumeric.square": [[413, null]], "cupynumeric.squeeze": [[414, null]], "cupynumeric.stack": [[415, null]], "cupynumeric.subtract": [[416, null]], "cupynumeric.sum": [[417, null]], "cupynumeric.swapaxes": [[418, null]], "cupynumeric.take": [[419, null]], "cupynumeric.take_along_axis": [[420, null]], "cupynumeric.tan": [[421, null]], "cupynumeric.tanh": [[422, null]], "cupynumeric.tensordot": [[423, null]], "cupynumeric.tile": [[424, null]], "cupynumeric.trace": [[425, null]], "cupynumeric.transpose": [[426, null]], "cupynumeric.tri": [[427, null]], "cupynumeric.tril": [[428, null]], "cupynumeric.tril_indices": [[429, null]], "cupynumeric.tril_indices_from": [[430, null]], "cupynumeric.triu": [[431, null]], "cupynumeric.triu_indices": [[432, null]], "cupynumeric.triu_indices_from": [[433, null]], "cupynumeric.true_divide": [[434, null]], "cupynumeric.trunc": [[435, null]], "cupynumeric.unique": [[436, null]], "cupynumeric.unpackbits": [[437, null]], "cupynumeric.unravel_index": [[438, null]], "cupynumeric.var": [[439, null]], "cupynumeric.vdot": [[440, null]], "cupynumeric.vsplit": [[441, null]], "cupynumeric.vstack": [[442, null]], "cupynumeric.where": [[443, null]], "cupynumeric.zeros": [[444, null]], "cupynumeric.zeros_like": [[445, null]], "doctor": [[457, "doctor"]], "doctor_filename": [[457, "doctor-filename"], [457, "id2"]], "doctor_format": [[457, "doctor-format"]], "fallback_stacktrace": [[457, "fallback-stacktrace"]], "fast_math": [[457, "fast-math"]], "force_thunk": [[457, "force-thunk"]], "matmul_cache_size": [[457, "matmul-cache-size"]], "min_cpu_chunk": [[457, "min-cpu-chunk"]], "min_gpu_chunk": [[457, "min-gpu-chunk"]], "min_omp_chunk": [[457, "min-omp-chunk"]], "numpy_compat": [[457, "numpy-compat"]], "preload_cudalibs": [[457, "preload-cudalibs"]], "report_coverage": [[457, "report-coverage"]], "report_dump_callstack": [[457, "report-dump-callstack"]], "report_dump_csv": [[457, "report-dump-csv"]], "test": [[457, "test"]], "warn": [[457, "warn"]]}, "docnames": ["_implemented", "api/_bitgenerator", "api/_generator", "api/_grouped", "api/_ndarray", "api/binary", "api/broadcast", "api/classes", "api/comparison", "api/creation", "api/datatype", "api/fft", "api/generated/cupynumeric.absolute", "api/generated/cupynumeric.add", "api/generated/cupynumeric.all", "api/generated/cupynumeric.allclose", "api/generated/cupynumeric.amax", "api/generated/cupynumeric.amin", "api/generated/cupynumeric.angle", "api/generated/cupynumeric.any", "api/generated/cupynumeric.append", "api/generated/cupynumeric.arange", "api/generated/cupynumeric.arccos", "api/generated/cupynumeric.arccosh", "api/generated/cupynumeric.arcsin", "api/generated/cupynumeric.arcsinh", "api/generated/cupynumeric.arctan", "api/generated/cupynumeric.arctan2", "api/generated/cupynumeric.arctanh", "api/generated/cupynumeric.argmax", "api/generated/cupynumeric.argmin", "api/generated/cupynumeric.argpartition", "api/generated/cupynumeric.argsort", "api/generated/cupynumeric.argwhere", "api/generated/cupynumeric.array", "api/generated/cupynumeric.array_equal", "api/generated/cupynumeric.array_split", "api/generated/cupynumeric.asarray", "api/generated/cupynumeric.atleast_1d", "api/generated/cupynumeric.atleast_2d", "api/generated/cupynumeric.atleast_3d", "api/generated/cupynumeric.average", "api/generated/cupynumeric.bartlett", "api/generated/cupynumeric.bincount", "api/generated/cupynumeric.bitwise_and", "api/generated/cupynumeric.bitwise_or", "api/generated/cupynumeric.bitwise_xor", "api/generated/cupynumeric.blackman", "api/generated/cupynumeric.block", "api/generated/cupynumeric.broadcast_arrays", "api/generated/cupynumeric.broadcast_shapes", "api/generated/cupynumeric.broadcast_to", "api/generated/cupynumeric.cbrt", "api/generated/cupynumeric.ceil", "api/generated/cupynumeric.choose", "api/generated/cupynumeric.clip", "api/generated/cupynumeric.column_stack", "api/generated/cupynumeric.compress", "api/generated/cupynumeric.concatenate", "api/generated/cupynumeric.conj", "api/generated/cupynumeric.conjugate", "api/generated/cupynumeric.convolve", "api/generated/cupynumeric.copy", "api/generated/cupynumeric.copysign", "api/generated/cupynumeric.cos", "api/generated/cupynumeric.cosh", "api/generated/cupynumeric.count_nonzero", "api/generated/cupynumeric.cov", "api/generated/cupynumeric.cumprod", "api/generated/cupynumeric.cumsum", "api/generated/cupynumeric.deg2rad", "api/generated/cupynumeric.degrees", "api/generated/cupynumeric.delete", "api/generated/cupynumeric.diag", "api/generated/cupynumeric.diag_indices", "api/generated/cupynumeric.diag_indices_from", "api/generated/cupynumeric.diagonal", "api/generated/cupynumeric.diff", "api/generated/cupynumeric.digitize", "api/generated/cupynumeric.divide", "api/generated/cupynumeric.dot", "api/generated/cupynumeric.dsplit", "api/generated/cupynumeric.dstack", "api/generated/cupynumeric.einsum", "api/generated/cupynumeric.einsum_path", "api/generated/cupynumeric.empty", "api/generated/cupynumeric.empty_like", "api/generated/cupynumeric.equal", "api/generated/cupynumeric.exp", "api/generated/cupynumeric.exp2", "api/generated/cupynumeric.expand_dims", "api/generated/cupynumeric.expm1", "api/generated/cupynumeric.extract", "api/generated/cupynumeric.eye", "api/generated/cupynumeric.fabs", "api/generated/cupynumeric.fft.fft", "api/generated/cupynumeric.fft.fft2", "api/generated/cupynumeric.fft.fftn", "api/generated/cupynumeric.fft.fftshift", "api/generated/cupynumeric.fft.hfft", "api/generated/cupynumeric.fft.ifft", "api/generated/cupynumeric.fft.ifft2", "api/generated/cupynumeric.fft.ifftn", "api/generated/cupynumeric.fft.ifftshift", "api/generated/cupynumeric.fft.ihfft", "api/generated/cupynumeric.fft.irfft", "api/generated/cupynumeric.fft.irfft2", "api/generated/cupynumeric.fft.irfftn", "api/generated/cupynumeric.fft.rfft", "api/generated/cupynumeric.fft.rfft2", "api/generated/cupynumeric.fft.rfftn", "api/generated/cupynumeric.fill_diagonal", "api/generated/cupynumeric.find_common_type", "api/generated/cupynumeric.flatnonzero", "api/generated/cupynumeric.flip", "api/generated/cupynumeric.fliplr", "api/generated/cupynumeric.flipud", "api/generated/cupynumeric.float_power", "api/generated/cupynumeric.floor", "api/generated/cupynumeric.floor_divide", "api/generated/cupynumeric.fmax", "api/generated/cupynumeric.fmin", "api/generated/cupynumeric.fmod", "api/generated/cupynumeric.frexp", "api/generated/cupynumeric.full", "api/generated/cupynumeric.full_like", "api/generated/cupynumeric.gcd", "api/generated/cupynumeric.gradient", "api/generated/cupynumeric.greater", "api/generated/cupynumeric.greater_equal", "api/generated/cupynumeric.hamming", "api/generated/cupynumeric.hanning", "api/generated/cupynumeric.histogram", "api/generated/cupynumeric.hsplit", "api/generated/cupynumeric.hstack", "api/generated/cupynumeric.hypot", "api/generated/cupynumeric.identity", "api/generated/cupynumeric.imag", "api/generated/cupynumeric.indices", "api/generated/cupynumeric.inner", "api/generated/cupynumeric.invert", "api/generated/cupynumeric.isclose", "api/generated/cupynumeric.iscomplex", "api/generated/cupynumeric.iscomplexobj", "api/generated/cupynumeric.isfinite", "api/generated/cupynumeric.isinf", "api/generated/cupynumeric.isnan", "api/generated/cupynumeric.isneginf", "api/generated/cupynumeric.isposinf", "api/generated/cupynumeric.isreal", "api/generated/cupynumeric.isrealobj", "api/generated/cupynumeric.isscalar", "api/generated/cupynumeric.ix_", "api/generated/cupynumeric.kaiser", "api/generated/cupynumeric.lcm", "api/generated/cupynumeric.ldexp", "api/generated/cupynumeric.left_shift", "api/generated/cupynumeric.less", "api/generated/cupynumeric.less_equal", "api/generated/cupynumeric.linalg.cholesky", "api/generated/cupynumeric.linalg.eig", "api/generated/cupynumeric.linalg.eigh", "api/generated/cupynumeric.linalg.eigvals", "api/generated/cupynumeric.linalg.eigvalsh", "api/generated/cupynumeric.linalg.expm", "api/generated/cupynumeric.linalg.matrix_power", "api/generated/cupynumeric.linalg.multi_dot", "api/generated/cupynumeric.linalg.norm", "api/generated/cupynumeric.linalg.qr", "api/generated/cupynumeric.linalg.solve", "api/generated/cupynumeric.linalg.svd", "api/generated/cupynumeric.linspace", "api/generated/cupynumeric.load", "api/generated/cupynumeric.log", "api/generated/cupynumeric.log10", "api/generated/cupynumeric.log1p", "api/generated/cupynumeric.log2", "api/generated/cupynumeric.logaddexp", "api/generated/cupynumeric.logaddexp2", "api/generated/cupynumeric.logical_and", "api/generated/cupynumeric.logical_not", "api/generated/cupynumeric.logical_or", "api/generated/cupynumeric.logical_xor", "api/generated/cupynumeric.mask_indices", "api/generated/cupynumeric.matmul", "api/generated/cupynumeric.maximum", "api/generated/cupynumeric.mean", "api/generated/cupynumeric.median", "api/generated/cupynumeric.meshgrid", "api/generated/cupynumeric.minimum", "api/generated/cupynumeric.mod", "api/generated/cupynumeric.modf", "api/generated/cupynumeric.moveaxis", "api/generated/cupynumeric.multiply", "api/generated/cupynumeric.nanargmax", "api/generated/cupynumeric.nanargmin", "api/generated/cupynumeric.nancumprod", "api/generated/cupynumeric.nancumsum", "api/generated/cupynumeric.nanmax", "api/generated/cupynumeric.nanmean", "api/generated/cupynumeric.nanmedian", "api/generated/cupynumeric.nanmin", "api/generated/cupynumeric.nanpercentile", "api/generated/cupynumeric.nanprod", "api/generated/cupynumeric.nanquantile", "api/generated/cupynumeric.nansum", "api/generated/cupynumeric.ndarray.T", "api/generated/cupynumeric.ndarray.__abs__", "api/generated/cupynumeric.ndarray.__add__", "api/generated/cupynumeric.ndarray.__and__", "api/generated/cupynumeric.ndarray.__array__", "api/generated/cupynumeric.ndarray.__bool__", "api/generated/cupynumeric.ndarray.__complex__", "api/generated/cupynumeric.ndarray.__contains__", "api/generated/cupynumeric.ndarray.__copy__", "api/generated/cupynumeric.ndarray.__deepcopy__", "api/generated/cupynumeric.ndarray.__divmod__", "api/generated/cupynumeric.ndarray.__eq__", "api/generated/cupynumeric.ndarray.__float__", "api/generated/cupynumeric.ndarray.__floordiv__", "api/generated/cupynumeric.ndarray.__ge__", "api/generated/cupynumeric.ndarray.__getitem__", "api/generated/cupynumeric.ndarray.__gt__", "api/generated/cupynumeric.ndarray.__iadd__", "api/generated/cupynumeric.ndarray.__iand__", "api/generated/cupynumeric.ndarray.__ifloordiv__", "api/generated/cupynumeric.ndarray.__ilshift__", "api/generated/cupynumeric.ndarray.__imatmul__", "api/generated/cupynumeric.ndarray.__imod__", "api/generated/cupynumeric.ndarray.__imul__", "api/generated/cupynumeric.ndarray.__index__", "api/generated/cupynumeric.ndarray.__int__", "api/generated/cupynumeric.ndarray.__invert__", "api/generated/cupynumeric.ndarray.__ior__", "api/generated/cupynumeric.ndarray.__ipow__", "api/generated/cupynumeric.ndarray.__irshift__", "api/generated/cupynumeric.ndarray.__isub__", "api/generated/cupynumeric.ndarray.__itruediv__", "api/generated/cupynumeric.ndarray.__ixor__", "api/generated/cupynumeric.ndarray.__le__", "api/generated/cupynumeric.ndarray.__len__", "api/generated/cupynumeric.ndarray.__lshift__", "api/generated/cupynumeric.ndarray.__lt__", "api/generated/cupynumeric.ndarray.__matmul__", "api/generated/cupynumeric.ndarray.__mod__", "api/generated/cupynumeric.ndarray.__mul__", "api/generated/cupynumeric.ndarray.__ne__", "api/generated/cupynumeric.ndarray.__neg__", "api/generated/cupynumeric.ndarray.__new__", "api/generated/cupynumeric.ndarray.__or__", "api/generated/cupynumeric.ndarray.__pos__", "api/generated/cupynumeric.ndarray.__pow__", "api/generated/cupynumeric.ndarray.__reduce__", "api/generated/cupynumeric.ndarray.__repr__", "api/generated/cupynumeric.ndarray.__rmatmul__", "api/generated/cupynumeric.ndarray.__rshift__", "api/generated/cupynumeric.ndarray.__setitem__", "api/generated/cupynumeric.ndarray.__setstate__", "api/generated/cupynumeric.ndarray.__str__", "api/generated/cupynumeric.ndarray.__sub__", "api/generated/cupynumeric.ndarray.__truediv__", "api/generated/cupynumeric.ndarray.__xor__", "api/generated/cupynumeric.ndarray.all", "api/generated/cupynumeric.ndarray.any", "api/generated/cupynumeric.ndarray.argmax", "api/generated/cupynumeric.ndarray.argmin", "api/generated/cupynumeric.ndarray.argpartition", "api/generated/cupynumeric.ndarray.argsort", "api/generated/cupynumeric.ndarray.astype", "api/generated/cupynumeric.ndarray.base", "api/generated/cupynumeric.ndarray.choose", "api/generated/cupynumeric.ndarray.clip", "api/generated/cupynumeric.ndarray.compress", "api/generated/cupynumeric.ndarray.conj", "api/generated/cupynumeric.ndarray.conjugate", "api/generated/cupynumeric.ndarray.copy", "api/generated/cupynumeric.ndarray.ctypes", "api/generated/cupynumeric.ndarray.cumprod", "api/generated/cupynumeric.ndarray.cumsum", "api/generated/cupynumeric.ndarray.data", "api/generated/cupynumeric.ndarray.diagonal", "api/generated/cupynumeric.ndarray.dot", "api/generated/cupynumeric.ndarray.dtype", "api/generated/cupynumeric.ndarray.dump", "api/generated/cupynumeric.ndarray.dumps", "api/generated/cupynumeric.ndarray.fill", "api/generated/cupynumeric.ndarray.flags", "api/generated/cupynumeric.ndarray.flat", "api/generated/cupynumeric.ndarray.flatten", "api/generated/cupynumeric.ndarray.flip", "api/generated/cupynumeric.ndarray.getfield", "api/generated/cupynumeric.ndarray.imag", "api/generated/cupynumeric.ndarray.item", "api/generated/cupynumeric.ndarray.itemset", "api/generated/cupynumeric.ndarray.itemsize", "api/generated/cupynumeric.ndarray.max", "api/generated/cupynumeric.ndarray.mean", "api/generated/cupynumeric.ndarray.min", "api/generated/cupynumeric.ndarray.nbytes", "api/generated/cupynumeric.ndarray.ndim", "api/generated/cupynumeric.ndarray.nonzero", "api/generated/cupynumeric.ndarray.partition", "api/generated/cupynumeric.ndarray.prod", "api/generated/cupynumeric.ndarray.put", "api/generated/cupynumeric.ndarray.ravel", "api/generated/cupynumeric.ndarray.real", "api/generated/cupynumeric.ndarray.reshape", "api/generated/cupynumeric.ndarray.searchsorted", "api/generated/cupynumeric.ndarray.setfield", "api/generated/cupynumeric.ndarray.setflags", "api/generated/cupynumeric.ndarray.shape", "api/generated/cupynumeric.ndarray.size", "api/generated/cupynumeric.ndarray.sort", "api/generated/cupynumeric.ndarray.squeeze", "api/generated/cupynumeric.ndarray.strides", "api/generated/cupynumeric.ndarray.sum", "api/generated/cupynumeric.ndarray.swapaxes", "api/generated/cupynumeric.ndarray.take", "api/generated/cupynumeric.ndarray.tobytes", "api/generated/cupynumeric.ndarray.tofile", "api/generated/cupynumeric.ndarray.tolist", "api/generated/cupynumeric.ndarray.tostring", "api/generated/cupynumeric.ndarray.trace", "api/generated/cupynumeric.ndarray.transpose", "api/generated/cupynumeric.ndarray.unique", "api/generated/cupynumeric.ndarray.var", "api/generated/cupynumeric.ndarray.view", "api/generated/cupynumeric.ndim", "api/generated/cupynumeric.negative", "api/generated/cupynumeric.nextafter", "api/generated/cupynumeric.nonzero", "api/generated/cupynumeric.not_equal", "api/generated/cupynumeric.ones", "api/generated/cupynumeric.ones_like", "api/generated/cupynumeric.outer", "api/generated/cupynumeric.packbits", "api/generated/cupynumeric.partition", "api/generated/cupynumeric.percentile", "api/generated/cupynumeric.place", "api/generated/cupynumeric.positive", "api/generated/cupynumeric.power", "api/generated/cupynumeric.prod", "api/generated/cupynumeric.put", "api/generated/cupynumeric.put_along_axis", "api/generated/cupynumeric.putmask", "api/generated/cupynumeric.quantile", "api/generated/cupynumeric.rad2deg", "api/generated/cupynumeric.radians", "api/generated/cupynumeric.random.beta", "api/generated/cupynumeric.random.binomial", "api/generated/cupynumeric.random.bytes", "api/generated/cupynumeric.random.chisquare", "api/generated/cupynumeric.random.default_rng", "api/generated/cupynumeric.random.exponential", "api/generated/cupynumeric.random.f", "api/generated/cupynumeric.random.gamma", "api/generated/cupynumeric.random.geometric", "api/generated/cupynumeric.random.gumbel", "api/generated/cupynumeric.random.hypergeometric", "api/generated/cupynumeric.random.laplace", "api/generated/cupynumeric.random.logistic", "api/generated/cupynumeric.random.lognormal", "api/generated/cupynumeric.random.logseries", "api/generated/cupynumeric.random.negative_binomial", "api/generated/cupynumeric.random.noncentral_chisquare", "api/generated/cupynumeric.random.noncentral_f", "api/generated/cupynumeric.random.normal", "api/generated/cupynumeric.random.pareto", "api/generated/cupynumeric.random.poisson", "api/generated/cupynumeric.random.power", "api/generated/cupynumeric.random.rand", "api/generated/cupynumeric.random.randint", "api/generated/cupynumeric.random.randn", "api/generated/cupynumeric.random.random", "api/generated/cupynumeric.random.random_integers", "api/generated/cupynumeric.random.random_sample", "api/generated/cupynumeric.random.ranf", "api/generated/cupynumeric.random.rayleigh", "api/generated/cupynumeric.random.sample", "api/generated/cupynumeric.random.seed", "api/generated/cupynumeric.random.standard_cauchy", "api/generated/cupynumeric.random.standard_exponential", "api/generated/cupynumeric.random.standard_gamma", "api/generated/cupynumeric.random.standard_t", "api/generated/cupynumeric.random.triangular", "api/generated/cupynumeric.random.uniform", "api/generated/cupynumeric.random.vonmises", "api/generated/cupynumeric.random.wald", "api/generated/cupynumeric.random.weibull", "api/generated/cupynumeric.random.zipf", "api/generated/cupynumeric.ravel", "api/generated/cupynumeric.real", "api/generated/cupynumeric.reciprocal", "api/generated/cupynumeric.remainder", "api/generated/cupynumeric.repeat", "api/generated/cupynumeric.reshape", "api/generated/cupynumeric.right_shift", "api/generated/cupynumeric.rint", "api/generated/cupynumeric.roll", "api/generated/cupynumeric.rot90", "api/generated/cupynumeric.round", "api/generated/cupynumeric.row_stack", "api/generated/cupynumeric.searchsorted", "api/generated/cupynumeric.select", "api/generated/cupynumeric.shape", "api/generated/cupynumeric.sign", "api/generated/cupynumeric.signbit", "api/generated/cupynumeric.sin", "api/generated/cupynumeric.sinh", "api/generated/cupynumeric.sort", "api/generated/cupynumeric.sort_complex", "api/generated/cupynumeric.split", "api/generated/cupynumeric.sqrt", "api/generated/cupynumeric.square", "api/generated/cupynumeric.squeeze", "api/generated/cupynumeric.stack", "api/generated/cupynumeric.subtract", "api/generated/cupynumeric.sum", "api/generated/cupynumeric.swapaxes", "api/generated/cupynumeric.take", "api/generated/cupynumeric.take_along_axis", "api/generated/cupynumeric.tan", "api/generated/cupynumeric.tanh", "api/generated/cupynumeric.tensordot", "api/generated/cupynumeric.tile", "api/generated/cupynumeric.trace", "api/generated/cupynumeric.transpose", "api/generated/cupynumeric.tri", "api/generated/cupynumeric.tril", "api/generated/cupynumeric.tril_indices", "api/generated/cupynumeric.tril_indices_from", "api/generated/cupynumeric.triu", "api/generated/cupynumeric.triu_indices", "api/generated/cupynumeric.triu_indices_from", "api/generated/cupynumeric.true_divide", "api/generated/cupynumeric.trunc", "api/generated/cupynumeric.unique", "api/generated/cupynumeric.unpackbits", "api/generated/cupynumeric.unravel_index", "api/generated/cupynumeric.var", "api/generated/cupynumeric.vdot", "api/generated/cupynumeric.vsplit", "api/generated/cupynumeric.vstack", "api/generated/cupynumeric.where", "api/generated/cupynumeric.zeros", "api/generated/cupynumeric.zeros_like", "api/index", "api/indexing", "api/io", "api/linalg", "api/logic", "api/manipulation", "api/math", "api/ndarray", "api/random", "api/routines", "api/set", "api/settings", "api/sorting", "api/statistics", "api/window", "developer/CONTRIBUTING", "developer/building", "developer/index", "developer/testing", "examples/black_scholes", "examples/cholesky", "examples/compact_finite_difference", "examples/edge_detection", "examples/index", "examples/kmeans", "examples/newton_raphson_2d", "examples/stencil", "examples/torchswe", "faqs", "index", "installation", "oss-licenses", "user/advanced", "user/differences", "user/howtos/benchmarking", "user/howtos/index", "user/howtos/measuring", "user/howtos/patching", "user/index", "user/practices", "user/tutorial", "user/usage"], "envversion": {"nbsphinx": 4, "sphinx": 64, "sphinx.domains.c": 3, "sphinx.domains.changeset": 1, "sphinx.domains.citation": 1, "sphinx.domains.cpp": 9, "sphinx.domains.index": 1, "sphinx.domains.javascript": 3, "sphinx.domains.math": 2, "sphinx.domains.python": 4, "sphinx.domains.rst": 2, "sphinx.domains.std": 2, "sphinx.ext.intersphinx": 1}, "filenames": ["_implemented.rst", "api/_bitgenerator.rst", "api/_generator.rst", "api/_grouped.rst", "api/_ndarray.rst", "api/binary.rst", "api/broadcast.rst", "api/classes.rst", "api/comparison.rst", "api/creation.rst", "api/datatype.rst", "api/fft.rst", "api/generated/cupynumeric.absolute.rst", "api/generated/cupynumeric.add.rst", "api/generated/cupynumeric.all.rst", "api/generated/cupynumeric.allclose.rst", "api/generated/cupynumeric.amax.rst", "api/generated/cupynumeric.amin.rst", "api/generated/cupynumeric.angle.rst", "api/generated/cupynumeric.any.rst", "api/generated/cupynumeric.append.rst", "api/generated/cupynumeric.arange.rst", "api/generated/cupynumeric.arccos.rst", "api/generated/cupynumeric.arccosh.rst", "api/generated/cupynumeric.arcsin.rst", "api/generated/cupynumeric.arcsinh.rst", "api/generated/cupynumeric.arctan.rst", "api/generated/cupynumeric.arctan2.rst", "api/generated/cupynumeric.arctanh.rst", "api/generated/cupynumeric.argmax.rst", "api/generated/cupynumeric.argmin.rst", "api/generated/cupynumeric.argpartition.rst", "api/generated/cupynumeric.argsort.rst", "api/generated/cupynumeric.argwhere.rst", "api/generated/cupynumeric.array.rst", "api/generated/cupynumeric.array_equal.rst", "api/generated/cupynumeric.array_split.rst", "api/generated/cupynumeric.asarray.rst", "api/generated/cupynumeric.atleast_1d.rst", "api/generated/cupynumeric.atleast_2d.rst", "api/generated/cupynumeric.atleast_3d.rst", "api/generated/cupynumeric.average.rst", "api/generated/cupynumeric.bartlett.rst", "api/generated/cupynumeric.bincount.rst", "api/generated/cupynumeric.bitwise_and.rst", "api/generated/cupynumeric.bitwise_or.rst", "api/generated/cupynumeric.bitwise_xor.rst", "api/generated/cupynumeric.blackman.rst", "api/generated/cupynumeric.block.rst", "api/generated/cupynumeric.broadcast_arrays.rst", "api/generated/cupynumeric.broadcast_shapes.rst", "api/generated/cupynumeric.broadcast_to.rst", "api/generated/cupynumeric.cbrt.rst", "api/generated/cupynumeric.ceil.rst", "api/generated/cupynumeric.choose.rst", "api/generated/cupynumeric.clip.rst", "api/generated/cupynumeric.column_stack.rst", "api/generated/cupynumeric.compress.rst", "api/generated/cupynumeric.concatenate.rst", "api/generated/cupynumeric.conj.rst", "api/generated/cupynumeric.conjugate.rst", "api/generated/cupynumeric.convolve.rst", "api/generated/cupynumeric.copy.rst", "api/generated/cupynumeric.copysign.rst", "api/generated/cupynumeric.cos.rst", "api/generated/cupynumeric.cosh.rst", "api/generated/cupynumeric.count_nonzero.rst", "api/generated/cupynumeric.cov.rst", "api/generated/cupynumeric.cumprod.rst", "api/generated/cupynumeric.cumsum.rst", "api/generated/cupynumeric.deg2rad.rst", "api/generated/cupynumeric.degrees.rst", "api/generated/cupynumeric.delete.rst", "api/generated/cupynumeric.diag.rst", "api/generated/cupynumeric.diag_indices.rst", "api/generated/cupynumeric.diag_indices_from.rst", "api/generated/cupynumeric.diagonal.rst", "api/generated/cupynumeric.diff.rst", "api/generated/cupynumeric.digitize.rst", "api/generated/cupynumeric.divide.rst", "api/generated/cupynumeric.dot.rst", "api/generated/cupynumeric.dsplit.rst", "api/generated/cupynumeric.dstack.rst", "api/generated/cupynumeric.einsum.rst", "api/generated/cupynumeric.einsum_path.rst", "api/generated/cupynumeric.empty.rst", "api/generated/cupynumeric.empty_like.rst", "api/generated/cupynumeric.equal.rst", "api/generated/cupynumeric.exp.rst", "api/generated/cupynumeric.exp2.rst", "api/generated/cupynumeric.expand_dims.rst", "api/generated/cupynumeric.expm1.rst", "api/generated/cupynumeric.extract.rst", "api/generated/cupynumeric.eye.rst", "api/generated/cupynumeric.fabs.rst", "api/generated/cupynumeric.fft.fft.rst", "api/generated/cupynumeric.fft.fft2.rst", "api/generated/cupynumeric.fft.fftn.rst", "api/generated/cupynumeric.fft.fftshift.rst", "api/generated/cupynumeric.fft.hfft.rst", "api/generated/cupynumeric.fft.ifft.rst", "api/generated/cupynumeric.fft.ifft2.rst", "api/generated/cupynumeric.fft.ifftn.rst", "api/generated/cupynumeric.fft.ifftshift.rst", "api/generated/cupynumeric.fft.ihfft.rst", "api/generated/cupynumeric.fft.irfft.rst", "api/generated/cupynumeric.fft.irfft2.rst", "api/generated/cupynumeric.fft.irfftn.rst", "api/generated/cupynumeric.fft.rfft.rst", "api/generated/cupynumeric.fft.rfft2.rst", "api/generated/cupynumeric.fft.rfftn.rst", "api/generated/cupynumeric.fill_diagonal.rst", "api/generated/cupynumeric.find_common_type.rst", "api/generated/cupynumeric.flatnonzero.rst", "api/generated/cupynumeric.flip.rst", "api/generated/cupynumeric.fliplr.rst", "api/generated/cupynumeric.flipud.rst", "api/generated/cupynumeric.float_power.rst", "api/generated/cupynumeric.floor.rst", "api/generated/cupynumeric.floor_divide.rst", "api/generated/cupynumeric.fmax.rst", "api/generated/cupynumeric.fmin.rst", "api/generated/cupynumeric.fmod.rst", "api/generated/cupynumeric.frexp.rst", "api/generated/cupynumeric.full.rst", "api/generated/cupynumeric.full_like.rst", "api/generated/cupynumeric.gcd.rst", "api/generated/cupynumeric.gradient.rst", "api/generated/cupynumeric.greater.rst", "api/generated/cupynumeric.greater_equal.rst", "api/generated/cupynumeric.hamming.rst", "api/generated/cupynumeric.hanning.rst", "api/generated/cupynumeric.histogram.rst", "api/generated/cupynumeric.hsplit.rst", "api/generated/cupynumeric.hstack.rst", "api/generated/cupynumeric.hypot.rst", "api/generated/cupynumeric.identity.rst", "api/generated/cupynumeric.imag.rst", "api/generated/cupynumeric.indices.rst", "api/generated/cupynumeric.inner.rst", "api/generated/cupynumeric.invert.rst", "api/generated/cupynumeric.isclose.rst", "api/generated/cupynumeric.iscomplex.rst", "api/generated/cupynumeric.iscomplexobj.rst", "api/generated/cupynumeric.isfinite.rst", "api/generated/cupynumeric.isinf.rst", "api/generated/cupynumeric.isnan.rst", "api/generated/cupynumeric.isneginf.rst", "api/generated/cupynumeric.isposinf.rst", "api/generated/cupynumeric.isreal.rst", "api/generated/cupynumeric.isrealobj.rst", "api/generated/cupynumeric.isscalar.rst", "api/generated/cupynumeric.ix_.rst", "api/generated/cupynumeric.kaiser.rst", "api/generated/cupynumeric.lcm.rst", "api/generated/cupynumeric.ldexp.rst", "api/generated/cupynumeric.left_shift.rst", "api/generated/cupynumeric.less.rst", "api/generated/cupynumeric.less_equal.rst", "api/generated/cupynumeric.linalg.cholesky.rst", "api/generated/cupynumeric.linalg.eig.rst", "api/generated/cupynumeric.linalg.eigh.rst", "api/generated/cupynumeric.linalg.eigvals.rst", "api/generated/cupynumeric.linalg.eigvalsh.rst", "api/generated/cupynumeric.linalg.expm.rst", "api/generated/cupynumeric.linalg.matrix_power.rst", "api/generated/cupynumeric.linalg.multi_dot.rst", "api/generated/cupynumeric.linalg.norm.rst", "api/generated/cupynumeric.linalg.qr.rst", "api/generated/cupynumeric.linalg.solve.rst", "api/generated/cupynumeric.linalg.svd.rst", "api/generated/cupynumeric.linspace.rst", "api/generated/cupynumeric.load.rst", "api/generated/cupynumeric.log.rst", "api/generated/cupynumeric.log10.rst", "api/generated/cupynumeric.log1p.rst", "api/generated/cupynumeric.log2.rst", "api/generated/cupynumeric.logaddexp.rst", "api/generated/cupynumeric.logaddexp2.rst", "api/generated/cupynumeric.logical_and.rst", "api/generated/cupynumeric.logical_not.rst", "api/generated/cupynumeric.logical_or.rst", "api/generated/cupynumeric.logical_xor.rst", "api/generated/cupynumeric.mask_indices.rst", "api/generated/cupynumeric.matmul.rst", "api/generated/cupynumeric.maximum.rst", "api/generated/cupynumeric.mean.rst", "api/generated/cupynumeric.median.rst", "api/generated/cupynumeric.meshgrid.rst", "api/generated/cupynumeric.minimum.rst", "api/generated/cupynumeric.mod.rst", "api/generated/cupynumeric.modf.rst", "api/generated/cupynumeric.moveaxis.rst", "api/generated/cupynumeric.multiply.rst", "api/generated/cupynumeric.nanargmax.rst", "api/generated/cupynumeric.nanargmin.rst", "api/generated/cupynumeric.nancumprod.rst", "api/generated/cupynumeric.nancumsum.rst", "api/generated/cupynumeric.nanmax.rst", "api/generated/cupynumeric.nanmean.rst", "api/generated/cupynumeric.nanmedian.rst", "api/generated/cupynumeric.nanmin.rst", "api/generated/cupynumeric.nanpercentile.rst", "api/generated/cupynumeric.nanprod.rst", "api/generated/cupynumeric.nanquantile.rst", "api/generated/cupynumeric.nansum.rst", "api/generated/cupynumeric.ndarray.T.rst", "api/generated/cupynumeric.ndarray.__abs__.rst", "api/generated/cupynumeric.ndarray.__add__.rst", "api/generated/cupynumeric.ndarray.__and__.rst", "api/generated/cupynumeric.ndarray.__array__.rst", "api/generated/cupynumeric.ndarray.__bool__.rst", "api/generated/cupynumeric.ndarray.__complex__.rst", "api/generated/cupynumeric.ndarray.__contains__.rst", "api/generated/cupynumeric.ndarray.__copy__.rst", "api/generated/cupynumeric.ndarray.__deepcopy__.rst", "api/generated/cupynumeric.ndarray.__divmod__.rst", "api/generated/cupynumeric.ndarray.__eq__.rst", "api/generated/cupynumeric.ndarray.__float__.rst", "api/generated/cupynumeric.ndarray.__floordiv__.rst", "api/generated/cupynumeric.ndarray.__ge__.rst", "api/generated/cupynumeric.ndarray.__getitem__.rst", "api/generated/cupynumeric.ndarray.__gt__.rst", "api/generated/cupynumeric.ndarray.__iadd__.rst", "api/generated/cupynumeric.ndarray.__iand__.rst", "api/generated/cupynumeric.ndarray.__ifloordiv__.rst", "api/generated/cupynumeric.ndarray.__ilshift__.rst", "api/generated/cupynumeric.ndarray.__imatmul__.rst", "api/generated/cupynumeric.ndarray.__imod__.rst", "api/generated/cupynumeric.ndarray.__imul__.rst", "api/generated/cupynumeric.ndarray.__index__.rst", "api/generated/cupynumeric.ndarray.__int__.rst", "api/generated/cupynumeric.ndarray.__invert__.rst", "api/generated/cupynumeric.ndarray.__ior__.rst", "api/generated/cupynumeric.ndarray.__ipow__.rst", "api/generated/cupynumeric.ndarray.__irshift__.rst", "api/generated/cupynumeric.ndarray.__isub__.rst", "api/generated/cupynumeric.ndarray.__itruediv__.rst", "api/generated/cupynumeric.ndarray.__ixor__.rst", "api/generated/cupynumeric.ndarray.__le__.rst", "api/generated/cupynumeric.ndarray.__len__.rst", "api/generated/cupynumeric.ndarray.__lshift__.rst", "api/generated/cupynumeric.ndarray.__lt__.rst", "api/generated/cupynumeric.ndarray.__matmul__.rst", "api/generated/cupynumeric.ndarray.__mod__.rst", "api/generated/cupynumeric.ndarray.__mul__.rst", "api/generated/cupynumeric.ndarray.__ne__.rst", "api/generated/cupynumeric.ndarray.__neg__.rst", "api/generated/cupynumeric.ndarray.__new__.rst", "api/generated/cupynumeric.ndarray.__or__.rst", "api/generated/cupynumeric.ndarray.__pos__.rst", "api/generated/cupynumeric.ndarray.__pow__.rst", "api/generated/cupynumeric.ndarray.__reduce__.rst", "api/generated/cupynumeric.ndarray.__repr__.rst", "api/generated/cupynumeric.ndarray.__rmatmul__.rst", "api/generated/cupynumeric.ndarray.__rshift__.rst", "api/generated/cupynumeric.ndarray.__setitem__.rst", "api/generated/cupynumeric.ndarray.__setstate__.rst", "api/generated/cupynumeric.ndarray.__str__.rst", "api/generated/cupynumeric.ndarray.__sub__.rst", "api/generated/cupynumeric.ndarray.__truediv__.rst", "api/generated/cupynumeric.ndarray.__xor__.rst", "api/generated/cupynumeric.ndarray.all.rst", "api/generated/cupynumeric.ndarray.any.rst", "api/generated/cupynumeric.ndarray.argmax.rst", "api/generated/cupynumeric.ndarray.argmin.rst", "api/generated/cupynumeric.ndarray.argpartition.rst", "api/generated/cupynumeric.ndarray.argsort.rst", "api/generated/cupynumeric.ndarray.astype.rst", "api/generated/cupynumeric.ndarray.base.rst", "api/generated/cupynumeric.ndarray.choose.rst", "api/generated/cupynumeric.ndarray.clip.rst", "api/generated/cupynumeric.ndarray.compress.rst", "api/generated/cupynumeric.ndarray.conj.rst", "api/generated/cupynumeric.ndarray.conjugate.rst", "api/generated/cupynumeric.ndarray.copy.rst", "api/generated/cupynumeric.ndarray.ctypes.rst", "api/generated/cupynumeric.ndarray.cumprod.rst", "api/generated/cupynumeric.ndarray.cumsum.rst", "api/generated/cupynumeric.ndarray.data.rst", "api/generated/cupynumeric.ndarray.diagonal.rst", "api/generated/cupynumeric.ndarray.dot.rst", "api/generated/cupynumeric.ndarray.dtype.rst", "api/generated/cupynumeric.ndarray.dump.rst", "api/generated/cupynumeric.ndarray.dumps.rst", "api/generated/cupynumeric.ndarray.fill.rst", "api/generated/cupynumeric.ndarray.flags.rst", "api/generated/cupynumeric.ndarray.flat.rst", "api/generated/cupynumeric.ndarray.flatten.rst", "api/generated/cupynumeric.ndarray.flip.rst", "api/generated/cupynumeric.ndarray.getfield.rst", "api/generated/cupynumeric.ndarray.imag.rst", "api/generated/cupynumeric.ndarray.item.rst", "api/generated/cupynumeric.ndarray.itemset.rst", "api/generated/cupynumeric.ndarray.itemsize.rst", "api/generated/cupynumeric.ndarray.max.rst", "api/generated/cupynumeric.ndarray.mean.rst", "api/generated/cupynumeric.ndarray.min.rst", "api/generated/cupynumeric.ndarray.nbytes.rst", "api/generated/cupynumeric.ndarray.ndim.rst", "api/generated/cupynumeric.ndarray.nonzero.rst", "api/generated/cupynumeric.ndarray.partition.rst", "api/generated/cupynumeric.ndarray.prod.rst", "api/generated/cupynumeric.ndarray.put.rst", "api/generated/cupynumeric.ndarray.ravel.rst", "api/generated/cupynumeric.ndarray.real.rst", "api/generated/cupynumeric.ndarray.reshape.rst", "api/generated/cupynumeric.ndarray.searchsorted.rst", "api/generated/cupynumeric.ndarray.setfield.rst", "api/generated/cupynumeric.ndarray.setflags.rst", "api/generated/cupynumeric.ndarray.shape.rst", "api/generated/cupynumeric.ndarray.size.rst", "api/generated/cupynumeric.ndarray.sort.rst", "api/generated/cupynumeric.ndarray.squeeze.rst", "api/generated/cupynumeric.ndarray.strides.rst", "api/generated/cupynumeric.ndarray.sum.rst", "api/generated/cupynumeric.ndarray.swapaxes.rst", "api/generated/cupynumeric.ndarray.take.rst", "api/generated/cupynumeric.ndarray.tobytes.rst", "api/generated/cupynumeric.ndarray.tofile.rst", "api/generated/cupynumeric.ndarray.tolist.rst", "api/generated/cupynumeric.ndarray.tostring.rst", "api/generated/cupynumeric.ndarray.trace.rst", "api/generated/cupynumeric.ndarray.transpose.rst", "api/generated/cupynumeric.ndarray.unique.rst", "api/generated/cupynumeric.ndarray.var.rst", "api/generated/cupynumeric.ndarray.view.rst", "api/generated/cupynumeric.ndim.rst", "api/generated/cupynumeric.negative.rst", "api/generated/cupynumeric.nextafter.rst", "api/generated/cupynumeric.nonzero.rst", "api/generated/cupynumeric.not_equal.rst", "api/generated/cupynumeric.ones.rst", "api/generated/cupynumeric.ones_like.rst", "api/generated/cupynumeric.outer.rst", "api/generated/cupynumeric.packbits.rst", "api/generated/cupynumeric.partition.rst", "api/generated/cupynumeric.percentile.rst", "api/generated/cupynumeric.place.rst", "api/generated/cupynumeric.positive.rst", "api/generated/cupynumeric.power.rst", "api/generated/cupynumeric.prod.rst", "api/generated/cupynumeric.put.rst", "api/generated/cupynumeric.put_along_axis.rst", "api/generated/cupynumeric.putmask.rst", "api/generated/cupynumeric.quantile.rst", "api/generated/cupynumeric.rad2deg.rst", "api/generated/cupynumeric.radians.rst", "api/generated/cupynumeric.random.beta.rst", "api/generated/cupynumeric.random.binomial.rst", "api/generated/cupynumeric.random.bytes.rst", "api/generated/cupynumeric.random.chisquare.rst", "api/generated/cupynumeric.random.default_rng.rst", "api/generated/cupynumeric.random.exponential.rst", "api/generated/cupynumeric.random.f.rst", "api/generated/cupynumeric.random.gamma.rst", "api/generated/cupynumeric.random.geometric.rst", "api/generated/cupynumeric.random.gumbel.rst", "api/generated/cupynumeric.random.hypergeometric.rst", "api/generated/cupynumeric.random.laplace.rst", "api/generated/cupynumeric.random.logistic.rst", "api/generated/cupynumeric.random.lognormal.rst", "api/generated/cupynumeric.random.logseries.rst", "api/generated/cupynumeric.random.negative_binomial.rst", "api/generated/cupynumeric.random.noncentral_chisquare.rst", "api/generated/cupynumeric.random.noncentral_f.rst", "api/generated/cupynumeric.random.normal.rst", "api/generated/cupynumeric.random.pareto.rst", "api/generated/cupynumeric.random.poisson.rst", "api/generated/cupynumeric.random.power.rst", "api/generated/cupynumeric.random.rand.rst", "api/generated/cupynumeric.random.randint.rst", "api/generated/cupynumeric.random.randn.rst", "api/generated/cupynumeric.random.random.rst", "api/generated/cupynumeric.random.random_integers.rst", "api/generated/cupynumeric.random.random_sample.rst", "api/generated/cupynumeric.random.ranf.rst", "api/generated/cupynumeric.random.rayleigh.rst", "api/generated/cupynumeric.random.sample.rst", "api/generated/cupynumeric.random.seed.rst", "api/generated/cupynumeric.random.standard_cauchy.rst", "api/generated/cupynumeric.random.standard_exponential.rst", "api/generated/cupynumeric.random.standard_gamma.rst", "api/generated/cupynumeric.random.standard_t.rst", "api/generated/cupynumeric.random.triangular.rst", "api/generated/cupynumeric.random.uniform.rst", "api/generated/cupynumeric.random.vonmises.rst", "api/generated/cupynumeric.random.wald.rst", "api/generated/cupynumeric.random.weibull.rst", "api/generated/cupynumeric.random.zipf.rst", "api/generated/cupynumeric.ravel.rst", "api/generated/cupynumeric.real.rst", "api/generated/cupynumeric.reciprocal.rst", "api/generated/cupynumeric.remainder.rst", "api/generated/cupynumeric.repeat.rst", "api/generated/cupynumeric.reshape.rst", "api/generated/cupynumeric.right_shift.rst", "api/generated/cupynumeric.rint.rst", "api/generated/cupynumeric.roll.rst", "api/generated/cupynumeric.rot90.rst", "api/generated/cupynumeric.round.rst", "api/generated/cupynumeric.row_stack.rst", "api/generated/cupynumeric.searchsorted.rst", "api/generated/cupynumeric.select.rst", "api/generated/cupynumeric.shape.rst", "api/generated/cupynumeric.sign.rst", "api/generated/cupynumeric.signbit.rst", "api/generated/cupynumeric.sin.rst", "api/generated/cupynumeric.sinh.rst", "api/generated/cupynumeric.sort.rst", "api/generated/cupynumeric.sort_complex.rst", "api/generated/cupynumeric.split.rst", "api/generated/cupynumeric.sqrt.rst", "api/generated/cupynumeric.square.rst", "api/generated/cupynumeric.squeeze.rst", "api/generated/cupynumeric.stack.rst", "api/generated/cupynumeric.subtract.rst", "api/generated/cupynumeric.sum.rst", "api/generated/cupynumeric.swapaxes.rst", "api/generated/cupynumeric.take.rst", "api/generated/cupynumeric.take_along_axis.rst", "api/generated/cupynumeric.tan.rst", "api/generated/cupynumeric.tanh.rst", "api/generated/cupynumeric.tensordot.rst", "api/generated/cupynumeric.tile.rst", "api/generated/cupynumeric.trace.rst", "api/generated/cupynumeric.transpose.rst", "api/generated/cupynumeric.tri.rst", "api/generated/cupynumeric.tril.rst", "api/generated/cupynumeric.tril_indices.rst", "api/generated/cupynumeric.tril_indices_from.rst", "api/generated/cupynumeric.triu.rst", "api/generated/cupynumeric.triu_indices.rst", "api/generated/cupynumeric.triu_indices_from.rst", "api/generated/cupynumeric.true_divide.rst", "api/generated/cupynumeric.trunc.rst", "api/generated/cupynumeric.unique.rst", "api/generated/cupynumeric.unpackbits.rst", "api/generated/cupynumeric.unravel_index.rst", "api/generated/cupynumeric.var.rst", "api/generated/cupynumeric.vdot.rst", "api/generated/cupynumeric.vsplit.rst", "api/generated/cupynumeric.vstack.rst", "api/generated/cupynumeric.where.rst", "api/generated/cupynumeric.zeros.rst", "api/generated/cupynumeric.zeros_like.rst", "api/index.rst", "api/indexing.rst", "api/io.rst", "api/linalg.rst", "api/logic.rst", "api/manipulation.rst", "api/math.rst", "api/ndarray.rst", "api/random.rst", "api/routines.rst", "api/set.rst", "api/settings.rst", "api/sorting.rst", "api/statistics.rst", "api/window.rst", "developer/CONTRIBUTING.md", "developer/building.rst", "developer/index.rst", "developer/testing.rst", "examples/black_scholes.ipynb", "examples/cholesky.ipynb", "examples/compact_finite_difference.ipynb", "examples/edge_detection.ipynb", "examples/index.rst", "examples/kmeans.ipynb", "examples/newton_raphson_2d.ipynb", "examples/stencil.ipynb", "examples/torchswe.ipynb", "faqs.rst", "index.rst", "installation.rst", "oss-licenses.rst", "user/advanced.rst", "user/differences.rst", "user/howtos/benchmarking.rst", "user/howtos/index.rst", "user/howtos/measuring.rst", "user/howtos/patching.rst", "user/index.rst", "user/practices.rst", "user/tutorial.rst", "user/usage.rst"], "indexentries": {"__abs__() (cupynumeric.ndarray method)": [[207, "cupynumeric.ndarray.__abs__", false]], "__add__() (cupynumeric.ndarray method)": [[208, "cupynumeric.ndarray.__add__", false]], "__and__() (cupynumeric.ndarray method)": [[209, "cupynumeric.ndarray.__and__", false]], "__array__() (cupynumeric.ndarray method)": [[210, "cupynumeric.ndarray.__array__", false]], "__bool__() (cupynumeric.ndarray method)": [[211, "cupynumeric.ndarray.__bool__", false]], "__complex__() (cupynumeric.ndarray method)": [[212, "cupynumeric.ndarray.__complex__", false]], "__contains__() (cupynumeric.ndarray method)": [[213, "cupynumeric.ndarray.__contains__", false]], "__copy__() (cupynumeric.ndarray method)": [[214, "cupynumeric.ndarray.__copy__", false]], "__deepcopy__() (cupynumeric.ndarray method)": [[215, "cupynumeric.ndarray.__deepcopy__", false]], "__divmod__() (cupynumeric.ndarray method)": [[216, "cupynumeric.ndarray.__divmod__", false]], "__eq__() (cupynumeric.ndarray method)": [[217, "cupynumeric.ndarray.__eq__", false]], "__float__() (cupynumeric.ndarray method)": [[218, "cupynumeric.ndarray.__float__", false]], "__floordiv__() (cupynumeric.ndarray method)": [[219, "cupynumeric.ndarray.__floordiv__", false]], "__ge__() (cupynumeric.ndarray method)": [[220, "cupynumeric.ndarray.__ge__", false]], "__getitem__() (cupynumeric.ndarray method)": [[221, "cupynumeric.ndarray.__getitem__", false]], "__gt__() (cupynumeric.ndarray method)": [[222, "cupynumeric.ndarray.__gt__", false]], "__iadd__() (cupynumeric.ndarray method)": [[223, "cupynumeric.ndarray.__iadd__", false]], "__iand__() (cupynumeric.ndarray method)": [[224, "cupynumeric.ndarray.__iand__", false]], "__ifloordiv__() (cupynumeric.ndarray method)": [[225, "cupynumeric.ndarray.__ifloordiv__", false]], "__ilshift__() (cupynumeric.ndarray method)": [[226, "cupynumeric.ndarray.__ilshift__", false]], "__imatmul__() (cupynumeric.ndarray method)": [[227, "cupynumeric.ndarray.__imatmul__", false]], "__imod__() (cupynumeric.ndarray method)": [[228, "cupynumeric.ndarray.__imod__", false]], "__imul__() (cupynumeric.ndarray method)": [[229, "cupynumeric.ndarray.__imul__", false]], "__index__() (cupynumeric.ndarray method)": [[230, "cupynumeric.ndarray.__index__", false]], "__init__() (cupynumeric.ndarray method)": [[4, "cupynumeric.ndarray.__init__", false]], "__init__() (cupynumeric.random.bitgenerator method)": [[1, "cupynumeric.random.BitGenerator.__init__", false]], "__init__() (cupynumeric.random.generator method)": [[2, "cupynumeric.random.Generator.__init__", false]], "__int__() (cupynumeric.ndarray method)": [[231, "cupynumeric.ndarray.__int__", false]], "__invert__() (cupynumeric.ndarray method)": [[232, "cupynumeric.ndarray.__invert__", false]], "__ior__() (cupynumeric.ndarray method)": [[233, "cupynumeric.ndarray.__ior__", false]], "__ipow__() (cupynumeric.ndarray method)": [[234, "cupynumeric.ndarray.__ipow__", false]], "__irshift__() (cupynumeric.ndarray method)": [[235, "cupynumeric.ndarray.__irshift__", false]], "__isub__() (cupynumeric.ndarray method)": [[236, "cupynumeric.ndarray.__isub__", false]], "__itruediv__() (cupynumeric.ndarray method)": [[237, "cupynumeric.ndarray.__itruediv__", false]], "__ixor__() (cupynumeric.ndarray method)": [[238, "cupynumeric.ndarray.__ixor__", false]], "__le__() (cupynumeric.ndarray method)": [[239, "cupynumeric.ndarray.__le__", false]], "__len__() (cupynumeric.ndarray method)": [[240, "cupynumeric.ndarray.__len__", false]], "__lshift__() (cupynumeric.ndarray method)": [[241, "cupynumeric.ndarray.__lshift__", false]], "__lt__() (cupynumeric.ndarray method)": [[242, "cupynumeric.ndarray.__lt__", false]], "__matmul__() (cupynumeric.ndarray method)": [[243, "cupynumeric.ndarray.__matmul__", false]], "__mod__() (cupynumeric.ndarray method)": [[244, "cupynumeric.ndarray.__mod__", false]], "__mul__() (cupynumeric.ndarray method)": [[245, "cupynumeric.ndarray.__mul__", false]], "__ne__() (cupynumeric.ndarray method)": [[246, "cupynumeric.ndarray.__ne__", false]], "__neg__() (cupynumeric.ndarray method)": [[247, "cupynumeric.ndarray.__neg__", false]], "__new__() (cupynumeric.ndarray method)": [[248, "cupynumeric.ndarray.__new__", false]], "__or__() (cupynumeric.ndarray method)": [[249, "cupynumeric.ndarray.__or__", false]], "__pos__() (cupynumeric.ndarray method)": [[250, "cupynumeric.ndarray.__pos__", false]], "__pow__() (cupynumeric.ndarray method)": [[251, "cupynumeric.ndarray.__pow__", false]], "__reduce__() (cupynumeric.ndarray method)": [[252, "cupynumeric.ndarray.__reduce__", false]], "__repr__() (cupynumeric.ndarray method)": [[253, "cupynumeric.ndarray.__repr__", false]], "__rmatmul__() (cupynumeric.ndarray method)": [[254, "cupynumeric.ndarray.__rmatmul__", false]], "__rshift__() (cupynumeric.ndarray method)": [[255, "cupynumeric.ndarray.__rshift__", false]], "__setitem__() (cupynumeric.ndarray method)": [[256, "cupynumeric.ndarray.__setitem__", false]], "__setstate__() (cupynumeric.ndarray method)": [[257, "cupynumeric.ndarray.__setstate__", false]], "__str__() (cupynumeric.ndarray method)": [[258, "cupynumeric.ndarray.__str__", false]], "__sub__() (cupynumeric.ndarray method)": [[259, "cupynumeric.ndarray.__sub__", false]], "__truediv__() (cupynumeric.ndarray method)": [[260, "cupynumeric.ndarray.__truediv__", false]], "__xor__() (cupynumeric.ndarray method)": [[261, "cupynumeric.ndarray.__xor__", false]], "absolute() (in module cupynumeric)": [[12, "cupynumeric.absolute", false]], "add() (in module cupynumeric)": [[13, "cupynumeric.add", false]], "aligned (in module cupynumeric)": [[286, "cupynumeric.ALIGNED", false]], "all() (cupynumeric.ndarray method)": [[262, "cupynumeric.ndarray.all", false]], "all() (in module cupynumeric)": [[14, "cupynumeric.all", false]], "allclose() (in module cupynumeric)": [[15, "cupynumeric.allclose", false]], "amax() (in module cupynumeric)": [[16, "cupynumeric.amax", false]], "amin() (in module cupynumeric)": [[17, "cupynumeric.amin", false]], "angle() (in module cupynumeric)": [[18, "cupynumeric.angle", false]], "any() (cupynumeric.ndarray method)": [[263, "cupynumeric.ndarray.any", false]], "any() (in module cupynumeric)": [[19, "cupynumeric.any", false]], "append() (in module cupynumeric)": [[20, "cupynumeric.append", false]], "arange() (in module cupynumeric)": [[21, "cupynumeric.arange", false]], "arccos() (in module cupynumeric)": [[22, "cupynumeric.arccos", false]], "arccosh() (in module cupynumeric)": [[23, "cupynumeric.arccosh", false]], "arcsin() (in module cupynumeric)": [[24, "cupynumeric.arcsin", false]], "arcsinh() (in module cupynumeric)": [[25, "cupynumeric.arcsinh", false]], "arctan() (in module cupynumeric)": [[26, "cupynumeric.arctan", false]], "arctan2() (in module cupynumeric)": [[27, "cupynumeric.arctan2", false]], "arctanh() (in module cupynumeric)": [[28, "cupynumeric.arctanh", false]], "argmax() (cupynumeric.ndarray method)": [[264, "cupynumeric.ndarray.argmax", false]], "argmax() (in module cupynumeric)": [[29, "cupynumeric.argmax", false]], "argmin() (cupynumeric.ndarray method)": [[265, "cupynumeric.ndarray.argmin", false]], "argmin() (in module cupynumeric)": [[30, "cupynumeric.argmin", false]], "argpartition() (cupynumeric.ndarray method)": [[266, "cupynumeric.ndarray.argpartition", false]], "argpartition() (in module cupynumeric)": [[31, "cupynumeric.argpartition", false]], "argsort() (cupynumeric.ndarray method)": [[267, "cupynumeric.ndarray.argsort", false]], "argsort() (in module cupynumeric)": [[32, "cupynumeric.argsort", false]], "argwhere() (in module cupynumeric)": [[33, "cupynumeric.argwhere", false]], "array() (in module cupynumeric)": [[34, "cupynumeric.array", false]], "array_equal() (in module cupynumeric)": [[35, "cupynumeric.array_equal", false]], "array_split() (in module cupynumeric)": [[36, "cupynumeric.array_split", false]], "asarray() (in module cupynumeric)": [[37, "cupynumeric.asarray", false]], "astype() (cupynumeric.ndarray method)": [[268, "cupynumeric.ndarray.astype", false]], "atleast_1d() (in module cupynumeric)": [[38, "cupynumeric.atleast_1d", false]], "atleast_2d() (in module cupynumeric)": [[39, "cupynumeric.atleast_2d", false]], "atleast_3d() (in module cupynumeric)": [[40, "cupynumeric.atleast_3d", false]], "average() (in module cupynumeric)": [[41, "cupynumeric.average", false]], "bartlett() (in module cupynumeric)": [[42, "cupynumeric.bartlett", false]], "base (cupynumeric.ndarray property)": [[269, "cupynumeric.ndarray.base", false]], "behaved (in module cupynumeric)": [[286, "cupynumeric.BEHAVED", false]], "beta() (in module cupynumeric.random)": [[348, "cupynumeric.random.beta", false]], "bincount() (in module cupynumeric)": [[43, "cupynumeric.bincount", false]], "binomial() (in module cupynumeric.random)": [[349, "cupynumeric.random.binomial", false]], "bitgenerator (class in cupynumeric.random)": [[1, "cupynumeric.random.BitGenerator", false]], "bitwise_and() (in module cupynumeric)": [[44, "cupynumeric.bitwise_and", false]], "bitwise_or() (in module cupynumeric)": [[45, "cupynumeric.bitwise_or", false]], "bitwise_xor() (in module cupynumeric)": [[46, "cupynumeric.bitwise_xor", false]], "blackman() (in module cupynumeric)": [[47, "cupynumeric.blackman", false]], "block() (in module cupynumeric)": [[48, "cupynumeric.block", false]], "broadcast (class in cupynumeric)": [[6, "cupynumeric.broadcast", false]], "broadcast_arrays() (in module cupynumeric)": [[49, "cupynumeric.broadcast_arrays", false]], "broadcast_shapes() (in module cupynumeric)": [[50, "cupynumeric.broadcast_shapes", false]], "broadcast_to() (in module cupynumeric)": [[51, "cupynumeric.broadcast_to", false]], "bytes() (in module cupynumeric.random)": [[350, "cupynumeric.random.bytes", false]], "c_contiguous (cupynumeric.ndarray attribute)": [[286, "cupynumeric.ndarray.C_CONTIGUOUS", false]], "carray (in module cupynumeric)": [[286, "cupynumeric.CARRAY", false]], "cbrt() (in module cupynumeric)": [[52, "cupynumeric.cbrt", false]], "ceil() (in module cupynumeric)": [[53, "cupynumeric.ceil", false]], "chisquare() (in module cupynumeric.random)": [[351, "cupynumeric.random.chisquare", false]], "cholesky() (in module cupynumeric.linalg)": [[159, "cupynumeric.linalg.cholesky", false]], "choose() (cupynumeric.ndarray method)": [[270, "cupynumeric.ndarray.choose", false]], "choose() (in module cupynumeric)": [[54, "cupynumeric.choose", false]], "clip() (cupynumeric.ndarray method)": [[271, "cupynumeric.ndarray.clip", false]], "clip() (in module cupynumeric)": [[55, "cupynumeric.clip", false]], "column_stack() (in module cupynumeric)": [[56, "cupynumeric.column_stack", false]], "compress() (cupynumeric.ndarray method)": [[272, "cupynumeric.ndarray.compress", false]], "compress() (in module cupynumeric)": [[57, "cupynumeric.compress", false]], "concatenate() (in module cupynumeric)": [[58, "cupynumeric.concatenate", false]], "conj() (cupynumeric.ndarray method)": [[273, "cupynumeric.ndarray.conj", false]], "conj() (in module cupynumeric)": [[59, "cupynumeric.conj", false]], "conjugate() (cupynumeric.ndarray method)": [[274, "cupynumeric.ndarray.conjugate", false]], "conjugate() (in module cupynumeric)": [[60, "cupynumeric.conjugate", false]], "convolve() (in module cupynumeric)": [[61, "cupynumeric.convolve", false]], "copy() (cupynumeric.ndarray method)": [[275, "cupynumeric.ndarray.copy", false]], "copy() (in module cupynumeric)": [[62, "cupynumeric.copy", false]], "copysign() (in module cupynumeric)": [[63, "cupynumeric.copysign", false]], "cos() (in module cupynumeric)": [[64, "cupynumeric.cos", false]], "cosh() (in module cupynumeric)": [[65, "cupynumeric.cosh", false]], "count_nonzero() (in module cupynumeric)": [[66, "cupynumeric.count_nonzero", false]], "cov() (in module cupynumeric)": [[67, "cupynumeric.cov", false]], "ctypes (cupynumeric.ndarray property)": [[276, "cupynumeric.ndarray.ctypes", false]], "cumprod() (cupynumeric.ndarray method)": [[277, "cupynumeric.ndarray.cumprod", false]], "cumprod() (in module cupynumeric)": [[68, "cupynumeric.cumprod", false]], "cumsum() (cupynumeric.ndarray method)": [[278, "cupynumeric.ndarray.cumsum", false]], "cumsum() (in module cupynumeric)": [[69, "cupynumeric.cumsum", false]], "cupynumeric.fft": [[11, "module-cupynumeric.fft", false]], "cupynumeric.linalg": [[449, "module-cupynumeric.linalg", false]], "cupynumeric.random": [[454, "module-cupynumeric.random", false]], "data (cupynumeric.ndarray property)": [[279, "cupynumeric.ndarray.data", false]], "default_rng() (in module cupynumeric.random)": [[352, "cupynumeric.random.default_rng", false]], "deg2rad() (in module cupynumeric)": [[70, "cupynumeric.deg2rad", false]], "degrees() (in module cupynumeric)": [[71, "cupynumeric.degrees", false]], "delete() (in module cupynumeric)": [[72, "cupynumeric.delete", false]], "diag() (in module cupynumeric)": [[73, "cupynumeric.diag", false]], "diag_indices() (in module cupynumeric)": [[74, "cupynumeric.diag_indices", false]], "diag_indices_from() (in module cupynumeric)": [[75, "cupynumeric.diag_indices_from", false]], "diagonal() (cupynumeric.ndarray method)": [[280, "cupynumeric.ndarray.diagonal", false]], "diagonal() (in module cupynumeric)": [[76, "cupynumeric.diagonal", false]], "diff() (in module cupynumeric)": [[77, "cupynumeric.diff", false]], "digitize() (in module cupynumeric)": [[78, "cupynumeric.digitize", false]], "divide() (in module cupynumeric)": [[79, "cupynumeric.divide", false]], "dot() (cupynumeric.ndarray method)": [[281, "cupynumeric.ndarray.dot", false]], "dot() (in module cupynumeric)": [[80, "cupynumeric.dot", false]], "dsplit() (in module cupynumeric)": [[81, "cupynumeric.dsplit", false]], "dstack() (in module cupynumeric)": [[82, "cupynumeric.dstack", false]], "dtype (cupynumeric.ndarray property)": [[282, "cupynumeric.ndarray.dtype", false]], "dump() (cupynumeric.ndarray method)": [[283, "cupynumeric.ndarray.dump", false]], "dumps() (cupynumeric.ndarray method)": [[284, "cupynumeric.ndarray.dumps", false]], "eig() (in module cupynumeric.linalg)": [[160, "cupynumeric.linalg.eig", false]], "eigh() (in module cupynumeric.linalg)": [[161, "cupynumeric.linalg.eigh", false]], "eigvals() (in module cupynumeric.linalg)": [[162, "cupynumeric.linalg.eigvals", false]], "eigvalsh() (in module cupynumeric.linalg)": [[163, "cupynumeric.linalg.eigvalsh", false]], "einsum() (in module cupynumeric)": [[83, "cupynumeric.einsum", false]], "einsum_path() (in module cupynumeric)": [[84, "cupynumeric.einsum_path", false]], "empty() (in module cupynumeric)": [[85, "cupynumeric.empty", false]], "empty_like() (in module cupynumeric)": [[86, "cupynumeric.empty_like", false]], "equal() (in module cupynumeric)": [[87, "cupynumeric.equal", false]], "exp() (in module cupynumeric)": [[88, "cupynumeric.exp", false]], "exp2() (in module cupynumeric)": [[89, "cupynumeric.exp2", false]], "expand_dims() (in module cupynumeric)": [[90, "cupynumeric.expand_dims", false]], "expm() (in module cupynumeric.linalg)": [[164, "cupynumeric.linalg.expm", false]], "expm1() (in module cupynumeric)": [[91, "cupynumeric.expm1", false]], "exponential() (in module cupynumeric.random)": [[353, "cupynumeric.random.exponential", false]], "extract() (in module cupynumeric)": [[92, "cupynumeric.extract", false]], "eye() (in module cupynumeric)": [[93, "cupynumeric.eye", false]], "f() (in module cupynumeric.random)": [[354, "cupynumeric.random.f", false]], "f_contiguous (in module cupynumeric)": [[286, "cupynumeric.F_CONTIGUOUS", false]], "fabs() (in module cupynumeric)": [[94, "cupynumeric.fabs", false]], "farray (in module cupynumeric)": [[286, "cupynumeric.FARRAY", false]], "fft() (in module cupynumeric.fft)": [[95, "cupynumeric.fft.fft", false]], "fft2() (in module cupynumeric.fft)": [[96, "cupynumeric.fft.fft2", false]], "fftn() (in module cupynumeric.fft)": [[97, "cupynumeric.fft.fftn", false]], "fftshift() (in module cupynumeric.fft)": [[98, "cupynumeric.fft.fftshift", false]], "fill() (cupynumeric.ndarray method)": [[285, "cupynumeric.ndarray.fill", false]], "fill_diagonal() (in module cupynumeric)": [[111, "cupynumeric.fill_diagonal", false]], "find_common_type() (in module cupynumeric)": [[112, "cupynumeric.find_common_type", false]], "flags (cupynumeric.ndarray property)": [[286, "cupynumeric.ndarray.flags", false]], "flat (cupynumeric.ndarray property)": [[287, "cupynumeric.ndarray.flat", false]], "flatnonzero() (in module cupynumeric)": [[113, "cupynumeric.flatnonzero", false]], "flatten() (cupynumeric.ndarray method)": [[288, "cupynumeric.ndarray.flatten", false]], "flip() (cupynumeric.ndarray method)": [[289, "cupynumeric.ndarray.flip", false]], "flip() (in module cupynumeric)": [[114, "cupynumeric.flip", false]], "fliplr() (in module cupynumeric)": [[115, "cupynumeric.fliplr", false]], "flipud() (in module cupynumeric)": [[116, "cupynumeric.flipud", false]], "float_power() (in module cupynumeric)": [[117, "cupynumeric.float_power", false]], "floor() (in module cupynumeric)": [[118, "cupynumeric.floor", false]], "floor_divide() (in module cupynumeric)": [[119, "cupynumeric.floor_divide", false]], "fmax() (in module cupynumeric)": [[120, "cupynumeric.fmax", false]], "fmin() (in module cupynumeric)": [[121, "cupynumeric.fmin", false]], "fmod() (in module cupynumeric)": [[122, "cupynumeric.fmod", false]], "fnc (in module cupynumeric)": [[286, "cupynumeric.FNC", false]], "forc (in module cupynumeric)": [[286, "cupynumeric.FORC", false]], "frexp() (in module cupynumeric)": [[123, "cupynumeric.frexp", false]], "full() (in module cupynumeric)": [[124, "cupynumeric.full", false]], "full_like() (in module cupynumeric)": [[125, "cupynumeric.full_like", false]], "gamma() (in module cupynumeric.random)": [[355, "cupynumeric.random.gamma", false]], "gcd() (in module cupynumeric)": [[126, "cupynumeric.gcd", false]], "generator (class in cupynumeric.random)": [[2, "cupynumeric.random.Generator", false]], "geometric() (in module cupynumeric.random)": [[356, "cupynumeric.random.geometric", false]], "getfield() (cupynumeric.ndarray method)": [[290, "cupynumeric.ndarray.getfield", false]], "gradient() (in module cupynumeric)": [[127, "cupynumeric.gradient", false]], "greater() (in module cupynumeric)": [[128, "cupynumeric.greater", false]], "greater_equal() (in module cupynumeric)": [[129, "cupynumeric.greater_equal", false]], "gumbel() (in module cupynumeric.random)": [[357, "cupynumeric.random.gumbel", false]], "hamming() (in module cupynumeric)": [[130, "cupynumeric.hamming", false]], "hanning() (in module cupynumeric)": [[131, "cupynumeric.hanning", false]], "hfft() (in module cupynumeric.fft)": [[99, "cupynumeric.fft.hfft", false]], "histogram() (in module cupynumeric)": [[132, "cupynumeric.histogram", false]], "hsplit() (in module cupynumeric)": [[133, "cupynumeric.hsplit", false]], "hstack() (in module cupynumeric)": [[134, "cupynumeric.hstack", false]], "hypergeometric() (in module cupynumeric.random)": [[358, "cupynumeric.random.hypergeometric", false]], "hypot() (in module cupynumeric)": [[135, "cupynumeric.hypot", false]], "identity() (in module cupynumeric)": [[136, "cupynumeric.identity", false]], "ifft() (in module cupynumeric.fft)": [[100, "cupynumeric.fft.ifft", false]], "ifft2() (in module cupynumeric.fft)": [[101, "cupynumeric.fft.ifft2", false]], "ifftn() (in module cupynumeric.fft)": [[102, "cupynumeric.fft.ifftn", false]], "ifftshift() (in module cupynumeric.fft)": [[103, "cupynumeric.fft.ifftshift", false]], "ihfft() (in module cupynumeric.fft)": [[104, "cupynumeric.fft.ihfft", false]], "imag (cupynumeric.ndarray property)": [[291, "cupynumeric.ndarray.imag", false]], "imag() (in module cupynumeric)": [[137, "cupynumeric.imag", false]], "index (cupynumeric.broadcast property)": [[6, "cupynumeric.broadcast.index", false]], "indices() (in module cupynumeric)": [[138, "cupynumeric.indices", false]], "inner() (in module cupynumeric)": [[139, "cupynumeric.inner", false]], "invert() (in module cupynumeric)": [[140, "cupynumeric.invert", false]], "irfft() (in module cupynumeric.fft)": [[105, "cupynumeric.fft.irfft", false]], "irfft2() (in module cupynumeric.fft)": [[106, "cupynumeric.fft.irfft2", false]], "irfftn() (in module cupynumeric.fft)": [[107, "cupynumeric.fft.irfftn", false]], "isclose() (in module cupynumeric)": [[141, "cupynumeric.isclose", false]], "iscomplex() (in module cupynumeric)": [[142, "cupynumeric.iscomplex", false]], "iscomplexobj() (in module cupynumeric)": [[143, "cupynumeric.iscomplexobj", false]], "isfinite() (in module cupynumeric)": [[144, "cupynumeric.isfinite", false]], "isinf() (in module cupynumeric)": [[145, "cupynumeric.isinf", false]], "isnan() (in module cupynumeric)": [[146, "cupynumeric.isnan", false]], "isneginf() (in module cupynumeric)": [[147, "cupynumeric.isneginf", false]], "isposinf() (in module cupynumeric)": [[148, "cupynumeric.isposinf", false]], "isreal() (in module cupynumeric)": [[149, "cupynumeric.isreal", false]], "isrealobj() (in module cupynumeric)": [[150, "cupynumeric.isrealobj", false]], "isscalar() (in module cupynumeric)": [[151, "cupynumeric.isscalar", false]], "item() (cupynumeric.ndarray method)": [[292, "cupynumeric.ndarray.item", false]], "itemset (cupynumeric.ndarray attribute)": [[293, "cupynumeric.ndarray.itemset", false]], "itemsize (cupynumeric.ndarray property)": [[294, "cupynumeric.ndarray.itemsize", false]], "iters (cupynumeric.broadcast property)": [[6, "cupynumeric.broadcast.iters", false]], "ix_() (in module cupynumeric)": [[152, "cupynumeric.ix_", false]], "kaiser() (in module cupynumeric)": [[153, "cupynumeric.kaiser", false]], "laplace() (in module cupynumeric.random)": [[359, "cupynumeric.random.laplace", false]], "lcm() (in module cupynumeric)": [[154, "cupynumeric.lcm", false]], "ldexp() (in module cupynumeric)": [[155, "cupynumeric.ldexp", false]], "left_shift() (in module cupynumeric)": [[156, "cupynumeric.left_shift", false]], "less() (in module cupynumeric)": [[157, "cupynumeric.less", false]], "less_equal() (in module cupynumeric)": [[158, "cupynumeric.less_equal", false]], "linspace() (in module cupynumeric)": [[171, "cupynumeric.linspace", false]], "load() (in module cupynumeric)": [[172, "cupynumeric.load", false]], "log() (in module cupynumeric)": [[173, "cupynumeric.log", false]], "log10() (in module cupynumeric)": [[174, "cupynumeric.log10", false]], "log1p() (in module cupynumeric)": [[175, "cupynumeric.log1p", false]], "log2() (in module cupynumeric)": [[176, "cupynumeric.log2", false]], "logaddexp() (in module cupynumeric)": [[177, "cupynumeric.logaddexp", false]], "logaddexp2() (in module cupynumeric)": [[178, "cupynumeric.logaddexp2", false]], "logical_and() (in module cupynumeric)": [[179, "cupynumeric.logical_and", false]], "logical_not() (in module cupynumeric)": [[180, "cupynumeric.logical_not", false]], "logical_or() (in module cupynumeric)": [[181, "cupynumeric.logical_or", false]], "logical_xor() (in module cupynumeric)": [[182, "cupynumeric.logical_xor", false]], "logistic() (in module cupynumeric.random)": [[360, "cupynumeric.random.logistic", false]], "lognormal() (in module cupynumeric.random)": [[361, "cupynumeric.random.lognormal", false]], "logseries() (in module cupynumeric.random)": [[362, "cupynumeric.random.logseries", false]], "mask_indices() (in module cupynumeric)": [[183, "cupynumeric.mask_indices", false]], "matmul() (in module cupynumeric)": [[184, "cupynumeric.matmul", false]], "matrix_power() (in module cupynumeric.linalg)": [[165, "cupynumeric.linalg.matrix_power", false]], "max() (cupynumeric.ndarray method)": [[295, "cupynumeric.ndarray.max", false]], "maximum() (in module cupynumeric)": [[185, "cupynumeric.maximum", false]], "mean() (cupynumeric.ndarray method)": [[296, "cupynumeric.ndarray.mean", false]], "mean() (in module cupynumeric)": [[186, "cupynumeric.mean", false]], "median() (in module cupynumeric)": [[187, "cupynumeric.median", false]], "meshgrid() (in module cupynumeric)": [[188, "cupynumeric.meshgrid", false]], "min() (cupynumeric.ndarray method)": [[297, "cupynumeric.ndarray.min", false]], "minimum() (in module cupynumeric)": [[189, "cupynumeric.minimum", false]], "mod() (in module cupynumeric)": [[190, "cupynumeric.mod", false]], "modf() (in module cupynumeric)": [[191, "cupynumeric.modf", false]], "module": [[11, "module-cupynumeric.fft", false], [449, "module-cupynumeric.linalg", false], [454, "module-cupynumeric.random", false]], "moveaxis() (in module cupynumeric)": [[192, "cupynumeric.moveaxis", false]], "multi_dot() (in module cupynumeric.linalg)": [[166, "cupynumeric.linalg.multi_dot", false]], "multiply() (in module cupynumeric)": [[193, "cupynumeric.multiply", false]], "nanargmax() (in module cupynumeric)": [[194, "cupynumeric.nanargmax", false]], "nanargmin() (in module cupynumeric)": [[195, "cupynumeric.nanargmin", false]], "nancumprod() (in module cupynumeric)": [[196, "cupynumeric.nancumprod", false]], "nancumsum() (in module cupynumeric)": [[197, "cupynumeric.nancumsum", false]], "nanmax() (in module cupynumeric)": [[198, "cupynumeric.nanmax", false]], "nanmean() (in module cupynumeric)": [[199, "cupynumeric.nanmean", false]], "nanmedian() (in module cupynumeric)": [[200, "cupynumeric.nanmedian", false]], "nanmin() (in module cupynumeric)": [[201, "cupynumeric.nanmin", false]], "nanpercentile() (in module cupynumeric)": [[202, "cupynumeric.nanpercentile", false]], "nanprod() (in module cupynumeric)": [[203, "cupynumeric.nanprod", false]], "nanquantile() (in module cupynumeric)": [[204, "cupynumeric.nanquantile", false]], "nansum() (in module cupynumeric)": [[205, "cupynumeric.nansum", false]], "nbytes (cupynumeric.ndarray property)": [[298, "cupynumeric.ndarray.nbytes", false]], "nd (cupynumeric.broadcast property)": [[6, "cupynumeric.broadcast.nd", false]], "ndarray (class in cupynumeric)": [[4, "cupynumeric.ndarray", false]], "ndim (cupynumeric.broadcast property)": [[6, "cupynumeric.broadcast.ndim", false]], "ndim (cupynumeric.ndarray property)": [[299, "cupynumeric.ndarray.ndim", false]], "ndim() (in module cupynumeric)": [[327, "cupynumeric.ndim", false]], "negative() (in module cupynumeric)": [[328, "cupynumeric.negative", false]], "negative_binomial() (in module cupynumeric.random)": [[363, "cupynumeric.random.negative_binomial", false]], "nextafter() (in module cupynumeric)": [[329, "cupynumeric.nextafter", false]], "noncentral_chisquare() (in module cupynumeric.random)": [[364, "cupynumeric.random.noncentral_chisquare", false]], "noncentral_f() (in module cupynumeric.random)": [[365, "cupynumeric.random.noncentral_f", false]], "nonzero() (cupynumeric.ndarray method)": [[300, "cupynumeric.ndarray.nonzero", false]], "nonzero() (in module cupynumeric)": [[330, "cupynumeric.nonzero", false]], "norm() (in module cupynumeric.linalg)": [[167, "cupynumeric.linalg.norm", false]], "normal() (in module cupynumeric.random)": [[366, "cupynumeric.random.normal", false]], "not_equal() (in module cupynumeric)": [[331, "cupynumeric.not_equal", false]], "numiter (cupynumeric.broadcast property)": [[6, "cupynumeric.broadcast.numiter", false]], "ones() (in module cupynumeric)": [[332, "cupynumeric.ones", false]], "ones_like() (in module cupynumeric)": [[333, "cupynumeric.ones_like", false]], "outer() (in module cupynumeric)": [[334, "cupynumeric.outer", false]], "owndata (in module cupynumeric)": [[286, "cupynumeric.OWNDATA", false]], "packbits() (in module cupynumeric)": [[335, "cupynumeric.packbits", false]], "pareto() (in module cupynumeric.random)": [[367, "cupynumeric.random.pareto", false]], "partition() (cupynumeric.ndarray method)": [[301, "cupynumeric.ndarray.partition", false]], "partition() (in module cupynumeric)": [[336, "cupynumeric.partition", false]], "percentile() (in module cupynumeric)": [[337, "cupynumeric.percentile", false]], "place() (in module cupynumeric)": [[338, "cupynumeric.place", false]], "poisson() (in module cupynumeric.random)": [[368, "cupynumeric.random.poisson", false]], "positive() (in module cupynumeric)": [[339, "cupynumeric.positive", false]], "power() (in module cupynumeric)": [[340, "cupynumeric.power", false]], "power() (in module cupynumeric.random)": [[369, "cupynumeric.random.power", false]], "prod() (cupynumeric.ndarray method)": [[302, "cupynumeric.ndarray.prod", false]], "prod() (in module cupynumeric)": [[341, "cupynumeric.prod", false]], "put() (cupynumeric.ndarray method)": [[303, "cupynumeric.ndarray.put", false]], "put() (in module cupynumeric)": [[342, "cupynumeric.put", false]], "put_along_axis() (in module cupynumeric)": [[343, "cupynumeric.put_along_axis", false]], "putmask() (in module cupynumeric)": [[344, "cupynumeric.putmask", false]], "qr() (in module cupynumeric.linalg)": [[168, "cupynumeric.linalg.qr", false]], "quantile() (in module cupynumeric)": [[345, "cupynumeric.quantile", false]], "rad2deg() (in module cupynumeric)": [[346, "cupynumeric.rad2deg", false]], "radians() (in module cupynumeric)": [[347, "cupynumeric.radians", false]], "rand() (in module cupynumeric.random)": [[370, "cupynumeric.random.rand", false]], "randint() (in module cupynumeric.random)": [[371, "cupynumeric.random.randint", false]], "randn() (in module cupynumeric.random)": [[372, "cupynumeric.random.randn", false]], "random() (in module cupynumeric.random)": [[373, "cupynumeric.random.random", false]], "random_integers() (in module cupynumeric.random)": [[374, "cupynumeric.random.random_integers", false]], "random_sample() (in module cupynumeric.random)": [[375, "cupynumeric.random.random_sample", false]], "ranf() (in module cupynumeric.random)": [[376, "cupynumeric.random.ranf", false]], "ravel() (cupynumeric.ndarray method)": [[304, "cupynumeric.ndarray.ravel", false]], "ravel() (in module cupynumeric)": [[390, "cupynumeric.ravel", false]], "rayleigh() (in module cupynumeric.random)": [[377, "cupynumeric.random.rayleigh", false]], "real (cupynumeric.ndarray property)": [[305, "cupynumeric.ndarray.real", false]], "real() (in module cupynumeric)": [[391, "cupynumeric.real", false]], "reciprocal() (in module cupynumeric)": [[392, "cupynumeric.reciprocal", false]], "remainder() (in module cupynumeric)": [[393, "cupynumeric.remainder", false]], "repeat() (in module cupynumeric)": [[394, "cupynumeric.repeat", false]], "reset() (cupynumeric.broadcast method)": [[6, "cupynumeric.broadcast.reset", false]], "reshape() (cupynumeric.ndarray method)": [[306, "cupynumeric.ndarray.reshape", false]], "reshape() (in module cupynumeric)": [[395, "cupynumeric.reshape", false]], "rfft() (in module cupynumeric.fft)": [[108, "cupynumeric.fft.rfft", false]], "rfft2() (in module cupynumeric.fft)": [[109, "cupynumeric.fft.rfft2", false]], "rfftn() (in module cupynumeric.fft)": [[110, "cupynumeric.fft.rfftn", false]], "right_shift() (in module cupynumeric)": [[396, "cupynumeric.right_shift", false]], "rint() (in module cupynumeric)": [[397, "cupynumeric.rint", false]], "roll() (in module cupynumeric)": [[398, "cupynumeric.roll", false]], "rot90() (in module cupynumeric)": [[399, "cupynumeric.rot90", false]], "round() (in module cupynumeric)": [[400, "cupynumeric.round", false]], "row_stack() (in module cupynumeric)": [[401, "cupynumeric.row_stack", false]], "sample() (in module cupynumeric.random)": [[378, "cupynumeric.random.sample", false]], "searchsorted() (cupynumeric.ndarray method)": [[307, "cupynumeric.ndarray.searchsorted", false]], "searchsorted() (in module cupynumeric)": [[402, "cupynumeric.searchsorted", false]], "seed() (in module cupynumeric.random)": [[379, "cupynumeric.random.seed", false]], "select() (in module cupynumeric)": [[403, "cupynumeric.select", false]], "setfield() (cupynumeric.ndarray method)": [[308, "cupynumeric.ndarray.setfield", false]], "setflags() (cupynumeric.ndarray method)": [[309, "cupynumeric.ndarray.setflags", false]], "shape (cupynumeric.broadcast property)": [[6, "cupynumeric.broadcast.shape", false]], "shape (cupynumeric.ndarray property)": [[310, "cupynumeric.ndarray.shape", false]], "shape() (in module cupynumeric)": [[404, "cupynumeric.shape", false]], "sign() (in module cupynumeric)": [[405, "cupynumeric.sign", false]], "signbit() (in module cupynumeric)": [[406, "cupynumeric.signbit", false]], "sin() (in module cupynumeric)": [[407, "cupynumeric.sin", false]], "sinh() (in module cupynumeric)": [[408, "cupynumeric.sinh", false]], "size (cupynumeric.broadcast property)": [[6, "cupynumeric.broadcast.size", false]], "size (cupynumeric.ndarray property)": [[311, "cupynumeric.ndarray.size", false]], "solve() (in module cupynumeric.linalg)": [[169, "cupynumeric.linalg.solve", false]], "sort() (cupynumeric.ndarray method)": [[312, "cupynumeric.ndarray.sort", false]], "sort() (in module cupynumeric)": [[409, "cupynumeric.sort", false]], "sort_complex() (in module cupynumeric)": [[410, "cupynumeric.sort_complex", false]], "split() (in module cupynumeric)": [[411, "cupynumeric.split", false]], "sqrt() (in module cupynumeric)": [[412, "cupynumeric.sqrt", false]], "square() (in module cupynumeric)": [[413, "cupynumeric.square", false]], "squeeze() (cupynumeric.ndarray method)": [[313, "cupynumeric.ndarray.squeeze", false]], "squeeze() (in module cupynumeric)": [[414, "cupynumeric.squeeze", false]], "stack() (in module cupynumeric)": [[415, "cupynumeric.stack", false]], "standard_cauchy() (in module cupynumeric.random)": [[380, "cupynumeric.random.standard_cauchy", false]], "standard_exponential() (in module cupynumeric.random)": [[381, "cupynumeric.random.standard_exponential", false]], "standard_gamma() (in module cupynumeric.random)": [[382, "cupynumeric.random.standard_gamma", false]], "standard_t() (in module cupynumeric.random)": [[383, "cupynumeric.random.standard_t", false]], "strides (cupynumeric.ndarray property)": [[314, "cupynumeric.ndarray.strides", false]], "subtract() (in module cupynumeric)": [[416, "cupynumeric.subtract", false]], "sum() (cupynumeric.ndarray method)": [[315, "cupynumeric.ndarray.sum", false]], "sum() (in module cupynumeric)": [[417, "cupynumeric.sum", false]], "svd() (in module cupynumeric.linalg)": [[170, "cupynumeric.linalg.svd", false]], "swapaxes() (cupynumeric.ndarray method)": [[316, "cupynumeric.ndarray.swapaxes", false]], "swapaxes() (in module cupynumeric)": [[418, "cupynumeric.swapaxes", false]], "t (cupynumeric.ndarray property)": [[206, "cupynumeric.ndarray.T", false]], "take() (cupynumeric.ndarray method)": [[317, "cupynumeric.ndarray.take", false]], "take() (in module cupynumeric)": [[419, "cupynumeric.take", false]], "take_along_axis() (in module cupynumeric)": [[420, "cupynumeric.take_along_axis", false]], "tan() (in module cupynumeric)": [[421, "cupynumeric.tan", false]], "tanh() (in module cupynumeric)": [[422, "cupynumeric.tanh", false]], "tensordot() (in module cupynumeric)": [[423, "cupynumeric.tensordot", false]], "tile() (in module cupynumeric)": [[424, "cupynumeric.tile", false]], "tobytes() (cupynumeric.ndarray method)": [[318, "cupynumeric.ndarray.tobytes", false]], "tofile() (cupynumeric.ndarray method)": [[319, "cupynumeric.ndarray.tofile", false]], "tolist() (cupynumeric.ndarray method)": [[320, "cupynumeric.ndarray.tolist", false]], "tostring() (cupynumeric.ndarray method)": [[321, "cupynumeric.ndarray.tostring", false]], "trace() (cupynumeric.ndarray method)": [[322, "cupynumeric.ndarray.trace", false]], "trace() (in module cupynumeric)": [[425, "cupynumeric.trace", false]], "transpose() (cupynumeric.ndarray method)": [[323, "cupynumeric.ndarray.transpose", false]], "transpose() (in module cupynumeric)": [[426, "cupynumeric.transpose", false]], "tri() (in module cupynumeric)": [[427, "cupynumeric.tri", false]], "triangular() (in module cupynumeric.random)": [[384, "cupynumeric.random.triangular", false]], "tril() (in module cupynumeric)": [[428, "cupynumeric.tril", false]], "tril_indices() (in module cupynumeric)": [[429, "cupynumeric.tril_indices", false]], "tril_indices_from() (in module cupynumeric)": [[430, "cupynumeric.tril_indices_from", false]], "triu() (in module cupynumeric)": [[431, "cupynumeric.triu", false]], "triu_indices() (in module cupynumeric)": [[432, "cupynumeric.triu_indices", false]], "triu_indices_from() (in module cupynumeric)": [[433, "cupynumeric.triu_indices_from", false]], "true_divide() (in module cupynumeric)": [[434, "cupynumeric.true_divide", false]], "trunc() (in module cupynumeric)": [[435, "cupynumeric.trunc", false]], "uniform() (in module cupynumeric.random)": [[385, "cupynumeric.random.uniform", false]], "unique() (cupynumeric.ndarray method)": [[324, "cupynumeric.ndarray.unique", false]], "unique() (in module cupynumeric)": [[436, "cupynumeric.unique", false]], "unpackbits() (in module cupynumeric)": [[437, "cupynumeric.unpackbits", false]], "unravel_index() (in module cupynumeric)": [[438, "cupynumeric.unravel_index", false]], "var() (cupynumeric.ndarray method)": [[325, "cupynumeric.ndarray.var", false]], "var() (in module cupynumeric)": [[439, "cupynumeric.var", false]], "vdot() (in module cupynumeric)": [[440, "cupynumeric.vdot", false]], "view() (cupynumeric.ndarray method)": [[326, "cupynumeric.ndarray.view", false]], "vonmises() (in module cupynumeric.random)": [[386, "cupynumeric.random.vonmises", false]], "vsplit() (in module cupynumeric)": [[441, "cupynumeric.vsplit", false]], "vstack() (in module cupynumeric)": [[442, "cupynumeric.vstack", false]], "wald() (in module cupynumeric.random)": [[387, "cupynumeric.random.wald", false]], "weibull() (in module cupynumeric.random)": [[388, "cupynumeric.random.weibull", false]], "where() (in module cupynumeric)": [[443, "cupynumeric.where", false]], "writeable (in module cupynumeric)": [[286, "cupynumeric.WRITEABLE", false]], "writebackifcopy (in module cupynumeric)": [[286, "cupynumeric.WRITEBACKIFCOPY", false]], "zeros() (in module cupynumeric)": [[444, "cupynumeric.zeros", false]], "zeros_like() (in module cupynumeric)": [[445, "cupynumeric.zeros_like", false]], "zipf() (in module cupynumeric.random)": [[389, "cupynumeric.random.zipf", false]]}, "objects": {"cupynumeric": [[286, 0, 1, "", "ALIGNED"], [286, 0, 1, "", "BEHAVED"], [286, 0, 1, "", "CARRAY"], [286, 0, 1, "", "FARRAY"], [286, 0, 1, "", "FNC"], [286, 0, 1, "", "FORC"], [286, 0, 1, "", "F_CONTIGUOUS"], [286, 0, 1, "", "OWNDATA"], [286, 0, 1, "", "WRITEABLE"], [286, 0, 1, "", "WRITEBACKIFCOPY"], [12, 1, 1, "", "absolute"], [13, 1, 1, "", "add"], [14, 1, 1, "", "all"], [15, 1, 1, "", "allclose"], [16, 1, 1, "", "amax"], [17, 1, 1, "", "amin"], [18, 1, 1, "", "angle"], [19, 1, 1, "", "any"], [20, 1, 1, "", "append"], [21, 1, 1, "", "arange"], [22, 1, 1, "", "arccos"], [23, 1, 1, "", "arccosh"], [24, 1, 1, "", "arcsin"], [25, 1, 1, "", "arcsinh"], [26, 1, 1, "", "arctan"], [27, 1, 1, "", "arctan2"], [28, 1, 1, "", "arctanh"], [29, 1, 1, "", "argmax"], [30, 1, 1, "", "argmin"], [31, 1, 1, "", "argpartition"], [32, 1, 1, "", "argsort"], [33, 1, 1, "", "argwhere"], [34, 1, 1, "", "array"], [35, 1, 1, "", "array_equal"], [36, 1, 1, "", "array_split"], [37, 1, 1, "", "asarray"], [38, 1, 1, "", "atleast_1d"], [39, 1, 1, "", "atleast_2d"], [40, 1, 1, "", "atleast_3d"], [41, 1, 1, "", "average"], [42, 1, 1, "", "bartlett"], [43, 1, 1, "", "bincount"], [44, 1, 1, "", "bitwise_and"], [45, 1, 1, "", "bitwise_or"], [46, 1, 1, "", "bitwise_xor"], [47, 1, 1, "", "blackman"], [48, 1, 1, "", "block"], [6, 2, 1, "", "broadcast"], [49, 1, 1, "", "broadcast_arrays"], [50, 1, 1, "", "broadcast_shapes"], [51, 1, 1, "", "broadcast_to"], [52, 1, 1, "", "cbrt"], [53, 1, 1, "", "ceil"], [54, 1, 1, "", "choose"], [55, 1, 1, "", "clip"], [56, 1, 1, "", "column_stack"], [57, 1, 1, "", "compress"], [58, 1, 1, "", "concatenate"], [59, 1, 1, "", "conj"], [60, 1, 1, "", "conjugate"], [61, 1, 1, "", "convolve"], [62, 1, 1, "", "copy"], [63, 1, 1, "", "copysign"], [64, 1, 1, "", "cos"], [65, 1, 1, "", "cosh"], [66, 1, 1, "", "count_nonzero"], [67, 1, 1, "", "cov"], [68, 1, 1, "", "cumprod"], [69, 1, 1, "", "cumsum"], [70, 1, 1, "", "deg2rad"], [71, 1, 1, "", "degrees"], [72, 1, 1, "", "delete"], [73, 1, 1, "", "diag"], [74, 1, 1, "", "diag_indices"], [75, 1, 1, "", "diag_indices_from"], [76, 1, 1, "", "diagonal"], [77, 1, 1, "", "diff"], [78, 1, 1, "", "digitize"], [79, 1, 1, "", "divide"], [80, 1, 1, "", "dot"], [81, 1, 1, "", "dsplit"], [82, 1, 1, "", "dstack"], [83, 1, 1, "", "einsum"], [84, 1, 1, "", "einsum_path"], [85, 1, 1, "", "empty"], [86, 1, 1, "", "empty_like"], [87, 1, 1, "", "equal"], [88, 1, 1, "", "exp"], [89, 1, 1, "", "exp2"], [90, 1, 1, "", "expand_dims"], [91, 1, 1, "", "expm1"], [92, 1, 1, "", "extract"], [93, 1, 1, "", "eye"], [94, 1, 1, "", "fabs"], [11, 5, 0, "-", "fft"], [111, 1, 1, "", "fill_diagonal"], [112, 1, 1, "", "find_common_type"], [113, 1, 1, "", "flatnonzero"], [114, 1, 1, "", "flip"], [115, 1, 1, "", "fliplr"], [116, 1, 1, "", "flipud"], [117, 1, 1, "", "float_power"], [118, 1, 1, "", "floor"], [119, 1, 1, "", "floor_divide"], [120, 1, 1, "", "fmax"], [121, 1, 1, "", "fmin"], [122, 1, 1, "", "fmod"], [123, 1, 1, "", "frexp"], [124, 1, 1, "", "full"], [125, 1, 1, "", "full_like"], [126, 1, 1, "", "gcd"], [127, 1, 1, "", "gradient"], [128, 1, 1, "", "greater"], [129, 1, 1, "", "greater_equal"], [130, 1, 1, "", "hamming"], [131, 1, 1, "", "hanning"], [132, 1, 1, "", "histogram"], [133, 1, 1, "", "hsplit"], [134, 1, 1, "", "hstack"], [135, 1, 1, "", "hypot"], [136, 1, 1, "", "identity"], [137, 1, 1, "", "imag"], [138, 1, 1, "", "indices"], [139, 1, 1, "", "inner"], [140, 1, 1, "", "invert"], [141, 1, 1, "", "isclose"], [142, 1, 1, "", "iscomplex"], [143, 1, 1, "", "iscomplexobj"], [144, 1, 1, "", "isfinite"], [145, 1, 1, "", "isinf"], [146, 1, 1, "", "isnan"], [147, 1, 1, "", "isneginf"], [148, 1, 1, "", "isposinf"], [149, 1, 1, "", "isreal"], [150, 1, 1, "", "isrealobj"], [151, 1, 1, "", "isscalar"], [152, 1, 1, "", "ix_"], [153, 1, 1, "", "kaiser"], [154, 1, 1, "", "lcm"], [155, 1, 1, "", "ldexp"], [156, 1, 1, "", "left_shift"], [157, 1, 1, "", "less"], [158, 1, 1, "", "less_equal"], [449, 5, 0, "-", "linalg"], [171, 1, 1, "", "linspace"], [172, 1, 1, "", "load"], [173, 1, 1, "", "log"], [174, 1, 1, "", "log10"], [175, 1, 1, "", "log1p"], [176, 1, 1, "", "log2"], [177, 1, 1, "", "logaddexp"], [178, 1, 1, "", "logaddexp2"], [179, 1, 1, "", "logical_and"], [180, 1, 1, "", "logical_not"], [181, 1, 1, "", "logical_or"], [182, 1, 1, "", "logical_xor"], [183, 1, 1, "", "mask_indices"], [184, 1, 1, "", "matmul"], [185, 1, 1, "", "maximum"], [186, 1, 1, "", "mean"], [187, 1, 1, "", "median"], [188, 1, 1, "", "meshgrid"], [189, 1, 1, "", "minimum"], [190, 1, 1, "", "mod"], [191, 1, 1, "", "modf"], [192, 1, 1, "", "moveaxis"], [193, 1, 1, "", "multiply"], [194, 1, 1, "", "nanargmax"], [195, 1, 1, "", "nanargmin"], [196, 1, 1, "", "nancumprod"], [197, 1, 1, "", "nancumsum"], [198, 1, 1, "", "nanmax"], [199, 1, 1, "", "nanmean"], [200, 1, 1, "", "nanmedian"], [201, 1, 1, "", "nanmin"], [202, 1, 1, "", "nanpercentile"], [203, 1, 1, "", "nanprod"], [204, 1, 1, "", "nanquantile"], [205, 1, 1, "", "nansum"], [4, 2, 1, "", "ndarray"], [327, 1, 1, "", "ndim"], [328, 1, 1, "", "negative"], [329, 1, 1, "", "nextafter"], [330, 1, 1, "", "nonzero"], [331, 1, 1, "", "not_equal"], [332, 1, 1, "", "ones"], [333, 1, 1, "", "ones_like"], [334, 1, 1, "", "outer"], [335, 1, 1, "", "packbits"], [336, 1, 1, "", "partition"], [337, 1, 1, "", "percentile"], [338, 1, 1, "", "place"], [339, 1, 1, "", "positive"], [340, 1, 1, "", "power"], [341, 1, 1, "", "prod"], [342, 1, 1, "", "put"], [343, 1, 1, "", "put_along_axis"], [344, 1, 1, "", "putmask"], [345, 1, 1, "", "quantile"], [346, 1, 1, "", "rad2deg"], [347, 1, 1, "", "radians"], [454, 5, 0, "-", "random"], [390, 1, 1, "", "ravel"], [391, 1, 1, "", "real"], [392, 1, 1, "", "reciprocal"], [393, 1, 1, "", "remainder"], [394, 1, 1, "", "repeat"], [395, 1, 1, "", "reshape"], [396, 1, 1, "", "right_shift"], [397, 1, 1, "", "rint"], [398, 1, 1, "", "roll"], [399, 1, 1, "", "rot90"], [400, 1, 1, "", "round"], [401, 1, 1, "", "row_stack"], [402, 1, 1, "", "searchsorted"], [403, 1, 1, "", "select"], [404, 1, 1, "", "shape"], [405, 1, 1, "", "sign"], [406, 1, 1, "", "signbit"], [407, 1, 1, "", "sin"], [408, 1, 1, "", "sinh"], [409, 1, 1, "", "sort"], [410, 1, 1, "", "sort_complex"], [411, 1, 1, "", "split"], [412, 1, 1, "", "sqrt"], [413, 1, 1, "", "square"], [414, 1, 1, "", "squeeze"], [415, 1, 1, "", "stack"], [416, 1, 1, "", "subtract"], [417, 1, 1, "", "sum"], [418, 1, 1, "", "swapaxes"], [419, 1, 1, "", "take"], [420, 1, 1, "", "take_along_axis"], [421, 1, 1, "", "tan"], [422, 1, 1, "", "tanh"], [423, 1, 1, "", "tensordot"], [424, 1, 1, "", "tile"], [425, 1, 1, "", "trace"], [426, 1, 1, "", "transpose"], [427, 1, 1, "", "tri"], [428, 1, 1, "", "tril"], [429, 1, 1, "", "tril_indices"], [430, 1, 1, "", "tril_indices_from"], [431, 1, 1, "", "triu"], [432, 1, 1, "", "triu_indices"], [433, 1, 1, "", "triu_indices_from"], [434, 1, 1, "", "true_divide"], [435, 1, 1, "", "trunc"], [436, 1, 1, "", "unique"], [437, 1, 1, "", "unpackbits"], [438, 1, 1, "", "unravel_index"], [439, 1, 1, "", "var"], [440, 1, 1, "", "vdot"], [441, 1, 1, "", "vsplit"], [442, 1, 1, "", "vstack"], [443, 1, 1, "", "where"], [444, 1, 1, "", "zeros"], [445, 1, 1, "", "zeros_like"]], "cupynumeric.broadcast": [[6, 3, 1, "", "index"], [6, 3, 1, "", "iters"], [6, 3, 1, "", "nd"], [6, 3, 1, "", "ndim"], [6, 3, 1, "", "numiter"], [6, 4, 1, "", "reset"], [6, 3, 1, "", "shape"], [6, 3, 1, "", "size"]], "cupynumeric.fft": [[95, 1, 1, "", "fft"], [96, 1, 1, "", "fft2"], [97, 1, 1, "", "fftn"], [98, 1, 1, "", "fftshift"], [99, 1, 1, "", "hfft"], [100, 1, 1, "", "ifft"], [101, 1, 1, "", "ifft2"], [102, 1, 1, "", "ifftn"], [103, 1, 1, "", "ifftshift"], [104, 1, 1, "", "ihfft"], [105, 1, 1, "", "irfft"], [106, 1, 1, "", "irfft2"], [107, 1, 1, "", "irfftn"], [108, 1, 1, "", "rfft"], [109, 1, 1, "", "rfft2"], [110, 1, 1, "", "rfftn"]], "cupynumeric.linalg": [[159, 1, 1, "", "cholesky"], [160, 1, 1, "", "eig"], [161, 1, 1, "", "eigh"], [162, 1, 1, "", "eigvals"], [163, 1, 1, "", "eigvalsh"], [164, 1, 1, "", "expm"], [165, 1, 1, "", "matrix_power"], [166, 1, 1, "", "multi_dot"], [167, 1, 1, "", "norm"], [168, 1, 1, "", "qr"], [169, 1, 1, "", "solve"], [170, 1, 1, "", "svd"]], "cupynumeric.ndarray": [[286, 0, 1, "", "C_CONTIGUOUS"], [206, 3, 1, "", "T"], [207, 4, 1, "", "__abs__"], [208, 4, 1, "", "__add__"], [209, 4, 1, "", "__and__"], [210, 4, 1, "", "__array__"], [211, 4, 1, "", "__bool__"], [212, 4, 1, "", "__complex__"], [213, 4, 1, "", "__contains__"], [214, 4, 1, "", "__copy__"], [215, 4, 1, "", "__deepcopy__"], [216, 4, 1, "", "__divmod__"], [217, 4, 1, "", "__eq__"], [218, 4, 1, "", "__float__"], [219, 4, 1, "", "__floordiv__"], [220, 4, 1, "", "__ge__"], [221, 4, 1, "", "__getitem__"], [222, 4, 1, "", "__gt__"], [223, 4, 1, "", "__iadd__"], [224, 4, 1, "", "__iand__"], [225, 4, 1, "", "__ifloordiv__"], [226, 4, 1, "", "__ilshift__"], [227, 4, 1, "", "__imatmul__"], [228, 4, 1, "", "__imod__"], [229, 4, 1, "", "__imul__"], [230, 4, 1, "", "__index__"], [4, 4, 1, "", "__init__"], [231, 4, 1, "", "__int__"], [232, 4, 1, "", "__invert__"], [233, 4, 1, "", "__ior__"], [234, 4, 1, "", "__ipow__"], [235, 4, 1, "", "__irshift__"], [236, 4, 1, "", "__isub__"], [237, 4, 1, "", "__itruediv__"], [238, 4, 1, "", "__ixor__"], [239, 4, 1, "", "__le__"], [240, 4, 1, "", "__len__"], [241, 4, 1, "", "__lshift__"], [242, 4, 1, "", "__lt__"], [243, 4, 1, "", "__matmul__"], [244, 4, 1, "", "__mod__"], [245, 4, 1, "", "__mul__"], [246, 4, 1, "", "__ne__"], [247, 4, 1, "", "__neg__"], [248, 4, 1, "", "__new__"], [249, 4, 1, "", "__or__"], [250, 4, 1, "", "__pos__"], [251, 4, 1, "", "__pow__"], [252, 4, 1, "", "__reduce__"], [253, 4, 1, "", "__repr__"], [254, 4, 1, "", "__rmatmul__"], [255, 4, 1, "", "__rshift__"], [256, 4, 1, "", "__setitem__"], [257, 4, 1, "", "__setstate__"], [258, 4, 1, "", "__str__"], [259, 4, 1, "", "__sub__"], [260, 4, 1, "", "__truediv__"], [261, 4, 1, "", "__xor__"], [262, 4, 1, "", "all"], [263, 4, 1, "", "any"], [264, 4, 1, "", "argmax"], [265, 4, 1, "", "argmin"], [266, 4, 1, "", "argpartition"], [267, 4, 1, "", "argsort"], [268, 4, 1, "", "astype"], [269, 3, 1, "", "base"], [270, 4, 1, "", "choose"], [271, 4, 1, "", "clip"], [272, 4, 1, "", "compress"], [273, 4, 1, "", "conj"], [274, 4, 1, "", "conjugate"], [275, 4, 1, "", "copy"], [276, 3, 1, "", "ctypes"], [277, 4, 1, "", "cumprod"], [278, 4, 1, "", "cumsum"], [279, 3, 1, "", "data"], [280, 4, 1, "", "diagonal"], [281, 4, 1, "", "dot"], [282, 3, 1, "", "dtype"], [283, 4, 1, "", "dump"], [284, 4, 1, "", "dumps"], [285, 4, 1, "", "fill"], [286, 3, 1, "", "flags"], [287, 3, 1, "", "flat"], [288, 4, 1, "", "flatten"], [289, 4, 1, "", "flip"], [290, 4, 1, "", "getfield"], [291, 3, 1, "", "imag"], [292, 4, 1, "", "item"], [293, 0, 1, "", "itemset"], [294, 3, 1, "", "itemsize"], [295, 4, 1, "", "max"], [296, 4, 1, "", "mean"], [297, 4, 1, "", "min"], [298, 3, 1, "", "nbytes"], [299, 3, 1, "", "ndim"], [300, 4, 1, "", "nonzero"], [301, 4, 1, "", "partition"], [302, 4, 1, "", "prod"], [303, 4, 1, "", "put"], [304, 4, 1, "", "ravel"], [305, 3, 1, "", "real"], [306, 4, 1, "", "reshape"], [307, 4, 1, "", "searchsorted"], [308, 4, 1, "", "setfield"], [309, 4, 1, "", "setflags"], [310, 3, 1, "", "shape"], [311, 3, 1, "", "size"], [312, 4, 1, "", "sort"], [313, 4, 1, "", "squeeze"], [314, 3, 1, "", "strides"], [315, 4, 1, "", "sum"], [316, 4, 1, "", "swapaxes"], [317, 4, 1, "", "take"], [318, 4, 1, "", "tobytes"], [319, 4, 1, "", "tofile"], [320, 4, 1, "", "tolist"], [321, 4, 1, "", "tostring"], [322, 4, 1, "", "trace"], [323, 4, 1, "", "transpose"], [324, 4, 1, "", "unique"], [325, 4, 1, "", "var"], [326, 4, 1, "", "view"]], "cupynumeric.random": [[1, 2, 1, "", "BitGenerator"], [2, 2, 1, "", "Generator"], [348, 1, 1, "", "beta"], [349, 1, 1, "", "binomial"], [350, 1, 1, "", "bytes"], [351, 1, 1, "", "chisquare"], [352, 1, 1, "", "default_rng"], [353, 1, 1, "", "exponential"], [354, 1, 1, "", "f"], [355, 1, 1, "", "gamma"], [356, 1, 1, "", "geometric"], [357, 1, 1, "", "gumbel"], [358, 1, 1, "", "hypergeometric"], [359, 1, 1, "", "laplace"], [360, 1, 1, "", "logistic"], [361, 1, 1, "", "lognormal"], [362, 1, 1, "", "logseries"], [363, 1, 1, "", "negative_binomial"], [364, 1, 1, "", "noncentral_chisquare"], [365, 1, 1, "", "noncentral_f"], [366, 1, 1, "", "normal"], [367, 1, 1, "", "pareto"], [368, 1, 1, "", "poisson"], [369, 1, 1, "", "power"], [370, 1, 1, "", "rand"], [371, 1, 1, "", "randint"], [372, 1, 1, "", "randn"], [373, 1, 1, "", "random"], [374, 1, 1, "", "random_integers"], [375, 1, 1, "", "random_sample"], [376, 1, 1, "", "ranf"], [377, 1, 1, "", "rayleigh"], [378, 1, 1, "", "sample"], [379, 1, 1, "", "seed"], [380, 1, 1, "", "standard_cauchy"], [381, 1, 1, "", "standard_exponential"], [382, 1, 1, "", "standard_gamma"], [383, 1, 1, "", "standard_t"], [384, 1, 1, "", "triangular"], [385, 1, 1, "", "uniform"], [386, 1, 1, "", "vonmises"], [387, 1, 1, "", "wald"], [388, 1, 1, "", "weibull"], [389, 1, 1, "", "zipf"]], "cupynumeric.random.BitGenerator": [[1, 4, 1, "", "__init__"]], "cupynumeric.random.Generator": [[2, 4, 1, "", "__init__"]]}, "objnames": {"0": ["py", "attribute", "Python attribute"], "1": ["py", "function", "Python function"], "2": ["py", "class", "Python class"], "3": ["py", "property", "Python property"], "4": ["py", "method", "Python method"], "5": ["py", "module", "Python module"]}, "objtypes": {"0": "py:attribute", "1": "py:function", "2": "py:class", "3": "py:property", "4": "py:method", "5": "py:module"}, "terms": {"": [2, 6, 14, 15, 29, 30, 35, 61, 68, 69, 76, 96, 97, 101, 102, 106, 107, 109, 110, 111, 112, 141, 151, 167, 170, 196, 197, 198, 201, 202, 204, 279, 282, 292, 311, 318, 319, 323, 337, 345, 383, 389, 423, 424, 457, 461, 462, 465, 466, 467, 468, 470, 471, 472, 473, 474, 477, 480, 482, 485, 486], "0": [3, 4, 14, 19, 21, 36, 41, 43, 48, 54, 55, 58, 67, 68, 73, 74, 76, 77, 78, 80, 93, 96, 97, 98, 100, 101, 102, 107, 110, 113, 116, 136, 138, 165, 167, 171, 183, 188, 198, 202, 204, 211, 257, 280, 286, 290, 307, 308, 314, 315, 320, 322, 323, 325, 335, 337, 345, 348, 349, 351, 353, 354, 355, 357, 359, 360, 361, 362, 363, 364, 365, 366, 368, 369, 370, 371, 372, 373, 375, 376, 377, 378, 380, 383, 385, 386, 387, 388, 399, 400, 402, 403, 411, 415, 417, 425, 427, 428, 429, 430, 431, 432, 433, 437, 439, 441, 457, 461, 464, 465, 466, 467, 468, 470, 471, 472, 473, 474, 480, 482, 483, 485, 486, 487], "00": 486, "000": 486, "000001": 470, "000028": 474, "000029": 474, "0021705301478625403": 467, "01": [68, 486], "012924932": 486, "017": 476, "03": 464, "05": [15, 141, 465, 486], "07": [466, 480, 485], "075726": 464, "08": [15, 141, 464], "0b00000011": [335, 437], "0d": 479, "0x11403f190": 467, "1": [2, 3, 14, 16, 17, 19, 21, 31, 32, 36, 38, 40, 41, 43, 48, 54, 55, 56, 57, 61, 67, 68, 69, 73, 74, 76, 77, 78, 80, 82, 91, 92, 95, 96, 97, 99, 100, 101, 102, 104, 105, 106, 107, 108, 109, 110, 115, 127, 132, 133, 134, 138, 139, 152, 166, 167, 168, 171, 184, 188, 196, 197, 201, 202, 204, 205, 266, 267, 275, 286, 287, 288, 292, 301, 302, 307, 312, 314, 323, 334, 335, 336, 337, 338, 343, 345, 348, 349, 351, 353, 355, 356, 357, 358, 359, 360, 361, 362, 363, 365, 366, 367, 368, 369, 370, 372, 373, 374, 375, 376, 377, 378, 381, 382, 385, 387, 388, 389, 390, 395, 399, 401, 402, 409, 411, 414, 415, 420, 423, 424, 427, 436, 437, 440, 442, 457, 461, 462, 465, 466, 467, 468, 470, 471, 472, 473, 474, 476, 479, 480, 482, 483, 485, 487], "10": [77, 78, 132, 174, 465, 467, 470, 473, 474, 483, 485, 486], "100": [68, 202, 337, 464, 465, 466, 467, 470, 472, 482, 483, 486], "1000": [465, 466, 472, 480, 486], "10000": [172, 486], "100000": 486, "1000000": [465, 486], "100000000": 486, "1000000k": 486, "100000k": 486, "10000k": 486, "1024": [457, 473], "1083": 486, "10k": 476, "11": [476, 485, 486], "1100": 486, "11432": 486, "11680": 486, "12": [3, 8, 78, 476, 477, 479, 485], "12000": 486, "1202": 486, "1241": 486, "125": 366, "126": 473, "128": 473, "129": 476, "13": [471, 476, 486], "1300": 486, "13012": 486, "134217728": 457, "135": 464, "14": [3, 471], "14000": 486, "141": 486, "15": [78, 167, 472, 486], "150": 486, "15000": 486, "15000x15000": 486, "15973827": 479, "16": [3, 8, 464, 468, 486], "16000": 486, "16969": 486, "17": 3, "17617": 486, "18": [3, 8, 164, 294, 474], "19": 3, "1956": 387, "196": 464, "1970": 486, "1984": 477, "1985": 167, "1992": 467, "1995": 477, "1996": [202, 204, 337, 345], "1997": 465, "1998": 477, "1d": [41, 57, 343, 394, 420, 424], "1d00000000000001": 474, "1e": [15, 141, 466, 467, 471], "1e00000000000000": 474, "2": [3, 39, 40, 48, 56, 67, 73, 74, 75, 76, 77, 78, 80, 81, 82, 89, 93, 96, 99, 100, 101, 104, 105, 106, 107, 108, 109, 110, 111, 115, 116, 127, 152, 155, 160, 161, 162, 163, 166, 167, 168, 170, 176, 178, 184, 188, 202, 204, 314, 323, 337, 345, 353, 356, 364, 388, 399, 401, 411, 423, 424, 425, 442, 457, 461, 464, 465, 466, 467, 468, 470, 471, 472, 473, 476, 477, 478, 479, 485, 487], "20": [78, 314, 367, 471, 473, 486], "200": [366, 486], "2000": [477, 486], "20000": 486, "2000000": 486, "2000000k": 486, "2001": [353, 366], "2004": [461, 477], "2005": 477, "2006": 461, "2015": 477, "2017": 477, "2020": 486, "2024": [465, 466, 472], "2025": 477, "2048": 475, "21": [3, 294, 486], "2193": 486, "22": [3, 486], "225": 486, "22500x22500": 486, "23": [3, 480, 485], "2316419": 465, "2350": 486, "24": [474, 476], "24000": 486, "241": [3, 8], "2461": 472, "25": 473, "25001932": 486, "255": [77, 468, 486], "256": 470, "259": 486, "2593": 486, "26": [465, 482], "27": 482, "273": 472, "275": 486, "277": 466, "28": [3, 482], "280": 465, "29": 3, "294165": 486, "2960": 486, "2d": [111, 323, 399, 473, 485], "2x": 471, "2x2": 471, "2y": 471, "3": [40, 77, 78, 80, 81, 82, 127, 134, 152, 184, 188, 202, 204, 314, 335, 337, 345, 353, 401, 411, 419, 423, 424, 437, 442, 465, 466, 467, 468, 470, 471, 472, 476, 477, 479, 485, 487], "30": 486, "300": 486, "30000": 486, "30000x30000": 486, "31": [466, 482], "3110": 486, "31938153": 465, "32": [8, 203, 314, 462, 473, 486], "320": 470, "33": 482, "330274429": 465, "35": 486, "3550": 486, "356563782": 465, "36": [3, 467], "361": [202, 204, 337, 345], "365": [202, 204, 337, 345], "37": 68, "38000": 486, "39": 471, "39894228040143267793994605993438": 465, "3d": 485, "3e": 68, "3rd": 81, "4": [3, 77, 78, 80, 139, 184, 202, 204, 314, 337, 345, 423, 424, 440, 465, 466, 467, 468, 470, 471, 472, 473, 474, 479, 483, 485, 486, 487], "40": [314, 472, 486], "40000": 486, "4096": 457, "42": [3, 8, 470, 485], "434": 486, "4378": 486, "443": [3, 8], "45": [8, 465], "457": 486, "466": 486, "47": 3, "48000": 486, "49": 486, "4f": 486, "4th": [353, 366], "4x": 486, "4y": 471, "5": [77, 78, 80, 152, 184, 202, 204, 314, 337, 345, 424, 465, 466, 467, 468, 470, 472, 474, 485, 486], "50": [8, 171, 202, 204, 337, 345, 486], "500": 486, "50000": 486, "50000x50000": 486, "5050": 486, "50625": 486, "50e": 486, "51": 366, "5384": 486, "5460": 486, "5596": 486, "57": 353, "6": [3, 77, 78, 202, 204, 314, 337, 345, 464, 465, 466, 467, 470, 471, 472], "600": 473, "6040": 486, "62": [3, 8], "6368": 486, "64": [203, 486], "65536": 457, "659": 465, "69664": 486, "7": [3, 77, 184, 202, 204, 309, 314, 337, 345, 465, 467, 470, 471], "70": 486, "70000": 486, "713": 486, "725": 486, "75625": 486, "75625x75625": 486, "767": 486, "781477937": 465, "7f0524da9740": 474, "7fda18f26000": 474, "7fe90fa7d740": 474, "8": [77, 168, 202, 204, 314, 337, 345, 467, 470, 477, 486], "80": 367, "8000": 486, "805182": 474, "8192": 457, "821255978": 465, "8388608": 474, "875": 472, "8850": 486, "9": [184, 202, 204, 314, 337, 345, 467, 468, 470, 486], "90": 399, "919": 486, "961": 486, "993": 486, "A": [1, 8, 12, 13, 14, 18, 19, 20, 22, 23, 24, 25, 26, 27, 28, 34, 43, 44, 45, 46, 51, 52, 53, 57, 59, 60, 61, 63, 64, 65, 67, 68, 69, 70, 71, 72, 79, 84, 87, 88, 89, 91, 94, 96, 100, 101, 112, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 126, 127, 128, 129, 135, 140, 144, 145, 146, 147, 148, 154, 155, 156, 157, 158, 164, 167, 168, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 187, 189, 190, 191, 193, 196, 197, 200, 203, 205, 268, 283, 286, 287, 288, 289, 292, 309, 314, 318, 321, 328, 329, 331, 334, 339, 340, 346, 347, 352, 368, 372, 383, 390, 392, 393, 395, 396, 397, 399, 400, 405, 406, 407, 408, 411, 412, 413, 416, 419, 421, 422, 424, 426, 434, 435, 437, 439, 457, 466, 467, 470, 474, 477, 480, 486], "AND": [14, 44, 179, 477], "AS": [465, 466, 472, 477], "And": [471, 487], "As": [314, 319, 383, 387, 461, 472, 479, 485, 486], "At": [12, 13, 22, 23, 24, 25, 26, 27, 28, 44, 45, 46, 52, 53, 59, 60, 63, 64, 65, 70, 71, 79, 87, 88, 89, 91, 94, 117, 118, 119, 120, 121, 122, 123, 126, 128, 129, 135, 140, 144, 145, 146, 154, 155, 156, 157, 158, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 185, 189, 190, 191, 193, 328, 329, 331, 339, 340, 346, 347, 392, 393, 396, 397, 405, 406, 407, 408, 412, 413, 416, 421, 422, 434, 435, 466], "BE": 477, "BUT": 477, "BY": 477, "But": 485, "By": [16, 17, 29, 30, 31, 32, 37, 67, 96, 101, 110, 164, 171, 194, 195, 198, 203, 268, 336, 390, 394, 398, 409, 419, 426, 427, 429, 432, 439, 457, 461, 473, 486, 487], "FOR": 477, "For": [12, 13, 21, 22, 23, 24, 25, 26, 27, 28, 36, 40, 44, 45, 46, 52, 53, 55, 59, 60, 61, 63, 64, 65, 68, 69, 70, 71, 72, 74, 77, 78, 79, 82, 83, 87, 88, 89, 91, 94, 95, 99, 100, 102, 105, 106, 108, 109, 111, 115, 116, 117, 118, 119, 120, 121, 122, 123, 126, 128, 129, 134, 135, 140, 141, 144, 145, 146, 154, 155, 156, 157, 158, 165, 167, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 185, 186, 188, 189, 190, 191, 193, 194, 195, 196, 197, 199, 203, 252, 257, 294, 314, 323, 328, 329, 331, 339, 340, 346, 347, 366, 392, 393, 396, 397, 401, 405, 406, 407, 408, 411, 412, 413, 415, 416, 421, 422, 434, 435, 439, 442, 453, 461, 467, 468, 470, 473, 474, 475, 476, 480, 483, 486, 487], "IF": 477, "IN": 477, "ITS": 477, "If": [1, 2, 12, 13, 14, 15, 16, 17, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 34, 35, 37, 41, 42, 43, 44, 45, 46, 47, 48, 49, 52, 53, 54, 55, 57, 58, 59, 60, 61, 63, 64, 65, 67, 68, 69, 70, 71, 72, 73, 76, 77, 78, 79, 80, 83, 84, 87, 88, 89, 91, 93, 94, 95, 96, 97, 99, 100, 101, 102, 104, 105, 107, 108, 110, 111, 114, 117, 118, 119, 120, 121, 122, 123, 126, 127, 128, 129, 130, 131, 132, 135, 137, 138, 139, 140, 141, 144, 145, 146, 147, 148, 149, 153, 154, 155, 156, 157, 158, 160, 161, 162, 163, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 184, 185, 186, 187, 188, 189, 190, 191, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 257, 268, 289, 307, 319, 320, 323, 327, 328, 329, 331, 334, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 374, 375, 376, 377, 378, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 391, 392, 393, 395, 396, 397, 398, 400, 402, 405, 406, 407, 408, 409, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 427, 434, 435, 436, 439, 440, 461, 462, 467, 470, 471, 474, 482, 485, 486], "In": [2, 61, 68, 69, 83, 100, 101, 102, 105, 107, 159, 171, 183, 188, 196, 197, 202, 203, 204, 205, 336, 337, 341, 342, 345, 367, 385, 387, 395, 409, 417, 427, 461, 465, 466, 467, 469, 470, 473, 480, 485, 486], "It": [6, 14, 19, 20, 21, 29, 30, 31, 32, 42, 47, 51, 54, 55, 68, 69, 78, 119, 161, 163, 187, 194, 195, 196, 197, 200, 202, 204, 205, 286, 337, 341, 344, 345, 348, 353, 356, 359, 367, 386, 400, 403, 417, 419, 420, 439, 467, 473, 478, 485, 486], "Its": [55, 57, 343, 353, 425], "NO": 477, "NOT": [140, 180, 379, 477, 486], "No": [37, 159], "Not": [55, 144, 196, 197, 203, 205, 485], "OF": [465, 466, 472, 477], "ON": [462, 477], "OR": [19, 45, 181, 465, 466, 472, 476, 477], "On": 474, "One": [38, 39, 40, 203, 271, 395, 474, 485], "Ones": [34, 196], "Or": 423, "SUCH": 477, "Such": 474, "THE": 477, "TO": 477, "That": 183, "The": [2, 6, 7, 14, 15, 16, 17, 18, 19, 20, 21, 31, 32, 34, 36, 41, 42, 43, 47, 48, 49, 50, 51, 54, 55, 56, 58, 61, 66, 67, 68, 69, 72, 73, 74, 76, 77, 78, 80, 82, 83, 84, 86, 90, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 112, 114, 117, 124, 125, 127, 130, 131, 132, 134, 136, 137, 138, 139, 141, 143, 147, 148, 150, 153, 159, 160, 161, 162, 163, 165, 166, 167, 168, 170, 171, 172, 183, 184, 186, 187, 188, 192, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 257, 268, 276, 283, 286, 288, 289, 291, 294, 305, 309, 314, 318, 319, 320, 327, 332, 333, 335, 336, 337, 341, 342, 343, 345, 348, 352, 353, 354, 355, 356, 357, 359, 364, 366, 367, 368, 370, 371, 372, 374, 377, 380, 384, 385, 386, 387, 388, 389, 390, 391, 394, 395, 398, 399, 400, 401, 403, 404, 409, 411, 414, 415, 417, 419, 420, 423, 424, 425, 427, 429, 430, 432, 433, 436, 437, 438, 439, 440, 442, 444, 445, 446, 462, 463, 464, 465, 467, 468, 470, 471, 473, 474, 476, 477, 479, 482, 483, 485, 486], "Then": [54, 183, 487], "There": [171, 309, 436, 462, 464, 471, 485, 486], "These": [20, 49, 67, 83, 84, 188, 192, 286, 309, 343, 420, 473, 479, 486], "To": [99, 105, 107, 323, 375, 376, 378, 461, 465, 466, 467, 470, 471, 472, 476, 483, 485, 486], "WITH": 477, "With": [14, 16, 17, 19, 29, 30, 41, 167, 186, 187, 194, 195, 198, 199, 200, 201, 202, 203, 204, 205, 337, 341, 345, 417, 439, 473, 475, 486], "_": [467, 485, 486], "__abs__": 0, "__add__": 0, "__and__": 0, "__array__": [0, 34, 326], "__array_function__": [0, 427], "__array_ufunc__": 0, "__bool__": 0, "__buffer__": 0, "__complex__": 0, "__contains__": 0, "__copy__": 0, "__deepcopy__": 0, "__divmod__": 0, "__eq__": 0, "__float__": 0, "__floordiv__": 0, "__format__": 0, "__ge__": 0, "__getitem__": 0, "__gt__": 0, "__hash__": 0, "__iadd__": 0, "__iand__": 0, "__ifloordiv__": 0, "__ilshift__": 0, "__imatmul__": 0, "__imod__": 0, "__imul__": 0, "__index__": 0, "__init__": [0, 1, 2, 4, 482], "__int__": 0, "__invert__": 0, "__ior__": 0, "__ipow__": 0, "__irshift__": 0, "__isub__": 0, "__iter__": 0, "__itruediv__": 0, "__ixor__": 0, "__le__": 0, "__len__": 0, "__lshift__": 0, "__lt__": 0, "__main__": 486, "__matmul__": 0, "__mod__": 0, "__mul__": 0, "__name__": [468, 486], "__ne__": 0, "__neg__": 0, "__or__": 0, "__pos__": 0, "__pow__": 0, "__radd__": 0, "__rand__": 0, "__rdivmod__": 0, "__reduce__": 0, "__reduce_ex__": 0, "__repr__": 0, "__rfloordiv__": 0, "__rmatmul__": 0, "__rmod__": 0, "__rmul__": 0, "__ror__": 0, "__rpow__": 0, "__rshift__": 0, "__rsub__": 0, "__rtruediv__": 0, "__rxor__": 0, "__setitem__": 0, "__setstate__": 0, "__sizeof__": 0, "__str__": 0, "__sub__": 0, "__truediv__": 0, "__xor__": 0, "_f": 167, "a0": 334, "a1": [35, 58, 334, 465, 467], "a100": 475, "a2": [35, 58, 465, 467], "a3": 465, "a4": 465, "a5": 465, "a_": [167, 467], "a_ax": 423, "a_max": 55, "a_min": 55, "a_swap": 418, "aand": 465, "aarch64": [476, 486], "ab": [15, 165, 167, 207, 465], "abandon": 461, "abil": 486, "abl": [167, 461, 486], "about": [100, 286, 309, 457, 461, 466, 470, 476, 480, 486], "abov": [54, 73, 97, 102, 107, 110, 186, 199, 203, 205, 341, 367, 371, 374, 427, 428, 439, 465, 473, 474, 477, 486], "abramowitz": 465, "abrupt": 468, "absolut": [0, 3, 8, 15, 94, 141], "abstract": 473, "ac": [465, 468], "acceler": [457, 474, 475, 486], "accept": [349, 461, 479, 485], "access": [74, 75, 183, 286, 292, 309, 473, 474, 486], "accomod": 467, "accord": [41, 110, 160, 161, 162, 163, 309, 426], "accordingli": 184, "account": [390, 395, 473, 474, 486], "acct": 486, "acct_nam": 486, "accumul": [68, 69, 196, 197, 203, 205, 341, 417, 425, 479], "accur": [127, 466, 467, 474], "accuraci": [100, 101, 102, 105, 107, 467, 471, 486], "achiev": [323, 356, 473, 475], "aco": [3, 8], "acosh": [3, 8], "across": [470, 473, 486], "action": 477, "activ": [476, 486], "actual": [159, 309, 468, 473, 474, 480, 486], "ad": [15, 323, 367, 473, 482], "adapt": 477, "add": [0, 3, 8, 375, 376, 378, 437, 461, 479, 485, 486, 487], "add_argu": 486, "addit": [2, 67, 159, 164, 323, 436, 457, 464, 467, 468, 471, 473, 474, 476, 485, 486], "addition": [352, 462, 479, 485, 486], "address": [419, 461, 486], "adjac": [21, 473, 486], "advanc": [463, 474, 479, 484], "advantag": 486, "advis": 477, "affect": [21, 309, 467], "afford": [474, 486], "after": [82, 111, 184, 202, 204, 314, 329, 337, 345, 398, 401, 442, 461, 464, 473, 482, 485], "again": 326, "against": [6, 14, 15, 16, 17, 19, 29, 30, 41, 49, 50, 167, 186, 187, 194, 195, 198, 199, 200, 201, 202, 203, 204, 205, 337, 341, 343, 345, 417, 420, 439], "aggreg": 486, "agre": [461, 465, 466, 472], "ai": 486, "aim": 475, "alaska": 477, "algebra": [83, 446, 455, 462], "algo_canny_edge_detector": 468, "algorithm": [1, 32, 83, 84, 95, 100, 108, 409, 467, 468, 469, 471, 486], "alia": [321, 373], "alias": 100, "align": [286, 309, 486], "all": [0, 3, 8, 16, 17, 19, 41, 48, 54, 56, 67, 77, 78, 82, 83, 84, 88, 89, 91, 93, 97, 98, 102, 103, 107, 110, 111, 114, 127, 134, 136, 151, 152, 159, 171, 183, 184, 186, 188, 194, 195, 196, 197, 198, 199, 201, 203, 205, 268, 273, 285, 286, 289, 309, 320, 341, 385, 398, 401, 403, 414, 417, 419, 425, 439, 442, 457, 461, 462, 464, 470, 472, 473, 477, 482, 486, 487], "allclos": [0, 3, 8, 482], "allevi": 486, "alloc": [12, 13, 22, 23, 24, 25, 26, 27, 28, 44, 45, 46, 52, 53, 59, 60, 63, 64, 65, 70, 71, 79, 87, 88, 89, 91, 94, 117, 118, 119, 120, 121, 122, 123, 126, 128, 129, 135, 140, 144, 145, 146, 147, 148, 154, 155, 156, 157, 158, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 185, 189, 190, 191, 193, 268, 328, 329, 331, 339, 340, 346, 347, 392, 393, 396, 397, 405, 406, 407, 408, 412, 413, 416, 421, 422, 434, 435, 474, 484, 487], "allow": [16, 17, 36, 48, 80, 83, 132, 139, 172, 184, 187, 198, 200, 201, 202, 204, 268, 337, 345, 419, 423, 427, 440, 461, 468, 473, 486], "alon": 486, "along": [6, 14, 16, 17, 19, 20, 29, 30, 31, 32, 41, 48, 57, 58, 66, 68, 69, 72, 74, 77, 81, 82, 95, 96, 97, 99, 100, 101, 102, 104, 105, 107, 108, 110, 111, 114, 115, 116, 127, 133, 134, 138, 167, 171, 186, 187, 188, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 264, 265, 272, 289, 295, 296, 297, 314, 317, 322, 325, 337, 341, 343, 345, 394, 398, 399, 401, 410, 411, 415, 417, 419, 420, 423, 424, 425, 429, 430, 432, 433, 436, 437, 439, 441, 442, 486], "alpha": [348, 467, 470], "alreadi": [37, 39, 40, 187, 200, 286, 327, 334, 436, 461], "also": [21, 67, 77, 83, 97, 102, 107, 110, 164, 184, 192, 286, 326, 349, 354, 360, 367, 369, 377, 380, 386, 389, 419, 436, 451, 453, 461, 464, 466, 471, 472, 473, 474, 476, 478, 479, 483, 485, 486], "alter": 286, "altern": [14, 16, 17, 19, 68, 69, 186, 187, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 337, 341, 345, 353, 400, 417, 439, 457], "although": [103, 320, 473], "alwai": [54, 76, 81, 117, 133, 151, 160, 161, 162, 163, 172, 319, 414, 441, 457, 461, 474], "am": [334, 461], "amax": [0, 3, 8, 43, 198, 295], "amd": 486, "american": [202, 204, 337, 345], "amin": [0, 3, 8, 201, 297], "among": [276, 486], "amongst": 6, "amount": [474, 486], "an": [2, 6, 12, 13, 14, 16, 17, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 34, 36, 37, 38, 39, 40, 41, 42, 44, 45, 46, 47, 48, 51, 52, 53, 54, 55, 57, 58, 59, 60, 61, 62, 63, 64, 65, 67, 68, 69, 70, 71, 72, 74, 75, 76, 78, 79, 80, 83, 84, 87, 88, 89, 90, 91, 92, 93, 94, 96, 97, 99, 100, 101, 102, 105, 107, 108, 110, 111, 114, 117, 118, 119, 120, 121, 122, 123, 126, 127, 128, 129, 130, 131, 132, 133, 135, 138, 139, 140, 143, 144, 145, 146, 150, 152, 153, 154, 155, 156, 157, 158, 167, 169, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 185, 186, 187, 188, 189, 190, 191, 192, 193, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 214, 215, 257, 270, 271, 272, 276, 284, 289, 292, 301, 306, 307, 311, 312, 314, 317, 319, 320, 323, 324, 326, 327, 328, 329, 331, 333, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 349, 351, 353, 354, 356, 365, 370, 372, 387, 389, 390, 392, 393, 394, 395, 396, 397, 398, 399, 400, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 431, 432, 434, 435, 436, 438, 439, 441, 443, 445, 453, 457, 461, 462, 464, 465, 466, 468, 470, 471, 472, 473, 474, 476, 477, 479, 480, 482, 486], "analog": [101, 102], "analogu": [353, 386], "analysi": 474, "angl": [0, 3, 8, 70, 71, 346, 347], "ani": [0, 3, 4, 6, 8, 12, 13, 14, 16, 17, 20, 21, 22, 23, 24, 25, 26, 27, 28, 34, 36, 37, 44, 45, 46, 48, 49, 52, 53, 54, 59, 60, 63, 64, 65, 67, 68, 69, 70, 71, 72, 77, 78, 79, 83, 84, 87, 88, 89, 91, 94, 96, 97, 101, 102, 107, 110, 111, 112, 117, 118, 119, 120, 121, 122, 123, 124, 126, 127, 128, 129, 134, 135, 140, 142, 143, 144, 145, 146, 149, 150, 151, 152, 154, 155, 156, 157, 158, 165, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 184, 185, 186, 189, 190, 191, 193, 194, 195, 196, 197, 198, 199, 201, 203, 205, 268, 269, 276, 277, 278, 282, 286, 287, 289, 290, 295, 297, 302, 308, 315, 318, 320, 328, 329, 331, 339, 340, 341, 346, 347, 385, 392, 393, 394, 396, 397, 403, 405, 406, 407, 408, 412, 413, 416, 417, 421, 422, 425, 434, 435, 439, 461, 464, 465, 466, 472, 473, 477, 483, 485], "anoth": [6, 286, 309, 474, 486], "anova": 354, "answer": 486, "anti": 485, "anyth": [294, 464], "ap": 465, "apach": [461, 465, 466, 472], "api": [286, 309, 373, 457, 462, 467, 468, 471, 474, 475, 480, 481, 483, 484, 486], "appear": [42, 47, 90, 115, 116, 130, 131, 153, 268, 436, 461], "append": [0, 3, 8, 76, 77, 84, 184, 473, 485, 486], "appli": [41, 72, 112, 423, 467, 468, 479, 485, 486], "applic": [465, 466, 472, 473, 480, 482, 484, 486, 487], "apply_along_axi": [3, 8], "apply_over_ax": [3, 8], "approach": [387, 461, 473, 485, 486], "appropri": [29, 30, 48, 54, 78, 194, 195, 286, 309, 371, 374, 419, 453, 461, 473, 486], "approx": 486, "approxim": [465, 467], "ar": [13, 14, 15, 16, 17, 19, 20, 21, 27, 29, 30, 33, 35, 38, 39, 40, 41, 42, 44, 45, 46, 48, 49, 54, 55, 56, 57, 58, 61, 63, 67, 68, 69, 73, 76, 77, 78, 79, 80, 83, 84, 87, 93, 96, 97, 99, 100, 101, 102, 105, 107, 110, 113, 114, 115, 116, 117, 119, 120, 121, 122, 126, 128, 129, 132, 135, 139, 141, 154, 155, 156, 157, 158, 159, 165, 167, 170, 171, 177, 178, 179, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 268, 271, 286, 289, 292, 300, 307, 309, 319, 320, 323, 327, 329, 330, 331, 337, 338, 340, 341, 342, 343, 345, 348, 349, 351, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 371, 372, 374, 375, 376, 377, 378, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 393, 396, 398, 400, 402, 403, 415, 416, 417, 419, 423, 425, 427, 430, 433, 434, 436, 437, 438, 439, 457, 461, 462, 464, 465, 467, 468, 470, 471, 473, 476, 477, 479, 480, 482, 485, 486], "arang": [0, 3, 8], "arbitrari": [85, 86, 286, 311], "arbitrarili": 286, "arc": 27, "arcco": [0, 3, 8], "arccosh": [0, 3, 8], "architectur": [473, 486], "archiv": 319, "arcsin": [0, 3, 8], "arcsinh": [0, 3, 8], "arctan": [0, 3, 8], "arctan2": [0, 3, 8, 18], "arctanh": [0, 3, 8], "area": [286, 309, 473], "arg": [12, 13, 22, 23, 24, 25, 26, 27, 28, 44, 45, 46, 49, 50, 52, 53, 59, 60, 63, 64, 65, 70, 71, 79, 87, 88, 89, 91, 94, 112, 117, 118, 119, 120, 121, 122, 123, 126, 128, 129, 135, 140, 144, 145, 146, 152, 154, 155, 156, 157, 158, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 185, 189, 190, 191, 193, 292, 328, 329, 331, 339, 340, 346, 347, 392, 393, 396, 397, 405, 406, 407, 408, 412, 413, 416, 421, 422, 434, 435, 465, 486], "argmax": [0, 3, 8], "argmin": [0, 3, 8, 470], "argpars": 486, "argpartit": [0, 3, 8, 343, 420], "argsort": [0, 3, 8, 31, 307, 343, 402, 420], "argument": [2, 12, 13, 18, 21, 22, 23, 24, 25, 26, 27, 28, 44, 45, 46, 52, 53, 55, 58, 59, 60, 61, 63, 64, 65, 70, 71, 78, 79, 80, 84, 87, 88, 89, 91, 94, 112, 117, 118, 119, 120, 121, 122, 123, 126, 128, 129, 132, 135, 137, 139, 140, 144, 145, 146, 147, 148, 151, 154, 155, 156, 157, 158, 166, 171, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 188, 189, 190, 191, 193, 257, 268, 276, 292, 323, 326, 328, 329, 331, 339, 340, 346, 347, 370, 372, 391, 392, 393, 396, 397, 405, 406, 407, 408, 412, 413, 415, 416, 421, 422, 423, 427, 434, 435, 436, 440, 484, 486], "argumentpars": 486, "argwher": [0, 3, 8], "ari": [38, 39, 40, 411], "aris": [354, 477], "arithmet": [7, 54, 186, 199, 292, 455], "around": [3, 8, 342, 419, 486], "arr": [20, 51, 62, 72, 75, 92, 187, 200, 286, 338, 343, 419, 420, 430, 433, 479], "arr_t": 268, "arrai": [0, 2, 6, 7, 12, 13, 14, 15, 16, 17, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 152, 153, 154, 155, 156, 157, 158, 160, 161, 162, 163, 164, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 210, 214, 215, 257, 266, 267, 268, 270, 271, 272, 275, 276, 279, 281, 282, 283, 284, 285, 286, 287, 288, 289, 291, 292, 296, 298, 299, 301, 302, 303, 304, 305, 306, 307, 309, 310, 311, 312, 314, 315, 316, 317, 318, 319, 320, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 361, 370, 371, 372, 374, 375, 376, 378, 385, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 455, 457, 466, 467, 468, 470, 471, 472, 473, 474, 479, 480, 482, 487], "array2str": [3, 8], "array_equ": [0, 3, 8], "array_equiv": [3, 8], "array_lik": [6, 12, 13, 14, 15, 16, 17, 18, 19, 20, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 37, 38, 39, 40, 41, 43, 44, 45, 46, 48, 49, 51, 52, 53, 55, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 75, 76, 77, 78, 79, 80, 83, 84, 86, 87, 88, 89, 90, 91, 92, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 110, 111, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 125, 126, 127, 128, 129, 132, 135, 137, 139, 140, 141, 142, 144, 145, 146, 147, 148, 149, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 184, 185, 186, 187, 188, 189, 190, 191, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 289, 307, 327, 328, 329, 330, 331, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 402, 404, 405, 406, 407, 408, 409, 410, 412, 413, 414, 415, 416, 417, 418, 419, 421, 422, 423, 424, 425, 426, 427, 428, 430, 434, 435, 436, 438, 439, 440, 443, 445], "array_of_diagon": 76, "array_repr": [3, 8], "array_split": [0, 3, 8], "array_str": [3, 8], "array_typ": 41, "arraylik": [55, 132, 403, 443], "articl": 461, "asanyarrai": 3, "asarrai": [0, 3, 8], "asarray_chkfinit": [3, 8], "ascend": [161, 163, 307, 402], "ascontiguousarrai": 3, "asfortranarrai": 3, "asin": [3, 8], "asinh": [3, 8], "ask": [461, 475], "asmatrix": [3, 8], "aspect": 486, "aspir": 474, "assembl": 48, "assert": [467, 470, 485], "assign": [67, 285, 286, 473, 479], "assoc": 470, "associ": [41, 132, 470, 477, 480, 485], "assum": [41, 84, 164, 183, 462], "ast": 172, "astyp": [0, 3, 8, 77, 282, 468, 474, 486], "asynchron": [343, 479, 480], "atan": [3, 8], "atan2": [3, 8], "atanh": [3, 8], "atleast2d": 323, "atleast_1d": [0, 3, 8, 90], "atleast_2d": [0, 3, 8, 90], "atleast_3d": [0, 3, 8, 90], "atol": [15, 141], "attempt": [41, 78, 186, 198, 199, 201, 205, 286, 327, 439, 457, 485, 486], "attribut": [4, 7, 86, 125, 276, 286, 298, 333, 445], "author": 477, "auto": 61, "autom": 461, "automat": [61, 166, 461, 462, 473, 476, 486], "avail": [1, 2, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 207, 208, 209, 213, 214, 215, 216, 217, 219, 220, 222, 223, 224, 225, 226, 227, 228, 229, 232, 233, 234, 235, 236, 237, 238, 239, 241, 242, 243, 244, 245, 246, 247, 249, 250, 251, 253, 254, 255, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 270, 271, 272, 273, 274, 275, 280, 281, 283, 284, 285, 287, 288, 289, 292, 295, 296, 297, 300, 301, 302, 303, 304, 306, 307, 309, 312, 313, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 461, 462, 476, 485, 486, 487], "averag": [0, 3, 8, 67, 186, 199, 296, 455, 472, 473, 486], "averaged_inverted_cdf": [202, 204, 337, 345], "avg": 41, "avoid": [39, 40, 268, 470, 474, 479], "aweight": 67, "ax": [14, 16, 17, 19, 29, 30, 41, 48, 66, 76, 77, 90, 96, 97, 98, 101, 102, 103, 106, 107, 109, 110, 114, 127, 139, 167, 169, 186, 187, 192, 194, 195, 198, 199, 200, 201, 202, 203, 204, 205, 289, 313, 323, 337, 341, 345, 398, 399, 417, 418, 423, 424, 425, 426, 439, 468, 486], "axi": [14, 16, 17, 18, 19, 20, 29, 30, 31, 32, 36, 41, 57, 58, 66, 68, 69, 72, 76, 77, 80, 81, 82, 90, 95, 96, 97, 99, 100, 101, 102, 104, 105, 106, 107, 108, 109, 110, 114, 115, 116, 127, 133, 134, 138, 167, 171, 186, 187, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 262, 263, 264, 265, 266, 267, 272, 277, 278, 289, 295, 296, 297, 301, 302, 312, 313, 314, 315, 317, 323, 325, 335, 336, 337, 341, 343, 345, 390, 394, 395, 398, 399, 401, 409, 410, 411, 414, 415, 417, 418, 419, 420, 424, 425, 436, 437, 439, 441, 442, 470], "axis1": [76, 280, 316, 322, 418, 425], "axis2": [76, 280, 316, 322, 418, 425], "b": [6, 15, 35, 48, 80, 82, 119, 134, 139, 141, 169, 184, 286, 334, 348, 375, 376, 378, 401, 423, 440, 442, 461, 462, 467, 486], "b0": 334, "b1": 334, "b_ax": 423, "ba": 54, "back": [31, 54, 151, 283, 284, 336, 390, 395, 457, 465, 471, 474, 482, 486], "backward": [76, 95, 96, 97, 99, 100, 101, 102, 104, 105, 106, 107, 108, 109, 110, 127, 268, 390], "bad": 358, "balanc": 486, "baltimor": 167, "bar": 485, "barba": 473, "bartlett": [0, 3, 8], "base": [1, 34, 37, 61, 83, 174, 176, 178, 268, 286, 309, 338, 344, 457, 461, 462, 470, 473, 474, 479], "base_repr": [3, 8], "bash": 486, "bashrc": 486, "basi": [457, 465, 466, 472], "basic": [32, 409, 453, 455, 463, 473, 484, 485], "batch": [95, 96, 97, 99, 100, 101, 102, 104, 105, 106, 107, 108, 109, 110, 160, 161, 162, 163, 457], "bayesian": 348, "bbox_to_anchor": 467, "bchoic": 54, "becaus": [21, 292, 366, 387, 465, 466, 472, 474, 479, 485], "becom": [13, 27, 40, 44, 45, 46, 54, 55, 63, 79, 87, 117, 119, 120, 121, 122, 126, 128, 129, 135, 154, 155, 156, 157, 158, 177, 178, 179, 181, 182, 185, 189, 190, 193, 323, 329, 331, 340, 387, 393, 396, 416, 434, 486, 487], "been": [82, 343, 374, 401, 420, 442, 474], "befor": [14, 16, 17, 19, 20, 41, 58, 61, 115, 116, 186, 198, 199, 205, 286, 307, 341, 363, 398, 402, 417, 424, 439, 440, 471, 474, 476, 485, 486], "begin": [171, 463, 471, 486], "behav": [286, 342, 419], "behavior": [61, 78, 184, 318, 321, 343, 344, 371, 374, 424, 457, 473, 476, 484, 486], "being": [21, 414, 461, 474, 486], "bell": 366, "belong": [78, 470], "below": [67, 73, 105, 167, 309, 427, 428, 431, 462, 465, 467, 471, 473, 482, 483, 485, 486, 487], "benchmark": [464, 474, 481, 484, 486], "bernoulli": 356, "bessel": 153, "best": [84, 461, 474, 484], "beta": [0, 3, 8, 153, 353, 470], "better": [21, 54, 480, 486], "between": [15, 21, 36, 77, 127, 171, 202, 204, 319, 337, 345, 353, 359, 374, 387, 467, 468, 470, 471, 473, 485, 486], "beyond": [78, 398], "bham": 465, "bia": 67, "big": [164, 335, 437, 465], "bigger": 486, "billion": 473, "bin": [43, 78, 132, 335, 437, 470, 476, 486], "bin_edg": 132, "binari": [172, 257, 319, 335, 437, 446, 455, 477], "binary_repr": [3, 8], "binaryio": 172, "binaryoptask": 474, "bincount": [0, 3, 8, 470], "binomi": [0, 3, 8, 363, 368], "bit": [1, 44, 45, 46, 140, 156, 180, 203, 314, 335, 396, 437, 455], "bit_gener": 2, "bitgener": [2, 3, 8, 352], "bitord": [335, 437], "bitwise_and": [0, 3, 8], "bitwise_count": [3, 8], "bitwise_invert": [3, 8], "bitwise_left_shift": [3, 8], "bitwise_or": [0, 3, 8], "bitwise_right_shift": [3, 8], "bitwise_xor": [0, 3, 8], "bla": 462, "black": [469, 470, 476], "black_schol": [464, 465, 476, 486], "blackman": [0, 3, 8], "block": [0, 3, 8, 82, 134, 314, 401, 442, 473], "block_arrai": 48, "blog": 474, "blue": [467, 470], "bmat": [3, 8], "bmatrix": 471, "bn": 334, "boilerpl": 486, "boldsymbol": 486, "bond": 486, "bool": [1, 3, 4, 8, 12, 13, 14, 15, 16, 17, 18, 19, 22, 23, 24, 25, 26, 27, 28, 29, 30, 34, 35, 36, 41, 44, 45, 46, 49, 51, 52, 53, 57, 59, 60, 63, 64, 65, 67, 70, 71, 72, 78, 79, 83, 84, 87, 88, 89, 91, 94, 111, 117, 118, 119, 120, 121, 122, 123, 126, 128, 129, 132, 135, 138, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 154, 155, 156, 157, 158, 167, 170, 171, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 185, 186, 187, 188, 189, 190, 191, 193, 194, 195, 198, 199, 200, 201, 202, 203, 204, 205, 257, 268, 295, 297, 302, 309, 315, 328, 329, 331, 337, 339, 340, 341, 345, 346, 347, 392, 393, 396, 397, 403, 405, 406, 407, 408, 412, 413, 416, 417, 421, 422, 434, 435, 436, 439, 443, 453, 457, 485], "bool_": [3, 8], "boolean": [14, 19, 77, 141, 146, 147, 148, 149, 152, 183, 309, 335, 344, 439, 470], "boolean_sequ": 152, "borrow": 286, "both": [13, 15, 20, 27, 41, 44, 45, 46, 61, 63, 67, 79, 80, 87, 101, 117, 119, 120, 121, 122, 126, 128, 129, 135, 139, 141, 154, 155, 156, 157, 158, 167, 177, 178, 179, 181, 182, 184, 185, 188, 189, 190, 193, 286, 329, 331, 340, 354, 355, 365, 366, 393, 396, 416, 423, 425, 434, 462, 471, 474, 485], "bottleneck": 486, "bound": [57, 78, 342, 419], "boundari": [68, 69, 127, 196, 197, 385, 467, 472, 473, 480], "boundsmod": [54, 419], "break": [470, 471, 485], "bright": 486, "broadcast": [3, 7, 8, 12, 13, 14, 16, 17, 19, 22, 23, 24, 25, 26, 27, 28, 29, 30, 41, 44, 45, 46, 48, 49, 50, 51, 52, 53, 54, 55, 59, 60, 63, 64, 65, 70, 71, 79, 80, 87, 88, 89, 91, 94, 117, 118, 119, 120, 121, 122, 123, 126, 128, 129, 135, 139, 140, 144, 145, 146, 147, 148, 154, 155, 156, 157, 158, 167, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 184, 185, 186, 187, 188, 189, 190, 191, 193, 194, 195, 198, 199, 200, 201, 202, 203, 204, 205, 328, 329, 331, 337, 339, 340, 341, 343, 345, 346, 347, 368, 392, 393, 394, 396, 397, 405, 406, 407, 408, 412, 413, 416, 417, 420, 421, 422, 423, 434, 435, 439, 440, 443, 446, 479, 486], "broadcast_arrai": [0, 3, 8], "broadcast_shap": [0, 3, 8], "broadcast_to": [0, 3, 8], "brownian": 387, "bryan": 465, "bsd": 477, "buffer": [4, 16, 17, 54, 68, 69, 187, 196, 197, 198, 200, 201, 279, 286, 292, 309], "build": [379, 455, 463, 470, 479, 486], "built": [21, 462, 466, 474, 475, 486], "builtin": 320, "bundl": 476, "busday_count": [3, 8], "busday_offset": [3, 8], "busdaycalendar": [3, 8], "busi": 477, "bypass": [319, 486], "byte": [0, 3, 8, 83, 172, 184, 268, 298, 314, 318, 321, 335, 474], "bytes_": [3, 8], "bytesio": 319, "byteswap": 8, "c": [34, 48, 57, 167, 184, 268, 276, 286, 288, 304, 306, 309, 318, 319, 321, 374, 387, 390, 395, 424, 438, 461, 462, 465, 470, 476, 477, 486], "c_": 67, "c_contigu": 286, "ca": 286, "calcul": [7, 12, 41, 61, 77, 83, 88, 89, 91, 103, 127, 161, 163, 167, 171, 184, 187, 200, 202, 204, 311, 337, 341, 345, 439, 440, 462, 465, 470, 486], "calculate_dist": 470, "call": [54, 78, 108, 166, 183, 187, 200, 214, 215, 276, 286, 309, 366, 419, 424, 457, 465, 466, 471, 474, 486], "call_result": 465, "callabl": 183, "can": [14, 19, 20, 37, 41, 48, 67, 74, 76, 83, 84, 95, 96, 97, 100, 101, 102, 127, 134, 143, 150, 151, 152, 164, 165, 167, 171, 184, 187, 200, 202, 203, 204, 268, 276, 283, 286, 292, 294, 309, 314, 319, 326, 337, 343, 345, 367, 395, 419, 420, 423, 425, 436, 453, 457, 461, 462, 464, 465, 466, 467, 468, 471, 472, 473, 475, 476, 478, 479, 483, 485, 486], "can_cast": [3, 8], "cannot": [58, 172, 194, 195, 286, 319, 474], "canon": [465, 471, 474], "capabl": [41, 476, 486], "care": 486, "carrai": 286, "cartesian": 188, "case": [14, 19, 21, 31, 32, 34, 41, 54, 61, 68, 69, 76, 77, 78, 80, 99, 127, 138, 171, 183, 188, 196, 197, 202, 203, 204, 205, 292, 309, 311, 335, 336, 337, 341, 342, 343, 345, 348, 371, 374, 375, 376, 377, 378, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 395, 409, 417, 420, 423, 427, 461, 469, 479, 482, 485], "cast": [12, 13, 22, 23, 24, 25, 26, 27, 28, 44, 45, 46, 52, 53, 58, 59, 60, 63, 64, 65, 68, 69, 70, 71, 77, 79, 83, 87, 88, 89, 91, 94, 117, 118, 119, 120, 121, 122, 123, 126, 128, 129, 135, 139, 140, 144, 145, 146, 154, 155, 156, 157, 158, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 184, 185, 186, 187, 189, 190, 191, 193, 196, 197, 199, 200, 203, 205, 268, 282, 328, 329, 331, 334, 339, 340, 341, 346, 347, 392, 393, 396, 397, 400, 405, 406, 407, 408, 412, 413, 416, 417, 421, 422, 423, 434, 435, 439, 440, 471], "castingkind": [12, 13, 22, 23, 24, 25, 26, 27, 28, 44, 45, 46, 52, 53, 58, 59, 60, 63, 64, 65, 70, 71, 79, 83, 87, 88, 89, 91, 94, 117, 118, 119, 120, 121, 122, 123, 126, 128, 129, 135, 140, 144, 145, 146, 154, 155, 156, 157, 158, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 184, 185, 189, 190, 191, 193, 328, 329, 331, 339, 340, 346, 347, 392, 393, 396, 397, 405, 406, 407, 408, 412, 413, 416, 421, 422, 434, 435], "cat": 474, "cauchi": 380, "caus": [279, 473, 477, 485], "cbrt": [0, 3, 8], "cdot": [471, 486], "cdoubl": [3, 8], "ceil": [0, 3, 8, 21], "cell": 473, "center": [61, 98, 386, 467, 470, 472, 486], "centr": 366, "central": [127, 364, 365, 366], "centroid": 470, "centroid_dot": 470, "centroid_mask": 470, "certain": [183, 314, 457], "certif": 463, "certifi": 461, "cfd": 475, "cg": [464, 486], "chain": 166, "challeng": [473, 486], "chanc": 461, "chang": [63, 83, 171, 184, 196, 197, 268, 286, 309, 323, 338, 343, 344, 390, 395, 455, 461, 468, 471, 475, 481, 484, 485, 486, 487], "channel": [82, 134, 401, 442, 473, 476], "charact": [3, 8, 482], "characterist": 366, "charg": 477, "check": [69, 78, 143, 150, 159, 196, 197, 461, 468, 470, 471, 474, 476, 485, 486], "chi": [351, 354, 364, 377], "chisquar": [0, 3, 8], "choic": [3, 8, 54, 270, 319], "choicelist": 403, "choleski": [0, 3, 8, 464, 469, 483], "cholesky_tim": 466, "choos": [0, 3, 8, 27, 61, 84, 443, 474, 486], "chosen": [132, 443], "chuang": 473, "circl": 386, "circular": 386, "circumst": 286, "claim": [387, 477], "class": [1, 2, 4, 6, 14, 16, 17, 19, 34, 37, 93, 136, 138, 186, 198, 201, 203, 268, 326, 332, 341, 376, 378, 417, 427, 446], "classic": [83, 367], "claus": [477, 485], "clean": 473, "clear": 286, "clearli": 486, "clip": [0, 3, 8, 54, 342, 419], "clipped_arrai": 55, "clongdoubl": [3, 8, 292], "close": [47, 171, 268, 374, 461, 474], "closest": 319, "closest_observ": [202, 204, 337, 345], "cluster": [469, 474, 475, 484], "cmap": [468, 486], "cnd": 465, "cnd_d1": 465, "cnd_d2": 465, "co": [0, 3, 8, 467], "coastal": 473, "code": [32, 48, 188, 409, 457, 463, 464, 473, 475, 477, 481, 484, 485], "codebas": 483, "coeffici": [169, 465], "coercion": 112, "coin": 356, "collaps": [287, 288], "collect": [76, 279, 486], "color": [464, 467, 470], "colorama": 464, "column": [8, 34, 56, 67, 93, 111, 115, 116, 133, 134, 136, 160, 161, 166, 168, 288, 314, 323, 390, 427, 429, 432, 438, 482, 486], "column_stack": [0, 3, 8], "com": [461, 468, 474, 477, 479, 486, 487], "combin": [90, 97, 102, 107, 110, 127, 464, 480, 486], "combinatori": 84, "come": [436, 486], "comm": 473, "comm_world": 473, "comma": [83, 464], "comman": 474, "command": [464, 474, 476, 478, 482, 486], "comment": 461, "commit": [461, 473], "common": [13, 27, 44, 45, 46, 54, 63, 79, 83, 87, 112, 117, 119, 120, 121, 122, 126, 128, 129, 135, 154, 155, 156, 157, 158, 177, 178, 179, 181, 182, 185, 189, 190, 193, 329, 331, 340, 353, 388, 393, 396, 416, 434, 485, 486], "common_typ": [3, 8], "commonli": [366, 474, 485], "commun": [461, 473, 474, 485, 486], "compact": 469, "compactli": 467, "compar": [15, 16, 17, 35, 141, 198, 201, 467, 486], "comparison": [7, 446, 455], "compat": [76, 268, 320, 321, 390, 395, 427, 486], "compil": [169, 309, 462], "complet": [84, 202, 204, 337, 345, 462, 473, 475, 482, 486], "complex": [18, 35, 43, 59, 60, 68, 69, 78, 80, 95, 96, 97, 100, 101, 102, 104, 105, 108, 110, 137, 139, 142, 143, 149, 150, 160, 162, 196, 197, 202, 204, 273, 274, 337, 345, 391, 400, 410, 440, 453, 455, 473, 486], "complex128": [3, 8], "complex256": [3, 8], "complex64": [3, 8], "complexflo": [3, 8], "compli": 461, "complianc": [465, 466, 472], "complic": 473, "compon": [6, 35, 48, 98, 137, 391, 423, 485, 486], "compos": 474, "compound": 465, "compress": [0, 3, 8, 319], "compressed_arrai": 57, "compuat": 482, "comput": [16, 17, 18, 41, 44, 45, 46, 61, 68, 69, 83, 94, 95, 96, 97, 99, 100, 101, 102, 104, 105, 106, 107, 108, 109, 110, 127, 132, 138, 140, 160, 161, 162, 163, 165, 166, 167, 168, 169, 170, 179, 180, 181, 182, 186, 187, 196, 197, 198, 199, 200, 201, 202, 203, 204, 334, 337, 345, 421, 422, 423, 439, 457, 465, 466, 467, 468, 470, 471, 473, 474, 475, 479, 480, 485], "computat": 486, "computation": 164, "compute_uv": 170, "concat": [3, 8], "concaten": [0, 3, 8, 48, 82, 134, 401, 442], "concern": 486, "conclud": [461, 473], "conclus": 473, "cond": [8, 485, 486], "conda": 462, "conda_override_cuda": 476, "condit": [12, 13, 22, 23, 24, 25, 26, 27, 28, 44, 45, 46, 52, 53, 57, 59, 60, 63, 64, 65, 70, 71, 79, 87, 88, 89, 91, 92, 94, 117, 118, 119, 120, 121, 122, 123, 126, 128, 129, 135, 140, 144, 145, 146, 154, 155, 156, 157, 158, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 185, 189, 190, 191, 193, 268, 272, 328, 329, 331, 338, 339, 340, 344, 346, 347, 384, 392, 393, 396, 397, 403, 405, 406, 407, 408, 412, 413, 416, 421, 422, 434, 435, 443, 465, 466, 467, 472, 473, 477, 480, 485, 486], "condition": 485, "condlist": 403, "conduct": 486, "configur": [457, 462, 463, 474, 485], "configurt": 474, "conj": [0, 3, 8], "conjug": [0, 3, 8, 59, 80, 105, 139, 159, 273, 440, 466], "connect": [477, 486], "consecut": 77, "consequ": [18, 440, 474], "consequenti": 477, "conserv": 188, "consid": [15, 35, 67, 68, 83, 84, 141, 161, 163, 367, 467, 471, 486], "consider": 486, "consist": [14, 21, 61, 77, 171, 420, 461, 473], "const": [485, 486], "constant": [127, 289], "constraint": [41, 486], "construct": [7, 48, 54, 73, 114, 115, 116, 152, 270, 318, 352, 424], "constructor": [2, 453], "consum": [164, 298], "contact": 474, "contain": [2, 29, 30, 41, 43, 54, 55, 57, 67, 76, 77, 100, 113, 127, 132, 138, 186, 187, 194, 195, 198, 199, 200, 201, 202, 204, 205, 257, 282, 306, 318, 319, 330, 337, 345, 390, 400, 423, 429, 430, 432, 433, 436, 439, 453, 486], "content": [43, 187, 200, 202, 204, 286, 309, 318, 319, 337, 345, 455], "context": [465, 473], "contigu": [49, 51, 188, 268, 286, 288, 314, 318, 390, 395], "continu": [353, 354, 375, 376, 378, 384, 386, 465], "contour": 486, "contract": [83, 84, 462, 477], "contribut": [8, 41, 132, 463, 486], "contributor": [461, 477], "control": [58, 83, 184, 268, 318, 464, 487], "conveni": 319, "convent": [18, 83, 102, 184, 188], "converg": [160, 161, 162, 163, 170, 470, 471, 485, 486], "convers": [41, 83, 184, 186, 198, 199, 201, 205, 268, 326, 327, 439], "convert": [14, 19, 37, 38, 39, 40, 70, 71, 187, 200, 202, 204, 284, 319, 320, 323, 326, 337, 345, 346, 347, 438, 467, 479, 486], "convolut": [61, 468, 486], "convolv": [0, 8, 468, 486], "convolve_nd": [468, 486], "convolvemethodtyp": 61, "convolvemod": 61, "coordin": [127, 188, 438, 470], "copi": [0, 3, 8, 20, 34, 37, 38, 39, 40, 48, 49, 57, 72, 73, 76, 188, 214, 215, 268, 286, 287, 288, 292, 309, 318, 320, 336, 390, 395, 399, 409, 410, 428, 431, 461, 465, 466, 472, 474, 477, 484, 486], "copyright": [461, 465, 466, 472, 477], "copysign": [0, 3, 8], "copyto": [3, 8, 338], "core": [2, 457, 464, 465, 474, 486, 487], "corner": [101, 102, 486], "corpor": [465, 466, 472], "corrcoef": [3, 8], "correct": [20, 58, 415, 473], "correctli": [14, 16, 17, 19, 27, 29, 30, 41, 167, 186, 187, 194, 195, 198, 199, 200, 201, 202, 203, 204, 205, 337, 341, 345, 417, 439, 486], "correl": [8, 455], "correspond": [8, 54, 58, 76, 96, 97, 101, 102, 105, 107, 110, 127, 138, 147, 148, 152, 160, 161, 183, 194, 195, 202, 204, 307, 335, 337, 345, 398, 402, 403, 404, 467, 468, 476, 479, 485, 486], "correspondingli": [411, 474], "cosh": [0, 3, 8], "cosin": [22, 23, 47, 64, 65, 130, 131], "cost": [84, 473], "costli": 84, "could": 485, "count": [14, 19, 41, 43, 66, 114, 127, 132, 205, 289, 341, 417, 437, 446, 455, 470], "count_nonzero": [0, 3, 8], "counterclockwis": [18, 399], "cours": 475, "cov": [0, 3, 8], "covari": 67, "cover": [3, 8, 387, 461], "coverag": [457, 481, 483, 484], "cp": 473, "cpu": [1, 2, 3, 8, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 98, 103, 111, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 207, 208, 209, 213, 214, 215, 216, 217, 219, 220, 222, 223, 224, 225, 226, 227, 228, 229, 232, 233, 234, 235, 236, 237, 238, 239, 241, 242, 243, 244, 245, 246, 247, 249, 250, 251, 253, 254, 255, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 270, 271, 272, 273, 274, 275, 280, 281, 283, 284, 285, 287, 288, 289, 292, 295, 296, 297, 300, 301, 302, 303, 304, 306, 307, 309, 312, 313, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 457, 462, 464, 471, 474, 475, 483, 485, 487], "cputsc": 478, "creat": [12, 13, 22, 23, 24, 25, 26, 27, 28, 34, 44, 45, 46, 52, 53, 54, 59, 60, 63, 64, 65, 70, 71, 79, 84, 87, 88, 89, 91, 94, 117, 118, 119, 120, 121, 122, 123, 126, 128, 129, 135, 140, 144, 145, 146, 154, 155, 156, 157, 158, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 185, 189, 190, 191, 193, 276, 282, 286, 328, 329, 331, 339, 340, 343, 346, 347, 370, 392, 393, 396, 397, 400, 405, 406, 407, 408, 412, 413, 416, 418, 421, 422, 434, 435, 461, 467, 472, 473, 476, 485, 486], "create_subarrai": 473, "creation": [84, 286, 427, 446, 453, 455], "critic": [473, 486], "crop": [95, 96, 97, 99, 100, 101, 102, 104, 105, 107, 108, 110], "cross": [3, 8, 152], "crucial": 486, "csingl": [3, 8], "csv": [457, 474, 482], "ct": 95, "cube": 52, "cubic": 84, "cubla": 457, "cuda": [457, 462, 464, 473, 476, 486], "cumbersom": 486, "cumprod": [0, 3, 8, 69, 196, 197, 479], "cumsum": [0, 3, 8], "cumul": [68, 69, 196, 197, 465, 486], "cumulative_prod": [3, 8], "cumulative_sum": [3, 8], "cunumer": 474, "cupi": 473, "cupynumer": [0, 3, 7, 446, 451, 455, 457, 462, 464, 465, 466, 468, 470, 471, 472, 473, 476, 478, 479, 480, 482, 483, 484, 487], "cupynumeric_doctor": [457, 485], "cupynumeric_doctor_filenam": 457, "cupynumeric_doctor_format": 457, "cupynumeric_doctor_traceback": 457, "cupynumeric_fallback_stacktrac": 457, "cupynumeric_fast_math": 457, "cupynumeric_force_thunk": 457, "cupynumeric_matmul_cache_s": 457, "cupynumeric_min_cpu_chunk": 457, "cupynumeric_min_gpu_chunk": 457, "cupynumeric_min_omp_chunk": 457, "cupynumeric_numpy_compat": [194, 195, 198, 201, 457], "cupynumeric_preload_cudalib": 457, "cupynumeric_report_coverag": [457, 482, 483], "cupynumeric_report_dump_callstack": [457, 482], "cupynumeric_report_dump_csv": [457, 482], "cupynumeric_root": 462, "cupynumeric_warn": 457, "curand": 379, "curiou": 467, "current": [6, 31, 32, 61, 159, 168, 170, 172, 210, 286, 326, 336, 343, 394, 409, 427, 436, 457, 465, 474, 478, 479, 482, 485, 486, 487], "curv": [366, 467], "cusolv": 457, "cusolvermp": 169, "custom": [453, 462, 473], "cycl": 152, "d": [2, 40, 41, 43, 56, 57, 61, 67, 68, 69, 73, 75, 76, 80, 82, 93, 106, 109, 111, 115, 116, 134, 138, 139, 152, 166, 167, 184, 188, 196, 197, 198, 205, 275, 287, 288, 307, 323, 335, 338, 390, 395, 401, 402, 411, 417, 424, 425, 436, 437, 440, 442, 461, 462, 465, 466, 486], "d0": [370, 372], "d1": [370, 372, 465], "d2": 465, "d_1": 486, "d_2": 486, "damag": 477, "data": [16, 17, 21, 33, 34, 37, 41, 58, 62, 67, 82, 83, 85, 86, 93, 95, 96, 97, 99, 100, 101, 102, 104, 105, 106, 107, 108, 109, 110, 112, 124, 125, 132, 134, 136, 138, 150, 160, 161, 162, 163, 171, 172, 183, 184, 186, 187, 199, 200, 202, 203, 204, 205, 210, 257, 268, 276, 282, 286, 292, 294, 306, 309, 318, 319, 320, 323, 326, 332, 333, 337, 338, 341, 342, 343, 345, 390, 395, 400, 401, 414, 417, 420, 425, 427, 428, 439, 442, 444, 445, 446, 455, 470, 471, 473, 477, 480, 485, 486], "data_magnitude_squar": 470, "dataset": [132, 486], "datatyp": [112, 473, 484], "date": 486, "datetim": [465, 466, 472], "datetime64": [3, 8], "datetime_as_str": [3, 8], "ddof": [67, 325, 439], "de": 366, "deadlock": 473, "deal": [477, 486], "dealloc": 286, "deb": 486, "debian": 477, "debug": [464, 473], "decai": 359, "decid": 457, "decim": 400, "decompos": [123, 466, 473], "decomposit": [159, 170, 455, 469, 473], "decreas": [78, 465, 471, 474], "decreasingli": [101, 102], "dedic": 474, "deep": [48, 215, 320, 473], "deepcopi": 215, "def": [465, 466, 468, 470, 471, 472, 473, 485, 486], "default": [2, 12, 13, 14, 16, 17, 18, 19, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 34, 37, 41, 44, 45, 46, 52, 53, 54, 57, 58, 59, 60, 61, 63, 64, 65, 66, 67, 68, 69, 70, 71, 73, 76, 77, 78, 79, 83, 84, 85, 87, 88, 89, 91, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 114, 117, 118, 119, 120, 121, 122, 123, 124, 126, 127, 128, 129, 132, 135, 136, 138, 140, 144, 145, 146, 154, 155, 156, 157, 158, 161, 163, 164, 167, 170, 171, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 184, 185, 186, 187, 188, 189, 190, 191, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 257, 268, 288, 289, 318, 319, 328, 329, 331, 332, 335, 336, 337, 339, 340, 341, 345, 346, 347, 348, 349, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 371, 374, 375, 376, 377, 378, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 392, 393, 394, 396, 397, 398, 399, 400, 403, 405, 406, 407, 408, 409, 411, 412, 413, 416, 417, 419, 421, 422, 425, 426, 427, 428, 429, 432, 434, 435, 436, 437, 439, 441, 444, 457, 464, 468, 470, 479, 486, 487], "default_rng": [0, 2, 3, 8, 470], "defer": [4, 457, 465, 466, 472, 474, 479], "defin": [54, 72, 86, 125, 132, 167, 202, 204, 292, 333, 337, 345, 384, 399, 427, 445, 461, 462, 465, 466, 468, 470, 471, 472, 485, 486], "definit": [61, 100, 102, 159, 466, 486], "deg": [18, 164], "deg2rad": [0, 3, 8, 347], "degre": [3, 8, 18, 70, 346, 347, 351, 354, 364, 365, 383, 399, 439, 486], "delai": [485, 486], "delet": [0, 3, 8], "delta": [439, 470], "demand": 473, "democrat": 486, "demonstr": [483, 486], "denomin": [354, 365], "denot": 8, "dens": [138, 467], "densiti": [132, 353, 366], "dep": 462, "depend": [43, 73, 167, 169, 171, 184, 203, 374, 403, 443, 463, 474, 485, 486], "depict": 486, "deprec": 374, "depth": [48, 81, 82, 320], "deriv": [127, 361, 366, 465, 467, 468, 477, 485, 486], "derivative_exact": 467, "descend": 170, "describ": [167, 309, 353, 366, 467, 474, 485], "descript": [100, 102, 132, 268, 464], "descriptor": 326, "design": [47, 355, 382, 484, 486], "desir": [34, 51, 77, 85, 124, 186, 198, 199, 201, 205, 332, 371, 424, 439, 444, 476], "despit": 321, "dest": 473, "destin": [58, 192, 343, 415], "det": [3, 8], "detail": [16, 17, 68, 69, 73, 75, 95, 100, 105, 106, 108, 109, 172, 188, 196, 197, 198, 201, 203, 205, 265, 276, 314, 341, 417, 429, 430, 431, 432, 433, 436, 453, 461, 464, 473, 474, 476, 485, 486], "detect": [469, 476], "detector": 468, "determin": [34, 61, 68, 69, 76, 112, 169, 196, 197, 203, 309, 403, 425, 438, 468, 470, 471, 473, 486], "determinist": [470, 479], "develop": [462, 473, 474, 475, 477, 486], "developercertif": 461, "deviat": [361, 366, 485], "devic": [473, 486], "devin": 477, "df": [351, 364, 383], "dfden": [354, 365], "dfnum": [354, 365], "dft": [95, 100, 108], "dgx": 475, "diag": [0, 3, 8, 467, 479], "diag_indic": [0, 3, 8, 75], "diag_indices_from": [0, 3, 8], "diagflat": [3, 8], "diagnos": 485, "diagon": [0, 3, 8, 73, 74, 75, 93, 111, 136, 159, 161, 163, 322, 425, 427, 428, 429, 430, 431, 432, 433, 467], "diagram": [462, 486], "dictionari": 286, "did": 471, "diff": [0, 3, 8], "differ": [1, 15, 29, 30, 36, 68, 69, 77, 95, 100, 103, 105, 106, 108, 109, 115, 116, 117, 127, 167, 184, 188, 196, 197, 210, 282, 319, 343, 344, 359, 399, 420, 440, 455, 461, 462, 464, 469, 471, 472, 473, 480, 484, 485, 486], "differenc": 77, "differenti": [470, 486], "difficult": [473, 486], "diffus": 486, "digit": [0, 3, 8], "dim": 286, "dimens": [6, 14, 16, 17, 19, 29, 30, 34, 38, 39, 40, 41, 48, 54, 56, 57, 58, 61, 74, 76, 77, 81, 82, 90, 111, 127, 133, 134, 138, 139, 147, 148, 152, 160, 161, 162, 163, 167, 168, 170, 184, 186, 187, 188, 194, 195, 198, 199, 200, 201, 202, 203, 204, 205, 286, 287, 288, 299, 310, 311, 314, 323, 327, 330, 335, 337, 341, 343, 345, 370, 372, 395, 398, 399, 401, 404, 411, 414, 415, 417, 420, 423, 424, 425, 426, 429, 430, 432, 433, 436, 437, 438, 439, 441, 442, 455, 469, 470, 473, 479], "dimension": [7, 38, 43, 48, 61, 67, 72, 75, 78, 83, 95, 96, 97, 100, 101, 102, 105, 107, 108, 109, 110, 111, 127, 164, 188, 286, 327, 334, 414, 424, 446, 468, 470, 472, 479, 485, 486], "dimenson": 188, "direct": [61, 77, 95, 96, 97, 99, 100, 101, 102, 104, 105, 106, 107, 108, 109, 110, 115, 116, 286, 399, 468, 477, 486], "directli": [61, 77, 319, 384, 461, 476, 478, 482], "directori": [462, 486], "dirichlet": [3, 8, 348], "disabl": [83, 419, 486], "disclaim": 477, "discontinu": [202, 204, 337, 345], "discourag": 480, "discret": [61, 77, 95, 96, 97, 100, 101, 102, 105, 107, 108, 110, 371, 374, 389, 446, 455, 467], "discuss": [461, 474], "dispers": 386, "displai": [464, 474, 486], "distanc": [21, 127, 387, 470], "distance_sum": 470, "distribu": 486, "distribut": [2, 279, 348, 349, 351, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 374, 375, 376, 377, 378, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 439, 455, 457, 461, 465, 466, 472, 473, 474, 475, 477, 479, 486], "disturb": 366, "dive": 473, "divid": [3, 8, 36, 82, 134, 401, 411, 442, 470, 473], "divis": [79, 119, 122, 190, 393, 411, 434], "divisor": [126, 439], "divmod": [3, 8, 216], "dn": [370, 372], "do": [61, 78, 183, 187, 200, 292, 319, 462, 470, 477, 479, 480, 485, 486, 487], "doc": [12, 13, 22, 23, 24, 25, 26, 27, 28, 44, 45, 46, 52, 53, 55, 59, 60, 63, 64, 65, 70, 71, 79, 87, 88, 89, 91, 94, 117, 118, 119, 120, 121, 122, 123, 126, 128, 129, 135, 140, 144, 145, 146, 154, 155, 156, 157, 158, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 185, 189, 190, 191, 193, 328, 329, 331, 339, 340, 346, 347, 392, 393, 396, 397, 405, 406, 407, 408, 412, 413, 416, 421, 422, 434, 435, 468, 474, 487], "docstr": 485, "doctor": [446, 485], "doctor_filenam": 446, "doctor_format": 446, "doctorformat": 457, "document": [36, 73, 81, 133, 262, 263, 264, 265, 266, 267, 270, 271, 272, 273, 274, 280, 281, 295, 296, 297, 300, 301, 302, 303, 304, 306, 312, 313, 315, 316, 317, 322, 324, 325, 431, 441, 461, 474, 476, 477, 485, 486], "doe": [14, 16, 17, 19, 21, 36, 72, 78, 111, 160, 161, 162, 163, 168, 170, 172, 186, 196, 197, 198, 201, 203, 268, 286, 292, 298, 323, 326, 341, 352, 411, 417, 419, 440, 461, 468, 479, 482, 485, 486], "doesn": [78, 114, 115, 116, 342, 479, 485], "dollar": 486, "domain": [42, 462, 467, 473], "don": [286, 464, 470, 485, 486], "done": [83, 161, 163, 184, 268, 289, 309, 335, 437, 485], "dot": [0, 3, 8, 166, 184, 423, 440, 466, 470, 471, 482, 486], "dot_product": 486, "doubl": [3, 8, 41, 359, 473], "down": [116, 485, 486], "download": [462, 476, 486], "dr": 473, "draft": 461, "draw": [348, 349, 351, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 377, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389], "drawn": [2, 348, 349, 351, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 371, 374, 375, 376, 377, 378, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 403], "driver": [464, 478, 486], "drop": [466, 474, 475, 486], "dry": 464, "dsplit": [0, 3, 8, 82], "dstack": [0, 3, 8], "dt": [348, 465], "dtype": [3, 4, 8, 12, 13, 14, 16, 17, 18, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 34, 35, 37, 41, 44, 45, 46, 52, 53, 54, 58, 59, 60, 63, 64, 65, 67, 68, 69, 70, 71, 77, 78, 79, 80, 83, 85, 86, 87, 88, 89, 91, 93, 94, 112, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 128, 129, 135, 136, 138, 139, 140, 144, 145, 146, 154, 155, 156, 157, 158, 160, 162, 166, 171, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 184, 185, 186, 189, 190, 191, 193, 194, 195, 196, 197, 198, 199, 203, 205, 210, 257, 268, 277, 278, 290, 296, 302, 308, 314, 315, 322, 325, 326, 328, 329, 331, 332, 333, 334, 336, 339, 340, 341, 346, 347, 371, 376, 378, 392, 393, 396, 397, 405, 406, 407, 408, 409, 412, 413, 416, 417, 419, 421, 422, 423, 425, 427, 434, 435, 439, 440, 444, 445, 466, 470, 483], "dtypelik": [4, 58, 93, 124, 125, 136, 138, 171, 308, 326, 332, 333, 376, 378, 427, 445], "due": [385, 479], "dump": [0, 8, 457], "dump_data": 480, "duplic": [343, 479, 486], "dure": [457, 462, 474, 486], "dx": 127, "dy": 127, "dynam": 473, "dz": 127, "e": [14, 19, 43, 54, 76, 78, 80, 96, 99, 100, 101, 102, 105, 107, 127, 138, 139, 169, 184, 311, 319, 326, 348, 349, 351, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 371, 374, 375, 376, 377, 378, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 423, 425, 440, 457, 461, 462, 465, 479, 483, 485, 486, 487], "each": [2, 38, 39, 40, 41, 43, 49, 50, 54, 57, 67, 74, 78, 84, 96, 97, 101, 102, 107, 110, 115, 116, 127, 132, 152, 160, 161, 162, 163, 164, 192, 314, 319, 330, 343, 344, 349, 351, 358, 363, 366, 394, 398, 415, 420, 424, 429, 430, 432, 433, 436, 437, 438, 462, 467, 468, 470, 471, 473, 474, 485, 486], "eager": [4, 457, 464, 474, 486], "eagerli": 471, "earli": 486, "earlier": 470, "eas": [373, 486], "easi": [461, 486], "easier": [276, 419, 486], "easiest": [461, 462], "east": [472, 486], "economist": 486, "ed": [353, 366, 468], "edg": [55, 78, 132, 469], "edge_ord": 127, "edgecolor": 470, "ediff1d": [3, 8], "edit": [462, 486], "effect": [84, 188, 323, 379, 437, 472, 486], "effici": [95, 108, 465, 473, 486], "effort": [461, 473], "effortlessli": 473, "eig": [0, 3, 8], "eigenvalu": [160, 161, 162, 163], "eigenvector": [160, 161], "eigh": [0, 3, 8], "eight": [167, 437], "eigval": [0, 3, 8], "eigvalsh": [0, 3, 8], "einstein": 83, "einsum": [0, 8, 84, 464], "einsum_path": [0, 3, 8, 83], "either": [35, 41, 61, 80, 127, 167, 184, 203, 210, 307, 402, 437, 465, 466, 467, 472, 474, 486], "elaps": [464, 465, 466, 472, 476, 480, 486], "elapsed_millisec": 480, "elapsed_tim": 486, "element": [12, 13, 14, 15, 16, 17, 19, 21, 22, 23, 24, 25, 26, 27, 28, 33, 35, 41, 43, 44, 45, 46, 48, 49, 51, 52, 53, 54, 55, 59, 60, 61, 63, 64, 65, 67, 68, 69, 72, 76, 77, 79, 87, 88, 91, 92, 93, 94, 96, 101, 107, 110, 113, 114, 115, 116, 117, 118, 120, 121, 122, 123, 128, 129, 132, 136, 137, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 151, 155, 157, 158, 159, 165, 173, 174, 175, 179, 180, 181, 182, 184, 185, 186, 187, 188, 189, 190, 191, 193, 196, 197, 198, 199, 200, 201, 203, 205, 257, 262, 263, 268, 273, 274, 282, 285, 286, 288, 289, 292, 294, 296, 298, 300, 302, 303, 307, 311, 314, 315, 317, 320, 324, 325, 328, 329, 330, 331, 335, 338, 339, 340, 341, 342, 344, 390, 391, 392, 393, 394, 395, 397, 398, 399, 402, 403, 404, 405, 406, 407, 408, 412, 413, 416, 417, 419, 421, 422, 423, 425, 428, 431, 434, 435, 436, 437, 438, 439, 443, 453, 455, 467, 470, 486], "elementwis": 455, "elimin": 473, "els": [471, 485, 486], "elsewher": [12, 13, 22, 23, 24, 25, 26, 27, 28, 44, 45, 46, 52, 53, 59, 60, 63, 64, 65, 70, 71, 79, 87, 88, 89, 91, 93, 94, 117, 118, 119, 120, 121, 122, 123, 126, 128, 129, 135, 140, 144, 145, 146, 154, 155, 156, 157, 158, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 185, 189, 190, 191, 193, 328, 329, 331, 339, 340, 346, 347, 353, 392, 393, 396, 397, 405, 406, 407, 408, 412, 413, 416, 421, 422, 427, 434, 435, 443], "email": 461, "emerg": 486, "emit": 457, "emploi": 461, "empti": [0, 3, 8, 16, 17, 42, 47, 48, 130, 131, 153, 194, 195, 196, 197, 198, 201, 203, 205, 319, 338, 411], "empty_lik": [0, 3, 8], "en": [353, 461], "enabl": [457, 462, 464, 473, 474, 485, 486], "encapsul": 6, "encount": [196, 197, 198, 201, 403, 461, 474, 485, 486], "encumbr": 461, "end": [20, 21, 42, 76, 78, 84, 171, 335, 437, 461, 467, 471, 472, 480, 486], "end_tim": 486, "endian": 319, "endors": 477, "endpoint": [171, 467], "energi": 486, "enhanc": [461, 473, 486], "enough": [164, 462, 480, 485], "ensur": [427, 461, 473, 480, 485, 486], "enter": 464, "entir": [279, 437, 486], "entri": [57, 72, 85, 92, 111, 114, 115, 116, 286, 289, 319, 342, 343, 411, 414], "entropi": [1, 352], "env": [457, 462], "environ": [194, 195, 198, 201, 457, 462, 473, 474, 476, 478, 482, 485, 486], "epyc": 486, "eq": 465, "eqn": 467, "eqnarrai": 486, "equal": [0, 3, 8, 12, 13, 15, 22, 23, 24, 25, 26, 27, 28, 35, 36, 41, 42, 43, 44, 45, 46, 48, 52, 53, 59, 60, 63, 64, 65, 70, 71, 76, 79, 81, 88, 89, 91, 93, 94, 117, 118, 119, 120, 121, 122, 123, 126, 127, 128, 129, 132, 135, 140, 141, 143, 144, 145, 146, 150, 154, 155, 156, 157, 158, 171, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 185, 189, 190, 191, 193, 311, 328, 329, 331, 339, 340, 346, 347, 349, 355, 358, 363, 377, 385, 387, 392, 393, 396, 397, 405, 406, 407, 408, 411, 412, 413, 416, 421, 422, 427, 429, 432, 434, 435], "equal_nan": [15, 35, 141], "equat": [15, 141, 169, 385, 455, 467, 471, 473, 486], "equiv": [58, 83, 184, 268], "equival": [21, 41, 57, 78, 80, 81, 82, 84, 113, 119, 133, 134, 141, 152, 214, 262, 263, 264, 265, 266, 267, 270, 271, 272, 273, 274, 280, 281, 295, 296, 297, 300, 301, 302, 303, 304, 306, 310, 312, 313, 315, 316, 317, 319, 322, 323, 324, 325, 326, 327, 401, 419, 441, 442, 485], "erf": 465, "error": [187, 200, 342, 411, 414, 419, 467, 470, 473, 479, 486], "errstat": [3, 8], "especi": 485, "essenti": [485, 486], "estim": [61, 67, 202, 204, 337, 345, 486], "etc": [34, 96, 97, 101, 102, 107, 110, 276, 286, 457, 473, 479, 485, 487], "european": 465, "evalu": [14, 19, 57, 83, 84, 143, 150, 166, 188, 262, 263, 403, 479, 485], "even": [67, 98, 100, 103, 108, 143, 150, 160, 162, 286, 461, 464, 477], "evenli": [21, 171, 400], "event": [368, 477], "everi": [61, 107, 461, 465, 470, 485], "every_nit": 485, "everyon": 461, "evid": 486, "evolv": 461, "exact": [80, 139, 169, 423, 440, 467], "exactli": [321, 461, 466, 471, 482, 486], "examin": 67, "exampl": [40, 55, 68, 69, 77, 78, 196, 197, 314, 323, 356, 366, 411, 415, 461, 462, 464, 467, 468, 470, 471, 473, 474, 475, 476, 478, 480, 483, 484, 485, 487], "exce": [411, 437, 457], "exceed": 473, "except": [14, 16, 17, 19, 21, 34, 42, 54, 58, 77, 80, 93, 107, 134, 186, 198, 201, 203, 286, 292, 309, 341, 390, 394, 417, 420, 423, 465, 466, 472, 477], "exchang": 473, "exclud": [20, 21, 171, 385, 480], "exclus": 371, "execut": [457, 462, 464, 465, 466, 471, 472, 480, 482, 483, 484, 485, 486], "exemplari": 477, "exercis": [461, 486], "exhibit": 318, "exist": [58, 90, 172, 455, 462, 476, 483, 486], "exit": 464, "exp": [0, 3, 8, 91, 164, 353, 465], "exp2": [0, 3, 8], "exp_rt": 465, "expand": [77, 90], "expand_dim": [0, 3, 8], "expans": 465, "expect": [14, 16, 17, 19, 68, 69, 105, 139, 183, 186, 187, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 334, 337, 341, 345, 368, 400, 417, 423, 439, 440, 461, 474], "expens": 319, "experi": [356, 486], "expertis": 473, "expir": [465, 486], "explain": [97, 102, 107, 110], "explan": [69, 196, 197, 314, 461], "explicit": [83, 164, 473, 485, 486], "explicitli": [132, 138, 172, 461, 467, 474, 486], "explor": 84, "expm1": [0, 3, 8], "expon": [123, 165, 369, 455], "exponenti": [0, 3, 8, 84, 88, 164, 177, 178, 359, 381], "exponential_distribut": 353, "expos": [2, 34, 286, 309], "expr": [83, 84], "express": [83, 84, 188, 465, 466, 467, 472, 477, 479], "extend": [467, 473, 479], "extra": 486, "extract": [0, 3, 8, 57, 73, 338, 419], "extrema": 455, "ey": [0, 3, 8, 466, 483], "f": [0, 3, 8, 34, 115, 127, 167, 202, 204, 268, 286, 288, 318, 337, 345, 348, 353, 356, 365, 390, 395, 438, 465, 466, 467, 471, 472, 486], "f_": [467, 471], "f_contigu": 286, "f_interior": 467, "fa": 286, "fab": [0, 3, 8], "facilit": 483, "factor": [95, 96, 97, 99, 100, 101, 102, 104, 105, 106, 107, 108, 109, 110, 159, 168, 466, 486], "fail": [159, 168, 474, 485], "failur": [356, 363, 464], "fall": [31, 78, 151, 336, 457, 465, 471, 474, 482], "fallback": 479, "fallback_stacktrac": 446, "fals": [1, 12, 13, 14, 15, 16, 17, 18, 19, 22, 23, 24, 25, 26, 27, 28, 29, 30, 34, 35, 36, 41, 44, 45, 46, 49, 51, 52, 53, 57, 59, 60, 63, 64, 65, 67, 70, 71, 77, 78, 79, 83, 84, 87, 88, 89, 91, 94, 111, 117, 118, 119, 120, 121, 122, 123, 126, 128, 129, 132, 135, 138, 140, 141, 144, 145, 146, 147, 148, 150, 151, 154, 155, 156, 157, 158, 167, 170, 171, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 185, 186, 187, 188, 189, 190, 191, 193, 194, 195, 198, 199, 200, 201, 202, 203, 204, 205, 262, 263, 268, 286, 295, 296, 297, 302, 315, 325, 328, 329, 331, 337, 339, 340, 341, 345, 346, 347, 392, 393, 396, 397, 403, 405, 406, 407, 408, 412, 413, 416, 417, 421, 422, 434, 435, 436, 439, 457, 467, 471], "familiar": [475, 486], "fan": [202, 204, 337, 345], "fanci": 419, "farrai": 286, "fashion": 83, "fast": [95, 96, 97, 101, 102, 107, 108, 110], "fast_math": 446, "faster": [61, 78, 486], "fastest": [166, 390, 395], "fatter": 359, "fbmem": [464, 486], "featur": [461, 464, 486], "feedback": 461, "feel": 461, "fetch": 485, "few": [480, 485], "fewer": 474, "fft": [0, 3, 8, 61, 446, 455], "fft2": [0, 3, 8, 101], "fftfreq": [3, 8], "fftn": [0, 3, 8, 95, 102], "fftshift": [0, 3, 8, 103], "fid": 319, "fidel": 473, "field": [188, 292, 437], "fig": [468, 486], "figsiz": [468, 486], "file": [172, 283, 314, 319, 455, 457, 461, 462, 464, 465, 466, 472, 477, 482, 486], "filenam": [319, 457], "fileno": 319, "fill": [0, 2, 8, 111, 124, 125, 188, 332, 367, 372, 427, 444], "fill_diagon": [0, 3, 8], "fill_valu": [124, 125], "final": [107, 110, 473, 475, 486], "find": [33, 307, 324, 402, 436, 455, 470, 471, 474, 476, 485, 486], "find_centroid": 470, "find_cupynumeric_cpp": 462, "finfo": [3, 8], "finish": [464, 465, 466, 472], "finit": [141, 144, 469], "first": [14, 19, 41, 42, 47, 49, 54, 56, 58, 61, 76, 77, 80, 82, 84, 101, 102, 114, 117, 127, 132, 134, 166, 184, 187, 188, 200, 202, 204, 205, 289, 307, 319, 334, 337, 338, 340, 341, 342, 345, 366, 387, 390, 395, 398, 399, 401, 402, 403, 410, 415, 417, 418, 420, 423, 425, 436, 440, 441, 442, 461, 462, 467, 472, 485, 486], "first_cond": 485, "fisher": [354, 365, 486], "fit": [394, 477], "five": 474, "fix": [3, 8, 294, 311, 368, 465], "flag": [164, 309, 457, 462], "flat": [288, 292, 304, 344, 394, 438, 479], "flatit": [3, 8, 287], "flatnonzero": [0, 3, 8], "flatten": [0, 3, 8, 16, 17, 20, 29, 30, 31, 32, 57, 58, 66, 68, 69, 72, 111, 113, 132, 186, 187, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 287, 304, 334, 335, 336, 337, 342, 343, 345, 390, 394, 398, 409, 419, 420, 436, 437, 438, 439, 440], "flexibl": [3, 8, 83, 294], "flip": [0, 3, 8, 115, 116, 356, 399, 479, 485], "fliplr": [0, 3, 8, 399], "flipud": [0, 3, 8, 399], "float": [14, 15, 16, 17, 19, 21, 43, 55, 68, 69, 80, 83, 85, 117, 125, 132, 136, 137, 141, 153, 165, 167, 171, 184, 186, 187, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 218, 295, 297, 302, 315, 329, 337, 341, 345, 348, 349, 351, 353, 354, 355, 356, 357, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 372, 373, 375, 376, 377, 378, 381, 382, 383, 384, 385, 386, 387, 388, 389, 391, 400, 402, 417, 423, 427, 439, 444, 453, 455, 457, 479], "float128": [3, 8, 479], "float16": [3, 8, 117], "float32": [3, 8, 68, 83, 117, 184, 268, 326, 483], "float64": [3, 4, 8, 18, 41, 67, 83, 85, 93, 117, 184, 186, 187, 199, 200, 202, 204, 268, 332, 337, 345, 376, 378, 439, 444, 466, 479], "float_pow": [0, 3, 8], "flood": 473, "floor": [0, 3, 8], "floor_divid": [0, 3, 8], "flop": 466, "flow": 473, "fluid": 473, "fmax": [3, 8, 198], "fmin": [3, 8], "fmod": [0, 3, 8], "fnc": 286, "focu": [473, 486], "follow": [15, 18, 34, 41, 54, 61, 78, 105, 112, 141, 161, 163, 167, 184, 188, 202, 204, 257, 337, 345, 457, 462, 467, 468, 470, 471, 473, 474, 476, 477, 478, 485, 486], "forc": [34, 83, 184, 268, 286, 457, 476], "force_thunk": [4, 446], "forcebuild": 1, "foremost": 486, "forg": [462, 476, 486], "fork": 461, "form": [37, 47, 56, 67, 76, 82, 83, 105, 130, 131, 134, 152, 153, 401, 442, 467, 477, 485, 486], "format": [319, 457, 463, 474, 486], "format_float_posit": [3, 8], "format_float_scientif": [3, 8], "former": [343, 420], "formula": [465, 486], "forset": 310, "fortran": [34, 268, 286, 288, 318, 390, 395, 438, 462], "fortun": 461, "forum": 474, "forumula": 486, "forward": [95, 96, 97, 99, 100, 101, 102, 104, 105, 106, 107, 108, 109, 110, 127, 373], "found": [43, 307, 314, 402, 473, 486], "foundat": [461, 474], "four": [309, 464, 486], "fourier": [61, 95, 96, 97, 100, 101, 102, 105, 107, 108, 110, 446, 455], "frac": [348, 353, 465, 471], "frac12": 465, "fraction": 191, "frame": [461, 482], "framebuff": [464, 474, 486], "framework": [461, 475], "free": [461, 465, 473, 474, 477, 486], "freed": 473, "freedom": [351, 354, 364, 365, 383, 439], "frequenc": [42, 67, 98, 100, 101, 102, 105, 389, 485], "frequent": 475, "fresh": [1, 352], "freshli": [12, 13, 22, 23, 24, 25, 26, 27, 28, 44, 45, 46, 52, 53, 59, 60, 63, 64, 65, 70, 71, 79, 87, 88, 89, 91, 94, 117, 118, 119, 120, 121, 122, 123, 126, 128, 129, 135, 140, 144, 145, 146, 147, 148, 154, 155, 156, 157, 158, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 185, 189, 190, 191, 193, 328, 329, 331, 339, 340, 346, 347, 392, 393, 396, 397, 405, 406, 407, 408, 412, 413, 416, 421, 422, 434, 435], "frexp": [0, 3, 8], "fro": 167, "frobeniu": 167, "frohn": 477, "from": [1, 2, 14, 18, 19, 21, 29, 30, 37, 41, 48, 54, 57, 61, 68, 69, 70, 71, 76, 92, 100, 110, 112, 114, 115, 116, 117, 127, 139, 152, 168, 171, 172, 184, 188, 196, 197, 205, 210, 269, 270, 286, 289, 313, 317, 334, 340, 341, 344, 346, 347, 348, 349, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 374, 375, 376, 377, 378, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 395, 399, 403, 414, 417, 419, 420, 423, 425, 436, 437, 440, 443, 455, 461, 463, 465, 466, 467, 468, 470, 471, 472, 473, 475, 477, 479, 480, 485, 486], "frombuff": 3, "fromfil": [3, 319], "fromfunct": [3, 8], "fromit": 3, "frompyfunc": 3, "fromregex": [3, 8], "fromstr": 3, "front": [138, 457], "fulfil": [384, 457], "full": [0, 3, 8, 61, 75, 125, 169, 262, 263, 264, 266, 267, 270, 271, 272, 273, 274, 280, 281, 295, 296, 297, 300, 301, 302, 303, 304, 306, 309, 312, 313, 315, 316, 317, 322, 324, 325, 335, 430, 433, 457, 461, 464, 473, 482, 486], "full_lik": [0, 3, 8], "full_matric": 170, "fulli": [187, 188, 200], "func": 465, "function": [2, 8, 18, 21, 36, 73, 82, 95, 96, 97, 98, 100, 101, 102, 103, 105, 107, 108, 110, 111, 117, 119, 127, 132, 134, 151, 152, 153, 166, 167, 183, 188, 202, 204, 262, 263, 264, 265, 266, 267, 270, 271, 272, 273, 274, 280, 281, 286, 292, 295, 296, 297, 300, 301, 302, 303, 304, 306, 309, 310, 312, 313, 315, 316, 317, 319, 320, 322, 323, 324, 325, 337, 343, 345, 348, 352, 353, 356, 366, 369, 374, 379, 401, 419, 420, 424, 440, 442, 446, 453, 455, 465, 466, 467, 471, 472, 473, 474, 479, 482, 483, 486], "function_nam": 482, "function_valu": 467, "fundament": 486, "funtion": 483, "furnish": 477, "further": [83, 202, 204, 311, 337, 345, 431, 461, 473], "furthermor": [49, 51, 188], "futur": 465, "fweight": 67, "g": [14, 19, 80, 82, 134, 139, 167, 184, 319, 326, 348, 349, 351, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 371, 374, 375, 376, 377, 378, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 401, 423, 440, 442, 461, 462, 472, 479, 483, 485, 486, 487], "gamma": [0, 3, 8, 348, 382], "gasnet": 486, "gather": 486, "gauss": 366, "gaussian": [359, 366, 372, 387], "gb": 486, "gcd": [0, 3, 8], "gemm": 470, "gener": [1, 3, 8, 21, 41, 42, 82, 100, 134, 171, 286, 352, 364, 367, 372, 377, 379, 385, 401, 442, 455, 462, 467, 470, 472, 474, 479, 480, 482, 484, 486], "genfromtxt": [3, 8], "geometr": [0, 3, 8, 353], "geomspac": [3, 8], "get": [99, 105, 107, 111, 171, 275, 314, 383, 462, 464, 465, 466, 467, 470, 471, 472, 474, 485], "get_bit_gener": [3, 8], "get_includ": [3, 8], "get_printopt": [3, 8], "get_rank": 473, "get_siz": 473, "get_stat": [3, 8], "getbufs": [3, 8], "getdevicecount": 473, "geterr": [3, 8], "geterrcal": [3, 8], "getfield": [0, 8], "getter": 310, "git": 461, "github": [461, 473, 486], "give": [43, 83, 184, 188, 323, 344, 395, 404, 436, 461, 474], "given": [14, 15, 16, 17, 19, 20, 21, 31, 34, 35, 41, 48, 51, 54, 55, 56, 57, 62, 66, 67, 68, 69, 76, 77, 80, 82, 84, 85, 86, 95, 96, 97, 99, 100, 101, 102, 104, 105, 107, 108, 110, 111, 114, 124, 125, 127, 132, 134, 135, 139, 141, 167, 171, 183, 184, 187, 188, 196, 197, 200, 201, 202, 203, 204, 205, 210, 264, 265, 268, 271, 272, 286, 289, 295, 296, 297, 302, 303, 307, 315, 323, 325, 332, 333, 334, 337, 341, 342, 345, 348, 349, 351, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 374, 375, 376, 377, 378, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 394, 398, 399, 400, 401, 402, 411, 417, 419, 423, 424, 425, 426, 427, 436, 440, 442, 444, 445, 461, 473, 485, 486], "global": [352, 473], "gmail": 477, "gninja": 462, "gnx": 473, "gny": 473, "go": [420, 486], "goal": 486, "golub": 167, "good": [183, 319, 358, 475, 477], "gop": 466, "govern": [465, 466, 472, 486], "gpu": [1, 2, 3, 8, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 207, 208, 209, 213, 214, 215, 216, 217, 219, 220, 222, 223, 224, 225, 226, 227, 228, 229, 232, 233, 234, 235, 236, 237, 238, 239, 241, 242, 243, 244, 245, 246, 247, 249, 250, 251, 253, 254, 255, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 270, 271, 272, 273, 274, 275, 280, 281, 284, 285, 288, 289, 292, 295, 296, 297, 300, 301, 302, 303, 304, 306, 307, 309, 312, 313, 315, 316, 317, 318, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 457, 464, 471, 473, 475, 485, 487], "grad_i": [468, 486], "grad_x": [468, 486], "gradient": [0, 3, 8, 468], "grai": [468, 470, 486], "grant": 477, "granular": [474, 480], "grasmair": 471, "grate": 461, "grayscal": [468, 486], "greater": [0, 3, 8, 21, 54, 81, 354, 367, 385, 389, 414], "greater_equ": [0, 3, 8], "greatest": [48, 126], "greedi": [83, 84], "green": [467, 470], "grep": 474, "grid": [138, 188, 467, 472, 473, 486], "group": [33, 462, 486], "gt": 467, "guarante": [342, 395], "guess": 471, "guid": [314, 475], "guidelin": 484, "gumbel": [0, 3, 8], "gzipfil": 319, "h": [159, 167, 202, 204, 337, 345, 467, 473, 485, 486], "h5py": 485, "ha": [6, 29, 30, 31, 32, 57, 67, 68, 69, 76, 78, 99, 104, 127, 137, 142, 143, 149, 150, 194, 195, 196, 197, 203, 205, 276, 286, 323, 335, 341, 344, 348, 359, 367, 374, 386, 391, 394, 403, 415, 417, 419, 424, 425, 438, 457, 461, 465, 466, 470, 471, 473, 474, 477, 486], "had": [343, 420, 487], "hadamard": 84, "half": [3, 8, 21, 98, 101, 102, 171, 371, 373, 375, 376, 378, 385], "halo": 473, "ham": [0, 3, 8], "han": [0, 3, 8], "hand": 467, "handl": [436, 440, 455, 457, 473, 479, 482, 486], "happen": [41, 461, 479], "har": 486, "hardwar": [286, 309, 484, 487], "have": [12, 13, 14, 19, 22, 23, 24, 25, 26, 27, 28, 33, 34, 35, 39, 40, 41, 44, 45, 46, 47, 52, 53, 54, 56, 58, 59, 60, 63, 64, 65, 67, 68, 69, 70, 71, 79, 80, 82, 83, 87, 88, 89, 91, 94, 101, 102, 110, 117, 118, 119, 120, 121, 122, 123, 126, 128, 129, 134, 135, 139, 140, 144, 145, 146, 147, 148, 154, 155, 156, 157, 158, 166, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 193, 196, 197, 199, 200, 202, 203, 204, 205, 314, 326, 328, 329, 331, 337, 338, 339, 340, 341, 343, 345, 346, 347, 392, 393, 396, 397, 400, 401, 405, 406, 407, 408, 412, 413, 415, 416, 417, 421, 422, 423, 424, 434, 435, 439, 440, 442, 453, 461, 462, 464, 465, 467, 468, 470, 471, 475, 482, 485, 486], "hazen": [202, 204, 337, 345], "header": [172, 462], "heapsort": [32, 409], "heat": 486, "heavisid": [3, 8], "height": [82, 134, 401, 442, 473, 486], "help": [461, 464, 468, 474, 483, 486], "helper": [455, 466, 472], "henc": 127, "here": [8, 105, 388, 461, 462, 467, 473, 480, 483, 485, 486], "herebi": 477, "herein": 477, "hermitian": [99, 104, 105, 159, 161, 163, 170, 455, 466], "hfft": [0, 3, 8], "high": [371, 374, 385, 462, 473, 486], "higher": [38, 77, 139, 202, 204, 286, 337, 345, 486], "highest": [371, 374], "highli": 485, "highlight": [473, 485, 486], "hipr2": 468, "hist": 132, "histogram": [0, 3, 8, 455], "histogram2d": [3, 8], "histogram_bin_edg": [3, 8], "histogramdd": [3, 8], "hold": [34, 55, 57, 68, 69, 167, 187, 196, 197, 200, 203, 205, 286, 425, 473], "holder": 477, "home": 465, "homepag": 468, "hope": 461, "hopkin": 167, "horizont": [133, 134, 399], "host": 183, "hous": 468, "how": [54, 309, 314, 323, 342, 419, 462, 463, 466, 467, 471, 480, 486], "howev": [14, 16, 17, 19, 68, 164, 186, 198, 201, 203, 286, 341, 417, 419, 461, 477, 486], "howto": 484, "hpc": [473, 484], "hsplit": [0, 3, 8, 134], "hstack": [0, 3, 8, 56, 485], "htm": 468, "html": [468, 474, 477, 487], "http": [353, 461, 465, 466, 468, 472, 474, 477, 479, 486, 487], "hull": 465, "hundr": [473, 485], "hyndman": [202, 204, 337, 345], "hyperbol": [23, 25, 28, 65, 383, 408, 422, 455], "hypergeometr": [0, 3, 8], "hypot": [0, 3, 8], "hypotenus": 135, "hypothesi": 351, "i": [2, 8, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 41, 42, 43, 44, 45, 46, 47, 48, 49, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 104, 105, 106, 107, 108, 109, 110, 111, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 171, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 210, 214, 215, 257, 268, 269, 286, 288, 289, 292, 294, 307, 309, 311, 314, 318, 319, 320, 323, 326, 327, 328, 329, 331, 332, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 405, 406, 407, 408, 409, 411, 412, 413, 414, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 432, 434, 435, 436, 437, 439, 440, 441, 442, 443, 444, 457, 462, 464, 465, 466, 467, 468, 470, 471, 472, 473, 475, 476, 477, 478, 479, 480, 482, 483, 486, 487], "i0": [3, 8, 138], "i1": 138, "i16_arr": 77, "iN": 138, "idea": 461, "ident": [0, 3, 8, 103, 111, 165, 169, 194, 195, 198, 201, 359, 381, 466], "identifi": 468, "identit": 466, "idiomat": 474, "idx": 470, "ieee": 457, "ifft": [0, 3, 8, 101, 102], "ifft2": [0, 3, 8], "ifftn": [0, 3, 8, 100, 107], "ifftshift": [0, 3, 8], "ignor": [49, 51, 132, 194, 195, 198, 199, 200, 201, 202, 204, 479], "ihfft": [0, 3, 8], "ii": [67, 367], "iinfo": [3, 8], "ij": [67, 188], "ik": 138, "illeg": 48, "illustr": [188, 462, 485, 486], "imag": [0, 3, 8, 468, 472, 486], "image_np": 486, "imagin": 314, "imaginari": [18, 35, 137, 142, 143, 150, 160, 161, 162, 163, 291, 400, 410], "imbal": 486, "immedi": 466, "impact": 485, "imper": 486, "implement": [8, 14, 16, 17, 19, 29, 30, 31, 61, 68, 69, 76, 80, 114, 115, 116, 139, 159, 164, 184, 186, 196, 197, 198, 201, 203, 336, 341, 417, 423, 440, 462, 465, 466, 473, 474, 477, 479, 482, 485, 486], "impli": [67, 335, 437, 465, 466, 472, 477], "implic": 471, "implicit": [83, 164], "implment": 482, "import": [67, 184, 465, 466, 467, 468, 470, 471, 472, 473, 480, 483, 485, 486, 487], "importantli": 78, "improp": 486, "improv": 486, "imshow": [468, 486], "in1d": [3, 8], "inappropri": 351, "incident": 477, "includ": [21, 37, 78, 83, 132, 171, 186, 199, 203, 205, 298, 341, 385, 388, 417, 439, 457, 461, 462, 464, 467, 473, 477, 479, 482, 485], "inclus": [202, 204, 337, 345, 371, 374], "incorpor": 477, "incorrect": 473, "increas": [78, 90, 100, 105, 132, 467, 474, 486], "incur": 485, "ind": [78, 429, 430, 432, 433], "indefinit": 461, "independ": [319, 351, 359, 366, 462, 486], "index": [6, 29, 30, 31, 32, 43, 54, 57, 76, 78, 93, 96, 101, 138, 152, 184, 188, 194, 195, 270, 292, 307, 336, 342, 343, 390, 395, 402, 409, 411, 415, 419, 420, 436, 438, 446, 453, 455, 467, 470, 475, 484], "index_arrai": [29, 30, 32, 33, 194, 195], "indexerror": 78, "indic": [0, 3, 8, 29, 30, 31, 32, 33, 36, 54, 61, 67, 72, 74, 75, 78, 81, 83, 84, 92, 95, 96, 97, 99, 100, 101, 102, 104, 105, 106, 107, 108, 109, 110, 111, 113, 133, 183, 194, 195, 264, 265, 266, 267, 300, 303, 307, 317, 323, 330, 342, 343, 402, 405, 411, 419, 420, 429, 430, 432, 433, 436, 438, 441, 461, 467, 470, 471, 474, 477, 479, 485, 486], "indices_or_sect": [36, 411], "indirect": [31, 477], "individu": [356, 482], "ineffici": 457, "inexact": [3, 8, 117, 203], "inf": [15, 68, 69, 167, 194, 195, 196, 197, 468, 479], "infer": [21, 37, 171, 348, 395], "infin": [144, 145, 147, 148, 387], "infinit": 167, "influenc": 366, "info": [3, 8], "inform": [83, 286, 292, 309, 319, 461, 466, 467, 468, 471, 474, 476, 482, 486, 487], "infti": 465, "inher": 486, "inherit": 286, "init": [379, 470, 480, 486], "initi": [1, 16, 17, 85, 198, 201, 203, 205, 262, 263, 295, 297, 302, 315, 341, 352, 417, 457, 467, 470, 471, 473, 480], "inner": [0, 3, 8, 80, 84, 423], "innermost": 48, "input": [4, 6, 12, 13, 14, 15, 16, 17, 19, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 37, 38, 39, 40, 41, 43, 44, 45, 46, 48, 50, 52, 53, 55, 58, 59, 60, 61, 62, 63, 64, 65, 68, 69, 70, 71, 72, 77, 78, 79, 83, 84, 87, 88, 89, 90, 91, 92, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 126, 127, 128, 129, 132, 135, 137, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 154, 155, 156, 157, 158, 159, 164, 167, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 268, 288, 289, 326, 327, 328, 329, 330, 331, 334, 335, 336, 337, 338, 339, 340, 341, 343, 344, 345, 346, 347, 349, 390, 391, 392, 393, 394, 396, 397, 398, 400, 402, 404, 405, 406, 407, 408, 409, 410, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 428, 434, 435, 436, 437, 439, 440, 446, 455, 465, 468, 474, 483, 485, 486], "insert": [3, 8, 29, 30, 48, 54, 76, 90, 171, 194, 195, 307, 335, 343, 402, 403, 455, 486], "insid": 485, "instal": [461, 462, 464, 475, 484], "instanc": [48, 82, 99, 134, 311, 352, 401, 442, 462, 476, 486], "instanti": [2, 352, 462], "instead": [14, 16, 17, 19, 41, 43, 48, 132, 138, 184, 186, 187, 198, 199, 200, 202, 204, 205, 268, 292, 337, 341, 345, 374, 417, 439, 465, 466, 467, 468, 472, 473, 474, 483, 484, 486], "instruct": [461, 462, 476, 486], "int": [1, 4, 6, 14, 16, 17, 19, 20, 21, 29, 30, 31, 32, 34, 36, 41, 42, 43, 47, 50, 51, 54, 55, 57, 58, 66, 67, 68, 69, 72, 73, 74, 76, 77, 78, 81, 84, 85, 86, 90, 93, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 114, 124, 125, 127, 130, 131, 132, 133, 136, 138, 153, 165, 167, 171, 172, 183, 186, 187, 192, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 230, 231, 257, 289, 290, 294, 295, 297, 298, 299, 302, 307, 308, 310, 311, 314, 315, 323, 327, 332, 333, 335, 336, 337, 341, 343, 345, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 394, 395, 398, 399, 400, 402, 404, 409, 411, 414, 415, 417, 418, 419, 420, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 436, 437, 438, 439, 441, 444, 445, 453, 457, 467, 468, 470, 486], "int16": [3, 8, 77, 326], "int32": [3, 8, 203, 314], "int32_t": 462, "int64": [3, 8, 203], "int64_t": 462, "int8": [3, 8], "int_": [3, 8, 311, 374, 424, 465], "int_0": 348, "int_lik": 372, "int_typ": 292, "intc": [3, 8], "integ": [2, 3, 8, 21, 36, 51, 54, 67, 68, 69, 77, 117, 119, 152, 156, 165, 167, 186, 187, 196, 197, 199, 200, 202, 203, 204, 205, 307, 311, 314, 335, 337, 341, 342, 345, 349, 356, 371, 374, 395, 396, 397, 399, 402, 411, 417, 425, 436, 438, 439], "integer_lik": 423, "integr": [41, 132, 191, 464, 473, 486], "intel": 486, "intellectu": 461, "intend": [188, 319, 471], "intens": [164, 468, 486], "intensity_max": [468, 486], "intensity_min": [468, 486], "intent": 117, "inter": 473, "interact": [276, 486], "interchang": [316, 418], "interest": [465, 466, 486], "interfac": [34, 286, 309, 486], "interior": 127, "intermedi": [83, 84, 186, 199, 202, 204, 337, 345, 485], "intern": 68, "interoper": 474, "interp": [3, 8], "interpolated_inverted_cdf": [202, 204, 337, 345], "interpret": [37, 51, 62, 152, 183, 292, 309, 342, 471], "interrupt": 477, "intersect1d": [3, 8], "interv": [21, 55, 78, 171, 349, 363, 368, 371, 373, 374, 375, 376, 378, 384, 385, 386], "intp": [3, 8, 203], "introduc": [398, 470, 486], "introduct": 484, "introselect": [31, 266, 301, 336], "inund": 473, "inv": [3, 8, 471], "invas": 485, "invers": [22, 23, 24, 25, 26, 28, 90, 100, 101, 102, 103, 104, 105, 106, 107, 140, 165, 180, 353, 387, 389, 471], "invert": [0, 3, 8, 455], "inverted_cdf": [202, 204, 337, 345], "invest": 486, "invoc": [486, 487], "invok": [462, 471, 483], "involv": [461, 473], "irecv": 473, "irfft": [0, 3, 8, 107], "irfft2": [0, 3, 8], "irfftn": [0, 3, 8, 105, 106], "irrespect": [161, 163], "is_busdai": [3, 8], "isclos": [0, 3, 8], "iscomplex": [0, 3, 8], "iscomplexobj": [0, 3, 8], "isdtyp": [3, 8], "isend": 473, "isfinit": [0, 3, 8, 198, 205], "isfortran": [3, 8, 257], "isin": [3, 8], "isinf": [0, 3, 8], "isnan": [0, 3, 8, 198, 201, 203, 205], "isnat": [3, 8], "isneginf": [0, 3, 8], "isol": 462, "isposinf": [0, 3, 8], "isreal": [0, 3, 8], "isrealobj": [0, 3, 8], "isscalar": [0, 3, 8], "issu": [100, 101, 102, 457, 461, 474, 485, 486], "issubdtyp": [3, 8], "item": [0, 8, 33, 319, 320, 358, 389, 436, 470], "items": 286, "iter": [6, 84, 202, 204, 275, 287, 288, 304, 337, 343, 345, 420, 470, 471, 472, 473, 480, 486], "ith": 138, "its": [12, 13, 14, 19, 22, 23, 24, 25, 26, 27, 28, 41, 43, 44, 45, 46, 52, 53, 54, 59, 60, 63, 64, 65, 70, 71, 73, 79, 87, 88, 89, 91, 94, 117, 118, 119, 120, 121, 122, 123, 126, 128, 129, 132, 135, 136, 139, 140, 144, 145, 146, 154, 155, 156, 157, 158, 160, 161, 162, 163, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 184, 185, 189, 190, 191, 193, 286, 309, 321, 323, 328, 329, 331, 334, 339, 340, 346, 347, 366, 374, 389, 392, 393, 395, 396, 397, 405, 406, 407, 408, 412, 413, 416, 421, 422, 423, 425, 426, 427, 434, 435, 440, 461, 466, 470, 473, 477, 485, 486], "itself": [54, 361, 414, 462], "ivan": 477, "ix_": [0, 3, 8], "j": [80, 167, 188, 202, 204, 323, 334, 337, 343, 345, 420, 427, 467, 471, 473, 485, 486], "j0": 54, "j1": 54, "jacobi": 469, "jacobi_stencil": 486, "jacobian": 471, "jcp": 467, "jm": 54, "john": [167, 465], "join": [58, 415, 455], "jr": [353, 366], "json": 457, "jsrun": 478, "june": 477, "just": [56, 388, 461, 465, 466, 472], "k": [12, 13, 22, 23, 24, 25, 26, 27, 28, 34, 44, 45, 46, 52, 53, 59, 60, 63, 64, 65, 70, 71, 73, 79, 80, 87, 88, 89, 91, 93, 94, 117, 118, 119, 120, 121, 122, 123, 126, 128, 129, 135, 138, 140, 144, 145, 146, 154, 155, 156, 157, 158, 168, 169, 170, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 189, 190, 191, 193, 214, 268, 288, 328, 329, 331, 339, 340, 346, 347, 348, 349, 351, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 371, 374, 375, 376, 377, 378, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 392, 393, 396, 397, 399, 405, 406, 407, 408, 412, 413, 416, 421, 422, 427, 428, 429, 430, 431, 432, 433, 434, 435, 457, 465, 467, 469, 471, 486], "kaiser": [0, 3, 8, 47], "kappa": 386, "ke": 486, "keep": [457, 465, 470], "keepdim": [14, 16, 17, 19, 29, 30, 41, 167, 186, 187, 194, 195, 198, 199, 200, 201, 202, 203, 204, 205, 262, 263, 295, 296, 297, 302, 315, 325, 337, 341, 345, 417, 439], "kei": [213, 221, 256, 474, 486], "kern": 477, "kernel": [468, 486], "kernel_i": [468, 486], "kernel_x": [468, 486], "keyword": [2, 12, 13, 22, 23, 24, 25, 26, 27, 28, 44, 45, 46, 52, 53, 55, 59, 60, 63, 64, 65, 67, 70, 71, 79, 87, 88, 89, 91, 94, 117, 118, 119, 120, 121, 122, 123, 126, 128, 129, 135, 140, 144, 145, 146, 154, 155, 156, 157, 158, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 185, 188, 189, 190, 191, 193, 328, 329, 331, 339, 340, 346, 347, 392, 393, 396, 397, 405, 406, 407, 408, 412, 413, 416, 421, 422, 434, 435, 436], "kill": 159, "kind": [31, 32, 58, 83, 184, 266, 267, 268, 301, 312, 336, 409, 455, 465, 466, 472, 474, 477], "know": [461, 471, 474, 485], "knowledg": [461, 473], "known": [314, 354, 367, 369, 380, 386, 389, 486], "kron": [3, 8], "kth": [31, 266, 301, 336], "kwarg": [12, 13, 22, 23, 24, 25, 26, 27, 28, 44, 45, 46, 52, 53, 55, 59, 60, 63, 64, 65, 70, 71, 79, 87, 88, 89, 91, 94, 117, 118, 119, 120, 121, 122, 123, 126, 128, 129, 135, 140, 144, 145, 146, 154, 155, 156, 157, 158, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 185, 189, 190, 191, 193, 248, 328, 329, 331, 339, 340, 346, 347, 392, 393, 396, 397, 405, 406, 407, 408, 412, 413, 416, 421, 422, 434, 435, 436, 465], "l": [36, 159, 161, 163, 466, 477, 486], "l2": [467, 471], "l2_norm": 471, "label": [83, 462, 465, 467, 470], "label_color": 470, "label_color_map": 470, "label_valu": 470, "lam": 368, "lambda": [353, 359, 388], "languag": [465, 466, 472], "laplac": [0, 3, 8, 366], "laptop": 486, "larg": [61, 67, 172, 366, 368, 383, 419, 473, 480, 485, 486], "larger": [43, 55, 77, 95, 96, 97, 100, 101, 102, 104, 107, 108, 110, 172, 384, 425, 437, 480, 486], "larger_imag": 486, "largest": [43, 84, 119, 167, 371, 374], "last": [14, 19, 21, 31, 32, 41, 42, 48, 77, 80, 95, 96, 97, 99, 100, 101, 102, 104, 105, 106, 107, 108, 110, 114, 127, 139, 166, 171, 184, 205, 289, 307, 336, 341, 390, 395, 398, 402, 409, 410, 415, 417, 419, 423], "latenc": 486, "later": [366, 486], "latest": [474, 476, 486, 487], "latter": [343, 420, 485], "launch": [462, 480, 485], "launcher": [474, 478, 486], "law": [389, 465, 466, 472], "layout": [34, 268, 286, 318, 390, 395], "lcm": [0, 3, 8], "ldexp": [0, 3, 8], "lead": [48, 188, 196, 197, 474, 486], "leakag": 47, "learn": 474, "least": [38, 39, 40, 41, 43, 61, 67, 75, 82, 84, 111, 115, 143, 160, 161, 162, 163, 168, 170, 358, 401, 442, 462, 485, 486], "left": [14, 16, 17, 19, 29, 30, 41, 78, 115, 156, 167, 186, 187, 194, 195, 198, 199, 200, 201, 202, 203, 204, 205, 307, 337, 341, 345, 384, 400, 402, 417, 439, 467, 473], "left_shift": [0, 3, 8], "leg": 135, "legaci": 379, "legal": [461, 477], "legales": 463, "legat": [342, 457, 462, 464, 465, 466, 472, 475, 476, 479, 482, 483, 486, 487], "legate_auto_config": 486, "legate_config": [474, 483], "legate_limit_stdout": 486, "legate_root": 462, "legate_test": [457, 474], "legend": [465, 467], "legion": [484, 486], "legion_default_arg": 478, "lele": 467, "len": [57, 78, 97, 98, 102, 105, 107, 110, 138, 188, 240, 470], "length": [12, 13, 16, 17, 21, 22, 23, 24, 25, 26, 27, 28, 36, 41, 43, 44, 45, 46, 52, 53, 57, 59, 60, 63, 64, 65, 68, 69, 70, 71, 77, 79, 87, 88, 89, 91, 94, 95, 96, 97, 99, 100, 101, 102, 103, 104, 105, 107, 108, 110, 117, 118, 119, 120, 121, 122, 123, 126, 127, 128, 129, 132, 134, 135, 138, 140, 144, 145, 146, 154, 155, 156, 157, 158, 160, 161, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 185, 187, 188, 189, 190, 191, 193, 196, 197, 198, 200, 201, 307, 313, 328, 329, 331, 339, 340, 343, 346, 347, 350, 392, 393, 395, 396, 397, 401, 402, 403, 404, 405, 406, 407, 408, 412, 413, 414, 416, 420, 421, 422, 423, 424, 434, 435, 442, 462, 467], "less": [0, 3, 8, 42, 47, 57, 67, 68, 69, 76, 111, 130, 131, 153, 164, 196, 197, 203, 205, 341, 358, 385, 406, 417, 425, 471, 474, 485], "less_equ": [0, 3, 8], "let": [461, 465, 466, 471, 472, 486], "letter": 309, "level": [48, 67, 320, 453, 462, 479, 485, 486], "leverag": 486, "lexsort": [3, 8], "lgpatch": 483, "lh": 467, "liabil": 477, "liabl": 477, "liber": [80, 83, 139, 184, 423, 440], "librari": [276, 453, 457, 462, 474, 475, 477, 486], "licens": [461, 465, 466, 472, 477], "lifespan": 473, "lightweight": 461, "like": [39, 40, 48, 56, 72, 83, 107, 111, 168, 170, 171, 172, 183, 184, 188, 268, 286, 311, 319, 343, 385, 387, 390, 395, 420, 427, 455, 457, 461, 466, 467, 471, 472, 473, 478, 485, 486, 487], "limit": [55, 95, 96, 97, 99, 100, 101, 102, 104, 105, 106, 107, 108, 109, 110, 160, 161, 162, 163, 271, 366, 368, 384, 385, 465, 466, 472, 477, 486], "linalg": [0, 3, 8, 446, 455, 466, 467, 470, 471, 483, 485], "linalgerror": [8, 160, 161, 162, 163, 168, 169, 170], "line": [461, 464, 473, 474, 482, 486], "linear": [61, 83, 169, 202, 204, 337, 345, 446, 455, 462, 467, 471, 486], "linearli": 485, "link": [479, 486], "linspac": [0, 3, 8, 21, 465, 467, 485], "linux": [461, 474, 476, 484], "list": [8, 21, 31, 32, 36, 37, 38, 39, 40, 48, 49, 54, 81, 83, 84, 90, 98, 111, 112, 127, 133, 257, 320, 336, 403, 409, 411, 423, 426, 441, 462, 464, 470, 477], "liter": [4, 83], "literal_ev": 172, "littl": [80, 139, 184, 335, 423, 437, 440, 466], "ll": [470, 478], "ln": [388, 486], "load": [0, 3, 8, 283, 284, 486], "loadtxt": [3, 8], "loan": 167, "loc": [357, 359, 360, 366, 467], "local": [473, 474, 486], "local_grid": 473, "local_ni": 473, "local_nx": 473, "local_rank": 473, "locat": [12, 13, 22, 23, 24, 25, 26, 27, 28, 44, 45, 46, 49, 51, 52, 53, 59, 60, 63, 64, 65, 70, 71, 79, 87, 88, 89, 91, 94, 111, 117, 118, 119, 120, 121, 122, 123, 126, 128, 129, 135, 140, 144, 145, 146, 147, 148, 154, 155, 156, 157, 158, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 188, 189, 190, 191, 193, 307, 328, 329, 331, 334, 339, 340, 346, 347, 357, 359, 360, 367, 392, 393, 396, 397, 402, 405, 406, 407, 408, 412, 413, 416, 421, 422, 434, 435, 468, 470, 482, 483, 486], "lock": 286, "log": [0, 3, 8, 361, 362, 465], "log10": [0, 3, 8], "log1p": [0, 3, 8], "log2": [0, 3, 8], "logaddexp": [0, 3, 8], "logaddexp2": [0, 3, 8], "logarithm": [173, 174, 175, 176, 177, 178, 362, 455], "logic": [14, 19, 335, 446, 455, 473], "logical_and": [0, 3, 8, 485], "logical_not": [0, 3, 8], "logical_or": [0, 3, 8], "logical_xor": [0, 3, 8], "logist": [0, 3, 8], "lognorm": [0, 3, 8], "logseri": [0, 3, 8], "logspac": [3, 8], "lomax": 367, "long": [3, 8, 374, 486], "longdoubl": [3, 8, 292], "longer": [43, 61, 99, 105, 485], "longlong": [3, 8], "look": [420, 461, 472, 474], "loop": [471, 473], "lorena": 473, "lorentz": 380, "lose": [292, 320], "loss": 477, "lost": 319, "low": [101, 102, 371, 374, 385, 453], "lower": [55, 93, 132, 159, 161, 163, 202, 204, 337, 345, 384, 385, 427, 428, 429, 430, 466, 473], "lowercas": 286, "lowest": [41, 84, 154, 367, 371, 374], "lstsq": [3, 8], "lt": 467, "m": [40, 42, 47, 61, 67, 80, 82, 93, 96, 97, 99, 101, 102, 105, 107, 110, 114, 115, 116, 130, 131, 153, 159, 160, 161, 162, 163, 164, 165, 168, 169, 170, 184, 186, 188, 199, 289, 334, 343, 348, 349, 351, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 371, 374, 375, 376, 377, 378, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 399, 403, 419, 420, 427, 428, 429, 431, 432, 439, 462, 465, 466, 472, 476, 486], "machin": [319, 462, 474, 486, 487], "maco": 474, "made": [34, 38, 268, 286, 309, 390], "magenta": 470, "magnitud": [18, 470, 486], "mai": [6, 14, 19, 21, 29, 30, 49, 51, 54, 55, 58, 68, 69, 83, 127, 167, 172, 184, 188, 196, 197, 268, 286, 311, 320, 343, 349, 385, 386, 457, 461, 464, 465, 466, 467, 471, 472, 474, 477, 479, 482, 483, 486], "main": [73, 74, 75, 76, 93, 111, 136, 425, 427, 428, 467, 478, 486, 487], "maintain": [76, 461, 473], "mainten": 473, "major": [34, 288, 390, 438, 474], "make": [48, 49, 56, 82, 134, 188, 276, 286, 358, 401, 442, 455, 461, 462, 466, 470, 473, 474, 479, 480, 483, 485, 486], "make_grid": 472, "manag": [352, 457, 473, 486], "mani": [83, 314, 353, 437, 462, 486], "manifest": 485, "manipul": [446, 455], "manner": [479, 486], "mantissa": 123, "manual": [424, 461, 473, 476, 480, 486], "map": [54, 470, 473], "mapper": 474, "margin": 78, "mark": 461, "marker": 470, "marku": 471, "mask": [152, 183, 338, 344, 470], "mask_func": 183, "mask_funct": 183, "mask_indic": [0, 3, 8], "mass": [132, 356], "master": 486, "match": [37, 48, 55, 58, 77, 127, 184, 343, 415, 420, 439, 457, 467], "materi": [183, 286, 468, 470, 477], "math": [292, 457, 477], "mathbf": [467, 471, 486], "mathemat": [167, 446, 455, 486], "mathtt": 465, "matmul": [0, 3, 8, 457, 486], "matmul_cache_s": 446, "matplotlib": [465, 467, 468, 470, 472, 486], "matric": [48, 111, 160, 161, 162, 163, 164, 166, 167, 184, 188, 390, 455, 466, 467, 486], "matrix": [7, 8, 67, 76, 80, 159, 160, 161, 162, 163, 164, 165, 167, 168, 169, 184, 188, 323, 326, 390, 431, 440, 455, 466, 467, 471], "matrix_norm": 8, "matrix_pow": [0, 8], "matrix_rank": [3, 8], "matrix_transpos": [3, 8], "matter": 474, "matthew": 477, "matvec": [3, 8], "max": [0, 132, 167, 201, 271, 424, 468, 470, 485, 486], "max_header_s": 172, "maxim": 486, "maximum": [0, 3, 8, 16, 17, 29, 42, 47, 55, 84, 120, 130, 131, 153, 172, 194, 198, 201, 264, 295, 470, 479, 485], "may_share_memori": [3, 8], "mayb": 461, "mb": [464, 486], "md": 167, "me": 461, "mean": [0, 3, 8, 48, 66, 83, 96, 97, 101, 102, 107, 108, 110, 124, 127, 167, 184, 199, 268, 288, 318, 323, 351, 359, 360, 361, 365, 366, 372, 387, 390, 395, 399, 419, 437, 469, 471, 486], "measur": [353, 439, 474, 480, 481, 483, 484, 486], "mechan": 461, "median": [0, 3, 8, 200, 360], "median_unbias": [202, 204, 337, 345], "meet": [34, 461, 485, 486], "memavail": 474, "meminfo": 474, "memmap": [3, 8], "memo": 215, "memori": [34, 49, 51, 164, 183, 187, 188, 200, 202, 204, 268, 269, 279, 286, 288, 298, 309, 314, 318, 337, 345, 390, 395, 464, 467, 473, 486], "memoryview": 279, "mention": [470, 474, 485, 486], "merchant": 477, "merg": [54, 461, 477, 480], "merged_arrai": 54, "mergesort": [32, 409], "merton": 486, "mesh": [152, 473, 480], "meshgrid": [0, 3, 8, 152], "messag": [474, 480], "met": [477, 485], "method": [1, 2, 4, 7, 14, 16, 17, 19, 34, 61, 164, 172, 186, 198, 201, 202, 203, 204, 292, 310, 311, 319, 327, 337, 341, 345, 417, 465, 469, 479, 486], "mgrid": 152, "microsecond": 485, "middl": [101, 102], "midpoint": [202, 204, 337, 345], "might": [32, 68, 83, 183, 409, 471, 474, 480, 485, 486], "million": [465, 473], "millisecond": [480, 485], "mimic": [335, 437, 473], "mimick": 473, "min": [0, 132, 167, 168, 170, 201, 271], "min_cpu_chunk": 446, "min_gpu_chunk": 446, "min_omp_chunk": 446, "min_scalar_typ": [3, 8], "miniforg": 486, "miniforge3": 486, "minim": [47, 486], "minimum": [0, 3, 8, 16, 17, 30, 34, 43, 55, 117, 121, 195, 198, 201, 265, 297, 486], "minlength": [43, 470], "mintypecod": [3, 8], "mirror": 473, "miscellan": 455, "mise": 386, "mismatch": [48, 54, 57], "mitig": 485, "mkdir": 486, "mod": [3, 8, 54], "mode": [54, 61, 83, 95, 96, 97, 99, 100, 101, 102, 104, 105, 106, 107, 108, 109, 110, 168, 172, 270, 303, 317, 342, 357, 377, 380, 384, 386, 419, 457, 468, 485, 486], "model": [356, 462, 465, 466, 472, 473, 486], "modf": [0, 3, 8], "modif": [461, 473, 477], "modifi": [111, 187, 200, 202, 204, 337, 345, 461, 467, 477], "modul": [276, 486], "modular": 54, "moivr": 366, "monoton": [78, 132], "more": [38, 39, 40, 49, 51, 55, 68, 69, 73, 76, 78, 80, 82, 83, 95, 100, 105, 106, 108, 109, 134, 139, 164, 166, 184, 188, 196, 197, 203, 314, 387, 388, 399, 401, 415, 423, 425, 436, 440, 442, 464, 466, 467, 468, 470, 473, 476, 479, 485, 486, 487], "moshier": 477, "most": [34, 77, 82, 83, 84, 100, 134, 358, 401, 420, 442, 461, 473, 479, 486], "mostli": 474, "motion": 387, "move": [192, 314, 486], "moveaxi": [0, 3, 8], "mpi": [473, 486], "mpi4pi": [473, 480], "mpi_fin": 473, "mpirun": 478, "msg00295": 477, "mt19937": [3, 8], "mu": [359, 367, 386], "much": [42, 461, 485], "multi": [3, 83, 95, 96, 97, 99, 100, 101, 102, 104, 105, 106, 107, 108, 109, 110, 160, 161, 162, 163, 164, 169, 473, 474, 475, 476, 484, 485], "multi_dot": [0, 8], "multidimension": 440, "multinomi": [3, 8], "multipl": [1, 2, 7, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 113, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 169, 171, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 207, 208, 209, 213, 214, 215, 216, 217, 219, 220, 222, 223, 224, 225, 226, 227, 228, 229, 232, 233, 234, 235, 236, 237, 238, 239, 241, 242, 243, 244, 245, 246, 247, 249, 250, 251, 253, 254, 255, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 270, 271, 272, 273, 274, 275, 280, 281, 284, 285, 288, 292, 295, 296, 297, 300, 301, 302, 303, 304, 306, 307, 309, 312, 313, 315, 316, 317, 318, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 464, 471, 473, 474, 476, 485, 487], "multipli": [0, 3, 8, 68, 80, 184, 196, 341, 367, 375, 376, 378, 485], "multivariate_norm": [3, 8], "must": [1, 12, 13, 14, 16, 17, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 41, 44, 45, 46, 48, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 63, 64, 65, 68, 69, 70, 71, 77, 78, 79, 80, 82, 87, 88, 89, 91, 94, 99, 105, 107, 115, 117, 118, 119, 120, 121, 122, 123, 126, 127, 128, 129, 132, 134, 135, 139, 140, 144, 145, 146, 147, 148, 154, 155, 156, 157, 158, 159, 166, 167, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 184, 185, 186, 187, 189, 190, 191, 192, 193, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 257, 271, 286, 323, 328, 329, 331, 337, 338, 339, 340, 341, 343, 345, 346, 347, 351, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 364, 365, 366, 367, 368, 369, 370, 372, 377, 382, 383, 384, 387, 388, 389, 392, 393, 396, 397, 398, 399, 400, 401, 402, 405, 406, 407, 408, 412, 413, 415, 416, 417, 420, 421, 422, 423, 425, 434, 435, 437, 439, 440, 442, 462, 473, 477, 478, 486], "my": 461, "myenv": [476, 486], "myron": 486, "n": [7, 33, 36, 40, 43, 54, 61, 67, 74, 75, 77, 78, 80, 82, 93, 95, 96, 97, 99, 100, 101, 102, 104, 105, 107, 108, 110, 111, 127, 136, 138, 152, 165, 167, 168, 170, 183, 184, 188, 307, 314, 323, 334, 338, 344, 348, 349, 351, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 371, 374, 375, 376, 377, 378, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 401, 402, 411, 423, 427, 428, 429, 432, 433, 439, 442, 446, 465, 466, 467, 470, 472, 476, 478, 486], "n1": 188, "n2": 188, "n3": 188, "n_centroid": 470, "n_dim": 470, "n_element": 470, "n_gpu": 473, "n_iter": 470, "n_iter_check": 470, "n_point": 467, "n_stencil": 467, "n_warmup_it": 480, "naiv": [485, 486], "name": [283, 286, 309, 321, 387, 461, 477, 483, 486], "nan": [15, 29, 30, 35, 141, 146, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 479], "nan_to_num": [3, 8], "nanargmax": [0, 3, 8, 195, 457], "nanargmin": [0, 3, 8, 194, 457], "nancumprod": [0, 3, 8], "nancumsum": [0, 3, 8], "nanmax": [0, 3, 8, 201, 457], "nanmean": [0, 3, 8], "nanmedian": [0, 3, 8], "nanmin": [0, 3, 8, 198, 457], "nanpercentil": [0, 3, 8], "nanprod": [0, 3, 8], "nanquantil": [0, 3, 8], "nanstd": [3, 8], "nansum": [0, 3, 8], "nanvar": [3, 8], "nation": 486, "nativ": [457, 479], "natur": [173, 175, 366, 486], "navier": 473, "nbad": 358, "nd": [6, 48, 292], "ndarrai": [0, 7, 8, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 351, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 374, 375, 376, 377, 378, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 451, 457, 468, 470, 471, 479, 482, 486], "ndenumer": [3, 8], "ndim": [0, 3, 6, 8, 16, 17, 33, 38, 39, 40, 48, 74, 76, 111, 167, 201, 320, 420, 424], "ndimag": 468, "ndindex": [3, 8], "nditer": [3, 8], "ndmin": 34, "ndshape": [6, 50, 404, 438], "ndshapelik": [50, 51, 114, 124, 125, 332, 333, 376, 378, 395, 414, 445], "nearest": [202, 204, 320, 337, 345, 397], "necessari": [38, 43, 48, 54, 68, 69, 99, 105, 107, 111, 186, 187, 196, 197, 199, 200, 203, 205, 341, 342, 400, 417, 439, 473, 482], "necessarili": [54, 465, 466, 472], "need": [34, 49, 78, 187, 188, 200, 390, 419, 420, 443, 457, 462, 466, 470, 473, 474, 485, 486], "neg": [0, 3, 8, 14, 19, 41, 43, 54, 76, 93, 100, 101, 102, 105, 114, 117, 127, 145, 147, 165, 171, 205, 289, 341, 353, 355, 357, 359, 360, 361, 363, 364, 366, 369, 370, 372, 377, 382, 390, 400, 412, 417, 419, 423, 425, 437], "negative_binomi": [0, 3, 8], "neglig": 477, "neighbor": [467, 473, 486], "neither": 477, "nersc": 486, "nest": [34, 48, 320, 473, 485], "nested_it": 3, "never": [61, 309], "new": [14, 19, 51, 54, 68, 69, 72, 76, 85, 86, 90, 114, 115, 116, 124, 171, 183, 186, 187, 192, 196, 197, 199, 200, 203, 205, 210, 268, 270, 282, 306, 323, 326, 332, 352, 373, 395, 400, 415, 418, 424, 439, 444, 453, 470, 476, 486], "new_label": 470, "newaxi": [323, 470], "newli": [34, 268], "newshap": 395, "newton": 469, "next": [314, 329, 461, 486], "nextaft": [0, 3, 8], "ngood": 358, "ni": [188, 343, 419, 420], "ninja": 462, "niter": [471, 480, 485], "nj": [343, 419, 420], "nk": [343, 419, 420], "nn": 188, "nnewton": 471, "nnode": 486, "node": [286, 464, 473, 474, 475, 476, 484, 487], "non": [14, 16, 17, 19, 21, 33, 39, 40, 41, 43, 66, 113, 132, 142, 152, 167, 171, 183, 186, 188, 198, 201, 203, 286, 298, 300, 330, 338, 341, 353, 355, 357, 359, 360, 361, 364, 365, 366, 369, 370, 372, 377, 382, 412, 417, 423, 437, 473, 479], "nonc": [364, 365], "noncentr": [364, 365], "noncentral_chisquar": [0, 3, 8], "noncentral_f": [0, 3, 8], "none": [1, 2, 4, 6, 12, 13, 14, 16, 17, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 34, 37, 41, 43, 44, 45, 46, 52, 53, 54, 55, 57, 58, 59, 60, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 76, 77, 79, 80, 83, 86, 87, 88, 89, 91, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 114, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 132, 135, 139, 140, 144, 145, 146, 147, 148, 154, 155, 156, 157, 158, 166, 167, 169, 171, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 184, 185, 186, 187, 189, 190, 191, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 262, 263, 264, 265, 266, 267, 269, 270, 271, 272, 276, 277, 278, 280, 281, 284, 289, 290, 292, 295, 296, 297, 301, 302, 303, 307, 308, 309, 312, 313, 315, 317, 320, 322, 323, 325, 326, 328, 329, 331, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 345, 346, 347, 348, 349, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 371, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 392, 393, 394, 396, 397, 398, 400, 402, 405, 406, 407, 408, 409, 412, 413, 414, 415, 416, 417, 419, 420, 421, 422, 423, 425, 426, 427, 429, 432, 434, 435, 436, 437, 439, 440, 443, 445, 457, 470], "noninfring": 477, "nonneg": [358, 388], "nonzero": [0, 3, 8, 92, 113, 152, 335, 485, 486], "nor": 477, "norm": [0, 8, 95, 96, 97, 99, 100, 101, 102, 104, 105, 106, 107, 108, 109, 110, 164, 455, 467, 470, 471, 485], "normal": [0, 3, 8, 42, 47, 48, 67, 95, 96, 97, 99, 100, 101, 102, 104, 105, 106, 107, 108, 109, 110, 130, 131, 132, 153, 160, 161, 348, 351, 359, 361, 372, 383, 386, 465, 468, 470, 486], "normal_unbias": [202, 204, 337, 345], "north": [472, 486], "not_equ": [0, 3, 8, 470], "note": [12, 13, 15, 18, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 34, 44, 45, 46, 52, 53, 54, 59, 60, 61, 63, 64, 65, 67, 68, 69, 70, 71, 72, 76, 77, 78, 79, 80, 83, 84, 87, 88, 89, 91, 94, 95, 96, 97, 98, 99, 100, 101, 102, 104, 105, 106, 107, 108, 109, 110, 111, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 126, 128, 129, 132, 135, 138, 139, 140, 141, 144, 145, 146, 151, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 188, 189, 190, 191, 193, 196, 197, 198, 201, 268, 279, 286, 292, 298, 309, 311, 314, 319, 320, 326, 328, 329, 331, 336, 339, 340, 346, 347, 352, 361, 390, 392, 393, 394, 395, 396, 397, 398, 405, 406, 407, 408, 412, 413, 416, 419, 421, 422, 423, 427, 429, 430, 432, 433, 434, 435, 436, 440, 467, 468, 471, 474, 485, 486], "notic": [465, 471, 474, 476], "notion": [161, 163], "now": [54, 462, 465, 466, 468, 472, 486], "np": [12, 13, 16, 17, 22, 23, 24, 25, 26, 27, 28, 44, 45, 46, 48, 52, 53, 59, 60, 63, 64, 65, 68, 69, 70, 71, 77, 78, 79, 83, 87, 88, 89, 91, 94, 112, 113, 117, 118, 119, 120, 121, 122, 123, 126, 128, 129, 135, 140, 144, 145, 146, 152, 154, 155, 156, 157, 158, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 187, 188, 189, 190, 191, 193, 196, 197, 200, 287, 311, 314, 323, 328, 329, 331, 339, 340, 341, 346, 347, 374, 392, 393, 396, 397, 405, 406, 407, 408, 412, 413, 416, 417, 419, 421, 422, 424, 434, 435, 465, 466, 467, 468, 470, 471, 472, 473, 478, 479, 480, 483, 485, 486, 487], "npoint": 467, "npt": [4, 36, 55, 58, 93, 124, 125, 132, 136, 138, 142, 143, 149, 151, 171, 269, 287, 308, 326, 332, 333, 376, 378, 403, 424, 427, 443, 445], "npy": [172, 455], "npz": [172, 455], "nsampl": 358, "ntask": 486, "nuc": 167, "nuclear": 167, "null": 420, "num": [171, 485, 486], "num_parallel": 462, "num_timestep": 473, "numa": 462, "number": [2, 3, 6, 8, 12, 13, 15, 18, 22, 23, 24, 25, 26, 27, 28, 33, 34, 41, 42, 43, 44, 45, 46, 47, 49, 52, 53, 54, 59, 60, 63, 64, 65, 66, 67, 70, 71, 74, 77, 79, 84, 87, 88, 89, 90, 91, 93, 94, 97, 99, 100, 101, 102, 104, 105, 107, 108, 110, 117, 118, 119, 120, 121, 122, 123, 126, 127, 128, 129, 130, 131, 132, 135, 136, 138, 140, 143, 144, 145, 146, 150, 152, 153, 154, 155, 156, 157, 158, 167, 171, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 185, 186, 189, 190, 191, 193, 196, 197, 198, 199, 201, 203, 205, 294, 299, 311, 327, 328, 329, 331, 335, 338, 339, 340, 346, 347, 349, 350, 351, 356, 358, 363, 366, 368, 379, 392, 393, 394, 396, 397, 398, 399, 400, 405, 406, 407, 408, 412, 413, 416, 419, 421, 422, 424, 427, 434, 435, 436, 437, 439, 440, 455, 457, 464, 465, 467, 471, 473, 474, 478, 479, 486], "number_of_dimens": 327, "numer": [100, 101, 102, 105, 107, 147, 148, 167, 328, 339, 354, 365, 455, 473, 479], "numit": 6, "numpi": [1, 2, 3, 4, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 91, 92, 93, 94, 95, 96, 97, 99, 100, 101, 102, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 268, 276, 282, 286, 309, 314, 326, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 401, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 455, 457, 464, 465, 466, 467, 468, 470, 471, 472, 473, 475, 481, 482, 484, 487], "numpy_compat": 446, "numpythunk": 4, "nvidia": [465, 466, 468, 472, 474, 476, 486, 487], "nx": [188, 473, 485, 486], "ny": [188, 473, 485, 486], "nyquist": [98, 100, 101, 102], "o": [1, 286, 352, 470, 480, 486], "obj": [34, 72], "object": [6, 14, 19, 34, 62, 151, 159, 167, 172, 187, 200, 202, 204, 257, 269, 276, 279, 286, 292, 294, 298, 318, 319, 320, 326, 337, 345, 352, 395, 423, 427, 436], "object_": [3, 8], "observ": 67, "obtain": [138, 311, 367, 465, 466, 472, 477], "occas": 461, "occasion": 479, "occur": [58, 68, 69, 72, 83, 184, 196, 197, 268, 288, 363, 366, 368, 384, 390, 485, 486], "occurr": [43, 436], "odd": [42, 47, 99, 103, 105, 107, 108, 130, 131, 153], "ofc": 68, "off": [21, 437, 461, 467], "offer": [474, 476, 485], "offload": 457, "offset": [4, 76, 183, 280, 290, 308, 314, 322, 425, 429, 430, 432, 433, 457, 480], "often": [21, 42, 348, 351, 366, 461, 470, 485, 486], "ogrid": 152, "omiss": 326, "omit": [257, 326], "omp": [464, 474, 486], "ompthread": [464, 486], "onc": [461, 462, 473, 486], "one": [6, 14, 16, 17, 19, 29, 30, 38, 41, 42, 43, 47, 49, 51, 54, 55, 72, 83, 93, 95, 96, 99, 100, 101, 103, 104, 105, 107, 108, 127, 130, 131, 136, 138, 143, 152, 153, 167, 175, 186, 187, 188, 194, 195, 196, 198, 199, 200, 201, 202, 203, 204, 205, 279, 286, 287, 288, 292, 313, 314, 330, 337, 341, 345, 356, 367, 371, 403, 414, 415, 417, 429, 430, 432, 433, 439, 453, 461, 465, 473, 474, 476, 480, 485, 486], "ones": [0, 3, 8, 80, 90, 93, 136, 139, 147, 148, 183, 184, 196, 203, 205, 333, 423, 427, 440, 467, 470, 473, 479, 485], "ones_lik": [0, 3, 8], "onli": [12, 13, 22, 23, 24, 25, 26, 27, 28, 34, 36, 38, 41, 42, 44, 45, 46, 47, 52, 53, 55, 59, 60, 61, 63, 64, 65, 70, 71, 79, 80, 83, 84, 87, 88, 89, 91, 94, 98, 117, 118, 119, 120, 121, 122, 123, 126, 127, 128, 129, 130, 131, 132, 135, 138, 140, 144, 145, 146, 153, 154, 155, 156, 157, 158, 159, 161, 163, 167, 169, 171, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 184, 185, 189, 190, 191, 193, 194, 195, 198, 201, 268, 286, 292, 309, 328, 329, 331, 338, 339, 340, 343, 346, 347, 379, 390, 392, 393, 394, 395, 396, 397, 405, 406, 407, 408, 412, 413, 416, 420, 421, 422, 423, 434, 435, 436, 437, 440, 453, 457, 461, 468, 470, 473, 476, 479, 480, 485, 486], "onto": [286, 474], "oom": 474, "op": 379, "open": [21, 78, 152, 171, 172, 319, 371, 373, 375, 376, 378, 385, 461, 468, 474, 476, 486], "openmp": [457, 462, 464, 486], "oper": [7, 16, 17, 82, 83, 84, 90, 119, 134, 139, 159, 198, 289, 334, 343, 394, 401, 423, 436, 440, 442, 446, 455, 457, 467, 468, 473, 479, 480], "operand": [83, 84], "opposit": [268, 286], "optim": [47, 83, 84, 166, 292, 457, 467, 473, 482, 486], "option": [1, 12, 13, 14, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 34, 37, 41, 43, 44, 45, 46, 49, 51, 52, 53, 54, 55, 57, 58, 59, 60, 61, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 76, 77, 78, 79, 80, 83, 85, 86, 87, 88, 89, 91, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 114, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 132, 135, 136, 138, 139, 140, 144, 145, 146, 147, 148, 154, 155, 156, 157, 158, 161, 163, 166, 167, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 257, 268, 288, 289, 307, 309, 318, 326, 328, 329, 331, 332, 333, 334, 335, 336, 337, 339, 340, 341, 342, 345, 346, 347, 348, 349, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 374, 375, 376, 377, 378, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 392, 393, 394, 395, 396, 397, 398, 400, 402, 403, 405, 406, 407, 408, 409, 411, 412, 413, 414, 415, 416, 417, 419, 421, 422, 423, 425, 426, 427, 428, 429, 430, 432, 433, 434, 435, 436, 437, 438, 439, 440, 444, 445, 461, 462, 464, 469, 474, 476, 478, 482, 483, 485], "ord": [167, 470], "order": [4, 12, 13, 22, 23, 24, 25, 26, 27, 28, 31, 32, 34, 44, 45, 46, 52, 53, 59, 60, 63, 64, 65, 70, 71, 76, 78, 79, 83, 84, 87, 88, 89, 91, 94, 100, 101, 102, 105, 107, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 126, 127, 128, 129, 135, 140, 144, 145, 146, 154, 155, 156, 157, 158, 161, 163, 166, 167, 170, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 184, 185, 188, 189, 190, 191, 192, 193, 214, 266, 267, 268, 288, 289, 301, 304, 306, 307, 312, 318, 319, 321, 323, 328, 329, 331, 335, 336, 339, 340, 342, 346, 347, 348, 356, 390, 392, 393, 395, 396, 397, 399, 402, 405, 406, 407, 408, 409, 412, 413, 416, 421, 422, 423, 434, 435, 437, 438, 455, 465, 466, 467, 484, 485, 486], "ordertyp": [4, 390, 395, 438], "ordin": 169, "ordinari": [139, 159], "org": [353, 461, 465, 466, 472, 477], "organ": 477, "orient": [343, 420], "origin": [12, 13, 22, 23, 24, 25, 26, 27, 28, 41, 44, 45, 46, 49, 51, 52, 53, 59, 60, 63, 64, 65, 70, 71, 79, 87, 88, 89, 91, 94, 117, 118, 119, 120, 121, 122, 123, 126, 128, 129, 135, 140, 144, 145, 146, 154, 155, 156, 157, 158, 167, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 185, 187, 188, 189, 190, 191, 192, 193, 200, 202, 204, 328, 329, 331, 337, 339, 340, 345, 346, 347, 392, 393, 395, 396, 397, 398, 405, 406, 407, 408, 412, 413, 416, 421, 422, 434, 435, 436, 463, 468, 473, 483, 486], "ortho": [95, 96, 97, 99, 100, 101, 102, 104, 105, 106, 107, 108, 109, 110], "orthonorm": 168, "oserror": 172, "other": [6, 12, 13, 21, 22, 23, 24, 25, 26, 27, 28, 34, 44, 45, 46, 49, 50, 52, 53, 54, 55, 59, 60, 61, 63, 64, 65, 70, 71, 77, 79, 83, 87, 88, 89, 91, 94, 100, 101, 102, 105, 107, 117, 118, 119, 120, 121, 122, 123, 126, 128, 129, 135, 136, 140, 144, 145, 146, 154, 155, 156, 157, 158, 166, 167, 171, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 185, 189, 190, 191, 192, 193, 202, 204, 268, 269, 276, 286, 309, 311, 314, 328, 329, 331, 337, 339, 340, 345, 346, 347, 367, 384, 385, 392, 393, 396, 397, 405, 406, 407, 408, 412, 413, 416, 421, 422, 427, 434, 435, 455, 457, 461, 465, 474, 477, 480, 485], "otherwis": [15, 29, 30, 34, 35, 41, 66, 67, 77, 139, 171, 186, 187, 194, 195, 198, 199, 200, 201, 202, 204, 268, 288, 318, 337, 345, 379, 390, 395, 402, 418, 425, 426, 427, 439, 443, 457, 473, 477], "ouput": 457, "our": [461, 468, 472, 474, 479, 485, 486], "out": [12, 13, 14, 16, 17, 19, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 34, 37, 42, 43, 44, 45, 46, 47, 52, 53, 54, 55, 57, 58, 59, 60, 61, 63, 64, 65, 67, 68, 69, 70, 71, 72, 73, 77, 79, 80, 83, 85, 86, 87, 88, 89, 91, 94, 95, 96, 97, 99, 100, 101, 102, 104, 105, 106, 107, 108, 109, 110, 114, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 128, 129, 130, 131, 135, 136, 137, 139, 140, 142, 144, 145, 146, 147, 148, 149, 152, 153, 154, 155, 156, 157, 158, 166, 169, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 189, 190, 191, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 262, 263, 264, 265, 270, 271, 272, 277, 278, 281, 289, 295, 296, 297, 302, 315, 317, 322, 323, 325, 328, 329, 331, 332, 333, 334, 336, 337, 339, 340, 341, 342, 345, 346, 347, 348, 349, 350, 351, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 374, 375, 376, 377, 378, 381, 382, 383, 384, 385, 386, 387, 388, 389, 391, 392, 393, 396, 397, 400, 405, 406, 407, 408, 409, 410, 412, 413, 415, 416, 417, 419, 420, 421, 422, 423, 425, 434, 435, 439, 440, 443, 444, 445, 464, 466, 472, 477, 482, 485, 486], "outcom": [356, 486], "outer": [0, 3, 8, 84], "outermost": [48, 54], "outlin": 473, "output": [12, 13, 14, 15, 16, 17, 19, 21, 22, 23, 24, 25, 26, 27, 28, 42, 43, 44, 45, 46, 47, 48, 52, 53, 55, 57, 59, 60, 61, 63, 64, 65, 68, 69, 70, 71, 77, 78, 79, 80, 83, 84, 85, 87, 88, 89, 91, 93, 94, 95, 96, 97, 99, 100, 101, 102, 105, 106, 107, 113, 117, 118, 119, 120, 121, 122, 123, 126, 128, 129, 130, 131, 135, 136, 137, 138, 139, 140, 141, 142, 144, 145, 146, 152, 153, 154, 155, 156, 157, 158, 166, 169, 171, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 184, 185, 186, 187, 188, 189, 190, 191, 193, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 319, 328, 329, 331, 334, 335, 337, 339, 340, 341, 345, 346, 347, 348, 349, 351, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 371, 374, 375, 376, 377, 378, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 391, 392, 393, 394, 396, 397, 398, 400, 403, 405, 406, 407, 408, 412, 413, 416, 417, 421, 422, 423, 424, 425, 434, 435, 436, 437, 439, 440, 446, 455, 457, 464, 473, 474, 482, 486], "outsid": [54, 55, 78, 132, 467], "over": [12, 13, 14, 16, 17, 19, 22, 23, 24, 25, 26, 27, 28, 41, 44, 45, 46, 52, 53, 59, 60, 63, 64, 65, 68, 69, 70, 71, 79, 80, 83, 84, 87, 88, 89, 91, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 114, 117, 118, 119, 120, 121, 122, 123, 126, 128, 129, 132, 135, 139, 140, 144, 145, 146, 154, 155, 156, 157, 158, 167, 171, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 185, 186, 188, 189, 190, 191, 193, 196, 197, 198, 199, 203, 205, 287, 288, 289, 302, 315, 328, 329, 331, 335, 339, 340, 341, 343, 346, 347, 349, 353, 368, 370, 375, 376, 378, 384, 385, 388, 392, 393, 396, 397, 398, 405, 406, 407, 408, 412, 413, 416, 417, 419, 420, 421, 422, 423, 434, 435, 437, 439, 457, 472, 473, 486], "overal": [457, 464, 473, 486], "overcom": 319, "overflow": [21, 117, 311], "overhead": [457, 473, 480], "overlap": 467, "overrid": [86, 125, 333, 445, 476], "overridden": [1, 67], "oversubscrib": 474, "overwrite_input": [187, 200, 202, 204, 337, 345], "own": [286, 309, 366, 461, 486], "owndata": 286, "owner": [286, 309, 477], "p": [89, 188, 349, 353, 356, 362, 363, 366, 426, 486], "pack": [335, 390, 437, 455], "packag": [202, 204, 337, 345, 468, 471, 474, 480, 486], "packbit": [0, 3, 8], "pad": [8, 61, 95, 96, 97, 99, 100, 101, 102, 104, 105, 107, 108, 110, 335, 437], "pade": 164, "page": [353, 461, 475], "pair": [84, 95, 96, 97, 99, 100, 101, 102, 104, 105, 106, 107, 108, 109, 110, 119], "pairwis": 470, "pairwise_dist": 470, "paper": [202, 204, 337, 345, 467], "parallel": [29, 30, 68, 69, 95, 96, 97, 99, 100, 101, 102, 104, 105, 106, 107, 108, 109, 110, 160, 161, 162, 163, 196, 197, 462, 473, 478, 486], "paramet": [1, 2, 6, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 257, 268, 276, 283, 284, 285, 288, 289, 292, 307, 309, 318, 319, 320, 323, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 374, 375, 376, 377, 378, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 432, 433, 434, 435, 436, 437, 438, 439, 440, 442, 443, 444, 445, 464, 485, 486], "parameter": [348, 349, 351, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 377, 382, 383, 384, 385, 386, 387, 388, 389], "parenthes": 166, "pareto": [0, 3, 8], "parse_arg": 486, "parser": 486, "part": [18, 57, 137, 142, 143, 149, 150, 160, 161, 162, 163, 191, 291, 305, 391, 400, 410, 461], "parti": 476, "partial": [95, 96, 97, 99, 100, 101, 102, 104, 105, 106, 107, 108, 109, 110, 187, 200, 471, 486], "particular": 477, "particularli": 486, "partit": [0, 3, 8, 31, 68, 266, 473, 480, 486], "pass": [14, 16, 17, 18, 19, 34, 48, 152, 172, 183, 186, 198, 201, 203, 268, 341, 352, 417, 427, 462, 464, 480, 484, 486], "past": 486, "patch": 483, "path": [84, 172, 283, 319, 462], "pathlib": [172, 283, 319], "pathlik": 172, "pattern": [41, 457, 485], "pcg64": [3, 8], "pcg64dxsm": [3, 8], "pcolor": 472, "pdf": [384, 465], "peak": [359, 384], "peebl": [353, 366], "pend": [34, 424], "pentadiagon": 467, "per": [457, 462, 464, 468, 473, 486], "percent": 367, "percentag": [457, 474, 482, 486], "percentil": [0, 3, 8, 202], "perform": [14, 19, 31, 37, 41, 54, 55, 61, 77, 83, 96, 97, 101, 102, 107, 110, 114, 159, 164, 183, 186, 199, 205, 289, 341, 343, 417, 439, 440, 465, 466, 468, 471, 473, 474, 481, 484, 486], "performa": 486, "perhap": 78, "period": 467, "perlmutt": 486, "permiss": [54, 465, 466, 472, 477], "permit": [461, 468, 477, 485], "permut": [3, 8, 323, 426], "permute_dim": [3, 8], "person": [461, 477], "peyton": 353, "pg": 167, "phase": 486, "philox": [3, 8], "pi": [18, 386, 465, 467, 473], "pick": [462, 468], "pickl": [172, 252, 257, 283, 284], "piec": 486, "piecewis": [3, 8], "pil": [468, 486], "pillow": 486, "pin": 474, "pinv": [3, 8], "pip": 476, "pipe": 482, "pixel": [82, 134, 401, 442, 472], "place": [0, 3, 8, 14, 15, 16, 17, 19, 55, 58, 68, 69, 72, 90, 111, 138, 186, 187, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 301, 312, 323, 337, 341, 342, 343, 345, 395, 398, 400, 415, 417, 419, 425, 439, 453, 478], "plai": 486, "plain": [457, 464, 466], "plan": 464, "plane": [18, 399], "platform": [68, 69, 196, 197, 203, 205, 341, 374, 417, 476], "pleas": [36, 81, 133, 188, 431, 441, 461, 471, 474, 476], "plot": [465, 467, 468, 470, 486], "plt": [465, 467, 468, 470, 472, 486], "plu": 175, "png": [468, 486], "point": [21, 42, 47, 68, 69, 80, 83, 95, 99, 100, 104, 105, 107, 108, 127, 130, 131, 141, 153, 165, 184, 186, 196, 197, 199, 279, 307, 329, 372, 385, 400, 402, 423, 455, 457, 462, 466, 467, 470, 473, 479, 486], "poisson": [0, 3, 8, 353], "poisson_process": 353, "poli": [3, 8], "poly1d": [3, 8], "polyadd": [3, 8], "polyd": [3, 8], "polydiv": [3, 8], "polyfit": [3, 8], "polyint": [3, 8], "polymul": [3, 8], "polysub": [3, 8], "polyv": [3, 8], "pool": 474, "popul": 370, "port": [373, 473], "portion": [477, 486], "posit": [0, 3, 8, 15, 18, 21, 43, 54, 76, 90, 93, 100, 101, 102, 105, 117, 145, 148, 159, 165, 192, 314, 348, 356, 359, 367, 369, 372, 398, 400, 403, 425, 466, 486], "possess": [6, 276], "possibl": [12, 13, 22, 23, 24, 25, 26, 27, 28, 39, 40, 44, 45, 46, 47, 52, 53, 59, 60, 63, 64, 65, 70, 71, 79, 84, 87, 88, 89, 91, 94, 117, 118, 119, 120, 121, 122, 123, 126, 128, 129, 132, 135, 140, 144, 145, 146, 154, 155, 156, 157, 158, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 185, 189, 190, 191, 193, 268, 286, 328, 329, 331, 339, 340, 346, 347, 392, 393, 395, 396, 397, 405, 406, 407, 408, 411, 412, 413, 416, 421, 422, 426, 434, 435, 461, 464, 474, 477, 478, 480, 485], "possibli": [320, 479], "post": 474, "potenti": [279, 479, 485], "pow": [3, 8, 251], "power": [0, 3, 8, 117, 165, 486], "pp": [202, 204, 337, 345, 366], "pr": 461, "practic": [474, 484], "pre": [34, 424, 461, 462], "precis": [41, 67, 68, 69, 83, 117, 183, 196, 197, 203, 205, 311, 319, 320, 341, 374, 417, 425, 457, 479, 486], "predict": 473, "prefer": [80, 474], "preload": 457, "preload_cudalib": 446, "prepend": [48, 77, 138, 184, 424], "prescrib": 474, "present": [16, 17, 80, 139, 198, 201, 423, 440], "preserv": [14, 19, 34, 38, 39, 40, 55, 57, 77, 83, 114, 115, 116, 161, 163, 184, 187, 200, 268, 289, 307, 326, 402, 425], "press": 167, "pressur": 268, "prevent": [461, 486], "previou": [41, 461], "previous": [286, 486], "price": [469, 486], "primarili": 48, "principl": [353, 366], "print": [78, 457, 464, 465, 466, 467, 470, 471, 472, 482, 486, 487], "printabl": 84, "printopt": [3, 8], "prior": [77, 462, 477, 486], "prior_distance_sum": 470, "probabl": [2, 67, 132, 187, 200, 348, 349, 353, 354, 356, 363, 366, 384, 386, 389], "problem": [319, 461, 471, 473, 474, 480, 485, 486], "proc": 474, "proce": 486, "process": [42, 159, 353, 463, 474, 485, 486], "processor": [464, 473, 474, 485, 486], "procur": 477, "prod": [0, 3, 8, 203, 311], "produc": [6, 286, 318, 319, 343, 420, 472, 479, 486], "product": [68, 80, 84, 139, 152, 166, 184, 196, 203, 205, 281, 302, 311, 334, 341, 423, 440, 455, 466, 473, 475, 477, 486], "product_along_axi": 341, "prof": 473, "profil": 467, "profit": 477, "program": [462, 473, 474, 475, 478, 483, 486, 487], "project": [446, 461, 465, 476], "promot": [112, 117, 184, 424, 477], "prone": [473, 486], "propag": [68, 69, 196, 197, 479], "proper": [455, 473], "properli": [309, 486], "properti": [6, 206, 269, 276, 279, 282, 286, 287, 291, 294, 298, 299, 305, 310, 311, 314, 323, 451], "proport": 389, "propos": 461, "protocol": 427, "prototyp": 86, "provid": [1, 8, 12, 13, 22, 23, 24, 25, 26, 27, 28, 29, 30, 44, 45, 46, 52, 53, 54, 58, 59, 60, 63, 64, 65, 70, 71, 79, 81, 82, 83, 84, 87, 88, 89, 91, 94, 117, 118, 119, 120, 121, 122, 123, 126, 128, 129, 132, 134, 135, 140, 144, 145, 146, 147, 148, 154, 155, 156, 157, 158, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 184, 185, 186, 189, 190, 191, 193, 194, 195, 199, 203, 210, 309, 323, 328, 329, 331, 339, 340, 346, 347, 371, 372, 374, 392, 393, 396, 397, 401, 405, 406, 407, 408, 412, 413, 415, 416, 419, 421, 422, 434, 435, 436, 437, 442, 461, 474, 475, 477, 485, 486], "pseudonym": 461, "ptp": [3, 8], "public": 461, "publish": [474, 477], "pull": [1, 352, 461, 462], "purpos": [167, 477], "put": [0, 3, 8, 338, 343, 344, 465, 486], "put_along_axi": [0, 3, 8], "put_result": 465, "putmask": [0, 3, 8], "pwd": 462, "py": [462, 464, 465, 474, 476, 477, 478, 482, 483, 486, 487], "pyarray_resolvewritebackifcopi": [286, 309], "pypi": 486, "pyplot": [465, 467, 468, 470, 472, 486], "python": [21, 119, 279, 292, 311, 318, 319, 320, 462, 465, 466, 472, 475, 476, 478, 479, 480, 485, 486, 487], "python3": 462, "q": [168, 202, 204, 337, 345], "qo": 486, "qr": [0, 3, 8], "quadrant": 27, "quadrat": 486, "quantil": [0, 3, 8, 202, 204, 337], "quantiti": 486, "queri": [474, 486], "question": [73, 475, 479], "quick": [319, 483], "quickli": [152, 466], "quicksort": [32, 409], "r": [82, 134, 168, 202, 204, 337, 345, 366, 401, 442, 465, 486], "r0": 138, "rad2deg": [0, 3, 8, 71], "radian": [3, 8, 18, 70, 71, 346], "raindrop": 353, "rainstorm": 353, "rais": [14, 16, 17, 19, 41, 43, 48, 54, 57, 76, 78, 111, 117, 160, 161, 162, 163, 165, 167, 168, 169, 170, 172, 186, 187, 194, 195, 198, 200, 201, 202, 203, 204, 270, 286, 303, 317, 337, 340, 341, 342, 345, 351, 369, 411, 414, 417, 419, 425], "ram": 487, "ran": 474, "rand": [0, 3, 8, 486], "randint": [0, 3, 8, 374], "randn": [0, 3, 8, 486], "random": [0, 446, 455, 470, 486], "random_integ": [0, 3, 8], "random_sampl": [0, 3, 8, 373, 376, 378, 385], "random_se": 470, "randomli": [358, 372, 470], "randomst": [3, 8], "ranf": [3, 8], "rang": [18, 21, 54, 78, 132, 188, 342, 362, 367, 419, 455, 470, 471, 472, 473, 480, 485, 486], "rank": [92, 169, 389, 473, 476, 486], "raphson": 469, "rare": 461, "rate": [353, 465, 486], "rather": [21, 76, 286, 457, 480, 485], "ratio": 354, "ration": 455, "ravel": [0, 3, 8, 113, 167, 288], "ravel_multi_index": [3, 8], "raw": 318, "rawdata": 257, "rayleigh": [0, 3, 8], "rbf": 468, "re": [20, 39, 40, 58, 113, 398, 486], "reach": [48, 363, 461], "read": [172, 283, 286, 390, 395, 457, 468, 486], "readi": 461, "readonli": 51, "real": [0, 3, 8, 18, 35, 99, 105, 106, 107, 108, 109, 110, 137, 149, 159, 161, 163, 400, 410, 455, 461, 473], "real_if_clos": [3, 8], "realli": [95, 100, 105, 106, 108, 109, 461, 485], "realm": 484, "realm_default_arg": 478, "rearrang": 455, "reason": [34, 107, 461], "rebuild": [82, 134, 401, 442], "recarrai": [3, 8], "receiv": 473, "reciproc": [0, 3, 8], "recommend": [2, 54, 480, 484, 486], "reconstruct": 436, "record": [3, 8, 461], "recov": 319, "recreat": 320, "recurs": 77, "recv": 473, "recv_typ": 473, "red": [467, 470], "redistribut": [461, 477], "reduc": [14, 16, 17, 19, 29, 30, 41, 186, 187, 188, 194, 195, 198, 199, 200, 201, 202, 203, 204, 205, 268, 337, 341, 345, 417, 439, 467, 473, 474, 486], "reduct": [14, 19, 202, 204, 337, 345, 439, 484, 486], "refer": [14, 19, 36, 49, 51, 68, 69, 81, 93, 96, 97, 101, 102, 107, 110, 133, 147, 148, 167, 186, 188, 196, 197, 199, 202, 204, 210, 262, 263, 264, 265, 266, 267, 270, 271, 272, 273, 274, 280, 281, 286, 295, 296, 297, 300, 301, 302, 303, 304, 306, 312, 313, 314, 315, 316, 317, 322, 324, 325, 337, 341, 345, 353, 366, 387, 390, 395, 400, 417, 427, 431, 439, 441, 470, 473, 474, 475, 485, 486], "referenc": 309, "reflect": [286, 474], "regard": 476, "regardless": [19, 133, 441, 474], "region": 474, "reinterpret": 326, "reject": 461, "rel": [15, 67, 141], "relabel": 470, "relat": [348, 473, 485, 486], "relationship": [67, 387], "releas": [461, 477, 480, 486], "relev": [171, 311], "reli": 61, "remain": [12, 13, 19, 22, 23, 24, 25, 26, 27, 28, 44, 45, 46, 52, 53, 59, 60, 63, 64, 65, 70, 71, 79, 87, 88, 89, 91, 94, 110, 117, 118, 119, 120, 121, 122, 123, 126, 128, 129, 132, 135, 140, 144, 145, 146, 154, 155, 156, 157, 158, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 185, 189, 190, 191, 192, 193, 202, 204, 286, 328, 329, 331, 337, 339, 340, 345, 346, 347, 367, 392, 393, 395, 396, 397, 405, 406, 407, 408, 412, 413, 416, 421, 422, 434, 435], "remaind": [0, 3, 8, 119, 122, 190], "remot": 486, "remov": [29, 30, 72, 76, 90, 184, 194, 195, 198, 313, 341, 414, 417, 425, 455, 473, 479], "reopen": 461, "reorder": [114, 192, 289], "rep": 424, "repeat": [0, 3, 8, 67, 96, 97, 101, 102, 107, 111, 160, 161, 162, 163, 165, 188, 338, 342, 344, 424, 486], "repeated_arrai": 394, "repeatedli": [472, 486], "repetit": [394, 424], "replac": [55, 196, 197, 303, 342, 419, 466, 474, 475, 486, 487], "replic": 424, "repo": 461, "report": 457, "report_coverag": 446, "report_dump_callstack": 446, "report_dump_csv": 446, "repositori": [461, 473], "repr": 253, "repres": [41, 67, 83, 100, 138, 147, 148, 188, 335, 359, 437, 439, 467, 468, 470, 473, 474, 479], "represent": [84, 138, 453], "reproduc": [470, 477], "req": 473, "request": [353, 368, 461, 470, 473, 474], "requir": [3, 8, 34, 172, 457, 462, 463, 465, 466, 472, 473, 474, 476, 482, 484, 485], "requri": 486, "res2": [39, 40], "rese": 379, "research": [465, 473, 486], "resembl": 383, "reserv": [464, 474, 477, 486], "reset": 6, "reshap": [0, 3, 8, 82, 90, 310, 323, 401, 442, 474, 479], "reshaped_arrai": 395, "resid": 184, "resiz": [3, 8, 90, 486], "resolut": [467, 473], "resourc": [465, 474, 484, 487], "respect": [61, 127, 184, 309, 467, 474, 486], "respons": [461, 473, 486], "rest": 36, "restor": 398, "restrict": 477, "result": [6, 12, 13, 14, 16, 17, 18, 19, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 34, 41, 43, 44, 45, 46, 52, 53, 54, 55, 58, 59, 60, 63, 64, 65, 67, 68, 69, 70, 71, 73, 76, 77, 78, 79, 84, 86, 87, 88, 89, 90, 91, 92, 94, 106, 109, 112, 117, 118, 119, 120, 121, 122, 123, 125, 126, 128, 129, 132, 135, 138, 139, 140, 144, 145, 146, 147, 148, 154, 155, 156, 157, 158, 160, 162, 167, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 268, 307, 319, 326, 328, 329, 331, 333, 334, 335, 336, 337, 339, 340, 341, 343, 345, 346, 347, 351, 371, 374, 375, 376, 378, 383, 392, 393, 395, 396, 397, 400, 402, 405, 406, 407, 408, 409, 411, 412, 413, 415, 416, 417, 419, 420, 421, 422, 423, 424, 425, 427, 434, 435, 436, 439, 440, 445, 457, 464, 465, 466, 467, 472, 473, 479, 480, 486], "result_typ": [3, 8, 465], "ret": 38, "retain": [12, 13, 22, 23, 24, 25, 26, 27, 28, 44, 45, 46, 52, 53, 59, 60, 63, 64, 65, 70, 71, 79, 87, 88, 89, 91, 94, 117, 118, 119, 120, 121, 122, 123, 126, 128, 129, 135, 140, 144, 145, 146, 154, 155, 156, 157, 158, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 185, 189, 190, 191, 193, 328, 329, 331, 339, 340, 346, 347, 392, 393, 396, 397, 405, 406, 407, 408, 412, 413, 416, 421, 422, 434, 435, 477], "retstep": 171, "return": [2, 6, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 207, 208, 209, 210, 211, 213, 214, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 249, 250, 251, 253, 254, 255, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 271, 272, 274, 276, 280, 281, 284, 287, 288, 289, 292, 295, 296, 297, 300, 302, 304, 306, 307, 311, 315, 316, 318, 320, 321, 322, 323, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 339, 340, 341, 343, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 442, 443, 444, 445, 453, 465, 466, 468, 470, 471, 472, 474, 484, 486], "return_count": 436, "return_index": 436, "return_invers": 436, "retval": 41, "revers": [78, 114, 115, 116, 289, 323, 335, 390, 399, 426, 437], "review": [463, 474, 476], "rf": 486, "rfft": [0, 3, 8, 105, 110], "rfft2": [0, 3, 8, 106], "rfftfreq": [3, 8], "rfftn": [0, 3, 8, 107, 108, 109], "rh": [281, 467], "right": [55, 57, 76, 78, 115, 135, 160, 161, 307, 384, 396, 402, 425, 461, 467, 473, 476, 477], "right_shift": [0, 3, 8], "rightmost": 132, "rint": [0, 3, 8], "rippl": 42, "risk": [465, 473, 486], "river": 473, "rk_hypergeometric_hrua": 477, "rk_hypergeometric_hyp": 477, "rk_triangular": 477, "rm": 486, "rn": 138, "rng": 470, "rober": 486, "robert": 477, "roll": [0, 3, 8], "rollaxi": [3, 8], "root": [3, 8, 52, 412, 462], "rot90": [0, 3, 8], "rotat": 399, "roughli": 486, "round": [0, 21, 385, 397, 455], "rounded_arrai": 400, "roundoff": 119, "routin": [446, 453, 457, 462], "row": [34, 67, 93, 115, 116, 136, 166, 288, 314, 390, 401, 427, 429, 438, 441, 442, 468, 473, 486], "row_stack": [3, 8], "rowvar": 67, "rsqrt2pi": 465, "rst": 314, "rt": 486, "rtol": [15, 141], "rule": [21, 41, 48, 112, 367, 480], "run": [183, 356, 461, 462, 463, 472, 474, 475, 476, 478, 482, 483, 484, 485, 487], "run_kmean": 470, "runfil": 486, "runtim": [198, 201, 457, 464, 473, 474, 478, 480, 483, 485], "runtimeerror": 286, "runtimewarn": [465, 471, 474], "rv": 477, "s0": 486, "s_0": 486, "s_0n": 486, "safe": [58, 83, 172, 184, 268], "sai": [474, 480], "salloc": 486, "same": [14, 15, 16, 17, 19, 20, 29, 30, 31, 32, 34, 35, 41, 43, 48, 54, 56, 58, 61, 67, 68, 69, 76, 77, 78, 82, 86, 92, 100, 101, 102, 107, 125, 127, 132, 134, 147, 148, 149, 165, 166, 186, 187, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 268, 282, 306, 307, 311, 314, 321, 323, 326, 333, 335, 336, 337, 338, 341, 344, 345, 390, 394, 398, 400, 401, 402, 403, 409, 410, 415, 417, 419, 423, 425, 428, 430, 433, 437, 438, 439, 442, 445, 461, 465, 466, 468, 470, 471, 472, 474, 476, 483, 485, 486], "same_kind": [12, 13, 22, 23, 24, 25, 26, 27, 28, 44, 45, 46, 52, 53, 58, 59, 60, 63, 64, 65, 70, 71, 79, 83, 87, 88, 89, 91, 94, 117, 118, 119, 120, 121, 122, 123, 126, 128, 129, 135, 140, 144, 145, 146, 154, 155, 156, 157, 158, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 184, 185, 189, 190, 191, 193, 268, 328, 329, 331, 339, 340, 346, 347, 392, 393, 396, 397, 405, 406, 407, 408, 412, 413, 416, 421, 422, 434, 435], "sampl": [42, 47, 67, 103, 127, 130, 132, 153, 171, 202, 204, 337, 345, 348, 349, 351, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 374, 375, 376, 377, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 446, 455], "satisfi": [34, 78, 92, 268, 389, 403, 471, 474, 485], "save": [3, 8, 187, 200, 202, 204, 337, 345, 457, 461, 467, 482], "savetxt": [3, 8], "savez": [3, 8], "savez_compress": [3, 8], "scalabl": [473, 474, 485, 486], "scalar": [12, 13, 15, 16, 17, 18, 22, 23, 24, 25, 26, 27, 28, 35, 38, 44, 45, 46, 48, 52, 53, 55, 59, 60, 63, 64, 65, 70, 71, 77, 79, 80, 87, 88, 89, 91, 94, 111, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 132, 135, 137, 139, 140, 141, 144, 145, 146, 151, 154, 155, 156, 157, 158, 169, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 188, 189, 190, 191, 193, 198, 201, 202, 203, 204, 205, 285, 292, 307, 320, 327, 328, 329, 331, 337, 339, 340, 341, 345, 346, 347, 348, 349, 351, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 377, 380, 382, 383, 384, 385, 386, 387, 388, 389, 391, 392, 393, 396, 397, 402, 403, 405, 406, 407, 408, 412, 413, 416, 417, 419, 421, 422, 423, 434, 435, 453, 484, 485], "scale": [84, 95, 96, 97, 99, 100, 101, 102, 104, 105, 106, 107, 108, 109, 110, 353, 355, 357, 359, 360, 366, 367, 377, 381, 382, 387, 388, 468, 473, 474, 475, 485, 486], "scatter": [470, 486], "schedul": [465, 466, 472, 474], "scheme": 469, "schole": [469, 476], "scientif": [473, 474, 486], "scientist": 473, "scikit": 462, "scipi": [164, 367, 468, 486], "scp": 486, "script": [462, 464, 474, 478, 483, 487], "seamlessli": 474, "search": [84, 446, 455, 475], "searchsort": [0, 3, 8, 78], "second": [41, 48, 61, 76, 80, 82, 84, 101, 102, 117, 127, 132, 133, 134, 147, 148, 183, 184, 188, 334, 340, 399, 401, 410, 418, 423, 425, 440, 442, 467, 485, 486], "second_cond": 485, "section": [34, 36, 97, 102, 107, 110, 474, 486], "secur": [172, 486], "see": [12, 13, 15, 16, 17, 22, 23, 24, 25, 26, 27, 28, 34, 44, 45, 46, 48, 52, 53, 55, 59, 60, 63, 64, 65, 67, 68, 69, 70, 71, 73, 75, 79, 83, 87, 88, 89, 91, 94, 95, 96, 97, 99, 100, 101, 102, 104, 105, 106, 107, 108, 109, 110, 117, 118, 119, 120, 121, 122, 123, 126, 128, 129, 132, 135, 140, 141, 144, 145, 146, 154, 155, 156, 157, 158, 167, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 185, 188, 189, 190, 191, 193, 196, 197, 198, 201, 203, 205, 268, 276, 309, 323, 328, 329, 331, 339, 340, 341, 346, 347, 371, 374, 392, 393, 396, 397, 405, 406, 407, 408, 412, 413, 416, 417, 421, 422, 429, 430, 432, 433, 434, 435, 436, 439, 451, 453, 462, 464, 465, 466, 467, 468, 471, 472, 474, 476, 477, 479, 485, 486, 487], "seed": [0, 1, 3, 8, 352, 455, 470], "seedsequ": [3, 8], "seek": [172, 471], "seem": 461, "seen": 348, "segment": 286, "seldom": 117, "select": [0, 3, 8, 16, 17, 57, 166, 198, 272, 358, 414, 419, 439, 470, 473, 486], "selectkind": [31, 336], "selector": 164, "self": [6, 206, 207, 208, 209, 210, 211, 213, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 249, 250, 251, 253, 254, 255, 256, 258, 259, 260, 261, 272, 286], "sell": 477, "semant": 132, "send": 473, "send_typ": 473, "sens": [82, 134, 401, 442, 479], "sep": 319, "separ": [83, 319, 400, 462, 464, 482, 485, 486], "sequenc": [18, 31, 34, 39, 40, 48, 50, 54, 56, 58, 82, 84, 96, 97, 101, 102, 106, 107, 109, 110, 132, 134, 138, 152, 166, 171, 187, 192, 200, 202, 204, 257, 336, 337, 338, 345, 368, 399, 401, 403, 415, 423, 424, 442, 480], "seri": 362, "serial": 462, "servic": [464, 477], "session": 486, "set": [12, 13, 14, 16, 17, 19, 22, 23, 24, 25, 26, 27, 28, 29, 30, 41, 44, 45, 46, 52, 53, 59, 60, 63, 64, 65, 67, 70, 71, 74, 79, 87, 88, 89, 91, 94, 117, 118, 119, 120, 121, 122, 123, 126, 128, 129, 135, 136, 140, 144, 145, 146, 154, 155, 156, 157, 158, 167, 171, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 185, 186, 187, 189, 190, 191, 193, 194, 195, 198, 199, 200, 201, 202, 203, 204, 205, 256, 268, 270, 286, 309, 310, 326, 328, 329, 331, 337, 339, 340, 341, 344, 345, 346, 347, 358, 367, 392, 393, 396, 397, 405, 406, 407, 408, 412, 413, 416, 417, 421, 422, 434, 435, 439, 446, 455, 461, 462, 467, 471, 473, 474, 479, 480, 485, 486], "set_bit_gener": [3, 8], "set_devic": 473, "set_printopt": [3, 8], "set_stat": [3, 8], "set_titl": [468, 486], "set_xtick": [468, 486], "set_ytick": [468, 486], "setbufs": [3, 8], "setdevic": 473, "setdiff1d": [3, 8], "seterr": [3, 8], "seterrcal": [3, 8], "setfield": [0, 8], "setflag": [0, 8, 286], "setup": 471, "setxor1d": [3, 8], "sever": [462, 474, 486], "sfc64": [3, 8], "sh": [462, 486], "shall": 477, "shallow": 473, "shape": [0, 2, 3, 4, 6, 8, 12, 13, 14, 16, 17, 19, 20, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 40, 41, 43, 44, 45, 46, 48, 50, 51, 52, 53, 54, 55, 57, 58, 59, 60, 63, 64, 65, 68, 69, 70, 71, 74, 76, 77, 78, 79, 80, 82, 85, 86, 87, 88, 89, 90, 91, 93, 94, 96, 97, 98, 101, 102, 103, 106, 107, 109, 110, 114, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 132, 134, 135, 138, 139, 140, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 164, 165, 166, 169, 170, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 257, 268, 276, 286, 289, 306, 307, 311, 323, 327, 328, 329, 331, 332, 333, 335, 336, 337, 339, 340, 341, 343, 344, 345, 346, 347, 348, 349, 351, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 374, 375, 376, 377, 378, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 392, 393, 394, 395, 396, 397, 398, 400, 401, 402, 405, 406, 407, 408, 409, 410, 412, 413, 414, 415, 416, 417, 419, 421, 422, 423, 424, 425, 427, 428, 433, 434, 435, 437, 438, 439, 440, 442, 443, 444, 445, 455, 466, 470, 484, 485, 486], "share": [276, 473, 474, 486], "shares_memori": [3, 8], "sharp": 486, "sharper": 359, "shift": [98, 103, 156, 367, 396, 398], "short": [3, 8, 286, 318], "shorter": [99, 105, 342], "should": [29, 30, 34, 36, 48, 54, 67, 76, 77, 83, 84, 100, 101, 102, 107, 152, 184, 192, 194, 195, 268, 335, 395, 419, 425, 437, 438, 440, 457, 465, 466, 467, 472, 480, 485, 486], "show": [318, 462, 467, 470, 482, 486], "show_config": [3, 8], "show_runtim": [3, 8], "showcas": 486, "shown": [467, 471, 483, 485, 486], "shuffl": [3, 8], "side": [78, 127, 307, 402, 467, 473], "sigma": [361, 486], "sign": [0, 3, 8, 15, 54, 63, 205, 341, 371, 374, 417], "signal": [42, 99, 104, 353, 366, 468, 486], "signatur": [183, 184, 461], "signbit": [0, 3, 8], "signedinteg": [3, 8], "signific": 473, "significantli": [465, 471, 473, 474, 486], "signoff": 461, "similar": [34, 42, 183, 292, 359, 479, 480, 486], "similarli": 473, "simpl": [67, 83, 320, 455, 466, 473, 486, 487], "simple_mm": 486, "simpler": [474, 486], "simplest": 464, "simpli": [132, 323, 461, 462, 486], "simplifi": [276, 367, 473, 486], "simul": 473, "simultan": [286, 398], "sin": [0, 3, 8, 467], "sinc": [3, 8, 105, 289, 320, 343, 467, 468, 474, 479, 485, 486], "sine": [24, 25, 407, 408, 467], "sing": 167, "singl": [2, 3, 8, 14, 16, 17, 19, 41, 48, 49, 50, 51, 56, 67, 84, 114, 115, 116, 127, 141, 166, 168, 169, 170, 172, 186, 188, 198, 199, 202, 204, 205, 283, 286, 287, 289, 292, 301, 309, 319, 337, 341, 345, 348, 349, 351, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 374, 375, 376, 377, 378, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 399, 414, 417, 423, 439, 457, 471, 474, 475, 485], "singleton": 90, "singular": [167, 169, 170], "sinh": [0, 3, 8], "site": 482, "situat": [353, 461, 474], "sixth": 467, "size": [2, 6, 14, 16, 17, 19, 21, 29, 30, 36, 41, 43, 48, 57, 61, 68, 69, 74, 76, 78, 84, 92, 127, 167, 171, 172, 183, 186, 187, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 292, 294, 319, 337, 338, 341, 344, 345, 348, 349, 351, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 371, 373, 374, 375, 376, 377, 378, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 398, 417, 432, 437, 439, 457, 467, 473, 474, 480, 486], "skbuild_build_opt": 462, "skip": 314, "slice": [16, 17, 57, 72, 164, 194, 195, 196, 197, 198, 201, 203, 205, 272, 286, 343, 420, 457, 467, 473], "slide": 486, "slightli": [47, 164], "slogdet": [3, 8], "slower": 485, "slowest": [390, 395], "small": [15, 164, 472, 474, 480, 483, 485], "smaller": [55, 67, 77, 95, 96, 97, 100, 101, 102, 104, 107, 108, 110, 119, 132, 187, 200, 202, 204, 337, 338, 344, 345, 457], "smallest": [167, 367], "smi": 474, "snippet": [188, 473], "so": [19, 48, 77, 117, 119, 132, 150, 171, 188, 286, 309, 319, 335, 424, 470, 477, 485, 486], "sobel": [468, 486], "sobol": 468, "softwar": [465, 466, 472, 474, 476, 477], "solut": [169, 467, 471, 473], "solv": [0, 3, 8, 455, 467, 471, 473, 486], "solver": 473, "some": [21, 34, 92, 269, 286, 309, 319, 387, 443, 457, 461, 462, 466, 472, 474, 479, 480, 485, 486], "somebodi": 461, "sometim": [320, 355, 382, 479], "soon": 461, "sort": [0, 8, 32, 170, 187, 200, 202, 204, 267, 307, 336, 337, 345, 402, 410, 411, 420, 436, 446, 455, 486], "sort_complex": [0, 3, 8], "sorter": [307, 402], "sortsid": 402, "sorttyp": [32, 409], "sourc": [192, 419, 420, 461, 463, 473, 477, 483, 486], "south": [472, 486], "space": [3, 8, 21, 98, 127, 171, 457, 467], "sparingli": 485, "spars": [138, 188], "speak": 167, "spec": 474, "special": [7, 348, 383, 390, 473, 477], "specif": [2, 80, 457, 465, 466, 472, 473, 477, 486], "specifi": [14, 19, 20, 21, 29, 30, 31, 32, 34, 41, 43, 54, 55, 58, 67, 68, 69, 72, 76, 83, 84, 95, 96, 97, 99, 100, 101, 102, 104, 105, 107, 108, 110, 114, 127, 161, 163, 167, 171, 184, 186, 187, 194, 195, 196, 197, 198, 199, 200, 202, 203, 204, 205, 268, 280, 283, 289, 292, 303, 326, 337, 341, 342, 343, 345, 349, 354, 355, 357, 358, 359, 360, 361, 362, 363, 365, 367, 371, 382, 386, 389, 390, 399, 400, 415, 417, 419, 420, 423, 425, 436, 437, 439, 457, 464, 470, 471, 474, 478, 482, 486], "spectral": 467, "spectrum": [98, 99], "speed": [292, 319], "spelt": 48, "spent": 480, "split": [0, 3, 8, 36, 81, 133, 441, 455], "spread": [366, 439, 486], "sqrt": [0, 3, 8, 465, 468, 486], "sqrt_t": 465, "squar": [0, 3, 8, 136, 159, 160, 161, 162, 163, 165, 169, 183, 351, 354, 364, 365, 412, 470], "squeez": [0, 3, 8, 90], "srun": [478, 486], "ssh": 486, "stabl": [32, 164, 409], "stack": [0, 3, 8, 56, 82, 134, 184, 401, 442, 457, 474], "stackoverflow": 479, "stage": 463, "standard": [292, 311, 323, 351, 361, 366, 367, 372, 380, 381, 382, 383, 453, 455, 461, 465, 466, 472, 478, 480, 483, 486], "standard_cauchi": [0, 3, 8], "standard_exponenti": [0, 3, 8], "standard_gamma": [0, 3, 8], "standard_norm": [3, 8, 383], "standard_t": [0, 3, 8], "start": [21, 84, 100, 171, 203, 205, 279, 341, 417, 461, 464, 465, 466, 467, 472, 473, 480, 485, 486], "start_tim": 486, "state": [257, 375, 376, 378, 455], "statement": [468, 471, 479, 485, 487], "statist": [202, 204, 337, 345, 348, 446, 455], "statistician": [202, 204, 337, 345], "std": [3, 8], "stdout": [457, 464], "stecil": 467, "stegun": 465, "stencil": [467, 469, 473], "step": [21, 84, 171, 314, 461, 462, 473, 479, 480, 485, 486], "stephen": 477, "still": [41, 167, 188, 486], "stock": [465, 486], "stoke": 473, "stop": [21, 171, 465, 466, 472, 485, 486], "storag": 319, "store": [12, 13, 22, 23, 24, 25, 26, 27, 28, 44, 45, 46, 52, 53, 59, 60, 63, 64, 65, 70, 71, 79, 87, 88, 89, 91, 94, 117, 118, 119, 120, 121, 122, 123, 126, 128, 129, 135, 140, 144, 145, 146, 147, 148, 154, 155, 156, 157, 158, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 184, 185, 189, 190, 191, 193, 314, 328, 329, 331, 334, 339, 340, 346, 347, 392, 393, 396, 397, 405, 406, 407, 408, 412, 413, 416, 421, 422, 434, 435, 467, 486], "str": [12, 13, 22, 23, 24, 25, 26, 27, 28, 31, 32, 44, 45, 46, 52, 53, 58, 59, 60, 63, 64, 65, 70, 71, 79, 83, 84, 87, 88, 89, 91, 94, 95, 96, 97, 99, 100, 101, 102, 104, 105, 106, 107, 108, 109, 110, 117, 118, 119, 120, 121, 122, 123, 126, 128, 129, 135, 140, 144, 145, 146, 154, 155, 156, 157, 158, 161, 163, 164, 167, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 185, 188, 189, 190, 191, 193, 202, 204, 257, 258, 268, 283, 303, 319, 321, 328, 329, 331, 336, 337, 339, 340, 342, 345, 346, 347, 392, 393, 396, 397, 405, 406, 407, 408, 409, 412, 413, 416, 421, 422, 434, 435, 457, 468, 470, 486], "str_": [3, 8], "straightforward": [485, 486], "strategi": [457, 486], "stream": 1, "streamlin": 486, "strict": [457, 477], "strictli": 167, "stride": [4, 276, 286, 309, 390, 462], "strike": [465, 486], "string": [61, 164, 172, 188, 257, 283, 284, 286, 309, 319, 350, 453, 462], "string_repr": 84, "strong": 461, "structur": [436, 473, 480, 485, 486], "student": 383, "studi": [387, 469], "style": [286, 288, 390, 438], "sub": [14, 16, 17, 19, 34, 36, 72, 76, 81, 133, 186, 198, 201, 203, 268, 326, 341, 411, 417, 425, 427, 441], "subarrai": [72, 138, 436], "subclass": 37, "subdomain": 473, "subgrid": 473, "subject": 477, "sublicens": 477, "submit": 461, "subok": [34, 49, 51, 268], "subplot": [468, 486], "subscript": [83, 84], "subsequ": 286, "subset": [358, 414, 480], "substanti": [473, 477], "substitut": [471, 477], "subtract": [0, 3, 8, 485], "subtyp": 390, "succe": 485, "success": [349, 356, 363], "suggest": [311, 461, 474, 486], "suit": [464, 486], "suitabl": [292, 307, 323, 343, 402, 420, 486], "sum": [0, 3, 8, 41, 61, 69, 80, 100, 132, 139, 167, 177, 178, 197, 203, 205, 314, 322, 351, 358, 365, 423, 425, 455, 470, 471, 486], "sum_": 167, "sum_along_axi": 417, "sum_along_diagon": 425, "sum_of_weight": 41, "summar": [202, 204, 337, 345], "summari": [3, 8, 464], "summat": [47, 83, 84], "supercomputerloc": 486, "superpod": 475, "suppli": [147, 148, 164, 166, 372], "support": [31, 32, 61, 78, 80, 83, 168, 170, 172, 184, 188, 286, 319, 326, 336, 343, 356, 394, 398, 409, 423, 427, 436, 462, 468, 476, 478, 484, 486], "suppos": 54, "sure": [470, 480], "surfac": 473, "surpris": 77, "surround": 473, "svd": [0, 8], "svdval": 8, "swap": [61, 98], "swapax": [0, 3, 8], "switch": 471, "symmetr": [105, 159, 486], "symmetri": [99, 104], "synchron": [473, 486], "sysmem": 486, "system": [169, 183, 467, 471, 473, 474, 476, 479, 486], "system_mem": 474, "t": [67, 78, 114, 115, 116, 286, 323, 342, 348, 383, 427, 451, 464, 465, 466, 470, 479, 485, 486], "tabl": [167, 389], "tack": 461, "tackl": [473, 486], "tail": 359, "take": [0, 2, 3, 8, 56, 57, 152, 183, 338, 343, 390, 395, 420, 461, 474, 486], "take_along_axi": [0, 3, 8], "taken": [41, 54, 76, 77, 84, 99, 105, 107, 109, 110, 186, 199, 358, 403, 425, 427, 429, 432, 440, 468, 480], "tall": 111, "tan": [0, 3, 8], "tangent": [26, 27, 28, 421, 422], "tanh": [0, 3, 8], "taper": [42, 47, 130, 131, 153], "target": [342, 344, 462], "task": [457, 465, 466, 472, 473, 480, 486], "taylor": 164, "tdma": 467, "teach": [467, 470, 471], "technic": 474, "techniqu": 486, "tell": [314, 474], "templat": 486, "temporari": 457, "tend": 480, "tensor": [84, 423, 457, 462], "tensordot": [0, 3, 8], "tensorinv": [3, 8], "tensorsolv": [3, 8], "term": [47, 80, 84, 100, 101, 102, 105, 139, 184, 423, 440, 467, 476], "termin": [464, 471, 486], "test": [0, 14, 19, 141, 142, 144, 145, 146, 147, 148, 286, 351, 354, 446, 455, 463, 470, 472, 473, 482, 483], "test_view": 464, "test_vstack": 464, "test_wher": 464, "test_window": 464, "testsystem": 464, "text": [319, 461], "tf32": 457, "th": [73, 77, 93, 127, 138, 202, 204, 323, 337, 345, 403, 428, 431], "than": [21, 43, 47, 49, 51, 54, 55, 57, 61, 68, 69, 76, 80, 81, 95, 96, 97, 99, 100, 101, 102, 104, 105, 107, 108, 110, 111, 115, 116, 132, 139, 164, 184, 187, 188, 196, 197, 200, 202, 203, 204, 205, 337, 338, 341, 342, 344, 345, 354, 358, 367, 384, 385, 389, 406, 414, 415, 417, 423, 425, 437, 440, 457, 466, 471, 479, 480, 485, 486], "thei": [13, 15, 27, 44, 45, 46, 49, 63, 68, 69, 77, 78, 79, 87, 117, 119, 120, 121, 122, 126, 128, 129, 135, 154, 155, 156, 157, 158, 177, 178, 179, 181, 182, 184, 185, 189, 190, 193, 196, 197, 307, 329, 331, 340, 349, 390, 393, 396, 402, 416, 434, 453, 468, 470, 480, 485, 486], "them": [56, 453, 461, 470, 474, 485, 486], "themselv": [276, 467], "theorem": 366, "theoret": 486, "theori": 477, "therefor": [161, 163, 356], "theta": 355, "thi": [12, 13, 14, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 33, 34, 37, 41, 43, 44, 45, 46, 48, 49, 51, 52, 53, 54, 55, 58, 59, 60, 63, 64, 65, 70, 71, 72, 73, 74, 77, 78, 79, 80, 82, 83, 84, 87, 88, 89, 91, 94, 95, 96, 97, 98, 99, 100, 101, 102, 105, 106, 107, 108, 109, 110, 111, 113, 115, 116, 117, 118, 119, 120, 121, 122, 123, 126, 128, 129, 132, 134, 135, 139, 140, 144, 145, 146, 151, 152, 154, 155, 156, 157, 158, 161, 163, 166, 167, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 198, 199, 200, 201, 202, 203, 204, 205, 266, 267, 268, 276, 279, 281, 285, 286, 289, 292, 294, 309, 311, 314, 318, 319, 320, 323, 326, 328, 329, 331, 334, 337, 338, 339, 340, 341, 343, 344, 345, 346, 347, 351, 352, 367, 371, 374, 379, 387, 390, 392, 393, 395, 396, 397, 399, 401, 405, 406, 407, 408, 412, 413, 414, 416, 417, 419, 420, 421, 422, 423, 424, 427, 434, 435, 436, 439, 440, 442, 457, 461, 462, 464, 465, 466, 467, 468, 470, 471, 472, 473, 476, 477, 479, 482, 483, 485, 486, 487], "thing": [419, 461, 466, 486], "think": 461, "third": [81, 82, 134, 401, 423, 442, 476, 485], "those": [55, 61, 67, 72, 165, 343, 473, 479], "though": 43, "thought": 386, "thread": [462, 464, 471, 474, 486], "three": [40, 47, 55, 202, 204, 337, 345, 436, 474, 485], "threshold": 457, "through": [14, 16, 17, 19, 34, 152, 183, 186, 188, 198, 201, 203, 268, 341, 417, 457, 486], "throughout": 473, "thu": [54, 172, 424, 485, 486], "thumb": 480, "thunk": 4, "tile": [0, 3, 8, 455], "time": [67, 77, 83, 96, 97, 101, 102, 107, 286, 289, 353, 368, 387, 399, 424, 436, 461, 464, 465, 466, 472, 473, 476, 486], "timedelta64": [3, 8], "timer": 480, "timestep": 473, "tini": 366, "titl": [465, 467], "to_devic": 8, "tobyt": [0, 8, 319, 321], "tofil": [0, 3, 8], "togeth": [15, 58, 67, 100, 152, 184], "tol": [471, 485, 486], "toler": [15, 141, 471, 485], "tolist": [0, 3, 8], "too": [42, 78, 419, 474], "took": 486, "tool": [461, 473, 474, 483], "toolkit": [462, 486], "top": [462, 475], "topic": [463, 474, 484], "topographi": 473, "torchsw": 469, "tort": 477, "total": [6, 66, 298, 363, 466, 470, 486], "total_chang": 470, "toward": [132, 329, 399], "trace": [0, 3, 8, 457], "traceback": 457, "tracker": 474, "transfer": [471, 486], "transform": [61, 95, 96, 97, 99, 100, 101, 102, 104, 105, 106, 107, 108, 109, 110, 446, 455, 485], "translat": [374, 467, 485], "transport": 319, "transpos": [0, 3, 8, 67, 159, 206, 455, 466], "trapezoid": [3, 8], "trapz": [3, 8], "travers": 314, "treat": [15, 54, 161, 163, 166, 184, 187, 188, 196, 197, 200, 203, 205, 343, 420, 424, 436], "tree": 462, "tri": [0, 3, 8], "trial": [349, 356], "triangl": [135, 427, 428, 429, 430, 431, 432, 433], "triangular": [0, 3, 8, 42, 159, 161, 163, 168, 466], "tridiagon": 467, "trigger": [474, 479], "trigonometr": [22, 26, 407, 455], "tril": [0, 3, 8, 183, 429, 430, 431], "tril_indic": [0, 3, 8, 430], "tril_indices_from": [0, 3, 8], "trim": 437, "trim_zero": [3, 8], "triu": [0, 3, 8, 183, 432, 433], "triu_indic": [0, 3, 8, 433], "triu_indices_from": [0, 3, 8], "trivial": 461, "true": [4, 12, 13, 14, 15, 16, 17, 18, 19, 22, 23, 24, 25, 26, 27, 28, 29, 30, 34, 35, 41, 44, 45, 46, 52, 53, 57, 59, 60, 63, 64, 65, 67, 70, 71, 77, 78, 79, 83, 84, 87, 88, 89, 91, 92, 94, 111, 117, 118, 119, 120, 121, 122, 123, 126, 128, 129, 132, 135, 138, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 154, 155, 156, 157, 158, 164, 167, 170, 171, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 185, 186, 187, 188, 189, 190, 191, 193, 194, 195, 198, 199, 200, 201, 202, 203, 204, 205, 262, 263, 268, 286, 295, 297, 302, 309, 328, 329, 331, 337, 338, 339, 340, 341, 344, 345, 346, 347, 392, 393, 396, 397, 403, 405, 406, 407, 408, 412, 413, 416, 417, 421, 422, 434, 435, 436, 439, 443, 479, 482], "true_divid": [0, 3, 8, 79], "truli": 286, "trunc": [0, 3, 8], "truncat": [57, 95, 96, 97, 99, 100, 101, 102, 104, 105, 107, 108, 110, 349, 435], "trust": [194, 195], "truth": [128, 129, 157, 158, 179, 181, 182, 453, 455], "try": [466, 467, 468, 471, 474, 479, 481, 484, 486], "tup": [56, 82, 134, 401, 442], "tupl": [2, 4, 6, 12, 13, 14, 16, 17, 19, 22, 23, 24, 25, 26, 27, 28, 36, 37, 41, 44, 45, 46, 50, 51, 52, 53, 59, 60, 63, 64, 65, 66, 70, 71, 74, 75, 79, 84, 85, 86, 87, 88, 89, 90, 91, 94, 98, 103, 114, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 132, 135, 138, 140, 144, 145, 146, 152, 154, 155, 156, 157, 158, 160, 161, 167, 168, 170, 171, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 185, 186, 187, 188, 189, 190, 191, 193, 198, 199, 200, 201, 202, 204, 205, 257, 289, 292, 310, 314, 323, 328, 329, 330, 331, 332, 333, 337, 339, 340, 341, 345, 346, 347, 348, 349, 351, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 371, 374, 375, 376, 377, 378, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 392, 393, 395, 396, 397, 398, 404, 405, 406, 407, 408, 412, 413, 414, 416, 417, 421, 422, 423, 429, 430, 432, 433, 434, 435, 438, 439, 443, 444, 445, 470, 485, 486], "tuple_of_arrai": 330, "turn": [56, 457], "tutori": [474, 484], "tweedi": 387, "twice": 485, "two": [15, 21, 35, 39, 44, 45, 46, 48, 61, 67, 76, 77, 80, 96, 100, 101, 106, 123, 139, 141, 166, 184, 334, 354, 356, 359, 399, 418, 423, 425, 429, 430, 432, 433, 440, 468, 469, 470, 472, 485, 486, 487], "type": [6, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 76, 77, 78, 79, 80, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 124, 125, 126, 127, 128, 129, 130, 131, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 162, 163, 164, 165, 166, 167, 169, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 210, 257, 268, 276, 282, 288, 289, 292, 294, 307, 309, 311, 318, 319, 320, 323, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 339, 340, 341, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 374, 375, 376, 377, 378, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 432, 433, 434, 435, 437, 438, 439, 440, 442, 443, 444, 445, 446, 455, 457, 462, 470, 473, 474, 486], "typecod": 268, "typeerror": [43, 78, 202, 204, 337, 345], "typenam": [3, 8], "typic": [15, 49, 51, 67, 99, 307, 402, 462, 473, 480, 486], "u": [161, 163, 170, 203, 314, 388, 461, 466, 468, 472, 474, 477, 486], "u8_arr": 77, "ubyt": [3, 8], "ufunc": [8, 12, 13, 16, 17, 22, 23, 24, 25, 26, 27, 28, 44, 45, 46, 52, 53, 55, 59, 60, 63, 64, 65, 70, 71, 79, 87, 88, 89, 91, 94, 117, 118, 119, 120, 121, 122, 123, 126, 128, 129, 135, 140, 144, 145, 146, 154, 155, 156, 157, 158, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 185, 189, 190, 191, 193, 198, 201, 203, 205, 328, 329, 331, 339, 340, 341, 346, 347, 392, 393, 396, 397, 405, 406, 407, 408, 412, 413, 416, 417, 421, 422, 434, 435], "uic": 309, "uid": 474, "uint": [3, 8], "uint16": [3, 8], "uint32": [3, 8], "uint64": [3, 8, 470], "uint8": [3, 8, 77, 335, 437], "uintc": [3, 8], "uintp": [3, 8], "uk": [465, 468], "ulong": [3, 8], "ulonglong": [3, 8], "ultim": [286, 309], "unabl": 474, "unalt": 352, "unari": 453, "unbias": 67, "unbound": 367, "unchang": [34, 110], "undefin": [187, 200, 202, 204, 337, 343, 345, 479], "under": [167, 286, 461, 465, 466, 472, 477], "underli": [32, 361, 390, 395, 409, 465, 486], "understand": [461, 471], "undesir": 485, "undo": 437, "unexpect": 203, "unif": [375, 376, 378], "uniform": [0, 3, 8, 132, 370, 371, 374, 375, 376, 378, 388], "uniformli": 385, "uniniti": [12, 13, 22, 23, 24, 25, 26, 27, 28, 44, 45, 46, 52, 53, 59, 60, 63, 64, 65, 70, 71, 79, 85, 86, 87, 88, 89, 91, 94, 117, 118, 119, 120, 121, 122, 123, 126, 128, 129, 135, 140, 144, 145, 146, 154, 155, 156, 157, 158, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 185, 189, 190, 191, 193, 328, 329, 331, 339, 340, 346, 347, 392, 393, 396, 397, 405, 406, 407, 408, 412, 413, 416, 421, 422, 434, 435], "union1d": [3, 8], "uniqu": [0, 3, 8, 192, 366, 470], "unique_al": [3, 8], "unique_count": [3, 8, 436], "unique_indic": 436, "unique_invers": [3, 8, 436], "unique_valu": [3, 8], "unit": [152, 160, 161, 386, 387, 479], "unitari": [127, 170, 479], "uniti": 132, "univari": 372, "univers": [167, 387], "unknown": 486, "unless": [14, 19, 34, 54, 68, 69, 76, 83, 132, 167, 171, 196, 197, 203, 205, 268, 292, 335, 341, 371, 374, 375, 376, 378, 400, 417, 436, 461, 465, 466, 472], "unlik": [61, 76, 160, 162, 384], "unmodifi": [48, 475], "unnecessari": 461, "unpack": 437, "unpackbit": [0, 3, 8], "unpickl": [257, 309], "unpredict": [1, 352], "unravel": 438, "unravel_index": [0, 3, 8], "unraveled_coord": 438, "unsaf": [58, 83, 139, 184, 268, 334, 423, 440], "unsign": [77, 205, 341, 417], "unsignedinteg": [3, 8], "unstack": [3, 8], "unsupport": 479, "until": [48, 84, 470, 485, 486], "unwrap": [3, 8], "up": [82, 116, 119, 134, 292, 401, 420, 436, 442, 457, 462, 468, 473, 474, 479, 480, 486], "updat": [286, 309, 342, 343, 471, 473, 486], "uplo": [161, 163], "upon": 461, "upper": [55, 93, 132, 159, 161, 163, 168, 309, 384, 385, 431, 432, 433], "uppoer": 168, "us": [2, 6, 16, 17, 20, 21, 31, 32, 42, 47, 48, 54, 58, 61, 67, 68, 69, 73, 74, 76, 77, 80, 83, 84, 95, 96, 97, 99, 100, 101, 102, 104, 105, 107, 108, 110, 127, 130, 131, 137, 141, 152, 153, 159, 164, 166, 167, 171, 184, 186, 187, 188, 196, 197, 198, 199, 200, 202, 203, 204, 205, 214, 215, 270, 276, 286, 292, 309, 311, 319, 326, 336, 337, 338, 341, 343, 345, 349, 351, 353, 374, 379, 387, 390, 391, 394, 395, 398, 403, 409, 417, 419, 420, 425, 436, 438, 439, 440, 453, 457, 461, 462, 464, 465, 466, 467, 468, 471, 472, 473, 475, 476, 477, 479, 482, 483, 484, 487], "usabl": 117, "usag": [95, 96, 97, 99, 100, 101, 102, 104, 105, 106, 107, 108, 109, 110, 160, 161, 162, 163, 169, 457, 461, 463, 474, 484, 485], "use_explicit": 164, "use_openmp": 462, "use_thread": 462, "user": [286, 309, 462, 471, 473, 474, 475, 486], "ushort": [3, 8], "usual": [74, 461, 474, 487], "util": [464, 465, 466, 472, 474, 486], "v": [48, 61, 73, 307, 402, 446, 464, 465, 467], "v1": 465, "v100": 486, "val": [111, 137, 151, 308, 335, 338, 391, 437, 485, 486], "valid": [48, 61, 183, 429, 430, 432, 433, 461, 473], "valu": [2, 12, 13, 14, 15, 16, 17, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 35, 41, 42, 43, 44, 45, 46, 47, 52, 53, 54, 55, 59, 60, 63, 64, 65, 66, 67, 68, 69, 70, 71, 77, 78, 79, 83, 87, 88, 89, 91, 92, 93, 94, 100, 108, 111, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 135, 138, 140, 141, 143, 144, 145, 146, 147, 148, 149, 150, 152, 153, 154, 155, 156, 157, 158, 159, 161, 163, 165, 167, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 189, 190, 191, 193, 194, 195, 196, 197, 198, 199, 201, 202, 203, 204, 205, 208, 209, 216, 217, 219, 220, 222, 223, 224, 225, 226, 227, 228, 229, 233, 234, 235, 236, 237, 238, 239, 241, 242, 243, 244, 245, 246, 247, 249, 250, 251, 254, 255, 256, 259, 260, 261, 264, 265, 268, 271, 282, 285, 295, 297, 303, 307, 309, 311, 314, 328, 329, 331, 335, 338, 339, 340, 341, 342, 343, 344, 346, 347, 348, 349, 351, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 374, 375, 376, 377, 378, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 392, 393, 394, 395, 396, 397, 398, 400, 402, 405, 406, 407, 408, 412, 413, 416, 417, 419, 420, 421, 422, 425, 426, 434, 435, 436, 437, 439, 443, 453, 455, 457, 465, 467, 470, 471, 472, 473, 474, 484, 485, 486], "valuabl": 473, "valueerror": [41, 43, 48, 54, 57, 76, 78, 111, 167, 194, 195, 198, 201, 351, 369, 411, 414, 425], "van": 167, "vander": [3, 8], "vanilla": 457, "var": [0, 3, 8, 457], "vararg": 127, "vari": [32, 67, 138, 409, 467, 468, 473, 486], "variabl": [67, 169, 194, 195, 198, 201, 351, 353, 359, 366, 457, 471, 473, 474, 478, 480, 482, 485, 486], "varianc": [67, 325, 351, 372, 439, 455], "variant": 486, "variat": [202, 204, 337, 345, 354, 486], "varieti": 2, "variou": [167, 455, 457, 473, 483], "vdot": [0, 3, 8], "vecdot": [3, 8], "vecmat": [3, 8], "vector": [3, 8, 67, 80, 139, 166, 167, 184, 188, 323, 334, 440, 455, 486, 487], "vector1": 486, "vector2": 486, "vector_norm": 8, "venv": [476, 486], "verbatim": 461, "verbos": [464, 471, 474, 486], "veri": [15, 42, 292, 480], "verifi": 159, "version": [66, 73, 113, 187, 200, 202, 204, 257, 337, 345, 367, 438, 461, 465, 466, 472, 473, 476, 486], "vertic": [399, 401, 441, 442, 473], "vh": 170, "via": [12, 13, 22, 23, 24, 25, 26, 27, 28, 44, 45, 46, 52, 53, 59, 60, 63, 64, 65, 70, 71, 79, 87, 88, 89, 91, 94, 117, 118, 119, 120, 121, 122, 123, 126, 128, 129, 135, 140, 144, 145, 146, 154, 155, 156, 157, 158, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 185, 189, 190, 191, 193, 286, 320, 328, 329, 331, 339, 340, 346, 347, 392, 393, 396, 397, 405, 406, 407, 408, 412, 413, 416, 421, 422, 427, 434, 435, 464, 474, 478, 486], "view": [0, 8, 39, 40, 49, 51, 73, 90, 114, 115, 116, 188, 192, 282, 286, 289, 316, 323, 343, 395, 411, 414, 418, 420, 426, 438, 474, 484], "violat": 457, "vision": 486, "visit": [461, 474], "vital": 486, "void": [3, 8, 292], "volatil": [465, 486], "von": 386, "vonmis": [0, 3, 8], "vpi": 468, "vsplit": [0, 3, 8, 401, 442], "vstack": [0, 3, 8, 401, 485], "vv": 464, "w": [162, 163, 286, 309], "wa": [47, 80, 139, 166, 363, 387, 400, 423, 440, 461, 468, 471, 474], "wai": [84, 100, 101, 102, 107, 184, 358, 437, 461, 462, 464, 465, 466, 467, 472, 477, 478, 485], "waital": 473, "wald": [0, 3, 8], "walk": 462, "want": [461, 462, 472, 486], "warm": 480, "warn": [183, 194, 195, 198, 201, 342, 446, 471, 486], "warranti": [465, 466, 472, 477], "wasilla": 477, "water": 473, "wavenumb": 467, "we": [8, 54, 67, 314, 461, 462, 465, 466, 467, 468, 470, 471, 472, 473, 474, 485, 486], "weak": 475, "weibul": [0, 3, 8, 202, 204, 337, 345, 377], "weight": [41, 43, 67, 130, 131, 132, 367, 470], "welcom": [8, 461], "well": [83, 169, 309, 341, 464, 466, 473], "were": [58, 184, 307, 372, 402, 415, 474, 477, 482, 486], "west": [472, 486], "wget": 486, "what": [58, 73, 83, 95, 96, 97, 99, 100, 101, 102, 104, 105, 106, 107, 108, 109, 110, 139, 142, 184, 268, 334, 415, 423, 440, 472, 482, 485, 486], "wheel": 486, "when": [18, 21, 29, 30, 34, 41, 48, 57, 68, 69, 77, 107, 132, 159, 164, 167, 169, 171, 183, 184, 187, 188, 194, 195, 196, 197, 198, 200, 201, 203, 276, 292, 309, 314, 319, 351, 352, 379, 390, 403, 419, 420, 457, 461, 462, 471, 473, 478, 479, 480, 482, 485, 486], "whenev": [426, 457, 485], "where": [0, 3, 8, 12, 13, 14, 16, 17, 19, 21, 22, 23, 24, 25, 26, 27, 28, 33, 39, 40, 44, 45, 46, 48, 52, 53, 54, 55, 57, 59, 60, 63, 64, 65, 67, 70, 71, 77, 79, 80, 87, 88, 89, 90, 91, 92, 93, 94, 99, 105, 107, 117, 118, 119, 120, 121, 122, 123, 126, 128, 129, 134, 135, 138, 140, 141, 142, 144, 145, 146, 147, 148, 149, 154, 155, 156, 157, 158, 159, 168, 170, 171, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 185, 186, 189, 190, 191, 193, 198, 199, 201, 203, 205, 262, 263, 295, 297, 302, 307, 315, 328, 329, 331, 334, 338, 339, 340, 341, 344, 346, 347, 348, 349, 354, 355, 356, 363, 365, 367, 384, 392, 393, 396, 397, 402, 403, 405, 406, 407, 408, 411, 412, 413, 416, 417, 421, 422, 425, 434, 435, 439, 465, 467, 468, 470, 473, 477, 479, 485, 486], "wherea": 479, "whether": [14, 15, 19, 35, 73, 78, 141, 142, 159, 161, 163, 171, 203, 309, 438, 457, 461, 464, 477, 482, 485, 486], "which": [1, 12, 13, 14, 16, 17, 19, 20, 22, 23, 24, 25, 26, 27, 28, 29, 30, 34, 41, 44, 45, 46, 48, 52, 53, 54, 57, 58, 59, 60, 61, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 74, 76, 77, 78, 79, 83, 84, 87, 88, 89, 91, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 114, 117, 118, 119, 120, 121, 122, 123, 126, 127, 128, 129, 134, 135, 140, 144, 145, 146, 147, 148, 151, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 167, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 189, 190, 191, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 268, 276, 289, 292, 309, 311, 326, 328, 329, 331, 335, 337, 339, 340, 341, 342, 345, 346, 347, 353, 358, 371, 374, 375, 376, 377, 378, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 392, 393, 394, 396, 397, 398, 400, 403, 405, 406, 407, 408, 411, 412, 413, 415, 416, 417, 419, 421, 422, 425, 427, 428, 429, 432, 434, 435, 437, 439, 443, 457, 461, 468, 471, 473, 474, 477, 480, 482, 485, 486], "while": [67, 110, 166, 188, 200, 202, 204, 205, 286, 341, 367, 398, 417, 427, 470, 474, 480, 485, 486], "whilst": 38, "who": 461, "whole": 461, "whom": 477, "whose": [34, 76, 92, 93, 111, 183, 186, 192, 198, 199, 201, 205, 271, 335, 425, 430, 433, 438, 439], "why": [105, 461], "wide": [353, 474], "width": [82, 132, 134, 366, 401, 442, 486], "wiki": 353, "wikipedia": 353, "window": [42, 47, 130, 131, 153, 446, 455], "wise": [12, 13, 15, 22, 23, 24, 25, 26, 27, 28, 44, 45, 46, 52, 53, 59, 60, 63, 64, 65, 79, 82, 87, 94, 95, 96, 97, 99, 100, 101, 102, 104, 105, 106, 107, 108, 109, 110, 117, 118, 120, 121, 122, 128, 129, 133, 134, 140, 141, 144, 145, 146, 147, 148, 155, 157, 158, 160, 161, 162, 163, 173, 174, 175, 179, 180, 181, 182, 185, 189, 190, 191, 193, 274, 328, 329, 331, 339, 340, 392, 393, 401, 405, 406, 407, 408, 412, 413, 416, 421, 422, 434, 435, 441, 442, 486], "wish": 73, "within": [12, 13, 15, 21, 22, 23, 24, 25, 26, 27, 28, 44, 45, 46, 52, 53, 59, 60, 63, 64, 65, 70, 71, 79, 83, 87, 88, 89, 91, 94, 100, 101, 102, 105, 107, 117, 118, 119, 120, 121, 122, 123, 126, 128, 129, 135, 140, 141, 144, 145, 146, 154, 155, 156, 157, 158, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 184, 185, 189, 190, 191, 193, 268, 328, 329, 331, 339, 340, 346, 347, 358, 385, 392, 393, 396, 397, 405, 406, 407, 408, 412, 413, 416, 421, 422, 434, 435, 486], "without": [42, 48, 57, 80, 85, 139, 309, 323, 395, 461, 465, 466, 472, 473, 477, 481, 484, 486], "word": [21, 100, 101, 102, 105, 107, 385, 427], "work": [48, 57, 292, 342, 453, 461, 462, 465, 479, 480, 485, 486], "worker": [464, 474, 486], "workflow": 462, "workload": 486, "workstat": 486, "worri": 486, "wors": 47, "would": [32, 58, 80, 139, 166, 183, 266, 267, 292, 307, 334, 402, 411, 415, 423, 440, 457, 465, 466, 471, 472, 473, 485, 486], "wrap": [54, 111, 342, 352, 419], "wrapper": 486, "write": [49, 73, 111, 188, 309, 319, 395, 465, 466, 472, 475, 486], "writeabl": [4, 286, 309], "writebackifcopi": [286, 309], "written": [111, 286, 309, 319, 477, 485, 487], "wrong": 57, "www": [465, 466, 472], "x": [12, 22, 23, 24, 25, 26, 28, 43, 52, 53, 59, 60, 64, 65, 67, 70, 71, 77, 78, 88, 89, 91, 94, 96, 97, 98, 101, 102, 103, 110, 118, 123, 132, 136, 140, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 164, 167, 169, 173, 174, 175, 176, 180, 183, 188, 191, 286, 309, 314, 328, 339, 346, 347, 348, 353, 388, 392, 397, 405, 406, 407, 408, 412, 413, 421, 422, 435, 443, 465, 467, 468, 470, 471, 479, 485, 486, 487], "x1": [13, 27, 44, 45, 46, 63, 79, 87, 117, 119, 120, 121, 122, 126, 128, 129, 135, 154, 155, 156, 157, 158, 177, 178, 179, 181, 182, 185, 188, 189, 190, 193, 329, 331, 340, 393, 396, 416, 434], "x2": [13, 27, 44, 45, 46, 63, 79, 87, 117, 119, 120, 121, 122, 126, 128, 129, 135, 154, 155, 156, 157, 158, 177, 178, 179, 181, 182, 185, 188, 189, 190, 193, 329, 331, 340, 393, 396, 416, 434], "x86": 486, "x86_64": [476, 486], "x_": 471, "x_1": 67, "x_2": 67, "x_current": 485, "x_i": 67, "x_j": 67, "x_n": 67, "x_prev": 485, "xeon": 486, "xi": 188, "xk": 471, "xk_old": 471, "xlabel": [465, 467], "xn": 188, "xor": [46, 182], "xorwow": 352, "xv": 188, "xy": 188, "y": [13, 27, 44, 45, 46, 63, 67, 79, 87, 98, 103, 117, 119, 120, 121, 122, 126, 128, 129, 135, 141, 150, 154, 155, 156, 157, 158, 177, 178, 179, 181, 182, 185, 188, 189, 190, 193, 202, 204, 288, 320, 329, 331, 337, 340, 345, 390, 393, 396, 399, 416, 434, 443, 468, 470, 471, 485, 486, 487], "y1": [123, 191], "y2": [123, 191], "year": [366, 486], "yellow": 470, "yet": [8, 436], "yield": [29, 30, 68, 69, 196, 197, 203, 443, 480, 486], "ylabel": [465, 467], "you": [49, 73, 83, 184, 187, 188, 200, 419, 461, 462, 465, 466, 467, 470, 471, 472, 473, 474, 475, 476, 483, 485, 486, 487], "your": [461, 474, 475, 485, 486, 487], "yueh": 473, "yv": 188, "z": [18, 292, 353, 372, 485, 487], "zero": [0, 3, 8, 18, 33, 41, 42, 47, 61, 66, 77, 93, 95, 96, 97, 98, 99, 100, 101, 102, 104, 105, 107, 108, 110, 113, 130, 131, 142, 143, 147, 148, 149, 150, 153, 160, 161, 162, 163, 165, 167, 183, 197, 205, 300, 327, 330, 335, 354, 367, 406, 427, 428, 431, 437, 439, 445, 467, 470, 472, 486], "zero_point": 470, "zerodivisionerror": 41, "zeros_lik": [0, 3, 8], "zeta": 389, "zipf": [0, 3, 8], "zsh": 486}, "titles": ["&lt;no title&gt;", "cupynumeric.random.BitGenerator", "cupynumeric.random.Generator", "Convolve and Correlate", "cupynumeric.ndarray", "Binary operations", "cupynumeric.broadcast", "Classes", "Project comparisons", "Array creation routines", "Data type routines", "Discrete Fourier Transform (<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">cupynumeric.fft</span></code>)", "cupynumeric.absolute", "cupynumeric.add", "cupynumeric.all", "cupynumeric.allclose", "cupynumeric.amax", "cupynumeric.amin", "cupynumeric.angle", "cupynumeric.any", "cupynumeric.append", "cupynumeric.arange", "cupynumeric.arccos", "cupynumeric.arccosh", "cupynumeric.arcsin", "cupynumeric.arcsinh", "cupynumeric.arctan", "cupynumeric.arctan2", "cupynumeric.arctanh", "cupynumeric.argmax", "cupynumeric.argmin", "cupynumeric.argpartition", "cupynumeric.argsort", "cupynumeric.argwhere", "cupynumeric.array", "cupynumeric.array_equal", "cupynumeric.array_split", "cupynumeric.asarray", "cupynumeric.atleast_1d", "cupynumeric.atleast_2d", "cupynumeric.atleast_3d", "cupynumeric.average", "cupynumeric.bartlett", "cupynumeric.bincount", "cupynumeric.bitwise_and", "cupynumeric.bitwise_or", "cupynumeric.bitwise_xor", "cupynumeric.blackman", "cupynumeric.block", "cupynumeric.broadcast_arrays", "cupynumeric.broadcast_shapes", "cupynumeric.broadcast_to", "cupynumeric.cbrt", "cupynumeric.ceil", "cupynumeric.choose", "cupynumeric.clip", "cupynumeric.column_stack", "cupynumeric.compress", "cupynumeric.concatenate", "cupynumeric.conj", "cupynumeric.conjugate", "cupynumeric.convolve", "cupynumeric.copy", "cupynumeric.copysign", "cupynumeric.cos", "cupynumeric.cosh", "cupynumeric.count_nonzero", "cupynumeric.cov", "cupynumeric.cumprod", "cupynumeric.cumsum", "cupynumeric.deg2rad", "cupynumeric.degrees", "cupynumeric.delete", "cupynumeric.diag", "cupynumeric.diag_indices", "cupynumeric.diag_indices_from", "cupynumeric.diagonal", "cupynumeric.diff", "cupynumeric.digitize", "cupynumeric.divide", "cupynumeric.dot", "cupynumeric.dsplit", "cupynumeric.dstack", "cupynumeric.einsum", "cupynumeric.einsum_path", "cupynumeric.empty", "cupynumeric.empty_like", "cupynumeric.equal", "cupynumeric.exp", "cupynumeric.exp2", "cupynumeric.expand_dims", "cupynumeric.expm1", "cupynumeric.extract", "cupynumeric.eye", "cupynumeric.fabs", "cupynumeric.fft.fft", "cupynumeric.fft.fft2", "cupynumeric.fft.fftn", "cupynumeric.fft.fftshift", "cupynumeric.fft.hfft", "cupynumeric.fft.ifft", "cupynumeric.fft.ifft2", "cupynumeric.fft.ifftn", "cupynumeric.fft.ifftshift", "cupynumeric.fft.ihfft", "cupynumeric.fft.irfft", "cupynumeric.fft.irfft2", "cupynumeric.fft.irfftn", "cupynumeric.fft.rfft", "cupynumeric.fft.rfft2", "cupynumeric.fft.rfftn", "cupynumeric.fill_diagonal", "cupynumeric.find_common_type", "cupynumeric.flatnonzero", "cupynumeric.flip", "cupynumeric.fliplr", "cupynumeric.flipud", "cupynumeric.float_power", "cupynumeric.floor", "cupynumeric.floor_divide", "cupynumeric.fmax", "cupynumeric.fmin", "cupynumeric.fmod", "cupynumeric.frexp", "cupynumeric.full", "cupynumeric.full_like", "cupynumeric.gcd", "cupynumeric.gradient", "cupynumeric.greater", "cupynumeric.greater_equal", "cupynumeric.hamming", "cupynumeric.hanning", "cupynumeric.histogram", "cupynumeric.hsplit", "cupynumeric.hstack", "cupynumeric.hypot", "cupynumeric.identity", "cupynumeric.imag", "cupynumeric.indices", "cupynumeric.inner", "cupynumeric.invert", "cupynumeric.isclose", "cupynumeric.iscomplex", "cupynumeric.iscomplexobj", "cupynumeric.isfinite", "cupynumeric.isinf", "cupynumeric.isnan", "cupynumeric.isneginf", "cupynumeric.isposinf", "cupynumeric.isreal", "cupynumeric.isrealobj", "cupynumeric.isscalar", "cupynumeric.ix_", "cupynumeric.kaiser", "cupynumeric.lcm", "cupynumeric.ldexp", "cupynumeric.left_shift", "cupynumeric.less", "cupynumeric.less_equal", "cupynumeric.linalg.cholesky", "cupynumeric.linalg.eig", "cupynumeric.linalg.eigh", "cupynumeric.linalg.eigvals", "cupynumeric.linalg.eigvalsh", "cupynumeric.linalg.expm", "cupynumeric.linalg.matrix_power", "cupynumeric.linalg.multi_dot", "cupynumeric.linalg.norm", "cupynumeric.linalg.qr", "cupynumeric.linalg.solve", "cupynumeric.linalg.svd", "cupynumeric.linspace", "cupynumeric.load", "cupynumeric.log", "cupynumeric.log10", "cupynumeric.log1p", "cupynumeric.log2", "cupynumeric.logaddexp", "cupynumeric.logaddexp2", "cupynumeric.logical_and", "cupynumeric.logical_not", "cupynumeric.logical_or", "cupynumeric.logical_xor", "cupynumeric.mask_indices", "cupynumeric.matmul", "cupynumeric.maximum", "cupynumeric.mean", "cupynumeric.median", "cupynumeric.meshgrid", "cupynumeric.minimum", "cupynumeric.mod", "cupynumeric.modf", "cupynumeric.moveaxis", "cupynumeric.multiply", "cupynumeric.nanargmax", "cupynumeric.nanargmin", "cupynumeric.nancumprod", "cupynumeric.nancumsum", "cupynumeric.nanmax", "cupynumeric.nanmean", "cupynumeric.nanmedian", "cupynumeric.nanmin", "cupynumeric.nanpercentile", "cupynumeric.nanprod", "cupynumeric.nanquantile", "cupynumeric.nansum", "cupynumeric.ndarray.T", "cupynumeric.ndarray.__abs__", "cupynumeric.ndarray.__add__", "cupynumeric.ndarray.__and__", "cupynumeric.ndarray.__array__", "cupynumeric.ndarray.__bool__", "cupynumeric.ndarray.__complex__", "cupynumeric.ndarray.__contains__", "cupynumeric.ndarray.__copy__", "cupynumeric.ndarray.__deepcopy__", "cupynumeric.ndarray.__divmod__", "cupynumeric.ndarray.__eq__", "cupynumeric.ndarray.__float__", "cupynumeric.ndarray.__floordiv__", "cupynumeric.ndarray.__ge__", "cupynumeric.ndarray.__getitem__", "cupynumeric.ndarray.__gt__", "cupynumeric.ndarray.__iadd__", "cupynumeric.ndarray.__iand__", "cupynumeric.ndarray.__ifloordiv__", "cupynumeric.ndarray.__ilshift__", "cupynumeric.ndarray.__imatmul__", "cupynumeric.ndarray.__imod__", "cupynumeric.ndarray.__imul__", "cupynumeric.ndarray.__index__", "cupynumeric.ndarray.__int__", "cupynumeric.ndarray.__invert__", "cupynumeric.ndarray.__ior__", "cupynumeric.ndarray.__ipow__", "cupynumeric.ndarray.__irshift__", "cupynumeric.ndarray.__isub__", "cupynumeric.ndarray.__itruediv__", "cupynumeric.ndarray.__ixor__", "cupynumeric.ndarray.__le__", "cupynumeric.ndarray.__len__", "cupynumeric.ndarray.__lshift__", "cupynumeric.ndarray.__lt__", "cupynumeric.ndarray.__matmul__", "cupynumeric.ndarray.__mod__", "cupynumeric.ndarray.__mul__", "cupynumeric.ndarray.__ne__", "cupynumeric.ndarray.__neg__", "cupynumeric.ndarray.__new__", "cupynumeric.ndarray.__or__", "cupynumeric.ndarray.__pos__", "cupynumeric.ndarray.__pow__", "cupynumeric.ndarray.__reduce__", "cupynumeric.ndarray.__repr__", "cupynumeric.ndarray.__rmatmul__", "cupynumeric.ndarray.__rshift__", "cupynumeric.ndarray.__setitem__", "cupynumeric.ndarray.__setstate__", "cupynumeric.ndarray.__str__", "cupynumeric.ndarray.__sub__", "cupynumeric.ndarray.__truediv__", "cupynumeric.ndarray.__xor__", "cupynumeric.ndarray.all", "cupynumeric.ndarray.any", "cupynumeric.ndarray.argmax", "cupynumeric.ndarray.argmin", "cupynumeric.ndarray.argpartition", "cupynumeric.ndarray.argsort", "cupynumeric.ndarray.astype", "cupynumeric.ndarray.base", "cupynumeric.ndarray.choose", "cupynumeric.ndarray.clip", "cupynumeric.ndarray.compress", "cupynumeric.ndarray.conj", "cupynumeric.ndarray.conjugate", "cupynumeric.ndarray.copy", "cupynumeric.ndarray.ctypes", "cupynumeric.ndarray.cumprod", "cupynumeric.ndarray.cumsum", "cupynumeric.ndarray.data", "cupynumeric.ndarray.diagonal", "cupynumeric.ndarray.dot", "cupynumeric.ndarray.dtype", "cupynumeric.ndarray.dump", "cupynumeric.ndarray.dumps", "cupynumeric.ndarray.fill", "cupynumeric.ndarray.flags", "cupynumeric.ndarray.flat", "cupynumeric.ndarray.flatten", "cupynumeric.ndarray.flip", "cupynumeric.ndarray.getfield", "cupynumeric.ndarray.imag", "cupynumeric.ndarray.item", "cupynumeric.ndarray.itemset", "cupynumeric.ndarray.itemsize", "cupynumeric.ndarray.max", "cupynumeric.ndarray.mean", "cupynumeric.ndarray.min", "cupynumeric.ndarray.nbytes", "cupynumeric.ndarray.ndim", "cupynumeric.ndarray.nonzero", "cupynumeric.ndarray.partition", "cupynumeric.ndarray.prod", "cupynumeric.ndarray.put", "cupynumeric.ndarray.ravel", "cupynumeric.ndarray.real", "cupynumeric.ndarray.reshape", "cupynumeric.ndarray.searchsorted", "cupynumeric.ndarray.setfield", "cupynumeric.ndarray.setflags", "cupynumeric.ndarray.shape", "cupynumeric.ndarray.size", "cupynumeric.ndarray.sort", "cupynumeric.ndarray.squeeze", "cupynumeric.ndarray.strides", "cupynumeric.ndarray.sum", "cupynumeric.ndarray.swapaxes", "cupynumeric.ndarray.take", "cupynumeric.ndarray.tobytes", "cupynumeric.ndarray.tofile", "cupynumeric.ndarray.tolist", "cupynumeric.ndarray.tostring", "cupynumeric.ndarray.trace", "cupynumeric.ndarray.transpose", "cupynumeric.ndarray.unique", "cupynumeric.ndarray.var", "cupynumeric.ndarray.view", "cupynumeric.ndim", "cupynumeric.negative", "cupynumeric.nextafter", "cupynumeric.nonzero", "cupynumeric.not_equal", "cupynumeric.ones", "cupynumeric.ones_like", "cupynumeric.outer", "cupynumeric.packbits", "cupynumeric.partition", "cupynumeric.percentile", "cupynumeric.place", "cupynumeric.positive", "cupynumeric.power", "cupynumeric.prod", "cupynumeric.put", "cupynumeric.put_along_axis", "cupynumeric.putmask", "cupynumeric.quantile", "cupynumeric.rad2deg", "cupynumeric.radians", "cupynumeric.random.beta", "cupynumeric.random.binomial", "cupynumeric.random.bytes", "cupynumeric.random.chisquare", "cupynumeric.random.default_rng", "cupynumeric.random.exponential", "cupynumeric.random.f", "cupynumeric.random.gamma", "cupynumeric.random.geometric", "cupynumeric.random.gumbel", "cupynumeric.random.hypergeometric", "cupynumeric.random.laplace", "cupynumeric.random.logistic", "cupynumeric.random.lognormal", "cupynumeric.random.logseries", "cupynumeric.random.negative_binomial", "cupynumeric.random.noncentral_chisquare", "cupynumeric.random.noncentral_f", "cupynumeric.random.normal", "cupynumeric.random.pareto", "cupynumeric.random.poisson", "cupynumeric.random.power", "cupynumeric.random.rand", "cupynumeric.random.randint", "cupynumeric.random.randn", "cupynumeric.random.random", "cupynumeric.random.random_integers", "cupynumeric.random.random_sample", "cupynumeric.random.ranf", "cupynumeric.random.rayleigh", "cupynumeric.random.sample", "cupynumeric.random.seed", "cupynumeric.random.standard_cauchy", "cupynumeric.random.standard_exponential", "cupynumeric.random.standard_gamma", "cupynumeric.random.standard_t", "cupynumeric.random.triangular", "cupynumeric.random.uniform", "cupynumeric.random.vonmises", "cupynumeric.random.wald", "cupynumeric.random.weibull", "cupynumeric.random.zipf", "cupynumeric.ravel", "cupynumeric.real", "cupynumeric.reciprocal", "cupynumeric.remainder", "cupynumeric.repeat", "cupynumeric.reshape", "cupynumeric.right_shift", "cupynumeric.rint", "cupynumeric.roll", "cupynumeric.rot90", "cupynumeric.round", "cupynumeric.row_stack", "cupynumeric.searchsorted", "cupynumeric.select", "cupynumeric.shape", "cupynumeric.sign", "cupynumeric.signbit", "cupynumeric.sin", "cupynumeric.sinh", "cupynumeric.sort", "cupynumeric.sort_complex", "cupynumeric.split", "cupynumeric.sqrt", "cupynumeric.square", "cupynumeric.squeeze", "cupynumeric.stack", "cupynumeric.subtract", "cupynumeric.sum", "cupynumeric.swapaxes", "cupynumeric.take", "cupynumeric.take_along_axis", "cupynumeric.tan", "cupynumeric.tanh", "cupynumeric.tensordot", "cupynumeric.tile", "cupynumeric.trace", "cupynumeric.transpose", "cupynumeric.tri", "cupynumeric.tril", "cupynumeric.tril_indices", "cupynumeric.tril_indices_from", "cupynumeric.triu", "cupynumeric.triu_indices", "cupynumeric.triu_indices_from", "cupynumeric.true_divide", "cupynumeric.trunc", "cupynumeric.unique", "cupynumeric.unpackbits", "cupynumeric.unravel_index", "cupynumeric.var", "cupynumeric.vdot", "cupynumeric.vsplit", "cupynumeric.vstack", "cupynumeric.where", "cupynumeric.zeros", "cupynumeric.zeros_like", "API Reference", "Indexing routines", "Input and output", "Linear algebra (<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">cupynumeric.linalg</span></code>)", "Logic functions", "Array manipulation routines", "Mathematical functions", "The N-Dimensional array (<code class=\"xref py py-class docutils literal notranslate\"><span class=\"pre\">cupynumeric.ndarray</span></code>)", "Random sampling (<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">cupynumeric.random</span></code>)", "Routines", "Set routines", "Settings", "Sorting, searching, and counting", "Statistics", "Window functions", "Contributing to cuPyNumeric", "Building from source", "Developer guide", "Running tests", "Black-Scholes options pricing", "Cholesky decomposition", "Compact Finite Difference Scheme", "Edge Detection", "Examples", "K-Means Clustering Algorithm", "Newton Raphson Method In Two Dimensions", "Jacobi stencil", "TorchSWE case study", "Frequently Asked Questions", "NVIDIA cuPyNumeric", "Installation", "Third-party notices", "Advanced topics", "Differences with Numpy", "Performance Benchmarking", "Howtos", "Measure API coverage", "Trying Numpy code without changes", "User guide", "Best practices", "Tutorial", "Usage"], "titleterms": {"1": 486, "2": 486, "3": 486, "In": 471, "Of": 474, "The": [453, 461], "__abs__": 207, "__add__": 208, "__and__": 209, "__array__": 210, "__bool__": 211, "__complex__": 212, "__contains__": 213, "__copy__": 214, "__deepcopy__": 215, "__divmod__": 216, "__eq__": 217, "__float__": 218, "__floordiv__": 219, "__ge__": 220, "__getitem__": 221, "__gt__": 222, "__iadd__": 223, "__iand__": 224, "__ifloordiv__": 225, "__ilshift__": 226, "__imatmul__": 227, "__imod__": 228, "__imul__": 229, "__index__": 230, "__int__": 231, "__invert__": 232, "__ior__": 233, "__ipow__": 234, "__irshift__": 235, "__isub__": 236, "__itruediv__": 237, "__ixor__": 238, "__le__": 239, "__len__": 240, "__lshift__": 241, "__lt__": 242, "__matmul__": 243, "__mod__": 244, "__mul__": 245, "__ne__": 246, "__neg__": 247, "__new__": 248, "__or__": 249, "__pos__": 250, "__pow__": 251, "__reduce__": 252, "__repr__": 253, "__rmatmul__": 254, "__rshift__": 255, "__setitem__": 256, "__setstate__": 257, "__str__": 258, "__sub__": 259, "__truediv__": 260, "__xor__": 261, "about": 474, "absolut": 12, "add": 13, "advanc": [3, 462, 478, 485, 486], "algebra": [8, 449], "algorithm": 470, "all": [14, 262], "allclos": 15, "alloc": [485, 486], "amax": 16, "amin": 17, "an": 485, "angl": 18, "ani": [19, 263], "anoth": 485, "anti": 474, "api": [8, 446, 482, 485], "append": 20, "applic": [474, 485], "ar": 474, "arang": 21, "arcco": 22, "arccosh": 23, "arcsin": 24, "arcsinh": 25, "arctan": 26, "arctan2": 27, "arctanh": 28, "argmax": [29, 264], "argmin": [30, 265], "argpartit": [31, 266], "argsort": [32, 267], "argument": [474, 478, 479, 485], "argwher": 33, "arithmet": [452, 453], "arrai": [3, 8, 9, 34, 447, 450, 451, 453, 485, 486], "array_equ": 35, "array_split": 36, "asarrai": 37, "ask": 474, "astyp": 268, "atleast_1d": 38, "atleast_2d": 39, "atleast_3d": 40, "attribut": 453, "avail": 474, "averag": [41, 459], "avoid": [485, 486], "background": [467, 468, 470, 471], "bartlett": 42, "base": [269, 485, 486], "basic": [451, 462, 464, 486], "begin": 461, "behavior": 479, "benchmark": 480, "best": [485, 486], "beta": 348, "better": 485, "between": 474, "binari": [5, 448], "bincount": 43, "binomi": 349, "bit": [3, 5, 454], "bitgener": 1, "bitwise_and": 44, "bitwise_or": 45, "bitwise_xor": 46, "black": [465, 486], "blackman": 47, "block": [48, 485], "boolean": [485, 486], "broadcast": 6, "broadcast_arrai": 49, "broadcast_shap": 50, "broadcast_to": 51, "build": [9, 462, 476], "byte": 350, "calcul": 453, "call": 482, "can": 474, "case": 473, "cbrt": 52, "ceil": 53, "ceph": 477, "certif": 461, "chang": [451, 470, 483], "chisquar": 351, "choleski": [159, 466], "choos": [54, 270], "class": 7, "clip": [55, 271], "cluster": [470, 486], "cmake": 462, "co": 64, "code": [461, 474, 483, 486], "column_stack": 56, "compact": 467, "comparison": [8, 450, 453], "complex": 452, "compress": [57, 272], "comput": 486, "concaten": 58, "conda": [476, 486], "configur": 464, "conj": [59, 273], "conjug": [60, 274, 486], "construct": 453, "content": [450, 475], "contribut": 461, "convers": 453, "convolv": [3, 61], "copi": [62, 275, 479, 485], "copysign": 63, "correl": [3, 459], "cosh": 65, "count": [3, 458], "count_nonzero": 66, "cov": 67, "coverag": 482, "cpu": [476, 486], "creation": [3, 9], "ctype": 276, "cumprod": [68, 277], "cumsum": [69, 278], "cupi": 474, "cupynumer": [1, 2, 4, 6, 8, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 449, 453, 454, 461, 474, 475, 485, 486], "data": [9, 10, 279, 447, 451, 453, 454], "datatyp": 479, "dco": 461, "decomposit": [449, 466], "default": 474, "default_rng": 352, "deg2rad": 70, "degre": 71, "delet": 72, "depend": 462, "design": 485, "detail": 482, "detect": [468, 486], "determin": 474, "develop": [461, 463], "diag": 73, "diag_indic": 74, "diag_indices_from": 75, "diagon": [76, 280], "diff": 77, "differ": [452, 467, 474, 479], "digit": 78, "dimens": [451, 471], "dimension": [8, 453], "discret": [3, 8, 11], "distribut": 454, "divid": 79, "do": [461, 474], "doctor": 457, "doctor_filenam": 457, "doctor_format": 457, "doe": 474, "doesn": 474, "don": 474, "dot": [80, 281], "dsplit": 81, "dstack": 82, "dtype": 282, "dump": [283, 284], "edg": [468, 486], "eig": 160, "eigenvalu": 3, "eigh": 161, "eigval": 162, "eigvalsh": 163, "einsum": [3, 83], "einsum_path": 84, "element": [451, 485], "elementwis": 5, "empti": 85, "empty_lik": 86, "equal": 87, "equat": 449, "error": 474, "exampl": [469, 486], "execut": [474, 478], "exercis": 470, "exist": 9, "exp": 88, "exp2": 89, "expand_dim": 90, "expm": 164, "expm1": 91, "expon": 452, "exponenti": 353, "extract": 92, "extrema": 452, "ey": 93, "f": 354, "fab": 94, "factor": 3, "fallback_stacktrac": 457, "fast_math": 457, "faster": 485, "fft": [11, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110], "fft2": 96, "fftn": 97, "fftshift": 98, "file": 448, "fill": 285, "fill_diagon": 111, "find": 452, "find_common_typ": 112, "finit": 467, "flag": 286, "flat": 287, "flatnonzero": 113, "flatten": 288, "flip": [114, 289], "fliplr": 115, "flipud": 116, "float": 452, "float_pow": 117, "floor": 118, "floor_divid": 119, "fmax": 120, "fmin": 121, "fmod": 122, "force_thunk": 457, "format": 461, "fourier": [3, 8, 11], "frequent": 474, "frexp": 123, "from": [9, 451, 462, 474, 476], "full": 124, "full_lik": 125, "function": [3, 449, 450, 452, 460, 485], "gamma": 355, "gcd": 126, "gener": [2, 447, 454, 485], "geometr": 356, "getfield": 290, "gpu": [474, 476, 486], "gradient": [127, 486], "greater": 128, "greater_equ": 129, "guid": [463, 484], "guidelin": [480, 485], "gumbel": 357, "ham": 130, "han": 131, "handl": [452, 474], "hardwar": 486, "have": 474, "helper": 11, "hermitian": 11, "hfft": 99, "histogram": [132, 459], "how": [461, 470, 474], "howto": 481, "hpc": 486, "hsplit": 133, "hstack": 134, "hyperbol": 452, "hypergeometr": 358, "hypot": 135, "i": [461, 474, 485], "ident": 136, "ifft": 100, "ifft2": 101, "ifftn": 102, "ifftshift": 103, "ihfft": 104, "imag": [137, 291], "implement": [467, 468, 470, 471], "index": [3, 447, 479, 485, 486], "indic": [138, 475], "inner": 139, "input": [3, 448, 470], "insert": 447, "instal": [476, 486], "instead": [479, 485], "introduct": 486, "invert": [140, 449], "irfft": 105, "irfft2": 106, "irfftn": 107, "isclos": 141, "iscomplex": 142, "iscomplexobj": 143, "isfinit": 144, "isinf": 145, "isnan": 146, "isneginf": 147, "isposinf": 148, "isreal": 149, "isrealobj": 150, "isscalar": 151, "item": [292, 453], "items": 294, "itemset": 293, "iter": 485, "ix_": 152, "jacobi": [472, 486], "join": 451, "jupyt": 474, "k": 470, "kaiser": 153, "kind": 451, "kit": 477, "kmean": 470, "laplac": 359, "laptop": 474, "layout": 453, "lcm": 154, "ldexp": 155, "learn": [467, 468, 470, 471], "left_shift": 156, "legales": 461, "legat": [474, 478, 480], "legion": [474, 478], "less": 157, "less_equ": 158, "let": 470, "level": 8, "licens": 476, "like": [447, 451], "linalg": [159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 449], "linear": [8, 449], "linspac": 171, "linux": 486, "list": [485, 486], "load": 172, "log": 173, "log10": 174, "log1p": 175, "log2": 176, "logaddexp": 177, "logaddexp2": 178, "logarithm": 452, "logic": [3, 450, 485], "logical_and": 179, "logical_not": 180, "logical_or": 181, "logical_xor": 182, "logist": 360, "lognorm": 361, "logseri": 362, "loop": [485, 486], "lu": 3, "make": 456, "manag": 478, "manipul": [3, 451, 453, 485], "manual": 478, "mask": [485, 486], "mask_indic": 183, "mathemat": [3, 452, 485], "matmul": 184, "matmul_cache_s": 457, "matric": [9, 449], "matrix": [3, 449, 453, 486], "matrix_pow": 165, "max": 295, "maximum": 185, "mean": [186, 296, 470, 474], "measur": 482, "median": 187, "memori": [453, 474, 485], "merg": 485, "meshgrid": 188, "method": [453, 471], "min": 297, "min_cpu_chunk": 457, "min_gpu_chunk": 457, "min_omp_chunk": 457, "minimum": 189, "miscellan": [3, 452], "mod": 190, "modf": 191, "modul": 8, "more": 474, "moveaxi": 192, "multi": [8, 478, 486], "multi_dot": 166, "multipl": [453, 486], "multipli": 193, "my": 474, "n": 453, "nanargmax": 194, "nanargmin": 195, "nancumprod": 196, "nancumsum": 197, "nanmax": 198, "nanmean": 199, "nanmedian": 200, "nanmin": 201, "nanpercentil": 202, "nanprod": 203, "nanquantil": 204, "nansum": 205, "nativ": [485, 486], "nbyte": 298, "ndarrai": [3, 4, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 453], "ndim": [299, 327], "neg": 328, "negative_binomi": 363, "newton": 471, "nextaft": 329, "node": [478, 486], "noncentral_chisquar": 364, "noncentral_f": 365, "nonzero": [300, 330], "norm": [167, 449], "normal": 366, "not_equ": 331, "notebook": 474, "notic": 477, "npy": 448, "npz": 448, "number": [449, 451, 452, 470], "numer": 9, "numpi": [8, 448, 474, 477, 479, 483, 485, 486], "numpy_compat": 457, "nvidia": 475, "o": 485, "observ": 470, "ones": 332, "ones_lik": 333, "openbla": 462, "oper": [3, 5, 447, 450, 451, 452, 453, 485, 486], "option": [465, 486], "order": [459, 479], "origin": 461, "other": [449, 453, 486], "out": 474, "outcom": [467, 468, 470, 471], "outer": 334, "output": [3, 448, 485], "overal": 482, "overhead": 485, "pack": [3, 5], "packag": 476, "packbit": 335, "pad": 3, "pareto": 367, "parti": 477, "partit": [301, 336], "pass": [474, 478], "pattern": 474, "penalti": 485, "percentil": 337, "perform": [480, 485], "pip": [462, 486], "pitfal": 485, "place": 338, "point": 452, "poisson": 368, "posit": 339, "power": [340, 369], "practic": [485, 486], "preload_cudalib": 457, "price": 465, "process": 461, "prod": [302, 341], "product": [449, 452], "program": 3, "project": 8, "proper": 456, "put": [303, 342], "put_along_axi": 343, "putmask": [344, 485], "pypi": 476, "python": 474, "qr": 168, "quantil": 345, "question": 474, "rad2deg": 346, "radian": 347, "rand": 370, "randint": 371, "randn": 372, "random": [1, 2, 3, 8, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 454, 477], "random_integ": 374, "random_sampl": 375, "ranf": 376, "rang": 9, "raphson": 471, "ration": 452, "ravel": [304, 390], "rayleigh": 377, "read": 474, "real": [11, 305, 391], "realm": [474, 478], "rearrang": 451, "reciproc": 392, "recommend": 485, "reduc": 485, "reduct": 479, "refer": 446, "relat": 3, "remaind": 393, "remov": 451, "repeat": 394, "report": 482, "report_coverag": 457, "report_dump_callstack": 457, "report_dump_csv": 457, "requir": [461, 486], "reshap": [306, 395, 485], "resourc": 486, "result": [474, 485], "return": [479, 485], "review": 461, "rfft": 108, "rfft2": 109, "rfftn": 110, "right_shift": 396, "rint": 397, "roll": 398, "rot90": 399, "round": [400, 452], "routin": [3, 9, 10, 11, 447, 451, 452, 455, 456, 485], "row_stack": 401, "run": [464, 470, 486], "sampl": [3, 8, 378, 454, 486], "scalar": 479, "scheme": 467, "schole": [465, 486], "search": [3, 458], "searchsort": [307, 402], "see": 470, "seed": [379, 454], "select": [403, 453], "set": [3, 456, 457, 470], "setfield": 308, "setflag": 309, "setup": 486, "shape": [9, 310, 404, 451, 453, 479], "sign": [405, 461], "signbit": 406, "simpl": 454, "sin": 407, "singl": 486, "sinh": 408, "size": 311, "slower": 474, "solv": [169, 449], "sort": [3, 312, 409, 458], "sort_complex": 410, "sourc": [462, 476], "special": 453, "split": [411, 451], "sqrt": 412, "squar": 413, "squeez": [313, 414], "stack": [415, 482, 485], "stage": 464, "standard": 11, "standard_cauchi": 380, "standard_exponenti": 381, "standard_gamma": 382, "standard_t": 383, "state": 454, "statist": [3, 459], "stencil": [472, 486], "stride": 314, "studi": 473, "subtract": 416, "sum": [315, 417, 452], "support": 479, "svd": [3, 170], "swapax": [316, 418], "t": [206, 474], "tabl": 475, "take": [317, 419], "take_along_axi": 420, "tan": 421, "tanh": 422, "task": [474, 478, 485], "tbli": [462, 477], "tensordot": 423, "test": [10, 450, 457, 464], "than": 474, "thi": 474, "third": 477, "three": 486, "through": [462, 485], "tile": [424, 451], "time": [474, 480], "tip": 486, "tobyt": 318, "tofil": 319, "tolist": 320, "tool": 480, "top": 486, "topic": [462, 478], "torchsw": 473, "tostr": 321, "trace": [322, 425], "transform": [3, 8, 11], "transpos": [323, 426, 451], "tri": 427, "triangular": 384, "trigonometr": 452, "tril": 428, "tril_indic": 429, "tril_indices_from": 430, "triu": 431, "triu_indic": 432, "triu_indices_from": 433, "true_divid": 434, "trunc": 435, "truth": 450, "try": 483, "tutori": 486, "two": 471, "type": [10, 450, 453], "ufunc": 3, "uniform": 385, "uniqu": [324, 436], "unpack": 3, "unpackbit": 437, "unravel_index": 438, "updat": 485, "us": [470, 474, 478, 480, 485, 486], "usag": [464, 487], "user": 484, "v": [8, 474, 486], "valu": [9, 450, 479], "var": [325, 439], "varianc": 459, "variant": [474, 476], "variou": 460, "vdot": 440, "vector": [449, 485], "verifi": 476, "version": 474, "view": [326, 479, 485], "vonmis": 386, "vsplit": 441, "vstack": 442, "wald": 387, "warn": [457, 474], "weibul": 388, "what": 474, "when": 474, "where": [443, 474], "why": 474, "window": 460, "wise": 485, "without": 483, "your": 476, "zero": 444, "zeros_lik": 445, "zipf": 389}})