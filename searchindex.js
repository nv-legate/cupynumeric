Search.setIndex({"alltitles": {"1. Use cuPyNumeric arrays, AVOID native lists": [[495, "use-cupynumeric-arrays-avoid-native-lists"]], "2. Use array-based operations, AVOID loops with indexing": [[495, "use-array-based-operations-avoid-loops-with-indexing"]], "3. Use boolean masks, AVOID advanced indexing": [[495, "use-boolean-masks-avoid-advanced-indexing"]], "API Reference": [[455, null]], "Advanced statistics": [[3, "advanced-statistics"]], "Advanced topics": [[471, "advanced-topics"], [487, null]], "Arithmetic operations": [[461, "arithmetic-operations"]], "Arithmetic, matrix multiplication, and comparison operations": [[462, "arithmetic-matrix-multiplication-and-comparison-operations"]], "Array Attributes": [[462, "array-attributes"]], "Array Manipulation Routine Pitfalls": [[494, "array-manipulation-routine-pitfalls"]], "Array Methods": [[462, "array-methods"]], "Array contents": [[459, "array-contents"]], "Array conversion": [[462, "array-conversion"]], "Array creation": [[3, "array-creation"]], "Array creation (ndarray)": [[3, "array-creation-ndarray"]], "Array creation routines": [[9, null]], "Array manipulation": [[3, "array-manipulation"]], "Array manipulation (ndarray)": [[3, "array-manipulation-ndarray"]], "Array manipulation routines": [[460, null]], "Array type testing": [[459, "array-type-testing"]], "Averages and variances": [[468, "averages-and-variances"]], "Avoid blocking operations": [[494, "avoid-blocking-operations"]], "Background": [[476, "Background"], [477, "Background"], [479, "Background"], [480, "Background"]], "Basic Linux installation": [[495, "basic-linux-installation"]], "Basic build": [[471, "basic-build"]], "Basic operations": [[460, "basic-operations"]], "Basic usage": [[473, "basic-usage"]], "Best practices": [[494, null], [495, "best-practices"]], "Binary operations": [[5, null]], "Bit Generators": [[463, "bit-generators"]], "Bit packing": [[5, "bit-packing"]], "Black-Scholes": [[495, "black-scholes"]], "Black-Scholes options pricing": [[474, null]], "Building from source": [[471, null], [485, "building-from-source"]], "Building matrices": [[9, "building-matrices"]], "Building through pip & cmake": [[471, "building-through-pip-cmake"]], "Calculation": [[462, "calculation"], [462, "id1"]], "Call stack reporting": [[491, "call-stack-reporting"]], "Cephes": [[486, "cephes"]], "Changing array shape": [[460, "changing-array-shape"]], "Changing kind of array": [[460, "changing-kind-of-array"]], "Changing number of dimensions": [[460, "changing-number-of-dimensions"]], "Cholesky decomposition": [[475, null]], "Classes": [[7, null]], "Code Formatting Requirements": [[470, "code-formatting-requirements"]], "Compact Finite Difference Scheme": [[476, null]], "Comparison": [[459, "comparison"]], "Conda": [[495, "conda"]], "Conda and GPU / CPU Variants": [[485, "conda-and-gpu-cpu-variants"]], "Conjugate gradient": [[495, "conjugate-gradient"]], "Constructing arrays": [[462, "constructing-arrays"]], "Contents:": [[484, null]], "Contributing to cuPyNumeric": [[470, null]], "Convolve and Correlate": [[3, null]], "Correlating": [[468, "correlating"]], "Counting": [[467, "counting"]], "Data Type": [[462, "data-type"]], "Data type routines": [[10, null]], "Data type testing": [[10, "data-type-testing"]], "Decompositions": [[458, "decompositions"]], "Dependencies": [[471, "dependencies"]], "Detailed coverage report": [[491, "detailed-coverage-report"]], "Developer guide": [[472, null]], "Differences with Numpy": [[488, null]], "Discrete Fourier Transform": [[8, "discrete-fourier-transform"]], "Discrete Fourier Transform (cupynumeric.fft)": [[11, null]], "Discrete Fourier transform": [[3, "discrete-fourier-transform"]], "Distributions": [[463, "distributions"]], "Edge Detection": [[477, null]], "Edge detection": [[495, "edge-detection"]], "Eigenvalues": [[3, "eigenvalues"]], "Einsum and related": [[3, "einsum-and-related"]], "Elementwise bit operations": [[5, "elementwise-bit-operations"]], "Example 1": [[495, "example-1"]], "Example 2": [[495, "example-2"]], "Examples": [[478, null], [495, "examples"]], "Exercise: Change the number of clusters and number of observations and see how the clusters change": [[479, "Exercise:-Change-the-number-of-clusters-and-number-of-observations-and-see-how-the-clusters-change"]], "Exponents and logarithms": [[461, "exponents-and-logarithms"]], "Extrema Finding": [[461, "extrema-finding"]], "Factorizations": [[3, "factorizations"]], "Faster I/O Routines": [[494, "faster-i-o-routines"]], "Floating point routines": [[461, "floating-point-routines"]], "Frequently Asked Questions": [[483, null]], "From existing data": [[9, "from-existing-data"]], "From shape or value": [[9, "from-shape-or-value"]], "Functional programming": [[3, "functional-programming"]], "General Recommendations": [[494, "general-recommendations"]], "Generating index arrays": [[456, "generating-index-arrays"]], "Guidelines for performance benchmarks": [[489, "guidelines-for-performance-benchmarks"]], "Guidelines on designing cuPyNumeric applications": [[494, "guidelines-on-designing-cupynumeric-applications"]], "Guidelines on using cuPyNumeric APIs": [[494, "guidelines-on-using-cupynumeric-apis"]], "HPC cluster installation": [[495, "hpc-cluster-installation"]], "Handling complex numbers": [[461, "handling-complex-numbers"]], "Hardware requirements": [[495, "hardware-requirements"]], "Helper routines": [[11, "helper-routines"]], "Hermitian FFTs": [[11, "hermitian-ffts"]], "Histograms": [[468, "histograms"]], "How Do I Sign the DCO?": [[470, "how-do-i-sign-the-dco"]], "How do I time the execution of my application?": [[483, "how-do-i-time-the-execution-of-my-application"]], "How do I use Jupyter Notebooks?": [[483, "how-do-i-use-jupyter-notebooks"]], "How to begin": [[470, "how-to-begin"]], "How to determine available memory?": [[483, "how-to-determine-available-memory"]], "How to handle Out-Of-Memory errors?": [[483, "how-to-handle-out-of-memory-errors"]], "How to pass Legion and Realm arguments?": [[483, "how-to-pass-legion-and-realm-arguments"]], "Howtos": [[490, null]], "Hyperbolic functions": [[461, "hyperbolic-functions"]], "Implementation": [[476, "Implementation"], [477, "Implementation"], [479, "Implementation"], [480, "Implementation"]], "Indexing": [[3, "indexing"]], "Indexing behavior": [[488, "indexing-behavior"]], "Indexing routines": [[456, null]], "Indexing-like operations": [[456, "indexing-like-operations"]], "Indices and tables": [[484, "indices-and-tables"]], "Input and output": [[3, "input-and-output"], [457, null]], "Input and output (ndarray)": [[3, "input-and-output-ndarray"]], "Inserting data into arrays": [[456, "inserting-data-into-arrays"]], "Installation": [[485, null]], "Installing Conda Packages": [[485, "installing-conda-packages"]], "Installing PyPI Packages": [[485, "installing-pypi-packages"]], "Introduction": [[495, "introduction"]], "Item selection and manipulation": [[462, "item-selection-and-manipulation"]], "Jacobi stencil": [[481, null], [495, "jacobi-stencil"]], "Joining arrays": [[460, "joining-arrays"]], "K-Means Clustering Algorithm": [[479, null]], "LU factorization and related": [[3, "lu-factorization-and-related"]], "Learning Outcomes": [[476, "Learning-Outcomes"], [477, "Learning-Outcomes"], [479, "Learning-Outcomes"], [480, "Learning-Outcomes"]], "Lets run the kmeans algorithm using a set of inputs": [[479, "Lets-run-the-kmeans-algorithm-using-a-set-of-inputs"]], "Licenses": [[485, "licenses"]], "Linear Algebra": [[8, "linear-algebra"]], "Linear algebra (cupynumeric.linalg)": [[458, null]], "Logic functions": [[459, null]], "Logic operations": [[459, "logic-operations"]], "Logical operations": [[3, "logical-operations"]], "Making proper sets": [[465, "making-proper-sets"]], "Mathematical functions": [[3, "mathematical-functions"], [461, null]], "Matrix Functions": [[458, "matrix-functions"]], "Matrix and vector products": [[458, "matrix-and-vector-products"]], "Matrix multiplication": [[495, "matrix-multiplication"]], "Measure API coverage": [[491, null]], "Memory Layout": [[462, "memory-layout"]], "Merge tasks to reduce overhead": [[494, "merge-tasks-to-reduce-overhead"]], "Miscellaneous": [[461, "miscellaneous"]], "Miscellaneous matrix routines": [[3, "miscellaneous-matrix-routines"]], "Module-Level": [[8, "module-level"]], "Multi-Dimensional Array": [[8, "multi-dimensional-array"]], "Multi-node HPC": [[495, "multi-node-hpc"]], "Multi-node execution": [[487, "multi-node-execution"]], "NVIDIA cuPyNumeric": [[484, null]], "Newton Raphson Method In Two Dimensions": [[480, null]], "Norms and other numbers": [[458, "norms-and-other-numbers"]], "NumPy": [[486, "numpy"], [495, "numpy"]], "NumPy binary files (npy, npz)": [[457, "numpy-binary-files-npy-npz"]], "NumPy vs cuPyNumeric APIs": [[8, "numpy-vs-cupynumeric-apis"]], "Numerical ranges": [[9, "numerical-ranges"]], "OpenBLAS": [[471, "openblas"]], "Order argument": [[488, "order-argument"]], "Order statistics": [[468, "order-statistics"]], "Other Attributes": [[462, "other-attributes"]], "Other options": [[495, "other-options"]], "Overall coverage report": [[491, "overall-coverage-report"]], "Packing and unpacking bits": [[3, "packing-and-unpacking-bits"]], "Padding arrays": [[3, "padding-arrays"]], "Passing Legion and Realm arguments": [[487, "passing-legion-and-realm-arguments"]], "Performance Benchmarking": [[489, null]], "Pip": [[495, "pip"]], "Project comparisons": [[8, null]], "Questions?": [[483, "questions"]], "Random Generator": [[463, "random-generator"]], "Random Kit": [[486, "random-kit"]], "Random Sampling": [[8, "random-sampling"]], "Random sampling": [[3, "random-sampling"]], "Random sampling (cupynumeric.random)": [[463, null]], "Rational routines": [[461, "rational-routines"]], "Real FFTs": [[11, "real-ffts"]], "Rearranging elements": [[460, "rearranging-elements"]], "Reductions": [[488, "reductions"]], "Removing data from arrays": [[460, "removing-data-from-arrays"]], "Reshape returns a copy instead of view": [[494, "reshape-returns-a-copy-instead-of-view"]], "Resource allocation": [[495, "resource-allocation"]], "Returning a copy instead of a view": [[488, "returning-a-copy-instead-of-a-view"]], "Review Process": [[470, "review-process"]], "Rounding": [[461, "rounding"]], "Routines": [[464, null]], "Running cuPyNumeric code": [[495, "running-cupynumeric-code"]], "Running on CPU": [[495, "running-on-cpu"], [495, "id2"], [495, "id4"], [495, "id6"]], "Running on GPU": [[495, "running-on-gpu"], [495, "id3"], [495, "id5"], [495, "id7"], [495, "id9"]], "Running on GPU cluster": [[495, "running-on-gpu-cluster"]], "Running tests": [[473, null]], "SVD and related": [[3, "svd-and-related"]], "Sample Code": [[495, "sample-code"], [495, "id8"]], "Sample computation": [[495, "sample-computation"]], "Scalar return values": [[488, "scalar-return-values"]], "Searching": [[467, "searching"]], "Searching, sorting, and counting": [[3, "searching-sorting-and-counting"]], "Seeding and State": [[463, "seeding-and-state"]], "Set operations": [[3, "set-operations"]], "Set routines": [[465, null]], "Settings": [[466, null]], "Shape manipulation": [[462, "shape-manipulation"]], "Simple random data": [[463, "simple-random-data"]], "Single node": [[495, "single-node"]], "Single-node setup": [[495, "single-node-setup"]], "Solving equations and inverting matrices": [[458, "solving-equations-and-inverting-matrices"]], "Sorting": [[467, "sorting"]], "Sorting, searching, and counting": [[467, null]], "Special methods": [[462, "special-methods"]], "Splitting arrays": [[460, "splitting-arrays"]], "Stack results in a performance penalty": [[494, "stack-results-in-a-performance-penalty"]], "Stage configuration": [[473, "stage-configuration"]], "Standard FFTs": [[11, "standard-ffts"]], "Statistics": [[468, null]], "Sums, products, differences": [[461, "sums-products-differences"]], "Supported shapes and datatypes": [[488, "supported-shapes-and-datatypes"]], "TBLIS": [[471, "tblis"], [486, "tblis"]], "The Legalese: Developer Certificate of Origin": [[470, "the-legalese-developer-certificate-of-origin"]], "The N-Dimensional array (cupynumeric.ndarray)": [[462, null]], "Third-party notices": [[486, null]], "Tiling arrays": [[460, "tiling-arrays"]], "Top three Tips": [[495, "top-three-tips"]], "TorchSWE case study": [[482, null]], "Transpose-like operations": [[460, "transpose-like-operations"]], "Trigonometric functions": [[461, "trigonometric-functions"]], "Truth value testing": [[459, "truth-value-testing"]], "Trying Numpy code without changes": [[492, null]], "Tutorial": [[495, null]], "Ufuncs": [[3, "ufuncs"]], "Usage": [[496, null]], "Use array-based operations, AVOID loops with indexing": [[494, "use-array-based-operations-avoid-loops-with-indexing"]], "Use boolean masks, AVOID advanced indexing": [[494, "use-boolean-masks-avoid-advanced-indexing"]], "Use cuPyNumeric or NumPy arrays, AVOID native lists": [[494, "use-cupynumeric-or-numpy-arrays-avoid-native-lists"]], "Use logic functions, AVOID iterating through a loop": [[494, "use-logic-functions-avoid-iterating-through-a-loop"]], "Use mathematical functions, AVOID element-wise loops": [[494, "use-mathematical-functions-avoid-element-wise-loops"]], "Use output arguments to reduce memory allocation": [[494, "use-output-arguments-to-reduce-memory-allocation"]], "Use putmask to update an array based on another array": [[494, "use-putmask-to-update-an-array-based-on-another-array"]], "User guide": [[493, null]], "Using Legate timing tools": [[489, "using-legate-timing-tools"]], "Using a manual task manager": [[487, "using-a-manual-task-manager"]], "Using legate": [[487, "using-legate"]], "Various windows": [[469, "various-windows"]], "Vectorize for better performance": [[494, "vectorize-for-better-performance"]], "Verify your Installation": [[485, "verify-your-installation"]], "What are the anti-patterns in a NumPy code?": [[483, "what-are-the-anti-patterns-in-a-numpy-code"]], "What are the defaults?": [[483, "what-are-the-defaults"]], "What are the different task variants available in Legate?": [[483, "what-are-the-different-task-variants-available-in-legate"]], "What does this warning mean?": [[483, "what-does-this-warning-mean"]], "What if I don\u2019t have a GPU?": [[483, "what-if-i-dont-have-a-gpu"]], "What is the difference between Legate and cuPyNumeric?": [[483, "what-is-the-difference-between-legate-and-cupynumeric"]], "What is the version of legate?": [[483, "what-is-the-version-of-legate"]], "When to use python vs legate?": [[483, "when-to-use-python-vs-legate"]], "Where I can read more about cuPyNumeric?": [[483, "where-i-can-read-more-about-cupynumeric"]], "Why are the results different from NumPy?": [[483, "why-are-the-results-different-from-numpy"]], "Why doesn\u2019t Legate use my GPU?": [[483, "why-doesnt-legate-use-my-gpu"]], "Why is cuPyNumeric slower than CuPy on my laptop?": [[483, "why-is-cupynumeric-slower-than-cupy-on-my-laptop"]], "Why is cuPyNumeric slower than NumPy on my laptop?": [[483, "why-is-cupynumeric-slower-than-numpy-on-my-laptop"]], "Window functions": [[469, null]], "cuPyNumeric": [[495, "cupynumeric"]], "cuPyNumeric vs NumPy": [[495, "cupynumeric-vs-numpy"]], "cupynumeric.absolute": [[12, null]], "cupynumeric.add": [[13, null]], "cupynumeric.all": [[14, null]], "cupynumeric.allclose": [[15, null]], "cupynumeric.amax": [[16, null]], "cupynumeric.amin": [[17, null]], "cupynumeric.angle": [[18, null]], "cupynumeric.any": [[19, null]], "cupynumeric.append": [[20, null]], "cupynumeric.arange": [[21, null]], "cupynumeric.arccos": [[22, null]], "cupynumeric.arccosh": [[23, null]], "cupynumeric.arcsin": [[24, null]], "cupynumeric.arcsinh": [[25, null]], "cupynumeric.arctan": [[26, null]], "cupynumeric.arctan2": [[27, null]], "cupynumeric.arctanh": [[28, null]], "cupynumeric.argmax": [[29, null]], "cupynumeric.argmin": [[30, null]], "cupynumeric.argpartition": [[31, null]], "cupynumeric.argsort": [[32, null]], "cupynumeric.argwhere": [[33, null]], "cupynumeric.array": [[34, null]], "cupynumeric.array_equal": [[35, null]], "cupynumeric.array_split": [[36, null]], "cupynumeric.asarray": [[37, null]], "cupynumeric.atleast_1d": [[38, null]], "cupynumeric.atleast_2d": [[39, null]], "cupynumeric.atleast_3d": [[40, null]], "cupynumeric.average": [[41, null]], "cupynumeric.bartlett": [[42, null]], "cupynumeric.bincount": [[43, null]], "cupynumeric.bitwise_and": [[44, null]], "cupynumeric.bitwise_or": [[45, null]], "cupynumeric.bitwise_xor": [[46, null]], "cupynumeric.blackman": [[47, null]], "cupynumeric.block": [[48, null]], "cupynumeric.broadcast": [[6, null]], "cupynumeric.broadcast_arrays": [[49, null]], "cupynumeric.broadcast_shapes": [[50, null]], "cupynumeric.broadcast_to": [[51, null]], "cupynumeric.cbrt": [[52, null]], "cupynumeric.ceil": [[53, null]], "cupynumeric.choose": [[54, null]], "cupynumeric.clip": [[55, null]], "cupynumeric.column_stack": [[56, null]], "cupynumeric.compress": [[57, null]], "cupynumeric.concatenate": [[58, null]], "cupynumeric.conj": [[59, null]], "cupynumeric.conjugate": [[60, null]], "cupynumeric.convolve": [[61, null]], "cupynumeric.copy": [[62, null]], "cupynumeric.copysign": [[63, null]], "cupynumeric.copyto": [[64, null]], "cupynumeric.cos": [[65, null]], "cupynumeric.cosh": [[66, null]], "cupynumeric.count_nonzero": [[67, null]], "cupynumeric.cov": [[68, null]], "cupynumeric.cross": [[69, null]], "cupynumeric.cumprod": [[70, null]], "cupynumeric.cumsum": [[71, null]], "cupynumeric.deg2rad": [[72, null]], "cupynumeric.degrees": [[73, null]], "cupynumeric.delete": [[74, null]], "cupynumeric.diag": [[75, null]], "cupynumeric.diag_indices": [[76, null]], "cupynumeric.diag_indices_from": [[77, null]], "cupynumeric.diagflat": [[78, null]], "cupynumeric.diagonal": [[79, null]], "cupynumeric.diff": [[80, null]], "cupynumeric.digitize": [[81, null]], "cupynumeric.divide": [[82, null]], "cupynumeric.dot": [[83, null]], "cupynumeric.dsplit": [[84, null]], "cupynumeric.dstack": [[85, null]], "cupynumeric.einsum": [[86, null]], "cupynumeric.einsum_path": [[87, null]], "cupynumeric.empty": [[88, null]], "cupynumeric.empty_like": [[89, null]], "cupynumeric.equal": [[90, null]], "cupynumeric.exp": [[91, null]], "cupynumeric.exp2": [[92, null]], "cupynumeric.expand_dims": [[93, null]], "cupynumeric.expm1": [[94, null]], "cupynumeric.extract": [[95, null]], "cupynumeric.eye": [[96, null]], "cupynumeric.fabs": [[97, null]], "cupynumeric.fft.fft": [[98, null]], "cupynumeric.fft.fft2": [[99, null]], "cupynumeric.fft.fftn": [[100, null]], "cupynumeric.fft.fftshift": [[101, null]], "cupynumeric.fft.hfft": [[102, null]], "cupynumeric.fft.ifft": [[103, null]], "cupynumeric.fft.ifft2": [[104, null]], "cupynumeric.fft.ifftn": [[105, null]], "cupynumeric.fft.ifftshift": [[106, null]], "cupynumeric.fft.ihfft": [[107, null]], "cupynumeric.fft.irfft": [[108, null]], "cupynumeric.fft.irfft2": [[109, null]], "cupynumeric.fft.irfftn": [[110, null]], "cupynumeric.fft.rfft": [[111, null]], "cupynumeric.fft.rfft2": [[112, null]], "cupynumeric.fft.rfftn": [[113, null]], "cupynumeric.fill_diagonal": [[114, null]], "cupynumeric.find_common_type": [[115, null]], "cupynumeric.flatnonzero": [[116, null]], "cupynumeric.flip": [[117, null]], "cupynumeric.fliplr": [[118, null]], "cupynumeric.flipud": [[119, null]], "cupynumeric.float_power": [[120, null]], "cupynumeric.floor": [[121, null]], "cupynumeric.floor_divide": [[122, null]], "cupynumeric.fmax": [[123, null]], "cupynumeric.fmin": [[124, null]], "cupynumeric.fmod": [[125, null]], "cupynumeric.frexp": [[126, null]], "cupynumeric.full": [[127, null]], "cupynumeric.full_like": [[128, null]], "cupynumeric.gcd": [[129, null]], "cupynumeric.gradient": [[130, null]], "cupynumeric.greater": [[131, null]], "cupynumeric.greater_equal": [[132, null]], "cupynumeric.hamming": [[133, null]], "cupynumeric.hanning": [[134, null]], "cupynumeric.histogram": [[135, null]], "cupynumeric.hsplit": [[136, null]], "cupynumeric.hstack": [[137, null]], "cupynumeric.hypot": [[138, null]], "cupynumeric.identity": [[139, null]], "cupynumeric.imag": [[140, null]], "cupynumeric.indices": [[141, null]], "cupynumeric.inner": [[142, null]], "cupynumeric.insert": [[143, null]], "cupynumeric.invert": [[144, null]], "cupynumeric.isclose": [[145, null]], "cupynumeric.iscomplex": [[146, null]], "cupynumeric.iscomplexobj": [[147, null]], "cupynumeric.isfinite": [[148, null]], "cupynumeric.isinf": [[149, null]], "cupynumeric.isnan": [[150, null]], "cupynumeric.isneginf": [[151, null]], "cupynumeric.isposinf": [[152, null]], "cupynumeric.isreal": [[153, null]], "cupynumeric.isrealobj": [[154, null]], "cupynumeric.isscalar": [[155, null]], "cupynumeric.ix_": [[156, null]], "cupynumeric.kaiser": [[157, null]], "cupynumeric.lcm": [[158, null]], "cupynumeric.ldexp": [[159, null]], "cupynumeric.left_shift": [[160, null]], "cupynumeric.less": [[161, null]], "cupynumeric.less_equal": [[162, null]], "cupynumeric.linalg.cholesky": [[163, null]], "cupynumeric.linalg.eig": [[164, null]], "cupynumeric.linalg.eigh": [[165, null]], "cupynumeric.linalg.eigvals": [[166, null]], "cupynumeric.linalg.eigvalsh": [[167, null]], "cupynumeric.linalg.expm": [[168, null]], "cupynumeric.linalg.matrix_power": [[169, null]], "cupynumeric.linalg.multi_dot": [[170, null]], "cupynumeric.linalg.norm": [[171, null]], "cupynumeric.linalg.qr": [[172, null]], "cupynumeric.linalg.solve": [[173, null]], "cupynumeric.linalg.svd": [[174, null]], "cupynumeric.linspace": [[175, null]], "cupynumeric.load": [[176, null]], "cupynumeric.log": [[177, null]], "cupynumeric.log10": [[178, null]], "cupynumeric.log1p": [[179, null]], "cupynumeric.log2": [[180, null]], "cupynumeric.logaddexp": [[181, null]], "cupynumeric.logaddexp2": [[182, null]], "cupynumeric.logical_and": [[183, null]], "cupynumeric.logical_not": [[184, null]], "cupynumeric.logical_or": [[185, null]], "cupynumeric.logical_xor": [[186, null]], "cupynumeric.logspace": [[187, null]], "cupynumeric.mask_indices": [[188, null]], "cupynumeric.matmul": [[189, null]], "cupynumeric.maximum": [[190, null]], "cupynumeric.mean": [[191, null]], "cupynumeric.median": [[192, null]], "cupynumeric.meshgrid": [[193, null]], "cupynumeric.minimum": [[194, null]], "cupynumeric.mod": [[195, null]], "cupynumeric.modf": [[196, null]], "cupynumeric.moveaxis": [[197, null]], "cupynumeric.multiply": [[198, null]], "cupynumeric.nan_to_num": [[199, null]], "cupynumeric.nanargmax": [[200, null]], "cupynumeric.nanargmin": [[201, null]], "cupynumeric.nancumprod": [[202, null]], "cupynumeric.nancumsum": [[203, null]], "cupynumeric.nanmax": [[204, null]], "cupynumeric.nanmean": [[205, null]], "cupynumeric.nanmedian": [[206, null]], "cupynumeric.nanmin": [[207, null]], "cupynumeric.nanpercentile": [[208, null]], "cupynumeric.nanprod": [[209, null]], "cupynumeric.nanquantile": [[210, null]], "cupynumeric.nansum": [[211, null]], "cupynumeric.ndarray": [[4, null]], "cupynumeric.ndarray.T": [[212, null]], "cupynumeric.ndarray.__abs__": [[213, null]], "cupynumeric.ndarray.__add__": [[214, null]], "cupynumeric.ndarray.__and__": [[215, null]], "cupynumeric.ndarray.__array__": [[216, null]], "cupynumeric.ndarray.__bool__": [[217, null]], "cupynumeric.ndarray.__complex__": [[218, null]], "cupynumeric.ndarray.__contains__": [[219, null]], "cupynumeric.ndarray.__copy__": [[220, null]], "cupynumeric.ndarray.__deepcopy__": [[221, null]], "cupynumeric.ndarray.__divmod__": [[222, null]], "cupynumeric.ndarray.__eq__": [[223, null]], "cupynumeric.ndarray.__float__": [[224, null]], "cupynumeric.ndarray.__floordiv__": [[225, null]], "cupynumeric.ndarray.__ge__": [[226, null]], "cupynumeric.ndarray.__getitem__": [[227, null]], "cupynumeric.ndarray.__gt__": [[228, null]], "cupynumeric.ndarray.__iadd__": [[229, null]], "cupynumeric.ndarray.__iand__": [[230, null]], "cupynumeric.ndarray.__ifloordiv__": [[231, null]], "cupynumeric.ndarray.__ilshift__": [[232, null]], "cupynumeric.ndarray.__imatmul__": [[233, null]], "cupynumeric.ndarray.__imod__": [[234, null]], "cupynumeric.ndarray.__imul__": [[235, null]], "cupynumeric.ndarray.__index__": [[236, null]], "cupynumeric.ndarray.__int__": [[237, null]], "cupynumeric.ndarray.__invert__": [[238, null]], "cupynumeric.ndarray.__ior__": [[239, null]], "cupynumeric.ndarray.__ipow__": [[240, null]], "cupynumeric.ndarray.__irshift__": [[241, null]], "cupynumeric.ndarray.__isub__": [[242, null]], "cupynumeric.ndarray.__itruediv__": [[243, null]], "cupynumeric.ndarray.__ixor__": [[244, null]], "cupynumeric.ndarray.__le__": [[245, null]], "cupynumeric.ndarray.__len__": [[246, null]], "cupynumeric.ndarray.__lshift__": [[247, null]], "cupynumeric.ndarray.__lt__": [[248, null]], "cupynumeric.ndarray.__matmul__": [[249, null]], "cupynumeric.ndarray.__mod__": [[250, null]], "cupynumeric.ndarray.__mul__": [[251, null]], "cupynumeric.ndarray.__ne__": [[252, null]], "cupynumeric.ndarray.__neg__": [[253, null]], "cupynumeric.ndarray.__new__": [[254, null]], "cupynumeric.ndarray.__or__": [[255, null]], "cupynumeric.ndarray.__pos__": [[256, null]], "cupynumeric.ndarray.__pow__": [[257, null]], "cupynumeric.ndarray.__reduce__": [[258, null]], "cupynumeric.ndarray.__repr__": [[259, null]], "cupynumeric.ndarray.__rmatmul__": [[260, null]], "cupynumeric.ndarray.__rshift__": [[261, null]], "cupynumeric.ndarray.__setitem__": [[262, null]], "cupynumeric.ndarray.__setstate__": [[263, null]], "cupynumeric.ndarray.__str__": [[264, null]], "cupynumeric.ndarray.__sub__": [[265, null]], "cupynumeric.ndarray.__truediv__": [[266, null]], "cupynumeric.ndarray.__xor__": [[267, null]], "cupynumeric.ndarray.all": [[268, null]], "cupynumeric.ndarray.any": [[269, null]], "cupynumeric.ndarray.argmax": [[270, null]], "cupynumeric.ndarray.argmin": [[271, null]], "cupynumeric.ndarray.argpartition": [[272, null]], "cupynumeric.ndarray.argsort": [[273, null]], "cupynumeric.ndarray.astype": [[274, null]], "cupynumeric.ndarray.base": [[275, null]], "cupynumeric.ndarray.choose": [[276, null]], "cupynumeric.ndarray.clip": [[277, null]], "cupynumeric.ndarray.compress": [[278, null]], "cupynumeric.ndarray.conj": [[279, null]], "cupynumeric.ndarray.conjugate": [[280, null]], "cupynumeric.ndarray.copy": [[281, null]], "cupynumeric.ndarray.ctypes": [[282, null]], "cupynumeric.ndarray.cumprod": [[283, null]], "cupynumeric.ndarray.cumsum": [[284, null]], "cupynumeric.ndarray.data": [[285, null]], "cupynumeric.ndarray.diagonal": [[286, null]], "cupynumeric.ndarray.dot": [[287, null]], "cupynumeric.ndarray.dtype": [[288, null]], "cupynumeric.ndarray.dump": [[289, null]], "cupynumeric.ndarray.dumps": [[290, null]], "cupynumeric.ndarray.fill": [[291, null]], "cupynumeric.ndarray.flags": [[292, null]], "cupynumeric.ndarray.flat": [[293, null]], "cupynumeric.ndarray.flatten": [[294, null]], "cupynumeric.ndarray.flip": [[295, null]], "cupynumeric.ndarray.getfield": [[296, null]], "cupynumeric.ndarray.imag": [[297, null]], "cupynumeric.ndarray.item": [[298, null]], "cupynumeric.ndarray.itemset": [[299, null]], "cupynumeric.ndarray.itemsize": [[300, null]], "cupynumeric.ndarray.max": [[301, null]], "cupynumeric.ndarray.mean": [[302, null]], "cupynumeric.ndarray.min": [[303, null]], "cupynumeric.ndarray.nbytes": [[304, null]], "cupynumeric.ndarray.ndim": [[305, null]], "cupynumeric.ndarray.nonzero": [[306, null]], "cupynumeric.ndarray.partition": [[307, null]], "cupynumeric.ndarray.prod": [[308, null]], "cupynumeric.ndarray.put": [[309, null]], "cupynumeric.ndarray.ravel": [[310, null]], "cupynumeric.ndarray.real": [[311, null]], "cupynumeric.ndarray.reshape": [[312, null]], "cupynumeric.ndarray.searchsorted": [[313, null]], "cupynumeric.ndarray.setfield": [[314, null]], "cupynumeric.ndarray.setflags": [[315, null]], "cupynumeric.ndarray.shape": [[316, null]], "cupynumeric.ndarray.size": [[317, null]], "cupynumeric.ndarray.sort": [[318, null]], "cupynumeric.ndarray.squeeze": [[319, null]], "cupynumeric.ndarray.strides": [[320, null]], "cupynumeric.ndarray.sum": [[321, null]], "cupynumeric.ndarray.swapaxes": [[322, null]], "cupynumeric.ndarray.take": [[323, null]], "cupynumeric.ndarray.tobytes": [[324, null]], "cupynumeric.ndarray.tofile": [[325, null]], "cupynumeric.ndarray.tolist": [[326, null]], "cupynumeric.ndarray.tostring": [[327, null]], "cupynumeric.ndarray.trace": [[328, null]], "cupynumeric.ndarray.transpose": [[329, null]], "cupynumeric.ndarray.unique": [[330, null]], "cupynumeric.ndarray.var": [[331, null]], "cupynumeric.ndarray.view": [[332, null]], "cupynumeric.ndim": [[333, null]], "cupynumeric.negative": [[334, null]], "cupynumeric.nextafter": [[335, null]], "cupynumeric.nonzero": [[336, null]], "cupynumeric.not_equal": [[337, null]], "cupynumeric.ones": [[338, null]], "cupynumeric.ones_like": [[339, null]], "cupynumeric.outer": [[340, null]], "cupynumeric.packbits": [[341, null]], "cupynumeric.partition": [[342, null]], "cupynumeric.percentile": [[343, null]], "cupynumeric.place": [[344, null]], "cupynumeric.positive": [[345, null]], "cupynumeric.power": [[346, null]], "cupynumeric.prod": [[347, null]], "cupynumeric.put": [[348, null]], "cupynumeric.put_along_axis": [[349, null]], "cupynumeric.putmask": [[350, null]], "cupynumeric.quantile": [[351, null]], "cupynumeric.rad2deg": [[352, null]], "cupynumeric.radians": [[353, null]], "cupynumeric.random.BitGenerator": [[1, null]], "cupynumeric.random.Generator": [[2, null]], "cupynumeric.random.beta": [[354, null]], "cupynumeric.random.binomial": [[355, null]], "cupynumeric.random.bytes": [[356, null]], "cupynumeric.random.chisquare": [[357, null]], "cupynumeric.random.default_rng": [[358, null]], "cupynumeric.random.exponential": [[359, null]], "cupynumeric.random.f": [[360, null]], "cupynumeric.random.gamma": [[361, null]], "cupynumeric.random.geometric": [[362, null]], "cupynumeric.random.gumbel": [[363, null]], "cupynumeric.random.hypergeometric": [[364, null]], "cupynumeric.random.laplace": [[365, null]], "cupynumeric.random.logistic": [[366, null]], "cupynumeric.random.lognormal": [[367, null]], "cupynumeric.random.logseries": [[368, null]], "cupynumeric.random.negative_binomial": [[369, null]], "cupynumeric.random.noncentral_chisquare": [[370, null]], "cupynumeric.random.noncentral_f": [[371, null]], "cupynumeric.random.normal": [[372, null]], "cupynumeric.random.pareto": [[373, null]], "cupynumeric.random.poisson": [[374, null]], "cupynumeric.random.power": [[375, null]], "cupynumeric.random.rand": [[376, null]], "cupynumeric.random.randint": [[377, null]], "cupynumeric.random.randn": [[378, null]], "cupynumeric.random.random": [[379, null]], "cupynumeric.random.random_integers": [[380, null]], "cupynumeric.random.random_sample": [[381, null]], "cupynumeric.random.ranf": [[382, null]], "cupynumeric.random.rayleigh": [[383, null]], "cupynumeric.random.sample": [[384, null]], "cupynumeric.random.seed": [[385, null]], "cupynumeric.random.standard_cauchy": [[386, null]], "cupynumeric.random.standard_exponential": [[387, null]], "cupynumeric.random.standard_gamma": [[388, null]], "cupynumeric.random.standard_t": [[389, null]], "cupynumeric.random.triangular": [[390, null]], "cupynumeric.random.uniform": [[391, null]], "cupynumeric.random.vonmises": [[392, null]], "cupynumeric.random.wald": [[393, null]], "cupynumeric.random.weibull": [[394, null]], "cupynumeric.random.zipf": [[395, null]], "cupynumeric.ravel": [[396, null]], "cupynumeric.ravel_multi_index": [[397, null]], "cupynumeric.real": [[398, null]], "cupynumeric.real_if_close": [[399, null]], "cupynumeric.reciprocal": [[400, null]], "cupynumeric.remainder": [[401, null]], "cupynumeric.repeat": [[402, null]], "cupynumeric.reshape": [[403, null]], "cupynumeric.right_shift": [[404, null]], "cupynumeric.rint": [[405, null]], "cupynumeric.roll": [[406, null]], "cupynumeric.roots": [[407, null]], "cupynumeric.rot90": [[408, null]], "cupynumeric.round": [[409, null]], "cupynumeric.row_stack": [[410, null]], "cupynumeric.searchsorted": [[411, null]], "cupynumeric.select": [[412, null]], "cupynumeric.shape": [[413, null]], "cupynumeric.sign": [[414, null]], "cupynumeric.signbit": [[415, null]], "cupynumeric.sin": [[416, null]], "cupynumeric.sinh": [[417, null]], "cupynumeric.sort": [[418, null]], "cupynumeric.sort_complex": [[419, null]], "cupynumeric.split": [[420, null]], "cupynumeric.sqrt": [[421, null]], "cupynumeric.square": [[422, null]], "cupynumeric.squeeze": [[423, null]], "cupynumeric.stack": [[424, null]], "cupynumeric.subtract": [[425, null]], "cupynumeric.sum": [[426, null]], "cupynumeric.swapaxes": [[427, null]], "cupynumeric.take": [[428, null]], "cupynumeric.take_along_axis": [[429, null]], "cupynumeric.tan": [[430, null]], "cupynumeric.tanh": [[431, null]], "cupynumeric.tensordot": [[432, null]], "cupynumeric.tile": [[433, null]], "cupynumeric.trace": [[434, null]], "cupynumeric.transpose": [[435, null]], "cupynumeric.tri": [[436, null]], "cupynumeric.tril": [[437, null]], "cupynumeric.tril_indices": [[438, null]], "cupynumeric.tril_indices_from": [[439, null]], "cupynumeric.triu": [[440, null]], "cupynumeric.triu_indices": [[441, null]], "cupynumeric.triu_indices_from": [[442, null]], "cupynumeric.true_divide": [[443, null]], "cupynumeric.trunc": [[444, null]], "cupynumeric.unique": [[445, null]], "cupynumeric.unpackbits": [[446, null]], "cupynumeric.unravel_index": [[447, null]], "cupynumeric.var": [[448, null]], "cupynumeric.vdot": [[449, null]], "cupynumeric.vsplit": [[450, null]], "cupynumeric.vstack": [[451, null]], "cupynumeric.where": [[452, null]], "cupynumeric.zeros": [[453, null]], "cupynumeric.zeros_like": [[454, null]], "doctor": [[466, "doctor"]], "doctor_filename": [[466, "doctor-filename"], [466, "id2"]], "doctor_format": [[466, "doctor-format"]], "fallback_stacktrace": [[466, "fallback-stacktrace"]], "fast_math": [[466, "fast-math"]], "force_thunk": [[466, "force-thunk"]], "matmul_cache_size": [[466, "matmul-cache-size"]], "min_cpu_chunk": [[466, "min-cpu-chunk"]], "min_gpu_chunk": [[466, "min-gpu-chunk"]], "min_omp_chunk": [[466, "min-omp-chunk"]], "numpy_compat": [[466, "numpy-compat"]], "preload_cudalibs": [[466, "preload-cudalibs"]], "report_coverage": [[466, "report-coverage"]], "report_dump_callstack": [[466, "report-dump-callstack"]], "report_dump_csv": [[466, "report-dump-csv"]], "test": [[466, "test"]], "warn": [[466, "warn"]]}, "docnames": ["_implemented", "api/_bitgenerator", "api/_generator", "api/_grouped", "api/_ndarray", "api/binary", "api/broadcast", "api/classes", "api/comparison", "api/creation", "api/datatype", "api/fft", "api/generated/cupynumeric.absolute", "api/generated/cupynumeric.add", "api/generated/cupynumeric.all", "api/generated/cupynumeric.allclose", "api/generated/cupynumeric.amax", "api/generated/cupynumeric.amin", "api/generated/cupynumeric.angle", "api/generated/cupynumeric.any", "api/generated/cupynumeric.append", "api/generated/cupynumeric.arange", "api/generated/cupynumeric.arccos", "api/generated/cupynumeric.arccosh", "api/generated/cupynumeric.arcsin", "api/generated/cupynumeric.arcsinh", "api/generated/cupynumeric.arctan", "api/generated/cupynumeric.arctan2", "api/generated/cupynumeric.arctanh", "api/generated/cupynumeric.argmax", "api/generated/cupynumeric.argmin", "api/generated/cupynumeric.argpartition", "api/generated/cupynumeric.argsort", "api/generated/cupynumeric.argwhere", "api/generated/cupynumeric.array", "api/generated/cupynumeric.array_equal", "api/generated/cupynumeric.array_split", "api/generated/cupynumeric.asarray", "api/generated/cupynumeric.atleast_1d", "api/generated/cupynumeric.atleast_2d", "api/generated/cupynumeric.atleast_3d", "api/generated/cupynumeric.average", "api/generated/cupynumeric.bartlett", "api/generated/cupynumeric.bincount", "api/generated/cupynumeric.bitwise_and", "api/generated/cupynumeric.bitwise_or", "api/generated/cupynumeric.bitwise_xor", "api/generated/cupynumeric.blackman", "api/generated/cupynumeric.block", "api/generated/cupynumeric.broadcast_arrays", "api/generated/cupynumeric.broadcast_shapes", "api/generated/cupynumeric.broadcast_to", "api/generated/cupynumeric.cbrt", "api/generated/cupynumeric.ceil", "api/generated/cupynumeric.choose", "api/generated/cupynumeric.clip", "api/generated/cupynumeric.column_stack", "api/generated/cupynumeric.compress", "api/generated/cupynumeric.concatenate", "api/generated/cupynumeric.conj", "api/generated/cupynumeric.conjugate", "api/generated/cupynumeric.convolve", "api/generated/cupynumeric.copy", "api/generated/cupynumeric.copysign", "api/generated/cupynumeric.copyto", "api/generated/cupynumeric.cos", "api/generated/cupynumeric.cosh", "api/generated/cupynumeric.count_nonzero", "api/generated/cupynumeric.cov", "api/generated/cupynumeric.cross", "api/generated/cupynumeric.cumprod", "api/generated/cupynumeric.cumsum", "api/generated/cupynumeric.deg2rad", "api/generated/cupynumeric.degrees", "api/generated/cupynumeric.delete", "api/generated/cupynumeric.diag", "api/generated/cupynumeric.diag_indices", "api/generated/cupynumeric.diag_indices_from", "api/generated/cupynumeric.diagflat", "api/generated/cupynumeric.diagonal", "api/generated/cupynumeric.diff", "api/generated/cupynumeric.digitize", "api/generated/cupynumeric.divide", "api/generated/cupynumeric.dot", "api/generated/cupynumeric.dsplit", "api/generated/cupynumeric.dstack", "api/generated/cupynumeric.einsum", "api/generated/cupynumeric.einsum_path", "api/generated/cupynumeric.empty", "api/generated/cupynumeric.empty_like", "api/generated/cupynumeric.equal", "api/generated/cupynumeric.exp", "api/generated/cupynumeric.exp2", "api/generated/cupynumeric.expand_dims", "api/generated/cupynumeric.expm1", "api/generated/cupynumeric.extract", "api/generated/cupynumeric.eye", "api/generated/cupynumeric.fabs", "api/generated/cupynumeric.fft.fft", "api/generated/cupynumeric.fft.fft2", "api/generated/cupynumeric.fft.fftn", "api/generated/cupynumeric.fft.fftshift", "api/generated/cupynumeric.fft.hfft", "api/generated/cupynumeric.fft.ifft", "api/generated/cupynumeric.fft.ifft2", "api/generated/cupynumeric.fft.ifftn", "api/generated/cupynumeric.fft.ifftshift", "api/generated/cupynumeric.fft.ihfft", "api/generated/cupynumeric.fft.irfft", "api/generated/cupynumeric.fft.irfft2", "api/generated/cupynumeric.fft.irfftn", "api/generated/cupynumeric.fft.rfft", "api/generated/cupynumeric.fft.rfft2", "api/generated/cupynumeric.fft.rfftn", "api/generated/cupynumeric.fill_diagonal", "api/generated/cupynumeric.find_common_type", "api/generated/cupynumeric.flatnonzero", "api/generated/cupynumeric.flip", "api/generated/cupynumeric.fliplr", "api/generated/cupynumeric.flipud", "api/generated/cupynumeric.float_power", "api/generated/cupynumeric.floor", "api/generated/cupynumeric.floor_divide", "api/generated/cupynumeric.fmax", "api/generated/cupynumeric.fmin", "api/generated/cupynumeric.fmod", "api/generated/cupynumeric.frexp", "api/generated/cupynumeric.full", "api/generated/cupynumeric.full_like", "api/generated/cupynumeric.gcd", "api/generated/cupynumeric.gradient", "api/generated/cupynumeric.greater", "api/generated/cupynumeric.greater_equal", "api/generated/cupynumeric.hamming", "api/generated/cupynumeric.hanning", "api/generated/cupynumeric.histogram", "api/generated/cupynumeric.hsplit", "api/generated/cupynumeric.hstack", "api/generated/cupynumeric.hypot", "api/generated/cupynumeric.identity", "api/generated/cupynumeric.imag", "api/generated/cupynumeric.indices", "api/generated/cupynumeric.inner", "api/generated/cupynumeric.insert", "api/generated/cupynumeric.invert", "api/generated/cupynumeric.isclose", "api/generated/cupynumeric.iscomplex", "api/generated/cupynumeric.iscomplexobj", "api/generated/cupynumeric.isfinite", "api/generated/cupynumeric.isinf", "api/generated/cupynumeric.isnan", "api/generated/cupynumeric.isneginf", "api/generated/cupynumeric.isposinf", "api/generated/cupynumeric.isreal", "api/generated/cupynumeric.isrealobj", "api/generated/cupynumeric.isscalar", "api/generated/cupynumeric.ix_", "api/generated/cupynumeric.kaiser", "api/generated/cupynumeric.lcm", "api/generated/cupynumeric.ldexp", "api/generated/cupynumeric.left_shift", "api/generated/cupynumeric.less", "api/generated/cupynumeric.less_equal", "api/generated/cupynumeric.linalg.cholesky", "api/generated/cupynumeric.linalg.eig", "api/generated/cupynumeric.linalg.eigh", "api/generated/cupynumeric.linalg.eigvals", "api/generated/cupynumeric.linalg.eigvalsh", "api/generated/cupynumeric.linalg.expm", "api/generated/cupynumeric.linalg.matrix_power", "api/generated/cupynumeric.linalg.multi_dot", "api/generated/cupynumeric.linalg.norm", "api/generated/cupynumeric.linalg.qr", "api/generated/cupynumeric.linalg.solve", "api/generated/cupynumeric.linalg.svd", "api/generated/cupynumeric.linspace", "api/generated/cupynumeric.load", "api/generated/cupynumeric.log", "api/generated/cupynumeric.log10", "api/generated/cupynumeric.log1p", "api/generated/cupynumeric.log2", "api/generated/cupynumeric.logaddexp", "api/generated/cupynumeric.logaddexp2", "api/generated/cupynumeric.logical_and", "api/generated/cupynumeric.logical_not", "api/generated/cupynumeric.logical_or", "api/generated/cupynumeric.logical_xor", "api/generated/cupynumeric.logspace", "api/generated/cupynumeric.mask_indices", "api/generated/cupynumeric.matmul", "api/generated/cupynumeric.maximum", "api/generated/cupynumeric.mean", "api/generated/cupynumeric.median", "api/generated/cupynumeric.meshgrid", "api/generated/cupynumeric.minimum", "api/generated/cupynumeric.mod", "api/generated/cupynumeric.modf", "api/generated/cupynumeric.moveaxis", "api/generated/cupynumeric.multiply", "api/generated/cupynumeric.nan_to_num", "api/generated/cupynumeric.nanargmax", "api/generated/cupynumeric.nanargmin", "api/generated/cupynumeric.nancumprod", "api/generated/cupynumeric.nancumsum", "api/generated/cupynumeric.nanmax", "api/generated/cupynumeric.nanmean", "api/generated/cupynumeric.nanmedian", "api/generated/cupynumeric.nanmin", "api/generated/cupynumeric.nanpercentile", "api/generated/cupynumeric.nanprod", "api/generated/cupynumeric.nanquantile", "api/generated/cupynumeric.nansum", "api/generated/cupynumeric.ndarray.T", "api/generated/cupynumeric.ndarray.__abs__", "api/generated/cupynumeric.ndarray.__add__", "api/generated/cupynumeric.ndarray.__and__", "api/generated/cupynumeric.ndarray.__array__", "api/generated/cupynumeric.ndarray.__bool__", "api/generated/cupynumeric.ndarray.__complex__", "api/generated/cupynumeric.ndarray.__contains__", "api/generated/cupynumeric.ndarray.__copy__", "api/generated/cupynumeric.ndarray.__deepcopy__", "api/generated/cupynumeric.ndarray.__divmod__", "api/generated/cupynumeric.ndarray.__eq__", "api/generated/cupynumeric.ndarray.__float__", "api/generated/cupynumeric.ndarray.__floordiv__", "api/generated/cupynumeric.ndarray.__ge__", "api/generated/cupynumeric.ndarray.__getitem__", "api/generated/cupynumeric.ndarray.__gt__", "api/generated/cupynumeric.ndarray.__iadd__", "api/generated/cupynumeric.ndarray.__iand__", "api/generated/cupynumeric.ndarray.__ifloordiv__", "api/generated/cupynumeric.ndarray.__ilshift__", "api/generated/cupynumeric.ndarray.__imatmul__", "api/generated/cupynumeric.ndarray.__imod__", "api/generated/cupynumeric.ndarray.__imul__", "api/generated/cupynumeric.ndarray.__index__", "api/generated/cupynumeric.ndarray.__int__", "api/generated/cupynumeric.ndarray.__invert__", "api/generated/cupynumeric.ndarray.__ior__", "api/generated/cupynumeric.ndarray.__ipow__", "api/generated/cupynumeric.ndarray.__irshift__", "api/generated/cupynumeric.ndarray.__isub__", "api/generated/cupynumeric.ndarray.__itruediv__", "api/generated/cupynumeric.ndarray.__ixor__", "api/generated/cupynumeric.ndarray.__le__", "api/generated/cupynumeric.ndarray.__len__", "api/generated/cupynumeric.ndarray.__lshift__", "api/generated/cupynumeric.ndarray.__lt__", "api/generated/cupynumeric.ndarray.__matmul__", "api/generated/cupynumeric.ndarray.__mod__", "api/generated/cupynumeric.ndarray.__mul__", "api/generated/cupynumeric.ndarray.__ne__", "api/generated/cupynumeric.ndarray.__neg__", "api/generated/cupynumeric.ndarray.__new__", "api/generated/cupynumeric.ndarray.__or__", "api/generated/cupynumeric.ndarray.__pos__", "api/generated/cupynumeric.ndarray.__pow__", "api/generated/cupynumeric.ndarray.__reduce__", "api/generated/cupynumeric.ndarray.__repr__", "api/generated/cupynumeric.ndarray.__rmatmul__", "api/generated/cupynumeric.ndarray.__rshift__", "api/generated/cupynumeric.ndarray.__setitem__", "api/generated/cupynumeric.ndarray.__setstate__", "api/generated/cupynumeric.ndarray.__str__", "api/generated/cupynumeric.ndarray.__sub__", "api/generated/cupynumeric.ndarray.__truediv__", "api/generated/cupynumeric.ndarray.__xor__", "api/generated/cupynumeric.ndarray.all", "api/generated/cupynumeric.ndarray.any", "api/generated/cupynumeric.ndarray.argmax", "api/generated/cupynumeric.ndarray.argmin", "api/generated/cupynumeric.ndarray.argpartition", "api/generated/cupynumeric.ndarray.argsort", "api/generated/cupynumeric.ndarray.astype", "api/generated/cupynumeric.ndarray.base", "api/generated/cupynumeric.ndarray.choose", "api/generated/cupynumeric.ndarray.clip", "api/generated/cupynumeric.ndarray.compress", "api/generated/cupynumeric.ndarray.conj", "api/generated/cupynumeric.ndarray.conjugate", "api/generated/cupynumeric.ndarray.copy", "api/generated/cupynumeric.ndarray.ctypes", "api/generated/cupynumeric.ndarray.cumprod", "api/generated/cupynumeric.ndarray.cumsum", "api/generated/cupynumeric.ndarray.data", "api/generated/cupynumeric.ndarray.diagonal", "api/generated/cupynumeric.ndarray.dot", "api/generated/cupynumeric.ndarray.dtype", "api/generated/cupynumeric.ndarray.dump", "api/generated/cupynumeric.ndarray.dumps", "api/generated/cupynumeric.ndarray.fill", "api/generated/cupynumeric.ndarray.flags", "api/generated/cupynumeric.ndarray.flat", "api/generated/cupynumeric.ndarray.flatten", "api/generated/cupynumeric.ndarray.flip", "api/generated/cupynumeric.ndarray.getfield", "api/generated/cupynumeric.ndarray.imag", "api/generated/cupynumeric.ndarray.item", "api/generated/cupynumeric.ndarray.itemset", "api/generated/cupynumeric.ndarray.itemsize", "api/generated/cupynumeric.ndarray.max", "api/generated/cupynumeric.ndarray.mean", "api/generated/cupynumeric.ndarray.min", "api/generated/cupynumeric.ndarray.nbytes", "api/generated/cupynumeric.ndarray.ndim", "api/generated/cupynumeric.ndarray.nonzero", "api/generated/cupynumeric.ndarray.partition", "api/generated/cupynumeric.ndarray.prod", "api/generated/cupynumeric.ndarray.put", "api/generated/cupynumeric.ndarray.ravel", "api/generated/cupynumeric.ndarray.real", "api/generated/cupynumeric.ndarray.reshape", "api/generated/cupynumeric.ndarray.searchsorted", "api/generated/cupynumeric.ndarray.setfield", "api/generated/cupynumeric.ndarray.setflags", "api/generated/cupynumeric.ndarray.shape", "api/generated/cupynumeric.ndarray.size", "api/generated/cupynumeric.ndarray.sort", "api/generated/cupynumeric.ndarray.squeeze", "api/generated/cupynumeric.ndarray.strides", "api/generated/cupynumeric.ndarray.sum", "api/generated/cupynumeric.ndarray.swapaxes", "api/generated/cupynumeric.ndarray.take", "api/generated/cupynumeric.ndarray.tobytes", "api/generated/cupynumeric.ndarray.tofile", "api/generated/cupynumeric.ndarray.tolist", "api/generated/cupynumeric.ndarray.tostring", "api/generated/cupynumeric.ndarray.trace", "api/generated/cupynumeric.ndarray.transpose", "api/generated/cupynumeric.ndarray.unique", "api/generated/cupynumeric.ndarray.var", "api/generated/cupynumeric.ndarray.view", "api/generated/cupynumeric.ndim", "api/generated/cupynumeric.negative", "api/generated/cupynumeric.nextafter", "api/generated/cupynumeric.nonzero", "api/generated/cupynumeric.not_equal", "api/generated/cupynumeric.ones", "api/generated/cupynumeric.ones_like", "api/generated/cupynumeric.outer", "api/generated/cupynumeric.packbits", "api/generated/cupynumeric.partition", "api/generated/cupynumeric.percentile", "api/generated/cupynumeric.place", "api/generated/cupynumeric.positive", "api/generated/cupynumeric.power", "api/generated/cupynumeric.prod", "api/generated/cupynumeric.put", "api/generated/cupynumeric.put_along_axis", "api/generated/cupynumeric.putmask", "api/generated/cupynumeric.quantile", "api/generated/cupynumeric.rad2deg", "api/generated/cupynumeric.radians", "api/generated/cupynumeric.random.beta", "api/generated/cupynumeric.random.binomial", "api/generated/cupynumeric.random.bytes", "api/generated/cupynumeric.random.chisquare", "api/generated/cupynumeric.random.default_rng", "api/generated/cupynumeric.random.exponential", "api/generated/cupynumeric.random.f", "api/generated/cupynumeric.random.gamma", "api/generated/cupynumeric.random.geometric", "api/generated/cupynumeric.random.gumbel", "api/generated/cupynumeric.random.hypergeometric", "api/generated/cupynumeric.random.laplace", "api/generated/cupynumeric.random.logistic", "api/generated/cupynumeric.random.lognormal", "api/generated/cupynumeric.random.logseries", "api/generated/cupynumeric.random.negative_binomial", "api/generated/cupynumeric.random.noncentral_chisquare", "api/generated/cupynumeric.random.noncentral_f", "api/generated/cupynumeric.random.normal", "api/generated/cupynumeric.random.pareto", "api/generated/cupynumeric.random.poisson", "api/generated/cupynumeric.random.power", "api/generated/cupynumeric.random.rand", "api/generated/cupynumeric.random.randint", "api/generated/cupynumeric.random.randn", "api/generated/cupynumeric.random.random", "api/generated/cupynumeric.random.random_integers", "api/generated/cupynumeric.random.random_sample", "api/generated/cupynumeric.random.ranf", "api/generated/cupynumeric.random.rayleigh", "api/generated/cupynumeric.random.sample", "api/generated/cupynumeric.random.seed", "api/generated/cupynumeric.random.standard_cauchy", "api/generated/cupynumeric.random.standard_exponential", "api/generated/cupynumeric.random.standard_gamma", "api/generated/cupynumeric.random.standard_t", "api/generated/cupynumeric.random.triangular", "api/generated/cupynumeric.random.uniform", "api/generated/cupynumeric.random.vonmises", "api/generated/cupynumeric.random.wald", "api/generated/cupynumeric.random.weibull", "api/generated/cupynumeric.random.zipf", "api/generated/cupynumeric.ravel", "api/generated/cupynumeric.ravel_multi_index", "api/generated/cupynumeric.real", "api/generated/cupynumeric.real_if_close", "api/generated/cupynumeric.reciprocal", "api/generated/cupynumeric.remainder", "api/generated/cupynumeric.repeat", "api/generated/cupynumeric.reshape", "api/generated/cupynumeric.right_shift", "api/generated/cupynumeric.rint", "api/generated/cupynumeric.roll", "api/generated/cupynumeric.roots", "api/generated/cupynumeric.rot90", "api/generated/cupynumeric.round", "api/generated/cupynumeric.row_stack", "api/generated/cupynumeric.searchsorted", "api/generated/cupynumeric.select", "api/generated/cupynumeric.shape", "api/generated/cupynumeric.sign", "api/generated/cupynumeric.signbit", "api/generated/cupynumeric.sin", "api/generated/cupynumeric.sinh", "api/generated/cupynumeric.sort", "api/generated/cupynumeric.sort_complex", "api/generated/cupynumeric.split", "api/generated/cupynumeric.sqrt", "api/generated/cupynumeric.square", "api/generated/cupynumeric.squeeze", "api/generated/cupynumeric.stack", "api/generated/cupynumeric.subtract", "api/generated/cupynumeric.sum", "api/generated/cupynumeric.swapaxes", "api/generated/cupynumeric.take", "api/generated/cupynumeric.take_along_axis", "api/generated/cupynumeric.tan", "api/generated/cupynumeric.tanh", "api/generated/cupynumeric.tensordot", "api/generated/cupynumeric.tile", "api/generated/cupynumeric.trace", "api/generated/cupynumeric.transpose", "api/generated/cupynumeric.tri", "api/generated/cupynumeric.tril", "api/generated/cupynumeric.tril_indices", "api/generated/cupynumeric.tril_indices_from", "api/generated/cupynumeric.triu", "api/generated/cupynumeric.triu_indices", "api/generated/cupynumeric.triu_indices_from", "api/generated/cupynumeric.true_divide", "api/generated/cupynumeric.trunc", "api/generated/cupynumeric.unique", "api/generated/cupynumeric.unpackbits", "api/generated/cupynumeric.unravel_index", "api/generated/cupynumeric.var", "api/generated/cupynumeric.vdot", "api/generated/cupynumeric.vsplit", "api/generated/cupynumeric.vstack", "api/generated/cupynumeric.where", "api/generated/cupynumeric.zeros", "api/generated/cupynumeric.zeros_like", "api/index", "api/indexing", "api/io", "api/linalg", "api/logic", "api/manipulation", "api/math", "api/ndarray", "api/random", "api/routines", "api/set", "api/settings", "api/sorting", "api/statistics", "api/window", "developer/CONTRIBUTING", "developer/building", "developer/index", "developer/testing", "examples/black_scholes", "examples/cholesky", "examples/compact_finite_difference", "examples/edge_detection", "examples/index", "examples/kmeans", "examples/newton_raphson_2d", "examples/stencil", "examples/torchswe", "faqs", "index", "installation", "oss-licenses", "user/advanced", "user/differences", "user/howtos/benchmarking", "user/howtos/index", "user/howtos/measuring", "user/howtos/patching", "user/index", "user/practices", "user/tutorial", "user/usage"], "envversion": {"nbsphinx": 4, "sphinx": 64, "sphinx.domains.c": 3, "sphinx.domains.changeset": 1, "sphinx.domains.citation": 1, "sphinx.domains.cpp": 9, "sphinx.domains.index": 1, "sphinx.domains.javascript": 3, "sphinx.domains.math": 2, "sphinx.domains.python": 4, "sphinx.domains.rst": 2, "sphinx.domains.std": 2, "sphinx.ext.intersphinx": 1}, "filenames": ["_implemented.rst", "api/_bitgenerator.rst", "api/_generator.rst", "api/_grouped.rst", "api/_ndarray.rst", "api/binary.rst", "api/broadcast.rst", "api/classes.rst", "api/comparison.rst", "api/creation.rst", "api/datatype.rst", "api/fft.rst", "api/generated/cupynumeric.absolute.rst", "api/generated/cupynumeric.add.rst", "api/generated/cupynumeric.all.rst", "api/generated/cupynumeric.allclose.rst", "api/generated/cupynumeric.amax.rst", "api/generated/cupynumeric.amin.rst", "api/generated/cupynumeric.angle.rst", "api/generated/cupynumeric.any.rst", "api/generated/cupynumeric.append.rst", "api/generated/cupynumeric.arange.rst", "api/generated/cupynumeric.arccos.rst", "api/generated/cupynumeric.arccosh.rst", "api/generated/cupynumeric.arcsin.rst", "api/generated/cupynumeric.arcsinh.rst", "api/generated/cupynumeric.arctan.rst", "api/generated/cupynumeric.arctan2.rst", "api/generated/cupynumeric.arctanh.rst", "api/generated/cupynumeric.argmax.rst", "api/generated/cupynumeric.argmin.rst", "api/generated/cupynumeric.argpartition.rst", "api/generated/cupynumeric.argsort.rst", "api/generated/cupynumeric.argwhere.rst", "api/generated/cupynumeric.array.rst", "api/generated/cupynumeric.array_equal.rst", "api/generated/cupynumeric.array_split.rst", "api/generated/cupynumeric.asarray.rst", "api/generated/cupynumeric.atleast_1d.rst", "api/generated/cupynumeric.atleast_2d.rst", "api/generated/cupynumeric.atleast_3d.rst", "api/generated/cupynumeric.average.rst", "api/generated/cupynumeric.bartlett.rst", "api/generated/cupynumeric.bincount.rst", "api/generated/cupynumeric.bitwise_and.rst", "api/generated/cupynumeric.bitwise_or.rst", "api/generated/cupynumeric.bitwise_xor.rst", "api/generated/cupynumeric.blackman.rst", "api/generated/cupynumeric.block.rst", "api/generated/cupynumeric.broadcast_arrays.rst", "api/generated/cupynumeric.broadcast_shapes.rst", "api/generated/cupynumeric.broadcast_to.rst", "api/generated/cupynumeric.cbrt.rst", "api/generated/cupynumeric.ceil.rst", "api/generated/cupynumeric.choose.rst", "api/generated/cupynumeric.clip.rst", "api/generated/cupynumeric.column_stack.rst", "api/generated/cupynumeric.compress.rst", "api/generated/cupynumeric.concatenate.rst", "api/generated/cupynumeric.conj.rst", "api/generated/cupynumeric.conjugate.rst", "api/generated/cupynumeric.convolve.rst", "api/generated/cupynumeric.copy.rst", "api/generated/cupynumeric.copysign.rst", "api/generated/cupynumeric.copyto.rst", "api/generated/cupynumeric.cos.rst", "api/generated/cupynumeric.cosh.rst", "api/generated/cupynumeric.count_nonzero.rst", "api/generated/cupynumeric.cov.rst", "api/generated/cupynumeric.cross.rst", "api/generated/cupynumeric.cumprod.rst", "api/generated/cupynumeric.cumsum.rst", "api/generated/cupynumeric.deg2rad.rst", "api/generated/cupynumeric.degrees.rst", "api/generated/cupynumeric.delete.rst", "api/generated/cupynumeric.diag.rst", "api/generated/cupynumeric.diag_indices.rst", "api/generated/cupynumeric.diag_indices_from.rst", "api/generated/cupynumeric.diagflat.rst", "api/generated/cupynumeric.diagonal.rst", "api/generated/cupynumeric.diff.rst", "api/generated/cupynumeric.digitize.rst", "api/generated/cupynumeric.divide.rst", "api/generated/cupynumeric.dot.rst", "api/generated/cupynumeric.dsplit.rst", "api/generated/cupynumeric.dstack.rst", "api/generated/cupynumeric.einsum.rst", "api/generated/cupynumeric.einsum_path.rst", "api/generated/cupynumeric.empty.rst", "api/generated/cupynumeric.empty_like.rst", "api/generated/cupynumeric.equal.rst", "api/generated/cupynumeric.exp.rst", "api/generated/cupynumeric.exp2.rst", "api/generated/cupynumeric.expand_dims.rst", "api/generated/cupynumeric.expm1.rst", "api/generated/cupynumeric.extract.rst", "api/generated/cupynumeric.eye.rst", "api/generated/cupynumeric.fabs.rst", "api/generated/cupynumeric.fft.fft.rst", "api/generated/cupynumeric.fft.fft2.rst", "api/generated/cupynumeric.fft.fftn.rst", "api/generated/cupynumeric.fft.fftshift.rst", "api/generated/cupynumeric.fft.hfft.rst", "api/generated/cupynumeric.fft.ifft.rst", "api/generated/cupynumeric.fft.ifft2.rst", "api/generated/cupynumeric.fft.ifftn.rst", "api/generated/cupynumeric.fft.ifftshift.rst", "api/generated/cupynumeric.fft.ihfft.rst", "api/generated/cupynumeric.fft.irfft.rst", "api/generated/cupynumeric.fft.irfft2.rst", "api/generated/cupynumeric.fft.irfftn.rst", "api/generated/cupynumeric.fft.rfft.rst", "api/generated/cupynumeric.fft.rfft2.rst", "api/generated/cupynumeric.fft.rfftn.rst", "api/generated/cupynumeric.fill_diagonal.rst", "api/generated/cupynumeric.find_common_type.rst", "api/generated/cupynumeric.flatnonzero.rst", "api/generated/cupynumeric.flip.rst", "api/generated/cupynumeric.fliplr.rst", "api/generated/cupynumeric.flipud.rst", "api/generated/cupynumeric.float_power.rst", "api/generated/cupynumeric.floor.rst", "api/generated/cupynumeric.floor_divide.rst", "api/generated/cupynumeric.fmax.rst", "api/generated/cupynumeric.fmin.rst", "api/generated/cupynumeric.fmod.rst", "api/generated/cupynumeric.frexp.rst", "api/generated/cupynumeric.full.rst", "api/generated/cupynumeric.full_like.rst", "api/generated/cupynumeric.gcd.rst", "api/generated/cupynumeric.gradient.rst", "api/generated/cupynumeric.greater.rst", "api/generated/cupynumeric.greater_equal.rst", "api/generated/cupynumeric.hamming.rst", "api/generated/cupynumeric.hanning.rst", "api/generated/cupynumeric.histogram.rst", "api/generated/cupynumeric.hsplit.rst", "api/generated/cupynumeric.hstack.rst", "api/generated/cupynumeric.hypot.rst", "api/generated/cupynumeric.identity.rst", "api/generated/cupynumeric.imag.rst", "api/generated/cupynumeric.indices.rst", "api/generated/cupynumeric.inner.rst", "api/generated/cupynumeric.insert.rst", "api/generated/cupynumeric.invert.rst", "api/generated/cupynumeric.isclose.rst", "api/generated/cupynumeric.iscomplex.rst", "api/generated/cupynumeric.iscomplexobj.rst", "api/generated/cupynumeric.isfinite.rst", "api/generated/cupynumeric.isinf.rst", "api/generated/cupynumeric.isnan.rst", "api/generated/cupynumeric.isneginf.rst", "api/generated/cupynumeric.isposinf.rst", "api/generated/cupynumeric.isreal.rst", "api/generated/cupynumeric.isrealobj.rst", "api/generated/cupynumeric.isscalar.rst", "api/generated/cupynumeric.ix_.rst", "api/generated/cupynumeric.kaiser.rst", "api/generated/cupynumeric.lcm.rst", "api/generated/cupynumeric.ldexp.rst", "api/generated/cupynumeric.left_shift.rst", "api/generated/cupynumeric.less.rst", "api/generated/cupynumeric.less_equal.rst", "api/generated/cupynumeric.linalg.cholesky.rst", "api/generated/cupynumeric.linalg.eig.rst", "api/generated/cupynumeric.linalg.eigh.rst", "api/generated/cupynumeric.linalg.eigvals.rst", "api/generated/cupynumeric.linalg.eigvalsh.rst", "api/generated/cupynumeric.linalg.expm.rst", "api/generated/cupynumeric.linalg.matrix_power.rst", "api/generated/cupynumeric.linalg.multi_dot.rst", "api/generated/cupynumeric.linalg.norm.rst", "api/generated/cupynumeric.linalg.qr.rst", "api/generated/cupynumeric.linalg.solve.rst", "api/generated/cupynumeric.linalg.svd.rst", "api/generated/cupynumeric.linspace.rst", "api/generated/cupynumeric.load.rst", "api/generated/cupynumeric.log.rst", "api/generated/cupynumeric.log10.rst", "api/generated/cupynumeric.log1p.rst", "api/generated/cupynumeric.log2.rst", "api/generated/cupynumeric.logaddexp.rst", "api/generated/cupynumeric.logaddexp2.rst", "api/generated/cupynumeric.logical_and.rst", "api/generated/cupynumeric.logical_not.rst", "api/generated/cupynumeric.logical_or.rst", "api/generated/cupynumeric.logical_xor.rst", "api/generated/cupynumeric.logspace.rst", "api/generated/cupynumeric.mask_indices.rst", "api/generated/cupynumeric.matmul.rst", "api/generated/cupynumeric.maximum.rst", "api/generated/cupynumeric.mean.rst", "api/generated/cupynumeric.median.rst", "api/generated/cupynumeric.meshgrid.rst", "api/generated/cupynumeric.minimum.rst", "api/generated/cupynumeric.mod.rst", "api/generated/cupynumeric.modf.rst", "api/generated/cupynumeric.moveaxis.rst", "api/generated/cupynumeric.multiply.rst", "api/generated/cupynumeric.nan_to_num.rst", "api/generated/cupynumeric.nanargmax.rst", "api/generated/cupynumeric.nanargmin.rst", "api/generated/cupynumeric.nancumprod.rst", "api/generated/cupynumeric.nancumsum.rst", "api/generated/cupynumeric.nanmax.rst", "api/generated/cupynumeric.nanmean.rst", "api/generated/cupynumeric.nanmedian.rst", "api/generated/cupynumeric.nanmin.rst", "api/generated/cupynumeric.nanpercentile.rst", "api/generated/cupynumeric.nanprod.rst", "api/generated/cupynumeric.nanquantile.rst", "api/generated/cupynumeric.nansum.rst", "api/generated/cupynumeric.ndarray.T.rst", "api/generated/cupynumeric.ndarray.__abs__.rst", "api/generated/cupynumeric.ndarray.__add__.rst", "api/generated/cupynumeric.ndarray.__and__.rst", "api/generated/cupynumeric.ndarray.__array__.rst", "api/generated/cupynumeric.ndarray.__bool__.rst", "api/generated/cupynumeric.ndarray.__complex__.rst", "api/generated/cupynumeric.ndarray.__contains__.rst", "api/generated/cupynumeric.ndarray.__copy__.rst", "api/generated/cupynumeric.ndarray.__deepcopy__.rst", "api/generated/cupynumeric.ndarray.__divmod__.rst", "api/generated/cupynumeric.ndarray.__eq__.rst", "api/generated/cupynumeric.ndarray.__float__.rst", "api/generated/cupynumeric.ndarray.__floordiv__.rst", "api/generated/cupynumeric.ndarray.__ge__.rst", "api/generated/cupynumeric.ndarray.__getitem__.rst", "api/generated/cupynumeric.ndarray.__gt__.rst", "api/generated/cupynumeric.ndarray.__iadd__.rst", "api/generated/cupynumeric.ndarray.__iand__.rst", "api/generated/cupynumeric.ndarray.__ifloordiv__.rst", "api/generated/cupynumeric.ndarray.__ilshift__.rst", "api/generated/cupynumeric.ndarray.__imatmul__.rst", "api/generated/cupynumeric.ndarray.__imod__.rst", "api/generated/cupynumeric.ndarray.__imul__.rst", "api/generated/cupynumeric.ndarray.__index__.rst", "api/generated/cupynumeric.ndarray.__int__.rst", "api/generated/cupynumeric.ndarray.__invert__.rst", "api/generated/cupynumeric.ndarray.__ior__.rst", "api/generated/cupynumeric.ndarray.__ipow__.rst", "api/generated/cupynumeric.ndarray.__irshift__.rst", "api/generated/cupynumeric.ndarray.__isub__.rst", "api/generated/cupynumeric.ndarray.__itruediv__.rst", "api/generated/cupynumeric.ndarray.__ixor__.rst", "api/generated/cupynumeric.ndarray.__le__.rst", "api/generated/cupynumeric.ndarray.__len__.rst", "api/generated/cupynumeric.ndarray.__lshift__.rst", "api/generated/cupynumeric.ndarray.__lt__.rst", "api/generated/cupynumeric.ndarray.__matmul__.rst", "api/generated/cupynumeric.ndarray.__mod__.rst", "api/generated/cupynumeric.ndarray.__mul__.rst", "api/generated/cupynumeric.ndarray.__ne__.rst", "api/generated/cupynumeric.ndarray.__neg__.rst", "api/generated/cupynumeric.ndarray.__new__.rst", "api/generated/cupynumeric.ndarray.__or__.rst", "api/generated/cupynumeric.ndarray.__pos__.rst", "api/generated/cupynumeric.ndarray.__pow__.rst", "api/generated/cupynumeric.ndarray.__reduce__.rst", "api/generated/cupynumeric.ndarray.__repr__.rst", "api/generated/cupynumeric.ndarray.__rmatmul__.rst", "api/generated/cupynumeric.ndarray.__rshift__.rst", "api/generated/cupynumeric.ndarray.__setitem__.rst", "api/generated/cupynumeric.ndarray.__setstate__.rst", "api/generated/cupynumeric.ndarray.__str__.rst", "api/generated/cupynumeric.ndarray.__sub__.rst", "api/generated/cupynumeric.ndarray.__truediv__.rst", "api/generated/cupynumeric.ndarray.__xor__.rst", "api/generated/cupynumeric.ndarray.all.rst", "api/generated/cupynumeric.ndarray.any.rst", "api/generated/cupynumeric.ndarray.argmax.rst", "api/generated/cupynumeric.ndarray.argmin.rst", "api/generated/cupynumeric.ndarray.argpartition.rst", "api/generated/cupynumeric.ndarray.argsort.rst", "api/generated/cupynumeric.ndarray.astype.rst", "api/generated/cupynumeric.ndarray.base.rst", "api/generated/cupynumeric.ndarray.choose.rst", "api/generated/cupynumeric.ndarray.clip.rst", "api/generated/cupynumeric.ndarray.compress.rst", "api/generated/cupynumeric.ndarray.conj.rst", "api/generated/cupynumeric.ndarray.conjugate.rst", "api/generated/cupynumeric.ndarray.copy.rst", "api/generated/cupynumeric.ndarray.ctypes.rst", "api/generated/cupynumeric.ndarray.cumprod.rst", "api/generated/cupynumeric.ndarray.cumsum.rst", "api/generated/cupynumeric.ndarray.data.rst", "api/generated/cupynumeric.ndarray.diagonal.rst", "api/generated/cupynumeric.ndarray.dot.rst", "api/generated/cupynumeric.ndarray.dtype.rst", "api/generated/cupynumeric.ndarray.dump.rst", "api/generated/cupynumeric.ndarray.dumps.rst", "api/generated/cupynumeric.ndarray.fill.rst", "api/generated/cupynumeric.ndarray.flags.rst", "api/generated/cupynumeric.ndarray.flat.rst", "api/generated/cupynumeric.ndarray.flatten.rst", "api/generated/cupynumeric.ndarray.flip.rst", "api/generated/cupynumeric.ndarray.getfield.rst", "api/generated/cupynumeric.ndarray.imag.rst", "api/generated/cupynumeric.ndarray.item.rst", "api/generated/cupynumeric.ndarray.itemset.rst", "api/generated/cupynumeric.ndarray.itemsize.rst", "api/generated/cupynumeric.ndarray.max.rst", "api/generated/cupynumeric.ndarray.mean.rst", "api/generated/cupynumeric.ndarray.min.rst", "api/generated/cupynumeric.ndarray.nbytes.rst", "api/generated/cupynumeric.ndarray.ndim.rst", "api/generated/cupynumeric.ndarray.nonzero.rst", "api/generated/cupynumeric.ndarray.partition.rst", "api/generated/cupynumeric.ndarray.prod.rst", "api/generated/cupynumeric.ndarray.put.rst", "api/generated/cupynumeric.ndarray.ravel.rst", "api/generated/cupynumeric.ndarray.real.rst", "api/generated/cupynumeric.ndarray.reshape.rst", "api/generated/cupynumeric.ndarray.searchsorted.rst", "api/generated/cupynumeric.ndarray.setfield.rst", "api/generated/cupynumeric.ndarray.setflags.rst", "api/generated/cupynumeric.ndarray.shape.rst", "api/generated/cupynumeric.ndarray.size.rst", "api/generated/cupynumeric.ndarray.sort.rst", "api/generated/cupynumeric.ndarray.squeeze.rst", "api/generated/cupynumeric.ndarray.strides.rst", "api/generated/cupynumeric.ndarray.sum.rst", "api/generated/cupynumeric.ndarray.swapaxes.rst", "api/generated/cupynumeric.ndarray.take.rst", "api/generated/cupynumeric.ndarray.tobytes.rst", "api/generated/cupynumeric.ndarray.tofile.rst", "api/generated/cupynumeric.ndarray.tolist.rst", "api/generated/cupynumeric.ndarray.tostring.rst", "api/generated/cupynumeric.ndarray.trace.rst", "api/generated/cupynumeric.ndarray.transpose.rst", "api/generated/cupynumeric.ndarray.unique.rst", "api/generated/cupynumeric.ndarray.var.rst", "api/generated/cupynumeric.ndarray.view.rst", "api/generated/cupynumeric.ndim.rst", "api/generated/cupynumeric.negative.rst", "api/generated/cupynumeric.nextafter.rst", "api/generated/cupynumeric.nonzero.rst", "api/generated/cupynumeric.not_equal.rst", "api/generated/cupynumeric.ones.rst", "api/generated/cupynumeric.ones_like.rst", "api/generated/cupynumeric.outer.rst", "api/generated/cupynumeric.packbits.rst", "api/generated/cupynumeric.partition.rst", "api/generated/cupynumeric.percentile.rst", "api/generated/cupynumeric.place.rst", "api/generated/cupynumeric.positive.rst", "api/generated/cupynumeric.power.rst", "api/generated/cupynumeric.prod.rst", "api/generated/cupynumeric.put.rst", "api/generated/cupynumeric.put_along_axis.rst", "api/generated/cupynumeric.putmask.rst", "api/generated/cupynumeric.quantile.rst", "api/generated/cupynumeric.rad2deg.rst", "api/generated/cupynumeric.radians.rst", "api/generated/cupynumeric.random.beta.rst", "api/generated/cupynumeric.random.binomial.rst", "api/generated/cupynumeric.random.bytes.rst", "api/generated/cupynumeric.random.chisquare.rst", "api/generated/cupynumeric.random.default_rng.rst", "api/generated/cupynumeric.random.exponential.rst", "api/generated/cupynumeric.random.f.rst", "api/generated/cupynumeric.random.gamma.rst", "api/generated/cupynumeric.random.geometric.rst", "api/generated/cupynumeric.random.gumbel.rst", "api/generated/cupynumeric.random.hypergeometric.rst", "api/generated/cupynumeric.random.laplace.rst", "api/generated/cupynumeric.random.logistic.rst", "api/generated/cupynumeric.random.lognormal.rst", "api/generated/cupynumeric.random.logseries.rst", "api/generated/cupynumeric.random.negative_binomial.rst", "api/generated/cupynumeric.random.noncentral_chisquare.rst", "api/generated/cupynumeric.random.noncentral_f.rst", "api/generated/cupynumeric.random.normal.rst", "api/generated/cupynumeric.random.pareto.rst", "api/generated/cupynumeric.random.poisson.rst", "api/generated/cupynumeric.random.power.rst", "api/generated/cupynumeric.random.rand.rst", "api/generated/cupynumeric.random.randint.rst", "api/generated/cupynumeric.random.randn.rst", "api/generated/cupynumeric.random.random.rst", "api/generated/cupynumeric.random.random_integers.rst", "api/generated/cupynumeric.random.random_sample.rst", "api/generated/cupynumeric.random.ranf.rst", "api/generated/cupynumeric.random.rayleigh.rst", "api/generated/cupynumeric.random.sample.rst", "api/generated/cupynumeric.random.seed.rst", "api/generated/cupynumeric.random.standard_cauchy.rst", "api/generated/cupynumeric.random.standard_exponential.rst", "api/generated/cupynumeric.random.standard_gamma.rst", "api/generated/cupynumeric.random.standard_t.rst", "api/generated/cupynumeric.random.triangular.rst", "api/generated/cupynumeric.random.uniform.rst", "api/generated/cupynumeric.random.vonmises.rst", "api/generated/cupynumeric.random.wald.rst", "api/generated/cupynumeric.random.weibull.rst", "api/generated/cupynumeric.random.zipf.rst", "api/generated/cupynumeric.ravel.rst", "api/generated/cupynumeric.ravel_multi_index.rst", "api/generated/cupynumeric.real.rst", "api/generated/cupynumeric.real_if_close.rst", "api/generated/cupynumeric.reciprocal.rst", "api/generated/cupynumeric.remainder.rst", "api/generated/cupynumeric.repeat.rst", "api/generated/cupynumeric.reshape.rst", "api/generated/cupynumeric.right_shift.rst", "api/generated/cupynumeric.rint.rst", "api/generated/cupynumeric.roll.rst", "api/generated/cupynumeric.roots.rst", "api/generated/cupynumeric.rot90.rst", "api/generated/cupynumeric.round.rst", "api/generated/cupynumeric.row_stack.rst", "api/generated/cupynumeric.searchsorted.rst", "api/generated/cupynumeric.select.rst", "api/generated/cupynumeric.shape.rst", "api/generated/cupynumeric.sign.rst", "api/generated/cupynumeric.signbit.rst", "api/generated/cupynumeric.sin.rst", "api/generated/cupynumeric.sinh.rst", "api/generated/cupynumeric.sort.rst", "api/generated/cupynumeric.sort_complex.rst", "api/generated/cupynumeric.split.rst", "api/generated/cupynumeric.sqrt.rst", "api/generated/cupynumeric.square.rst", "api/generated/cupynumeric.squeeze.rst", "api/generated/cupynumeric.stack.rst", "api/generated/cupynumeric.subtract.rst", "api/generated/cupynumeric.sum.rst", "api/generated/cupynumeric.swapaxes.rst", "api/generated/cupynumeric.take.rst", "api/generated/cupynumeric.take_along_axis.rst", "api/generated/cupynumeric.tan.rst", "api/generated/cupynumeric.tanh.rst", "api/generated/cupynumeric.tensordot.rst", "api/generated/cupynumeric.tile.rst", "api/generated/cupynumeric.trace.rst", "api/generated/cupynumeric.transpose.rst", "api/generated/cupynumeric.tri.rst", "api/generated/cupynumeric.tril.rst", "api/generated/cupynumeric.tril_indices.rst", "api/generated/cupynumeric.tril_indices_from.rst", "api/generated/cupynumeric.triu.rst", "api/generated/cupynumeric.triu_indices.rst", "api/generated/cupynumeric.triu_indices_from.rst", "api/generated/cupynumeric.true_divide.rst", "api/generated/cupynumeric.trunc.rst", "api/generated/cupynumeric.unique.rst", "api/generated/cupynumeric.unpackbits.rst", "api/generated/cupynumeric.unravel_index.rst", "api/generated/cupynumeric.var.rst", "api/generated/cupynumeric.vdot.rst", "api/generated/cupynumeric.vsplit.rst", "api/generated/cupynumeric.vstack.rst", "api/generated/cupynumeric.where.rst", "api/generated/cupynumeric.zeros.rst", "api/generated/cupynumeric.zeros_like.rst", "api/index.rst", "api/indexing.rst", "api/io.rst", "api/linalg.rst", "api/logic.rst", "api/manipulation.rst", "api/math.rst", "api/ndarray.rst", "api/random.rst", "api/routines.rst", "api/set.rst", "api/settings.rst", "api/sorting.rst", "api/statistics.rst", "api/window.rst", "developer/CONTRIBUTING.md", "developer/building.rst", "developer/index.rst", "developer/testing.rst", "examples/black_scholes.ipynb", "examples/cholesky.ipynb", "examples/compact_finite_difference.ipynb", "examples/edge_detection.ipynb", "examples/index.rst", "examples/kmeans.ipynb", "examples/newton_raphson_2d.ipynb", "examples/stencil.ipynb", "examples/torchswe.ipynb", "faqs.rst", "index.rst", "installation.rst", "oss-licenses.rst", "user/advanced.rst", "user/differences.rst", "user/howtos/benchmarking.rst", "user/howtos/index.rst", "user/howtos/measuring.rst", "user/howtos/patching.rst", "user/index.rst", "user/practices.rst", "user/tutorial.rst", "user/usage.rst"], "indexentries": {"__abs__() (cupynumeric.ndarray method)": [[213, "cupynumeric.ndarray.__abs__", false]], "__add__() (cupynumeric.ndarray method)": [[214, "cupynumeric.ndarray.__add__", false]], "__and__() (cupynumeric.ndarray method)": [[215, "cupynumeric.ndarray.__and__", false]], "__array__() (cupynumeric.ndarray method)": [[216, "cupynumeric.ndarray.__array__", false]], "__bool__() (cupynumeric.ndarray method)": [[217, "cupynumeric.ndarray.__bool__", false]], "__complex__() (cupynumeric.ndarray method)": [[218, "cupynumeric.ndarray.__complex__", false]], "__contains__() (cupynumeric.ndarray method)": [[219, "cupynumeric.ndarray.__contains__", false]], "__copy__() (cupynumeric.ndarray method)": [[220, "cupynumeric.ndarray.__copy__", false]], "__deepcopy__() (cupynumeric.ndarray method)": [[221, "cupynumeric.ndarray.__deepcopy__", false]], "__divmod__() (cupynumeric.ndarray method)": [[222, "cupynumeric.ndarray.__divmod__", false]], "__eq__() (cupynumeric.ndarray method)": [[223, "cupynumeric.ndarray.__eq__", false]], "__float__() (cupynumeric.ndarray method)": [[224, "cupynumeric.ndarray.__float__", false]], "__floordiv__() (cupynumeric.ndarray method)": [[225, "cupynumeric.ndarray.__floordiv__", false]], "__ge__() (cupynumeric.ndarray method)": [[226, "cupynumeric.ndarray.__ge__", false]], "__getitem__() (cupynumeric.ndarray method)": [[227, "cupynumeric.ndarray.__getitem__", false]], "__gt__() (cupynumeric.ndarray method)": [[228, "cupynumeric.ndarray.__gt__", false]], "__iadd__() (cupynumeric.ndarray method)": [[229, "cupynumeric.ndarray.__iadd__", false]], "__iand__() (cupynumeric.ndarray method)": [[230, "cupynumeric.ndarray.__iand__", false]], "__ifloordiv__() (cupynumeric.ndarray method)": [[231, "cupynumeric.ndarray.__ifloordiv__", false]], "__ilshift__() (cupynumeric.ndarray method)": [[232, "cupynumeric.ndarray.__ilshift__", false]], "__imatmul__() (cupynumeric.ndarray method)": [[233, "cupynumeric.ndarray.__imatmul__", false]], "__imod__() (cupynumeric.ndarray method)": [[234, "cupynumeric.ndarray.__imod__", false]], "__imul__() (cupynumeric.ndarray method)": [[235, "cupynumeric.ndarray.__imul__", false]], "__index__() (cupynumeric.ndarray method)": [[236, "cupynumeric.ndarray.__index__", false]], "__init__() (cupynumeric.ndarray method)": [[4, "cupynumeric.ndarray.__init__", false]], "__init__() (cupynumeric.random.bitgenerator method)": [[1, "cupynumeric.random.BitGenerator.__init__", false]], "__init__() (cupynumeric.random.generator method)": [[2, "cupynumeric.random.Generator.__init__", false]], "__int__() (cupynumeric.ndarray method)": [[237, "cupynumeric.ndarray.__int__", false]], "__invert__() (cupynumeric.ndarray method)": [[238, "cupynumeric.ndarray.__invert__", false]], "__ior__() (cupynumeric.ndarray method)": [[239, "cupynumeric.ndarray.__ior__", false]], "__ipow__() (cupynumeric.ndarray method)": [[240, "cupynumeric.ndarray.__ipow__", false]], "__irshift__() (cupynumeric.ndarray method)": [[241, "cupynumeric.ndarray.__irshift__", false]], "__isub__() (cupynumeric.ndarray method)": [[242, "cupynumeric.ndarray.__isub__", false]], "__itruediv__() (cupynumeric.ndarray method)": [[243, "cupynumeric.ndarray.__itruediv__", false]], "__ixor__() (cupynumeric.ndarray method)": [[244, "cupynumeric.ndarray.__ixor__", false]], "__le__() (cupynumeric.ndarray method)": [[245, "cupynumeric.ndarray.__le__", false]], "__len__() (cupynumeric.ndarray method)": [[246, "cupynumeric.ndarray.__len__", false]], "__lshift__() (cupynumeric.ndarray method)": [[247, "cupynumeric.ndarray.__lshift__", false]], "__lt__() (cupynumeric.ndarray method)": [[248, "cupynumeric.ndarray.__lt__", false]], "__matmul__() (cupynumeric.ndarray method)": [[249, "cupynumeric.ndarray.__matmul__", false]], "__mod__() (cupynumeric.ndarray method)": [[250, "cupynumeric.ndarray.__mod__", false]], "__mul__() (cupynumeric.ndarray method)": [[251, "cupynumeric.ndarray.__mul__", false]], "__ne__() (cupynumeric.ndarray method)": [[252, "cupynumeric.ndarray.__ne__", false]], "__neg__() (cupynumeric.ndarray method)": [[253, "cupynumeric.ndarray.__neg__", false]], "__new__() (cupynumeric.ndarray method)": [[254, "cupynumeric.ndarray.__new__", false]], "__or__() (cupynumeric.ndarray method)": [[255, "cupynumeric.ndarray.__or__", false]], "__pos__() (cupynumeric.ndarray method)": [[256, "cupynumeric.ndarray.__pos__", false]], "__pow__() (cupynumeric.ndarray method)": [[257, "cupynumeric.ndarray.__pow__", false]], "__reduce__() (cupynumeric.ndarray method)": [[258, "cupynumeric.ndarray.__reduce__", false]], "__repr__() (cupynumeric.ndarray method)": [[259, "cupynumeric.ndarray.__repr__", false]], "__rmatmul__() (cupynumeric.ndarray method)": [[260, "cupynumeric.ndarray.__rmatmul__", false]], "__rshift__() (cupynumeric.ndarray method)": [[261, "cupynumeric.ndarray.__rshift__", false]], "__setitem__() (cupynumeric.ndarray method)": [[262, "cupynumeric.ndarray.__setitem__", false]], "__setstate__() (cupynumeric.ndarray method)": [[263, "cupynumeric.ndarray.__setstate__", false]], "__str__() (cupynumeric.ndarray method)": [[264, "cupynumeric.ndarray.__str__", false]], "__sub__() (cupynumeric.ndarray method)": [[265, "cupynumeric.ndarray.__sub__", false]], "__truediv__() (cupynumeric.ndarray method)": [[266, "cupynumeric.ndarray.__truediv__", false]], "__xor__() (cupynumeric.ndarray method)": [[267, "cupynumeric.ndarray.__xor__", false]], "absolute() (in module cupynumeric)": [[12, "cupynumeric.absolute", false]], "add() (in module cupynumeric)": [[13, "cupynumeric.add", false]], "aligned (in module cupynumeric)": [[292, "cupynumeric.ALIGNED", false]], "all() (cupynumeric.ndarray method)": [[268, "cupynumeric.ndarray.all", false]], "all() (in module cupynumeric)": [[14, "cupynumeric.all", false]], "allclose() (in module cupynumeric)": [[15, "cupynumeric.allclose", false]], "amax() (in module cupynumeric)": [[16, "cupynumeric.amax", false]], "amin() (in module cupynumeric)": [[17, "cupynumeric.amin", false]], "angle() (in module cupynumeric)": [[18, "cupynumeric.angle", false]], "any() (cupynumeric.ndarray method)": [[269, "cupynumeric.ndarray.any", false]], "any() (in module cupynumeric)": [[19, "cupynumeric.any", false]], "append() (in module cupynumeric)": [[20, "cupynumeric.append", false]], "arange() (in module cupynumeric)": [[21, "cupynumeric.arange", false]], "arccos() (in module cupynumeric)": [[22, "cupynumeric.arccos", false]], "arccosh() (in module cupynumeric)": [[23, "cupynumeric.arccosh", false]], "arcsin() (in module cupynumeric)": [[24, "cupynumeric.arcsin", false]], "arcsinh() (in module cupynumeric)": [[25, "cupynumeric.arcsinh", false]], "arctan() (in module cupynumeric)": [[26, "cupynumeric.arctan", false]], "arctan2() (in module cupynumeric)": [[27, "cupynumeric.arctan2", false]], "arctanh() (in module cupynumeric)": [[28, "cupynumeric.arctanh", false]], "argmax() (cupynumeric.ndarray method)": [[270, "cupynumeric.ndarray.argmax", false]], "argmax() (in module cupynumeric)": [[29, "cupynumeric.argmax", false]], "argmin() (cupynumeric.ndarray method)": [[271, "cupynumeric.ndarray.argmin", false]], "argmin() (in module cupynumeric)": [[30, "cupynumeric.argmin", false]], "argpartition() (cupynumeric.ndarray method)": [[272, "cupynumeric.ndarray.argpartition", false]], "argpartition() (in module cupynumeric)": [[31, "cupynumeric.argpartition", false]], "argsort() (cupynumeric.ndarray method)": [[273, "cupynumeric.ndarray.argsort", false]], "argsort() (in module cupynumeric)": [[32, "cupynumeric.argsort", false]], "argwhere() (in module cupynumeric)": [[33, "cupynumeric.argwhere", false]], "array() (in module cupynumeric)": [[34, "cupynumeric.array", false]], "array_equal() (in module cupynumeric)": [[35, "cupynumeric.array_equal", false]], "array_split() (in module cupynumeric)": [[36, "cupynumeric.array_split", false]], "asarray() (in module cupynumeric)": [[37, "cupynumeric.asarray", false]], "astype() (cupynumeric.ndarray method)": [[274, "cupynumeric.ndarray.astype", false]], "atleast_1d() (in module cupynumeric)": [[38, "cupynumeric.atleast_1d", false]], "atleast_2d() (in module cupynumeric)": [[39, "cupynumeric.atleast_2d", false]], "atleast_3d() (in module cupynumeric)": [[40, "cupynumeric.atleast_3d", false]], "average() (in module cupynumeric)": [[41, "cupynumeric.average", false]], "bartlett() (in module cupynumeric)": [[42, "cupynumeric.bartlett", false]], "base (cupynumeric.ndarray property)": [[275, "cupynumeric.ndarray.base", false]], "behaved (in module cupynumeric)": [[292, "cupynumeric.BEHAVED", false]], "beta() (in module cupynumeric.random)": [[354, "cupynumeric.random.beta", false]], "bincount() (in module cupynumeric)": [[43, "cupynumeric.bincount", false]], "binomial() (in module cupynumeric.random)": [[355, "cupynumeric.random.binomial", false]], "bitgenerator (class in cupynumeric.random)": [[1, "cupynumeric.random.BitGenerator", false]], "bitwise_and() (in module cupynumeric)": [[44, "cupynumeric.bitwise_and", false]], "bitwise_or() (in module cupynumeric)": [[45, "cupynumeric.bitwise_or", false]], "bitwise_xor() (in module cupynumeric)": [[46, "cupynumeric.bitwise_xor", false]], "blackman() (in module cupynumeric)": [[47, "cupynumeric.blackman", false]], "block() (in module cupynumeric)": [[48, "cupynumeric.block", false]], "broadcast (class in cupynumeric)": [[6, "cupynumeric.broadcast", false]], "broadcast_arrays() (in module cupynumeric)": [[49, "cupynumeric.broadcast_arrays", false]], "broadcast_shapes() (in module cupynumeric)": [[50, "cupynumeric.broadcast_shapes", false]], "broadcast_to() (in module cupynumeric)": [[51, "cupynumeric.broadcast_to", false]], "bytes() (in module cupynumeric.random)": [[356, "cupynumeric.random.bytes", false]], "c_contiguous (cupynumeric.ndarray attribute)": [[292, "cupynumeric.ndarray.C_CONTIGUOUS", false]], "carray (in module cupynumeric)": [[292, "cupynumeric.CARRAY", false]], "cbrt() (in module cupynumeric)": [[52, "cupynumeric.cbrt", false]], "ceil() (in module cupynumeric)": [[53, "cupynumeric.ceil", false]], "chisquare() (in module cupynumeric.random)": [[357, "cupynumeric.random.chisquare", false]], "cholesky() (in module cupynumeric.linalg)": [[163, "cupynumeric.linalg.cholesky", false]], "choose() (cupynumeric.ndarray method)": [[276, "cupynumeric.ndarray.choose", false]], "choose() (in module cupynumeric)": [[54, "cupynumeric.choose", false]], "clip() (cupynumeric.ndarray method)": [[277, "cupynumeric.ndarray.clip", false]], "clip() (in module cupynumeric)": [[55, "cupynumeric.clip", false]], "column_stack() (in module cupynumeric)": [[56, "cupynumeric.column_stack", false]], "compress() (cupynumeric.ndarray method)": [[278, "cupynumeric.ndarray.compress", false]], "compress() (in module cupynumeric)": [[57, "cupynumeric.compress", false]], "concatenate() (in module cupynumeric)": [[58, "cupynumeric.concatenate", false]], "conj() (cupynumeric.ndarray method)": [[279, "cupynumeric.ndarray.conj", false]], "conj() (in module cupynumeric)": [[59, "cupynumeric.conj", false]], "conjugate() (cupynumeric.ndarray method)": [[280, "cupynumeric.ndarray.conjugate", false]], "conjugate() (in module cupynumeric)": [[60, "cupynumeric.conjugate", false]], "convolve() (in module cupynumeric)": [[61, "cupynumeric.convolve", false]], "copy() (cupynumeric.ndarray method)": [[281, "cupynumeric.ndarray.copy", false]], "copy() (in module cupynumeric)": [[62, "cupynumeric.copy", false]], "copysign() (in module cupynumeric)": [[63, "cupynumeric.copysign", false]], "copyto() (in module cupynumeric)": [[64, "cupynumeric.copyto", false]], "cos() (in module cupynumeric)": [[65, "cupynumeric.cos", false]], "cosh() (in module cupynumeric)": [[66, "cupynumeric.cosh", false]], "count_nonzero() (in module cupynumeric)": [[67, "cupynumeric.count_nonzero", false]], "cov() (in module cupynumeric)": [[68, "cupynumeric.cov", false]], "cross() (in module cupynumeric)": [[69, "cupynumeric.cross", false]], "ctypes (cupynumeric.ndarray property)": [[282, "cupynumeric.ndarray.ctypes", false]], "cumprod() (cupynumeric.ndarray method)": [[283, "cupynumeric.ndarray.cumprod", false]], "cumprod() (in module cupynumeric)": [[70, "cupynumeric.cumprod", false]], "cumsum() (cupynumeric.ndarray method)": [[284, "cupynumeric.ndarray.cumsum", false]], "cumsum() (in module cupynumeric)": [[71, "cupynumeric.cumsum", false]], "cupynumeric.fft": [[11, "module-cupynumeric.fft", false]], "cupynumeric.linalg": [[458, "module-cupynumeric.linalg", false]], "cupynumeric.random": [[463, "module-cupynumeric.random", false]], "data (cupynumeric.ndarray property)": [[285, "cupynumeric.ndarray.data", false]], "default_rng() (in module cupynumeric.random)": [[358, "cupynumeric.random.default_rng", false]], "deg2rad() (in module cupynumeric)": [[72, "cupynumeric.deg2rad", false]], "degrees() (in module cupynumeric)": [[73, "cupynumeric.degrees", false]], "delete() (in module cupynumeric)": [[74, "cupynumeric.delete", false]], "diag() (in module cupynumeric)": [[75, "cupynumeric.diag", false]], "diag_indices() (in module cupynumeric)": [[76, "cupynumeric.diag_indices", false]], "diag_indices_from() (in module cupynumeric)": [[77, "cupynumeric.diag_indices_from", false]], "diagflat() (in module cupynumeric)": [[78, "cupynumeric.diagflat", false]], "diagonal() (cupynumeric.ndarray method)": [[286, "cupynumeric.ndarray.diagonal", false]], "diagonal() (in module cupynumeric)": [[79, "cupynumeric.diagonal", false]], "diff() (in module cupynumeric)": [[80, "cupynumeric.diff", false]], "digitize() (in module cupynumeric)": [[81, "cupynumeric.digitize", false]], "divide() (in module cupynumeric)": [[82, "cupynumeric.divide", false]], "dot() (cupynumeric.ndarray method)": [[287, "cupynumeric.ndarray.dot", false]], "dot() (in module cupynumeric)": [[83, "cupynumeric.dot", false]], "dsplit() (in module cupynumeric)": [[84, "cupynumeric.dsplit", false]], "dstack() (in module cupynumeric)": [[85, "cupynumeric.dstack", false]], "dtype (cupynumeric.ndarray property)": [[288, "cupynumeric.ndarray.dtype", false]], "dump() (cupynumeric.ndarray method)": [[289, "cupynumeric.ndarray.dump", false]], "dumps() (cupynumeric.ndarray method)": [[290, "cupynumeric.ndarray.dumps", false]], "eig() (in module cupynumeric.linalg)": [[164, "cupynumeric.linalg.eig", false]], "eigh() (in module cupynumeric.linalg)": [[165, "cupynumeric.linalg.eigh", false]], "eigvals() (in module cupynumeric.linalg)": [[166, "cupynumeric.linalg.eigvals", false]], "eigvalsh() (in module cupynumeric.linalg)": [[167, "cupynumeric.linalg.eigvalsh", false]], "einsum() (in module cupynumeric)": [[86, "cupynumeric.einsum", false]], "einsum_path() (in module cupynumeric)": [[87, "cupynumeric.einsum_path", false]], "empty() (in module cupynumeric)": [[88, "cupynumeric.empty", false]], "empty_like() (in module cupynumeric)": [[89, "cupynumeric.empty_like", false]], "equal() (in module cupynumeric)": [[90, "cupynumeric.equal", false]], "exp() (in module cupynumeric)": [[91, "cupynumeric.exp", false]], "exp2() (in module cupynumeric)": [[92, "cupynumeric.exp2", false]], "expand_dims() (in module cupynumeric)": [[93, "cupynumeric.expand_dims", false]], "expm() (in module cupynumeric.linalg)": [[168, "cupynumeric.linalg.expm", false]], "expm1() (in module cupynumeric)": [[94, "cupynumeric.expm1", false]], "exponential() (in module cupynumeric.random)": [[359, "cupynumeric.random.exponential", false]], "extract() (in module cupynumeric)": [[95, "cupynumeric.extract", false]], "eye() (in module cupynumeric)": [[96, "cupynumeric.eye", false]], "f() (in module cupynumeric.random)": [[360, "cupynumeric.random.f", false]], "f_contiguous (in module cupynumeric)": [[292, "cupynumeric.F_CONTIGUOUS", false]], "fabs() (in module cupynumeric)": [[97, "cupynumeric.fabs", false]], "farray (in module cupynumeric)": [[292, "cupynumeric.FARRAY", false]], "fft() (in module cupynumeric.fft)": [[98, "cupynumeric.fft.fft", false]], "fft2() (in module cupynumeric.fft)": [[99, "cupynumeric.fft.fft2", false]], "fftn() (in module cupynumeric.fft)": [[100, "cupynumeric.fft.fftn", false]], "fftshift() (in module cupynumeric.fft)": [[101, "cupynumeric.fft.fftshift", false]], "fill() (cupynumeric.ndarray method)": [[291, "cupynumeric.ndarray.fill", false]], "fill_diagonal() (in module cupynumeric)": [[114, "cupynumeric.fill_diagonal", false]], "find_common_type() (in module cupynumeric)": [[115, "cupynumeric.find_common_type", false]], "flags (cupynumeric.ndarray property)": [[292, "cupynumeric.ndarray.flags", false]], "flat (cupynumeric.ndarray property)": [[293, "cupynumeric.ndarray.flat", false]], "flatnonzero() (in module cupynumeric)": [[116, "cupynumeric.flatnonzero", false]], "flatten() (cupynumeric.ndarray method)": [[294, "cupynumeric.ndarray.flatten", false]], "flip() (cupynumeric.ndarray method)": [[295, "cupynumeric.ndarray.flip", false]], "flip() (in module cupynumeric)": [[117, "cupynumeric.flip", false]], "fliplr() (in module cupynumeric)": [[118, "cupynumeric.fliplr", false]], "flipud() (in module cupynumeric)": [[119, "cupynumeric.flipud", false]], "float_power() (in module cupynumeric)": [[120, "cupynumeric.float_power", false]], "floor() (in module cupynumeric)": [[121, "cupynumeric.floor", false]], "floor_divide() (in module cupynumeric)": [[122, "cupynumeric.floor_divide", false]], "fmax() (in module cupynumeric)": [[123, "cupynumeric.fmax", false]], "fmin() (in module cupynumeric)": [[124, "cupynumeric.fmin", false]], "fmod() (in module cupynumeric)": [[125, "cupynumeric.fmod", false]], "fnc (in module cupynumeric)": [[292, "cupynumeric.FNC", false]], "forc (in module cupynumeric)": [[292, "cupynumeric.FORC", false]], "frexp() (in module cupynumeric)": [[126, "cupynumeric.frexp", false]], "full() (in module cupynumeric)": [[127, "cupynumeric.full", false]], "full_like() (in module cupynumeric)": [[128, "cupynumeric.full_like", false]], "gamma() (in module cupynumeric.random)": [[361, "cupynumeric.random.gamma", false]], "gcd() (in module cupynumeric)": [[129, "cupynumeric.gcd", false]], "generator (class in cupynumeric.random)": [[2, "cupynumeric.random.Generator", false]], "geometric() (in module cupynumeric.random)": [[362, "cupynumeric.random.geometric", false]], "getfield() (cupynumeric.ndarray method)": [[296, "cupynumeric.ndarray.getfield", false]], "gradient() (in module cupynumeric)": [[130, "cupynumeric.gradient", false]], "greater() (in module cupynumeric)": [[131, "cupynumeric.greater", false]], "greater_equal() (in module cupynumeric)": [[132, "cupynumeric.greater_equal", false]], "gumbel() (in module cupynumeric.random)": [[363, "cupynumeric.random.gumbel", false]], "hamming() (in module cupynumeric)": [[133, "cupynumeric.hamming", false]], "hanning() (in module cupynumeric)": [[134, "cupynumeric.hanning", false]], "hfft() (in module cupynumeric.fft)": [[102, "cupynumeric.fft.hfft", false]], "histogram() (in module cupynumeric)": [[135, "cupynumeric.histogram", false]], "hsplit() (in module cupynumeric)": [[136, "cupynumeric.hsplit", false]], "hstack() (in module cupynumeric)": [[137, "cupynumeric.hstack", false]], "hypergeometric() (in module cupynumeric.random)": [[364, "cupynumeric.random.hypergeometric", false]], "hypot() (in module cupynumeric)": [[138, "cupynumeric.hypot", false]], "identity() (in module cupynumeric)": [[139, "cupynumeric.identity", false]], "ifft() (in module cupynumeric.fft)": [[103, "cupynumeric.fft.ifft", false]], "ifft2() (in module cupynumeric.fft)": [[104, "cupynumeric.fft.ifft2", false]], "ifftn() (in module cupynumeric.fft)": [[105, "cupynumeric.fft.ifftn", false]], "ifftshift() (in module cupynumeric.fft)": [[106, "cupynumeric.fft.ifftshift", false]], "ihfft() (in module cupynumeric.fft)": [[107, "cupynumeric.fft.ihfft", false]], "imag (cupynumeric.ndarray property)": [[297, "cupynumeric.ndarray.imag", false]], "imag() (in module cupynumeric)": [[140, "cupynumeric.imag", false]], "index (cupynumeric.broadcast property)": [[6, "cupynumeric.broadcast.index", false]], "indices() (in module cupynumeric)": [[141, "cupynumeric.indices", false]], "inner() (in module cupynumeric)": [[142, "cupynumeric.inner", false]], "insert() (in module cupynumeric)": [[143, "cupynumeric.insert", false]], "invert() (in module cupynumeric)": [[144, "cupynumeric.invert", false]], "irfft() (in module cupynumeric.fft)": [[108, "cupynumeric.fft.irfft", false]], "irfft2() (in module cupynumeric.fft)": [[109, "cupynumeric.fft.irfft2", false]], "irfftn() (in module cupynumeric.fft)": [[110, "cupynumeric.fft.irfftn", false]], "isclose() (in module cupynumeric)": [[145, "cupynumeric.isclose", false]], "iscomplex() (in module cupynumeric)": [[146, "cupynumeric.iscomplex", false]], "iscomplexobj() (in module cupynumeric)": [[147, "cupynumeric.iscomplexobj", false]], "isfinite() (in module cupynumeric)": [[148, "cupynumeric.isfinite", false]], "isinf() (in module cupynumeric)": [[149, "cupynumeric.isinf", false]], "isnan() (in module cupynumeric)": [[150, "cupynumeric.isnan", false]], "isneginf() (in module cupynumeric)": [[151, "cupynumeric.isneginf", false]], "isposinf() (in module cupynumeric)": [[152, "cupynumeric.isposinf", false]], "isreal() (in module cupynumeric)": [[153, "cupynumeric.isreal", false]], "isrealobj() (in module cupynumeric)": [[154, "cupynumeric.isrealobj", false]], "isscalar() (in module cupynumeric)": [[155, "cupynumeric.isscalar", false]], "item() (cupynumeric.ndarray method)": [[298, "cupynumeric.ndarray.item", false]], "itemset (cupynumeric.ndarray attribute)": [[299, "cupynumeric.ndarray.itemset", false]], "itemsize (cupynumeric.ndarray property)": [[300, "cupynumeric.ndarray.itemsize", false]], "iters (cupynumeric.broadcast property)": [[6, "cupynumeric.broadcast.iters", false]], "ix_() (in module cupynumeric)": [[156, "cupynumeric.ix_", false]], "kaiser() (in module cupynumeric)": [[157, "cupynumeric.kaiser", false]], "laplace() (in module cupynumeric.random)": [[365, "cupynumeric.random.laplace", false]], "lcm() (in module cupynumeric)": [[158, "cupynumeric.lcm", false]], "ldexp() (in module cupynumeric)": [[159, "cupynumeric.ldexp", false]], "left_shift() (in module cupynumeric)": [[160, "cupynumeric.left_shift", false]], "less() (in module cupynumeric)": [[161, "cupynumeric.less", false]], "less_equal() (in module cupynumeric)": [[162, "cupynumeric.less_equal", false]], "linspace() (in module cupynumeric)": [[175, "cupynumeric.linspace", false]], "load() (in module cupynumeric)": [[176, "cupynumeric.load", false]], "log() (in module cupynumeric)": [[177, "cupynumeric.log", false]], "log10() (in module cupynumeric)": [[178, "cupynumeric.log10", false]], "log1p() (in module cupynumeric)": [[179, "cupynumeric.log1p", false]], "log2() (in module cupynumeric)": [[180, "cupynumeric.log2", false]], "logaddexp() (in module cupynumeric)": [[181, "cupynumeric.logaddexp", false]], "logaddexp2() (in module cupynumeric)": [[182, "cupynumeric.logaddexp2", false]], "logical_and() (in module cupynumeric)": [[183, "cupynumeric.logical_and", false]], "logical_not() (in module cupynumeric)": [[184, "cupynumeric.logical_not", false]], "logical_or() (in module cupynumeric)": [[185, "cupynumeric.logical_or", false]], "logical_xor() (in module cupynumeric)": [[186, "cupynumeric.logical_xor", false]], "logistic() (in module cupynumeric.random)": [[366, "cupynumeric.random.logistic", false]], "lognormal() (in module cupynumeric.random)": [[367, "cupynumeric.random.lognormal", false]], "logseries() (in module cupynumeric.random)": [[368, "cupynumeric.random.logseries", false]], "logspace() (in module cupynumeric)": [[187, "cupynumeric.logspace", false]], "mask_indices() (in module cupynumeric)": [[188, "cupynumeric.mask_indices", false]], "matmul() (in module cupynumeric)": [[189, "cupynumeric.matmul", false]], "matrix_power() (in module cupynumeric.linalg)": [[169, "cupynumeric.linalg.matrix_power", false]], "max() (cupynumeric.ndarray method)": [[301, "cupynumeric.ndarray.max", false]], "maximum() (in module cupynumeric)": [[190, "cupynumeric.maximum", false]], "mean() (cupynumeric.ndarray method)": [[302, "cupynumeric.ndarray.mean", false]], "mean() (in module cupynumeric)": [[191, "cupynumeric.mean", false]], "median() (in module cupynumeric)": [[192, "cupynumeric.median", false]], "meshgrid() (in module cupynumeric)": [[193, "cupynumeric.meshgrid", false]], "min() (cupynumeric.ndarray method)": [[303, "cupynumeric.ndarray.min", false]], "minimum() (in module cupynumeric)": [[194, "cupynumeric.minimum", false]], "mod() (in module cupynumeric)": [[195, "cupynumeric.mod", false]], "modf() (in module cupynumeric)": [[196, "cupynumeric.modf", false]], "module": [[11, "module-cupynumeric.fft", false], [458, "module-cupynumeric.linalg", false], [463, "module-cupynumeric.random", false]], "moveaxis() (in module cupynumeric)": [[197, "cupynumeric.moveaxis", false]], "multi_dot() (in module cupynumeric.linalg)": [[170, "cupynumeric.linalg.multi_dot", false]], "multiply() (in module cupynumeric)": [[198, "cupynumeric.multiply", false]], "nan_to_num() (in module cupynumeric)": [[199, "cupynumeric.nan_to_num", false]], "nanargmax() (in module cupynumeric)": [[200, "cupynumeric.nanargmax", false]], "nanargmin() (in module cupynumeric)": [[201, "cupynumeric.nanargmin", false]], "nancumprod() (in module cupynumeric)": [[202, "cupynumeric.nancumprod", false]], "nancumsum() (in module cupynumeric)": [[203, "cupynumeric.nancumsum", false]], "nanmax() (in module cupynumeric)": [[204, "cupynumeric.nanmax", false]], "nanmean() (in module cupynumeric)": [[205, "cupynumeric.nanmean", false]], "nanmedian() (in module cupynumeric)": [[206, "cupynumeric.nanmedian", false]], "nanmin() (in module cupynumeric)": [[207, "cupynumeric.nanmin", false]], "nanpercentile() (in module cupynumeric)": [[208, "cupynumeric.nanpercentile", false]], "nanprod() (in module cupynumeric)": [[209, "cupynumeric.nanprod", false]], "nanquantile() (in module cupynumeric)": [[210, "cupynumeric.nanquantile", false]], "nansum() (in module cupynumeric)": [[211, "cupynumeric.nansum", false]], "nbytes (cupynumeric.ndarray property)": [[304, "cupynumeric.ndarray.nbytes", false]], "nd (cupynumeric.broadcast property)": [[6, "cupynumeric.broadcast.nd", false]], "ndarray (class in cupynumeric)": [[4, "cupynumeric.ndarray", false]], "ndim (cupynumeric.broadcast property)": [[6, "cupynumeric.broadcast.ndim", false]], "ndim (cupynumeric.ndarray property)": [[305, "cupynumeric.ndarray.ndim", false]], "ndim() (in module cupynumeric)": [[333, "cupynumeric.ndim", false]], "negative() (in module cupynumeric)": [[334, "cupynumeric.negative", false]], "negative_binomial() (in module cupynumeric.random)": [[369, "cupynumeric.random.negative_binomial", false]], "nextafter() (in module cupynumeric)": [[335, "cupynumeric.nextafter", false]], "noncentral_chisquare() (in module cupynumeric.random)": [[370, "cupynumeric.random.noncentral_chisquare", false]], "noncentral_f() (in module cupynumeric.random)": [[371, "cupynumeric.random.noncentral_f", false]], "nonzero() (cupynumeric.ndarray method)": [[306, "cupynumeric.ndarray.nonzero", false]], "nonzero() (in module cupynumeric)": [[336, "cupynumeric.nonzero", false]], "norm() (in module cupynumeric.linalg)": [[171, "cupynumeric.linalg.norm", false]], "normal() (in module cupynumeric.random)": [[372, "cupynumeric.random.normal", false]], "not_equal() (in module cupynumeric)": [[337, "cupynumeric.not_equal", false]], "numiter (cupynumeric.broadcast property)": [[6, "cupynumeric.broadcast.numiter", false]], "ones() (in module cupynumeric)": [[338, "cupynumeric.ones", false]], "ones_like() (in module cupynumeric)": [[339, "cupynumeric.ones_like", false]], "outer() (in module cupynumeric)": [[340, "cupynumeric.outer", false]], "owndata (in module cupynumeric)": [[292, "cupynumeric.OWNDATA", false]], "packbits() (in module cupynumeric)": [[341, "cupynumeric.packbits", false]], "pareto() (in module cupynumeric.random)": [[373, "cupynumeric.random.pareto", false]], "partition() (cupynumeric.ndarray method)": [[307, "cupynumeric.ndarray.partition", false]], "partition() (in module cupynumeric)": [[342, "cupynumeric.partition", false]], "percentile() (in module cupynumeric)": [[343, "cupynumeric.percentile", false]], "place() (in module cupynumeric)": [[344, "cupynumeric.place", false]], "poisson() (in module cupynumeric.random)": [[374, "cupynumeric.random.poisson", false]], "positive() (in module cupynumeric)": [[345, "cupynumeric.positive", false]], "power() (in module cupynumeric)": [[346, "cupynumeric.power", false]], "power() (in module cupynumeric.random)": [[375, "cupynumeric.random.power", false]], "prod() (cupynumeric.ndarray method)": [[308, "cupynumeric.ndarray.prod", false]], "prod() (in module cupynumeric)": [[347, "cupynumeric.prod", false]], "put() (cupynumeric.ndarray method)": [[309, "cupynumeric.ndarray.put", false]], "put() (in module cupynumeric)": [[348, "cupynumeric.put", false]], "put_along_axis() (in module cupynumeric)": [[349, "cupynumeric.put_along_axis", false]], "putmask() (in module cupynumeric)": [[350, "cupynumeric.putmask", false]], "qr() (in module cupynumeric.linalg)": [[172, "cupynumeric.linalg.qr", false]], "quantile() (in module cupynumeric)": [[351, "cupynumeric.quantile", false]], "rad2deg() (in module cupynumeric)": [[352, "cupynumeric.rad2deg", false]], "radians() (in module cupynumeric)": [[353, "cupynumeric.radians", false]], "rand() (in module cupynumeric.random)": [[376, "cupynumeric.random.rand", false]], "randint() (in module cupynumeric.random)": [[377, "cupynumeric.random.randint", false]], "randn() (in module cupynumeric.random)": [[378, "cupynumeric.random.randn", false]], "random() (in module cupynumeric.random)": [[379, "cupynumeric.random.random", false]], "random_integers() (in module cupynumeric.random)": [[380, "cupynumeric.random.random_integers", false]], "random_sample() (in module cupynumeric.random)": [[381, "cupynumeric.random.random_sample", false]], "ranf() (in module cupynumeric.random)": [[382, "cupynumeric.random.ranf", false]], "ravel() (cupynumeric.ndarray method)": [[310, "cupynumeric.ndarray.ravel", false]], "ravel() (in module cupynumeric)": [[396, "cupynumeric.ravel", false]], "ravel_multi_index() (in module cupynumeric)": [[397, "cupynumeric.ravel_multi_index", false]], "rayleigh() (in module cupynumeric.random)": [[383, "cupynumeric.random.rayleigh", false]], "real (cupynumeric.ndarray property)": [[311, "cupynumeric.ndarray.real", false]], "real() (in module cupynumeric)": [[398, "cupynumeric.real", false]], "real_if_close() (in module cupynumeric)": [[399, "cupynumeric.real_if_close", false]], "reciprocal() (in module cupynumeric)": [[400, "cupynumeric.reciprocal", false]], "remainder() (in module cupynumeric)": [[401, "cupynumeric.remainder", false]], "repeat() (in module cupynumeric)": [[402, "cupynumeric.repeat", false]], "reset() (cupynumeric.broadcast method)": [[6, "cupynumeric.broadcast.reset", false]], "reshape() (cupynumeric.ndarray method)": [[312, "cupynumeric.ndarray.reshape", false]], "reshape() (in module cupynumeric)": [[403, "cupynumeric.reshape", false]], "rfft() (in module cupynumeric.fft)": [[111, "cupynumeric.fft.rfft", false]], "rfft2() (in module cupynumeric.fft)": [[112, "cupynumeric.fft.rfft2", false]], "rfftn() (in module cupynumeric.fft)": [[113, "cupynumeric.fft.rfftn", false]], "right_shift() (in module cupynumeric)": [[404, "cupynumeric.right_shift", false]], "rint() (in module cupynumeric)": [[405, "cupynumeric.rint", false]], "roll() (in module cupynumeric)": [[406, "cupynumeric.roll", false]], "roots() (in module cupynumeric)": [[407, "cupynumeric.roots", false]], "rot90() (in module cupynumeric)": [[408, "cupynumeric.rot90", false]], "round() (in module cupynumeric)": [[409, "cupynumeric.round", false]], "row_stack() (in module cupynumeric)": [[410, "cupynumeric.row_stack", false]], "sample() (in module cupynumeric.random)": [[384, "cupynumeric.random.sample", false]], "searchsorted() (cupynumeric.ndarray method)": [[313, "cupynumeric.ndarray.searchsorted", false]], "searchsorted() (in module cupynumeric)": [[411, "cupynumeric.searchsorted", false]], "seed() (in module cupynumeric.random)": [[385, "cupynumeric.random.seed", false]], "select() (in module cupynumeric)": [[412, "cupynumeric.select", false]], "setfield() (cupynumeric.ndarray method)": [[314, "cupynumeric.ndarray.setfield", false]], "setflags() (cupynumeric.ndarray method)": [[315, "cupynumeric.ndarray.setflags", false]], "shape (cupynumeric.broadcast property)": [[6, "cupynumeric.broadcast.shape", false]], "shape (cupynumeric.ndarray property)": [[316, "cupynumeric.ndarray.shape", false]], "shape() (in module cupynumeric)": [[413, "cupynumeric.shape", false]], "sign() (in module cupynumeric)": [[414, "cupynumeric.sign", false]], "signbit() (in module cupynumeric)": [[415, "cupynumeric.signbit", false]], "sin() (in module cupynumeric)": [[416, "cupynumeric.sin", false]], "sinh() (in module cupynumeric)": [[417, "cupynumeric.sinh", false]], "size (cupynumeric.broadcast property)": [[6, "cupynumeric.broadcast.size", false]], "size (cupynumeric.ndarray property)": [[317, "cupynumeric.ndarray.size", false]], "solve() (in module cupynumeric.linalg)": [[173, "cupynumeric.linalg.solve", false]], "sort() (cupynumeric.ndarray method)": [[318, "cupynumeric.ndarray.sort", false]], "sort() (in module cupynumeric)": [[418, "cupynumeric.sort", false]], "sort_complex() (in module cupynumeric)": [[419, "cupynumeric.sort_complex", false]], "split() (in module cupynumeric)": [[420, "cupynumeric.split", false]], "sqrt() (in module cupynumeric)": [[421, "cupynumeric.sqrt", false]], "square() (in module cupynumeric)": [[422, "cupynumeric.square", false]], "squeeze() (cupynumeric.ndarray method)": [[319, "cupynumeric.ndarray.squeeze", false]], "squeeze() (in module cupynumeric)": [[423, "cupynumeric.squeeze", false]], "stack() (in module cupynumeric)": [[424, "cupynumeric.stack", false]], "standard_cauchy() (in module cupynumeric.random)": [[386, "cupynumeric.random.standard_cauchy", false]], "standard_exponential() (in module cupynumeric.random)": [[387, "cupynumeric.random.standard_exponential", false]], "standard_gamma() (in module cupynumeric.random)": [[388, "cupynumeric.random.standard_gamma", false]], "standard_t() (in module cupynumeric.random)": [[389, "cupynumeric.random.standard_t", false]], "strides (cupynumeric.ndarray property)": [[320, "cupynumeric.ndarray.strides", false]], "subtract() (in module cupynumeric)": [[425, "cupynumeric.subtract", false]], "sum() (cupynumeric.ndarray method)": [[321, "cupynumeric.ndarray.sum", false]], "sum() (in module cupynumeric)": [[426, "cupynumeric.sum", false]], "svd() (in module cupynumeric.linalg)": [[174, "cupynumeric.linalg.svd", false]], "swapaxes() (cupynumeric.ndarray method)": [[322, "cupynumeric.ndarray.swapaxes", false]], "swapaxes() (in module cupynumeric)": [[427, "cupynumeric.swapaxes", false]], "t (cupynumeric.ndarray property)": [[212, "cupynumeric.ndarray.T", false]], "take() (cupynumeric.ndarray method)": [[323, "cupynumeric.ndarray.take", false]], "take() (in module cupynumeric)": [[428, "cupynumeric.take", false]], "take_along_axis() (in module cupynumeric)": [[429, "cupynumeric.take_along_axis", false]], "tan() (in module cupynumeric)": [[430, "cupynumeric.tan", false]], "tanh() (in module cupynumeric)": [[431, "cupynumeric.tanh", false]], "tensordot() (in module cupynumeric)": [[432, "cupynumeric.tensordot", false]], "tile() (in module cupynumeric)": [[433, "cupynumeric.tile", false]], "tobytes() (cupynumeric.ndarray method)": [[324, "cupynumeric.ndarray.tobytes", false]], "tofile() (cupynumeric.ndarray method)": [[325, "cupynumeric.ndarray.tofile", false]], "tolist() (cupynumeric.ndarray method)": [[326, "cupynumeric.ndarray.tolist", false]], "tostring() (cupynumeric.ndarray method)": [[327, "cupynumeric.ndarray.tostring", false]], "trace() (cupynumeric.ndarray method)": [[328, "cupynumeric.ndarray.trace", false]], "trace() (in module cupynumeric)": [[434, "cupynumeric.trace", false]], "transpose() (cupynumeric.ndarray method)": [[329, "cupynumeric.ndarray.transpose", false]], "transpose() (in module cupynumeric)": [[435, "cupynumeric.transpose", false]], "tri() (in module cupynumeric)": [[436, "cupynumeric.tri", false]], "triangular() (in module cupynumeric.random)": [[390, "cupynumeric.random.triangular", false]], "tril() (in module cupynumeric)": [[437, "cupynumeric.tril", false]], "tril_indices() (in module cupynumeric)": [[438, "cupynumeric.tril_indices", false]], "tril_indices_from() (in module cupynumeric)": [[439, "cupynumeric.tril_indices_from", false]], "triu() (in module cupynumeric)": [[440, "cupynumeric.triu", false]], "triu_indices() (in module cupynumeric)": [[441, "cupynumeric.triu_indices", false]], "triu_indices_from() (in module cupynumeric)": [[442, "cupynumeric.triu_indices_from", false]], "true_divide() (in module cupynumeric)": [[443, "cupynumeric.true_divide", false]], "trunc() (in module cupynumeric)": [[444, "cupynumeric.trunc", false]], "uniform() (in module cupynumeric.random)": [[391, "cupynumeric.random.uniform", false]], "unique() (cupynumeric.ndarray method)": [[330, "cupynumeric.ndarray.unique", false]], "unique() (in module cupynumeric)": [[445, "cupynumeric.unique", false]], "unpackbits() (in module cupynumeric)": [[446, "cupynumeric.unpackbits", false]], "unravel_index() (in module cupynumeric)": [[447, "cupynumeric.unravel_index", false]], "var() (cupynumeric.ndarray method)": [[331, "cupynumeric.ndarray.var", false]], "var() (in module cupynumeric)": [[448, "cupynumeric.var", false]], "vdot() (in module cupynumeric)": [[449, "cupynumeric.vdot", false]], "view() (cupynumeric.ndarray method)": [[332, "cupynumeric.ndarray.view", false]], "vonmises() (in module cupynumeric.random)": [[392, "cupynumeric.random.vonmises", false]], "vsplit() (in module cupynumeric)": [[450, "cupynumeric.vsplit", false]], "vstack() (in module cupynumeric)": [[451, "cupynumeric.vstack", false]], "wald() (in module cupynumeric.random)": [[393, "cupynumeric.random.wald", false]], "weibull() (in module cupynumeric.random)": [[394, "cupynumeric.random.weibull", false]], "where() (in module cupynumeric)": [[452, "cupynumeric.where", false]], "writeable (in module cupynumeric)": [[292, "cupynumeric.WRITEABLE", false]], "writebackifcopy (in module cupynumeric)": [[292, "cupynumeric.WRITEBACKIFCOPY", false]], "zeros() (in module cupynumeric)": [[453, "cupynumeric.zeros", false]], "zeros_like() (in module cupynumeric)": [[454, "cupynumeric.zeros_like", false]], "zipf() (in module cupynumeric.random)": [[395, "cupynumeric.random.zipf", false]]}, "objects": {"cupynumeric": [[292, 0, 1, "", "ALIGNED"], [292, 0, 1, "", "BEHAVED"], [292, 0, 1, "", "CARRAY"], [292, 0, 1, "", "FARRAY"], [292, 0, 1, "", "FNC"], [292, 0, 1, "", "FORC"], [292, 0, 1, "", "F_CONTIGUOUS"], [292, 0, 1, "", "OWNDATA"], [292, 0, 1, "", "WRITEABLE"], [292, 0, 1, "", "WRITEBACKIFCOPY"], [12, 1, 1, "", "absolute"], [13, 1, 1, "", "add"], [14, 1, 1, "", "all"], [15, 1, 1, "", "allclose"], [16, 1, 1, "", "amax"], [17, 1, 1, "", "amin"], [18, 1, 1, "", "angle"], [19, 1, 1, "", "any"], [20, 1, 1, "", "append"], [21, 1, 1, "", "arange"], [22, 1, 1, "", "arccos"], [23, 1, 1, "", "arccosh"], [24, 1, 1, "", "arcsin"], [25, 1, 1, "", "arcsinh"], [26, 1, 1, "", "arctan"], [27, 1, 1, "", "arctan2"], [28, 1, 1, "", "arctanh"], [29, 1, 1, "", "argmax"], [30, 1, 1, "", "argmin"], [31, 1, 1, "", "argpartition"], [32, 1, 1, "", "argsort"], [33, 1, 1, "", "argwhere"], [34, 1, 1, "", "array"], [35, 1, 1, "", "array_equal"], [36, 1, 1, "", "array_split"], [37, 1, 1, "", "asarray"], [38, 1, 1, "", "atleast_1d"], [39, 1, 1, "", "atleast_2d"], [40, 1, 1, "", "atleast_3d"], [41, 1, 1, "", "average"], [42, 1, 1, "", "bartlett"], [43, 1, 1, "", "bincount"], [44, 1, 1, "", "bitwise_and"], [45, 1, 1, "", "bitwise_or"], [46, 1, 1, "", "bitwise_xor"], [47, 1, 1, "", "blackman"], [48, 1, 1, "", "block"], [6, 2, 1, "", "broadcast"], [49, 1, 1, "", "broadcast_arrays"], [50, 1, 1, "", "broadcast_shapes"], [51, 1, 1, "", "broadcast_to"], [52, 1, 1, "", "cbrt"], [53, 1, 1, "", "ceil"], [54, 1, 1, "", "choose"], [55, 1, 1, "", "clip"], [56, 1, 1, "", "column_stack"], [57, 1, 1, "", "compress"], [58, 1, 1, "", "concatenate"], [59, 1, 1, "", "conj"], [60, 1, 1, "", "conjugate"], [61, 1, 1, "", "convolve"], [62, 1, 1, "", "copy"], [63, 1, 1, "", "copysign"], [64, 1, 1, "", "copyto"], [65, 1, 1, "", "cos"], [66, 1, 1, "", "cosh"], [67, 1, 1, "", "count_nonzero"], [68, 1, 1, "", "cov"], [69, 1, 1, "", "cross"], [70, 1, 1, "", "cumprod"], [71, 1, 1, "", "cumsum"], [72, 1, 1, "", "deg2rad"], [73, 1, 1, "", "degrees"], [74, 1, 1, "", "delete"], [75, 1, 1, "", "diag"], [76, 1, 1, "", "diag_indices"], [77, 1, 1, "", "diag_indices_from"], [78, 1, 1, "", "diagflat"], [79, 1, 1, "", "diagonal"], [80, 1, 1, "", "diff"], [81, 1, 1, "", "digitize"], [82, 1, 1, "", "divide"], [83, 1, 1, "", "dot"], [84, 1, 1, "", "dsplit"], [85, 1, 1, "", "dstack"], [86, 1, 1, "", "einsum"], [87, 1, 1, "", "einsum_path"], [88, 1, 1, "", "empty"], [89, 1, 1, "", "empty_like"], [90, 1, 1, "", "equal"], [91, 1, 1, "", "exp"], [92, 1, 1, "", "exp2"], [93, 1, 1, "", "expand_dims"], [94, 1, 1, "", "expm1"], [95, 1, 1, "", "extract"], [96, 1, 1, "", "eye"], [97, 1, 1, "", "fabs"], [11, 5, 0, "-", "fft"], [114, 1, 1, "", "fill_diagonal"], [115, 1, 1, "", "find_common_type"], [116, 1, 1, "", "flatnonzero"], [117, 1, 1, "", "flip"], [118, 1, 1, "", "fliplr"], [119, 1, 1, "", "flipud"], [120, 1, 1, "", "float_power"], [121, 1, 1, "", "floor"], [122, 1, 1, "", "floor_divide"], [123, 1, 1, "", "fmax"], [124, 1, 1, "", "fmin"], [125, 1, 1, "", "fmod"], [126, 1, 1, "", "frexp"], [127, 1, 1, "", "full"], [128, 1, 1, "", "full_like"], [129, 1, 1, "", "gcd"], [130, 1, 1, "", "gradient"], [131, 1, 1, "", "greater"], [132, 1, 1, "", "greater_equal"], [133, 1, 1, "", "hamming"], [134, 1, 1, "", "hanning"], [135, 1, 1, "", "histogram"], [136, 1, 1, "", "hsplit"], [137, 1, 1, "", "hstack"], [138, 1, 1, "", "hypot"], [139, 1, 1, "", "identity"], [140, 1, 1, "", "imag"], [141, 1, 1, "", "indices"], [142, 1, 1, "", "inner"], [143, 1, 1, "", "insert"], [144, 1, 1, "", "invert"], [145, 1, 1, "", "isclose"], [146, 1, 1, "", "iscomplex"], [147, 1, 1, "", "iscomplexobj"], [148, 1, 1, "", "isfinite"], [149, 1, 1, "", "isinf"], [150, 1, 1, "", "isnan"], [151, 1, 1, "", "isneginf"], [152, 1, 1, "", "isposinf"], [153, 1, 1, "", "isreal"], [154, 1, 1, "", "isrealobj"], [155, 1, 1, "", "isscalar"], [156, 1, 1, "", "ix_"], [157, 1, 1, "", "kaiser"], [158, 1, 1, "", "lcm"], [159, 1, 1, "", "ldexp"], [160, 1, 1, "", "left_shift"], [161, 1, 1, "", "less"], [162, 1, 1, "", "less_equal"], [458, 5, 0, "-", "linalg"], [175, 1, 1, "", "linspace"], [176, 1, 1, "", "load"], [177, 1, 1, "", "log"], [178, 1, 1, "", "log10"], [179, 1, 1, "", "log1p"], [180, 1, 1, "", "log2"], [181, 1, 1, "", "logaddexp"], [182, 1, 1, "", "logaddexp2"], [183, 1, 1, "", "logical_and"], [184, 1, 1, "", "logical_not"], [185, 1, 1, "", "logical_or"], [186, 1, 1, "", "logical_xor"], [187, 1, 1, "", "logspace"], [188, 1, 1, "", "mask_indices"], [189, 1, 1, "", "matmul"], [190, 1, 1, "", "maximum"], [191, 1, 1, "", "mean"], [192, 1, 1, "", "median"], [193, 1, 1, "", "meshgrid"], [194, 1, 1, "", "minimum"], [195, 1, 1, "", "mod"], [196, 1, 1, "", "modf"], [197, 1, 1, "", "moveaxis"], [198, 1, 1, "", "multiply"], [199, 1, 1, "", "nan_to_num"], [200, 1, 1, "", "nanargmax"], [201, 1, 1, "", "nanargmin"], [202, 1, 1, "", "nancumprod"], [203, 1, 1, "", "nancumsum"], [204, 1, 1, "", "nanmax"], [205, 1, 1, "", "nanmean"], [206, 1, 1, "", "nanmedian"], [207, 1, 1, "", "nanmin"], [208, 1, 1, "", "nanpercentile"], [209, 1, 1, "", "nanprod"], [210, 1, 1, "", "nanquantile"], [211, 1, 1, "", "nansum"], [4, 2, 1, "", "ndarray"], [333, 1, 1, "", "ndim"], [334, 1, 1, "", "negative"], [335, 1, 1, "", "nextafter"], [336, 1, 1, "", "nonzero"], [337, 1, 1, "", "not_equal"], [338, 1, 1, "", "ones"], [339, 1, 1, "", "ones_like"], [340, 1, 1, "", "outer"], [341, 1, 1, "", "packbits"], [342, 1, 1, "", "partition"], [343, 1, 1, "", "percentile"], [344, 1, 1, "", "place"], [345, 1, 1, "", "positive"], [346, 1, 1, "", "power"], [347, 1, 1, "", "prod"], [348, 1, 1, "", "put"], [349, 1, 1, "", "put_along_axis"], [350, 1, 1, "", "putmask"], [351, 1, 1, "", "quantile"], [352, 1, 1, "", "rad2deg"], [353, 1, 1, "", "radians"], [463, 5, 0, "-", "random"], [396, 1, 1, "", "ravel"], [397, 1, 1, "", "ravel_multi_index"], [398, 1, 1, "", "real"], [399, 1, 1, "", "real_if_close"], [400, 1, 1, "", "reciprocal"], [401, 1, 1, "", "remainder"], [402, 1, 1, "", "repeat"], [403, 1, 1, "", "reshape"], [404, 1, 1, "", "right_shift"], [405, 1, 1, "", "rint"], [406, 1, 1, "", "roll"], [407, 1, 1, "", "roots"], [408, 1, 1, "", "rot90"], [409, 1, 1, "", "round"], [410, 1, 1, "", "row_stack"], [411, 1, 1, "", "searchsorted"], [412, 1, 1, "", "select"], [413, 1, 1, "", "shape"], [414, 1, 1, "", "sign"], [415, 1, 1, "", "signbit"], [416, 1, 1, "", "sin"], [417, 1, 1, "", "sinh"], [418, 1, 1, "", "sort"], [419, 1, 1, "", "sort_complex"], [420, 1, 1, "", "split"], [421, 1, 1, "", "sqrt"], [422, 1, 1, "", "square"], [423, 1, 1, "", "squeeze"], [424, 1, 1, "", "stack"], [425, 1, 1, "", "subtract"], [426, 1, 1, "", "sum"], [427, 1, 1, "", "swapaxes"], [428, 1, 1, "", "take"], [429, 1, 1, "", "take_along_axis"], [430, 1, 1, "", "tan"], [431, 1, 1, "", "tanh"], [432, 1, 1, "", "tensordot"], [433, 1, 1, "", "tile"], [434, 1, 1, "", "trace"], [435, 1, 1, "", "transpose"], [436, 1, 1, "", "tri"], [437, 1, 1, "", "tril"], [438, 1, 1, "", "tril_indices"], [439, 1, 1, "", "tril_indices_from"], [440, 1, 1, "", "triu"], [441, 1, 1, "", "triu_indices"], [442, 1, 1, "", "triu_indices_from"], [443, 1, 1, "", "true_divide"], [444, 1, 1, "", "trunc"], [445, 1, 1, "", "unique"], [446, 1, 1, "", "unpackbits"], [447, 1, 1, "", "unravel_index"], [448, 1, 1, "", "var"], [449, 1, 1, "", "vdot"], [450, 1, 1, "", "vsplit"], [451, 1, 1, "", "vstack"], [452, 1, 1, "", "where"], [453, 1, 1, "", "zeros"], [454, 1, 1, "", "zeros_like"]], "cupynumeric.broadcast": [[6, 3, 1, "", "index"], [6, 3, 1, "", "iters"], [6, 3, 1, "", "nd"], [6, 3, 1, "", "ndim"], [6, 3, 1, "", "numiter"], [6, 4, 1, "", "reset"], [6, 3, 1, "", "shape"], [6, 3, 1, "", "size"]], "cupynumeric.fft": [[98, 1, 1, "", "fft"], [99, 1, 1, "", "fft2"], [100, 1, 1, "", "fftn"], [101, 1, 1, "", "fftshift"], [102, 1, 1, "", "hfft"], [103, 1, 1, "", "ifft"], [104, 1, 1, "", "ifft2"], [105, 1, 1, "", "ifftn"], [106, 1, 1, "", "ifftshift"], [107, 1, 1, "", "ihfft"], [108, 1, 1, "", "irfft"], [109, 1, 1, "", "irfft2"], [110, 1, 1, "", "irfftn"], [111, 1, 1, "", "rfft"], [112, 1, 1, "", "rfft2"], [113, 1, 1, "", "rfftn"]], "cupynumeric.linalg": [[163, 1, 1, "", "cholesky"], [164, 1, 1, "", "eig"], [165, 1, 1, "", "eigh"], [166, 1, 1, "", "eigvals"], [167, 1, 1, "", "eigvalsh"], [168, 1, 1, "", "expm"], [169, 1, 1, "", "matrix_power"], [170, 1, 1, "", "multi_dot"], [171, 1, 1, "", "norm"], [172, 1, 1, "", "qr"], [173, 1, 1, "", "solve"], [174, 1, 1, "", "svd"]], "cupynumeric.ndarray": [[292, 0, 1, "", "C_CONTIGUOUS"], [212, 3, 1, "", "T"], [213, 4, 1, "", "__abs__"], [214, 4, 1, "", "__add__"], [215, 4, 1, "", "__and__"], [216, 4, 1, "", "__array__"], [217, 4, 1, "", "__bool__"], [218, 4, 1, "", "__complex__"], [219, 4, 1, "", "__contains__"], [220, 4, 1, "", "__copy__"], [221, 4, 1, "", "__deepcopy__"], [222, 4, 1, "", "__divmod__"], [223, 4, 1, "", "__eq__"], [224, 4, 1, "", "__float__"], [225, 4, 1, "", "__floordiv__"], [226, 4, 1, "", "__ge__"], [227, 4, 1, "", "__getitem__"], [228, 4, 1, "", "__gt__"], [229, 4, 1, "", "__iadd__"], [230, 4, 1, "", "__iand__"], [231, 4, 1, "", "__ifloordiv__"], [232, 4, 1, "", "__ilshift__"], [233, 4, 1, "", "__imatmul__"], [234, 4, 1, "", "__imod__"], [235, 4, 1, "", "__imul__"], [236, 4, 1, "", "__index__"], [4, 4, 1, "", "__init__"], [237, 4, 1, "", "__int__"], [238, 4, 1, "", "__invert__"], [239, 4, 1, "", "__ior__"], [240, 4, 1, "", "__ipow__"], [241, 4, 1, "", "__irshift__"], [242, 4, 1, "", "__isub__"], [243, 4, 1, "", "__itruediv__"], [244, 4, 1, "", "__ixor__"], [245, 4, 1, "", "__le__"], [246, 4, 1, "", "__len__"], [247, 4, 1, "", "__lshift__"], [248, 4, 1, "", "__lt__"], [249, 4, 1, "", "__matmul__"], [250, 4, 1, "", "__mod__"], [251, 4, 1, "", "__mul__"], [252, 4, 1, "", "__ne__"], [253, 4, 1, "", "__neg__"], [254, 4, 1, "", "__new__"], [255, 4, 1, "", "__or__"], [256, 4, 1, "", "__pos__"], [257, 4, 1, "", "__pow__"], [258, 4, 1, "", "__reduce__"], [259, 4, 1, "", "__repr__"], [260, 4, 1, "", "__rmatmul__"], [261, 4, 1, "", "__rshift__"], [262, 4, 1, "", "__setitem__"], [263, 4, 1, "", "__setstate__"], [264, 4, 1, "", "__str__"], [265, 4, 1, "", "__sub__"], [266, 4, 1, "", "__truediv__"], [267, 4, 1, "", "__xor__"], [268, 4, 1, "", "all"], [269, 4, 1, "", "any"], [270, 4, 1, "", "argmax"], [271, 4, 1, "", "argmin"], [272, 4, 1, "", "argpartition"], [273, 4, 1, "", "argsort"], [274, 4, 1, "", "astype"], [275, 3, 1, "", "base"], [276, 4, 1, "", "choose"], [277, 4, 1, "", "clip"], [278, 4, 1, "", "compress"], [279, 4, 1, "", "conj"], [280, 4, 1, "", "conjugate"], [281, 4, 1, "", "copy"], [282, 3, 1, "", "ctypes"], [283, 4, 1, "", "cumprod"], [284, 4, 1, "", "cumsum"], [285, 3, 1, "", "data"], [286, 4, 1, "", "diagonal"], [287, 4, 1, "", "dot"], [288, 3, 1, "", "dtype"], [289, 4, 1, "", "dump"], [290, 4, 1, "", "dumps"], [291, 4, 1, "", "fill"], [292, 3, 1, "", "flags"], [293, 3, 1, "", "flat"], [294, 4, 1, "", "flatten"], [295, 4, 1, "", "flip"], [296, 4, 1, "", "getfield"], [297, 3, 1, "", "imag"], [298, 4, 1, "", "item"], [299, 0, 1, "", "itemset"], [300, 3, 1, "", "itemsize"], [301, 4, 1, "", "max"], [302, 4, 1, "", "mean"], [303, 4, 1, "", "min"], [304, 3, 1, "", "nbytes"], [305, 3, 1, "", "ndim"], [306, 4, 1, "", "nonzero"], [307, 4, 1, "", "partition"], [308, 4, 1, "", "prod"], [309, 4, 1, "", "put"], [310, 4, 1, "", "ravel"], [311, 3, 1, "", "real"], [312, 4, 1, "", "reshape"], [313, 4, 1, "", "searchsorted"], [314, 4, 1, "", "setfield"], [315, 4, 1, "", "setflags"], [316, 3, 1, "", "shape"], [317, 3, 1, "", "size"], [318, 4, 1, "", "sort"], [319, 4, 1, "", "squeeze"], [320, 3, 1, "", "strides"], [321, 4, 1, "", "sum"], [322, 4, 1, "", "swapaxes"], [323, 4, 1, "", "take"], [324, 4, 1, "", "tobytes"], [325, 4, 1, "", "tofile"], [326, 4, 1, "", "tolist"], [327, 4, 1, "", "tostring"], [328, 4, 1, "", "trace"], [329, 4, 1, "", "transpose"], [330, 4, 1, "", "unique"], [331, 4, 1, "", "var"], [332, 4, 1, "", "view"]], "cupynumeric.random": [[1, 2, 1, "", "BitGenerator"], [2, 2, 1, "", "Generator"], [354, 1, 1, "", "beta"], [355, 1, 1, "", "binomial"], [356, 1, 1, "", "bytes"], [357, 1, 1, "", "chisquare"], [358, 1, 1, "", "default_rng"], [359, 1, 1, "", "exponential"], [360, 1, 1, "", "f"], [361, 1, 1, "", "gamma"], [362, 1, 1, "", "geometric"], [363, 1, 1, "", "gumbel"], [364, 1, 1, "", "hypergeometric"], [365, 1, 1, "", "laplace"], [366, 1, 1, "", "logistic"], [367, 1, 1, "", "lognormal"], [368, 1, 1, "", "logseries"], [369, 1, 1, "", "negative_binomial"], [370, 1, 1, "", "noncentral_chisquare"], [371, 1, 1, "", "noncentral_f"], [372, 1, 1, "", "normal"], [373, 1, 1, "", "pareto"], [374, 1, 1, "", "poisson"], [375, 1, 1, "", "power"], [376, 1, 1, "", "rand"], [377, 1, 1, "", "randint"], [378, 1, 1, "", "randn"], [379, 1, 1, "", "random"], [380, 1, 1, "", "random_integers"], [381, 1, 1, "", "random_sample"], [382, 1, 1, "", "ranf"], [383, 1, 1, "", "rayleigh"], [384, 1, 1, "", "sample"], [385, 1, 1, "", "seed"], [386, 1, 1, "", "standard_cauchy"], [387, 1, 1, "", "standard_exponential"], [388, 1, 1, "", "standard_gamma"], [389, 1, 1, "", "standard_t"], [390, 1, 1, "", "triangular"], [391, 1, 1, "", "uniform"], [392, 1, 1, "", "vonmises"], [393, 1, 1, "", "wald"], [394, 1, 1, "", "weibull"], [395, 1, 1, "", "zipf"]], "cupynumeric.random.BitGenerator": [[1, 4, 1, "", "__init__"]], "cupynumeric.random.Generator": [[2, 4, 1, "", "__init__"]]}, "objnames": {"0": ["py", "attribute", "Python attribute"], "1": ["py", "function", "Python function"], "2": ["py", "class", "Python class"], "3": ["py", "property", "Python property"], "4": ["py", "method", "Python method"], "5": ["py", "module", "Python module"]}, "objtypes": {"0": "py:attribute", "1": "py:function", "2": "py:class", "3": "py:property", "4": "py:method", "5": "py:module"}, "terms": {"": [2, 6, 14, 15, 29, 30, 35, 61, 69, 70, 71, 79, 99, 100, 104, 105, 109, 110, 112, 113, 114, 115, 145, 155, 171, 174, 202, 203, 204, 207, 208, 210, 285, 288, 298, 317, 324, 325, 329, 343, 351, 389, 395, 432, 433, 466, 470, 471, 474, 475, 476, 477, 479, 480, 481, 482, 483, 486, 489, 491, 494, 495], "0": [3, 4, 14, 19, 21, 36, 41, 43, 48, 54, 55, 58, 68, 70, 75, 76, 78, 79, 80, 81, 83, 96, 99, 100, 101, 103, 104, 105, 110, 113, 116, 119, 139, 141, 169, 171, 175, 187, 188, 193, 199, 204, 208, 210, 217, 263, 286, 292, 296, 313, 314, 320, 321, 326, 328, 329, 331, 341, 343, 351, 354, 355, 357, 359, 360, 361, 363, 365, 366, 367, 368, 369, 370, 371, 372, 374, 375, 376, 377, 378, 379, 381, 382, 383, 384, 386, 389, 391, 392, 393, 394, 407, 408, 409, 411, 412, 420, 424, 426, 434, 436, 437, 438, 439, 440, 441, 442, 446, 448, 450, 466, 470, 473, 474, 475, 476, 477, 479, 480, 481, 482, 483, 489, 491, 492, 494, 495, 496], "00": 495, "000": 495, "000001": 479, "000028": 483, "000029": 483, "0021705301478625403": 476, "01": [70, 495], "012924932": 495, "017": 485, "03": 473, "05": [15, 145, 474, 495], "07": [475, 489, 494], "075726": 473, "08": [15, 145, 473], "0b00000011": [341, 446], "0d": 488, "0x11403f190": 476, "1": [2, 3, 14, 16, 17, 19, 21, 31, 32, 36, 38, 40, 41, 43, 48, 54, 55, 56, 57, 61, 68, 69, 70, 71, 75, 76, 79, 80, 81, 83, 85, 94, 95, 98, 99, 100, 102, 103, 104, 105, 107, 108, 109, 110, 111, 112, 113, 118, 130, 135, 136, 137, 141, 142, 156, 170, 171, 172, 175, 187, 189, 193, 202, 203, 207, 208, 210, 211, 272, 273, 281, 292, 293, 294, 298, 307, 308, 313, 318, 320, 329, 340, 341, 342, 343, 344, 349, 351, 354, 355, 357, 359, 361, 362, 363, 364, 365, 366, 367, 368, 369, 371, 372, 373, 374, 375, 376, 378, 379, 380, 381, 382, 383, 384, 387, 388, 391, 393, 394, 395, 396, 399, 403, 407, 408, 410, 411, 418, 420, 423, 424, 429, 432, 433, 436, 445, 446, 449, 451, 466, 470, 471, 474, 475, 476, 477, 479, 480, 481, 482, 483, 485, 488, 489, 491, 492, 494, 496], "10": [80, 81, 135, 178, 187, 474, 476, 479, 482, 483, 492, 494, 495], "100": [70, 208, 343, 399, 473, 474, 475, 476, 479, 481, 491, 492, 495], "1000": [474, 475, 481, 489, 495], "10000": [176, 495], "100000": 495, "1000000": [474, 495], "100000000": 495, "1000000k": 495, "100000k": 495, "10000k": 495, "1024": [466, 482], "1083": 495, "10k": 485, "11": [485, 494, 495], "1100": 495, "11432": 495, "11680": 495, "12": [3, 8, 81, 485, 486, 488, 494], "12000": 495, "1202": 495, "1241": 495, "125": 372, "126": 482, "128": 482, "129": 485, "13": [480, 485, 495], "1300": 495, "13012": 495, "134217728": 466, "135": 473, "14": [3, 480], "14000": 495, "141": 495, "15": [81, 171, 481, 495], "150": 495, "15000": 495, "15000x15000": 495, "15973827": 488, "16": [3, 8, 399, 473, 477, 495], "16000": 495, "16969": 495, "17": 3, "17617": 495, "18": [3, 8, 168, 300, 483], "19": 3, "1956": 393, "196": 473, "1970": 495, "1984": 486, "1985": 171, "1992": 476, "1995": 486, "1996": [208, 210, 343, 351], "1997": 474, "1998": 486, "1d": [41, 57, 349, 402, 429, 433], "1d00000000000001": 483, "1e": [15, 145, 475, 476, 480], "1e00000000000000": 483, "2": [3, 39, 40, 48, 56, 68, 69, 75, 76, 77, 78, 79, 80, 81, 83, 84, 85, 92, 96, 99, 102, 103, 104, 107, 108, 109, 110, 111, 112, 113, 114, 118, 119, 130, 156, 159, 164, 165, 166, 167, 170, 171, 172, 174, 180, 182, 189, 193, 208, 210, 320, 329, 343, 351, 359, 362, 370, 394, 399, 408, 410, 420, 432, 433, 434, 451, 466, 470, 473, 474, 475, 476, 477, 479, 480, 481, 482, 485, 486, 487, 488, 494, 496], "20": [81, 320, 373, 480, 482, 495], "200": [372, 495], "2000": [486, 495], "20000": 495, "2000000": 495, "2000000k": 495, "2001": [359, 372], "2004": [470, 486], "2005": 486, "2006": 470, "2015": 486, "2017": 486, "2020": 495, "2024": [474, 475, 481], "2025": 486, "2048": 484, "21": [3, 300, 495], "2193": 495, "22": [3, 495], "2204460492503131e": 399, "225": 495, "22500x22500": 495, "23": [3, 489, 494], "2316419": 474, "2350": 495, "24": [483, 485], "24000": 495, "2461": 481, "25": 482, "250": [3, 8], "25001932": 495, "255": [80, 477, 495], "256": 479, "259": 495, "2593": 495, "26": [474, 491], "27": 491, "273": 481, "275": 495, "277": 475, "28": [3, 491], "280": 474, "29": 3, "294165": 495, "2960": 495, "2d": [114, 329, 408, 482, 494], "2x": 480, "2x2": 480, "2y": 480, "3": [40, 69, 80, 81, 83, 84, 85, 130, 137, 156, 189, 193, 208, 210, 320, 341, 343, 351, 359, 410, 420, 428, 432, 433, 446, 451, 474, 475, 476, 477, 479, 480, 481, 485, 486, 488, 494, 496], "30": 495, "300": 495, "30000": 495, "30000x30000": 495, "31": [475, 491], "3110": 495, "31938153": 474, "32": [8, 209, 320, 471, 482, 495], "320": 479, "33": 491, "330274429": 474, "35": 495, "3550": 495, "356563782": 474, "36": 476, "361": [208, 210, 343, 351], "365": [208, 210, 343, 351], "37": 70, "38": 3, "38000": 495, "39": 480, "39894228040143267793994605993438": 474, "3d": 494, "3e": 70, "3rd": 84, "4": [3, 80, 81, 83, 142, 189, 208, 210, 320, 343, 351, 432, 433, 449, 474, 475, 476, 477, 479, 480, 481, 482, 483, 488, 492, 494, 495, 496], "40": [320, 481, 495], "40000": 495, "4096": 466, "42": [3, 8, 479, 494], "434": 495, "4378": 495, "443": [3, 8], "45": [8, 474], "457": 495, "466": 495, "47": 3, "48000": 495, "49": [8, 495], "4f": 495, "4th": [359, 372], "4x": 495, "4y": 480, "5": [80, 81, 83, 156, 189, 208, 210, 320, 343, 351, 433, 474, 475, 476, 477, 479, 481, 483, 494, 495], "50": [175, 187, 208, 210, 343, 351, 495], "500": 495, "50000": 495, "50000x50000": 495, "5050": 495, "50625": 495, "50e": 495, "51": 372, "5384": 495, "5460": 495, "5596": 495, "57": 359, "6": [3, 80, 81, 208, 210, 320, 343, 351, 473, 474, 475, 476, 479, 480, 481], "600": 482, "6040": 495, "62": [3, 8], "6368": 495, "64": [209, 495], "65536": 466, "659": 474, "69664": 495, "7": [3, 80, 189, 208, 210, 315, 320, 343, 351, 474, 476, 479, 480], "70": 495, "70000": 495, "713": 495, "725": 495, "75625": 495, "75625x75625": 495, "767": 495, "781477937": 474, "7f0524da9740": 483, "7fda18f26000": 483, "7fe90fa7d740": 483, "8": [80, 172, 208, 210, 320, 343, 351, 476, 479, 486, 495], "80": 373, "8000": 495, "805182": 483, "8192": 466, "821255978": 474, "8388608": 483, "875": 481, "8850": 495, "9": [189, 208, 210, 320, 343, 351, 476, 477, 479, 495], "90": 408, "919": 495, "961": 495, "993": 495, "A": [1, 8, 12, 13, 14, 18, 19, 20, 22, 23, 24, 25, 26, 27, 28, 34, 43, 44, 45, 46, 51, 52, 53, 57, 59, 60, 61, 63, 64, 65, 66, 68, 70, 71, 72, 73, 74, 82, 87, 90, 91, 92, 94, 97, 99, 103, 104, 115, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 129, 130, 131, 132, 138, 143, 144, 148, 149, 150, 151, 152, 158, 159, 160, 161, 162, 168, 171, 172, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 188, 189, 190, 192, 194, 195, 196, 198, 199, 202, 203, 206, 209, 211, 274, 289, 292, 293, 294, 295, 298, 315, 320, 324, 327, 334, 335, 337, 340, 345, 346, 352, 353, 358, 374, 378, 389, 396, 400, 401, 403, 404, 405, 408, 409, 414, 415, 416, 417, 420, 421, 422, 425, 428, 430, 431, 433, 435, 443, 444, 446, 448, 466, 475, 476, 479, 483, 486, 489, 495], "AND": [14, 44, 183, 486], "AS": [474, 475, 481, 486], "And": [480, 496], "As": [320, 325, 389, 393, 470, 481, 488, 494, 495], "At": [12, 13, 22, 23, 24, 25, 26, 27, 28, 44, 45, 46, 52, 53, 59, 60, 63, 65, 66, 72, 73, 82, 90, 91, 92, 94, 97, 120, 121, 122, 123, 124, 125, 126, 129, 131, 132, 138, 144, 148, 149, 150, 158, 159, 160, 161, 162, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 190, 194, 195, 196, 198, 334, 335, 337, 345, 346, 352, 353, 400, 401, 404, 405, 414, 415, 416, 417, 421, 422, 425, 430, 431, 443, 444, 475], "BE": 486, "BUT": 486, "BY": 486, "But": 494, "By": [16, 17, 29, 30, 31, 32, 37, 68, 69, 99, 104, 113, 168, 175, 187, 200, 201, 204, 209, 274, 342, 396, 402, 406, 418, 428, 435, 436, 438, 441, 448, 466, 470, 482, 495, 496], "FOR": 486, "For": [12, 13, 21, 22, 23, 24, 25, 26, 27, 28, 36, 40, 44, 45, 46, 52, 53, 55, 59, 60, 61, 63, 65, 66, 70, 71, 72, 73, 74, 76, 80, 81, 82, 85, 86, 90, 91, 92, 94, 97, 98, 102, 103, 105, 108, 109, 111, 112, 114, 118, 119, 120, 121, 122, 123, 124, 125, 126, 129, 131, 132, 137, 138, 144, 145, 148, 149, 150, 158, 159, 160, 161, 162, 169, 171, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 190, 191, 193, 194, 195, 196, 198, 199, 200, 201, 202, 203, 205, 209, 258, 263, 300, 320, 329, 334, 335, 337, 345, 346, 352, 353, 372, 400, 401, 404, 405, 410, 414, 415, 416, 417, 420, 421, 422, 424, 425, 430, 431, 443, 444, 448, 451, 462, 470, 476, 477, 479, 482, 483, 484, 485, 489, 492, 495, 496], "IF": 486, "IN": 486, "ITS": 486, "If": [1, 2, 12, 13, 14, 15, 16, 17, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 34, 35, 37, 41, 42, 43, 44, 45, 46, 47, 48, 49, 52, 53, 54, 55, 57, 58, 59, 60, 61, 63, 64, 65, 66, 68, 69, 70, 71, 72, 73, 74, 75, 79, 80, 81, 82, 83, 86, 87, 90, 91, 92, 94, 96, 97, 98, 99, 100, 102, 103, 104, 105, 107, 108, 110, 111, 113, 114, 117, 120, 121, 122, 123, 124, 125, 126, 129, 130, 131, 132, 133, 134, 135, 138, 140, 141, 142, 143, 144, 145, 148, 149, 150, 151, 152, 153, 157, 158, 159, 160, 161, 162, 164, 165, 166, 167, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 189, 190, 191, 192, 193, 194, 195, 196, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 263, 274, 295, 313, 325, 326, 329, 333, 334, 335, 337, 340, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 380, 381, 382, 383, 384, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 398, 399, 400, 401, 403, 404, 405, 406, 407, 409, 411, 414, 415, 416, 417, 418, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 436, 443, 444, 445, 448, 449, 470, 471, 476, 479, 480, 483, 491, 494, 495], "In": [2, 61, 69, 70, 71, 86, 103, 104, 105, 108, 110, 163, 175, 187, 188, 193, 202, 203, 208, 209, 210, 211, 342, 343, 347, 348, 351, 373, 391, 393, 403, 418, 426, 436, 470, 474, 475, 476, 478, 479, 482, 489, 494, 495], "It": [6, 14, 19, 20, 21, 29, 30, 31, 32, 42, 47, 51, 54, 55, 70, 71, 81, 122, 165, 167, 192, 200, 201, 202, 203, 206, 208, 210, 211, 292, 343, 347, 350, 351, 354, 359, 362, 365, 373, 392, 409, 412, 426, 428, 429, 448, 476, 482, 487, 494, 495], "Its": [55, 57, 349, 359, 434], "NO": 486, "NOT": [144, 184, 385, 486, 495], "No": [37, 163], "Not": [55, 148, 202, 203, 209, 211, 494], "OF": [474, 475, 481, 486], "ON": [471, 486], "OR": [19, 45, 185, 474, 475, 481, 485, 486], "On": 483, "One": [38, 39, 40, 209, 277, 403, 483, 494], "Ones": [34, 202], "Or": 432, "SUCH": 486, "Such": 483, "THE": 486, "TO": 486, "That": 188, "The": [2, 6, 7, 14, 15, 16, 17, 18, 19, 20, 21, 31, 32, 34, 36, 41, 42, 43, 47, 48, 49, 50, 51, 54, 55, 56, 58, 61, 64, 67, 68, 69, 70, 71, 74, 75, 76, 78, 79, 80, 81, 83, 85, 86, 87, 89, 93, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 115, 117, 120, 127, 128, 130, 133, 134, 135, 137, 139, 140, 141, 142, 145, 147, 151, 152, 154, 157, 163, 164, 165, 166, 167, 169, 170, 171, 172, 174, 175, 176, 187, 188, 189, 191, 192, 193, 197, 199, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 263, 274, 282, 289, 292, 294, 295, 297, 300, 311, 315, 320, 324, 325, 326, 333, 338, 339, 341, 342, 343, 347, 348, 349, 351, 354, 358, 359, 360, 361, 362, 363, 365, 370, 372, 373, 374, 376, 377, 378, 380, 383, 386, 390, 391, 392, 393, 394, 395, 396, 398, 402, 403, 406, 407, 408, 409, 410, 412, 413, 418, 420, 423, 424, 426, 428, 429, 432, 433, 434, 436, 438, 439, 441, 442, 445, 446, 447, 448, 449, 451, 453, 454, 455, 471, 472, 473, 474, 476, 477, 479, 480, 482, 483, 485, 486, 488, 491, 492, 494, 495], "Then": [54, 188, 496], "There": [175, 315, 445, 471, 473, 480, 494, 495], "These": [20, 49, 68, 86, 87, 193, 197, 292, 315, 349, 429, 482, 485, 488, 495], "To": [102, 108, 110, 329, 381, 382, 384, 470, 474, 475, 476, 479, 480, 481, 485, 492, 494, 495], "WITH": 486, "With": [14, 16, 17, 19, 29, 30, 41, 171, 191, 192, 200, 201, 204, 205, 206, 207, 208, 209, 210, 211, 343, 347, 351, 426, 448, 482, 484, 495], "_": [407, 476, 494, 495], "__abs__": 0, "__add__": 0, "__and__": 0, "__array__": [0, 34, 332], "__array_function__": [0, 436], "__array_ufunc__": 0, "__bool__": 0, "__buffer__": 0, "__complex__": 0, "__contains__": 0, "__copy__": 0, "__deepcopy__": 0, "__divmod__": 0, "__eq__": 0, "__float__": 0, "__floordiv__": 0, "__format__": 0, "__ge__": 0, "__getitem__": 0, "__gt__": 0, "__hash__": 0, "__iadd__": 0, "__iand__": 0, "__ifloordiv__": 0, "__ilshift__": 0, "__imatmul__": 0, "__imod__": 0, "__imul__": 0, "__index__": 0, "__init__": [0, 1, 2, 4, 491], "__int__": 0, "__invert__": 0, "__ior__": 0, "__ipow__": 0, "__irshift__": 0, "__isub__": 0, "__iter__": 0, "__itruediv__": 0, "__ixor__": 0, "__le__": 0, "__len__": 0, "__lshift__": 0, "__lt__": 0, "__main__": 495, "__matmul__": 0, "__mod__": 0, "__mul__": 0, "__name__": [477, 495], "__ne__": 0, "__neg__": 0, "__or__": 0, "__pos__": 0, "__pow__": 0, "__radd__": 0, "__rand__": 0, "__rdivmod__": 0, "__reduce__": 0, "__reduce_ex__": 0, "__repr__": 0, "__rfloordiv__": 0, "__rmatmul__": 0, "__rmod__": 0, "__rmul__": 0, "__ror__": 0, "__rpow__": 0, "__rshift__": 0, "__rsub__": 0, "__rtruediv__": 0, "__rxor__": 0, "__setitem__": 0, "__setstate__": 0, "__sizeof__": 0, "__str__": 0, "__sub__": 0, "__truediv__": 0, "__xor__": 0, "_f": 171, "a0": 340, "a1": [35, 58, 340, 474, 476], "a100": 484, "a2": [35, 58, 474, 476], "a3": 474, "a4": 474, "a5": 474, "a_": [171, 476], "a_ax": 432, "a_max": 55, "a_min": 55, "a_swap": 427, "aand": 474, "aarch64": [485, 495], "ab": [15, 169, 171, 213, 474], "abandon": 470, "abil": 495, "abl": [171, 470, 495], "about": [103, 292, 315, 466, 470, 475, 479, 485, 489, 495], "abov": [54, 75, 78, 100, 105, 110, 113, 191, 199, 205, 209, 211, 347, 373, 377, 380, 436, 437, 448, 474, 482, 483, 486, 495], "abramowitz": 474, "abrupt": 477, "absolut": [0, 3, 8, 15, 97, 145, 399], "abstract": 482, "ac": [474, 477], "acceler": [466, 483, 484, 495], "accept": [355, 470, 488, 494], "access": [76, 77, 188, 292, 298, 315, 482, 483, 495], "accomod": 476, "accord": [41, 113, 164, 165, 166, 167, 315, 435], "accordingli": [69, 189], "account": [396, 403, 482, 483, 495], "acct": 495, "acct_nam": 495, "accumul": [70, 71, 202, 203, 209, 211, 347, 426, 434, 488], "accur": [130, 475, 476, 483], "accuraci": [103, 104, 105, 108, 110, 476, 480, 495], "achiev": [329, 362, 482, 484], "aco": [3, 8], "acosh": [3, 8], "across": [479, 482, 495], "action": 486, "activ": [485, 495], "actual": [163, 315, 477, 482, 483, 489, 495], "ad": [15, 329, 373, 482, 491], "adapt": 486, "add": [0, 3, 8, 381, 382, 384, 446, 470, 488, 494, 495, 496], "add_argu": 495, "addit": [2, 68, 163, 168, 329, 445, 466, 473, 476, 477, 480, 482, 483, 485, 494, 495], "addition": [358, 471, 488, 494, 495], "address": [428, 470, 495], "adjac": [21, 482, 495], "advanc": [472, 483, 488, 493], "advantag": 495, "advis": 486, "affect": [21, 315, 476], "afford": [483, 495], "after": [85, 114, 189, 208, 210, 320, 335, 343, 351, 406, 410, 451, 470, 473, 482, 491, 494], "again": 332, "against": [6, 14, 15, 16, 17, 19, 29, 30, 41, 49, 50, 171, 191, 192, 200, 201, 204, 205, 206, 207, 208, 209, 210, 211, 343, 347, 349, 351, 426, 429, 448], "aggreg": 495, "agre": [470, 474, 475, 481], "ai": 495, "aim": 484, "alaska": 486, "algebra": [86, 455, 464, 471], "algo_canny_edge_detector": 477, "algorithm": [1, 32, 86, 87, 98, 103, 111, 407, 418, 476, 477, 478, 480, 495], "alia": [327, 379], "alias": 103, "align": [292, 315, 495], "all": [0, 3, 8, 16, 17, 19, 41, 48, 54, 56, 64, 68, 80, 81, 85, 86, 87, 91, 92, 94, 96, 100, 101, 105, 106, 110, 113, 114, 117, 130, 137, 139, 155, 156, 163, 175, 187, 188, 189, 191, 193, 200, 201, 202, 203, 204, 205, 207, 209, 211, 274, 279, 291, 292, 295, 315, 326, 347, 391, 399, 406, 410, 412, 423, 426, 428, 434, 448, 451, 466, 470, 471, 473, 479, 481, 482, 486, 491, 495, 496], "allclos": [0, 3, 8, 491], "allevi": 495, "alloc": [12, 13, 22, 23, 24, 25, 26, 27, 28, 44, 45, 46, 52, 53, 59, 60, 63, 65, 66, 72, 73, 82, 90, 91, 92, 94, 97, 120, 121, 122, 123, 124, 125, 126, 129, 131, 132, 138, 144, 148, 149, 150, 151, 152, 158, 159, 160, 161, 162, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 190, 194, 195, 196, 198, 274, 334, 335, 337, 345, 346, 352, 353, 400, 401, 404, 405, 414, 415, 416, 417, 421, 422, 425, 430, 431, 443, 444, 483, 493, 496], "allow": [16, 17, 36, 48, 64, 83, 86, 135, 142, 176, 189, 192, 204, 206, 207, 208, 210, 274, 343, 351, 428, 432, 436, 449, 470, 477, 482, 495], "alon": 495, "along": [6, 14, 16, 17, 19, 20, 29, 30, 31, 32, 41, 48, 57, 58, 67, 70, 71, 74, 76, 80, 84, 85, 98, 99, 100, 102, 103, 104, 105, 107, 108, 110, 111, 113, 114, 117, 118, 119, 130, 136, 137, 141, 143, 171, 175, 187, 191, 192, 193, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 270, 271, 278, 295, 301, 302, 303, 320, 323, 328, 331, 343, 347, 349, 351, 402, 406, 408, 410, 419, 420, 424, 426, 428, 429, 432, 433, 434, 438, 439, 441, 442, 445, 446, 448, 450, 451, 495], "alpha": [354, 476, 479], "alreadi": [37, 39, 40, 192, 206, 292, 333, 340, 445, 470], "also": [21, 68, 80, 86, 100, 105, 110, 113, 168, 189, 197, 292, 332, 355, 360, 366, 373, 375, 383, 386, 392, 395, 428, 445, 460, 462, 470, 473, 475, 480, 481, 482, 483, 485, 487, 488, 492, 494, 495], "alter": 292, "altern": [14, 16, 17, 19, 70, 71, 191, 192, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 343, 347, 351, 359, 409, 426, 448, 466], "although": [106, 326, 482], "alwai": [54, 79, 84, 120, 136, 155, 164, 165, 166, 167, 176, 325, 423, 450, 466, 470, 483], "am": [340, 470], "amax": [0, 3, 8, 43, 204, 301], "amd": 495, "american": [208, 210, 343, 351], "amin": [0, 3, 8, 207, 303], "among": [282, 495], "amongst": 6, "amount": [483, 495], "an": [2, 6, 12, 13, 14, 16, 17, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 34, 36, 37, 38, 39, 40, 41, 42, 44, 45, 46, 47, 48, 51, 52, 53, 54, 55, 57, 58, 59, 60, 61, 62, 63, 65, 66, 68, 70, 71, 72, 73, 74, 76, 77, 79, 81, 82, 83, 86, 87, 90, 91, 92, 93, 94, 95, 96, 97, 99, 100, 102, 103, 104, 105, 108, 110, 111, 113, 114, 117, 120, 121, 122, 123, 124, 125, 126, 129, 130, 131, 132, 133, 134, 135, 136, 138, 141, 142, 144, 147, 148, 149, 150, 154, 156, 157, 158, 159, 160, 161, 162, 171, 173, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 220, 221, 263, 276, 277, 278, 282, 290, 295, 298, 307, 312, 313, 317, 318, 320, 323, 325, 326, 329, 330, 332, 333, 334, 335, 337, 339, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 355, 357, 359, 360, 362, 371, 376, 378, 393, 395, 396, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 440, 441, 443, 444, 445, 447, 448, 450, 452, 454, 462, 466, 470, 471, 473, 474, 475, 477, 479, 480, 481, 482, 483, 485, 486, 488, 489, 491, 495], "analog": [104, 105], "analogu": [359, 392], "analysi": 483, "angl": [0, 3, 8, 72, 73, 352, 353, 399], "ani": [0, 3, 4, 6, 8, 12, 13, 14, 16, 17, 20, 21, 22, 23, 24, 25, 26, 27, 28, 34, 36, 37, 44, 45, 46, 48, 49, 52, 53, 54, 59, 60, 63, 64, 65, 66, 68, 70, 71, 72, 73, 74, 80, 81, 82, 86, 87, 90, 91, 92, 94, 97, 99, 100, 104, 105, 110, 113, 114, 115, 120, 121, 122, 123, 124, 125, 126, 127, 129, 130, 131, 132, 137, 138, 144, 146, 147, 148, 149, 150, 153, 154, 155, 156, 158, 159, 160, 161, 162, 169, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 189, 190, 191, 194, 195, 196, 198, 200, 201, 202, 203, 204, 205, 207, 209, 211, 274, 275, 282, 283, 284, 288, 292, 293, 295, 296, 301, 303, 308, 314, 321, 324, 326, 334, 335, 337, 345, 346, 347, 352, 353, 391, 400, 401, 402, 404, 405, 412, 414, 415, 416, 417, 421, 422, 425, 426, 430, 431, 434, 443, 444, 448, 470, 473, 474, 475, 481, 482, 486, 492, 494], "anoth": [6, 64, 292, 315, 483, 495], "anova": 360, "answer": 495, "anti": 494, "anyth": [300, 473], "ap": 474, "apach": [470, 474, 475, 481], "api": [292, 315, 379, 466, 471, 476, 477, 480, 483, 484, 489, 490, 492, 493, 495], "appear": [42, 47, 93, 118, 119, 133, 134, 157, 274, 445, 470], "append": [0, 3, 8, 79, 80, 87, 143, 189, 482, 494, 495], "appli": [41, 74, 115, 199, 432, 476, 477, 488, 494, 495], "applic": [474, 475, 481, 482, 489, 491, 493, 495, 496], "apply_along_axi": [3, 8], "apply_over_ax": [3, 8], "approach": [393, 470, 482, 494, 495], "appropri": [29, 30, 48, 54, 81, 200, 201, 292, 315, 377, 380, 428, 462, 470, 482, 495], "approx": 495, "approxim": [474, 476], "ar": [13, 14, 15, 16, 17, 19, 20, 21, 27, 29, 30, 33, 35, 38, 39, 40, 41, 42, 44, 45, 46, 48, 49, 54, 55, 56, 57, 58, 61, 63, 64, 68, 69, 70, 71, 75, 79, 80, 81, 82, 83, 86, 87, 90, 96, 99, 100, 102, 103, 104, 105, 108, 110, 113, 116, 117, 118, 119, 120, 122, 123, 124, 125, 129, 131, 132, 135, 138, 142, 145, 158, 159, 160, 161, 162, 163, 169, 171, 174, 175, 181, 182, 183, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 274, 277, 292, 295, 298, 306, 313, 315, 325, 326, 329, 333, 335, 336, 337, 343, 344, 346, 347, 348, 349, 351, 354, 355, 357, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 377, 378, 380, 381, 382, 383, 384, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 401, 404, 406, 407, 409, 411, 412, 424, 425, 426, 428, 432, 434, 436, 439, 442, 443, 445, 446, 447, 448, 466, 470, 471, 473, 474, 476, 477, 479, 480, 482, 485, 486, 488, 489, 491, 494, 495], "arang": [0, 3, 8], "arbitrari": [88, 89, 292, 317], "arbitrarili": 292, "arc": 27, "arcco": [0, 3, 8], "arccosh": [0, 3, 8], "architectur": [482, 495], "archiv": 325, "arcsin": [0, 3, 8], "arcsinh": [0, 3, 8], "arctan": [0, 3, 8], "arctan2": [0, 3, 8, 18], "arctanh": [0, 3, 8], "area": [292, 315, 482], "arg": [12, 13, 22, 23, 24, 25, 26, 27, 28, 44, 45, 46, 49, 50, 52, 53, 59, 60, 63, 65, 66, 72, 73, 82, 90, 91, 92, 94, 97, 115, 120, 121, 122, 123, 124, 125, 126, 129, 131, 132, 138, 144, 148, 149, 150, 156, 158, 159, 160, 161, 162, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 190, 194, 195, 196, 198, 298, 334, 335, 337, 345, 346, 352, 353, 400, 401, 404, 405, 414, 415, 416, 417, 421, 422, 425, 430, 431, 443, 444, 474, 495], "argmax": [0, 3, 8], "argmin": [0, 3, 8, 479], "argpars": 495, "argpartit": [0, 3, 8, 349, 429], "argsort": [0, 3, 8, 31, 313, 349, 411, 429], "argument": [2, 12, 13, 18, 21, 22, 23, 24, 25, 26, 27, 28, 44, 45, 46, 52, 53, 55, 58, 59, 60, 61, 63, 65, 66, 72, 73, 81, 82, 83, 87, 90, 91, 92, 94, 97, 115, 120, 121, 122, 123, 124, 125, 126, 129, 131, 132, 135, 138, 140, 142, 144, 148, 149, 150, 151, 152, 155, 158, 159, 160, 161, 162, 170, 175, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 193, 194, 195, 196, 198, 263, 274, 282, 298, 329, 332, 334, 335, 337, 345, 346, 352, 353, 376, 378, 398, 400, 401, 404, 405, 414, 415, 416, 417, 421, 422, 424, 425, 430, 431, 432, 436, 443, 444, 445, 449, 493, 495], "argumentpars": 495, "argwher": [0, 3, 8], "ari": [38, 39, 40, 420], "aris": [360, 486], "arithmet": [7, 54, 191, 205, 298, 464], "around": [3, 8, 348, 428, 495], "arr": [20, 51, 62, 74, 77, 95, 143, 192, 206, 292, 344, 349, 428, 429, 439, 442, 488], "arr_t": 274, "arrai": [0, 2, 6, 7, 12, 13, 14, 15, 16, 17, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 156, 157, 158, 159, 160, 161, 162, 164, 165, 166, 167, 168, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 216, 220, 221, 263, 272, 273, 274, 276, 277, 278, 281, 282, 285, 287, 288, 289, 290, 291, 292, 293, 294, 295, 297, 298, 302, 304, 305, 307, 308, 309, 310, 311, 312, 313, 315, 316, 317, 318, 320, 321, 322, 323, 324, 325, 326, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 367, 376, 377, 378, 380, 381, 382, 384, 391, 396, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 464, 466, 475, 476, 477, 479, 480, 481, 482, 483, 488, 489, 491, 496], "array2str": [3, 8], "array_equ": [0, 3, 8], "array_equiv": [3, 8], "array_lik": [6, 12, 13, 14, 15, 16, 17, 18, 19, 20, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 37, 38, 39, 40, 41, 43, 44, 45, 46, 48, 49, 51, 52, 53, 55, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 77, 78, 79, 80, 81, 82, 83, 86, 87, 89, 90, 91, 92, 93, 94, 95, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 113, 114, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 128, 129, 130, 131, 132, 135, 138, 140, 142, 143, 144, 145, 146, 148, 149, 150, 151, 152, 153, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 189, 190, 191, 192, 193, 194, 195, 196, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 295, 313, 333, 334, 335, 336, 337, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 396, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 411, 413, 414, 415, 416, 417, 418, 419, 421, 422, 423, 424, 425, 426, 427, 428, 430, 431, 432, 433, 434, 435, 436, 437, 439, 443, 444, 445, 447, 448, 449, 452, 454], "array_of_diagon": 79, "array_repr": [3, 8], "array_split": [0, 3, 8], "array_str": [3, 8], "array_typ": 41, "arraylik": [55, 135, 412, 452], "articl": 470, "asanyarrai": 3, "asarrai": [0, 3, 8], "asarray_chkfinit": [3, 8], "ascend": [165, 167, 313, 411], "ascontiguousarrai": 3, "asfortranarrai": 3, "asin": [3, 8], "asinh": [3, 8], "ask": [470, 484], "asmatrix": [3, 8], "aspect": 495, "aspir": 483, "assembl": 48, "assert": [476, 479, 494], "assign": [68, 291, 292, 482, 488], "assoc": 479, "associ": [41, 135, 479, 486, 489, 494], "assum": [41, 69, 87, 168, 188, 471], "ast": 176, "astyp": [0, 3, 8, 80, 288, 477, 483, 495], "asynchron": [349, 488, 489], "atan": [3, 8], "atan2": [3, 8], "atanh": [3, 8], "atleast2d": 329, "atleast_1d": [0, 3, 8, 93], "atleast_2d": [0, 3, 8, 93], "atleast_3d": [0, 3, 8, 93], "atol": [15, 145], "attempt": [41, 81, 191, 204, 205, 207, 211, 292, 333, 448, 466, 494, 495], "attribut": [4, 7, 89, 128, 282, 292, 304, 339, 454], "author": 486, "auto": 61, "autom": 470, "automat": [61, 170, 470, 471, 482, 485, 495], "avail": [1, 2, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 213, 214, 215, 219, 220, 221, 222, 223, 225, 226, 228, 229, 230, 231, 232, 233, 234, 235, 238, 239, 240, 241, 242, 243, 244, 245, 247, 248, 249, 250, 251, 252, 253, 255, 256, 257, 259, 260, 261, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 276, 277, 278, 279, 280, 281, 286, 287, 289, 290, 291, 293, 294, 295, 298, 301, 302, 303, 306, 307, 308, 309, 310, 312, 313, 315, 318, 319, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 470, 471, 485, 494, 495, 496], "averag": [0, 3, 8, 68, 191, 205, 302, 464, 481, 482, 495], "averaged_inverted_cdf": [208, 210, 343, 351], "avg": 41, "avoid": [39, 40, 274, 479, 483, 488], "aweight": 68, "ax": [14, 16, 17, 19, 29, 30, 41, 48, 67, 69, 79, 80, 93, 99, 100, 101, 104, 105, 106, 109, 110, 112, 113, 117, 130, 142, 171, 173, 191, 192, 197, 200, 201, 204, 205, 206, 207, 208, 209, 210, 211, 295, 319, 329, 343, 347, 351, 406, 408, 426, 427, 432, 433, 434, 435, 448, 477, 495], "axi": [14, 16, 17, 18, 19, 20, 29, 30, 31, 32, 36, 41, 57, 58, 67, 69, 70, 71, 74, 79, 80, 83, 84, 85, 93, 98, 99, 100, 102, 103, 104, 105, 107, 108, 109, 110, 111, 112, 113, 117, 118, 119, 130, 136, 137, 141, 143, 171, 175, 187, 191, 192, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 268, 269, 270, 271, 272, 273, 278, 283, 284, 295, 301, 302, 303, 307, 308, 318, 319, 320, 321, 323, 329, 331, 341, 342, 343, 347, 349, 351, 396, 402, 403, 406, 408, 410, 418, 419, 420, 423, 424, 426, 427, 428, 429, 433, 434, 445, 446, 448, 450, 451, 479], "axis1": [79, 286, 322, 328, 427, 434], "axis2": [79, 286, 322, 328, 427, 434], "axisa": 69, "axisb": 69, "axisc": 69, "b": [6, 15, 35, 48, 69, 83, 85, 122, 137, 142, 145, 173, 189, 292, 340, 354, 381, 382, 384, 410, 432, 449, 451, 470, 471, 476, 495], "b0": 340, "b1": 340, "b_ax": 432, "ba": 54, "back": [31, 54, 155, 289, 290, 342, 396, 403, 466, 474, 480, 483, 491, 495], "backward": [79, 98, 99, 100, 102, 103, 104, 105, 107, 108, 109, 110, 111, 112, 113, 130, 274, 396], "bad": 364, "balanc": 495, "baltimor": 171, "bar": 494, "barba": 482, "bartlett": [0, 3, 8], "base": [1, 34, 37, 61, 86, 178, 180, 182, 187, 274, 292, 315, 344, 350, 466, 470, 471, 479, 482, 483, 488], "base_repr": [3, 8], "bash": 495, "bashrc": 495, "basi": [466, 474, 475, 481], "basic": [32, 418, 462, 464, 472, 482, 493, 494], "batch": [98, 99, 100, 102, 103, 104, 105, 107, 108, 109, 110, 111, 112, 113, 164, 165, 166, 167, 466], "bayesian": 354, "bbox_to_anchor": 476, "bchoic": 54, "becaus": [21, 298, 372, 393, 474, 475, 481, 483, 488, 494], "becom": [13, 27, 40, 44, 45, 46, 54, 55, 63, 82, 90, 120, 122, 123, 124, 125, 129, 131, 132, 138, 158, 159, 160, 161, 162, 181, 182, 183, 185, 186, 190, 194, 195, 198, 329, 335, 337, 346, 393, 401, 404, 425, 443, 495, 496], "been": [85, 349, 380, 410, 429, 451, 483], "befor": [14, 16, 17, 19, 20, 41, 58, 61, 118, 119, 143, 191, 204, 205, 211, 292, 313, 347, 369, 406, 411, 426, 433, 448, 449, 480, 483, 485, 494, 495], "begin": [175, 187, 472, 480, 495], "behav": [292, 348, 428], "behavior": [61, 81, 189, 324, 327, 349, 350, 377, 380, 433, 466, 482, 485, 493, 495], "being": [21, 423, 470, 483, 495], "bell": 372, "belong": [81, 479], "below": [68, 75, 78, 108, 171, 187, 315, 436, 437, 440, 471, 474, 476, 480, 482, 491, 492, 494, 495, 496], "benchmark": [473, 483, 490, 493, 495], "bernoulli": 362, "bessel": 157, "best": [87, 470, 483, 493], "beta": [0, 3, 8, 157, 359, 479], "better": [21, 54, 489, 495], "between": [15, 21, 36, 80, 130, 175, 187, 208, 210, 325, 343, 351, 359, 365, 380, 393, 399, 476, 477, 479, 480, 482, 494, 495], "beyond": [81, 406], "bham": 474, "bia": 68, "big": [168, 341, 446, 474], "bigger": 495, "billion": 482, "bin": [43, 81, 135, 341, 446, 479, 485, 495], "bin_edg": 135, "binari": [176, 263, 325, 341, 446, 455, 464, 486], "binary_repr": [3, 8], "binaryio": 176, "binaryoptask": 483, "bincount": [0, 3, 8, 479], "binomi": [0, 3, 8, 369, 374], "bit": [1, 44, 45, 46, 144, 160, 184, 209, 320, 341, 404, 446, 464], "bit_gener": 2, "bitgener": [2, 3, 8, 358], "bitord": [341, 446], "bitwise_and": [0, 3, 8], "bitwise_count": [3, 8], "bitwise_invert": [3, 8], "bitwise_left_shift": [3, 8], "bitwise_or": [0, 3, 8], "bitwise_right_shift": [3, 8], "bitwise_xor": [0, 3, 8], "bla": 471, "black": [478, 479, 485], "black_schol": [473, 474, 485, 495], "blackman": [0, 3, 8], "block": [0, 3, 8, 85, 137, 320, 410, 451, 482], "block_arrai": 48, "blog": 483, "blue": [476, 479], "bmat": [3, 8], "bmatrix": 480, "bn": 340, "boilerpl": 495, "boldsymbol": 495, "bond": 495, "bool": [1, 3, 4, 8, 12, 13, 14, 15, 16, 17, 18, 19, 22, 23, 24, 25, 26, 27, 28, 29, 30, 34, 35, 36, 41, 44, 45, 46, 49, 51, 52, 53, 57, 59, 60, 63, 64, 65, 66, 68, 72, 73, 74, 81, 82, 86, 87, 90, 91, 92, 94, 97, 114, 120, 121, 122, 123, 124, 125, 126, 129, 131, 132, 135, 138, 141, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 158, 159, 160, 161, 162, 171, 174, 175, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 190, 191, 192, 193, 194, 195, 196, 198, 199, 200, 201, 204, 205, 206, 207, 208, 209, 210, 211, 263, 274, 301, 303, 308, 315, 321, 334, 335, 337, 343, 345, 346, 347, 351, 352, 353, 400, 401, 404, 405, 412, 414, 415, 416, 417, 421, 422, 425, 426, 430, 431, 443, 444, 445, 448, 452, 462, 466, 494], "bool_": [3, 8], "boolean": [14, 19, 64, 80, 145, 150, 151, 152, 153, 156, 188, 315, 341, 350, 448, 479], "boolean_sequ": 156, "borrow": 292, "both": [13, 15, 20, 27, 41, 44, 45, 46, 61, 63, 68, 69, 82, 83, 90, 104, 120, 122, 123, 124, 125, 129, 131, 132, 138, 142, 145, 158, 159, 160, 161, 162, 171, 181, 182, 183, 185, 186, 189, 190, 193, 194, 195, 198, 292, 335, 337, 346, 360, 361, 371, 372, 401, 404, 425, 432, 434, 443, 471, 480, 483, 494], "bottleneck": 495, "bound": [57, 81, 348, 428], "boundari": [70, 71, 130, 202, 203, 391, 476, 481, 482, 489], "boundsmod": [54, 397, 428], "break": [479, 480, 494], "bright": 495, "broadcast": [3, 7, 8, 12, 13, 14, 16, 17, 19, 22, 23, 24, 25, 26, 27, 28, 29, 30, 41, 44, 45, 46, 48, 49, 50, 51, 52, 53, 54, 55, 59, 60, 63, 64, 65, 66, 72, 73, 82, 83, 90, 91, 92, 94, 97, 120, 121, 122, 123, 124, 125, 126, 129, 131, 132, 138, 142, 144, 148, 149, 150, 151, 152, 158, 159, 160, 161, 162, 171, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 189, 190, 191, 192, 193, 194, 195, 196, 198, 200, 201, 204, 205, 206, 207, 208, 209, 210, 211, 334, 335, 337, 343, 345, 346, 347, 349, 351, 352, 353, 374, 400, 401, 402, 404, 405, 414, 415, 416, 417, 421, 422, 425, 426, 429, 430, 431, 432, 443, 444, 448, 449, 452, 455, 488, 495], "broadcast_arrai": [0, 3, 8], "broadcast_shap": [0, 3, 8], "broadcast_to": [0, 3, 8], "brownian": 393, "bryan": 474, "bsd": 486, "buffer": [4, 16, 17, 54, 70, 71, 192, 202, 203, 204, 206, 207, 285, 292, 298, 315], "build": [385, 464, 472, 479, 488, 495], "built": [21, 471, 475, 483, 484, 495], "builtin": 326, "bundl": 485, "busday_count": [3, 8], "busday_offset": [3, 8], "busdaycalendar": [3, 8], "busi": 486, "bypass": [325, 495], "byte": [0, 3, 8, 64, 86, 176, 189, 274, 304, 320, 324, 327, 341, 483], "bytes_": [3, 8], "bytesio": 325, "byteswap": 8, "c": [34, 48, 57, 69, 171, 189, 274, 282, 292, 294, 310, 312, 315, 324, 325, 327, 380, 393, 396, 397, 403, 433, 447, 470, 471, 474, 479, 485, 486, 495], "c_": 68, "c_contigu": 292, "ca": 292, "calcul": [7, 12, 41, 61, 69, 80, 86, 91, 92, 94, 106, 130, 165, 167, 171, 175, 189, 192, 206, 208, 210, 317, 343, 347, 351, 448, 449, 471, 474, 479, 495], "calculate_dist": 479, "call": [54, 81, 111, 170, 188, 192, 206, 220, 221, 282, 292, 315, 372, 428, 433, 466, 474, 475, 480, 483, 495], "call_result": 474, "callabl": 188, "can": [14, 19, 20, 37, 41, 48, 64, 68, 69, 76, 79, 86, 87, 98, 99, 100, 103, 104, 105, 130, 137, 147, 154, 155, 156, 168, 169, 171, 175, 189, 192, 206, 208, 209, 210, 274, 282, 289, 292, 298, 300, 315, 320, 325, 332, 343, 349, 351, 373, 399, 403, 428, 429, 432, 434, 445, 462, 466, 470, 471, 473, 474, 475, 476, 477, 480, 481, 482, 484, 485, 487, 488, 492, 494, 495], "can_cast": [3, 8], "cannot": [58, 176, 200, 201, 292, 325, 407, 483], "canon": [474, 480, 483], "capabl": [41, 485, 495], "care": 495, "carrai": 292, "cartesian": 193, "case": [14, 19, 21, 31, 32, 34, 41, 54, 61, 69, 70, 71, 79, 80, 81, 83, 102, 130, 141, 175, 187, 188, 193, 202, 203, 208, 209, 210, 211, 298, 315, 317, 341, 342, 343, 347, 348, 349, 351, 354, 377, 380, 381, 382, 383, 384, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 403, 418, 426, 429, 432, 436, 470, 478, 488, 491, 494], "cast": [12, 13, 22, 23, 24, 25, 26, 27, 28, 44, 45, 46, 52, 53, 58, 59, 60, 63, 64, 65, 66, 70, 71, 72, 73, 80, 82, 86, 90, 91, 92, 94, 97, 120, 121, 122, 123, 124, 125, 126, 129, 131, 132, 138, 142, 144, 148, 149, 150, 158, 159, 160, 161, 162, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 189, 190, 191, 192, 194, 195, 196, 198, 199, 202, 203, 205, 206, 209, 211, 274, 288, 334, 335, 337, 340, 345, 346, 347, 352, 353, 400, 401, 404, 405, 409, 414, 415, 416, 417, 421, 422, 425, 426, 430, 431, 432, 443, 444, 448, 449, 480], "castingkind": [12, 13, 22, 23, 24, 25, 26, 27, 28, 44, 45, 46, 52, 53, 58, 59, 60, 63, 65, 66, 72, 73, 82, 86, 90, 91, 92, 94, 97, 120, 121, 122, 123, 124, 125, 126, 129, 131, 132, 138, 144, 148, 149, 150, 158, 159, 160, 161, 162, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 189, 190, 194, 195, 196, 198, 334, 335, 337, 345, 346, 352, 353, 400, 401, 404, 405, 414, 415, 416, 417, 421, 422, 425, 430, 431, 443, 444], "cat": 483, "cauchi": 386, "caus": [285, 482, 486, 494], "cbrt": [0, 3, 8], "cdot": [480, 495], "cdoubl": [3, 8], "ceil": [0, 3, 8, 21], "cell": 482, "center": [61, 101, 392, 476, 479, 481, 495], "centr": 372, "central": [130, 370, 371, 372], "centroid": 479, "centroid_dot": 479, "centroid_mask": 479, "certain": [188, 320, 466], "certif": 472, "certifi": 470, "cfd": 484, "cg": [473, 495], "chain": 170, "challeng": [482, 495], "chanc": 470, "chang": [63, 64, 86, 175, 189, 202, 203, 274, 292, 315, 329, 344, 349, 350, 396, 403, 464, 470, 477, 480, 484, 490, 493, 494, 495, 496], "channel": [85, 137, 410, 451, 482, 485], "charact": [3, 8, 491], "characterist": 372, "charg": 486, "check": [71, 81, 147, 154, 163, 202, 203, 470, 477, 479, 480, 483, 485, 494, 495], "chi": [357, 360, 370, 383], "chisquar": [0, 3, 8], "choic": [3, 8, 54, 276, 325], "choicelist": 412, "choleski": [0, 3, 8, 473, 478, 492], "cholesky_tim": 475, "choos": [0, 3, 8, 27, 61, 87, 452, 483, 495], "chosen": [135, 452], "chuang": 482, "circl": 392, "circular": 392, "circumst": 292, "claim": [393, 486], "class": [1, 2, 4, 6, 14, 16, 17, 19, 34, 37, 96, 139, 141, 191, 204, 207, 209, 274, 332, 338, 347, 382, 384, 426, 436, 455], "classic": [86, 373], "claus": [486, 494], "clean": 482, "clear": 292, "clearli": 495, "clip": [0, 3, 8, 54, 348, 428], "clipped_arrai": 55, "clongdoubl": [3, 8, 298], "close": [47, 175, 274, 380, 399, 470, 483], "closest": 325, "closest_observ": [208, 210, 343, 351], "cluster": [478, 483, 484, 493], "cmap": [477, 495], "cnd": 474, "cnd_d1": 474, "cnd_d2": 474, "co": [0, 3, 8, 476], "coastal": 482, "code": [32, 48, 193, 418, 466, 472, 473, 482, 484, 486, 490, 493, 494], "codebas": 492, "coeffici": [173, 407, 474], "coercion": 115, "coin": 362, "collaps": [293, 294], "collect": [79, 285, 495], "color": [473, 476, 479], "colorama": 473, "column": [8, 34, 56, 68, 96, 114, 118, 119, 136, 137, 139, 164, 165, 170, 172, 294, 320, 329, 396, 436, 438, 441, 447, 491, 495], "column_stack": [0, 3, 8], "com": [470, 477, 483, 486, 488, 495, 496], "combin": [93, 100, 105, 110, 113, 130, 473, 489, 495], "combinatori": 87, "come": [445, 495], "comm": 482, "comm_world": 482, "comma": [86, 473], "comman": 483, "command": [473, 483, 485, 487, 491, 495], "comment": 470, "commit": [470, 482], "common": [13, 27, 44, 45, 46, 54, 63, 82, 86, 90, 115, 120, 122, 123, 124, 125, 129, 131, 132, 138, 158, 159, 160, 161, 162, 181, 182, 183, 185, 186, 190, 194, 195, 198, 335, 337, 346, 359, 394, 401, 404, 425, 443, 494, 495], "common_typ": [3, 8], "commonli": [372, 483, 494], "commun": [470, 482, 483, 494, 495], "compact": 478, "compactli": 476, "companion": 407, "compar": [15, 16, 17, 35, 145, 204, 207, 476, 495], "comparison": [7, 455, 464], "compat": [79, 274, 326, 327, 396, 403, 436, 495], "compil": [173, 315, 471], "complet": [87, 208, 210, 343, 351, 471, 482, 484, 491, 495], "complex": [18, 35, 43, 59, 60, 70, 71, 81, 83, 98, 99, 100, 103, 104, 105, 107, 108, 111, 113, 140, 142, 146, 147, 153, 154, 164, 166, 199, 202, 203, 208, 210, 279, 280, 343, 351, 398, 399, 409, 419, 449, 462, 464, 482, 495], "complex128": [3, 8], "complex256": [3, 8], "complex64": [3, 8], "complexflo": [3, 8], "compli": 470, "complianc": [474, 475, 481], "complic": 482, "compon": [6, 35, 48, 69, 101, 140, 199, 398, 432, 494, 495], "compos": 483, "compound": 474, "compress": [0, 3, 8, 325], "compressed_arrai": 57, "compuat": 491, "comput": [16, 17, 18, 41, 44, 45, 46, 61, 70, 71, 86, 97, 98, 99, 100, 102, 103, 104, 105, 107, 108, 109, 110, 111, 112, 113, 130, 135, 141, 144, 164, 165, 166, 167, 169, 170, 171, 172, 173, 174, 183, 184, 185, 186, 191, 192, 202, 203, 204, 205, 206, 207, 208, 209, 210, 340, 343, 351, 407, 430, 431, 432, 448, 466, 474, 475, 476, 477, 479, 480, 482, 483, 484, 488, 489, 494], "computat": 495, "computation": 168, "compute_uv": 174, "concat": [3, 8], "concaten": [0, 3, 8, 48, 85, 137, 410, 451], "concern": 495, "conclud": [470, 482], "conclus": 482, "cond": [8, 494, 495], "conda": 471, "conda_override_cuda": 485, "condit": [12, 13, 22, 23, 24, 25, 26, 27, 28, 44, 45, 46, 52, 53, 57, 59, 60, 63, 65, 66, 72, 73, 82, 90, 91, 92, 94, 95, 97, 120, 121, 122, 123, 124, 125, 126, 129, 131, 132, 138, 144, 148, 149, 150, 158, 159, 160, 161, 162, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 190, 194, 195, 196, 198, 274, 278, 334, 335, 337, 344, 345, 346, 350, 352, 353, 390, 400, 401, 404, 405, 412, 414, 415, 416, 417, 421, 422, 425, 430, 431, 443, 444, 452, 474, 475, 476, 481, 482, 486, 489, 494, 495], "condition": 494, "condlist": 412, "conduct": 495, "configur": [466, 471, 472, 483, 494], "configurt": 483, "conj": [0, 3, 8], "conjug": [0, 3, 8, 59, 83, 108, 142, 163, 279, 449, 475], "connect": [486, 495], "consecut": 80, "consequ": [18, 449, 483], "consequenti": 486, "conserv": 193, "consid": [15, 35, 68, 70, 86, 87, 145, 165, 167, 373, 476, 480, 495], "consider": 495, "consist": [14, 21, 61, 80, 175, 429, 470, 482], "const": [494, 495], "constant": [130, 295], "constraint": [41, 495], "construct": [7, 48, 54, 75, 117, 118, 119, 156, 276, 324, 358, 433], "constructor": [2, 462], "consum": [168, 304], "contact": 483, "contain": [2, 29, 30, 41, 43, 54, 55, 57, 64, 68, 69, 79, 80, 103, 116, 130, 135, 141, 191, 192, 200, 201, 204, 205, 206, 207, 208, 210, 211, 263, 288, 312, 324, 325, 336, 343, 351, 396, 407, 409, 432, 438, 439, 441, 442, 445, 448, 462, 495], "content": [43, 192, 206, 208, 210, 292, 315, 324, 325, 343, 351, 464], "context": [474, 482], "contigu": [49, 51, 193, 274, 292, 294, 320, 324, 396, 403], "continu": [359, 360, 381, 382, 384, 390, 392, 474], "contour": 495, "contract": [86, 87, 471, 486], "contribut": [8, 41, 135, 472, 495], "contributor": [470, 486], "control": [58, 64, 86, 189, 274, 324, 473, 496], "conveni": 325, "convent": [18, 86, 105, 189, 193], "converg": [164, 165, 166, 167, 174, 479, 480, 494, 495], "convers": [41, 64, 86, 189, 191, 204, 205, 207, 211, 274, 332, 333, 448], "convert": [14, 19, 37, 38, 39, 40, 72, 73, 143, 192, 206, 208, 210, 290, 325, 326, 329, 332, 343, 351, 352, 353, 407, 447, 476, 488, 495], "convolut": [61, 477, 495], "convolv": [0, 8, 477, 495], "convolve_nd": [477, 495], "convolvemethodtyp": 61, "convolvemod": 61, "coordin": [130, 193, 447, 479], "copi": [0, 3, 8, 20, 34, 37, 38, 39, 40, 48, 49, 57, 64, 74, 75, 79, 143, 193, 199, 220, 221, 274, 292, 293, 294, 298, 315, 324, 326, 342, 396, 403, 408, 418, 419, 437, 440, 470, 474, 475, 481, 483, 486, 493, 495], "copyright": [470, 474, 475, 481, 486], "copysign": [0, 3, 8], "copyto": [0, 3, 8, 344], "core": [2, 466, 473, 474, 483, 495, 496], "corner": [104, 105, 495], "corpor": [474, 475, 481], "corrcoef": [3, 8], "correct": [20, 58, 424, 482], "correctli": [14, 16, 17, 19, 27, 29, 30, 41, 171, 191, 192, 200, 201, 204, 205, 206, 207, 208, 209, 210, 211, 343, 347, 351, 426, 448, 495], "correl": [8, 464], "correspond": [8, 54, 58, 78, 79, 99, 100, 104, 105, 108, 110, 113, 130, 141, 151, 152, 156, 164, 165, 188, 200, 201, 208, 210, 313, 341, 343, 351, 406, 411, 412, 413, 476, 477, 485, 488, 494, 495], "correspondingli": [420, 483], "cosh": [0, 3, 8], "cosin": [22, 23, 47, 65, 66, 133, 134], "cost": [87, 482], "costli": 87, "could": 494, "count": [14, 19, 41, 43, 67, 117, 130, 135, 211, 295, 347, 426, 446, 455, 464, 479], "count_nonzero": [0, 3, 8], "counterclockwis": [18, 408], "cours": 484, "cov": [0, 3, 8], "covari": 68, "cover": [3, 8, 393, 470], "coverag": [466, 490, 492, 493], "cp": 482, "cpu": [1, 2, 3, 8, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 101, 106, 114, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 213, 214, 215, 219, 220, 221, 222, 223, 225, 226, 228, 229, 230, 231, 232, 233, 234, 235, 238, 239, 240, 241, 242, 243, 244, 245, 247, 248, 249, 250, 251, 252, 253, 255, 256, 257, 259, 260, 261, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 276, 277, 278, 279, 280, 281, 286, 287, 289, 290, 291, 293, 294, 295, 298, 301, 302, 303, 306, 307, 308, 309, 310, 312, 313, 315, 318, 319, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 466, 471, 473, 480, 483, 484, 492, 494, 496], "cputsc": 487, "creat": [12, 13, 22, 23, 24, 25, 26, 27, 28, 34, 44, 45, 46, 52, 53, 54, 59, 60, 63, 65, 66, 72, 73, 78, 82, 87, 90, 91, 92, 94, 97, 120, 121, 122, 123, 124, 125, 126, 129, 131, 132, 138, 144, 148, 149, 150, 158, 159, 160, 161, 162, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 190, 194, 195, 196, 198, 199, 282, 288, 292, 334, 335, 337, 345, 346, 349, 352, 353, 376, 400, 401, 404, 405, 409, 414, 415, 416, 417, 421, 422, 425, 427, 430, 431, 443, 444, 470, 476, 481, 482, 485, 494, 495], "create_subarrai": 482, "creation": [87, 292, 436, 455, 462, 464], "critic": [482, 495], "crop": [98, 99, 100, 102, 103, 104, 105, 107, 108, 110, 111, 113], "cross": [0, 3, 8, 156], "crucial": 495, "csingl": [3, 8], "csv": [466, 483, 491], "ct": 98, "cube": 52, "cubic": 87, "cubla": 466, "cuda": [466, 471, 473, 482, 485, 495], "cumbersom": 495, "cumprod": [0, 3, 8, 71, 202, 203, 488], "cumsum": [0, 3, 8], "cumul": [70, 71, 202, 203, 474, 495], "cumulative_prod": [3, 8], "cumulative_sum": [3, 8], "cunumer": 483, "cupi": 482, "cupynumer": [0, 3, 7, 455, 460, 464, 466, 471, 473, 474, 475, 477, 479, 480, 481, 482, 485, 487, 488, 489, 491, 492, 493, 496], "cupynumeric_doctor": [466, 494], "cupynumeric_doctor_filenam": 466, "cupynumeric_doctor_format": 466, "cupynumeric_doctor_traceback": 466, "cupynumeric_fallback_stacktrac": 466, "cupynumeric_fast_math": 466, "cupynumeric_force_thunk": 466, "cupynumeric_matmul_cache_s": 466, "cupynumeric_min_cpu_chunk": 466, "cupynumeric_min_gpu_chunk": 466, "cupynumeric_min_omp_chunk": 466, "cupynumeric_numpy_compat": [200, 201, 204, 207, 466], "cupynumeric_preload_cudalib": 466, "cupynumeric_report_coverag": [466, 491, 492], "cupynumeric_report_dump_callstack": [466, 491], "cupynumeric_report_dump_csv": [466, 491], "cupynumeric_root": 471, "cupynumeric_warn": 466, "curand": 385, "curiou": 476, "current": [6, 31, 32, 61, 163, 172, 174, 176, 216, 292, 332, 342, 349, 402, 418, 436, 445, 466, 474, 483, 487, 488, 491, 494, 495, 496], "curv": [372, 476], "cusolv": 466, "cusolvermp": 173, "custom": [462, 471, 482], "cycl": 156, "d": [2, 40, 41, 43, 56, 57, 61, 68, 70, 71, 75, 77, 78, 79, 83, 85, 96, 109, 112, 114, 118, 119, 137, 141, 142, 156, 170, 171, 189, 193, 202, 203, 204, 211, 281, 293, 294, 313, 329, 341, 344, 396, 403, 410, 411, 420, 426, 433, 434, 445, 446, 449, 451, 470, 471, 474, 475, 495], "d0": [376, 378], "d1": [376, 378, 474], "d2": 474, "d_1": 495, "d_2": 495, "damag": 486, "data": [16, 17, 21, 33, 34, 37, 41, 58, 62, 64, 68, 78, 85, 86, 88, 89, 96, 98, 99, 100, 102, 103, 104, 105, 107, 108, 109, 110, 111, 112, 113, 115, 127, 128, 135, 137, 139, 141, 154, 164, 165, 166, 167, 175, 176, 187, 188, 189, 191, 192, 199, 205, 206, 208, 209, 210, 211, 216, 263, 274, 282, 288, 292, 298, 300, 312, 315, 324, 325, 326, 329, 332, 338, 339, 343, 344, 347, 348, 349, 351, 396, 399, 403, 409, 410, 423, 426, 429, 434, 436, 437, 448, 451, 453, 454, 455, 464, 479, 480, 482, 486, 489, 494, 495], "data_magnitude_squar": 479, "dataset": [135, 495], "datatyp": [115, 482, 493], "date": 495, "datetim": [474, 475, 481], "datetime64": [3, 8], "datetime_as_str": [3, 8], "ddof": [68, 331, 448], "de": 372, "deadlock": 482, "deal": [486, 495], "dealloc": 292, "deb": 495, "debian": 486, "debug": [473, 482], "decai": 365, "decid": 466, "decim": 409, "decompos": [126, 475, 482], "decomposit": [163, 174, 464, 478, 482], "decreas": [81, 474, 480, 483], "decreasingli": [104, 105], "dedic": 483, "deep": [48, 221, 326, 482], "deepcopi": 221, "def": [474, 475, 477, 479, 480, 481, 482, 494, 495], "default": [2, 12, 13, 14, 16, 17, 18, 19, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 34, 37, 41, 44, 45, 46, 52, 53, 54, 57, 58, 59, 60, 61, 63, 65, 66, 67, 68, 69, 70, 71, 72, 73, 75, 78, 79, 80, 81, 82, 86, 87, 88, 90, 91, 92, 94, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 117, 120, 121, 122, 123, 124, 125, 126, 127, 129, 130, 131, 132, 135, 138, 139, 141, 144, 148, 149, 150, 158, 159, 160, 161, 162, 165, 167, 168, 171, 174, 175, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 189, 190, 191, 192, 193, 194, 195, 196, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 263, 274, 294, 295, 324, 325, 334, 335, 337, 338, 341, 342, 343, 345, 346, 347, 351, 352, 353, 354, 355, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 377, 380, 381, 382, 383, 384, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 399, 400, 401, 402, 404, 405, 406, 408, 409, 412, 414, 415, 416, 417, 418, 420, 421, 422, 425, 426, 428, 430, 431, 434, 435, 436, 437, 438, 441, 443, 444, 445, 446, 448, 450, 453, 466, 473, 477, 479, 488, 495, 496], "default_rng": [0, 2, 3, 8, 479], "defer": [4, 466, 474, 475, 481, 483, 488], "defin": [54, 69, 74, 89, 128, 135, 143, 171, 199, 208, 210, 298, 339, 343, 351, 390, 399, 408, 436, 454, 470, 471, 474, 475, 477, 479, 480, 481, 494, 495], "definit": [61, 103, 105, 163, 475, 495], "deg": [18, 168], "deg2rad": [0, 3, 8, 353], "degre": [3, 8, 18, 72, 352, 353, 357, 360, 370, 371, 389, 408, 448, 495], "delai": [494, 495], "delet": [0, 3, 8], "delta": [448, 479], "demand": 482, "democrat": 495, "demonstr": [492, 495], "denomin": [360, 371], "denot": 8, "dens": [141, 476], "densiti": [135, 359, 372], "dep": 471, "depend": [43, 75, 171, 173, 175, 189, 209, 380, 412, 452, 472, 483, 494, 495], "depict": 495, "deprec": 380, "depth": [48, 84, 85, 326], "deriv": [130, 367, 372, 474, 476, 477, 486, 494, 495], "derivative_exact": 476, "descend": 174, "describ": [171, 315, 359, 372, 407, 476, 483, 494], "descript": [103, 105, 135, 274, 473], "descriptor": 332, "design": [47, 361, 388, 493, 495], "desir": [34, 51, 80, 88, 127, 191, 204, 205, 207, 211, 338, 377, 433, 448, 453, 485], "despit": 327, "dest": 482, "destin": [58, 64, 197, 349, 424], "det": [3, 8], "detail": [16, 17, 70, 71, 75, 77, 98, 103, 108, 109, 111, 112, 176, 193, 202, 203, 204, 207, 209, 211, 271, 282, 320, 347, 426, 438, 439, 440, 441, 442, 445, 462, 470, 473, 482, 483, 485, 494, 495], "detect": [478, 485], "detector": 477, "determin": [34, 61, 70, 71, 79, 115, 173, 202, 203, 209, 315, 412, 434, 447, 477, 479, 480, 482, 495], "determinist": [479, 488], "develop": [471, 482, 483, 484, 486, 495], "developercertif": 470, "deviat": [367, 372, 494], "devic": [482, 495], "devin": 486, "df": [357, 370, 389], "dfden": [360, 371], "dfnum": [360, 371], "dft": [98, 103, 111], "dgx": 484, "diag": [0, 3, 8, 476, 488], "diag_indic": [0, 3, 8, 77], "diag_indices_from": [0, 3, 8], "diagflat": [0, 3, 8], "diagnos": 494, "diagon": [0, 3, 8, 75, 76, 77, 78, 96, 114, 139, 163, 165, 167, 328, 434, 436, 437, 438, 439, 440, 441, 442, 476], "diagram": [471, 495], "dictionari": 292, "did": 480, "diff": [0, 3, 8], "differ": [1, 15, 29, 30, 36, 70, 71, 80, 98, 103, 106, 108, 109, 111, 112, 118, 119, 120, 130, 143, 171, 189, 193, 202, 203, 216, 288, 325, 349, 350, 365, 408, 429, 449, 464, 470, 471, 473, 478, 480, 481, 482, 489, 493, 494, 495], "differenc": 80, "differenti": [479, 495], "difficult": [482, 495], "diffus": 495, "digit": [0, 3, 8], "dim": [292, 397], "dimens": [6, 14, 16, 17, 19, 29, 30, 34, 38, 39, 40, 41, 48, 54, 56, 57, 58, 61, 64, 69, 76, 79, 80, 84, 85, 93, 114, 130, 136, 137, 141, 142, 151, 152, 156, 164, 165, 166, 167, 171, 172, 174, 189, 191, 192, 193, 200, 201, 204, 205, 206, 207, 208, 209, 210, 211, 292, 293, 294, 305, 316, 317, 320, 329, 333, 336, 341, 343, 347, 349, 351, 376, 378, 403, 406, 408, 410, 413, 420, 423, 424, 426, 429, 432, 433, 434, 435, 438, 439, 441, 442, 445, 446, 447, 448, 450, 451, 464, 478, 479, 482, 488], "dimension": [7, 38, 43, 48, 61, 68, 74, 77, 78, 81, 86, 98, 99, 100, 103, 104, 105, 108, 110, 111, 112, 113, 114, 130, 168, 193, 292, 333, 340, 423, 433, 455, 477, 479, 481, 488, 494, 495], "dimenson": 193, "direct": [61, 80, 98, 99, 100, 102, 103, 104, 105, 107, 108, 109, 110, 111, 112, 113, 118, 119, 292, 408, 477, 486, 495], "directli": [61, 80, 325, 390, 470, 485, 487, 491], "directori": [471, 495], "dirichlet": [3, 8, 354], "disabl": [86, 428, 495], "disclaim": 486, "discontinu": [208, 210, 343, 351], "discourag": 489, "discret": [61, 80, 98, 99, 100, 103, 104, 105, 108, 110, 111, 113, 377, 380, 395, 455, 464, 476], "discuss": [470, 483], "dispers": 392, "displai": [473, 483, 495], "distanc": [21, 130, 393, 479], "distance_sum": 479, "distribu": 495, "distribut": [2, 285, 354, 355, 357, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 380, 381, 382, 383, 384, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 448, 464, 466, 470, 474, 475, 481, 482, 483, 484, 486, 488, 495], "disturb": 372, "dive": 482, "divid": [3, 8, 36, 85, 137, 410, 420, 451, 479, 482], "divis": [82, 122, 125, 195, 401, 420, 443], "divisor": [129, 448], "divmod": [3, 8, 222], "dn": [376, 378], "do": [61, 81, 188, 192, 206, 298, 325, 471, 479, 486, 488, 489, 494, 495, 496], "doc": [12, 13, 22, 23, 24, 25, 26, 27, 28, 44, 45, 46, 52, 53, 55, 59, 60, 63, 65, 66, 72, 73, 82, 90, 91, 92, 94, 97, 120, 121, 122, 123, 124, 125, 126, 129, 131, 132, 138, 144, 148, 149, 150, 158, 159, 160, 161, 162, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 190, 194, 195, 196, 198, 334, 335, 337, 345, 346, 352, 353, 400, 401, 404, 405, 414, 415, 416, 417, 421, 422, 425, 430, 431, 443, 444, 477, 483, 485, 496], "docstr": 494, "doctor": [455, 494], "doctor_filenam": 455, "doctor_format": 455, "doctorformat": 466, "document": [36, 75, 84, 136, 268, 269, 270, 271, 272, 273, 276, 277, 278, 279, 280, 286, 287, 301, 302, 303, 306, 307, 308, 309, 310, 312, 318, 319, 321, 322, 323, 328, 330, 331, 440, 450, 470, 483, 485, 486, 494, 495], "doe": [14, 16, 17, 19, 21, 36, 69, 74, 81, 114, 143, 164, 165, 166, 167, 172, 174, 176, 191, 199, 202, 203, 204, 207, 209, 274, 292, 298, 304, 329, 332, 347, 358, 420, 426, 428, 449, 470, 477, 488, 491, 494, 495], "doesn": [81, 117, 118, 119, 348, 488, 494], "dollar": 495, "domain": [42, 471, 476, 482], "don": [292, 473, 479, 494, 495], "done": [64, 86, 165, 167, 189, 274, 295, 315, 341, 446, 494], "dot": [0, 3, 8, 170, 189, 432, 449, 475, 479, 480, 491, 495], "dot_product": 495, "doubl": [3, 8, 41, 365, 482], "down": [119, 494, 495], "download": [471, 485, 495], "dr": 482, "draft": 470, "draw": [354, 355, 357, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 383, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395], "drawn": [2, 354, 355, 357, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 377, 380, 381, 382, 383, 384, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 412], "driver": [473, 487, 495], "drop": [475, 483, 484, 495], "dry": 473, "dsplit": [0, 3, 8, 85], "dst": 64, "dstack": [0, 3, 8], "dt": [354, 474], "dtype": [3, 4, 8, 12, 13, 14, 16, 17, 18, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 34, 35, 37, 41, 44, 45, 46, 52, 53, 54, 58, 59, 60, 63, 65, 66, 68, 70, 71, 72, 73, 80, 81, 82, 83, 86, 88, 89, 90, 91, 92, 94, 96, 97, 115, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 131, 132, 138, 139, 141, 142, 144, 148, 149, 150, 158, 159, 160, 161, 162, 164, 166, 170, 175, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 189, 190, 191, 194, 195, 196, 198, 199, 200, 201, 202, 203, 204, 205, 209, 211, 216, 263, 274, 283, 284, 296, 302, 308, 314, 320, 321, 328, 331, 332, 334, 335, 337, 338, 339, 340, 342, 345, 346, 347, 352, 353, 377, 382, 384, 400, 401, 404, 405, 414, 415, 416, 417, 418, 421, 422, 425, 426, 428, 430, 431, 432, 434, 436, 443, 444, 448, 449, 453, 454, 475, 479, 492], "dtypelik": [4, 58, 96, 127, 128, 139, 141, 175, 187, 314, 332, 338, 339, 382, 384, 436, 454], "due": [391, 488], "dump": [0, 8, 466], "dump_data": 489, "duplic": [349, 488, 495], "dure": [466, 471, 483, 495], "dx": 130, "dy": 130, "dynam": 482, "dz": 130, "e": [14, 19, 43, 54, 79, 81, 83, 99, 102, 103, 104, 105, 108, 110, 130, 141, 142, 173, 189, 317, 325, 332, 354, 355, 357, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 377, 380, 381, 382, 383, 384, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 432, 434, 449, 466, 470, 471, 474, 488, 492, 494, 495, 496], "each": [2, 38, 39, 40, 41, 43, 49, 50, 54, 57, 68, 76, 81, 87, 99, 100, 104, 105, 110, 113, 118, 119, 130, 135, 156, 164, 165, 166, 167, 168, 197, 199, 320, 325, 336, 349, 350, 355, 357, 364, 369, 372, 402, 406, 424, 429, 433, 438, 439, 441, 442, 445, 446, 447, 471, 476, 477, 479, 480, 482, 483, 494, 495], "eager": [4, 466, 473, 483, 495], "eagerli": 480, "earli": 495, "earlier": 479, "eas": [379, 495], "easi": [470, 495], "easier": [282, 428, 495], "easiest": [470, 471], "east": [481, 495], "economist": 495, "ed": [359, 372, 477], "edg": [55, 81, 135, 478], "edge_ord": 130, "edgecolor": 479, "ediff1d": [3, 8], "edit": [471, 495], "effect": [87, 193, 329, 385, 446, 481, 495], "effici": [98, 111, 474, 482, 495], "effort": [470, 482], "effortlessli": 482, "eig": [0, 3, 8], "eigenvalu": [164, 165, 166, 167, 407], "eigenvector": [164, 165], "eigh": [0, 3, 8], "eight": [171, 446], "eigval": [0, 3, 8], "eigvalsh": [0, 3, 8], "einstein": 86, "einsum": [0, 8, 87, 473], "einsum_path": [0, 3, 8, 86], "either": [35, 41, 61, 69, 83, 130, 171, 189, 209, 216, 313, 411, 446, 474, 475, 476, 481, 483, 495], "elaps": [473, 474, 475, 481, 485, 489, 495], "elapsed_millisec": 489, "elapsed_tim": 495, "element": [12, 13, 14, 15, 16, 17, 19, 21, 22, 23, 24, 25, 26, 27, 28, 33, 35, 41, 43, 44, 45, 46, 48, 49, 51, 52, 53, 54, 55, 59, 60, 61, 63, 64, 65, 66, 68, 70, 71, 74, 79, 80, 82, 90, 91, 94, 95, 96, 97, 99, 104, 110, 113, 116, 117, 118, 119, 120, 121, 123, 124, 125, 126, 131, 132, 135, 139, 140, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 155, 159, 161, 162, 163, 169, 177, 178, 179, 183, 184, 185, 186, 187, 189, 190, 191, 192, 193, 194, 195, 196, 198, 202, 203, 204, 205, 206, 207, 209, 211, 263, 268, 269, 274, 279, 280, 288, 291, 292, 294, 295, 298, 300, 302, 304, 306, 308, 309, 313, 317, 320, 321, 323, 326, 330, 331, 334, 335, 336, 337, 341, 344, 345, 346, 347, 348, 350, 396, 398, 399, 400, 401, 402, 403, 405, 406, 408, 411, 412, 413, 414, 415, 416, 417, 421, 422, 425, 426, 428, 430, 431, 432, 434, 437, 440, 443, 444, 445, 446, 447, 448, 452, 462, 464, 476, 479, 495], "elementwis": 464, "elimin": 482, "els": [480, 494, 495], "elsewher": [12, 13, 22, 23, 24, 25, 26, 27, 28, 44, 45, 46, 52, 53, 59, 60, 63, 65, 66, 72, 73, 82, 90, 91, 92, 94, 96, 97, 120, 121, 122, 123, 124, 125, 126, 129, 131, 132, 138, 144, 148, 149, 150, 158, 159, 160, 161, 162, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 190, 194, 195, 196, 198, 334, 335, 337, 345, 346, 352, 353, 359, 400, 401, 404, 405, 414, 415, 416, 417, 421, 422, 425, 430, 431, 436, 443, 444, 452], "email": 470, "emerg": 495, "emit": 466, "emploi": 470, "empti": [0, 3, 8, 16, 17, 42, 47, 48, 133, 134, 157, 200, 201, 202, 203, 204, 207, 209, 211, 325, 344, 420], "empty_lik": [0, 3, 8], "en": [359, 470], "enabl": [466, 471, 473, 482, 483, 494, 495], "encapsul": 6, "encount": [202, 203, 204, 207, 412, 470, 483, 494, 495], "encumbr": 470, "end": [20, 21, 42, 79, 81, 87, 175, 187, 341, 446, 470, 476, 480, 481, 489, 495], "end_tim": 495, "endian": 325, "endors": 486, "endpoint": [175, 187, 476], "energi": 495, "enhanc": [470, 482, 495], "enough": [168, 471, 489, 494], "ensur": [436, 470, 482, 489, 494, 495], "enter": 473, "entir": [285, 446, 495], "entri": [57, 74, 88, 95, 114, 117, 118, 119, 292, 295, 325, 348, 349, 420, 423], "entropi": [1, 358], "env": [466, 471], "environ": [200, 201, 204, 207, 466, 471, 482, 483, 485, 487, 491, 494, 495], "ep": 399, "epsilon": 399, "epyc": 495, "eq": 474, "eqn": 476, "eqnarrai": 495, "equal": [0, 3, 8, 12, 13, 15, 22, 23, 24, 25, 26, 27, 28, 35, 36, 41, 42, 43, 44, 45, 46, 48, 52, 53, 59, 60, 63, 65, 66, 69, 72, 73, 79, 82, 84, 91, 92, 94, 96, 97, 120, 121, 122, 123, 124, 125, 126, 129, 130, 131, 132, 135, 138, 144, 145, 147, 148, 149, 150, 154, 158, 159, 160, 161, 162, 175, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 190, 194, 195, 196, 198, 317, 334, 335, 337, 345, 346, 352, 353, 355, 361, 364, 369, 383, 391, 393, 399, 400, 401, 404, 405, 414, 415, 416, 417, 420, 421, 422, 425, 430, 431, 436, 438, 441, 443, 444], "equal_nan": [15, 35, 145], "equat": [15, 145, 173, 391, 464, 476, 480, 482, 495], "equiv": [58, 64, 86, 189, 274], "equival": [21, 41, 57, 81, 83, 84, 85, 87, 116, 122, 136, 137, 145, 156, 220, 268, 269, 270, 271, 272, 273, 276, 277, 278, 279, 280, 286, 287, 301, 302, 303, 306, 307, 308, 309, 310, 312, 316, 318, 319, 321, 322, 323, 325, 328, 329, 330, 331, 332, 333, 410, 428, 450, 451, 494], "erf": 474, "error": [192, 206, 348, 420, 423, 428, 476, 479, 482, 488, 495], "errstat": [3, 8], "especi": 494, "essenti": [494, 495], "estim": [61, 68, 208, 210, 343, 351, 495], "etc": [34, 99, 100, 104, 105, 110, 113, 282, 292, 466, 482, 488, 494, 496], "european": 474, "evalu": [14, 19, 57, 86, 87, 147, 154, 170, 193, 268, 269, 412, 488, 494], "even": [68, 101, 103, 106, 111, 147, 154, 164, 166, 292, 407, 470, 473, 486], "evenli": [21, 175, 187, 409], "event": [374, 486], "everi": [61, 110, 470, 474, 479, 494], "every_nit": 494, "everyon": 470, "evid": 495, "evolv": 470, "exact": [83, 142, 173, 432, 449, 476], "exactli": [327, 470, 475, 480, 491, 495], "examin": 68, "exampl": [40, 55, 70, 71, 80, 81, 202, 203, 320, 329, 362, 372, 420, 424, 470, 471, 473, 476, 477, 479, 480, 482, 483, 484, 485, 487, 489, 492, 493, 494, 496], "exce": [420, 446, 466], "exceed": 482, "except": [14, 16, 17, 19, 21, 34, 42, 54, 58, 80, 83, 96, 110, 137, 191, 204, 207, 209, 292, 298, 315, 347, 396, 402, 426, 429, 432, 474, 475, 481, 486], "exchang": 482, "exclud": [20, 21, 175, 391, 489], "exclus": 377, "execut": [466, 471, 473, 474, 475, 480, 481, 489, 491, 492, 493, 494, 495], "exemplari": 486, "exercis": [470, 495], "exhibit": 324, "exist": [58, 93, 176, 464, 471, 485, 492, 495], "exit": 473, "exp": [0, 3, 8, 94, 168, 359, 474], "exp2": [0, 3, 8], "exp_rt": 474, "expand": [80, 93], "expand_dim": [0, 3, 8], "expans": 474, "expect": [14, 16, 17, 19, 70, 71, 108, 142, 188, 191, 192, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 340, 343, 347, 351, 374, 409, 426, 432, 448, 449, 470, 483], "expens": 325, "experi": [362, 495], "experiment": 485, "expertis": 482, "expir": [474, 495], "explain": [100, 105, 110, 113], "explan": [71, 202, 203, 320, 470], "explicit": [86, 168, 482, 494, 495], "explicitli": [135, 141, 176, 470, 476, 483, 495], "explor": 87, "expm1": [0, 3, 8], "expon": [126, 169, 375, 464], "exponenti": [0, 3, 8, 87, 91, 168, 181, 182, 365, 387], "exponential_distribut": 359, "expos": [2, 34, 292, 315], "expr": [86, 87], "express": [86, 87, 193, 474, 475, 476, 481, 486, 488], "extend": [476, 482, 488], "extra": 495, "extract": [0, 3, 8, 57, 75, 344, 428], "extrema": 464, "ey": [0, 3, 8, 475, 492], "f": [0, 3, 8, 34, 118, 130, 171, 208, 210, 274, 292, 294, 324, 343, 351, 354, 359, 362, 371, 396, 403, 447, 474, 475, 476, 480, 481, 495], "f_": [476, 480], "f_contigu": 292, "f_interior": 476, "fa": 292, "fab": [0, 3, 8], "facilit": 492, "factor": [98, 99, 100, 102, 103, 104, 105, 107, 108, 109, 110, 111, 112, 113, 163, 172, 475, 495], "fail": [163, 172, 483, 494], "failur": [362, 369, 473], "fall": [31, 81, 155, 342, 466, 474, 480, 483, 491], "fallback": 488, "fallback_stacktrac": 455, "fals": [1, 12, 13, 14, 15, 16, 17, 18, 19, 22, 23, 24, 25, 26, 27, 28, 29, 30, 34, 35, 36, 41, 44, 45, 46, 49, 51, 52, 53, 57, 59, 60, 63, 65, 66, 68, 72, 73, 80, 81, 82, 86, 87, 90, 91, 92, 94, 97, 114, 120, 121, 122, 123, 124, 125, 126, 129, 131, 132, 135, 138, 141, 144, 145, 148, 149, 150, 151, 152, 154, 155, 158, 159, 160, 161, 162, 171, 174, 175, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 190, 191, 192, 193, 194, 195, 196, 198, 199, 200, 201, 204, 205, 206, 207, 208, 209, 210, 211, 268, 269, 274, 292, 301, 302, 303, 308, 321, 331, 334, 335, 337, 343, 345, 346, 347, 351, 352, 353, 400, 401, 404, 405, 412, 414, 415, 416, 417, 421, 422, 425, 426, 430, 431, 443, 444, 445, 448, 466, 476, 480], "familiar": [484, 495], "fan": [208, 210, 343, 351], "fanci": 428, "farrai": 292, "fashion": 86, "fast": [98, 99, 100, 104, 105, 110, 111, 113], "fast_math": 455, "faster": [61, 81, 495], "fastest": [170, 396, 403], "fatter": 365, "fbmem": [473, 495], "featur": [470, 473, 495], "feedback": 470, "feel": 470, "fetch": 494, "few": [489, 494], "fewer": 483, "fft": [0, 3, 8, 61, 455, 464], "fft2": [0, 3, 8, 104], "fftfreq": [3, 8], "fftn": [0, 3, 8, 98, 105], "fftshift": [0, 3, 8, 106], "fid": 325, "fidel": 482, "field": [193, 298, 446], "fig": [477, 495], "figsiz": [477, 495], "file": [176, 289, 320, 325, 464, 466, 470, 471, 473, 474, 475, 481, 486, 491, 495], "filenam": [325, 466], "fileno": 325, "fill": [0, 2, 8, 114, 127, 128, 193, 199, 338, 373, 378, 436, 453], "fill_diagon": [0, 3, 8], "fill_valu": [127, 128], "final": [110, 113, 187, 482, 484, 495], "find": [33, 313, 330, 411, 445, 464, 479, 480, 483, 485, 494, 495], "find_centroid": 479, "find_cupynumeric_cpp": 471, "finfo": [3, 8, 399], "finish": [473, 474, 475, 481], "finit": [145, 148, 199, 478], "first": [14, 19, 41, 42, 47, 49, 54, 56, 58, 61, 64, 69, 79, 80, 83, 85, 87, 104, 105, 117, 120, 130, 135, 137, 143, 170, 189, 192, 193, 206, 208, 210, 211, 295, 313, 325, 340, 343, 344, 346, 347, 348, 351, 372, 393, 396, 403, 406, 408, 410, 411, 412, 419, 424, 426, 427, 429, 432, 434, 445, 449, 450, 451, 470, 471, 476, 481, 494, 495], "first_cond": 494, "fisher": [360, 371, 495], "fit": [402, 486], "five": 483, "fix": [3, 8, 300, 317, 374, 474], "flag": [168, 315, 466, 471], "flat": [294, 298, 310, 350, 402, 447, 488], "flatit": [3, 8, 293], "flatnonzero": [0, 3, 8], "flatten": [0, 3, 8, 16, 17, 20, 29, 30, 31, 32, 57, 58, 67, 70, 71, 74, 78, 114, 116, 135, 143, 191, 192, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 293, 310, 340, 341, 342, 343, 348, 349, 351, 396, 402, 406, 418, 428, 429, 445, 446, 447, 448, 449], "flexibl": [3, 8, 86, 300], "flip": [0, 3, 8, 118, 119, 362, 408, 488, 494], "fliplr": [0, 3, 8, 408], "flipud": [0, 3, 8, 408], "float": [14, 15, 16, 17, 19, 21, 43, 55, 70, 71, 83, 86, 88, 120, 128, 135, 139, 140, 145, 157, 169, 171, 175, 189, 191, 192, 199, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 224, 301, 303, 308, 321, 335, 343, 347, 351, 354, 355, 357, 359, 360, 361, 362, 363, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 378, 379, 381, 382, 383, 384, 387, 388, 389, 390, 391, 392, 393, 394, 395, 398, 399, 409, 411, 426, 432, 436, 448, 453, 462, 464, 466, 488], "float128": [3, 8, 488], "float16": [3, 8, 120], "float32": [3, 8, 64, 70, 86, 120, 189, 274, 332, 492], "float64": [3, 4, 8, 18, 41, 64, 68, 86, 88, 96, 120, 189, 191, 192, 205, 206, 208, 210, 274, 338, 343, 351, 382, 384, 448, 453, 475, 488], "float_pow": [0, 3, 8], "flood": 482, "floor": [0, 3, 8], "floor_divid": [0, 3, 8], "flop": 475, "flow": 482, "fluid": 482, "fmax": [3, 8, 204], "fmin": [3, 8], "fmod": [0, 3, 8], "fnc": 292, "focu": [482, 495], "follow": [15, 18, 34, 41, 54, 61, 81, 108, 115, 145, 165, 167, 171, 189, 193, 208, 210, 263, 343, 351, 466, 471, 476, 477, 479, 480, 482, 483, 485, 486, 487, 494, 495], "forc": [34, 86, 189, 274, 292, 466, 485], "force_thunk": [4, 455], "forcebuild": 1, "foremost": 495, "forg": [471, 485, 495], "fork": 470, "form": [37, 47, 56, 68, 79, 85, 86, 108, 133, 134, 137, 156, 157, 410, 451, 476, 486, 494, 495], "format": [325, 466, 472, 483, 495], "format_float_posit": [3, 8], "format_float_scientif": [3, 8], "former": [349, 429], "formula": [474, 495], "forset": 316, "fortran": [34, 274, 292, 294, 324, 396, 403, 447, 471], "fortun": 470, "forum": 483, "forumula": 495, "forward": [98, 99, 100, 102, 103, 104, 105, 107, 108, 109, 110, 111, 112, 113, 130, 379], "found": [43, 313, 320, 411, 482, 495], "foundat": [470, 483], "four": [315, 473, 495], "fourier": [61, 98, 99, 100, 103, 104, 105, 108, 110, 111, 113, 455, 464], "frac": [354, 359, 474, 480], "frac12": 474, "fraction": 196, "frame": [470, 491], "framebuff": [473, 483, 495], "framework": [470, 484], "free": [470, 474, 482, 483, 486, 495], "freed": 482, "freedom": [357, 360, 370, 371, 389, 448], "frequenc": [42, 68, 101, 103, 104, 105, 108, 395, 494], "frequent": 484, "fresh": [1, 358], "freshli": [12, 13, 22, 23, 24, 25, 26, 27, 28, 44, 45, 46, 52, 53, 59, 60, 63, 65, 66, 72, 73, 82, 90, 91, 92, 94, 97, 120, 121, 122, 123, 124, 125, 126, 129, 131, 132, 138, 144, 148, 149, 150, 151, 152, 158, 159, 160, 161, 162, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 190, 194, 195, 196, 198, 334, 335, 337, 345, 346, 352, 353, 400, 401, 404, 405, 414, 415, 416, 417, 421, 422, 425, 430, 431, 443, 444], "frexp": [0, 3, 8], "fro": 171, "frobeniu": 171, "frohn": 486, "from": [1, 2, 14, 18, 19, 21, 29, 30, 37, 41, 48, 54, 57, 61, 64, 70, 71, 72, 73, 79, 95, 103, 113, 115, 117, 118, 119, 120, 130, 142, 143, 156, 172, 175, 176, 187, 189, 193, 202, 203, 211, 216, 275, 276, 292, 295, 319, 323, 340, 346, 347, 350, 352, 353, 354, 355, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 380, 381, 382, 383, 384, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 399, 403, 408, 412, 423, 426, 428, 429, 432, 434, 445, 446, 449, 452, 464, 470, 472, 474, 475, 476, 477, 479, 480, 481, 482, 484, 486, 488, 489, 494, 495], "frombuff": 3, "fromfil": [3, 325], "fromfunct": [3, 8], "fromit": 3, "frompyfunc": 3, "fromregex": [3, 8], "fromstr": 3, "front": [141, 466], "fulfil": [390, 466], "full": [0, 3, 8, 61, 77, 128, 173, 268, 269, 270, 272, 273, 276, 277, 278, 279, 280, 286, 287, 301, 302, 303, 306, 307, 308, 309, 310, 312, 315, 318, 319, 321, 322, 323, 328, 330, 331, 341, 439, 442, 466, 470, 473, 482, 491, 495], "full_lik": [0, 3, 8], "full_matric": 174, "fulli": [192, 193, 206], "func": 474, "function": [2, 8, 18, 21, 36, 64, 75, 85, 98, 99, 100, 101, 103, 104, 105, 106, 108, 110, 111, 113, 114, 120, 122, 130, 135, 137, 155, 156, 157, 170, 171, 188, 193, 208, 210, 268, 269, 270, 271, 272, 273, 276, 277, 278, 279, 280, 286, 287, 292, 298, 301, 302, 303, 306, 307, 308, 309, 310, 312, 315, 316, 318, 319, 321, 322, 323, 325, 326, 328, 329, 330, 331, 343, 349, 351, 354, 358, 359, 362, 372, 375, 380, 385, 407, 410, 428, 429, 433, 449, 451, 455, 462, 464, 474, 475, 476, 480, 481, 482, 483, 488, 491, 492, 495], "function_nam": 491, "function_valu": 476, "fundament": 495, "funtion": 492, "furnish": 486, "further": [86, 208, 210, 317, 343, 351, 440, 470, 482], "furthermor": [49, 51, 193], "futur": 474, "fweight": 68, "g": [14, 19, 83, 85, 137, 142, 171, 189, 325, 332, 354, 355, 357, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 377, 380, 381, 382, 383, 384, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 410, 432, 449, 451, 470, 471, 481, 488, 492, 494, 495, 496], "gamma": [0, 3, 8, 354, 388], "gasnet": 495, "gather": 495, "gauss": 372, "gaussian": [365, 372, 378, 393], "gb": 495, "gcd": [0, 3, 8], "gemm": 479, "gener": [1, 3, 8, 21, 41, 42, 85, 103, 137, 175, 187, 292, 358, 370, 373, 378, 383, 385, 391, 410, 451, 464, 471, 476, 479, 481, 483, 488, 489, 491, 493, 495], "genfromtxt": [3, 8], "geometr": [0, 3, 8, 359], "geomspac": [3, 8], "get": [102, 108, 110, 114, 175, 187, 281, 320, 389, 471, 473, 474, 475, 476, 479, 480, 481, 483, 494], "get_bit_gener": [3, 8], "get_includ": [3, 8], "get_printopt": [3, 8], "get_rank": 482, "get_siz": 482, "get_stat": [3, 8], "getbufs": [3, 8], "getdevicecount": 482, "geterr": [3, 8], "geterrcal": [3, 8], "getfield": [0, 8], "getter": 316, "git": 470, "github": [470, 482, 495], "give": [43, 78, 86, 189, 193, 329, 350, 403, 413, 445, 470, 483], "given": [14, 15, 16, 17, 19, 20, 21, 31, 34, 35, 41, 48, 51, 54, 55, 56, 57, 62, 67, 68, 70, 71, 79, 80, 83, 85, 87, 88, 89, 98, 99, 100, 102, 103, 104, 105, 107, 108, 110, 111, 113, 114, 117, 127, 128, 130, 135, 137, 138, 142, 143, 145, 171, 175, 187, 188, 189, 192, 193, 202, 203, 206, 207, 208, 209, 210, 211, 216, 270, 271, 274, 277, 278, 292, 295, 301, 302, 303, 308, 309, 313, 321, 329, 331, 338, 339, 340, 343, 347, 348, 351, 354, 355, 357, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 380, 381, 382, 383, 384, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 402, 406, 407, 408, 409, 410, 411, 420, 426, 428, 432, 433, 434, 435, 436, 445, 449, 451, 453, 454, 470, 482, 494, 495], "global": [358, 482], "gmail": 486, "gninja": 471, "gnx": 482, "gny": 482, "go": [429, 495], "goal": 495, "golub": 171, "good": [188, 325, 364, 484, 486], "gop": 475, "govern": [474, 475, 481, 495], "gpu": [1, 2, 3, 8, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 213, 214, 215, 219, 220, 221, 222, 223, 225, 226, 228, 229, 230, 231, 232, 233, 234, 235, 238, 239, 240, 241, 242, 243, 244, 245, 247, 248, 249, 250, 251, 252, 253, 255, 256, 257, 259, 260, 261, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 276, 277, 278, 279, 280, 281, 286, 287, 290, 291, 294, 295, 298, 301, 302, 303, 306, 307, 308, 309, 310, 312, 313, 315, 318, 319, 321, 322, 323, 324, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 466, 473, 480, 482, 484, 494, 496], "grad_i": [477, 495], "grad_x": [477, 495], "gradient": [0, 3, 8, 477], "grai": [477, 479, 495], "grant": 486, "granular": [483, 489], "grasmair": 480, "grate": 470, "grayscal": [477, 495], "greater": [0, 3, 8, 21, 54, 84, 360, 373, 391, 395, 423], "greater_equ": [0, 3, 8], "greatest": [48, 129], "greedi": [86, 87], "green": [476, 479], "grep": 483, "grid": [141, 193, 476, 481, 482, 495], "group": [33, 471, 495], "gt": 476, "guarante": [348, 403], "guess": 480, "guid": [320, 484], "guidelin": 493, "gumbel": [0, 3, 8], "gzipfil": 325, "h": [163, 171, 208, 210, 343, 351, 476, 482, 494, 495], "h5py": 494, "ha": [6, 29, 30, 31, 32, 57, 68, 70, 71, 79, 81, 102, 107, 130, 140, 146, 147, 153, 154, 200, 201, 202, 203, 209, 211, 282, 292, 329, 341, 347, 350, 354, 365, 373, 380, 392, 398, 399, 402, 412, 424, 426, 428, 433, 434, 447, 466, 470, 474, 475, 479, 480, 482, 483, 486, 495], "had": [349, 429, 496], "hadamard": 87, "half": [3, 8, 21, 101, 104, 105, 175, 377, 379, 381, 382, 384, 391], "halo": 482, "ham": [0, 3, 8], "han": [0, 3, 8], "hand": 476, "handl": [445, 449, 464, 466, 482, 488, 491, 495], "happen": [41, 470, 488], "har": 495, "hardwar": [292, 315, 493, 496], "have": [12, 13, 14, 19, 22, 23, 24, 25, 26, 27, 28, 33, 34, 35, 39, 40, 41, 44, 45, 46, 47, 52, 53, 54, 56, 58, 59, 60, 63, 65, 66, 68, 69, 70, 71, 72, 73, 82, 83, 85, 86, 90, 91, 92, 94, 97, 104, 105, 113, 120, 121, 122, 123, 124, 125, 126, 129, 131, 132, 137, 138, 142, 144, 148, 149, 150, 151, 152, 158, 159, 160, 161, 162, 170, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 188, 189, 190, 191, 192, 193, 194, 195, 196, 198, 202, 203, 205, 206, 208, 209, 210, 211, 320, 332, 334, 335, 337, 343, 344, 345, 346, 347, 349, 351, 352, 353, 399, 400, 401, 404, 405, 409, 410, 414, 415, 416, 417, 421, 422, 424, 425, 426, 430, 431, 432, 433, 443, 444, 448, 449, 451, 462, 470, 471, 473, 474, 476, 477, 479, 480, 484, 491, 494, 495], "hazen": [208, 210, 343, 351], "header": [176, 471], "heapsort": [32, 418], "heat": 495, "heavisid": [3, 8], "height": [85, 137, 410, 451, 482, 495], "help": [470, 473, 477, 483, 492, 495], "helper": [464, 475, 481], "henc": 130, "here": [8, 108, 394, 470, 471, 476, 482, 489, 492, 494, 495], "herebi": 486, "herein": 486, "hermitian": [102, 107, 108, 163, 165, 167, 174, 464, 475], "hfft": [0, 3, 8], "high": [377, 380, 391, 471, 482, 495], "higher": [38, 80, 142, 208, 210, 292, 343, 351, 495], "highest": [377, 380], "highli": 494, "highlight": [482, 494, 495], "hipr2": 477, "hist": 135, "histogram": [0, 3, 8, 464], "histogram2d": [3, 8], "histogram_bin_edg": [3, 8], "histogramdd": [3, 8], "hold": [34, 55, 57, 70, 71, 171, 192, 202, 203, 206, 209, 211, 292, 434, 482], "holder": 486, "home": 474, "homepag": 477, "hope": 470, "hopkin": 171, "horizont": [136, 137, 408], "host": 188, "hous": 477, "how": [54, 315, 320, 329, 348, 428, 471, 472, 475, 476, 480, 489, 495], "howev": [14, 16, 17, 19, 70, 168, 191, 204, 207, 209, 292, 347, 426, 428, 470, 486, 495], "howto": 493, "hpc": [482, 493], "hsplit": [0, 3, 8, 137], "hstack": [0, 3, 8, 56, 494], "htm": 477, "html": [477, 483, 486, 496], "http": [359, 470, 474, 475, 477, 481, 483, 486, 488, 495, 496], "hull": 474, "hundr": [482, 494], "hyndman": [208, 210, 343, 351], "hyperbol": [23, 25, 28, 66, 389, 417, 431, 464], "hypergeometr": [0, 3, 8], "hypot": [0, 3, 8], "hypotenus": 138, "hypothesi": 357, "i": [2, 8, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 41, 42, 43, 44, 45, 46, 47, 48, 49, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 107, 108, 109, 110, 111, 112, 113, 114, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 175, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 216, 220, 221, 263, 274, 275, 292, 294, 295, 298, 300, 313, 315, 317, 320, 324, 325, 326, 329, 332, 333, 334, 335, 337, 338, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 414, 415, 416, 417, 418, 420, 421, 422, 423, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 441, 443, 444, 445, 446, 448, 449, 450, 451, 452, 453, 466, 471, 473, 474, 475, 476, 477, 479, 480, 481, 482, 484, 485, 486, 487, 488, 489, 491, 492, 495, 496], "i0": [3, 8, 141], "i1": 141, "i16_arr": 80, "iN": 141, "idea": 470, "ident": [0, 3, 8, 106, 114, 169, 173, 200, 201, 204, 207, 365, 387, 475], "identifi": 477, "identit": 475, "idiomat": 483, "idx": 479, "ieee": 466, "ifft": [0, 3, 8, 104, 105], "ifft2": [0, 3, 8], "ifftn": [0, 3, 8, 103, 110], "ifftshift": [0, 3, 8], "ignor": [49, 51, 69, 135, 200, 201, 204, 205, 206, 207, 208, 210, 488], "ihfft": [0, 3, 8], "ii": [68, 373], "iinfo": [3, 8], "ij": [68, 193], "ik": 141, "illeg": 48, "illustr": [193, 471, 494, 495], "imag": [0, 3, 8, 399, 477, 481, 495], "image_np": 495, "imagin": 320, "imaginari": [18, 35, 140, 146, 147, 154, 164, 165, 166, 167, 199, 297, 399, 409, 419], "imbal": 495, "immedi": 475, "impact": 494, "imper": 495, "implement": [8, 14, 16, 17, 19, 29, 30, 31, 61, 70, 71, 79, 83, 117, 118, 119, 142, 163, 168, 189, 191, 202, 203, 204, 207, 209, 342, 347, 426, 432, 449, 471, 474, 475, 482, 483, 486, 488, 491, 494, 495], "impli": [68, 341, 446, 474, 475, 481, 486], "implic": 480, "implicit": [86, 168], "implment": 491, "import": [68, 189, 474, 475, 476, 477, 479, 480, 481, 482, 489, 492, 494, 495, 496], "importantli": 81, "improp": 495, "improv": 495, "imshow": [477, 495], "in1d": [3, 8], "inappropri": 357, "incident": 486, "includ": [21, 37, 81, 86, 135, 175, 187, 191, 205, 209, 211, 304, 347, 391, 394, 426, 448, 466, 470, 471, 473, 476, 482, 486, 488, 491, 494], "inclus": [208, 210, 343, 351, 377, 380], "incorpor": 486, "incorrect": 482, "increas": [81, 93, 103, 108, 135, 476, 483, 495], "incur": 494, "ind": [81, 438, 439, 441, 442], "indefinit": 470, "independ": [325, 357, 365, 372, 471, 495], "index": [6, 29, 30, 31, 32, 43, 54, 57, 79, 81, 96, 99, 104, 141, 143, 156, 189, 193, 200, 201, 276, 298, 313, 342, 348, 349, 396, 403, 411, 418, 420, 424, 428, 429, 445, 447, 455, 462, 464, 476, 479, 484, 493], "index_arrai": [29, 30, 32, 33, 200, 201], "indexerror": 81, "indic": [0, 3, 8, 29, 30, 31, 32, 33, 36, 54, 61, 68, 74, 76, 77, 81, 84, 86, 87, 95, 98, 99, 100, 102, 103, 104, 105, 107, 108, 109, 110, 111, 112, 113, 114, 116, 136, 143, 188, 200, 201, 270, 271, 272, 273, 306, 309, 313, 323, 329, 336, 348, 349, 411, 414, 420, 428, 429, 438, 439, 441, 442, 445, 447, 450, 470, 476, 479, 480, 483, 486, 488, 494, 495], "indices_or_sect": [36, 420], "indirect": [31, 486], "individu": [362, 491], "ineffici": 466, "inexact": [3, 8, 120, 199, 209], "inf": [15, 70, 71, 171, 200, 201, 202, 203, 477, 488], "infer": [21, 37, 175, 187, 354, 403], "infin": [148, 149, 151, 152, 199, 393], "infinit": 171, "influenc": 372, "info": [3, 8], "inform": [86, 292, 298, 315, 325, 470, 475, 476, 477, 480, 483, 485, 491, 495, 496], "infti": 474, "inher": 495, "inherit": 292, "init": [385, 479, 489, 495], "initi": [1, 16, 17, 88, 204, 207, 209, 211, 268, 269, 301, 303, 308, 321, 347, 358, 426, 466, 476, 479, 480, 482, 489], "inner": [0, 3, 8, 83, 87, 432], "innermost": 48, "input": [4, 6, 12, 13, 14, 15, 16, 17, 19, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 37, 38, 39, 40, 41, 43, 44, 45, 46, 48, 50, 52, 53, 55, 58, 59, 60, 61, 62, 63, 65, 66, 69, 70, 71, 72, 73, 74, 78, 80, 81, 82, 86, 87, 90, 91, 92, 93, 94, 95, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 129, 130, 131, 132, 135, 138, 140, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 158, 159, 160, 161, 162, 163, 168, 171, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 274, 294, 295, 332, 333, 334, 335, 336, 337, 340, 341, 342, 343, 344, 345, 346, 347, 349, 350, 351, 352, 353, 355, 396, 398, 399, 400, 401, 402, 404, 405, 406, 409, 411, 413, 414, 415, 416, 417, 418, 419, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 437, 443, 444, 445, 446, 448, 449, 455, 464, 474, 477, 483, 492, 494, 495], "insert": [0, 3, 8, 29, 30, 48, 54, 79, 93, 175, 187, 200, 201, 313, 341, 349, 411, 412, 464, 495], "insid": 494, "instal": [470, 471, 473, 484, 493], "instanc": [48, 85, 102, 137, 317, 358, 410, 451, 471, 485, 495], "instanti": [2, 358, 471], "instead": [14, 16, 17, 19, 41, 43, 48, 135, 141, 189, 191, 192, 204, 205, 206, 208, 210, 211, 274, 298, 343, 347, 351, 380, 426, 448, 474, 475, 476, 477, 481, 482, 483, 492, 493, 495], "instruct": [470, 471, 485, 495], "int": [1, 4, 6, 14, 16, 17, 19, 20, 21, 29, 30, 31, 32, 34, 36, 41, 42, 43, 47, 50, 51, 54, 55, 57, 58, 67, 68, 69, 70, 71, 74, 75, 76, 78, 79, 80, 81, 84, 87, 88, 89, 93, 96, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 117, 127, 128, 130, 133, 134, 135, 136, 139, 141, 143, 157, 169, 171, 175, 176, 187, 188, 191, 192, 197, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 236, 237, 263, 295, 296, 300, 301, 303, 304, 305, 308, 313, 314, 316, 317, 320, 321, 329, 333, 338, 339, 341, 342, 343, 347, 349, 351, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 402, 403, 406, 408, 409, 411, 413, 418, 420, 423, 424, 426, 427, 428, 429, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 445, 446, 447, 448, 450, 453, 454, 462, 466, 476, 477, 479, 495], "int16": [3, 8, 80, 332], "int32": [3, 8, 209, 320], "int32_t": 471, "int64": [3, 8, 209], "int64_t": 471, "int8": [3, 8], "int_": [3, 8, 317, 380, 433, 474], "int_0": 354, "int_lik": 378, "int_typ": 298, "intc": [3, 8], "integ": [2, 3, 8, 21, 36, 51, 54, 68, 70, 71, 80, 120, 122, 156, 160, 169, 171, 191, 192, 202, 203, 205, 206, 208, 209, 210, 211, 313, 317, 320, 341, 343, 347, 348, 351, 355, 362, 377, 380, 403, 404, 405, 408, 411, 420, 426, 434, 445, 447, 448], "integer_lik": 432, "integr": [41, 135, 196, 473, 482, 495], "intel": 495, "intellectu": 470, "intend": [193, 325, 480], "intens": [168, 477, 495], "intensity_max": [477, 495], "intensity_min": [477, 495], "intent": 120, "inter": 482, "interact": [282, 495], "interchang": [322, 427], "interest": [474, 475, 495], "interfac": [34, 292, 315, 495], "interior": 130, "intermedi": [86, 87, 191, 205, 208, 210, 343, 351, 494], "intern": 70, "interoper": 483, "interp": [3, 8], "interpolated_inverted_cdf": [208, 210, 343, 351], "interpret": [37, 51, 62, 156, 188, 298, 315, 348, 480], "interrupt": 486, "intersect1d": [3, 8], "interv": [21, 55, 81, 175, 187, 355, 369, 374, 377, 379, 380, 381, 382, 384, 390, 391, 392], "intp": [3, 8, 209], "introduc": [406, 479, 495], "introduct": 493, "introselect": [31, 272, 307, 342], "inund": 482, "inv": [3, 8, 480], "invas": 494, "invers": [22, 23, 24, 25, 26, 28, 93, 103, 104, 105, 106, 107, 108, 109, 110, 144, 169, 184, 359, 393, 395, 480], "invert": [0, 3, 8, 464], "inverted_cdf": [208, 210, 343, 351], "invest": 495, "invoc": [495, 496], "invok": [471, 480, 492], "involv": [470, 482], "irecv": 482, "irfft": [0, 3, 8, 110], "irfft2": [0, 3, 8], "irfftn": [0, 3, 8, 108, 109], "irrespect": [165, 167], "is_busdai": [3, 8], "isclos": [0, 3, 8], "iscomplex": [0, 3, 8], "iscomplexobj": [0, 3, 8], "isdtyp": [3, 8], "isend": 482, "isfinit": [0, 3, 8, 204, 211], "isfortran": [3, 8, 263], "isin": [3, 8], "isinf": [0, 3, 8], "isnan": [0, 3, 8, 204, 207, 209, 211], "isnat": [3, 8], "isneginf": [0, 3, 8], "isol": 471, "isposinf": [0, 3, 8], "isreal": [0, 3, 8], "isrealobj": [0, 3, 8], "isscalar": [0, 3, 8], "issu": [103, 104, 105, 466, 470, 483, 494, 495], "issubdtyp": [3, 8], "item": [0, 8, 33, 325, 326, 364, 395, 445, 479], "items": 292, "iter": [6, 87, 208, 210, 281, 293, 294, 310, 343, 349, 351, 429, 479, 480, 481, 482, 489, 495], "ith": 141, "its": [12, 13, 14, 19, 22, 23, 24, 25, 26, 27, 28, 41, 43, 44, 45, 46, 52, 53, 54, 59, 60, 63, 65, 66, 72, 73, 75, 82, 90, 91, 92, 94, 97, 120, 121, 122, 123, 124, 125, 126, 129, 131, 132, 135, 138, 139, 142, 144, 148, 149, 150, 158, 159, 160, 161, 162, 164, 165, 166, 167, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 189, 190, 194, 195, 196, 198, 292, 315, 327, 329, 334, 335, 337, 340, 345, 346, 352, 353, 372, 380, 395, 400, 401, 403, 404, 405, 414, 415, 416, 417, 421, 422, 425, 430, 431, 432, 434, 435, 436, 443, 444, 449, 470, 475, 479, 482, 486, 494, 495], "itself": [54, 199, 367, 407, 423, 471], "ivan": 486, "ix_": [0, 3, 8], "j": [83, 171, 193, 208, 210, 329, 340, 343, 349, 351, 429, 436, 476, 480, 482, 494, 495], "j0": 54, "j1": 54, "jacobi": 478, "jacobi_stencil": 495, "jacobian": 480, "jcp": 476, "jm": 54, "john": [171, 474], "join": [58, 424, 464], "jr": [359, 372], "json": 466, "jsrun": 487, "june": 486, "just": [56, 394, 470, 474, 475, 481], "k": [12, 13, 22, 23, 24, 25, 26, 27, 28, 34, 44, 45, 46, 52, 53, 59, 60, 63, 65, 66, 72, 73, 75, 78, 82, 83, 90, 91, 92, 94, 96, 97, 120, 121, 122, 123, 124, 125, 126, 129, 131, 132, 138, 141, 144, 148, 149, 150, 158, 159, 160, 161, 162, 172, 173, 174, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 188, 189, 190, 194, 195, 196, 198, 220, 274, 294, 334, 335, 337, 345, 346, 352, 353, 354, 355, 357, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 377, 380, 381, 382, 383, 384, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 400, 401, 404, 405, 408, 414, 415, 416, 417, 421, 422, 425, 430, 431, 436, 437, 438, 439, 440, 441, 442, 443, 444, 466, 474, 476, 478, 480, 495], "kaiser": [0, 3, 8, 47], "kappa": 392, "ke": 495, "keep": [466, 474, 479], "keepdim": [14, 16, 17, 19, 29, 30, 41, 171, 191, 192, 200, 201, 204, 205, 206, 207, 208, 209, 210, 211, 268, 269, 301, 302, 303, 308, 321, 331, 343, 347, 351, 426, 448], "kei": [219, 227, 262, 483, 495], "kern": 486, "kernel": [477, 495], "kernel_i": [477, 495], "kernel_x": [477, 495], "keyword": [2, 12, 13, 22, 23, 24, 25, 26, 27, 28, 44, 45, 46, 52, 53, 55, 59, 60, 63, 65, 66, 68, 72, 73, 82, 90, 91, 92, 94, 97, 120, 121, 122, 123, 124, 125, 126, 129, 131, 132, 138, 144, 148, 149, 150, 158, 159, 160, 161, 162, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 190, 193, 194, 195, 196, 198, 199, 334, 335, 337, 345, 346, 352, 353, 400, 401, 404, 405, 414, 415, 416, 417, 421, 422, 425, 430, 431, 443, 444, 445], "kill": 163, "kind": [31, 32, 58, 64, 86, 189, 272, 273, 274, 307, 318, 342, 418, 464, 474, 475, 481, 483, 486], "know": [470, 480, 483, 494], "knowledg": [470, 482], "known": [320, 360, 373, 375, 386, 392, 395, 495], "kron": [3, 8], "kth": [31, 272, 307, 342], "kwarg": [12, 13, 22, 23, 24, 25, 26, 27, 28, 44, 45, 46, 52, 53, 55, 59, 60, 63, 65, 66, 72, 73, 82, 90, 91, 92, 94, 97, 120, 121, 122, 123, 124, 125, 126, 129, 131, 132, 138, 144, 148, 149, 150, 158, 159, 160, 161, 162, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 190, 194, 195, 196, 198, 254, 334, 335, 337, 345, 346, 352, 353, 400, 401, 404, 405, 414, 415, 416, 417, 421, 422, 425, 430, 431, 443, 444, 445, 474], "l": [36, 163, 165, 167, 475, 486, 495], "l2": [476, 480], "l2_norm": 480, "label": [86, 471, 474, 476, 479, 485], "label_color": 479, "label_color_map": 479, "label_valu": 479, "lam": 374, "lambda": [359, 365, 394], "languag": [474, 475, 481], "laplac": [0, 3, 8, 372], "laptop": 495, "larg": [61, 68, 176, 199, 372, 374, 389, 428, 482, 489, 494, 495], "larger": [43, 55, 80, 98, 99, 100, 103, 104, 105, 107, 110, 111, 113, 176, 390, 434, 446, 489, 495], "larger_imag": 495, "largest": [43, 87, 122, 171, 199, 377, 380], "last": [14, 19, 21, 31, 32, 41, 42, 48, 69, 80, 83, 98, 99, 100, 102, 103, 104, 105, 107, 108, 109, 110, 111, 113, 117, 130, 142, 170, 175, 187, 189, 211, 295, 313, 342, 347, 396, 403, 406, 411, 418, 419, 424, 426, 428, 432], "latenc": 495, "later": [372, 495], "latest": [483, 485, 495, 496], "latter": [349, 429, 494], "launch": [471, 489, 494], "launcher": [483, 487, 495], "law": [395, 474, 475, 481], "layout": [34, 274, 292, 324, 396, 403], "lcm": [0, 3, 8], "ldexp": [0, 3, 8], "lead": [48, 193, 202, 203, 483, 495], "leakag": 47, "learn": 483, "least": [38, 39, 40, 41, 43, 61, 68, 77, 85, 87, 114, 118, 147, 164, 165, 166, 167, 172, 174, 364, 410, 451, 471, 494, 495], "left": [14, 16, 17, 19, 29, 30, 41, 81, 118, 160, 171, 191, 192, 200, 201, 204, 205, 206, 207, 208, 209, 210, 211, 313, 343, 347, 351, 390, 409, 411, 426, 448, 476, 482], "left_shift": [0, 3, 8], "leg": 138, "legaci": 385, "legal": [143, 470, 486], "legales": 472, "legat": [348, 466, 471, 473, 474, 475, 481, 484, 485, 488, 491, 492, 495, 496], "legate_auto_config": 495, "legate_config": [483, 492], "legate_limit_stdout": 495, "legate_root": 471, "legate_test": [466, 483], "legend": [474, 476], "legion": [493, 495], "legion_default_arg": 487, "lele": 476, "len": [57, 81, 100, 101, 105, 108, 110, 113, 141, 193, 246, 479], "length": [12, 13, 16, 17, 21, 22, 23, 24, 25, 26, 27, 28, 36, 41, 43, 44, 45, 46, 52, 53, 57, 59, 60, 63, 65, 66, 70, 71, 72, 73, 80, 82, 90, 91, 92, 94, 97, 98, 99, 100, 102, 103, 104, 105, 106, 107, 108, 110, 111, 113, 120, 121, 122, 123, 124, 125, 126, 129, 130, 131, 132, 135, 137, 138, 141, 144, 148, 149, 150, 158, 159, 160, 161, 162, 164, 165, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 190, 192, 193, 194, 195, 196, 198, 202, 203, 204, 206, 207, 313, 319, 334, 335, 337, 345, 346, 349, 352, 353, 356, 400, 401, 403, 404, 405, 407, 410, 411, 412, 413, 414, 415, 416, 417, 421, 422, 423, 425, 429, 430, 431, 432, 433, 443, 444, 451, 471, 476], "less": [0, 3, 8, 42, 47, 57, 68, 70, 71, 79, 114, 133, 134, 157, 168, 202, 203, 209, 211, 347, 364, 391, 415, 426, 434, 480, 483, 494], "less_equ": [0, 3, 8], "let": [470, 474, 475, 480, 481, 495], "letter": 315, "level": [48, 68, 326, 462, 471, 488, 494, 495], "leverag": 495, "lexsort": [3, 8], "lgpatch": 492, "lh": 476, "liabil": 486, "liabl": 486, "liber": [83, 86, 142, 189, 432, 449], "librari": [282, 462, 466, 471, 483, 484, 486, 495], "licens": [470, 474, 475, 481, 486], "lifespan": 482, "lightli": 485, "lightweight": 470, "like": [39, 40, 48, 56, 64, 74, 86, 110, 114, 172, 174, 175, 176, 187, 188, 189, 193, 274, 292, 317, 325, 349, 391, 393, 396, 403, 429, 436, 464, 466, 470, 475, 476, 480, 481, 482, 487, 494, 495, 496], "limit": [55, 98, 99, 100, 102, 103, 104, 105, 107, 108, 109, 110, 111, 112, 113, 164, 165, 166, 167, 277, 372, 374, 390, 391, 474, 475, 481, 486, 495], "linalg": [0, 3, 8, 455, 464, 475, 476, 479, 480, 492, 494], "linalgerror": [8, 164, 165, 166, 167, 172, 173, 174], "line": [470, 473, 482, 483, 491, 495], "linear": [61, 86, 173, 187, 208, 210, 343, 351, 455, 464, 471, 476, 480, 495], "linearli": 494, "link": [488, 495], "linspac": [0, 3, 8, 21, 474, 476, 494], "linux": [470, 483, 485, 493], "list": [8, 21, 31, 32, 36, 37, 38, 39, 40, 48, 49, 54, 84, 86, 87, 93, 101, 114, 115, 130, 136, 263, 326, 342, 412, 418, 420, 432, 435, 450, 471, 473, 479, 486], "liter": [4, 64, 86], "literal_ev": 176, "littl": [83, 142, 189, 341, 432, 446, 449, 475], "ll": [479, 487], "ln": [187, 394, 495], "load": [0, 3, 8, 289, 290, 495], "loadtxt": [3, 8], "loan": 171, "loc": [363, 365, 366, 372, 476], "local": [482, 483, 495], "local_grid": 482, "local_ni": 482, "local_nx": 482, "local_rank": 482, "locat": [12, 13, 22, 23, 24, 25, 26, 27, 28, 44, 45, 46, 49, 51, 52, 53, 59, 60, 63, 65, 66, 72, 73, 82, 90, 91, 92, 94, 97, 114, 120, 121, 122, 123, 124, 125, 126, 129, 131, 132, 138, 144, 148, 149, 150, 151, 152, 158, 159, 160, 161, 162, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 188, 189, 190, 193, 194, 195, 196, 198, 313, 334, 335, 337, 340, 345, 346, 352, 353, 363, 365, 366, 373, 400, 401, 404, 405, 411, 414, 415, 416, 417, 421, 422, 425, 430, 431, 443, 444, 477, 479, 491, 492, 495], "lock": 292, "log": [0, 3, 8, 187, 367, 368, 474], "log10": [0, 3, 8], "log1p": [0, 3, 8], "log2": [0, 3, 8], "log_bas": 187, "logaddexp": [0, 3, 8], "logaddexp2": [0, 3, 8], "logarithm": [177, 178, 179, 180, 181, 182, 368, 464], "logic": [14, 19, 341, 455, 464, 482], "logical_and": [0, 3, 8, 494], "logical_not": [0, 3, 8], "logical_or": [0, 3, 8], "logical_xor": [0, 3, 8], "logist": [0, 3, 8], "lognorm": [0, 3, 8], "logseri": [0, 3, 8], "logspac": [0, 3, 8], "lomax": 373, "long": [3, 8, 380, 495], "longdoubl": [3, 8, 298], "longer": [43, 61, 102, 108, 494], "longlong": [3, 8], "look": [429, 470, 481, 483], "loop": [480, 482], "lorena": 482, "lorentz": 386, "lose": [298, 326], "loss": 486, "lost": 325, "low": [104, 105, 377, 380, 391, 462], "lower": [55, 96, 135, 163, 165, 167, 208, 210, 343, 351, 390, 391, 436, 437, 438, 439, 475, 482], "lowercas": 292, "lowest": [41, 87, 158, 373, 377, 380], "lstsq": [3, 8], "lt": 476, "m": [40, 42, 47, 61, 68, 83, 85, 96, 99, 100, 102, 104, 105, 108, 110, 113, 117, 118, 119, 133, 134, 157, 163, 164, 165, 166, 167, 168, 169, 172, 173, 174, 189, 191, 193, 205, 295, 340, 349, 354, 355, 357, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 377, 380, 381, 382, 383, 384, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 408, 412, 428, 429, 436, 437, 438, 440, 441, 448, 471, 474, 475, 481, 485, 495], "machin": [325, 399, 471, 483, 495, 496], "maco": [483, 485], "made": [34, 38, 199, 274, 292, 315, 396], "magenta": 479, "magnitud": [18, 479, 495], "mai": [6, 14, 19, 21, 29, 30, 49, 51, 54, 55, 58, 64, 70, 71, 86, 130, 171, 176, 189, 193, 199, 202, 203, 274, 292, 317, 326, 349, 355, 391, 392, 407, 466, 470, 473, 474, 475, 476, 480, 481, 483, 486, 488, 491, 492, 495], "main": [75, 76, 77, 78, 79, 96, 114, 139, 434, 436, 437, 476, 487, 495, 496], "maintain": [79, 470, 482], "mainten": 482, "major": [34, 294, 396, 447, 483], "make": [48, 49, 56, 64, 85, 137, 193, 282, 292, 364, 410, 451, 464, 470, 471, 475, 479, 482, 483, 488, 489, 492, 494, 495], "make_grid": 481, "manag": [358, 466, 482, 495], "mani": [86, 320, 359, 446, 471, 495], "manifest": 494, "manipul": [455, 464], "manner": [488, 495], "mantissa": 126, "manual": [433, 470, 482, 485, 489, 495], "map": [54, 479, 482], "mapper": 483, "margin": 81, "mark": 470, "marker": 479, "marku": 480, "mask": [156, 188, 344, 350, 479], "mask_func": 188, "mask_funct": 188, "mask_indic": [0, 3, 8], "mass": [135, 362], "master": 495, "match": [37, 48, 55, 58, 64, 80, 130, 189, 349, 424, 429, 448, 466, 476], "materi": [188, 292, 477, 479, 486], "math": [298, 466, 486], "mathbf": [476, 480, 495], "mathemat": [171, 455, 464, 495], "mathtt": 474, "matmul": [0, 3, 8, 466, 495], "matmul_cache_s": 455, "matplotlib": [474, 476, 477, 479, 481, 495], "matric": [48, 114, 164, 165, 166, 167, 168, 170, 171, 189, 193, 396, 464, 475, 476, 495], "matrix": [7, 8, 68, 79, 83, 163, 164, 165, 166, 167, 168, 169, 171, 172, 173, 189, 193, 329, 332, 396, 407, 440, 449, 464, 475, 476, 480], "matrix_norm": 8, "matrix_pow": [0, 8], "matrix_rank": [3, 8], "matrix_transpos": [3, 8], "matter": 483, "matthew": 486, "matvec": [3, 8], "max": [0, 135, 171, 207, 277, 433, 477, 479, 494, 495], "max_header_s": 176, "max_it": 481, "maxim": 495, "maximum": [0, 3, 8, 16, 17, 29, 42, 47, 55, 87, 123, 133, 134, 157, 176, 200, 204, 207, 270, 301, 479, 488, 494], "may_share_memori": [3, 8], "mayb": 470, "mb": [473, 495], "md": 171, "me": 470, "mean": [0, 3, 8, 48, 64, 67, 86, 99, 100, 104, 105, 110, 111, 113, 127, 130, 171, 189, 205, 274, 294, 324, 329, 357, 365, 366, 367, 371, 372, 378, 393, 396, 403, 408, 428, 446, 478, 480, 495], "measur": [359, 448, 483, 489, 490, 492, 493, 495], "mechan": 470, "median": [0, 3, 8, 206, 366], "median_unbias": [208, 210, 343, 351], "meet": [34, 470, 494, 495], "memavail": 483, "meminfo": 483, "memmap": [3, 8], "memo": 221, "memori": [34, 49, 51, 168, 188, 192, 193, 206, 208, 210, 274, 275, 285, 292, 294, 304, 315, 320, 324, 343, 351, 396, 403, 473, 476, 482, 495], "memoryview": 285, "mention": [479, 483, 494, 495], "merchant": 486, "merg": [54, 470, 486, 489], "merged_arrai": 54, "mergesort": [32, 418], "merton": 495, "mesh": [156, 482, 489], "meshgrid": [0, 3, 8, 156], "messag": [483, 489], "met": [486, 494], "method": [1, 2, 4, 7, 14, 16, 17, 19, 34, 61, 168, 176, 191, 204, 207, 208, 209, 210, 298, 316, 317, 325, 333, 343, 347, 351, 426, 474, 478, 488, 495], "mgrid": 156, "microsecond": 494, "middl": [104, 105], "midpoint": [208, 210, 343, 351], "might": [32, 70, 86, 188, 418, 480, 483, 489, 494, 495], "million": [474, 482], "millisecond": [489, 494], "mimic": [341, 446, 482], "mimick": 482, "min": [0, 135, 171, 172, 174, 207, 277], "min_cpu_chunk": 455, "min_gpu_chunk": 455, "min_omp_chunk": 455, "min_scalar_typ": [3, 8], "miniforg": 495, "miniforge3": 495, "minim": [47, 495], "minimum": [0, 3, 8, 16, 17, 30, 34, 43, 55, 120, 124, 201, 204, 207, 271, 303, 495], "minlength": [43, 479], "mintypecod": [3, 8], "mirror": 482, "miscellan": 464, "mise": 392, "mismatch": [48, 54, 57], "mitig": 494, "mkdir": 495, "mod": [3, 8, 54], "mode": [54, 61, 86, 98, 99, 100, 102, 103, 104, 105, 107, 108, 109, 110, 111, 112, 113, 172, 176, 276, 309, 323, 348, 363, 383, 386, 390, 392, 397, 428, 466, 477, 494, 495], "model": [362, 471, 474, 475, 481, 482, 495], "modf": [0, 3, 8], "modif": [470, 482, 486], "modifi": [64, 114, 192, 206, 208, 210, 343, 351, 470, 476, 486], "modul": [282, 407, 495], "modular": 54, "moivr": 372, "monoton": [81, 135], "more": [38, 39, 40, 49, 51, 55, 70, 71, 75, 79, 81, 83, 85, 86, 98, 103, 108, 109, 111, 112, 137, 142, 168, 170, 189, 193, 202, 203, 209, 320, 393, 394, 408, 410, 424, 432, 434, 445, 449, 451, 473, 475, 476, 477, 479, 482, 485, 488, 494, 495, 496], "moshier": 486, "most": [34, 80, 85, 86, 87, 103, 137, 199, 364, 399, 410, 429, 451, 470, 482, 488, 495], "mostli": 483, "motion": 393, "move": [197, 320, 495], "moveaxi": [0, 3, 8], "mpi": [482, 495], "mpi4pi": [482, 489], "mpi_fin": 482, "mpirun": 487, "msg00295": 486, "mt19937": [3, 8], "mu": [365, 373, 392], "much": [42, 470, 494], "multi": [3, 86, 98, 99, 100, 102, 103, 104, 105, 107, 108, 109, 110, 111, 112, 113, 164, 165, 166, 167, 168, 173, 482, 483, 484, 485, 493, 494], "multi_dot": [0, 8], "multi_index": 397, "multidimension": 449, "multinomi": [3, 8], "multipl": [1, 2, 7, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 116, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 173, 175, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 213, 214, 215, 219, 220, 221, 222, 223, 225, 226, 228, 229, 230, 231, 232, 233, 234, 235, 238, 239, 240, 241, 242, 243, 244, 245, 247, 248, 249, 250, 251, 252, 253, 255, 256, 257, 259, 260, 261, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 276, 277, 278, 279, 280, 281, 286, 287, 290, 291, 294, 298, 301, 302, 303, 306, 307, 308, 309, 310, 312, 313, 315, 318, 319, 321, 322, 323, 324, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 473, 480, 482, 483, 485, 494, 496], "multipli": [0, 3, 8, 70, 83, 189, 202, 347, 373, 381, 382, 384, 494], "multivariate_norm": [3, 8], "must": [1, 12, 13, 14, 16, 17, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 41, 44, 45, 46, 48, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 63, 65, 66, 70, 71, 72, 73, 80, 81, 82, 83, 85, 90, 91, 92, 94, 97, 102, 108, 110, 118, 120, 121, 122, 123, 124, 125, 126, 129, 130, 131, 132, 135, 137, 138, 142, 144, 148, 149, 150, 151, 152, 158, 159, 160, 161, 162, 163, 170, 171, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 189, 190, 191, 192, 194, 195, 196, 197, 198, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 263, 277, 292, 329, 334, 335, 337, 343, 344, 345, 346, 347, 349, 351, 352, 353, 357, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 370, 371, 372, 373, 374, 375, 376, 378, 383, 388, 389, 390, 393, 394, 395, 400, 401, 404, 405, 406, 408, 409, 410, 411, 414, 415, 416, 417, 421, 422, 424, 425, 426, 429, 430, 431, 432, 434, 443, 444, 446, 448, 449, 451, 471, 482, 486, 487, 495], "my": 470, "myenv": [485, 495], "myron": 495, "n": [7, 33, 36, 40, 43, 54, 61, 68, 76, 77, 80, 81, 83, 85, 96, 98, 99, 100, 102, 103, 104, 105, 107, 108, 110, 111, 113, 114, 130, 139, 141, 156, 169, 171, 172, 174, 188, 189, 193, 313, 320, 329, 340, 344, 350, 354, 355, 357, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 377, 380, 381, 382, 383, 384, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 407, 410, 411, 420, 432, 436, 437, 438, 441, 442, 448, 451, 455, 474, 475, 476, 479, 481, 485, 487, 495], "n1": 193, "n2": 193, "n3": 193, "n_centroid": 479, "n_dim": 479, "n_element": 479, "n_gpu": 482, "n_iter": 479, "n_iter_check": 479, "n_point": 476, "n_stencil": 476, "n_warmup_it": 489, "naiv": [494, 495], "name": [289, 292, 315, 327, 393, 470, 486, 492, 495], "nan": [15, 29, 30, 35, 145, 150, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 488], "nan_to_num": [0, 3, 8], "nanargmax": [0, 3, 8, 201, 466], "nanargmin": [0, 3, 8, 200, 466], "nancumprod": [0, 3, 8], "nancumsum": [0, 3, 8], "nanmax": [0, 3, 8, 207, 466], "nanmean": [0, 3, 8], "nanmedian": [0, 3, 8], "nanmin": [0, 3, 8, 204, 466], "nanpercentil": [0, 3, 8], "nanprod": [0, 3, 8], "nanquantil": [0, 3, 8], "nanstd": [3, 8], "nansum": [0, 3, 8], "nanvar": [3, 8], "nation": 495, "nativ": [466, 488], "natur": [177, 179, 372, 495], "navier": 482, "nbad": 364, "nd": [6, 48, 298], "ndarrai": [0, 7, 8, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 357, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 380, 381, 382, 383, 384, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 460, 466, 477, 479, 480, 488, 491, 495], "ndenumer": [3, 8], "ndim": [0, 3, 6, 8, 16, 17, 33, 38, 39, 40, 48, 76, 79, 114, 171, 207, 326, 429, 433], "ndindex": [3, 8], "nditer": [3, 8], "ndmin": 34, "ndshape": [6, 50, 397, 413, 447], "ndshapelik": [50, 51, 117, 127, 128, 338, 339, 382, 384, 403, 423, 454], "nearest": [208, 210, 326, 343, 351, 405], "necessari": [38, 43, 48, 54, 64, 70, 71, 102, 108, 110, 114, 191, 192, 202, 203, 205, 206, 209, 211, 347, 348, 409, 426, 448, 482, 491], "necessarili": [54, 474, 475, 481], "need": [34, 49, 64, 81, 192, 193, 206, 396, 428, 429, 452, 466, 471, 475, 479, 482, 483, 494, 495], "neg": [0, 3, 8, 14, 19, 41, 43, 54, 78, 79, 96, 103, 104, 105, 108, 117, 120, 130, 149, 151, 169, 175, 199, 211, 295, 347, 359, 361, 363, 365, 366, 367, 369, 370, 372, 375, 376, 378, 383, 388, 396, 409, 421, 426, 428, 432, 434, 446], "negative_binomi": [0, 3, 8], "neginf": 199, "neglig": 486, "neighbor": [476, 482, 495], "neither": 486, "nersc": 495, "nest": [34, 48, 326, 482, 494], "nested_it": 3, "never": [61, 315], "new": [14, 19, 51, 54, 70, 71, 74, 79, 88, 89, 93, 117, 118, 119, 127, 143, 175, 187, 188, 191, 192, 197, 202, 203, 205, 206, 209, 211, 216, 274, 276, 288, 312, 329, 332, 338, 358, 379, 403, 409, 424, 427, 433, 448, 453, 462, 479, 485, 495], "new_label": 479, "newaxi": [329, 479], "newli": [34, 274], "newshap": 403, "newton": 478, "next": [320, 335, 470, 495], "nextaft": [0, 3, 8], "ngood": 364, "ni": [193, 349, 428, 429], "nightli": 485, "ninja": 471, "niter": [480, 489, 494], "nj": [349, 428, 429], "nk": [349, 428, 429], "nn": 193, "nnewton": 480, "nnode": 495, "node": [292, 473, 482, 483, 484, 485, 493, 496], "non": [14, 16, 17, 19, 21, 33, 39, 40, 41, 43, 67, 116, 135, 146, 156, 171, 175, 188, 191, 193, 199, 204, 207, 209, 292, 304, 306, 336, 344, 347, 359, 361, 363, 365, 366, 367, 370, 371, 372, 375, 376, 378, 383, 388, 421, 426, 432, 446, 482, 488], "nonc": [370, 371], "noncentr": [370, 371], "noncentral_chisquar": [0, 3, 8], "noncentral_f": [0, 3, 8], "none": [1, 2, 4, 6, 12, 13, 14, 16, 17, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 34, 37, 41, 43, 44, 45, 46, 52, 53, 54, 55, 57, 58, 59, 60, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 79, 80, 82, 83, 86, 89, 90, 91, 92, 94, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 117, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 135, 138, 142, 143, 144, 148, 149, 150, 151, 152, 158, 159, 160, 161, 162, 170, 171, 173, 175, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 189, 190, 191, 192, 194, 195, 196, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 268, 269, 270, 271, 272, 273, 275, 276, 277, 278, 282, 283, 284, 286, 287, 290, 295, 296, 298, 301, 302, 303, 307, 308, 309, 313, 314, 315, 318, 319, 321, 323, 326, 328, 329, 331, 332, 334, 335, 337, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 351, 352, 353, 354, 355, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 377, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 400, 401, 402, 404, 405, 406, 409, 411, 414, 415, 416, 417, 418, 421, 422, 423, 424, 425, 426, 428, 429, 430, 431, 432, 434, 435, 436, 438, 441, 443, 444, 445, 446, 448, 449, 452, 454, 466, 479], "noninfring": 486, "nonneg": [364, 394], "nonzero": [0, 3, 8, 95, 116, 156, 341, 494, 495], "nor": 486, "norm": [0, 8, 98, 99, 100, 102, 103, 104, 105, 107, 108, 109, 110, 111, 112, 113, 168, 464, 476, 479, 480, 494], "normal": [0, 3, 8, 42, 47, 48, 68, 98, 99, 100, 102, 103, 104, 105, 107, 108, 109, 110, 111, 112, 113, 133, 134, 135, 157, 164, 165, 354, 357, 365, 367, 378, 389, 392, 474, 477, 479, 495], "normal_unbias": [208, 210, 343, 351], "north": [481, 495], "not_equ": [0, 3, 8, 479], "note": [12, 13, 15, 18, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 34, 44, 45, 46, 52, 53, 54, 59, 60, 61, 63, 64, 65, 66, 68, 70, 71, 72, 73, 74, 79, 80, 81, 82, 83, 86, 87, 90, 91, 92, 94, 97, 98, 99, 100, 101, 102, 103, 104, 105, 107, 108, 109, 110, 111, 112, 113, 114, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 129, 131, 132, 135, 138, 141, 142, 143, 144, 145, 148, 149, 150, 155, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 188, 189, 190, 193, 194, 195, 196, 198, 202, 203, 204, 207, 274, 285, 292, 298, 304, 315, 317, 320, 325, 326, 332, 334, 335, 337, 342, 345, 346, 352, 353, 358, 367, 396, 399, 400, 401, 402, 403, 404, 405, 406, 407, 414, 415, 416, 417, 421, 422, 425, 428, 430, 431, 432, 436, 438, 439, 441, 442, 443, 444, 445, 449, 476, 477, 480, 483, 494, 495], "notic": [474, 480, 483, 485], "notion": [165, 167], "now": [54, 471, 474, 475, 477, 481, 495], "np": [12, 13, 16, 17, 22, 23, 24, 25, 26, 27, 28, 44, 45, 46, 48, 52, 53, 59, 60, 63, 65, 66, 70, 71, 72, 73, 80, 81, 82, 86, 90, 91, 92, 94, 97, 115, 116, 120, 121, 122, 123, 124, 125, 126, 129, 131, 132, 138, 143, 144, 148, 149, 150, 156, 158, 159, 160, 161, 162, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 188, 189, 190, 192, 193, 194, 195, 196, 198, 202, 203, 206, 293, 317, 320, 329, 334, 335, 337, 345, 346, 347, 352, 353, 380, 399, 400, 401, 404, 405, 414, 415, 416, 417, 421, 422, 425, 426, 428, 430, 431, 433, 443, 444, 474, 475, 476, 477, 479, 480, 481, 482, 487, 488, 489, 492, 494, 495, 496], "npoint": 476, "npt": [4, 36, 55, 58, 96, 127, 128, 135, 139, 141, 146, 147, 153, 155, 175, 187, 275, 293, 314, 332, 338, 339, 382, 384, 412, 433, 436, 452, 454], "npy": [176, 464], "npz": [176, 464], "nsampl": 364, "ntask": 495, "nuc": 171, "nuclear": 171, "null": 429, "num": [175, 187, 494, 495], "num_parallel": 471, "num_timestep": 482, "numa": 471, "number": [2, 3, 6, 8, 12, 13, 15, 18, 22, 23, 24, 25, 26, 27, 28, 33, 34, 41, 42, 43, 44, 45, 46, 47, 49, 52, 53, 54, 59, 60, 63, 65, 66, 67, 68, 72, 73, 76, 78, 80, 82, 87, 90, 91, 92, 93, 94, 96, 97, 100, 102, 103, 104, 105, 107, 108, 110, 111, 113, 120, 121, 122, 123, 124, 125, 126, 129, 130, 131, 132, 133, 134, 135, 138, 139, 141, 144, 147, 148, 149, 150, 154, 156, 157, 158, 159, 160, 161, 162, 171, 175, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 190, 191, 194, 195, 196, 198, 199, 202, 203, 204, 205, 207, 209, 211, 300, 305, 317, 333, 334, 335, 337, 341, 344, 345, 346, 352, 353, 355, 356, 357, 362, 364, 369, 372, 374, 385, 400, 401, 402, 404, 405, 406, 408, 409, 414, 415, 416, 417, 421, 422, 425, 428, 430, 431, 433, 436, 443, 444, 445, 446, 448, 449, 464, 466, 473, 474, 476, 480, 482, 483, 487, 488, 495], "number_of_dimens": 333, "numer": [103, 104, 105, 108, 110, 151, 152, 171, 334, 345, 360, 371, 464, 482, 488], "numit": 6, "numpi": [1, 2, 3, 4, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 94, 95, 96, 97, 98, 99, 100, 102, 103, 104, 105, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 274, 282, 288, 292, 315, 320, 332, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 398, 399, 400, 401, 402, 403, 404, 405, 407, 410, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 464, 466, 473, 474, 475, 476, 477, 479, 480, 481, 482, 484, 490, 491, 493, 496], "numpy_compat": 455, "numpythunk": 4, "nvidia": [474, 475, 477, 481, 483, 485, 495, 496], "nx": [193, 482, 494, 495], "ny": [193, 482, 494, 495], "nyquist": [101, 103, 104, 105], "o": [1, 292, 358, 479, 489, 495], "obj": [34, 74, 143], "object": [6, 14, 19, 34, 62, 143, 155, 163, 171, 176, 192, 206, 208, 210, 263, 275, 282, 285, 292, 298, 300, 304, 324, 325, 326, 332, 343, 351, 358, 403, 432, 436, 445], "object_": [3, 8], "observ": 68, "obtain": [141, 317, 373, 474, 475, 481, 486], "occas": 470, "occasion": 488, "occur": [58, 64, 70, 71, 74, 86, 143, 189, 199, 202, 203, 274, 294, 369, 372, 374, 390, 396, 494, 495], "occurr": [43, 445], "odd": [42, 47, 102, 106, 108, 110, 111, 133, 134, 157], "ofc": 70, "off": [21, 446, 470, 476], "offer": [483, 485, 494], "offload": 466, "offset": [4, 79, 188, 286, 296, 314, 320, 328, 434, 438, 439, 441, 442, 466, 489], "often": [21, 42, 354, 357, 372, 470, 479, 494, 495], "ogrid": 156, "omiss": 332, "omit": [263, 332], "omp": [473, 483, 495], "ompthread": [473, 495], "onc": [470, 471, 482, 495], "one": [6, 14, 16, 17, 19, 29, 30, 38, 41, 42, 43, 47, 49, 51, 54, 55, 64, 74, 86, 96, 98, 99, 102, 103, 104, 106, 107, 108, 110, 111, 130, 133, 134, 139, 141, 147, 156, 157, 171, 179, 191, 192, 193, 200, 201, 202, 204, 205, 206, 207, 208, 209, 210, 211, 285, 292, 293, 294, 298, 319, 320, 336, 343, 347, 351, 362, 373, 377, 412, 423, 424, 426, 438, 439, 441, 442, 448, 462, 470, 474, 482, 483, 485, 489, 494, 495], "ones": [0, 3, 8, 83, 93, 96, 139, 142, 151, 152, 188, 189, 202, 209, 211, 339, 432, 436, 449, 476, 479, 482, 488, 494], "ones_lik": [0, 3, 8], "onli": [12, 13, 22, 23, 24, 25, 26, 27, 28, 34, 36, 38, 41, 42, 44, 45, 46, 47, 52, 53, 55, 59, 60, 61, 63, 64, 65, 66, 72, 73, 82, 83, 86, 87, 90, 91, 92, 94, 97, 101, 120, 121, 122, 123, 124, 125, 126, 129, 130, 131, 132, 133, 134, 135, 138, 141, 144, 148, 149, 150, 157, 158, 159, 160, 161, 162, 163, 165, 167, 171, 173, 175, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 189, 190, 194, 195, 196, 198, 199, 200, 201, 204, 207, 274, 292, 298, 315, 334, 335, 337, 344, 345, 346, 349, 352, 353, 385, 396, 400, 401, 402, 403, 404, 405, 414, 415, 416, 417, 421, 422, 425, 429, 430, 431, 432, 443, 444, 445, 446, 449, 462, 466, 470, 477, 479, 482, 485, 488, 489, 494, 495], "onto": [292, 483], "oom": 483, "op": 385, "open": [21, 81, 156, 175, 176, 325, 377, 379, 381, 382, 384, 391, 470, 477, 483, 485, 495], "openmp": [466, 471, 473, 495], "oper": [7, 16, 17, 85, 86, 87, 93, 122, 137, 142, 163, 199, 204, 295, 340, 349, 402, 410, 432, 445, 449, 451, 455, 464, 466, 476, 477, 482, 488, 489], "operand": [86, 87], "opposit": [274, 292], "optim": [47, 86, 87, 170, 298, 466, 476, 482, 491, 495], "option": [1, 12, 13, 14, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 34, 37, 41, 43, 44, 45, 46, 49, 51, 52, 53, 54, 55, 57, 58, 59, 60, 61, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 78, 79, 80, 81, 82, 83, 86, 88, 89, 90, 91, 92, 94, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 117, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 135, 138, 139, 141, 142, 143, 144, 148, 149, 150, 151, 152, 158, 159, 160, 161, 162, 165, 167, 170, 171, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 263, 274, 294, 295, 313, 315, 324, 332, 334, 335, 337, 338, 339, 340, 341, 342, 343, 345, 346, 347, 348, 351, 352, 353, 354, 355, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 380, 381, 382, 383, 384, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 399, 400, 401, 402, 403, 404, 405, 406, 409, 411, 412, 414, 415, 416, 417, 418, 420, 421, 422, 423, 424, 425, 426, 428, 430, 431, 432, 434, 435, 436, 437, 438, 439, 441, 442, 443, 444, 445, 446, 447, 448, 449, 453, 454, 470, 471, 473, 478, 483, 485, 487, 491, 492, 494], "ord": [171, 479], "order": [4, 12, 13, 22, 23, 24, 25, 26, 27, 28, 31, 32, 34, 44, 45, 46, 52, 53, 59, 60, 63, 64, 65, 66, 72, 73, 79, 81, 82, 86, 87, 90, 91, 92, 94, 97, 103, 104, 105, 108, 110, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 129, 130, 131, 132, 138, 144, 148, 149, 150, 158, 159, 160, 161, 162, 165, 167, 170, 171, 174, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 189, 190, 193, 194, 195, 196, 197, 198, 220, 272, 273, 274, 294, 295, 307, 310, 312, 313, 318, 324, 325, 327, 329, 334, 335, 337, 341, 342, 345, 346, 348, 352, 353, 354, 362, 396, 397, 400, 401, 403, 404, 405, 408, 411, 414, 415, 416, 417, 418, 421, 422, 425, 430, 431, 432, 443, 444, 446, 447, 464, 474, 475, 476, 493, 494, 495], "ordertyp": [4, 396, 397, 403, 447], "ordin": 173, "ordinari": [142, 163], "org": [359, 470, 474, 475, 481, 486], "organ": 486, "orient": [349, 429], "origin": [12, 13, 22, 23, 24, 25, 26, 27, 28, 41, 44, 45, 46, 49, 51, 52, 53, 59, 60, 63, 64, 65, 66, 72, 73, 82, 90, 91, 92, 94, 97, 120, 121, 122, 123, 124, 125, 126, 129, 131, 132, 138, 144, 148, 149, 150, 158, 159, 160, 161, 162, 171, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 190, 192, 193, 194, 195, 196, 197, 198, 206, 208, 210, 334, 335, 337, 343, 345, 346, 351, 352, 353, 400, 401, 403, 404, 405, 406, 414, 415, 416, 417, 421, 422, 425, 430, 431, 443, 444, 445, 472, 477, 482, 492, 495], "ortho": [98, 99, 100, 102, 103, 104, 105, 107, 108, 109, 110, 111, 112, 113], "orthonorm": 172, "oserror": 176, "other": [6, 12, 13, 21, 22, 23, 24, 25, 26, 27, 28, 34, 44, 45, 46, 49, 50, 52, 53, 54, 55, 59, 60, 61, 63, 65, 66, 72, 73, 80, 82, 86, 90, 91, 92, 94, 97, 103, 104, 105, 108, 110, 120, 121, 122, 123, 124, 125, 126, 129, 131, 132, 138, 139, 144, 148, 149, 150, 158, 159, 160, 161, 162, 170, 171, 175, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 190, 194, 195, 196, 197, 198, 208, 210, 274, 275, 282, 292, 315, 317, 320, 334, 335, 337, 343, 345, 346, 351, 352, 353, 373, 390, 391, 400, 401, 404, 405, 407, 414, 415, 416, 417, 421, 422, 425, 430, 431, 436, 443, 444, 464, 466, 470, 474, 483, 486, 489, 494], "otherwis": [15, 29, 30, 34, 35, 41, 67, 68, 80, 142, 175, 187, 191, 192, 200, 201, 204, 205, 206, 207, 208, 210, 274, 294, 324, 343, 351, 385, 396, 403, 411, 427, 434, 435, 436, 448, 452, 466, 482, 486], "ouput": 466, "our": [470, 477, 481, 483, 488, 494, 495], "out": [12, 13, 14, 16, 17, 19, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 34, 37, 42, 43, 44, 45, 46, 47, 52, 53, 54, 55, 57, 58, 59, 60, 61, 63, 65, 66, 68, 70, 71, 72, 73, 74, 75, 78, 80, 82, 83, 86, 88, 89, 90, 91, 92, 94, 97, 98, 99, 100, 102, 103, 104, 105, 107, 108, 109, 110, 111, 112, 113, 117, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 131, 132, 133, 134, 138, 139, 140, 142, 143, 144, 146, 148, 149, 150, 151, 152, 153, 156, 157, 158, 159, 160, 161, 162, 170, 173, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 188, 189, 190, 191, 192, 194, 195, 196, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 268, 269, 270, 271, 276, 277, 278, 283, 284, 287, 295, 301, 302, 303, 308, 321, 323, 328, 329, 331, 334, 335, 337, 338, 339, 340, 342, 343, 345, 346, 347, 348, 351, 352, 353, 354, 355, 356, 357, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 380, 381, 382, 383, 384, 387, 388, 389, 390, 391, 392, 393, 394, 395, 398, 399, 400, 401, 404, 405, 407, 409, 414, 415, 416, 417, 418, 419, 421, 422, 424, 425, 426, 428, 429, 430, 431, 432, 434, 443, 444, 448, 449, 452, 453, 454, 473, 475, 481, 486, 491, 494, 495], "outcom": [362, 495], "outer": [0, 3, 8, 87], "outermost": [48, 54], "outlin": 482, "output": [12, 13, 14, 15, 16, 17, 19, 21, 22, 23, 24, 25, 26, 27, 28, 42, 43, 44, 45, 46, 47, 48, 52, 53, 55, 57, 59, 60, 61, 63, 65, 66, 70, 71, 72, 73, 78, 80, 81, 82, 83, 86, 87, 88, 90, 91, 92, 94, 96, 97, 98, 99, 100, 102, 103, 104, 105, 108, 109, 110, 116, 120, 121, 122, 123, 124, 125, 126, 129, 131, 132, 133, 134, 138, 139, 140, 141, 142, 144, 145, 146, 148, 149, 150, 156, 157, 158, 159, 160, 161, 162, 170, 173, 175, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 189, 190, 191, 192, 193, 194, 195, 196, 198, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 325, 334, 335, 337, 340, 341, 343, 345, 346, 347, 351, 352, 353, 354, 355, 357, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 377, 380, 381, 382, 383, 384, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 398, 399, 400, 401, 402, 404, 405, 406, 409, 412, 414, 415, 416, 417, 421, 422, 425, 426, 430, 431, 432, 433, 434, 443, 444, 445, 446, 448, 449, 455, 464, 466, 473, 482, 483, 491, 495], "outsid": [54, 55, 81, 135, 476], "over": [12, 13, 14, 16, 17, 19, 22, 23, 24, 25, 26, 27, 28, 41, 44, 45, 46, 52, 53, 59, 60, 63, 65, 66, 70, 71, 72, 73, 82, 83, 86, 87, 90, 91, 92, 94, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 117, 120, 121, 122, 123, 124, 125, 126, 129, 131, 132, 135, 138, 142, 144, 148, 149, 150, 158, 159, 160, 161, 162, 171, 175, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 190, 191, 193, 194, 195, 196, 198, 202, 203, 204, 205, 209, 211, 293, 294, 295, 308, 321, 334, 335, 337, 341, 345, 346, 347, 349, 352, 353, 355, 359, 374, 376, 381, 382, 384, 390, 391, 394, 400, 401, 404, 405, 406, 414, 415, 416, 417, 421, 422, 425, 426, 428, 429, 430, 431, 432, 443, 444, 446, 448, 466, 481, 482, 495], "overal": [466, 473, 482, 495], "overcom": 325, "overflow": [21, 120, 317], "overhead": [466, 482, 489], "overlap": 476, "overrid": [69, 89, 128, 339, 454, 485], "overridden": [1, 68], "oversubscrib": 483, "overwrite_input": [192, 206, 208, 210, 343, 351], "own": [292, 315, 372, 470, 485, 495], "owndata": 292, "owner": [292, 315, 486], "p": [92, 193, 355, 359, 362, 368, 369, 372, 407, 435, 495], "pack": [341, 396, 446, 464], "packag": [208, 210, 343, 351, 477, 480, 483, 489, 495], "packbit": [0, 3, 8], "pad": [8, 61, 98, 99, 100, 102, 103, 104, 105, 107, 108, 110, 111, 113, 341, 446], "pade": 168, "page": [359, 470, 484], "pair": [87, 98, 99, 100, 102, 103, 104, 105, 107, 108, 109, 110, 111, 112, 113, 122], "pairwis": 479, "pairwise_dist": 479, "paper": [208, 210, 343, 351, 476], "parallel": [29, 30, 70, 71, 98, 99, 100, 102, 103, 104, 105, 107, 108, 109, 110, 111, 112, 113, 164, 165, 166, 167, 202, 203, 471, 482, 487, 495], "param": 187, "paramet": [1, 2, 6, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 263, 274, 282, 289, 290, 291, 294, 295, 298, 313, 315, 324, 325, 326, 329, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 380, 381, 382, 383, 384, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 441, 442, 443, 444, 445, 446, 447, 448, 449, 451, 452, 453, 454, 473, 494, 495], "parameter": [354, 355, 357, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 383, 388, 389, 390, 391, 392, 393, 394, 395], "parenthes": 170, "pareto": [0, 3, 8], "parse_arg": 495, "parser": 495, "part": [18, 57, 140, 146, 147, 153, 154, 164, 165, 166, 167, 196, 297, 311, 398, 399, 409, 419, 470], "parti": 485, "partial": [98, 99, 100, 102, 103, 104, 105, 107, 108, 109, 110, 111, 112, 113, 192, 206, 480, 495], "particular": 486, "particularli": 495, "partit": [0, 3, 8, 31, 70, 272, 482, 489, 495], "pass": [14, 16, 17, 18, 19, 34, 48, 156, 176, 188, 191, 199, 204, 207, 209, 274, 347, 358, 426, 436, 471, 473, 489, 493, 495], "past": 495, "patch": 492, "path": [87, 176, 289, 325, 471], "pathlib": [176, 289, 325], "pathlik": 176, "pattern": [41, 466, 494], "pcg64": [3, 8], "pcg64dxsm": [3, 8], "pcolor": 481, "pdf": [390, 474], "peak": [365, 390], "peebl": [359, 372], "pend": [34, 433], "pentadiagon": 476, "per": [466, 471, 473, 477, 482, 495], "percent": 373, "percentag": [466, 483, 491, 495], "percentil": [0, 3, 8, 208], "perform": [14, 19, 31, 37, 41, 54, 55, 61, 80, 86, 99, 100, 104, 105, 110, 113, 117, 163, 168, 188, 191, 205, 211, 295, 347, 349, 407, 426, 448, 449, 474, 475, 477, 480, 482, 483, 490, 493, 495], "performa": 495, "perhap": 81, "period": 476, "perlmutt": 495, "permiss": [54, 474, 475, 481, 486], "permit": [470, 477, 486, 494], "permut": [3, 8, 329, 435], "permute_dim": [3, 8], "perpendicular": 69, "person": [470, 486], "peyton": 359, "pg": 171, "phase": 495, "philox": [3, 8], "pi": [18, 392, 474, 476, 482], "pick": [471, 477], "pickl": [176, 258, 263, 289, 290], "piec": 495, "piecewis": [3, 8], "pil": [477, 495], "pillow": 495, "pin": 483, "pinv": [3, 8], "pip": 485, "pipe": 491, "pixel": [85, 137, 410, 451, 481], "place": [0, 3, 8, 14, 15, 16, 17, 19, 55, 58, 64, 70, 71, 74, 93, 114, 141, 143, 191, 192, 199, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 307, 318, 329, 343, 347, 348, 349, 351, 403, 406, 409, 424, 426, 428, 434, 448, 462, 487], "plai": 495, "plain": [466, 473, 475], "plan": 473, "plane": [18, 408], "platform": [70, 71, 202, 203, 209, 211, 347, 380, 399, 426, 485], "pleas": [36, 84, 136, 193, 440, 450, 470, 480, 483, 485], "plot": [474, 476, 477, 479, 495], "plt": [474, 476, 477, 479, 481, 495], "plu": 179, "png": [477, 495], "point": [21, 42, 47, 70, 71, 83, 86, 98, 102, 103, 107, 108, 110, 111, 130, 133, 134, 145, 157, 169, 189, 191, 199, 202, 203, 205, 285, 313, 335, 378, 391, 409, 411, 432, 464, 466, 471, 475, 476, 479, 482, 488, 495], "poisson": [0, 3, 8, 359], "poisson_process": 359, "poli": [3, 8], "poly1d": [3, 8], "polyadd": [3, 8], "polyd": [3, 8], "polydiv": [3, 8], "polyfit": [3, 8], "polyint": [3, 8], "polymul": [3, 8], "polynomi": 407, "polysub": [3, 8], "polyv": [3, 8], "pool": 483, "popul": 376, "port": [379, 482], "portion": [486, 495], "posinf": 199, "posit": [0, 3, 8, 15, 18, 21, 43, 54, 78, 79, 93, 96, 103, 104, 105, 108, 120, 149, 152, 163, 169, 197, 199, 320, 354, 362, 365, 373, 375, 378, 406, 409, 412, 434, 475, 495], "possess": [6, 282], "possibl": [12, 13, 22, 23, 24, 25, 26, 27, 28, 39, 40, 44, 45, 46, 47, 52, 53, 59, 60, 63, 65, 66, 72, 73, 82, 87, 90, 91, 92, 94, 97, 120, 121, 122, 123, 124, 125, 126, 129, 131, 132, 135, 138, 144, 148, 149, 150, 158, 159, 160, 161, 162, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 188, 190, 194, 195, 196, 198, 274, 292, 334, 335, 337, 345, 346, 352, 353, 400, 401, 403, 404, 405, 414, 415, 416, 417, 420, 421, 422, 425, 430, 431, 435, 443, 444, 470, 473, 483, 486, 487, 489, 494], "possibli": [326, 488], "post": 483, "potenti": [285, 488, 494], "pow": [3, 8, 257], "power": [0, 3, 8, 120, 169, 187, 495], "pp": [208, 210, 343, 351, 372], "pr": 470, "practic": [483, 493], "pre": [34, 433, 470, 471], "precis": [41, 68, 70, 71, 86, 120, 188, 202, 203, 209, 211, 317, 325, 326, 347, 380, 426, 434, 466, 488, 495], "predict": 482, "prefer": [83, 483], "preload": 466, "preload_cudalib": 455, "prepend": [48, 80, 141, 189, 433], "prescrib": 483, "present": [16, 17, 83, 142, 204, 207, 432, 449], "preserv": [14, 19, 34, 38, 39, 40, 55, 57, 64, 80, 86, 117, 118, 119, 165, 167, 189, 192, 206, 274, 295, 313, 332, 411, 434], "press": 171, "pressur": 274, "prevent": [470, 495], "previou": [41, 470], "previous": [292, 495], "price": [478, 495], "primarili": 48, "principl": [359, 372], "print": [81, 399, 466, 473, 474, 475, 476, 479, 480, 481, 491, 495, 496], "printabl": 87, "printopt": [3, 8], "prior": [80, 471, 486, 495], "prior_distance_sum": 479, "probabl": [2, 68, 135, 192, 206, 354, 355, 359, 360, 362, 369, 372, 390, 392, 395], "problem": [325, 470, 480, 482, 483, 489, 494, 495], "proc": 483, "proce": 495, "process": [42, 163, 359, 472, 483, 494, 495], "processor": [473, 482, 483, 494, 495], "procur": 486, "prod": [0, 3, 8, 209, 317], "produc": [6, 292, 324, 325, 349, 429, 481, 488, 495], "product": [69, 70, 83, 87, 142, 156, 170, 189, 202, 209, 211, 287, 308, 317, 340, 347, 432, 449, 464, 475, 482, 484, 486, 495], "product_along_axi": 347, "prof": 482, "profil": 476, "profit": 486, "program": [471, 482, 483, 484, 487, 492, 495, 496], "project": [455, 470, 474, 485], "promot": [115, 120, 189, 433, 486], "prone": [482, 495], "propag": [70, 71, 202, 203, 488], "proper": [464, 482], "properli": [315, 495], "properti": [6, 212, 275, 282, 285, 288, 292, 293, 297, 300, 304, 305, 311, 316, 317, 320, 329, 460], "proport": 395, "propos": 470, "protocol": 436, "prototyp": 89, "provid": [1, 8, 12, 13, 22, 23, 24, 25, 26, 27, 28, 29, 30, 44, 45, 46, 52, 53, 54, 58, 59, 60, 63, 64, 65, 66, 72, 73, 82, 84, 85, 86, 87, 90, 91, 92, 94, 97, 120, 121, 122, 123, 124, 125, 126, 129, 131, 132, 135, 137, 138, 144, 148, 149, 150, 151, 152, 158, 159, 160, 161, 162, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 189, 190, 191, 194, 195, 196, 198, 200, 201, 205, 209, 216, 315, 329, 334, 335, 337, 345, 346, 352, 353, 377, 378, 380, 400, 401, 404, 405, 410, 414, 415, 416, 417, 421, 422, 424, 425, 428, 430, 431, 443, 444, 445, 446, 451, 470, 483, 484, 486, 494, 495], "pseudonym": 470, "ptp": [3, 8], "public": 470, "publish": [483, 486], "pull": [1, 358, 470, 471], "purpos": [171, 486], "put": [0, 3, 8, 344, 349, 350, 474, 495], "put_along_axi": [0, 3, 8], "put_result": 474, "putmask": [0, 3, 8], "pwd": 471, "py": [471, 473, 474, 483, 485, 486, 487, 491, 492, 495, 496], "pyarray_resolvewritebackifcopi": [292, 315], "pypi": 495, "pyplot": [474, 476, 477, 479, 481, 495], "python": [21, 122, 285, 298, 317, 324, 325, 326, 399, 471, 474, 475, 481, 484, 485, 487, 488, 489, 494, 495, 496], "python3": 471, "q": [172, 208, 210, 343, 351], "qo": 495, "qr": [0, 3, 8], "quadrant": 27, "quadrat": 495, "quantil": [0, 3, 8, 208, 210, 343], "quantiti": 495, "queri": [483, 495], "question": [75, 484, 488], "quick": [325, 492], "quickli": [156, 475], "quicksort": [32, 418], "r": [69, 85, 137, 172, 208, 210, 343, 351, 372, 410, 451, 474, 495], "r0": 141, "rad2deg": [0, 3, 8, 73], "radian": [3, 8, 18, 72, 73, 352], "raindrop": 359, "rainstorm": 359, "rais": [14, 16, 17, 19, 41, 43, 48, 54, 57, 64, 69, 79, 81, 114, 120, 164, 165, 166, 167, 169, 171, 172, 173, 174, 176, 191, 192, 200, 201, 204, 206, 207, 208, 209, 210, 276, 292, 309, 323, 343, 346, 347, 348, 351, 357, 375, 397, 407, 420, 423, 426, 428, 434], "ram": 496, "ran": 483, "rand": [0, 3, 8, 495], "randint": [0, 3, 8, 380], "randn": [0, 3, 8, 495], "random": [0, 455, 464, 479, 495], "random_integ": [0, 3, 8], "random_sampl": [0, 3, 8, 379, 382, 384, 391], "random_se": 479, "randomli": [364, 378, 479], "randomst": [3, 8], "ranf": [3, 8], "rang": [18, 21, 54, 81, 135, 193, 348, 368, 373, 428, 464, 479, 480, 481, 482, 489, 494, 495], "rank": [95, 173, 395, 407, 482, 485, 495], "raphson": 478, "rare": 470, "rate": [359, 474, 495], "rather": [21, 79, 292, 466, 489, 494], "ratio": 360, "ration": 464, "ravel": [0, 3, 8, 116, 171, 294], "ravel_multi_index": [0, 3, 8], "raw": 324, "rawdata": 263, "rayleigh": [0, 3, 8], "rbf": 477, "re": [20, 39, 40, 58, 116, 406, 495], "reach": [48, 369, 470], "read": [176, 289, 292, 396, 403, 466, 477, 495], "readi": 470, "readonli": 51, "real": [0, 3, 8, 18, 35, 102, 108, 109, 110, 111, 112, 113, 140, 153, 163, 165, 167, 199, 399, 409, 419, 464, 470, 482], "real_if_clos": [0, 3, 8], "realli": [98, 103, 108, 109, 111, 112, 470, 494], "realm": 493, "realm_default_arg": 487, "rearrang": 464, "reason": [34, 110, 470], "rebuild": [85, 137, 410, 451], "recarrai": [3, 8], "receiv": 482, "reciproc": [0, 3, 8], "recommend": [2, 54, 489, 493, 495], "reconstruct": 445, "record": [3, 8, 470], "recov": 325, "recreat": 326, "recurs": 80, "recv": 482, "recv_typ": 482, "red": [476, 479], "redistribut": [470, 486], "reduc": [14, 16, 17, 19, 29, 30, 41, 191, 192, 193, 200, 201, 204, 205, 206, 207, 208, 209, 210, 211, 274, 343, 347, 351, 426, 448, 476, 482, 483, 495], "reduct": [14, 19, 208, 210, 343, 351, 448, 493, 495], "refer": [14, 19, 36, 49, 51, 70, 71, 84, 96, 99, 100, 104, 105, 110, 113, 136, 151, 152, 171, 191, 193, 202, 203, 205, 208, 210, 216, 268, 269, 270, 271, 272, 273, 276, 277, 278, 279, 280, 286, 287, 292, 301, 302, 303, 306, 307, 308, 309, 310, 312, 318, 319, 320, 321, 322, 323, 328, 330, 331, 343, 347, 351, 359, 372, 393, 396, 403, 409, 426, 436, 440, 448, 450, 479, 482, 483, 484, 485, 494, 495], "referenc": 315, "reflect": [292, 483], "regard": 485, "regardless": [19, 136, 450, 483], "region": 483, "reinterpret": 332, "reject": 470, "rel": [15, 68, 145], "relabel": 479, "relat": [354, 482, 494, 495], "relationship": [68, 393], "releas": [470, 486, 489, 495], "relev": [175, 187, 317], "reli": [61, 407], "remain": [12, 13, 19, 22, 23, 24, 25, 26, 27, 28, 44, 45, 46, 52, 53, 59, 60, 63, 65, 66, 72, 73, 82, 90, 91, 92, 94, 97, 113, 120, 121, 122, 123, 124, 125, 126, 129, 131, 132, 135, 138, 144, 148, 149, 150, 158, 159, 160, 161, 162, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 190, 194, 195, 196, 197, 198, 208, 210, 292, 334, 335, 337, 343, 345, 346, 351, 352, 353, 373, 400, 401, 403, 404, 405, 414, 415, 416, 417, 421, 422, 425, 430, 431, 443, 444], "remaind": [0, 3, 8, 122, 125, 195], "remot": 495, "remov": [29, 30, 74, 79, 93, 189, 200, 201, 204, 319, 347, 423, 426, 434, 464, 482, 488], "reopen": 470, "reorder": [117, 197, 295], "rep": 433, "repeat": [0, 3, 8, 68, 99, 100, 104, 105, 110, 114, 164, 165, 166, 167, 169, 193, 344, 348, 350, 433, 495], "repeated_arrai": 402, "repeatedli": [481, 495], "repetit": [402, 433], "replac": [55, 199, 202, 203, 309, 348, 428, 475, 483, 484, 495, 496], "replic": 433, "repo": 470, "report": 466, "report_coverag": 455, "report_dump_callstack": 455, "report_dump_csv": 455, "repositori": [470, 482], "repr": 259, "repres": [41, 68, 86, 103, 141, 151, 152, 193, 341, 365, 446, 448, 476, 477, 479, 482, 483, 488], "represent": [87, 141, 199, 462], "reproduc": [479, 486], "req": 482, "request": [359, 374, 470, 479, 482, 483], "requir": [3, 8, 34, 176, 199, 466, 471, 472, 474, 475, 481, 482, 483, 485, 491, 493, 494], "requri": 495, "res2": [39, 40], "rese": 385, "research": [474, 482, 495], "resembl": 389, "reserv": [473, 483, 486, 495], "reset": 6, "reshap": [0, 3, 8, 85, 93, 316, 329, 410, 451, 483, 488], "reshaped_arrai": 403, "resid": 189, "resiz": [3, 8, 93, 495], "resolut": [476, 482], "resourc": [474, 483, 493, 496], "respect": [61, 130, 189, 315, 476, 483, 495], "respons": [470, 482, 495], "rest": 36, "restor": 406, "restrict": 486, "result": [6, 12, 13, 14, 16, 17, 18, 19, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 34, 41, 43, 44, 45, 46, 52, 53, 54, 55, 58, 59, 60, 63, 65, 66, 68, 70, 71, 72, 73, 75, 79, 80, 81, 82, 87, 89, 90, 91, 92, 93, 94, 95, 97, 109, 112, 115, 120, 121, 122, 123, 124, 125, 126, 128, 129, 131, 132, 135, 138, 141, 142, 144, 148, 149, 150, 151, 152, 158, 159, 160, 161, 162, 164, 166, 171, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 274, 313, 325, 332, 334, 335, 337, 339, 340, 341, 342, 343, 345, 346, 347, 349, 351, 352, 353, 357, 377, 380, 381, 382, 384, 389, 400, 401, 403, 404, 405, 409, 411, 414, 415, 416, 417, 418, 420, 421, 422, 424, 425, 426, 428, 429, 430, 431, 432, 433, 434, 436, 443, 444, 445, 448, 449, 454, 466, 473, 474, 475, 476, 481, 482, 488, 489, 495], "result_typ": [3, 8, 474], "ret": 38, "retain": [12, 13, 22, 23, 24, 25, 26, 27, 28, 44, 45, 46, 52, 53, 59, 60, 63, 65, 66, 72, 73, 82, 90, 91, 92, 94, 97, 120, 121, 122, 123, 124, 125, 126, 129, 131, 132, 138, 144, 148, 149, 150, 158, 159, 160, 161, 162, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 190, 194, 195, 196, 198, 334, 335, 337, 345, 346, 352, 353, 400, 401, 404, 405, 414, 415, 416, 417, 421, 422, 425, 430, 431, 443, 444, 486], "retstep": 175, "return": [2, 6, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 213, 214, 215, 216, 217, 219, 220, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 255, 256, 257, 259, 260, 261, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 277, 278, 280, 282, 286, 287, 290, 293, 294, 295, 298, 301, 302, 303, 306, 308, 310, 312, 313, 317, 321, 322, 324, 326, 327, 328, 329, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 345, 346, 347, 349, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 451, 452, 453, 454, 462, 474, 475, 477, 479, 480, 481, 483, 493, 495], "return_count": 445, "return_index": 445, "return_invers": 445, "retval": 41, "revers": [81, 117, 118, 119, 295, 329, 341, 396, 408, 435, 446], "review": [472, 483, 485], "rf": 495, "rfft": [0, 3, 8, 108, 113], "rfft2": [0, 3, 8, 109], "rfftfreq": [3, 8], "rfftn": [0, 3, 8, 110, 111, 112], "rh": [287, 476], "right": [55, 57, 79, 81, 118, 138, 164, 165, 313, 390, 404, 411, 434, 470, 476, 482, 485, 486], "right_shift": [0, 3, 8], "rightmost": 135, "rint": [0, 3, 8], "rippl": 42, "risk": [474, 482, 485, 495], "river": 482, "rk_hypergeometric_hrua": 486, "rk_hypergeometric_hyp": 486, "rk_triangular": 486, "rm": 495, "rn": 141, "rng": 479, "rober": 495, "robert": 486, "roll": [0, 3, 8], "rollaxi": [3, 8], "root": [0, 3, 8, 52, 421, 471], "rot90": [0, 3, 8], "rotat": 408, "roughli": 495, "round": [0, 21, 391, 405, 464], "rounded_arrai": 409, "roundoff": 122, "routin": [455, 462, 466, 471], "row": [34, 68, 96, 118, 119, 139, 170, 294, 320, 396, 410, 436, 438, 447, 450, 451, 477, 482, 495], "row_stack": [3, 8], "rowvar": 68, "rsqrt2pi": 474, "rst": 320, "rt": 495, "rtol": [15, 145], "rule": [21, 41, 48, 64, 115, 373, 489], "run": [188, 362, 470, 471, 472, 481, 483, 484, 485, 487, 491, 492, 493, 494, 496], "run_kmean": 479, "runfil": 495, "runtim": [204, 207, 466, 473, 482, 483, 487, 489, 492, 494], "runtimeerror": 292, "runtimewarn": [474, 480, 483], "rv": 486, "s0": 495, "s_0": 495, "s_0n": 495, "safe": [58, 64, 86, 176, 189, 274], "sai": [483, 489], "salloc": 495, "same": [14, 15, 16, 17, 19, 20, 29, 30, 31, 32, 34, 35, 41, 43, 48, 54, 56, 58, 61, 68, 70, 71, 79, 80, 81, 85, 89, 95, 103, 104, 105, 110, 128, 130, 135, 137, 151, 152, 153, 169, 170, 191, 192, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 274, 288, 312, 313, 317, 320, 327, 329, 332, 339, 341, 342, 343, 344, 347, 350, 351, 396, 402, 406, 409, 410, 411, 412, 418, 419, 424, 426, 428, 432, 434, 437, 439, 442, 446, 447, 448, 451, 454, 470, 474, 475, 477, 479, 480, 481, 483, 485, 492, 494, 495], "same_kind": [12, 13, 22, 23, 24, 25, 26, 27, 28, 44, 45, 46, 52, 53, 58, 59, 60, 63, 64, 65, 66, 72, 73, 82, 86, 90, 91, 92, 94, 97, 120, 121, 122, 123, 124, 125, 126, 129, 131, 132, 138, 144, 148, 149, 150, 158, 159, 160, 161, 162, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 189, 190, 194, 195, 196, 198, 274, 334, 335, 337, 345, 346, 352, 353, 400, 401, 404, 405, 414, 415, 416, 417, 421, 422, 425, 430, 431, 443, 444], "sampl": [42, 47, 68, 106, 130, 133, 135, 157, 175, 187, 208, 210, 343, 351, 354, 355, 357, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 380, 381, 382, 383, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 455, 464], "satisfi": [34, 81, 95, 274, 395, 412, 480, 483, 494], "save": [3, 8, 192, 206, 208, 210, 343, 351, 466, 470, 476, 491], "savetxt": [3, 8], "savez": [3, 8], "savez_compress": [3, 8], "scalabl": [482, 483, 494, 495], "scalar": [12, 13, 15, 16, 17, 18, 22, 23, 24, 25, 26, 27, 28, 35, 38, 44, 45, 46, 48, 52, 53, 55, 59, 60, 63, 65, 66, 69, 72, 73, 80, 82, 83, 90, 91, 92, 94, 97, 114, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 135, 138, 140, 142, 144, 145, 148, 149, 150, 155, 158, 159, 160, 161, 162, 173, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 188, 189, 190, 193, 194, 195, 196, 198, 204, 207, 208, 209, 210, 211, 291, 298, 313, 326, 333, 334, 335, 337, 343, 345, 346, 347, 351, 352, 353, 354, 355, 357, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 383, 386, 388, 389, 390, 391, 392, 393, 394, 395, 398, 400, 401, 404, 405, 411, 412, 414, 415, 416, 417, 421, 422, 425, 426, 428, 430, 431, 432, 443, 444, 462, 493, 494], "scale": [87, 98, 99, 100, 102, 103, 104, 105, 107, 108, 109, 110, 111, 112, 113, 187, 359, 361, 363, 365, 366, 372, 373, 383, 387, 388, 393, 394, 477, 482, 483, 484, 494, 495], "scatter": [479, 495], "schedul": [474, 475, 481, 483], "scheme": 478, "schole": [478, 485], "scientif": [482, 483, 495], "scientist": 482, "scikit": 471, "scipi": [168, 373, 477, 495], "scp": 495, "script": [471, 473, 483, 487, 492, 496], "seamlessli": 483, "search": [87, 455, 464, 484], "searchsort": [0, 3, 8, 81], "second": [41, 48, 61, 69, 79, 83, 85, 87, 104, 105, 120, 130, 135, 136, 137, 151, 152, 188, 189, 193, 340, 346, 408, 410, 419, 427, 432, 434, 449, 451, 476, 494, 495], "second_cond": 494, "section": [34, 36, 100, 105, 110, 113, 483, 495], "secur": [176, 495], "see": [12, 13, 15, 16, 17, 22, 23, 24, 25, 26, 27, 28, 34, 44, 45, 46, 48, 52, 53, 55, 59, 60, 63, 65, 66, 68, 70, 71, 72, 73, 75, 77, 82, 86, 90, 91, 92, 94, 97, 98, 99, 100, 102, 103, 104, 105, 107, 108, 109, 110, 111, 112, 113, 120, 121, 122, 123, 124, 125, 126, 129, 131, 132, 135, 138, 144, 145, 148, 149, 150, 158, 159, 160, 161, 162, 171, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 190, 193, 194, 195, 196, 198, 202, 203, 204, 207, 209, 211, 274, 282, 315, 329, 334, 335, 337, 345, 346, 347, 352, 353, 377, 380, 400, 401, 404, 405, 414, 415, 416, 417, 421, 422, 425, 426, 430, 431, 438, 439, 441, 442, 443, 444, 445, 448, 460, 462, 471, 473, 474, 475, 476, 477, 480, 481, 483, 485, 486, 488, 494, 495, 496], "seed": [0, 1, 3, 8, 358, 464, 479], "seedsequ": [3, 8], "seek": [176, 480], "seem": 470, "seen": 354, "segment": 292, "seldom": 120, "select": [0, 3, 8, 16, 17, 57, 64, 170, 204, 278, 364, 423, 428, 448, 479, 482, 495], "selectkind": [31, 342], "selector": 168, "self": [6, 212, 213, 214, 215, 216, 217, 219, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 255, 256, 257, 259, 260, 261, 262, 264, 265, 266, 267, 278, 292], "sell": 486, "semant": 135, "send": 482, "send_typ": 482, "sens": [85, 137, 410, 451, 488], "sep": 325, "separ": [86, 199, 325, 409, 471, 473, 491, 494, 495], "sequenc": [18, 31, 34, 39, 40, 48, 50, 54, 56, 58, 85, 87, 99, 100, 104, 105, 109, 110, 112, 113, 135, 137, 141, 143, 156, 170, 175, 187, 192, 197, 206, 208, 210, 263, 342, 343, 344, 351, 374, 408, 410, 412, 424, 432, 433, 451, 489], "seri": 368, "serial": 471, "servic": [473, 486], "session": 495, "set": [12, 13, 14, 16, 17, 19, 22, 23, 24, 25, 26, 27, 28, 29, 30, 41, 44, 45, 46, 52, 53, 59, 60, 63, 65, 66, 68, 72, 73, 76, 78, 82, 90, 91, 92, 94, 97, 120, 121, 122, 123, 124, 125, 126, 129, 131, 132, 138, 139, 144, 148, 149, 150, 158, 159, 160, 161, 162, 171, 175, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 190, 191, 192, 194, 195, 196, 198, 200, 201, 204, 205, 206, 207, 208, 209, 210, 211, 262, 274, 276, 292, 315, 316, 332, 334, 335, 337, 343, 345, 346, 347, 350, 351, 352, 353, 364, 373, 400, 401, 404, 405, 414, 415, 416, 417, 421, 422, 425, 426, 430, 431, 443, 444, 448, 455, 464, 470, 471, 476, 480, 482, 483, 488, 489, 494, 495], "set_bit_gener": [3, 8], "set_devic": 482, "set_printopt": [3, 8], "set_stat": [3, 8], "set_titl": [477, 495], "set_xtick": [477, 495], "set_ytick": [477, 495], "setbufs": [3, 8], "setdevic": 482, "setdiff1d": [3, 8], "seterr": [3, 8], "seterrcal": [3, 8], "setfield": [0, 8], "setflag": [0, 8, 292], "setup": 480, "setxor1d": [3, 8], "sever": [471, 483, 495], "sfc64": [3, 8], "sh": [471, 495], "shall": 486, "shallow": 482, "shape": [0, 2, 3, 4, 6, 8, 12, 13, 14, 16, 17, 19, 20, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 40, 41, 43, 44, 45, 46, 48, 50, 51, 52, 53, 54, 55, 57, 58, 59, 60, 63, 65, 66, 70, 71, 72, 73, 76, 79, 80, 81, 82, 83, 85, 88, 89, 90, 91, 92, 93, 94, 96, 97, 99, 100, 101, 104, 105, 106, 109, 110, 112, 113, 117, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 135, 137, 138, 141, 142, 143, 144, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 168, 169, 170, 173, 174, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 188, 189, 190, 191, 192, 193, 194, 195, 196, 198, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 263, 274, 282, 292, 295, 312, 313, 317, 329, 333, 334, 335, 337, 338, 339, 341, 342, 343, 345, 346, 347, 349, 350, 351, 352, 353, 354, 355, 357, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 380, 381, 382, 383, 384, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 400, 401, 402, 403, 404, 405, 406, 409, 410, 411, 414, 415, 416, 417, 418, 419, 421, 422, 423, 424, 425, 426, 428, 430, 431, 432, 433, 434, 436, 437, 442, 443, 444, 446, 447, 448, 449, 451, 452, 453, 454, 464, 475, 479, 493, 494, 495], "share": [282, 482, 483, 495], "shares_memori": [3, 8], "sharp": 495, "sharper": 365, "shift": [101, 106, 160, 373, 404, 406], "short": [3, 8, 292, 324], "shorter": [102, 108, 348], "should": [29, 30, 34, 36, 48, 54, 64, 68, 79, 80, 86, 87, 103, 104, 105, 110, 143, 156, 189, 197, 200, 201, 274, 341, 403, 428, 434, 446, 447, 449, 466, 474, 475, 476, 481, 489, 494, 495], "show": [324, 471, 476, 479, 491, 495], "show_config": [3, 8], "show_runtim": [3, 8], "showcas": 495, "shown": [476, 480, 492, 494, 495], "shuffl": [3, 8], "side": [81, 130, 313, 411, 476, 482], "sigma": [367, 495], "sign": [0, 3, 8, 15, 54, 63, 211, 347, 377, 380, 426], "signal": [42, 102, 107, 359, 372, 477, 495], "signatur": [188, 189, 470], "signbit": [0, 3, 8], "signedinteg": [3, 8], "signific": 482, "significantli": [474, 480, 482, 483, 495], "signoff": 470, "similar": [34, 42, 188, 298, 365, 488, 489, 495], "similarli": 482, "simpl": [68, 86, 326, 464, 475, 482, 495, 496], "simple_mm": 495, "simpler": [483, 495], "simplest": 473, "simpli": [135, 329, 470, 471, 495], "simplifi": [282, 373, 482, 495], "simul": 482, "simultan": [292, 406], "sin": [0, 3, 8, 476], "sinc": [3, 8, 108, 295, 326, 349, 476, 477, 483, 488, 494, 495], "sine": [24, 25, 416, 417, 476], "sing": 171, "singl": [2, 3, 8, 14, 16, 17, 19, 41, 48, 49, 50, 51, 56, 68, 87, 117, 118, 119, 130, 145, 170, 172, 173, 174, 176, 191, 193, 204, 205, 208, 210, 211, 289, 292, 293, 295, 298, 307, 315, 325, 343, 347, 351, 354, 355, 357, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 380, 381, 382, 383, 384, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 407, 408, 423, 426, 432, 448, 466, 480, 483, 484, 494], "singleton": 93, "singular": [171, 173, 174], "sinh": [0, 3, 8], "site": 491, "situat": [359, 470, 483], "sixth": 476, "size": [2, 6, 14, 16, 17, 19, 21, 29, 30, 36, 41, 43, 48, 57, 61, 70, 71, 76, 79, 81, 87, 95, 130, 171, 175, 176, 187, 188, 191, 192, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 298, 300, 325, 343, 344, 347, 350, 351, 354, 355, 357, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 377, 379, 380, 381, 382, 383, 384, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 406, 426, 441, 446, 448, 466, 476, 482, 483, 489, 495], "skbuild_build_opt": 471, "skip": 320, "slice": [16, 17, 57, 74, 143, 168, 200, 201, 202, 203, 204, 207, 209, 211, 278, 292, 349, 429, 466, 476, 482], "slide": 495, "slightli": [47, 168], "slogdet": [3, 8], "slower": 494, "slowest": [396, 403], "small": [15, 168, 199, 481, 483, 489, 492, 494], "smaller": [55, 68, 80, 98, 99, 100, 103, 104, 105, 107, 110, 111, 113, 122, 135, 192, 206, 208, 210, 343, 344, 350, 351, 466], "smallest": [171, 373], "smi": 483, "snippet": [193, 482], "so": [19, 48, 80, 120, 122, 135, 143, 154, 175, 193, 292, 315, 325, 341, 433, 479, 486, 494, 495], "sobel": [477, 495], "sobol": 477, "softwar": [474, 475, 481, 483, 485, 486], "solut": [173, 476, 480, 482], "solv": [0, 3, 8, 464, 476, 480, 482, 495], "solver": 482, "some": [21, 34, 95, 275, 292, 315, 325, 393, 452, 466, 470, 471, 475, 481, 483, 488, 489, 494, 495], "somebodi": 470, "sometim": [326, 361, 388, 488], "soon": 470, "sort": [0, 8, 32, 174, 192, 206, 208, 210, 273, 313, 342, 343, 351, 411, 419, 420, 429, 445, 455, 464, 495], "sort_complex": [0, 3, 8], "sorter": [313, 411], "sortsid": 411, "sorttyp": [32, 418], "sourc": [197, 428, 429, 470, 472, 482, 486, 492, 495], "south": [481, 495], "space": [3, 8, 21, 101, 130, 175, 187, 466, 476], "sparingli": 494, "spars": [141, 193], "speak": 171, "spec": 483, "special": [7, 354, 389, 396, 482, 486], "specif": [2, 83, 466, 474, 475, 481, 482, 486, 495], "specifi": [14, 19, 20, 21, 29, 30, 31, 32, 34, 41, 43, 54, 55, 58, 68, 70, 71, 74, 79, 86, 87, 98, 99, 100, 102, 103, 104, 105, 107, 108, 110, 111, 113, 117, 130, 165, 167, 171, 175, 189, 191, 192, 200, 201, 202, 203, 204, 205, 206, 208, 209, 210, 211, 274, 286, 289, 295, 298, 309, 332, 343, 347, 348, 349, 351, 355, 360, 361, 363, 364, 365, 366, 367, 368, 369, 371, 373, 377, 388, 392, 395, 396, 408, 409, 424, 426, 428, 429, 432, 434, 445, 446, 448, 466, 473, 479, 480, 483, 487, 491, 495], "spectral": 476, "spectrum": [101, 102], "speed": [298, 325], "spelt": 48, "spent": 489, "split": [0, 3, 8, 36, 84, 136, 450, 464], "spread": [372, 448, 495], "sqrt": [0, 3, 8, 474, 477, 495], "sqrt_t": 474, "squar": [0, 3, 8, 139, 163, 164, 165, 166, 167, 169, 173, 188, 357, 360, 370, 371, 421, 479], "squeez": [0, 3, 8, 93], "src": 64, "srun": [487, 495], "ssh": 495, "stabl": [32, 168, 418], "stack": [0, 3, 8, 56, 85, 137, 189, 410, 451, 466, 483], "stackoverflow": 488, "stage": 472, "standard": [298, 317, 329, 357, 367, 372, 373, 378, 386, 387, 388, 389, 462, 464, 470, 474, 475, 481, 487, 489, 492, 495], "standard_cauchi": [0, 3, 8], "standard_exponenti": [0, 3, 8], "standard_gamma": [0, 3, 8], "standard_norm": [3, 8, 389], "standard_t": [0, 3, 8], "start": [21, 87, 103, 175, 187, 209, 211, 285, 347, 426, 470, 473, 474, 475, 476, 481, 482, 489, 494, 495], "start_tim": 495, "state": [263, 381, 382, 384, 464], "statement": [477, 480, 488, 494, 496], "statist": [208, 210, 343, 351, 354, 455, 464], "statistician": [208, 210, 343, 351], "std": [3, 8], "stdout": [466, 473], "stecil": 476, "stegun": 474, "stencil": [476, 478, 482], "step": [21, 87, 175, 187, 320, 470, 471, 482, 488, 489, 494, 495], "stephen": 486, "still": [41, 171, 193, 495], "stock": [474, 495], "stoke": 482, "stop": [21, 175, 187, 474, 475, 481, 494, 495], "storag": 325, "store": [12, 13, 22, 23, 24, 25, 26, 27, 28, 44, 45, 46, 52, 53, 59, 60, 63, 65, 66, 72, 73, 82, 90, 91, 92, 94, 97, 120, 121, 122, 123, 124, 125, 126, 129, 131, 132, 138, 144, 148, 149, 150, 151, 152, 158, 159, 160, 161, 162, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 189, 190, 194, 195, 196, 198, 320, 334, 335, 337, 340, 345, 346, 352, 353, 400, 401, 404, 405, 414, 415, 416, 417, 421, 422, 425, 430, 431, 443, 444, 476, 495], "str": [12, 13, 22, 23, 24, 25, 26, 27, 28, 31, 32, 44, 45, 46, 52, 53, 58, 59, 60, 63, 65, 66, 72, 73, 82, 86, 87, 90, 91, 92, 94, 97, 98, 99, 100, 102, 103, 104, 105, 107, 108, 109, 110, 111, 112, 113, 120, 121, 122, 123, 124, 125, 126, 129, 131, 132, 138, 144, 148, 149, 150, 158, 159, 160, 161, 162, 165, 167, 168, 171, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 190, 193, 194, 195, 196, 198, 208, 210, 263, 264, 274, 289, 309, 325, 327, 334, 335, 337, 342, 343, 345, 346, 348, 351, 352, 353, 400, 401, 404, 405, 414, 415, 416, 417, 418, 421, 422, 425, 430, 431, 443, 444, 466, 477, 479, 495], "str_": [3, 8], "straightforward": [494, 495], "strategi": [466, 495], "stream": 1, "streamlin": 495, "strict": [466, 486], "strictli": 171, "stride": [4, 282, 292, 315, 396, 471], "strike": [474, 495], "string": [61, 168, 176, 193, 263, 289, 290, 292, 315, 325, 356, 462, 471], "string_repr": 87, "strong": 470, "structur": [445, 482, 489, 494, 495], "student": 389, "studi": [393, 478], "style": [292, 294, 396, 447], "sub": [14, 16, 17, 19, 34, 36, 74, 79, 84, 136, 191, 204, 207, 209, 274, 332, 347, 420, 426, 434, 436, 450], "subarrai": [74, 141, 445], "subclass": 37, "subdomain": 482, "subgrid": 482, "subject": 486, "sublicens": 486, "submit": 470, "subok": [34, 49, 51, 274], "subplot": [477, 495], "subscript": [86, 87], "subsequ": 292, "subset": [364, 423, 489], "substanti": [482, 486], "substitut": [480, 486], "subtract": [0, 3, 8, 494], "subtyp": 396, "succe": 494, "success": [355, 362, 369], "suggest": [317, 470, 483, 495], "suit": [473, 495], "suitabl": [298, 313, 329, 349, 411, 429, 495], "sum": [0, 3, 8, 41, 61, 71, 83, 103, 135, 142, 171, 181, 182, 203, 209, 211, 320, 328, 357, 364, 371, 432, 434, 464, 479, 480, 495], "sum_": 171, "sum_along_axi": 426, "sum_along_diagon": 434, "sum_of_weight": 41, "summar": [208, 210, 343, 351], "summari": [3, 8, 473], "summat": [47, 86, 87], "supercomputerloc": 495, "superpod": 484, "suppli": [151, 152, 168, 170, 378], "support": [31, 32, 61, 81, 83, 86, 172, 174, 176, 189, 193, 292, 325, 332, 342, 349, 362, 402, 406, 407, 418, 432, 436, 445, 471, 477, 485, 487, 493, 495], "suppos": 54, "sure": [479, 489], "surfac": 482, "surpris": 80, "surround": 482, "svd": [0, 8], "svdval": 8, "swap": [61, 101], "swapax": [0, 3, 8], "switch": 480, "symmetr": [108, 163, 495], "symmetri": [102, 107], "synchron": [482, 495], "sysmem": 495, "system": [173, 188, 476, 480, 482, 483, 485, 488, 495], "system_mem": 483, "t": [68, 81, 117, 118, 119, 292, 329, 348, 354, 389, 436, 460, 473, 474, 475, 479, 488, 494, 495], "tabl": [171, 395], "tack": 470, "tackl": [482, 495], "tail": 365, "take": [0, 2, 3, 8, 56, 57, 156, 188, 344, 349, 396, 403, 429, 470, 483, 495], "take_along_axi": [0, 3, 8], "taken": [41, 54, 79, 80, 87, 102, 108, 110, 112, 113, 191, 205, 364, 412, 434, 436, 438, 441, 449, 477, 489], "tall": 114, "tan": [0, 3, 8], "tangent": [26, 27, 28, 430, 431], "tanh": [0, 3, 8], "taper": [42, 47, 133, 134, 157], "target": [348, 350, 471], "task": [466, 474, 475, 481, 482, 489, 495], "taylor": 168, "tdma": 476, "teach": [476, 479, 480], "technic": 483, "techniqu": 495, "tell": [320, 483], "templat": 495, "temporari": 466, "tend": 489, "tensor": [87, 432, 466, 471], "tensordot": [0, 3, 8], "tensorinv": [3, 8], "tensorsolv": [3, 8], "term": [47, 83, 87, 103, 104, 105, 108, 142, 189, 432, 449, 476, 485], "termin": [473, 480, 495], "test": [0, 14, 19, 145, 146, 148, 149, 150, 151, 152, 292, 357, 360, 455, 464, 472, 479, 481, 482, 491, 492], "test_view": 473, "test_vstack": 473, "test_wher": 473, "test_window": 473, "testsystem": 473, "text": [325, 470], "tf32": 466, "th": [75, 78, 80, 96, 130, 141, 208, 210, 329, 343, 351, 412, 437, 440], "than": [21, 43, 47, 49, 51, 54, 55, 57, 61, 70, 71, 79, 83, 84, 98, 99, 100, 102, 103, 104, 105, 107, 108, 110, 111, 113, 114, 118, 119, 135, 142, 168, 189, 192, 193, 202, 203, 206, 208, 209, 210, 211, 343, 344, 347, 348, 350, 351, 360, 364, 373, 390, 391, 395, 415, 423, 424, 426, 432, 434, 446, 449, 466, 475, 480, 488, 489, 494, 495], "thei": [13, 15, 27, 44, 45, 46, 49, 63, 70, 71, 80, 81, 82, 90, 120, 122, 123, 124, 125, 129, 131, 132, 138, 158, 159, 160, 161, 162, 181, 182, 183, 185, 186, 189, 190, 194, 195, 198, 202, 203, 313, 335, 337, 346, 355, 396, 401, 404, 411, 425, 443, 462, 477, 479, 489, 494, 495], "them": [56, 462, 470, 479, 483, 485, 494, 495], "themselv": [282, 476], "theorem": 372, "theoret": 495, "theori": 486, "therefor": [165, 167, 362], "theta": 361, "thi": [12, 13, 14, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 33, 34, 37, 41, 43, 44, 45, 46, 48, 49, 51, 52, 53, 54, 55, 58, 59, 60, 63, 64, 65, 66, 72, 73, 74, 75, 76, 80, 81, 82, 83, 85, 86, 87, 90, 91, 92, 94, 97, 98, 99, 100, 101, 102, 103, 104, 105, 108, 109, 110, 111, 112, 113, 114, 116, 118, 119, 120, 121, 122, 123, 124, 125, 126, 129, 131, 132, 135, 137, 138, 142, 144, 148, 149, 150, 155, 156, 158, 159, 160, 161, 162, 165, 167, 170, 171, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 204, 205, 206, 207, 208, 209, 210, 211, 272, 273, 274, 282, 285, 287, 291, 292, 295, 298, 300, 315, 317, 320, 324, 325, 326, 329, 332, 334, 335, 337, 340, 343, 344, 345, 346, 347, 349, 350, 351, 352, 353, 357, 358, 373, 377, 380, 385, 393, 396, 400, 401, 403, 404, 405, 407, 408, 410, 414, 415, 416, 417, 421, 422, 423, 425, 426, 428, 429, 430, 431, 432, 433, 436, 443, 444, 445, 448, 449, 451, 466, 470, 471, 473, 474, 475, 476, 477, 479, 480, 481, 482, 485, 486, 488, 491, 492, 494, 495, 496], "thing": [428, 470, 475, 495], "think": 470, "third": [69, 84, 85, 137, 410, 432, 451, 485, 494], "those": [55, 61, 68, 74, 169, 349, 482, 488], "though": [43, 407], "thought": 392, "thread": [471, 473, 480, 483, 495], "three": [40, 47, 55, 208, 210, 343, 351, 445, 483, 494], "threshold": 466, "through": [14, 16, 17, 19, 34, 156, 188, 191, 193, 204, 207, 209, 274, 347, 426, 466, 485, 495], "throughout": 482, "thu": [54, 176, 433, 494, 495], "thumb": 489, "thunk": 4, "tile": [0, 3, 8, 464], "time": [68, 80, 86, 99, 100, 104, 105, 110, 292, 295, 359, 374, 393, 408, 433, 445, 470, 473, 474, 475, 481, 482, 485, 495], "timedelta64": [3, 8], "timer": 489, "timestep": 482, "tini": 372, "titl": [474, 476], "tobyt": [0, 8, 325, 327], "tofil": [0, 3, 8], "togeth": [15, 58, 68, 103, 156, 189], "tol": [399, 480, 494, 495], "toler": [15, 145, 399, 480, 494], "tolist": [0, 3, 8], "too": [42, 81, 428, 483], "took": 495, "tool": [470, 482, 483, 492], "toolkit": [471, 495], "top": [471, 484, 485], "topic": [472, 483, 493], "topographi": 482, "torchsw": 478, "tort": 486, "total": [6, 67, 304, 369, 475, 479, 495], "toward": [135, 335, 408], "trace": [0, 3, 8, 466], "traceback": 466, "tracker": 483, "transfer": [480, 495], "transform": [61, 98, 99, 100, 102, 103, 104, 105, 107, 108, 109, 110, 111, 112, 113, 455, 464, 494], "translat": [380, 476, 494], "transport": 325, "transpos": [0, 3, 8, 68, 163, 212, 464, 475], "trapezoid": [3, 8], "trapz": [3, 8], "travers": 320, "treat": [15, 54, 165, 167, 170, 189, 192, 193, 202, 203, 206, 209, 211, 349, 429, 433, 445], "tree": [471, 485], "tri": [0, 3, 8], "trial": [355, 362], "triangl": [138, 436, 437, 438, 439, 440, 441, 442], "triangular": [0, 3, 8, 42, 163, 165, 167, 172, 475], "tridiagon": 476, "trigger": [483, 488], "trigonometr": [22, 26, 416, 464], "tril": [0, 3, 8, 188, 438, 439, 440], "tril_indic": [0, 3, 8, 439], "tril_indices_from": [0, 3, 8], "trim": 446, "trim_zero": [3, 8], "triu": [0, 3, 8, 188, 441, 442], "triu_indic": [0, 3, 8, 442], "triu_indices_from": [0, 3, 8], "trivial": 470, "true": [4, 12, 13, 14, 15, 16, 17, 18, 19, 22, 23, 24, 25, 26, 27, 28, 29, 30, 34, 35, 41, 44, 45, 46, 52, 53, 57, 59, 60, 63, 64, 65, 66, 68, 72, 73, 80, 81, 82, 86, 87, 90, 91, 92, 94, 95, 97, 114, 120, 121, 122, 123, 124, 125, 126, 129, 131, 132, 135, 138, 141, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 158, 159, 160, 161, 162, 168, 171, 174, 175, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 190, 191, 192, 193, 194, 195, 196, 198, 199, 200, 201, 204, 205, 206, 207, 208, 209, 210, 211, 268, 269, 274, 292, 301, 303, 308, 315, 334, 335, 337, 343, 344, 345, 346, 347, 350, 351, 352, 353, 400, 401, 404, 405, 412, 414, 415, 416, 417, 421, 422, 425, 426, 430, 431, 443, 444, 445, 448, 452, 488, 491], "true_divid": [0, 3, 8, 82], "truli": 292, "trunc": [0, 3, 8], "truncat": [57, 98, 99, 100, 102, 103, 104, 105, 107, 108, 110, 111, 113, 355, 444], "trust": [200, 201], "truth": [131, 132, 161, 162, 183, 185, 186, 462, 464], "try": [475, 476, 477, 480, 483, 488, 490, 493, 495], "tup": [56, 85, 137, 410, 451], "tupl": [2, 4, 6, 12, 13, 14, 16, 17, 19, 22, 23, 24, 25, 26, 27, 28, 36, 37, 41, 44, 45, 46, 50, 51, 52, 53, 59, 60, 63, 65, 66, 67, 72, 73, 76, 77, 82, 87, 88, 89, 90, 91, 92, 93, 94, 97, 101, 106, 117, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 135, 138, 141, 144, 148, 149, 150, 156, 158, 159, 160, 161, 162, 164, 165, 171, 172, 174, 175, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 188, 190, 191, 192, 193, 194, 195, 196, 198, 204, 205, 206, 207, 208, 210, 211, 263, 295, 298, 316, 320, 329, 334, 335, 336, 337, 338, 339, 343, 345, 346, 347, 351, 352, 353, 354, 355, 357, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 377, 380, 381, 382, 383, 384, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 397, 400, 401, 403, 404, 405, 406, 413, 414, 415, 416, 417, 421, 422, 423, 425, 426, 430, 431, 432, 438, 439, 441, 442, 443, 444, 447, 448, 452, 453, 454, 479, 494, 495], "tuple_of_arrai": 336, "turn": [56, 466], "tutori": [483, 493], "tweedi": 393, "twice": 494, "two": [15, 21, 35, 39, 44, 45, 46, 48, 61, 68, 69, 78, 79, 80, 83, 99, 103, 104, 109, 126, 142, 145, 170, 189, 340, 360, 362, 365, 408, 427, 432, 434, 438, 439, 441, 442, 449, 477, 478, 479, 481, 494, 495, 496], "type": [6, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 78, 79, 80, 81, 82, 83, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 127, 128, 129, 130, 131, 132, 133, 134, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 166, 167, 168, 169, 170, 171, 173, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 216, 263, 274, 282, 288, 294, 295, 298, 300, 313, 315, 317, 324, 325, 326, 329, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 345, 346, 347, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 380, 381, 382, 383, 384, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 441, 442, 443, 444, 446, 447, 448, 449, 451, 452, 453, 454, 455, 464, 466, 471, 479, 482, 483, 495], "typecod": 274, "typeerror": [43, 64, 81, 208, 210, 343, 351], "typenam": [3, 8], "typic": [15, 49, 51, 68, 102, 313, 411, 471, 482, 489, 495], "u": [165, 167, 174, 209, 320, 394, 470, 475, 477, 481, 483, 486, 495], "u8_arr": 80, "ubyt": [3, 8], "ufunc": [8, 12, 13, 16, 17, 22, 23, 24, 25, 26, 27, 28, 44, 45, 46, 52, 53, 55, 59, 60, 63, 65, 66, 72, 73, 82, 90, 91, 92, 94, 97, 120, 121, 122, 123, 124, 125, 126, 129, 131, 132, 138, 144, 148, 149, 150, 158, 159, 160, 161, 162, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 190, 194, 195, 196, 198, 204, 207, 209, 211, 334, 335, 337, 345, 346, 347, 352, 353, 400, 401, 404, 405, 414, 415, 416, 417, 421, 422, 425, 426, 430, 431, 443, 444], "uic": 315, "uid": 483, "uint": [3, 8], "uint16": [3, 8], "uint32": [3, 8], "uint64": [3, 8, 479], "uint8": [3, 8, 80, 341, 446], "uintc": [3, 8], "uintp": [3, 8], "uk": [474, 477], "ulong": [3, 8], "ulonglong": [3, 8], "ultim": [292, 315], "unabl": 483, "unalt": 358, "unari": 462, "unbias": 68, "unbound": 373, "unchang": [34, 113], "undefin": [192, 206, 208, 210, 343, 349, 351, 488], "under": [171, 292, 470, 474, 475, 481, 485, 486], "underli": [32, 367, 396, 403, 418, 474, 495], "understand": [470, 480], "undesir": 494, "undo": 446, "unexpect": 209, "unif": [381, 382, 384], "uniform": [0, 3, 8, 135, 187, 376, 377, 380, 381, 382, 384, 394], "uniformli": 391, "uniniti": [12, 13, 22, 23, 24, 25, 26, 27, 28, 44, 45, 46, 52, 53, 59, 60, 63, 65, 66, 72, 73, 82, 88, 89, 90, 91, 92, 94, 97, 120, 121, 122, 123, 124, 125, 126, 129, 131, 132, 138, 144, 148, 149, 150, 158, 159, 160, 161, 162, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 190, 194, 195, 196, 198, 334, 335, 337, 345, 346, 352, 353, 400, 401, 404, 405, 414, 415, 416, 417, 421, 422, 425, 430, 431, 443, 444], "union1d": [3, 8], "uniqu": [0, 3, 8, 197, 372, 479], "unique_al": [3, 8], "unique_count": [3, 8, 445], "unique_indic": 445, "unique_invers": [3, 8, 445], "unique_valu": [3, 8], "unit": [156, 164, 165, 392, 393, 488], "unitari": [130, 174, 488], "uniti": 135, "univari": 378, "univers": [171, 393], "unknown": 495, "unless": [14, 19, 34, 54, 70, 71, 79, 86, 135, 171, 175, 187, 202, 203, 209, 211, 274, 298, 341, 347, 377, 380, 381, 382, 384, 409, 426, 445, 470, 474, 475, 481], "unlik": [61, 79, 164, 166, 390], "unmodifi": [48, 484], "unnecessari": 470, "unpack": 446, "unpackbit": [0, 3, 8], "unpickl": [263, 315], "unpredict": [1, 358], "unravel": 447, "unravel_index": [0, 3, 8], "unraveled_coord": 447, "unsaf": [58, 64, 86, 142, 189, 274, 340, 432, 449], "unsign": [80, 211, 347, 426], "unsignedinteg": [3, 8], "unstack": [3, 8], "unsupport": 488, "until": [48, 87, 479, 494, 495], "unwrap": [3, 8], "up": [85, 119, 122, 137, 298, 410, 429, 445, 451, 466, 471, 477, 482, 483, 488, 489, 495], "updat": [292, 315, 348, 349, 480, 482, 495], "uplo": [165, 167], "upon": 470, "upper": [55, 96, 135, 163, 165, 167, 172, 315, 390, 391, 440, 441, 442], "uppoer": 172, "us": [2, 6, 16, 17, 20, 21, 31, 32, 42, 47, 48, 54, 58, 61, 68, 70, 71, 75, 76, 79, 80, 83, 86, 87, 98, 99, 100, 102, 103, 104, 105, 107, 108, 110, 111, 113, 130, 133, 134, 140, 145, 156, 157, 163, 168, 170, 171, 175, 187, 189, 191, 192, 193, 199, 202, 203, 204, 205, 206, 208, 209, 210, 211, 220, 221, 276, 282, 292, 298, 315, 317, 325, 332, 342, 343, 344, 347, 349, 351, 355, 357, 359, 380, 385, 393, 396, 398, 399, 402, 403, 406, 412, 418, 426, 428, 429, 434, 445, 447, 448, 449, 462, 466, 470, 471, 473, 474, 475, 476, 477, 480, 481, 482, 484, 485, 486, 488, 491, 492, 493, 496], "usabl": 120, "usag": [98, 99, 100, 102, 103, 104, 105, 107, 108, 109, 110, 111, 112, 113, 164, 165, 166, 167, 173, 466, 470, 472, 483, 493, 494], "use_explicit": 168, "use_openmp": 471, "use_thread": 471, "user": [199, 292, 315, 471, 480, 482, 483, 484, 495], "ushort": [3, 8], "usual": [76, 470, 483, 496], "util": [473, 474, 475, 481, 483, 495], "v": [48, 61, 75, 78, 313, 411, 455, 473, 474, 476], "v1": 474, "v100": 495, "val": [114, 140, 155, 314, 341, 344, 398, 446, 494, 495], "valid": [48, 61, 188, 438, 439, 441, 442, 470, 482, 485], "valu": [2, 12, 13, 14, 15, 16, 17, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 35, 41, 42, 43, 44, 45, 46, 47, 52, 53, 54, 55, 59, 60, 63, 64, 65, 66, 67, 68, 70, 71, 72, 73, 80, 81, 82, 86, 90, 91, 92, 94, 95, 96, 97, 103, 111, 114, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 138, 141, 143, 144, 145, 147, 148, 149, 150, 151, 152, 153, 154, 156, 157, 158, 159, 160, 161, 162, 163, 165, 167, 169, 171, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 194, 195, 196, 198, 199, 200, 201, 202, 203, 204, 205, 207, 208, 209, 210, 211, 214, 215, 222, 223, 225, 226, 228, 229, 230, 231, 232, 233, 234, 235, 239, 240, 241, 242, 243, 244, 245, 247, 248, 249, 250, 251, 252, 253, 255, 256, 257, 260, 261, 262, 265, 266, 267, 270, 271, 274, 277, 288, 291, 301, 303, 309, 313, 315, 317, 320, 334, 335, 337, 341, 344, 345, 346, 347, 348, 349, 350, 352, 353, 354, 355, 357, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 380, 381, 382, 383, 384, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 400, 401, 402, 403, 404, 405, 406, 407, 409, 411, 414, 415, 416, 417, 421, 422, 425, 426, 428, 429, 430, 431, 434, 435, 443, 444, 445, 446, 448, 452, 462, 464, 466, 474, 476, 479, 480, 481, 482, 483, 493, 494, 495], "valuabl": 482, "valueerror": [41, 43, 48, 54, 57, 69, 79, 81, 114, 171, 200, 201, 204, 207, 357, 375, 407, 420, 423, 434], "van": 171, "vander": [3, 8], "vanilla": 466, "var": [0, 3, 8, 466], "vararg": 130, "vari": [32, 68, 141, 399, 418, 476, 477, 482, 495], "variabl": [68, 173, 200, 201, 204, 207, 357, 359, 365, 372, 466, 480, 482, 483, 487, 489, 491, 494, 495], "varianc": [68, 331, 357, 378, 448, 464], "variant": 495, "variat": [208, 210, 343, 351, 360, 495], "varieti": 2, "variou": [171, 464, 466, 482, 492], "vdot": [0, 3, 8], "vecdot": [3, 8], "vecmat": [3, 8], "vector": [3, 8, 68, 69, 83, 142, 170, 171, 189, 193, 329, 340, 449, 464, 495, 496], "vector1": 495, "vector2": 495, "vector_norm": 8, "venv": [485, 495], "verbatim": 470, "verbos": [473, 480, 483, 495], "veri": [15, 42, 199, 298, 489], "verifi": 163, "version": [67, 75, 116, 192, 206, 208, 210, 263, 343, 351, 373, 447, 470, 474, 475, 481, 482, 485, 495], "vertic": [408, 410, 450, 451, 482], "vh": 174, "via": [12, 13, 22, 23, 24, 25, 26, 27, 28, 44, 45, 46, 52, 53, 59, 60, 63, 65, 66, 72, 73, 82, 90, 91, 92, 94, 97, 120, 121, 122, 123, 124, 125, 126, 129, 131, 132, 138, 144, 148, 149, 150, 158, 159, 160, 161, 162, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 190, 194, 195, 196, 198, 292, 326, 334, 335, 337, 345, 346, 352, 353, 400, 401, 404, 405, 414, 415, 416, 417, 421, 422, 425, 430, 431, 436, 443, 444, 473, 483, 487, 495], "view": [0, 8, 39, 40, 49, 51, 75, 93, 117, 118, 119, 193, 197, 288, 292, 295, 322, 329, 349, 403, 420, 423, 427, 429, 435, 447, 483, 493], "violat": [64, 466], "vision": 495, "visit": [470, 483], "vital": 495, "void": [3, 8, 298], "volatil": [474, 495], "von": 392, "vonmis": [0, 3, 8], "vpi": 477, "vsplit": [0, 3, 8, 410, 451], "vstack": [0, 3, 8, 410, 494], "vv": 473, "w": [166, 167, 292, 315], "wa": [47, 83, 142, 170, 369, 393, 409, 432, 449, 470, 477, 480, 483], "wai": [87, 103, 104, 105, 110, 189, 364, 446, 470, 471, 473, 474, 475, 476, 481, 486, 487, 494], "waital": 482, "wald": [0, 3, 8], "walk": 471, "want": [470, 471, 481, 495], "warm": 489, "warn": [188, 200, 201, 204, 207, 348, 455, 480, 495], "warranti": [474, 475, 481, 486], "wasilla": 486, "water": 482, "wavenumb": 476, "we": [8, 54, 68, 320, 470, 471, 474, 475, 476, 477, 479, 480, 481, 482, 483, 494, 495], "weak": 484, "weibul": [0, 3, 8, 208, 210, 343, 351, 383], "weight": [41, 43, 68, 133, 134, 135, 373, 479], "welcom": [8, 470], "well": [86, 173, 315, 347, 473, 475, 482], "were": [58, 189, 313, 378, 411, 424, 483, 486, 491, 495], "west": [481, 495], "wget": 495, "what": [58, 64, 75, 86, 98, 99, 100, 102, 103, 104, 105, 107, 108, 109, 110, 111, 112, 113, 142, 146, 189, 274, 340, 424, 432, 449, 481, 491, 494, 495], "wheel": [485, 495], "when": [18, 21, 29, 30, 34, 41, 48, 57, 64, 69, 70, 71, 80, 110, 135, 163, 168, 171, 173, 175, 188, 189, 192, 193, 200, 201, 202, 203, 204, 206, 207, 209, 282, 298, 315, 320, 325, 357, 358, 385, 396, 407, 412, 428, 429, 466, 470, 471, 480, 482, 485, 487, 488, 489, 491, 494, 495], "whenev": [435, 466, 494], "where": [0, 3, 8, 12, 13, 14, 16, 17, 19, 21, 22, 23, 24, 25, 26, 27, 28, 33, 39, 40, 44, 45, 46, 48, 52, 53, 54, 55, 57, 59, 60, 63, 64, 65, 66, 68, 69, 72, 73, 80, 82, 83, 90, 91, 92, 93, 94, 95, 96, 97, 102, 108, 110, 120, 121, 122, 123, 124, 125, 126, 129, 131, 132, 137, 138, 141, 144, 145, 146, 148, 149, 150, 151, 152, 153, 158, 159, 160, 161, 162, 163, 172, 174, 175, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 188, 190, 191, 194, 195, 196, 198, 204, 205, 207, 209, 211, 268, 269, 301, 303, 308, 313, 321, 334, 335, 337, 340, 344, 345, 346, 347, 350, 352, 353, 354, 355, 360, 361, 362, 369, 371, 373, 390, 400, 401, 404, 405, 411, 412, 414, 415, 416, 417, 420, 421, 422, 425, 426, 430, 431, 434, 443, 444, 448, 474, 476, 477, 479, 482, 486, 488, 494, 495], "wherea": 488, "wherev": 64, "whether": [14, 15, 19, 35, 75, 81, 145, 146, 163, 165, 167, 175, 199, 209, 315, 447, 466, 470, 473, 486, 491, 494, 495], "which": [1, 12, 13, 14, 16, 17, 19, 20, 22, 23, 24, 25, 26, 27, 28, 29, 30, 34, 41, 44, 45, 46, 48, 52, 53, 54, 57, 58, 59, 60, 61, 63, 64, 65, 66, 67, 68, 70, 71, 72, 73, 74, 76, 78, 79, 80, 81, 82, 86, 87, 90, 91, 92, 94, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 117, 120, 121, 122, 123, 124, 125, 126, 129, 130, 131, 132, 137, 138, 143, 144, 148, 149, 150, 151, 152, 155, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 171, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 194, 195, 196, 198, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 274, 282, 295, 298, 315, 317, 332, 334, 335, 337, 341, 343, 345, 346, 347, 348, 351, 352, 353, 359, 364, 377, 380, 381, 382, 383, 384, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 400, 401, 402, 404, 405, 406, 409, 412, 414, 415, 416, 417, 420, 421, 422, 424, 425, 426, 428, 430, 431, 434, 436, 437, 438, 441, 443, 444, 446, 448, 452, 466, 470, 477, 480, 482, 483, 486, 489, 491, 494, 495], "while": [68, 113, 170, 193, 206, 208, 210, 211, 292, 347, 373, 406, 426, 436, 479, 483, 489, 494, 495], "whilst": 38, "who": 470, "whole": 470, "whom": 486, "whose": [34, 79, 95, 96, 114, 188, 191, 197, 204, 205, 207, 211, 277, 341, 434, 439, 442, 447, 448], "why": [108, 470], "wide": [359, 483], "width": [85, 135, 137, 372, 410, 451, 495], "wiki": 359, "wikipedia": 359, "window": [42, 47, 133, 134, 157, 455, 464, 485], "wise": [12, 13, 15, 22, 23, 24, 25, 26, 27, 28, 44, 45, 46, 52, 53, 59, 60, 63, 65, 66, 82, 85, 90, 97, 98, 99, 100, 102, 103, 104, 105, 107, 108, 109, 110, 111, 112, 113, 120, 121, 123, 124, 125, 131, 132, 136, 137, 144, 145, 148, 149, 150, 151, 152, 159, 161, 162, 164, 165, 166, 167, 177, 178, 179, 183, 184, 185, 186, 190, 194, 195, 196, 198, 280, 334, 335, 337, 345, 346, 400, 401, 410, 414, 415, 416, 417, 421, 422, 425, 430, 431, 443, 444, 450, 451, 495], "wish": 75, "within": [12, 13, 15, 21, 22, 23, 24, 25, 26, 27, 28, 44, 45, 46, 52, 53, 59, 60, 63, 64, 65, 66, 72, 73, 82, 86, 90, 91, 92, 94, 97, 103, 104, 105, 108, 110, 120, 121, 122, 123, 124, 125, 126, 129, 131, 132, 138, 144, 145, 148, 149, 150, 158, 159, 160, 161, 162, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 189, 190, 194, 195, 196, 198, 274, 334, 335, 337, 345, 346, 352, 353, 364, 391, 400, 401, 404, 405, 414, 415, 416, 417, 421, 422, 425, 430, 431, 443, 444, 495], "without": [42, 48, 57, 83, 88, 142, 315, 329, 403, 470, 474, 475, 481, 482, 486, 490, 493, 495], "word": [21, 103, 104, 105, 108, 110, 391, 436], "work": [48, 57, 298, 348, 462, 470, 471, 474, 488, 489, 494, 495], "worker": [473, 483, 495], "workflow": 471, "workload": 495, "workstat": 495, "worri": 495, "wors": 47, "would": [32, 58, 83, 142, 170, 188, 272, 273, 298, 313, 340, 411, 420, 424, 432, 449, 466, 474, 475, 480, 481, 482, 494, 495], "wrap": [54, 114, 348, 358, 428], "wrapper": 495, "write": [49, 75, 114, 193, 315, 325, 403, 474, 475, 481, 484, 495], "writeabl": [4, 292, 315], "writebackifcopi": [292, 315], "written": [114, 292, 315, 325, 486, 494, 496], "wrong": 57, "wsl": 485, "www": [474, 475, 481], "x": [12, 22, 23, 24, 25, 26, 28, 43, 52, 53, 59, 60, 65, 66, 68, 72, 73, 80, 81, 91, 92, 94, 97, 99, 100, 101, 104, 105, 106, 113, 121, 126, 135, 139, 144, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 168, 171, 173, 177, 178, 179, 180, 184, 188, 193, 196, 199, 292, 315, 320, 334, 345, 352, 353, 354, 359, 394, 400, 405, 407, 414, 415, 416, 417, 421, 422, 430, 431, 444, 452, 474, 476, 477, 479, 480, 488, 494, 495, 496], "x1": [13, 27, 44, 45, 46, 63, 82, 90, 120, 122, 123, 124, 125, 129, 131, 132, 138, 158, 159, 160, 161, 162, 181, 182, 183, 185, 186, 190, 193, 194, 195, 198, 335, 337, 346, 401, 404, 425, 443], "x2": [13, 27, 44, 45, 46, 63, 82, 90, 120, 122, 123, 124, 125, 129, 131, 132, 138, 158, 159, 160, 161, 162, 181, 182, 183, 185, 186, 190, 193, 194, 195, 198, 335, 337, 346, 401, 404, 425, 443], "x86": 495, "x86_64": [485, 495], "x_": 480, "x_1": 68, "x_2": 68, "x_current": 494, "x_i": 68, "x_j": 68, "x_n": 68, "x_prev": 494, "xeon": 495, "xi": 193, "xk": 480, "xk_old": 480, "xlabel": [474, 476], "xn": 193, "xor": [46, 186], "xorwow": 358, "xv": 193, "xy": 193, "y": [13, 27, 44, 45, 46, 63, 68, 82, 90, 101, 106, 120, 122, 123, 124, 125, 129, 131, 132, 138, 145, 154, 158, 159, 160, 161, 162, 181, 182, 183, 185, 186, 190, 193, 194, 195, 198, 208, 210, 294, 326, 335, 337, 343, 346, 351, 396, 401, 404, 408, 425, 443, 452, 477, 479, 480, 494, 495, 496], "y1": [126, 196], "y2": [126, 196], "year": [372, 495], "yellow": 479, "yet": [8, 445], "yield": [29, 30, 70, 71, 202, 203, 209, 452, 489, 495], "ylabel": [474, 476], "you": [49, 64, 75, 86, 189, 192, 193, 206, 399, 428, 470, 471, 474, 475, 476, 479, 480, 481, 482, 483, 484, 485, 492, 494, 495, 496], "your": [470, 483, 484, 494, 495, 496], "yueh": 482, "yv": 193, "z": [18, 69, 298, 359, 378, 494, 496], "zero": [0, 3, 8, 18, 33, 41, 42, 47, 61, 67, 69, 80, 96, 98, 99, 100, 101, 102, 103, 104, 105, 107, 108, 110, 111, 113, 116, 133, 134, 146, 147, 151, 152, 153, 154, 157, 164, 165, 166, 167, 169, 171, 188, 199, 203, 211, 306, 333, 336, 341, 360, 373, 399, 415, 436, 437, 440, 446, 448, 454, 476, 479, 481, 495], "zero_point": 479, "zerodivisionerror": 41, "zeros_lik": [0, 3, 8], "zeta": 395, "zipf": [0, 3, 8], "zsh": 495}, "titles": ["&lt;no title&gt;", "cupynumeric.random.BitGenerator", "cupynumeric.random.Generator", "Convolve and Correlate", "cupynumeric.ndarray", "Binary operations", "cupynumeric.broadcast", "Classes", "Project comparisons", "Array creation routines", "Data type routines", "Discrete Fourier Transform (<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">cupynumeric.fft</span></code>)", "cupynumeric.absolute", "cupynumeric.add", "cupynumeric.all", "cupynumeric.allclose", "cupynumeric.amax", "cupynumeric.amin", "cupynumeric.angle", "cupynumeric.any", "cupynumeric.append", "cupynumeric.arange", "cupynumeric.arccos", "cupynumeric.arccosh", "cupynumeric.arcsin", "cupynumeric.arcsinh", "cupynumeric.arctan", "cupynumeric.arctan2", "cupynumeric.arctanh", "cupynumeric.argmax", "cupynumeric.argmin", "cupynumeric.argpartition", "cupynumeric.argsort", "cupynumeric.argwhere", "cupynumeric.array", "cupynumeric.array_equal", "cupynumeric.array_split", "cupynumeric.asarray", "cupynumeric.atleast_1d", "cupynumeric.atleast_2d", "cupynumeric.atleast_3d", "cupynumeric.average", "cupynumeric.bartlett", "cupynumeric.bincount", "cupynumeric.bitwise_and", "cupynumeric.bitwise_or", "cupynumeric.bitwise_xor", "cupynumeric.blackman", "cupynumeric.block", "cupynumeric.broadcast_arrays", "cupynumeric.broadcast_shapes", "cupynumeric.broadcast_to", "cupynumeric.cbrt", "cupynumeric.ceil", "cupynumeric.choose", "cupynumeric.clip", "cupynumeric.column_stack", "cupynumeric.compress", "cupynumeric.concatenate", "cupynumeric.conj", "cupynumeric.conjugate", "cupynumeric.convolve", "cupynumeric.copy", "cupynumeric.copysign", "cupynumeric.copyto", "cupynumeric.cos", "cupynumeric.cosh", "cupynumeric.count_nonzero", "cupynumeric.cov", "cupynumeric.cross", "cupynumeric.cumprod", "cupynumeric.cumsum", "cupynumeric.deg2rad", "cupynumeric.degrees", "cupynumeric.delete", "cupynumeric.diag", "cupynumeric.diag_indices", "cupynumeric.diag_indices_from", "cupynumeric.diagflat", "cupynumeric.diagonal", "cupynumeric.diff", "cupynumeric.digitize", "cupynumeric.divide", "cupynumeric.dot", "cupynumeric.dsplit", "cupynumeric.dstack", "cupynumeric.einsum", "cupynumeric.einsum_path", "cupynumeric.empty", "cupynumeric.empty_like", "cupynumeric.equal", "cupynumeric.exp", "cupynumeric.exp2", "cupynumeric.expand_dims", "cupynumeric.expm1", "cupynumeric.extract", "cupynumeric.eye", "cupynumeric.fabs", "cupynumeric.fft.fft", "cupynumeric.fft.fft2", "cupynumeric.fft.fftn", "cupynumeric.fft.fftshift", "cupynumeric.fft.hfft", "cupynumeric.fft.ifft", "cupynumeric.fft.ifft2", "cupynumeric.fft.ifftn", "cupynumeric.fft.ifftshift", "cupynumeric.fft.ihfft", "cupynumeric.fft.irfft", "cupynumeric.fft.irfft2", "cupynumeric.fft.irfftn", "cupynumeric.fft.rfft", "cupynumeric.fft.rfft2", "cupynumeric.fft.rfftn", "cupynumeric.fill_diagonal", "cupynumeric.find_common_type", "cupynumeric.flatnonzero", "cupynumeric.flip", "cupynumeric.fliplr", "cupynumeric.flipud", "cupynumeric.float_power", "cupynumeric.floor", "cupynumeric.floor_divide", "cupynumeric.fmax", "cupynumeric.fmin", "cupynumeric.fmod", "cupynumeric.frexp", "cupynumeric.full", "cupynumeric.full_like", "cupynumeric.gcd", "cupynumeric.gradient", "cupynumeric.greater", "cupynumeric.greater_equal", "cupynumeric.hamming", "cupynumeric.hanning", "cupynumeric.histogram", "cupynumeric.hsplit", "cupynumeric.hstack", "cupynumeric.hypot", "cupynumeric.identity", "cupynumeric.imag", "cupynumeric.indices", "cupynumeric.inner", "cupynumeric.insert", "cupynumeric.invert", "cupynumeric.isclose", "cupynumeric.iscomplex", "cupynumeric.iscomplexobj", "cupynumeric.isfinite", "cupynumeric.isinf", "cupynumeric.isnan", "cupynumeric.isneginf", "cupynumeric.isposinf", "cupynumeric.isreal", "cupynumeric.isrealobj", "cupynumeric.isscalar", "cupynumeric.ix_", "cupynumeric.kaiser", "cupynumeric.lcm", "cupynumeric.ldexp", "cupynumeric.left_shift", "cupynumeric.less", "cupynumeric.less_equal", "cupynumeric.linalg.cholesky", "cupynumeric.linalg.eig", "cupynumeric.linalg.eigh", "cupynumeric.linalg.eigvals", "cupynumeric.linalg.eigvalsh", "cupynumeric.linalg.expm", "cupynumeric.linalg.matrix_power", "cupynumeric.linalg.multi_dot", "cupynumeric.linalg.norm", "cupynumeric.linalg.qr", "cupynumeric.linalg.solve", "cupynumeric.linalg.svd", "cupynumeric.linspace", "cupynumeric.load", "cupynumeric.log", "cupynumeric.log10", "cupynumeric.log1p", "cupynumeric.log2", "cupynumeric.logaddexp", "cupynumeric.logaddexp2", "cupynumeric.logical_and", "cupynumeric.logical_not", "cupynumeric.logical_or", "cupynumeric.logical_xor", "cupynumeric.logspace", "cupynumeric.mask_indices", "cupynumeric.matmul", "cupynumeric.maximum", "cupynumeric.mean", "cupynumeric.median", "cupynumeric.meshgrid", "cupynumeric.minimum", "cupynumeric.mod", "cupynumeric.modf", "cupynumeric.moveaxis", "cupynumeric.multiply", "cupynumeric.nan_to_num", "cupynumeric.nanargmax", "cupynumeric.nanargmin", "cupynumeric.nancumprod", "cupynumeric.nancumsum", "cupynumeric.nanmax", "cupynumeric.nanmean", "cupynumeric.nanmedian", "cupynumeric.nanmin", "cupynumeric.nanpercentile", "cupynumeric.nanprod", "cupynumeric.nanquantile", "cupynumeric.nansum", "cupynumeric.ndarray.T", "cupynumeric.ndarray.__abs__", "cupynumeric.ndarray.__add__", "cupynumeric.ndarray.__and__", "cupynumeric.ndarray.__array__", "cupynumeric.ndarray.__bool__", "cupynumeric.ndarray.__complex__", "cupynumeric.ndarray.__contains__", "cupynumeric.ndarray.__copy__", "cupynumeric.ndarray.__deepcopy__", "cupynumeric.ndarray.__divmod__", "cupynumeric.ndarray.__eq__", "cupynumeric.ndarray.__float__", "cupynumeric.ndarray.__floordiv__", "cupynumeric.ndarray.__ge__", "cupynumeric.ndarray.__getitem__", "cupynumeric.ndarray.__gt__", "cupynumeric.ndarray.__iadd__", "cupynumeric.ndarray.__iand__", "cupynumeric.ndarray.__ifloordiv__", "cupynumeric.ndarray.__ilshift__", "cupynumeric.ndarray.__imatmul__", "cupynumeric.ndarray.__imod__", "cupynumeric.ndarray.__imul__", "cupynumeric.ndarray.__index__", "cupynumeric.ndarray.__int__", "cupynumeric.ndarray.__invert__", "cupynumeric.ndarray.__ior__", "cupynumeric.ndarray.__ipow__", "cupynumeric.ndarray.__irshift__", "cupynumeric.ndarray.__isub__", "cupynumeric.ndarray.__itruediv__", "cupynumeric.ndarray.__ixor__", "cupynumeric.ndarray.__le__", "cupynumeric.ndarray.__len__", "cupynumeric.ndarray.__lshift__", "cupynumeric.ndarray.__lt__", "cupynumeric.ndarray.__matmul__", "cupynumeric.ndarray.__mod__", "cupynumeric.ndarray.__mul__", "cupynumeric.ndarray.__ne__", "cupynumeric.ndarray.__neg__", "cupynumeric.ndarray.__new__", "cupynumeric.ndarray.__or__", "cupynumeric.ndarray.__pos__", "cupynumeric.ndarray.__pow__", "cupynumeric.ndarray.__reduce__", "cupynumeric.ndarray.__repr__", "cupynumeric.ndarray.__rmatmul__", "cupynumeric.ndarray.__rshift__", "cupynumeric.ndarray.__setitem__", "cupynumeric.ndarray.__setstate__", "cupynumeric.ndarray.__str__", "cupynumeric.ndarray.__sub__", "cupynumeric.ndarray.__truediv__", "cupynumeric.ndarray.__xor__", "cupynumeric.ndarray.all", "cupynumeric.ndarray.any", "cupynumeric.ndarray.argmax", "cupynumeric.ndarray.argmin", "cupynumeric.ndarray.argpartition", "cupynumeric.ndarray.argsort", "cupynumeric.ndarray.astype", "cupynumeric.ndarray.base", "cupynumeric.ndarray.choose", "cupynumeric.ndarray.clip", "cupynumeric.ndarray.compress", "cupynumeric.ndarray.conj", "cupynumeric.ndarray.conjugate", "cupynumeric.ndarray.copy", "cupynumeric.ndarray.ctypes", "cupynumeric.ndarray.cumprod", "cupynumeric.ndarray.cumsum", "cupynumeric.ndarray.data", "cupynumeric.ndarray.diagonal", "cupynumeric.ndarray.dot", "cupynumeric.ndarray.dtype", "cupynumeric.ndarray.dump", "cupynumeric.ndarray.dumps", "cupynumeric.ndarray.fill", "cupynumeric.ndarray.flags", "cupynumeric.ndarray.flat", "cupynumeric.ndarray.flatten", "cupynumeric.ndarray.flip", "cupynumeric.ndarray.getfield", "cupynumeric.ndarray.imag", "cupynumeric.ndarray.item", "cupynumeric.ndarray.itemset", "cupynumeric.ndarray.itemsize", "cupynumeric.ndarray.max", "cupynumeric.ndarray.mean", "cupynumeric.ndarray.min", "cupynumeric.ndarray.nbytes", "cupynumeric.ndarray.ndim", "cupynumeric.ndarray.nonzero", "cupynumeric.ndarray.partition", "cupynumeric.ndarray.prod", "cupynumeric.ndarray.put", "cupynumeric.ndarray.ravel", "cupynumeric.ndarray.real", "cupynumeric.ndarray.reshape", "cupynumeric.ndarray.searchsorted", "cupynumeric.ndarray.setfield", "cupynumeric.ndarray.setflags", "cupynumeric.ndarray.shape", "cupynumeric.ndarray.size", "cupynumeric.ndarray.sort", "cupynumeric.ndarray.squeeze", "cupynumeric.ndarray.strides", "cupynumeric.ndarray.sum", "cupynumeric.ndarray.swapaxes", "cupynumeric.ndarray.take", "cupynumeric.ndarray.tobytes", "cupynumeric.ndarray.tofile", "cupynumeric.ndarray.tolist", "cupynumeric.ndarray.tostring", "cupynumeric.ndarray.trace", "cupynumeric.ndarray.transpose", "cupynumeric.ndarray.unique", "cupynumeric.ndarray.var", "cupynumeric.ndarray.view", "cupynumeric.ndim", "cupynumeric.negative", "cupynumeric.nextafter", "cupynumeric.nonzero", "cupynumeric.not_equal", "cupynumeric.ones", "cupynumeric.ones_like", "cupynumeric.outer", "cupynumeric.packbits", "cupynumeric.partition", "cupynumeric.percentile", "cupynumeric.place", "cupynumeric.positive", "cupynumeric.power", "cupynumeric.prod", "cupynumeric.put", "cupynumeric.put_along_axis", "cupynumeric.putmask", "cupynumeric.quantile", "cupynumeric.rad2deg", "cupynumeric.radians", "cupynumeric.random.beta", "cupynumeric.random.binomial", "cupynumeric.random.bytes", "cupynumeric.random.chisquare", "cupynumeric.random.default_rng", "cupynumeric.random.exponential", "cupynumeric.random.f", "cupynumeric.random.gamma", "cupynumeric.random.geometric", "cupynumeric.random.gumbel", "cupynumeric.random.hypergeometric", "cupynumeric.random.laplace", "cupynumeric.random.logistic", "cupynumeric.random.lognormal", "cupynumeric.random.logseries", "cupynumeric.random.negative_binomial", "cupynumeric.random.noncentral_chisquare", "cupynumeric.random.noncentral_f", "cupynumeric.random.normal", "cupynumeric.random.pareto", "cupynumeric.random.poisson", "cupynumeric.random.power", "cupynumeric.random.rand", "cupynumeric.random.randint", "cupynumeric.random.randn", "cupynumeric.random.random", "cupynumeric.random.random_integers", "cupynumeric.random.random_sample", "cupynumeric.random.ranf", "cupynumeric.random.rayleigh", "cupynumeric.random.sample", "cupynumeric.random.seed", "cupynumeric.random.standard_cauchy", "cupynumeric.random.standard_exponential", "cupynumeric.random.standard_gamma", "cupynumeric.random.standard_t", "cupynumeric.random.triangular", "cupynumeric.random.uniform", "cupynumeric.random.vonmises", "cupynumeric.random.wald", "cupynumeric.random.weibull", "cupynumeric.random.zipf", "cupynumeric.ravel", "cupynumeric.ravel_multi_index", "cupynumeric.real", "cupynumeric.real_if_close", "cupynumeric.reciprocal", "cupynumeric.remainder", "cupynumeric.repeat", "cupynumeric.reshape", "cupynumeric.right_shift", "cupynumeric.rint", "cupynumeric.roll", "cupynumeric.roots", "cupynumeric.rot90", "cupynumeric.round", "cupynumeric.row_stack", "cupynumeric.searchsorted", "cupynumeric.select", "cupynumeric.shape", "cupynumeric.sign", "cupynumeric.signbit", "cupynumeric.sin", "cupynumeric.sinh", "cupynumeric.sort", "cupynumeric.sort_complex", "cupynumeric.split", "cupynumeric.sqrt", "cupynumeric.square", "cupynumeric.squeeze", "cupynumeric.stack", "cupynumeric.subtract", "cupynumeric.sum", "cupynumeric.swapaxes", "cupynumeric.take", "cupynumeric.take_along_axis", "cupynumeric.tan", "cupynumeric.tanh", "cupynumeric.tensordot", "cupynumeric.tile", "cupynumeric.trace", "cupynumeric.transpose", "cupynumeric.tri", "cupynumeric.tril", "cupynumeric.tril_indices", "cupynumeric.tril_indices_from", "cupynumeric.triu", "cupynumeric.triu_indices", "cupynumeric.triu_indices_from", "cupynumeric.true_divide", "cupynumeric.trunc", "cupynumeric.unique", "cupynumeric.unpackbits", "cupynumeric.unravel_index", "cupynumeric.var", "cupynumeric.vdot", "cupynumeric.vsplit", "cupynumeric.vstack", "cupynumeric.where", "cupynumeric.zeros", "cupynumeric.zeros_like", "API Reference", "Indexing routines", "Input and output", "Linear algebra (<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">cupynumeric.linalg</span></code>)", "Logic functions", "Array manipulation routines", "Mathematical functions", "The N-Dimensional array (<code class=\"xref py py-class docutils literal notranslate\"><span class=\"pre\">cupynumeric.ndarray</span></code>)", "Random sampling (<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">cupynumeric.random</span></code>)", "Routines", "Set routines", "Settings", "Sorting, searching, and counting", "Statistics", "Window functions", "Contributing to cuPyNumeric", "Building from source", "Developer guide", "Running tests", "Black-Scholes options pricing", "Cholesky decomposition", "Compact Finite Difference Scheme", "Edge Detection", "Examples", "K-Means Clustering Algorithm", "Newton Raphson Method In Two Dimensions", "Jacobi stencil", "TorchSWE case study", "Frequently Asked Questions", "NVIDIA cuPyNumeric", "Installation", "Third-party notices", "Advanced topics", "Differences with Numpy", "Performance Benchmarking", "Howtos", "Measure API coverage", "Trying Numpy code without changes", "User guide", "Best practices", "Tutorial", "Usage"], "titleterms": {"1": 495, "2": 495, "3": 495, "In": 480, "Of": 483, "The": [462, 470], "__abs__": 213, "__add__": 214, "__and__": 215, "__array__": 216, "__bool__": 217, "__complex__": 218, "__contains__": 219, "__copy__": 220, "__deepcopy__": 221, "__divmod__": 222, "__eq__": 223, "__float__": 224, "__floordiv__": 225, "__ge__": 226, "__getitem__": 227, "__gt__": 228, "__iadd__": 229, "__iand__": 230, "__ifloordiv__": 231, "__ilshift__": 232, "__imatmul__": 233, "__imod__": 234, "__imul__": 235, "__index__": 236, "__int__": 237, "__invert__": 238, "__ior__": 239, "__ipow__": 240, "__irshift__": 241, "__isub__": 242, "__itruediv__": 243, "__ixor__": 244, "__le__": 245, "__len__": 246, "__lshift__": 247, "__lt__": 248, "__matmul__": 249, "__mod__": 250, "__mul__": 251, "__ne__": 252, "__neg__": 253, "__new__": 254, "__or__": 255, "__pos__": 256, "__pow__": 257, "__reduce__": 258, "__repr__": 259, "__rmatmul__": 260, "__rshift__": 261, "__setitem__": 262, "__setstate__": 263, "__str__": 264, "__sub__": 265, "__truediv__": 266, "__xor__": 267, "about": 483, "absolut": 12, "add": 13, "advanc": [3, 471, 487, 494, 495], "algebra": [8, 458], "algorithm": 479, "all": [14, 268], "allclos": 15, "alloc": [494, 495], "amax": 16, "amin": 17, "an": 494, "angl": 18, "ani": [19, 269], "anoth": 494, "anti": 483, "api": [8, 455, 491, 494], "append": 20, "applic": [483, 494], "ar": 483, "arang": 21, "arcco": 22, "arccosh": 23, "arcsin": 24, "arcsinh": 25, "arctan": 26, "arctan2": 27, "arctanh": 28, "argmax": [29, 270], "argmin": [30, 271], "argpartit": [31, 272], "argsort": [32, 273], "argument": [483, 487, 488, 494], "argwher": 33, "arithmet": [461, 462], "arrai": [3, 8, 9, 34, 456, 459, 460, 462, 494, 495], "array_equ": 35, "array_split": 36, "asarrai": 37, "ask": 483, "astyp": 274, "atleast_1d": 38, "atleast_2d": 39, "atleast_3d": 40, "attribut": 462, "avail": 483, "averag": [41, 468], "avoid": [494, 495], "background": [476, 477, 479, 480], "bartlett": 42, "base": [275, 494, 495], "basic": [460, 471, 473, 495], "begin": 470, "behavior": 488, "benchmark": 489, "best": [494, 495], "beta": 354, "better": 494, "between": 483, "binari": [5, 457], "bincount": 43, "binomi": 355, "bit": [3, 5, 463], "bitgener": 1, "bitwise_and": 44, "bitwise_or": 45, "bitwise_xor": 46, "black": [474, 495], "blackman": 47, "block": [48, 494], "boolean": [494, 495], "broadcast": 6, "broadcast_arrai": 49, "broadcast_shap": 50, "broadcast_to": 51, "build": [9, 471, 485], "byte": 356, "calcul": 462, "call": 491, "can": 483, "case": 482, "cbrt": 52, "ceil": 53, "ceph": 486, "certif": 470, "chang": [460, 479, 492], "chisquar": 357, "choleski": [163, 475], "choos": [54, 276], "class": 7, "clip": [55, 277], "cluster": [479, 495], "cmake": 471, "co": 65, "code": [470, 483, 492, 495], "column_stack": 56, "compact": 476, "comparison": [8, 459, 462], "complex": 461, "compress": [57, 278], "comput": 495, "concaten": 58, "conda": [485, 495], "configur": 473, "conj": [59, 279], "conjug": [60, 280, 495], "construct": 462, "content": [459, 484], "contribut": 470, "convers": 462, "convolv": [3, 61], "copi": [62, 281, 488, 494], "copysign": 63, "copyto": 64, "correl": [3, 468], "cosh": 66, "count": [3, 467], "count_nonzero": 67, "cov": 68, "coverag": 491, "cpu": [485, 495], "creation": [3, 9], "cross": 69, "ctype": 282, "cumprod": [70, 283], "cumsum": [71, 284], "cupi": 483, "cupynumer": [1, 2, 4, 6, 8, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 458, 462, 463, 470, 483, 484, 494, 495], "data": [9, 10, 285, 456, 460, 462, 463], "datatyp": 488, "dco": 470, "decomposit": [458, 475], "default": 483, "default_rng": 358, "deg2rad": 72, "degre": 73, "delet": 74, "depend": 471, "design": 494, "detail": 491, "detect": [477, 495], "determin": 483, "develop": [470, 472], "diag": 75, "diag_indic": 76, "diag_indices_from": 77, "diagflat": 78, "diagon": [79, 286], "diff": 80, "differ": [461, 476, 483, 488], "digit": 81, "dimens": [460, 480], "dimension": [8, 462], "discret": [3, 8, 11], "distribut": 463, "divid": 82, "do": [470, 483], "doctor": 466, "doctor_filenam": 466, "doctor_format": 466, "doe": 483, "doesn": 483, "don": 483, "dot": [83, 287], "dsplit": 84, "dstack": 85, "dtype": 288, "dump": [289, 290], "edg": [477, 495], "eig": 164, "eigenvalu": 3, "eigh": 165, "eigval": 166, "eigvalsh": 167, "einsum": [3, 86], "einsum_path": 87, "element": [460, 494], "elementwis": 5, "empti": 88, "empty_lik": 89, "equal": 90, "equat": 458, "error": 483, "exampl": [478, 495], "execut": [483, 487], "exercis": 479, "exist": 9, "exp": 91, "exp2": 92, "expand_dim": 93, "expm": 168, "expm1": 94, "expon": 461, "exponenti": 359, "extract": 95, "extrema": 461, "ey": 96, "f": 360, "fab": 97, "factor": 3, "fallback_stacktrac": 466, "fast_math": 466, "faster": 494, "fft": [11, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113], "fft2": 99, "fftn": 100, "fftshift": 101, "file": 457, "fill": 291, "fill_diagon": 114, "find": 461, "find_common_typ": 115, "finit": 476, "flag": 292, "flat": 293, "flatnonzero": 116, "flatten": 294, "flip": [117, 295], "fliplr": 118, "flipud": 119, "float": 461, "float_pow": 120, "floor": 121, "floor_divid": 122, "fmax": 123, "fmin": 124, "fmod": 125, "force_thunk": 466, "format": 470, "fourier": [3, 8, 11], "frequent": 483, "frexp": 126, "from": [9, 460, 471, 483, 485], "full": 127, "full_lik": 128, "function": [3, 458, 459, 461, 469, 494], "gamma": 361, "gcd": 129, "gener": [2, 456, 463, 494], "geometr": 362, "getfield": 296, "gpu": [483, 485, 495], "gradient": [130, 495], "greater": 131, "greater_equ": 132, "guid": [472, 493], "guidelin": [489, 494], "gumbel": 363, "ham": 133, "han": 134, "handl": [461, 483], "hardwar": 495, "have": 483, "helper": 11, "hermitian": 11, "hfft": 102, "histogram": [135, 468], "how": [470, 479, 483], "howto": 490, "hpc": 495, "hsplit": 136, "hstack": 137, "hyperbol": 461, "hypergeometr": 364, "hypot": 138, "i": [470, 483, 494], "ident": 139, "ifft": 103, "ifft2": 104, "ifftn": 105, "ifftshift": 106, "ihfft": 107, "imag": [140, 297], "implement": [476, 477, 479, 480], "index": [3, 456, 488, 494, 495], "indic": [141, 484], "inner": 142, "input": [3, 457, 479], "insert": [143, 456], "instal": [485, 495], "instead": [488, 494], "introduct": 495, "invert": [144, 458], "irfft": 108, "irfft2": 109, "irfftn": 110, "isclos": 145, "iscomplex": 146, "iscomplexobj": 147, "isfinit": 148, "isinf": 149, "isnan": 150, "isneginf": 151, "isposinf": 152, "isreal": 153, "isrealobj": 154, "isscalar": 155, "item": [298, 462], "items": 300, "itemset": 299, "iter": 494, "ix_": 156, "jacobi": [481, 495], "join": 460, "jupyt": 483, "k": 479, "kaiser": 157, "kind": 460, "kit": 486, "kmean": 479, "laplac": 365, "laptop": 483, "layout": 462, "lcm": 158, "ldexp": 159, "learn": [476, 477, 479, 480], "left_shift": 160, "legales": 470, "legat": [483, 487, 489], "legion": [483, 487], "less": 161, "less_equ": 162, "let": 479, "level": 8, "licens": 485, "like": [456, 460], "linalg": [163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 458], "linear": [8, 458], "linspac": 175, "linux": 495, "list": [494, 495], "load": 176, "log": 177, "log10": 178, "log1p": 179, "log2": 180, "logaddexp": 181, "logaddexp2": 182, "logarithm": 461, "logic": [3, 459, 494], "logical_and": 183, "logical_not": 184, "logical_or": 185, "logical_xor": 186, "logist": 366, "lognorm": 367, "logseri": 368, "logspac": 187, "loop": [494, 495], "lu": 3, "make": 465, "manag": 487, "manipul": [3, 460, 462, 494], "manual": 487, "mask": [494, 495], "mask_indic": 188, "mathemat": [3, 461, 494], "matmul": 189, "matmul_cache_s": 466, "matric": [9, 458], "matrix": [3, 458, 462, 495], "matrix_pow": 169, "max": 301, "maximum": 190, "mean": [191, 302, 479, 483], "measur": 491, "median": 192, "memori": [462, 483, 494], "merg": 494, "meshgrid": 193, "method": [462, 480], "min": 303, "min_cpu_chunk": 466, "min_gpu_chunk": 466, "min_omp_chunk": 466, "minimum": 194, "miscellan": [3, 461], "mod": 195, "modf": 196, "modul": 8, "more": 483, "moveaxi": 197, "multi": [8, 487, 495], "multi_dot": 170, "multipl": [462, 495], "multipli": 198, "my": 483, "n": 462, "nan_to_num": 199, "nanargmax": 200, "nanargmin": 201, "nancumprod": 202, "nancumsum": 203, "nanmax": 204, "nanmean": 205, "nanmedian": 206, "nanmin": 207, "nanpercentil": 208, "nanprod": 209, "nanquantil": 210, "nansum": 211, "nativ": [494, 495], "nbyte": 304, "ndarrai": [3, 4, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 462], "ndim": [305, 333], "neg": 334, "negative_binomi": 369, "newton": 480, "nextaft": 335, "node": [487, 495], "noncentral_chisquar": 370, "noncentral_f": 371, "nonzero": [306, 336], "norm": [171, 458], "normal": 372, "not_equ": 337, "notebook": 483, "notic": 486, "npy": 457, "npz": 457, "number": [458, 460, 461, 479], "numer": 9, "numpi": [8, 457, 483, 486, 488, 492, 494, 495], "numpy_compat": 466, "nvidia": 484, "o": 494, "observ": 479, "ones": 338, "ones_lik": 339, "openbla": 471, "oper": [3, 5, 456, 459, 460, 461, 462, 494, 495], "option": [474, 495], "order": [468, 488], "origin": 470, "other": [458, 462, 495], "out": 483, "outcom": [476, 477, 479, 480], "outer": 340, "output": [3, 457, 494], "overal": 491, "overhead": 494, "pack": [3, 5], "packag": 485, "packbit": 341, "pad": 3, "pareto": 373, "parti": 486, "partit": [307, 342], "pass": [483, 487], "pattern": 483, "penalti": 494, "percentil": 343, "perform": [489, 494], "pip": [471, 495], "pitfal": 494, "place": 344, "point": 461, "poisson": 374, "posit": 345, "power": [346, 375], "practic": [494, 495], "preload_cudalib": 466, "price": 474, "process": 470, "prod": [308, 347], "product": [458, 461], "program": 3, "project": 8, "proper": 465, "put": [309, 348], "put_along_axi": 349, "putmask": [350, 494], "pypi": 485, "python": 483, "qr": 172, "quantil": 351, "question": 483, "rad2deg": 352, "radian": 353, "rand": 376, "randint": 377, "randn": 378, "random": [1, 2, 3, 8, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 463, 486], "random_integ": 380, "random_sampl": 381, "ranf": 382, "rang": 9, "raphson": 480, "ration": 461, "ravel": [310, 396], "ravel_multi_index": 397, "rayleigh": 383, "read": 483, "real": [11, 311, 398], "real_if_clos": 399, "realm": [483, 487], "rearrang": 460, "reciproc": 400, "recommend": 494, "reduc": 494, "reduct": 488, "refer": 455, "relat": 3, "remaind": 401, "remov": 460, "repeat": 402, "report": 491, "report_coverag": 466, "report_dump_callstack": 466, "report_dump_csv": 466, "requir": [470, 495], "reshap": [312, 403, 494], "resourc": 495, "result": [483, 494], "return": [488, 494], "review": 470, "rfft": 111, "rfft2": 112, "rfftn": 113, "right_shift": 404, "rint": 405, "roll": 406, "root": 407, "rot90": 408, "round": [409, 461], "routin": [3, 9, 10, 11, 456, 460, 461, 464, 465, 494], "row_stack": 410, "run": [473, 479, 495], "sampl": [3, 8, 384, 463, 495], "scalar": 488, "scheme": 476, "schole": [474, 495], "search": [3, 467], "searchsort": [313, 411], "see": 479, "seed": [385, 463], "select": [412, 462], "set": [3, 465, 466, 479], "setfield": 314, "setflag": 315, "setup": 495, "shape": [9, 316, 413, 460, 462, 488], "sign": [414, 470], "signbit": 415, "simpl": 463, "sin": 416, "singl": 495, "sinh": 417, "size": 317, "slower": 483, "solv": [173, 458], "sort": [3, 318, 418, 467], "sort_complex": 419, "sourc": [471, 485], "special": 462, "split": [420, 460], "sqrt": 421, "squar": 422, "squeez": [319, 423], "stack": [424, 491, 494], "stage": 473, "standard": 11, "standard_cauchi": 386, "standard_exponenti": 387, "standard_gamma": 388, "standard_t": 389, "state": 463, "statist": [3, 468], "stencil": [481, 495], "stride": 320, "studi": 482, "subtract": 425, "sum": [321, 426, 461], "support": 488, "svd": [3, 174], "swapax": [322, 427], "t": [212, 483], "tabl": 484, "take": [323, 428], "take_along_axi": 429, "tan": 430, "tanh": 431, "task": [483, 487, 494], "tbli": [471, 486], "tensordot": 432, "test": [10, 459, 466, 473], "than": 483, "thi": 483, "third": 486, "three": 495, "through": [471, 494], "tile": [433, 460], "time": [483, 489], "tip": 495, "tobyt": 324, "tofil": 325, "tolist": 326, "tool": 489, "top": 495, "topic": [471, 487], "torchsw": 482, "tostr": 327, "trace": [328, 434], "transform": [3, 8, 11], "transpos": [329, 435, 460], "tri": 436, "triangular": 390, "trigonometr": 461, "tril": 437, "tril_indic": 438, "tril_indices_from": 439, "triu": 440, "triu_indic": 441, "triu_indices_from": 442, "true_divid": 443, "trunc": 444, "truth": 459, "try": 492, "tutori": 495, "two": 480, "type": [10, 459, 462], "ufunc": 3, "uniform": 391, "uniqu": [330, 445], "unpack": 3, "unpackbit": 446, "unravel_index": 447, "updat": 494, "us": [479, 483, 487, 489, 494, 495], "usag": [473, 496], "user": 493, "v": [8, 483, 495], "valu": [9, 459, 488], "var": [331, 448], "varianc": 468, "variant": [483, 485], "variou": 469, "vdot": 449, "vector": [458, 494], "verifi": 485, "version": 483, "view": [332, 488, 494], "vonmis": 392, "vsplit": 450, "vstack": 451, "wald": 393, "warn": [466, 483], "weibul": 394, "what": 483, "when": 483, "where": [452, 483], "why": 483, "window": 469, "wise": 494, "without": 492, "your": 485, "zero": 453, "zeros_lik": 454, "zipf": 395}})