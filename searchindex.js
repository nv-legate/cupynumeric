Search.setIndex({"alltitles": {"1. Use cuPyNumeric arrays, AVOID native lists": [[501, "use-cupynumeric-arrays-avoid-native-lists"]], "2. Use array-based operations, AVOID loops with indexing": [[501, "use-array-based-operations-avoid-loops-with-indexing"]], "3. Use boolean masks, AVOID advanced indexing": [[501, "use-boolean-masks-avoid-advanced-indexing"]], "API Reference": [[456, null]], "Advanced statistics": [[3, "advanced-statistics"]], "Advanced topics": [[476, "advanced-topics"], [492, null]], "Arithmetic operations": [[462, "arithmetic-operations"]], "Arithmetic, matrix multiplication, and comparison operations": [[463, "arithmetic-matrix-multiplication-and-comparison-operations"]], "Array Attributes": [[463, "array-attributes"]], "Array Manipulation Routine Pitfalls": [[499, "array-manipulation-routine-pitfalls"]], "Array Methods": [[463, "array-methods"]], "Array contents": [[460, "array-contents"]], "Array conversion": [[463, "array-conversion"]], "Array creation": [[3, "array-creation"]], "Array creation (ndarray)": [[3, "array-creation-ndarray"]], "Array creation routines": [[9, null]], "Array manipulation": [[3, "array-manipulation"]], "Array manipulation (ndarray)": [[3, "array-manipulation-ndarray"]], "Array manipulation routines": [[461, null]], "Array type testing": [[460, "array-type-testing"]], "Averages and variances": [[469, "averages-and-variances"]], "Avoid blocking operations": [[499, "avoid-blocking-operations"]], "Background": [[481, "Background"], [482, "Background"], [484, "Background"], [485, "Background"]], "Basic Linux installation": [[501, "basic-linux-installation"]], "Basic build": [[476, "basic-build"]], "Basic operations": [[461, "basic-operations"]], "Basic usage": [[478, "basic-usage"]], "Best practices": [[499, null], [501, "best-practices"]], "Binary operations": [[5, null]], "Bit Generators": [[464, "bit-generators"]], "Bit packing": [[5, "bit-packing"]], "Black-Scholes": [[501, "black-scholes"]], "Black-Scholes options pricing": [[479, null]], "Building from source": [[476, null], [490, "building-from-source"]], "Building matrices": [[9, "building-matrices"]], "Building through pip & cmake": [[476, "building-through-pip-cmake"]], "CPU execution": [[500, "cpu-execution"], [500, "id6"], [500, "id16"], [500, "id26"]], "Calculation": [[463, "calculation"], [463, "id1"]], "Call stack reporting": [[496, "call-stack-reporting"]], "Cephes": [[491, "cephes"]], "Change Log": [[474, null]], "Changes: 25.09": [[471, null]], "Changes: 25.10": [[472, null], [473, null]], "Changing array shape": [[461, "changing-array-shape"]], "Changing kind of array": [[461, "changing-kind-of-array"]], "Changing number of dimensions": [[461, "changing-number-of-dimensions"]], "Cholesky decomposition": [[480, null]], "Classes": [[7, null]], "Code Formatting Requirements": [[475, "code-formatting-requirements"]], "Compact Finite Difference Scheme": [[481, null]], "Comparison": [[460, "comparison"]], "Complete module": [[500, "complete-module"], [500, "id3"], [500, "id13"], [500, "id23"]], "Conda": [[501, "conda"]], "Conda and GPU / CPU Variants": [[490, "conda-and-gpu-cpu-variants"]], "Conjugate gradient": [[501, "conjugate-gradient"]], "Constructing arrays": [[463, "constructing-arrays"]], "Contents:": [[489, null]], "Contributing to cuPyNumeric": [[475, null]], "Convolve and Correlate": [[3, null]], "Correlating": [[469, "correlating"]], "Counting": [[468, "counting"]], "Data Type": [[463, "data-type"]], "Data type routines": [[10, null]], "Data type testing": [[10, "data-type-testing"]], "Decompositions": [[459, "decompositions"]], "Dependencies": [[476, "dependencies"]], "Detailed coverage report": [[496, "detailed-coverage-report"]], "Developer guide": [[477, null]], "Differences with Numpy": [[493, null]], "Discrete Fourier Transform": [[8, "discrete-fourier-transform"]], "Discrete Fourier Transform (cupynumeric.fft)": [[11, null]], "Discrete Fourier transform": [[3, "discrete-fourier-transform"]], "Distributions": [[464, "distributions"]], "Edge Detection": [[482, null]], "Edge detection": [[501, "edge-detection"]], "Eigenvalues": [[3, "eigenvalues"]], "Einsum and related": [[3, "einsum-and-related"]], "Elementwise bit operations": [[5, "elementwise-bit-operations"]], "Example 1": [[501, "example-1"]], "Example 2": [[501, "example-2"]], "Examples": [[483, null], [501, "examples"]], "Exercise: Change the number of clusters and number of observations and see how the clusters change": [[484, "Exercise:-Change-the-number-of-clusters-and-number-of-observations-and-see-how-the-clusters-change"]], "Exponents and logarithms": [[462, "exponents-and-logarithms"]], "Extend cuPyNumeric with Legate-tasks": [[500, null]], "Extrema Finding": [[462, "extrema-finding"]], "Factorizations": [[3, "factorizations"]], "Fast Fourier Transform problem": [[500, "fast-fourier-transform-problem"]], "Faster I/O Routines": [[499, "faster-i-o-routines"]], "Floating point routines": [[462, "floating-point-routines"]], "Frequently Asked Questions": [[488, null]], "From existing data": [[9, "from-existing-data"]], "From shape or value": [[9, "from-shape-or-value"]], "Functional programming": [[3, "functional-programming"]], "GPU execution": [[500, "gpu-execution"], [500, "id7"], [500, "id17"], [500, "id27"]], "General Recommendations": [[499, "general-recommendations"]], "Generating index arrays": [[457, "generating-index-arrays"]], "Guidelines for performance benchmarks": [[494, "guidelines-for-performance-benchmarks"]], "Guidelines on designing cuPyNumeric applications": [[499, "guidelines-on-designing-cupynumeric-applications"]], "Guidelines on using cuPyNumeric APIs": [[499, "guidelines-on-using-cupynumeric-apis"]], "HPC cluster installation": [[501, "hpc-cluster-installation"]], "Handling complex numbers": [[462, "handling-complex-numbers"]], "Hardware requirements": [[501, "hardware-requirements"]], "Helper routines": [[11, "helper-routines"]], "Hermitian FFTs": [[11, "hermitian-ffts"]], "Histogram problem": [[500, "histogram-problem"]], "Histograms": [[469, "histograms"]], "How Do I Sign the DCO?": [[475, "how-do-i-sign-the-dco"]], "How do I time the execution of my application?": [[488, "how-do-i-time-the-execution-of-my-application"]], "How do I use Jupyter Notebooks?": [[488, "how-do-i-use-jupyter-notebooks"]], "How to begin": [[475, "how-to-begin"]], "How to determine available memory?": [[488, "how-to-determine-available-memory"]], "How to handle Out-Of-Memory errors?": [[488, "how-to-handle-out-of-memory-errors"]], "How to pass Legion and Realm arguments?": [[488, "how-to-pass-legion-and-realm-arguments"]], "Howtos": [[495, null]], "Hyperbolic functions": [[462, "hyperbolic-functions"]], "Implementation": [[481, "Implementation"], [482, "Implementation"], [484, "Implementation"], [485, "Implementation"]], "Indexing": [[3, "indexing"]], "Indexing behavior": [[493, "indexing-behavior"]], "Indexing routines": [[457, null]], "Indexing-like operations": [[457, "indexing-like-operations"]], "Indices and tables": [[489, "indices-and-tables"]], "Input and output": [[3, "input-and-output"], [458, null]], "Input and output (ndarray)": [[3, "input-and-output-ndarray"]], "Inserting data into arrays": [[457, "inserting-data-into-arrays"]], "Installation": [[490, null]], "Installing Conda Packages": [[490, "installing-conda-packages"]], "Installing PyPI Packages": [[490, "installing-pypi-packages"]], "Introduction": [[501, "introduction"]], "Item selection and manipulation": [[463, "item-selection-and-manipulation"]], "Jacobi stencil": [[486, null], [501, "jacobi-stencil"]], "Joining arrays": [[461, "joining-arrays"]], "Jupyter": [[502, "jupyter"]], "K-Means Clustering Algorithm": [[484, null]], "LU factorization and related": [[3, "lu-factorization-and-related"]], "Learning Outcomes": [[481, "Learning-Outcomes"], [482, "Learning-Outcomes"], [484, "Learning-Outcomes"], [485, "Learning-Outcomes"]], "Lets run the kmeans algorithm using a set of inputs": [[484, "Lets-run-the-kmeans-algorithm-using-a-set-of-inputs"]], "Licenses": [[490, "licenses"]], "Linear Algebra": [[8, "linear-algebra"]], "Linear algebra (cupynumeric.linalg)": [[459, null]], "Logic functions": [[460, null]], "Logic operations": [[460, "logic-operations"]], "Logical operations": [[3, "logical-operations"]], "Main function": [[500, "main-function"], [500, "main-function-1"], [500, "id11"], [500, "id21"]], "Making proper sets": [[466, "making-proper-sets"]], "Mathematical functions": [[3, "mathematical-functions"], [462, null]], "Matrix Functions": [[459, "matrix-functions"]], "Matrix and vector products": [[459, "matrix-and-vector-products"]], "Matrix multiplication": [[501, "matrix-multiplication"]], "Measure API coverage": [[496, null]], "Memory Layout": [[463, "memory-layout"]], "Merge tasks to reduce overhead": [[499, "merge-tasks-to-reduce-overhead"]], "Miscellaneous": [[462, "miscellaneous"]], "Miscellaneous matrix routines": [[3, "miscellaneous-matrix-routines"]], "Module-Level": [[8, "module-level"]], "Multi-Dimensional Array": [[8, "multi-dimensional-array"]], "Multi-Node execution": [[500, "multi-node-execution"], [500, "id8"], [500, "id18"], [500, "id28"]], "Multi-node HPC": [[501, "multi-node-hpc"]], "Multi-node execution": [[492, "multi-node-execution"]], "NVIDIA cuPyNumeric": [[489, null]], "Newton Raphson Method In Two Dimensions": [[485, null]], "Norms and other numbers": [[459, "norms-and-other-numbers"]], "NumPy": [[491, "numpy"], [501, "numpy"]], "NumPy binary files (npy, npz)": [[458, "numpy-binary-files-npy-npz"]], "NumPy vs cuPyNumeric APIs": [[8, "numpy-vs-cupynumeric-apis"]], "Numerical ranges": [[9, "numerical-ranges"]], "OpenBLAS": [[476, "openblas"]], "Order argument": [[493, "order-argument"]], "Order statistics": [[469, "order-statistics"]], "Other Attributes": [[463, "other-attributes"]], "Other options": [[501, "other-options"]], "Overall coverage report": [[496, "overall-coverage-report"]], "Packing and unpacking bits": [[3, "packing-and-unpacking-bits"]], "Padding arrays": [[3, "padding-arrays"]], "Passing Legion and Realm arguments": [[492, "passing-legion-and-realm-arguments"]], "Performance Benchmarking": [[494, null]], "Pip": [[501, "pip"]], "Project comparisons": [[8, null]], "Questions?": [[488, "questions"]], "Quick example": [[500, "quick-example"]], "Random Generator": [[464, "random-generator"]], "Random Kit": [[491, "random-kit"]], "Random Sampling": [[8, "random-sampling"]], "Random sampling": [[3, "random-sampling"]], "Random sampling (cupynumeric.random)": [[464, null]], "Rational routines": [[462, "rational-routines"]], "Real FFTs": [[11, "real-ffts"]], "Rearranging elements": [[461, "rearranging-elements"]], "Reductions": [[493, "reductions"]], "Removing data from arrays": [[461, "removing-data-from-arrays"]], "Reshape returns a copy instead of view": [[499, "reshape-returns-a-copy-instead-of-view"]], "Resource Scoping": [[492, "resource-scoping"]], "Resource allocation": [[501, "resource-allocation"]], "Returning a copy instead of a view": [[493, "returning-a-copy-instead-of-a-view"]], "Review Process": [[475, "review-process"]], "Rounding": [[462, "rounding"]], "Routines": [[465, null]], "Running cuPyNumeric code": [[501, "running-cupynumeric-code"]], "Running on CPU": [[501, "running-on-cpu"], [501, "id2"], [501, "id4"], [501, "id6"]], "Running on CPU and GPU": [[500, "running-on-cpu-and-gpu"], [500, "id4"], [500, "id14"], [500, "id24"]], "Running on GPU": [[501, "running-on-gpu"], [501, "id3"], [501, "id5"], [501, "id7"], [501, "id9"]], "Running on GPU cluster": [[501, "running-on-gpu-cluster"]], "Running tests": [[478, null]], "SAXPY problem": [[500, "saxpy-problem"]], "SVD and related": [[3, "svd-and-related"]], "Sample Code": [[501, "sample-code"], [501, "id8"]], "Sample computation": [[501, "sample-computation"]], "Scalar return values": [[493, "scalar-return-values"]], "Searching": [[468, "searching"]], "Searching, sorting, and counting": [[3, "searching-sorting-and-counting"]], "Seeding and State": [[464, "seeding-and-state"]], "Set operations": [[3, "set-operations"]], "Set routines": [[466, null]], "Settings": [[467, null]], "Shape manipulation": [[463, "shape-manipulation"]], "Simple matrix multiplication problem": [[500, "simple-matrix-multiplication-problem"]], "Simple random data": [[464, "simple-random-data"]], "Single node": [[501, "single-node"]], "Single-node setup": [[501, "single-node-setup"]], "Solving equations and inverting matrices": [[459, "solving-equations-and-inverting-matrices"]], "Sorting": [[468, "sorting"]], "Sorting, searching, and counting": [[468, null]], "Special methods": [[463, "special-methods"]], "Splitting arrays": [[461, "splitting-arrays"]], "Stack results in a performance penalty": [[499, "stack-results-in-a-performance-penalty"]], "Stage configuration": [[478, "stage-configuration"]], "Standard FFTs": [[11, "standard-ffts"]], "Statistics": [[469, null]], "Sums, products, differences": [[462, "sums-products-differences"]], "Supported shapes and datatypes": [[493, "supported-shapes-and-datatypes"]], "TBLIS": [[476, "tblis"], [491, "tblis"]], "Task function": [[500, "task-function"], [500, "id2"], [500, "id12"], [500, "id22"]], "The Legalese: Developer Certificate of Origin": [[475, "the-legalese-developer-certificate-of-origin"]], "The N-Dimensional array (cupynumeric.ndarray)": [[463, null]], "Third-party notices": [[491, null]], "Tiling arrays": [[461, "tiling-arrays"]], "Top three Tips": [[501, "top-three-tips"]], "TorchSWE case study": [[487, null]], "Transpose-like operations": [[461, "transpose-like-operations"]], "Trigonometric functions": [[462, "trigonometric-functions"]], "Truth value testing": [[460, "truth-value-testing"]], "Trying Numpy code without changes": [[497, null]], "Tutorial": [[501, null]], "Ufuncs": [[3, "ufuncs"]], "Understanding this example": [[500, "understanding-this-example"]], "Usage": [[502, null]], "Use array-based operations, AVOID loops with indexing": [[499, "use-array-based-operations-avoid-loops-with-indexing"]], "Use boolean masks, AVOID advanced indexing": [[499, "use-boolean-masks-avoid-advanced-indexing"]], "Use cuPyNumeric or NumPy arrays, AVOID native lists": [[499, "use-cupynumeric-or-numpy-arrays-avoid-native-lists"]], "Use logic functions, AVOID iterating through a loop": [[499, "use-logic-functions-avoid-iterating-through-a-loop"]], "Use mathematical functions, AVOID element-wise loops": [[499, "use-mathematical-functions-avoid-element-wise-loops"]], "Use output arguments to reduce memory allocation": [[499, "use-output-arguments-to-reduce-memory-allocation"]], "Use putmask to update an array based on another array": [[499, "use-putmask-to-update-an-array-based-on-another-array"]], "User guide": [[498, null]], "Using Legate timing tools": [[494, "using-legate-timing-tools"]], "Using a manual task manager": [[492, "using-a-manual-task-manager"]], "Using legate": [[492, "using-legate"]], "Using the GASNet networking backend": [[492, "using-the-gasnet-networking-backend"]], "Various windows": [[470, "various-windows"]], "Vectorize for better performance": [[499, "vectorize-for-better-performance"]], "Verify your Installation": [[490, "verify-your-installation"]], "What are the anti-patterns in a NumPy code?": [[488, "what-are-the-anti-patterns-in-a-numpy-code"]], "What are the defaults?": [[488, "what-are-the-defaults"]], "What are the different task variants available in Legate?": [[488, "what-are-the-different-task-variants-available-in-legate"]], "What does this warning mean?": [[488, "what-does-this-warning-mean"]], "What if I don\u2019t have a GPU?": [[488, "what-if-i-dont-have-a-gpu"]], "What is a Legate task?": [[500, "what-is-a-legate-task"]], "What is the difference between Legate and cuPyNumeric?": [[488, "what-is-the-difference-between-legate-and-cupynumeric"]], "What is the version of legate?": [[488, "what-is-the-version-of-legate"]], "When to use python vs legate?": [[488, "when-to-use-python-vs-legate"]], "Where I can read more about cuPyNumeric?": [[488, "where-i-can-read-more-about-cupynumeric"]], "Why are the results different from NumPy?": [[488, "why-are-the-results-different-from-numpy"]], "Why doesn\u2019t Legate use my GPU?": [[488, "why-doesnt-legate-use-my-gpu"]], "Why is cuPyNumeric slower than CuPy on my laptop?": [[488, "why-is-cupynumeric-slower-than-cupy-on-my-laptop"]], "Why is cuPyNumeric slower than NumPy on my laptop?": [[488, "why-is-cupynumeric-slower-than-numpy-on-my-laptop"]], "Window functions": [[470, null]], "cuPyNumeric": [[501, "cupynumeric"]], "cuPyNumeric vs NumPy": [[501, "cupynumeric-vs-numpy"]], "cupynumeric.absolute": [[12, null]], "cupynumeric.add": [[13, null]], "cupynumeric.all": [[14, null]], "cupynumeric.allclose": [[15, null]], "cupynumeric.amax": [[16, null]], "cupynumeric.amin": [[17, null]], "cupynumeric.angle": [[18, null]], "cupynumeric.any": [[19, null]], "cupynumeric.append": [[20, null]], "cupynumeric.arange": [[21, null]], "cupynumeric.arccos": [[22, null]], "cupynumeric.arccosh": [[23, null]], "cupynumeric.arcsin": [[24, null]], "cupynumeric.arcsinh": [[25, null]], "cupynumeric.arctan": [[26, null]], "cupynumeric.arctan2": [[27, null]], "cupynumeric.arctanh": [[28, null]], "cupynumeric.argmax": [[29, null]], "cupynumeric.argmin": [[30, null]], "cupynumeric.argpartition": [[31, null]], "cupynumeric.argsort": [[32, null]], "cupynumeric.argwhere": [[33, null]], "cupynumeric.array": [[34, null]], "cupynumeric.array_equal": [[35, null]], "cupynumeric.array_split": [[36, null]], "cupynumeric.asarray": [[37, null]], "cupynumeric.atleast_1d": [[38, null]], "cupynumeric.atleast_2d": [[39, null]], "cupynumeric.atleast_3d": [[40, null]], "cupynumeric.average": [[41, null]], "cupynumeric.bartlett": [[42, null]], "cupynumeric.bincount": [[43, null]], "cupynumeric.bitwise_and": [[44, null]], "cupynumeric.bitwise_or": [[45, null]], "cupynumeric.bitwise_xor": [[46, null]], "cupynumeric.blackman": [[47, null]], "cupynumeric.block": [[48, null]], "cupynumeric.broadcast": [[6, null]], "cupynumeric.broadcast_arrays": [[49, null]], "cupynumeric.broadcast_shapes": [[50, null]], "cupynumeric.broadcast_to": [[51, null]], "cupynumeric.cbrt": [[52, null]], "cupynumeric.ceil": [[53, null]], "cupynumeric.choose": [[54, null]], "cupynumeric.clip": [[55, null]], "cupynumeric.column_stack": [[56, null]], "cupynumeric.compress": [[57, null]], "cupynumeric.concatenate": [[58, null]], "cupynumeric.conj": [[59, null]], "cupynumeric.conjugate": [[60, null]], "cupynumeric.convolve": [[61, null]], "cupynumeric.copy": [[62, null]], "cupynumeric.copysign": [[63, null]], "cupynumeric.copyto": [[64, null]], "cupynumeric.cos": [[65, null]], "cupynumeric.cosh": [[66, null]], "cupynumeric.count_nonzero": [[67, null]], "cupynumeric.cov": [[68, null]], "cupynumeric.cross": [[69, null]], "cupynumeric.cumprod": [[70, null]], "cupynumeric.cumsum": [[71, null]], "cupynumeric.deg2rad": [[72, null]], "cupynumeric.degrees": [[73, null]], "cupynumeric.delete": [[74, null]], "cupynumeric.diag": [[75, null]], "cupynumeric.diag_indices": [[76, null]], "cupynumeric.diag_indices_from": [[77, null]], "cupynumeric.diagflat": [[78, null]], "cupynumeric.diagonal": [[79, null]], "cupynumeric.diff": [[80, null]], "cupynumeric.digitize": [[81, null]], "cupynumeric.divide": [[82, null]], "cupynumeric.dot": [[83, null]], "cupynumeric.dsplit": [[84, null]], "cupynumeric.dstack": [[85, null]], "cupynumeric.einsum": [[86, null]], "cupynumeric.einsum_path": [[87, null]], "cupynumeric.empty": [[88, null]], "cupynumeric.empty_like": [[89, null]], "cupynumeric.equal": [[90, null]], "cupynumeric.exp": [[91, null]], "cupynumeric.exp2": [[92, null]], "cupynumeric.expand_dims": [[93, null]], "cupynumeric.expm1": [[94, null]], "cupynumeric.extract": [[95, null]], "cupynumeric.eye": [[96, null]], "cupynumeric.fabs": [[97, null]], "cupynumeric.fft.fft": [[98, null]], "cupynumeric.fft.fft2": [[99, null]], "cupynumeric.fft.fftn": [[100, null]], "cupynumeric.fft.fftshift": [[101, null]], "cupynumeric.fft.hfft": [[102, null]], "cupynumeric.fft.ifft": [[103, null]], "cupynumeric.fft.ifft2": [[104, null]], "cupynumeric.fft.ifftn": [[105, null]], "cupynumeric.fft.ifftshift": [[106, null]], "cupynumeric.fft.ihfft": [[107, null]], "cupynumeric.fft.irfft": [[108, null]], "cupynumeric.fft.irfft2": [[109, null]], "cupynumeric.fft.irfftn": [[110, null]], "cupynumeric.fft.rfft": [[111, null]], "cupynumeric.fft.rfft2": [[112, null]], "cupynumeric.fft.rfftn": [[113, null]], "cupynumeric.fill_diagonal": [[114, null]], "cupynumeric.find_common_type": [[115, null]], "cupynumeric.flatnonzero": [[116, null]], "cupynumeric.flip": [[117, null]], "cupynumeric.fliplr": [[118, null]], "cupynumeric.flipud": [[119, null]], "cupynumeric.float_power": [[120, null]], "cupynumeric.floor": [[121, null]], "cupynumeric.floor_divide": [[122, null]], "cupynumeric.fmax": [[123, null]], "cupynumeric.fmin": [[124, null]], "cupynumeric.fmod": [[125, null]], "cupynumeric.frexp": [[126, null]], "cupynumeric.full": [[127, null]], "cupynumeric.full_like": [[128, null]], "cupynumeric.gcd": [[129, null]], "cupynumeric.gradient": [[130, null]], "cupynumeric.greater": [[131, null]], "cupynumeric.greater_equal": [[132, null]], "cupynumeric.hamming": [[133, null]], "cupynumeric.hanning": [[134, null]], "cupynumeric.histogram": [[135, null]], "cupynumeric.hsplit": [[136, null]], "cupynumeric.hstack": [[137, null]], "cupynumeric.hypot": [[138, null]], "cupynumeric.identity": [[139, null]], "cupynumeric.imag": [[140, null]], "cupynumeric.in1d": [[141, null]], "cupynumeric.indices": [[142, null]], "cupynumeric.inner": [[143, null]], "cupynumeric.insert": [[144, null]], "cupynumeric.invert": [[145, null]], "cupynumeric.isclose": [[146, null]], "cupynumeric.iscomplex": [[147, null]], "cupynumeric.iscomplexobj": [[148, null]], "cupynumeric.isfinite": [[149, null]], "cupynumeric.isinf": [[150, null]], "cupynumeric.isnan": [[151, null]], "cupynumeric.isneginf": [[152, null]], "cupynumeric.isposinf": [[153, null]], "cupynumeric.isreal": [[154, null]], "cupynumeric.isrealobj": [[155, null]], "cupynumeric.isscalar": [[156, null]], "cupynumeric.ix_": [[157, null]], "cupynumeric.kaiser": [[158, null]], "cupynumeric.lcm": [[159, null]], "cupynumeric.ldexp": [[160, null]], "cupynumeric.left_shift": [[161, null]], "cupynumeric.less": [[162, null]], "cupynumeric.less_equal": [[163, null]], "cupynumeric.linalg.cholesky": [[164, null]], "cupynumeric.linalg.eig": [[165, null]], "cupynumeric.linalg.eigh": [[166, null]], "cupynumeric.linalg.eigvals": [[167, null]], "cupynumeric.linalg.eigvalsh": [[168, null]], "cupynumeric.linalg.expm": [[169, null]], "cupynumeric.linalg.matrix_power": [[170, null]], "cupynumeric.linalg.multi_dot": [[171, null]], "cupynumeric.linalg.norm": [[172, null]], "cupynumeric.linalg.qr": [[173, null]], "cupynumeric.linalg.solve": [[174, null]], "cupynumeric.linalg.svd": [[175, null]], "cupynumeric.linspace": [[176, null]], "cupynumeric.load": [[177, null]], "cupynumeric.log": [[178, null]], "cupynumeric.log10": [[179, null]], "cupynumeric.log1p": [[180, null]], "cupynumeric.log2": [[181, null]], "cupynumeric.logaddexp": [[182, null]], "cupynumeric.logaddexp2": [[183, null]], "cupynumeric.logical_and": [[184, null]], "cupynumeric.logical_not": [[185, null]], "cupynumeric.logical_or": [[186, null]], "cupynumeric.logical_xor": [[187, null]], "cupynumeric.logspace": [[188, null]], "cupynumeric.mask_indices": [[189, null]], "cupynumeric.matmul": [[190, null]], "cupynumeric.maximum": [[191, null]], "cupynumeric.mean": [[192, null]], "cupynumeric.median": [[193, null]], "cupynumeric.meshgrid": [[194, null]], "cupynumeric.minimum": [[195, null]], "cupynumeric.mod": [[196, null]], "cupynumeric.modf": [[197, null]], "cupynumeric.moveaxis": [[198, null]], "cupynumeric.multiply": [[199, null]], "cupynumeric.nan_to_num": [[200, null]], "cupynumeric.nanargmax": [[201, null]], "cupynumeric.nanargmin": [[202, null]], "cupynumeric.nancumprod": [[203, null]], "cupynumeric.nancumsum": [[204, null]], "cupynumeric.nanmax": [[205, null]], "cupynumeric.nanmean": [[206, null]], "cupynumeric.nanmedian": [[207, null]], "cupynumeric.nanmin": [[208, null]], "cupynumeric.nanpercentile": [[209, null]], "cupynumeric.nanprod": [[210, null]], "cupynumeric.nanquantile": [[211, null]], "cupynumeric.nansum": [[212, null]], "cupynumeric.ndarray": [[4, null]], "cupynumeric.ndarray.T": [[213, null]], "cupynumeric.ndarray.__abs__": [[214, null]], "cupynumeric.ndarray.__add__": [[215, null]], "cupynumeric.ndarray.__and__": [[216, null]], "cupynumeric.ndarray.__array__": [[217, null]], "cupynumeric.ndarray.__bool__": [[218, null]], "cupynumeric.ndarray.__complex__": [[219, null]], "cupynumeric.ndarray.__contains__": [[220, null]], "cupynumeric.ndarray.__copy__": [[221, null]], "cupynumeric.ndarray.__deepcopy__": [[222, null]], "cupynumeric.ndarray.__divmod__": [[223, null]], "cupynumeric.ndarray.__eq__": [[224, null]], "cupynumeric.ndarray.__float__": [[225, null]], "cupynumeric.ndarray.__floordiv__": [[226, null]], "cupynumeric.ndarray.__ge__": [[227, null]], "cupynumeric.ndarray.__getitem__": [[228, null]], "cupynumeric.ndarray.__gt__": [[229, null]], "cupynumeric.ndarray.__iadd__": [[230, null]], "cupynumeric.ndarray.__iand__": [[231, null]], "cupynumeric.ndarray.__ifloordiv__": [[232, null]], "cupynumeric.ndarray.__ilshift__": [[233, null]], "cupynumeric.ndarray.__imatmul__": [[234, null]], "cupynumeric.ndarray.__imod__": [[235, null]], "cupynumeric.ndarray.__imul__": [[236, null]], "cupynumeric.ndarray.__index__": [[237, null]], "cupynumeric.ndarray.__int__": [[238, null]], "cupynumeric.ndarray.__invert__": [[239, null]], "cupynumeric.ndarray.__ior__": [[240, null]], "cupynumeric.ndarray.__ipow__": [[241, null]], "cupynumeric.ndarray.__irshift__": [[242, null]], "cupynumeric.ndarray.__isub__": [[243, null]], "cupynumeric.ndarray.__itruediv__": [[244, null]], "cupynumeric.ndarray.__ixor__": [[245, null]], "cupynumeric.ndarray.__le__": [[246, null]], "cupynumeric.ndarray.__len__": [[247, null]], "cupynumeric.ndarray.__lshift__": [[248, null]], "cupynumeric.ndarray.__lt__": [[249, null]], "cupynumeric.ndarray.__matmul__": [[250, null]], "cupynumeric.ndarray.__mod__": [[251, null]], "cupynumeric.ndarray.__mul__": [[252, null]], "cupynumeric.ndarray.__ne__": [[253, null]], "cupynumeric.ndarray.__neg__": [[254, null]], "cupynumeric.ndarray.__new__": [[255, null]], "cupynumeric.ndarray.__or__": [[256, null]], "cupynumeric.ndarray.__pos__": [[257, null]], "cupynumeric.ndarray.__pow__": [[258, null]], "cupynumeric.ndarray.__reduce__": [[259, null]], "cupynumeric.ndarray.__repr__": [[260, null]], "cupynumeric.ndarray.__rmatmul__": [[261, null]], "cupynumeric.ndarray.__rshift__": [[262, null]], "cupynumeric.ndarray.__setitem__": [[263, null]], "cupynumeric.ndarray.__setstate__": [[264, null]], "cupynumeric.ndarray.__str__": [[265, null]], "cupynumeric.ndarray.__sub__": [[266, null]], "cupynumeric.ndarray.__truediv__": [[267, null]], "cupynumeric.ndarray.__xor__": [[268, null]], "cupynumeric.ndarray.all": [[269, null]], "cupynumeric.ndarray.any": [[270, null]], "cupynumeric.ndarray.argmax": [[271, null]], "cupynumeric.ndarray.argmin": [[272, null]], "cupynumeric.ndarray.argpartition": [[273, null]], "cupynumeric.ndarray.argsort": [[274, null]], "cupynumeric.ndarray.astype": [[275, null]], "cupynumeric.ndarray.base": [[276, null]], "cupynumeric.ndarray.choose": [[277, null]], "cupynumeric.ndarray.clip": [[278, null]], "cupynumeric.ndarray.compress": [[279, null]], "cupynumeric.ndarray.conj": [[280, null]], "cupynumeric.ndarray.conjugate": [[281, null]], "cupynumeric.ndarray.copy": [[282, null]], "cupynumeric.ndarray.ctypes": [[283, null]], "cupynumeric.ndarray.cumprod": [[284, null]], "cupynumeric.ndarray.cumsum": [[285, null]], "cupynumeric.ndarray.data": [[286, null]], "cupynumeric.ndarray.diagonal": [[287, null]], "cupynumeric.ndarray.dot": [[288, null]], "cupynumeric.ndarray.dtype": [[289, null]], "cupynumeric.ndarray.dump": [[290, null]], "cupynumeric.ndarray.dumps": [[291, null]], "cupynumeric.ndarray.fill": [[292, null]], "cupynumeric.ndarray.flags": [[293, null]], "cupynumeric.ndarray.flat": [[294, null]], "cupynumeric.ndarray.flatten": [[295, null]], "cupynumeric.ndarray.flip": [[296, null]], "cupynumeric.ndarray.getfield": [[297, null]], "cupynumeric.ndarray.imag": [[298, null]], "cupynumeric.ndarray.item": [[299, null]], "cupynumeric.ndarray.itemset": [[300, null]], "cupynumeric.ndarray.itemsize": [[301, null]], "cupynumeric.ndarray.max": [[302, null]], "cupynumeric.ndarray.mean": [[303, null]], "cupynumeric.ndarray.min": [[304, null]], "cupynumeric.ndarray.nbytes": [[305, null]], "cupynumeric.ndarray.ndim": [[306, null]], "cupynumeric.ndarray.nonzero": [[307, null]], "cupynumeric.ndarray.partition": [[308, null]], "cupynumeric.ndarray.prod": [[309, null]], "cupynumeric.ndarray.put": [[310, null]], "cupynumeric.ndarray.ravel": [[311, null]], "cupynumeric.ndarray.real": [[312, null]], "cupynumeric.ndarray.reshape": [[313, null]], "cupynumeric.ndarray.searchsorted": [[314, null]], "cupynumeric.ndarray.setfield": [[315, null]], "cupynumeric.ndarray.setflags": [[316, null]], "cupynumeric.ndarray.shape": [[317, null]], "cupynumeric.ndarray.size": [[318, null]], "cupynumeric.ndarray.sort": [[319, null]], "cupynumeric.ndarray.squeeze": [[320, null]], "cupynumeric.ndarray.strides": [[321, null]], "cupynumeric.ndarray.sum": [[322, null]], "cupynumeric.ndarray.swapaxes": [[323, null]], "cupynumeric.ndarray.take": [[324, null]], "cupynumeric.ndarray.tobytes": [[325, null]], "cupynumeric.ndarray.tofile": [[326, null]], "cupynumeric.ndarray.tolist": [[327, null]], "cupynumeric.ndarray.tostring": [[328, null]], "cupynumeric.ndarray.trace": [[329, null]], "cupynumeric.ndarray.transpose": [[330, null]], "cupynumeric.ndarray.unique": [[331, null]], "cupynumeric.ndarray.var": [[332, null]], "cupynumeric.ndarray.view": [[333, null]], "cupynumeric.ndim": [[334, null]], "cupynumeric.negative": [[335, null]], "cupynumeric.nextafter": [[336, null]], "cupynumeric.nonzero": [[337, null]], "cupynumeric.not_equal": [[338, null]], "cupynumeric.ones": [[339, null]], "cupynumeric.ones_like": [[340, null]], "cupynumeric.outer": [[341, null]], "cupynumeric.packbits": [[342, null]], "cupynumeric.partition": [[343, null]], "cupynumeric.percentile": [[344, null]], "cupynumeric.place": [[345, null]], "cupynumeric.positive": [[346, null]], "cupynumeric.power": [[347, null]], "cupynumeric.prod": [[348, null]], "cupynumeric.put": [[349, null]], "cupynumeric.put_along_axis": [[350, null]], "cupynumeric.putmask": [[351, null]], "cupynumeric.quantile": [[352, null]], "cupynumeric.rad2deg": [[353, null]], "cupynumeric.radians": [[354, null]], "cupynumeric.random.BitGenerator": [[1, null]], "cupynumeric.random.Generator": [[2, null]], "cupynumeric.random.beta": [[355, null]], "cupynumeric.random.binomial": [[356, null]], "cupynumeric.random.bytes": [[357, null]], "cupynumeric.random.chisquare": [[358, null]], "cupynumeric.random.default_rng": [[359, null]], "cupynumeric.random.exponential": [[360, null]], "cupynumeric.random.f": [[361, null]], "cupynumeric.random.gamma": [[362, null]], "cupynumeric.random.geometric": [[363, null]], "cupynumeric.random.gumbel": [[364, null]], "cupynumeric.random.hypergeometric": [[365, null]], "cupynumeric.random.laplace": [[366, null]], "cupynumeric.random.logistic": [[367, null]], "cupynumeric.random.lognormal": [[368, null]], "cupynumeric.random.logseries": [[369, null]], "cupynumeric.random.negative_binomial": [[370, null]], "cupynumeric.random.noncentral_chisquare": [[371, null]], "cupynumeric.random.noncentral_f": [[372, null]], "cupynumeric.random.normal": [[373, null]], "cupynumeric.random.pareto": [[374, null]], "cupynumeric.random.poisson": [[375, null]], "cupynumeric.random.power": [[376, null]], "cupynumeric.random.rand": [[377, null]], "cupynumeric.random.randint": [[378, null]], "cupynumeric.random.randn": [[379, null]], "cupynumeric.random.random": [[380, null]], "cupynumeric.random.random_integers": [[381, null]], "cupynumeric.random.random_sample": [[382, null]], "cupynumeric.random.ranf": [[383, null]], "cupynumeric.random.rayleigh": [[384, null]], "cupynumeric.random.sample": [[385, null]], "cupynumeric.random.seed": [[386, null]], "cupynumeric.random.standard_cauchy": [[387, null]], "cupynumeric.random.standard_exponential": [[388, null]], "cupynumeric.random.standard_gamma": [[389, null]], "cupynumeric.random.standard_t": [[390, null]], "cupynumeric.random.triangular": [[391, null]], "cupynumeric.random.uniform": [[392, null]], "cupynumeric.random.vonmises": [[393, null]], "cupynumeric.random.wald": [[394, null]], "cupynumeric.random.weibull": [[395, null]], "cupynumeric.random.zipf": [[396, null]], "cupynumeric.ravel": [[397, null]], "cupynumeric.ravel_multi_index": [[398, null]], "cupynumeric.real": [[399, null]], "cupynumeric.real_if_close": [[400, null]], "cupynumeric.reciprocal": [[401, null]], "cupynumeric.remainder": [[402, null]], "cupynumeric.repeat": [[403, null]], "cupynumeric.reshape": [[404, null]], "cupynumeric.right_shift": [[405, null]], "cupynumeric.rint": [[406, null]], "cupynumeric.roll": [[407, null]], "cupynumeric.roots": [[408, null]], "cupynumeric.rot90": [[409, null]], "cupynumeric.round": [[410, null]], "cupynumeric.row_stack": [[411, null]], "cupynumeric.searchsorted": [[412, null]], "cupynumeric.select": [[413, null]], "cupynumeric.shape": [[414, null]], "cupynumeric.sign": [[415, null]], "cupynumeric.signbit": [[416, null]], "cupynumeric.sin": [[417, null]], "cupynumeric.sinh": [[418, null]], "cupynumeric.sort": [[419, null]], "cupynumeric.sort_complex": [[420, null]], "cupynumeric.split": [[421, null]], "cupynumeric.sqrt": [[422, null]], "cupynumeric.square": [[423, null]], "cupynumeric.squeeze": [[424, null]], "cupynumeric.stack": [[425, null]], "cupynumeric.subtract": [[426, null]], "cupynumeric.sum": [[427, null]], "cupynumeric.swapaxes": [[428, null]], "cupynumeric.take": [[429, null]], "cupynumeric.take_along_axis": [[430, null]], "cupynumeric.tan": [[431, null]], "cupynumeric.tanh": [[432, null]], "cupynumeric.tensordot": [[433, null]], "cupynumeric.tile": [[434, null]], "cupynumeric.trace": [[435, null]], "cupynumeric.transpose": [[436, null]], "cupynumeric.tri": [[437, null]], "cupynumeric.tril": [[438, null]], "cupynumeric.tril_indices": [[439, null]], "cupynumeric.tril_indices_from": [[440, null]], "cupynumeric.triu": [[441, null]], "cupynumeric.triu_indices": [[442, null]], "cupynumeric.triu_indices_from": [[443, null]], "cupynumeric.true_divide": [[444, null]], "cupynumeric.trunc": [[445, null]], "cupynumeric.unique": [[446, null]], "cupynumeric.unpackbits": [[447, null]], "cupynumeric.unravel_index": [[448, null]], "cupynumeric.var": [[449, null]], "cupynumeric.vdot": [[450, null]], "cupynumeric.vsplit": [[451, null]], "cupynumeric.vstack": [[452, null]], "cupynumeric.where": [[453, null]], "cupynumeric.zeros": [[454, null]], "cupynumeric.zeros_like": [[455, null]], "doctor": [[467, "doctor"]], "doctor_filename": [[467, "doctor-filename"], [467, "id2"]], "doctor_format": [[467, "doctor-format"]], "fallback_stacktrace": [[467, "fallback-stacktrace"]], "fast_math": [[467, "fast-math"]], "force_thunk": [[467, "force-thunk"]], "matmul_cache_size": [[467, "matmul-cache-size"]], "max_eager_volume": [[467, "max-eager-volume"]], "min_cpu_chunk": [[467, "min-cpu-chunk"]], "min_gpu_chunk": [[467, "min-gpu-chunk"]], "min_omp_chunk": [[467, "min-omp-chunk"]], "numpy_compat": [[467, "numpy-compat"]], "preload_cudalibs": [[467, "preload-cudalibs"]], "report_coverage": [[467, "report-coverage"]], "report_dump_callstack": [[467, "report-dump-callstack"]], "report_dump_csv": [[467, "report-dump-csv"]], "take_default": [[467, "take-default"]], "test": [[467, "test"]], "warn": [[467, "warn"]]}, "docnames": ["_implemented", "api/_bitgenerator", "api/_generator", "api/_grouped", "api/_ndarray", "api/binary", "api/broadcast", "api/classes", "api/comparison", "api/creation", "api/datatype", "api/fft", "api/generated/cupynumeric.absolute", "api/generated/cupynumeric.add", "api/generated/cupynumeric.all", "api/generated/cupynumeric.allclose", "api/generated/cupynumeric.amax", "api/generated/cupynumeric.amin", "api/generated/cupynumeric.angle", "api/generated/cupynumeric.any", "api/generated/cupynumeric.append", "api/generated/cupynumeric.arange", "api/generated/cupynumeric.arccos", "api/generated/cupynumeric.arccosh", "api/generated/cupynumeric.arcsin", "api/generated/cupynumeric.arcsinh", "api/generated/cupynumeric.arctan", "api/generated/cupynumeric.arctan2", "api/generated/cupynumeric.arctanh", "api/generated/cupynumeric.argmax", "api/generated/cupynumeric.argmin", "api/generated/cupynumeric.argpartition", "api/generated/cupynumeric.argsort", "api/generated/cupynumeric.argwhere", "api/generated/cupynumeric.array", "api/generated/cupynumeric.array_equal", "api/generated/cupynumeric.array_split", "api/generated/cupynumeric.asarray", "api/generated/cupynumeric.atleast_1d", "api/generated/cupynumeric.atleast_2d", "api/generated/cupynumeric.atleast_3d", "api/generated/cupynumeric.average", "api/generated/cupynumeric.bartlett", "api/generated/cupynumeric.bincount", "api/generated/cupynumeric.bitwise_and", "api/generated/cupynumeric.bitwise_or", "api/generated/cupynumeric.bitwise_xor", "api/generated/cupynumeric.blackman", "api/generated/cupynumeric.block", "api/generated/cupynumeric.broadcast_arrays", "api/generated/cupynumeric.broadcast_shapes", "api/generated/cupynumeric.broadcast_to", "api/generated/cupynumeric.cbrt", "api/generated/cupynumeric.ceil", "api/generated/cupynumeric.choose", "api/generated/cupynumeric.clip", "api/generated/cupynumeric.column_stack", "api/generated/cupynumeric.compress", "api/generated/cupynumeric.concatenate", "api/generated/cupynumeric.conj", "api/generated/cupynumeric.conjugate", "api/generated/cupynumeric.convolve", "api/generated/cupynumeric.copy", "api/generated/cupynumeric.copysign", "api/generated/cupynumeric.copyto", "api/generated/cupynumeric.cos", "api/generated/cupynumeric.cosh", "api/generated/cupynumeric.count_nonzero", "api/generated/cupynumeric.cov", "api/generated/cupynumeric.cross", "api/generated/cupynumeric.cumprod", "api/generated/cupynumeric.cumsum", "api/generated/cupynumeric.deg2rad", "api/generated/cupynumeric.degrees", "api/generated/cupynumeric.delete", "api/generated/cupynumeric.diag", "api/generated/cupynumeric.diag_indices", "api/generated/cupynumeric.diag_indices_from", "api/generated/cupynumeric.diagflat", "api/generated/cupynumeric.diagonal", "api/generated/cupynumeric.diff", "api/generated/cupynumeric.digitize", "api/generated/cupynumeric.divide", "api/generated/cupynumeric.dot", "api/generated/cupynumeric.dsplit", "api/generated/cupynumeric.dstack", "api/generated/cupynumeric.einsum", "api/generated/cupynumeric.einsum_path", "api/generated/cupynumeric.empty", "api/generated/cupynumeric.empty_like", "api/generated/cupynumeric.equal", "api/generated/cupynumeric.exp", "api/generated/cupynumeric.exp2", "api/generated/cupynumeric.expand_dims", "api/generated/cupynumeric.expm1", "api/generated/cupynumeric.extract", "api/generated/cupynumeric.eye", "api/generated/cupynumeric.fabs", "api/generated/cupynumeric.fft.fft", "api/generated/cupynumeric.fft.fft2", "api/generated/cupynumeric.fft.fftn", "api/generated/cupynumeric.fft.fftshift", "api/generated/cupynumeric.fft.hfft", "api/generated/cupynumeric.fft.ifft", "api/generated/cupynumeric.fft.ifft2", "api/generated/cupynumeric.fft.ifftn", "api/generated/cupynumeric.fft.ifftshift", "api/generated/cupynumeric.fft.ihfft", "api/generated/cupynumeric.fft.irfft", "api/generated/cupynumeric.fft.irfft2", "api/generated/cupynumeric.fft.irfftn", "api/generated/cupynumeric.fft.rfft", "api/generated/cupynumeric.fft.rfft2", "api/generated/cupynumeric.fft.rfftn", "api/generated/cupynumeric.fill_diagonal", "api/generated/cupynumeric.find_common_type", "api/generated/cupynumeric.flatnonzero", "api/generated/cupynumeric.flip", "api/generated/cupynumeric.fliplr", "api/generated/cupynumeric.flipud", "api/generated/cupynumeric.float_power", "api/generated/cupynumeric.floor", "api/generated/cupynumeric.floor_divide", "api/generated/cupynumeric.fmax", "api/generated/cupynumeric.fmin", "api/generated/cupynumeric.fmod", "api/generated/cupynumeric.frexp", "api/generated/cupynumeric.full", "api/generated/cupynumeric.full_like", "api/generated/cupynumeric.gcd", "api/generated/cupynumeric.gradient", "api/generated/cupynumeric.greater", "api/generated/cupynumeric.greater_equal", "api/generated/cupynumeric.hamming", "api/generated/cupynumeric.hanning", "api/generated/cupynumeric.histogram", "api/generated/cupynumeric.hsplit", "api/generated/cupynumeric.hstack", "api/generated/cupynumeric.hypot", "api/generated/cupynumeric.identity", "api/generated/cupynumeric.imag", "api/generated/cupynumeric.in1d", "api/generated/cupynumeric.indices", "api/generated/cupynumeric.inner", "api/generated/cupynumeric.insert", "api/generated/cupynumeric.invert", "api/generated/cupynumeric.isclose", "api/generated/cupynumeric.iscomplex", "api/generated/cupynumeric.iscomplexobj", "api/generated/cupynumeric.isfinite", "api/generated/cupynumeric.isinf", "api/generated/cupynumeric.isnan", "api/generated/cupynumeric.isneginf", "api/generated/cupynumeric.isposinf", "api/generated/cupynumeric.isreal", "api/generated/cupynumeric.isrealobj", "api/generated/cupynumeric.isscalar", "api/generated/cupynumeric.ix_", "api/generated/cupynumeric.kaiser", "api/generated/cupynumeric.lcm", "api/generated/cupynumeric.ldexp", "api/generated/cupynumeric.left_shift", "api/generated/cupynumeric.less", "api/generated/cupynumeric.less_equal", "api/generated/cupynumeric.linalg.cholesky", "api/generated/cupynumeric.linalg.eig", "api/generated/cupynumeric.linalg.eigh", "api/generated/cupynumeric.linalg.eigvals", "api/generated/cupynumeric.linalg.eigvalsh", "api/generated/cupynumeric.linalg.expm", "api/generated/cupynumeric.linalg.matrix_power", "api/generated/cupynumeric.linalg.multi_dot", "api/generated/cupynumeric.linalg.norm", "api/generated/cupynumeric.linalg.qr", "api/generated/cupynumeric.linalg.solve", "api/generated/cupynumeric.linalg.svd", "api/generated/cupynumeric.linspace", "api/generated/cupynumeric.load", "api/generated/cupynumeric.log", "api/generated/cupynumeric.log10", "api/generated/cupynumeric.log1p", "api/generated/cupynumeric.log2", "api/generated/cupynumeric.logaddexp", "api/generated/cupynumeric.logaddexp2", "api/generated/cupynumeric.logical_and", "api/generated/cupynumeric.logical_not", "api/generated/cupynumeric.logical_or", "api/generated/cupynumeric.logical_xor", "api/generated/cupynumeric.logspace", "api/generated/cupynumeric.mask_indices", "api/generated/cupynumeric.matmul", "api/generated/cupynumeric.maximum", "api/generated/cupynumeric.mean", "api/generated/cupynumeric.median", "api/generated/cupynumeric.meshgrid", "api/generated/cupynumeric.minimum", "api/generated/cupynumeric.mod", "api/generated/cupynumeric.modf", "api/generated/cupynumeric.moveaxis", "api/generated/cupynumeric.multiply", "api/generated/cupynumeric.nan_to_num", "api/generated/cupynumeric.nanargmax", "api/generated/cupynumeric.nanargmin", "api/generated/cupynumeric.nancumprod", "api/generated/cupynumeric.nancumsum", "api/generated/cupynumeric.nanmax", "api/generated/cupynumeric.nanmean", "api/generated/cupynumeric.nanmedian", "api/generated/cupynumeric.nanmin", "api/generated/cupynumeric.nanpercentile", "api/generated/cupynumeric.nanprod", "api/generated/cupynumeric.nanquantile", "api/generated/cupynumeric.nansum", "api/generated/cupynumeric.ndarray.T", "api/generated/cupynumeric.ndarray.__abs__", "api/generated/cupynumeric.ndarray.__add__", "api/generated/cupynumeric.ndarray.__and__", "api/generated/cupynumeric.ndarray.__array__", "api/generated/cupynumeric.ndarray.__bool__", "api/generated/cupynumeric.ndarray.__complex__", "api/generated/cupynumeric.ndarray.__contains__", "api/generated/cupynumeric.ndarray.__copy__", "api/generated/cupynumeric.ndarray.__deepcopy__", "api/generated/cupynumeric.ndarray.__divmod__", "api/generated/cupynumeric.ndarray.__eq__", "api/generated/cupynumeric.ndarray.__float__", "api/generated/cupynumeric.ndarray.__floordiv__", "api/generated/cupynumeric.ndarray.__ge__", "api/generated/cupynumeric.ndarray.__getitem__", "api/generated/cupynumeric.ndarray.__gt__", "api/generated/cupynumeric.ndarray.__iadd__", "api/generated/cupynumeric.ndarray.__iand__", "api/generated/cupynumeric.ndarray.__ifloordiv__", "api/generated/cupynumeric.ndarray.__ilshift__", "api/generated/cupynumeric.ndarray.__imatmul__", "api/generated/cupynumeric.ndarray.__imod__", "api/generated/cupynumeric.ndarray.__imul__", "api/generated/cupynumeric.ndarray.__index__", "api/generated/cupynumeric.ndarray.__int__", "api/generated/cupynumeric.ndarray.__invert__", "api/generated/cupynumeric.ndarray.__ior__", "api/generated/cupynumeric.ndarray.__ipow__", "api/generated/cupynumeric.ndarray.__irshift__", "api/generated/cupynumeric.ndarray.__isub__", "api/generated/cupynumeric.ndarray.__itruediv__", "api/generated/cupynumeric.ndarray.__ixor__", "api/generated/cupynumeric.ndarray.__le__", "api/generated/cupynumeric.ndarray.__len__", "api/generated/cupynumeric.ndarray.__lshift__", "api/generated/cupynumeric.ndarray.__lt__", "api/generated/cupynumeric.ndarray.__matmul__", "api/generated/cupynumeric.ndarray.__mod__", "api/generated/cupynumeric.ndarray.__mul__", "api/generated/cupynumeric.ndarray.__ne__", "api/generated/cupynumeric.ndarray.__neg__", "api/generated/cupynumeric.ndarray.__new__", "api/generated/cupynumeric.ndarray.__or__", "api/generated/cupynumeric.ndarray.__pos__", "api/generated/cupynumeric.ndarray.__pow__", "api/generated/cupynumeric.ndarray.__reduce__", "api/generated/cupynumeric.ndarray.__repr__", "api/generated/cupynumeric.ndarray.__rmatmul__", "api/generated/cupynumeric.ndarray.__rshift__", "api/generated/cupynumeric.ndarray.__setitem__", "api/generated/cupynumeric.ndarray.__setstate__", "api/generated/cupynumeric.ndarray.__str__", "api/generated/cupynumeric.ndarray.__sub__", "api/generated/cupynumeric.ndarray.__truediv__", "api/generated/cupynumeric.ndarray.__xor__", "api/generated/cupynumeric.ndarray.all", "api/generated/cupynumeric.ndarray.any", "api/generated/cupynumeric.ndarray.argmax", "api/generated/cupynumeric.ndarray.argmin", "api/generated/cupynumeric.ndarray.argpartition", "api/generated/cupynumeric.ndarray.argsort", "api/generated/cupynumeric.ndarray.astype", "api/generated/cupynumeric.ndarray.base", "api/generated/cupynumeric.ndarray.choose", "api/generated/cupynumeric.ndarray.clip", "api/generated/cupynumeric.ndarray.compress", "api/generated/cupynumeric.ndarray.conj", "api/generated/cupynumeric.ndarray.conjugate", "api/generated/cupynumeric.ndarray.copy", "api/generated/cupynumeric.ndarray.ctypes", "api/generated/cupynumeric.ndarray.cumprod", "api/generated/cupynumeric.ndarray.cumsum", "api/generated/cupynumeric.ndarray.data", "api/generated/cupynumeric.ndarray.diagonal", "api/generated/cupynumeric.ndarray.dot", "api/generated/cupynumeric.ndarray.dtype", "api/generated/cupynumeric.ndarray.dump", "api/generated/cupynumeric.ndarray.dumps", "api/generated/cupynumeric.ndarray.fill", "api/generated/cupynumeric.ndarray.flags", "api/generated/cupynumeric.ndarray.flat", "api/generated/cupynumeric.ndarray.flatten", "api/generated/cupynumeric.ndarray.flip", "api/generated/cupynumeric.ndarray.getfield", "api/generated/cupynumeric.ndarray.imag", "api/generated/cupynumeric.ndarray.item", "api/generated/cupynumeric.ndarray.itemset", "api/generated/cupynumeric.ndarray.itemsize", "api/generated/cupynumeric.ndarray.max", "api/generated/cupynumeric.ndarray.mean", "api/generated/cupynumeric.ndarray.min", "api/generated/cupynumeric.ndarray.nbytes", "api/generated/cupynumeric.ndarray.ndim", "api/generated/cupynumeric.ndarray.nonzero", "api/generated/cupynumeric.ndarray.partition", "api/generated/cupynumeric.ndarray.prod", "api/generated/cupynumeric.ndarray.put", "api/generated/cupynumeric.ndarray.ravel", "api/generated/cupynumeric.ndarray.real", "api/generated/cupynumeric.ndarray.reshape", "api/generated/cupynumeric.ndarray.searchsorted", "api/generated/cupynumeric.ndarray.setfield", "api/generated/cupynumeric.ndarray.setflags", "api/generated/cupynumeric.ndarray.shape", "api/generated/cupynumeric.ndarray.size", "api/generated/cupynumeric.ndarray.sort", "api/generated/cupynumeric.ndarray.squeeze", "api/generated/cupynumeric.ndarray.strides", "api/generated/cupynumeric.ndarray.sum", "api/generated/cupynumeric.ndarray.swapaxes", "api/generated/cupynumeric.ndarray.take", "api/generated/cupynumeric.ndarray.tobytes", "api/generated/cupynumeric.ndarray.tofile", "api/generated/cupynumeric.ndarray.tolist", "api/generated/cupynumeric.ndarray.tostring", "api/generated/cupynumeric.ndarray.trace", "api/generated/cupynumeric.ndarray.transpose", "api/generated/cupynumeric.ndarray.unique", "api/generated/cupynumeric.ndarray.var", "api/generated/cupynumeric.ndarray.view", "api/generated/cupynumeric.ndim", "api/generated/cupynumeric.negative", "api/generated/cupynumeric.nextafter", "api/generated/cupynumeric.nonzero", "api/generated/cupynumeric.not_equal", "api/generated/cupynumeric.ones", "api/generated/cupynumeric.ones_like", "api/generated/cupynumeric.outer", "api/generated/cupynumeric.packbits", "api/generated/cupynumeric.partition", "api/generated/cupynumeric.percentile", "api/generated/cupynumeric.place", "api/generated/cupynumeric.positive", "api/generated/cupynumeric.power", "api/generated/cupynumeric.prod", "api/generated/cupynumeric.put", "api/generated/cupynumeric.put_along_axis", "api/generated/cupynumeric.putmask", "api/generated/cupynumeric.quantile", "api/generated/cupynumeric.rad2deg", "api/generated/cupynumeric.radians", "api/generated/cupynumeric.random.beta", "api/generated/cupynumeric.random.binomial", "api/generated/cupynumeric.random.bytes", "api/generated/cupynumeric.random.chisquare", "api/generated/cupynumeric.random.default_rng", "api/generated/cupynumeric.random.exponential", "api/generated/cupynumeric.random.f", "api/generated/cupynumeric.random.gamma", "api/generated/cupynumeric.random.geometric", "api/generated/cupynumeric.random.gumbel", "api/generated/cupynumeric.random.hypergeometric", "api/generated/cupynumeric.random.laplace", "api/generated/cupynumeric.random.logistic", "api/generated/cupynumeric.random.lognormal", "api/generated/cupynumeric.random.logseries", "api/generated/cupynumeric.random.negative_binomial", "api/generated/cupynumeric.random.noncentral_chisquare", "api/generated/cupynumeric.random.noncentral_f", "api/generated/cupynumeric.random.normal", "api/generated/cupynumeric.random.pareto", "api/generated/cupynumeric.random.poisson", "api/generated/cupynumeric.random.power", "api/generated/cupynumeric.random.rand", "api/generated/cupynumeric.random.randint", "api/generated/cupynumeric.random.randn", "api/generated/cupynumeric.random.random", "api/generated/cupynumeric.random.random_integers", "api/generated/cupynumeric.random.random_sample", "api/generated/cupynumeric.random.ranf", "api/generated/cupynumeric.random.rayleigh", "api/generated/cupynumeric.random.sample", "api/generated/cupynumeric.random.seed", "api/generated/cupynumeric.random.standard_cauchy", "api/generated/cupynumeric.random.standard_exponential", "api/generated/cupynumeric.random.standard_gamma", "api/generated/cupynumeric.random.standard_t", "api/generated/cupynumeric.random.triangular", "api/generated/cupynumeric.random.uniform", "api/generated/cupynumeric.random.vonmises", "api/generated/cupynumeric.random.wald", "api/generated/cupynumeric.random.weibull", "api/generated/cupynumeric.random.zipf", "api/generated/cupynumeric.ravel", "api/generated/cupynumeric.ravel_multi_index", "api/generated/cupynumeric.real", "api/generated/cupynumeric.real_if_close", "api/generated/cupynumeric.reciprocal", "api/generated/cupynumeric.remainder", "api/generated/cupynumeric.repeat", "api/generated/cupynumeric.reshape", "api/generated/cupynumeric.right_shift", "api/generated/cupynumeric.rint", "api/generated/cupynumeric.roll", "api/generated/cupynumeric.roots", "api/generated/cupynumeric.rot90", "api/generated/cupynumeric.round", "api/generated/cupynumeric.row_stack", "api/generated/cupynumeric.searchsorted", "api/generated/cupynumeric.select", "api/generated/cupynumeric.shape", "api/generated/cupynumeric.sign", "api/generated/cupynumeric.signbit", "api/generated/cupynumeric.sin", "api/generated/cupynumeric.sinh", "api/generated/cupynumeric.sort", "api/generated/cupynumeric.sort_complex", "api/generated/cupynumeric.split", "api/generated/cupynumeric.sqrt", "api/generated/cupynumeric.square", "api/generated/cupynumeric.squeeze", "api/generated/cupynumeric.stack", "api/generated/cupynumeric.subtract", "api/generated/cupynumeric.sum", "api/generated/cupynumeric.swapaxes", "api/generated/cupynumeric.take", "api/generated/cupynumeric.take_along_axis", "api/generated/cupynumeric.tan", "api/generated/cupynumeric.tanh", "api/generated/cupynumeric.tensordot", "api/generated/cupynumeric.tile", "api/generated/cupynumeric.trace", "api/generated/cupynumeric.transpose", "api/generated/cupynumeric.tri", "api/generated/cupynumeric.tril", "api/generated/cupynumeric.tril_indices", "api/generated/cupynumeric.tril_indices_from", "api/generated/cupynumeric.triu", "api/generated/cupynumeric.triu_indices", "api/generated/cupynumeric.triu_indices_from", "api/generated/cupynumeric.true_divide", "api/generated/cupynumeric.trunc", "api/generated/cupynumeric.unique", "api/generated/cupynumeric.unpackbits", "api/generated/cupynumeric.unravel_index", "api/generated/cupynumeric.var", "api/generated/cupynumeric.vdot", "api/generated/cupynumeric.vsplit", "api/generated/cupynumeric.vstack", "api/generated/cupynumeric.where", "api/generated/cupynumeric.zeros", "api/generated/cupynumeric.zeros_like", "api/index", "api/indexing", "api/io", "api/linalg", "api/logic", "api/manipulation", "api/math", "api/ndarray", "api/random", "api/routines", "api/set", "api/settings", "api/sorting", "api/statistics", "api/window", "changes/2509", "changes/2510", "changes/dev", "changes/index", "developer/CONTRIBUTING", "developer/building", "developer/index", "developer/testing", "examples/black_scholes", "examples/cholesky", "examples/compact_finite_difference", "examples/edge_detection", "examples/index", "examples/kmeans", "examples/newton_raphson_2d", "examples/stencil", "examples/torchswe", "faqs", "index", "installation", "oss-licenses", "user/advanced", "user/differences", "user/howtos/benchmarking", "user/howtos/index", "user/howtos/measuring", "user/howtos/patching", "user/index", "user/practices", "user/task", "user/tutorial", "user/usage"], "envversion": {"nbsphinx": 4, "sphinx": 64, "sphinx.domains.c": 3, "sphinx.domains.changeset": 1, "sphinx.domains.citation": 1, "sphinx.domains.cpp": 9, "sphinx.domains.index": 1, "sphinx.domains.javascript": 3, "sphinx.domains.math": 2, "sphinx.domains.python": 4, "sphinx.domains.rst": 2, "sphinx.domains.std": 2, "sphinx.ext.intersphinx": 1}, "filenames": ["_implemented.rst", "api/_bitgenerator.rst", "api/_generator.rst", "api/_grouped.rst", "api/_ndarray.rst", "api/binary.rst", "api/broadcast.rst", "api/classes.rst", "api/comparison.rst", "api/creation.rst", "api/datatype.rst", "api/fft.rst", "api/generated/cupynumeric.absolute.rst", "api/generated/cupynumeric.add.rst", "api/generated/cupynumeric.all.rst", "api/generated/cupynumeric.allclose.rst", "api/generated/cupynumeric.amax.rst", "api/generated/cupynumeric.amin.rst", "api/generated/cupynumeric.angle.rst", "api/generated/cupynumeric.any.rst", "api/generated/cupynumeric.append.rst", "api/generated/cupynumeric.arange.rst", "api/generated/cupynumeric.arccos.rst", "api/generated/cupynumeric.arccosh.rst", "api/generated/cupynumeric.arcsin.rst", "api/generated/cupynumeric.arcsinh.rst", "api/generated/cupynumeric.arctan.rst", "api/generated/cupynumeric.arctan2.rst", "api/generated/cupynumeric.arctanh.rst", "api/generated/cupynumeric.argmax.rst", "api/generated/cupynumeric.argmin.rst", "api/generated/cupynumeric.argpartition.rst", "api/generated/cupynumeric.argsort.rst", "api/generated/cupynumeric.argwhere.rst", "api/generated/cupynumeric.array.rst", "api/generated/cupynumeric.array_equal.rst", "api/generated/cupynumeric.array_split.rst", "api/generated/cupynumeric.asarray.rst", "api/generated/cupynumeric.atleast_1d.rst", "api/generated/cupynumeric.atleast_2d.rst", "api/generated/cupynumeric.atleast_3d.rst", "api/generated/cupynumeric.average.rst", "api/generated/cupynumeric.bartlett.rst", "api/generated/cupynumeric.bincount.rst", "api/generated/cupynumeric.bitwise_and.rst", "api/generated/cupynumeric.bitwise_or.rst", "api/generated/cupynumeric.bitwise_xor.rst", "api/generated/cupynumeric.blackman.rst", "api/generated/cupynumeric.block.rst", "api/generated/cupynumeric.broadcast_arrays.rst", "api/generated/cupynumeric.broadcast_shapes.rst", "api/generated/cupynumeric.broadcast_to.rst", "api/generated/cupynumeric.cbrt.rst", "api/generated/cupynumeric.ceil.rst", "api/generated/cupynumeric.choose.rst", "api/generated/cupynumeric.clip.rst", "api/generated/cupynumeric.column_stack.rst", "api/generated/cupynumeric.compress.rst", "api/generated/cupynumeric.concatenate.rst", "api/generated/cupynumeric.conj.rst", "api/generated/cupynumeric.conjugate.rst", "api/generated/cupynumeric.convolve.rst", "api/generated/cupynumeric.copy.rst", "api/generated/cupynumeric.copysign.rst", "api/generated/cupynumeric.copyto.rst", "api/generated/cupynumeric.cos.rst", "api/generated/cupynumeric.cosh.rst", "api/generated/cupynumeric.count_nonzero.rst", "api/generated/cupynumeric.cov.rst", "api/generated/cupynumeric.cross.rst", "api/generated/cupynumeric.cumprod.rst", "api/generated/cupynumeric.cumsum.rst", "api/generated/cupynumeric.deg2rad.rst", "api/generated/cupynumeric.degrees.rst", "api/generated/cupynumeric.delete.rst", "api/generated/cupynumeric.diag.rst", "api/generated/cupynumeric.diag_indices.rst", "api/generated/cupynumeric.diag_indices_from.rst", "api/generated/cupynumeric.diagflat.rst", "api/generated/cupynumeric.diagonal.rst", "api/generated/cupynumeric.diff.rst", "api/generated/cupynumeric.digitize.rst", "api/generated/cupynumeric.divide.rst", "api/generated/cupynumeric.dot.rst", "api/generated/cupynumeric.dsplit.rst", "api/generated/cupynumeric.dstack.rst", "api/generated/cupynumeric.einsum.rst", "api/generated/cupynumeric.einsum_path.rst", "api/generated/cupynumeric.empty.rst", "api/generated/cupynumeric.empty_like.rst", "api/generated/cupynumeric.equal.rst", "api/generated/cupynumeric.exp.rst", "api/generated/cupynumeric.exp2.rst", "api/generated/cupynumeric.expand_dims.rst", "api/generated/cupynumeric.expm1.rst", "api/generated/cupynumeric.extract.rst", "api/generated/cupynumeric.eye.rst", "api/generated/cupynumeric.fabs.rst", "api/generated/cupynumeric.fft.fft.rst", "api/generated/cupynumeric.fft.fft2.rst", "api/generated/cupynumeric.fft.fftn.rst", "api/generated/cupynumeric.fft.fftshift.rst", "api/generated/cupynumeric.fft.hfft.rst", "api/generated/cupynumeric.fft.ifft.rst", "api/generated/cupynumeric.fft.ifft2.rst", "api/generated/cupynumeric.fft.ifftn.rst", "api/generated/cupynumeric.fft.ifftshift.rst", "api/generated/cupynumeric.fft.ihfft.rst", "api/generated/cupynumeric.fft.irfft.rst", "api/generated/cupynumeric.fft.irfft2.rst", "api/generated/cupynumeric.fft.irfftn.rst", "api/generated/cupynumeric.fft.rfft.rst", "api/generated/cupynumeric.fft.rfft2.rst", "api/generated/cupynumeric.fft.rfftn.rst", "api/generated/cupynumeric.fill_diagonal.rst", "api/generated/cupynumeric.find_common_type.rst", "api/generated/cupynumeric.flatnonzero.rst", "api/generated/cupynumeric.flip.rst", "api/generated/cupynumeric.fliplr.rst", "api/generated/cupynumeric.flipud.rst", "api/generated/cupynumeric.float_power.rst", "api/generated/cupynumeric.floor.rst", "api/generated/cupynumeric.floor_divide.rst", "api/generated/cupynumeric.fmax.rst", "api/generated/cupynumeric.fmin.rst", "api/generated/cupynumeric.fmod.rst", "api/generated/cupynumeric.frexp.rst", "api/generated/cupynumeric.full.rst", "api/generated/cupynumeric.full_like.rst", "api/generated/cupynumeric.gcd.rst", "api/generated/cupynumeric.gradient.rst", "api/generated/cupynumeric.greater.rst", "api/generated/cupynumeric.greater_equal.rst", "api/generated/cupynumeric.hamming.rst", "api/generated/cupynumeric.hanning.rst", "api/generated/cupynumeric.histogram.rst", "api/generated/cupynumeric.hsplit.rst", "api/generated/cupynumeric.hstack.rst", "api/generated/cupynumeric.hypot.rst", "api/generated/cupynumeric.identity.rst", "api/generated/cupynumeric.imag.rst", "api/generated/cupynumeric.in1d.rst", "api/generated/cupynumeric.indices.rst", "api/generated/cupynumeric.inner.rst", "api/generated/cupynumeric.insert.rst", "api/generated/cupynumeric.invert.rst", "api/generated/cupynumeric.isclose.rst", "api/generated/cupynumeric.iscomplex.rst", "api/generated/cupynumeric.iscomplexobj.rst", "api/generated/cupynumeric.isfinite.rst", "api/generated/cupynumeric.isinf.rst", "api/generated/cupynumeric.isnan.rst", "api/generated/cupynumeric.isneginf.rst", "api/generated/cupynumeric.isposinf.rst", "api/generated/cupynumeric.isreal.rst", "api/generated/cupynumeric.isrealobj.rst", "api/generated/cupynumeric.isscalar.rst", "api/generated/cupynumeric.ix_.rst", "api/generated/cupynumeric.kaiser.rst", "api/generated/cupynumeric.lcm.rst", "api/generated/cupynumeric.ldexp.rst", "api/generated/cupynumeric.left_shift.rst", "api/generated/cupynumeric.less.rst", "api/generated/cupynumeric.less_equal.rst", "api/generated/cupynumeric.linalg.cholesky.rst", "api/generated/cupynumeric.linalg.eig.rst", "api/generated/cupynumeric.linalg.eigh.rst", "api/generated/cupynumeric.linalg.eigvals.rst", "api/generated/cupynumeric.linalg.eigvalsh.rst", "api/generated/cupynumeric.linalg.expm.rst", "api/generated/cupynumeric.linalg.matrix_power.rst", "api/generated/cupynumeric.linalg.multi_dot.rst", "api/generated/cupynumeric.linalg.norm.rst", "api/generated/cupynumeric.linalg.qr.rst", "api/generated/cupynumeric.linalg.solve.rst", "api/generated/cupynumeric.linalg.svd.rst", "api/generated/cupynumeric.linspace.rst", "api/generated/cupynumeric.load.rst", "api/generated/cupynumeric.log.rst", "api/generated/cupynumeric.log10.rst", "api/generated/cupynumeric.log1p.rst", "api/generated/cupynumeric.log2.rst", "api/generated/cupynumeric.logaddexp.rst", "api/generated/cupynumeric.logaddexp2.rst", "api/generated/cupynumeric.logical_and.rst", "api/generated/cupynumeric.logical_not.rst", "api/generated/cupynumeric.logical_or.rst", "api/generated/cupynumeric.logical_xor.rst", "api/generated/cupynumeric.logspace.rst", "api/generated/cupynumeric.mask_indices.rst", "api/generated/cupynumeric.matmul.rst", "api/generated/cupynumeric.maximum.rst", "api/generated/cupynumeric.mean.rst", "api/generated/cupynumeric.median.rst", "api/generated/cupynumeric.meshgrid.rst", "api/generated/cupynumeric.minimum.rst", "api/generated/cupynumeric.mod.rst", "api/generated/cupynumeric.modf.rst", "api/generated/cupynumeric.moveaxis.rst", "api/generated/cupynumeric.multiply.rst", "api/generated/cupynumeric.nan_to_num.rst", "api/generated/cupynumeric.nanargmax.rst", "api/generated/cupynumeric.nanargmin.rst", "api/generated/cupynumeric.nancumprod.rst", "api/generated/cupynumeric.nancumsum.rst", "api/generated/cupynumeric.nanmax.rst", "api/generated/cupynumeric.nanmean.rst", "api/generated/cupynumeric.nanmedian.rst", "api/generated/cupynumeric.nanmin.rst", "api/generated/cupynumeric.nanpercentile.rst", "api/generated/cupynumeric.nanprod.rst", "api/generated/cupynumeric.nanquantile.rst", "api/generated/cupynumeric.nansum.rst", "api/generated/cupynumeric.ndarray.T.rst", "api/generated/cupynumeric.ndarray.__abs__.rst", "api/generated/cupynumeric.ndarray.__add__.rst", "api/generated/cupynumeric.ndarray.__and__.rst", "api/generated/cupynumeric.ndarray.__array__.rst", "api/generated/cupynumeric.ndarray.__bool__.rst", "api/generated/cupynumeric.ndarray.__complex__.rst", "api/generated/cupynumeric.ndarray.__contains__.rst", "api/generated/cupynumeric.ndarray.__copy__.rst", "api/generated/cupynumeric.ndarray.__deepcopy__.rst", "api/generated/cupynumeric.ndarray.__divmod__.rst", "api/generated/cupynumeric.ndarray.__eq__.rst", "api/generated/cupynumeric.ndarray.__float__.rst", "api/generated/cupynumeric.ndarray.__floordiv__.rst", "api/generated/cupynumeric.ndarray.__ge__.rst", "api/generated/cupynumeric.ndarray.__getitem__.rst", "api/generated/cupynumeric.ndarray.__gt__.rst", "api/generated/cupynumeric.ndarray.__iadd__.rst", "api/generated/cupynumeric.ndarray.__iand__.rst", "api/generated/cupynumeric.ndarray.__ifloordiv__.rst", "api/generated/cupynumeric.ndarray.__ilshift__.rst", "api/generated/cupynumeric.ndarray.__imatmul__.rst", "api/generated/cupynumeric.ndarray.__imod__.rst", "api/generated/cupynumeric.ndarray.__imul__.rst", "api/generated/cupynumeric.ndarray.__index__.rst", "api/generated/cupynumeric.ndarray.__int__.rst", "api/generated/cupynumeric.ndarray.__invert__.rst", "api/generated/cupynumeric.ndarray.__ior__.rst", "api/generated/cupynumeric.ndarray.__ipow__.rst", "api/generated/cupynumeric.ndarray.__irshift__.rst", "api/generated/cupynumeric.ndarray.__isub__.rst", "api/generated/cupynumeric.ndarray.__itruediv__.rst", "api/generated/cupynumeric.ndarray.__ixor__.rst", "api/generated/cupynumeric.ndarray.__le__.rst", "api/generated/cupynumeric.ndarray.__len__.rst", "api/generated/cupynumeric.ndarray.__lshift__.rst", "api/generated/cupynumeric.ndarray.__lt__.rst", "api/generated/cupynumeric.ndarray.__matmul__.rst", "api/generated/cupynumeric.ndarray.__mod__.rst", "api/generated/cupynumeric.ndarray.__mul__.rst", "api/generated/cupynumeric.ndarray.__ne__.rst", "api/generated/cupynumeric.ndarray.__neg__.rst", "api/generated/cupynumeric.ndarray.__new__.rst", "api/generated/cupynumeric.ndarray.__or__.rst", "api/generated/cupynumeric.ndarray.__pos__.rst", "api/generated/cupynumeric.ndarray.__pow__.rst", "api/generated/cupynumeric.ndarray.__reduce__.rst", "api/generated/cupynumeric.ndarray.__repr__.rst", "api/generated/cupynumeric.ndarray.__rmatmul__.rst", "api/generated/cupynumeric.ndarray.__rshift__.rst", "api/generated/cupynumeric.ndarray.__setitem__.rst", "api/generated/cupynumeric.ndarray.__setstate__.rst", "api/generated/cupynumeric.ndarray.__str__.rst", "api/generated/cupynumeric.ndarray.__sub__.rst", "api/generated/cupynumeric.ndarray.__truediv__.rst", "api/generated/cupynumeric.ndarray.__xor__.rst", "api/generated/cupynumeric.ndarray.all.rst", "api/generated/cupynumeric.ndarray.any.rst", "api/generated/cupynumeric.ndarray.argmax.rst", "api/generated/cupynumeric.ndarray.argmin.rst", "api/generated/cupynumeric.ndarray.argpartition.rst", "api/generated/cupynumeric.ndarray.argsort.rst", "api/generated/cupynumeric.ndarray.astype.rst", "api/generated/cupynumeric.ndarray.base.rst", "api/generated/cupynumeric.ndarray.choose.rst", "api/generated/cupynumeric.ndarray.clip.rst", "api/generated/cupynumeric.ndarray.compress.rst", "api/generated/cupynumeric.ndarray.conj.rst", "api/generated/cupynumeric.ndarray.conjugate.rst", "api/generated/cupynumeric.ndarray.copy.rst", "api/generated/cupynumeric.ndarray.ctypes.rst", "api/generated/cupynumeric.ndarray.cumprod.rst", "api/generated/cupynumeric.ndarray.cumsum.rst", "api/generated/cupynumeric.ndarray.data.rst", "api/generated/cupynumeric.ndarray.diagonal.rst", "api/generated/cupynumeric.ndarray.dot.rst", "api/generated/cupynumeric.ndarray.dtype.rst", "api/generated/cupynumeric.ndarray.dump.rst", "api/generated/cupynumeric.ndarray.dumps.rst", "api/generated/cupynumeric.ndarray.fill.rst", "api/generated/cupynumeric.ndarray.flags.rst", "api/generated/cupynumeric.ndarray.flat.rst", "api/generated/cupynumeric.ndarray.flatten.rst", "api/generated/cupynumeric.ndarray.flip.rst", "api/generated/cupynumeric.ndarray.getfield.rst", "api/generated/cupynumeric.ndarray.imag.rst", "api/generated/cupynumeric.ndarray.item.rst", "api/generated/cupynumeric.ndarray.itemset.rst", "api/generated/cupynumeric.ndarray.itemsize.rst", "api/generated/cupynumeric.ndarray.max.rst", "api/generated/cupynumeric.ndarray.mean.rst", "api/generated/cupynumeric.ndarray.min.rst", "api/generated/cupynumeric.ndarray.nbytes.rst", "api/generated/cupynumeric.ndarray.ndim.rst", "api/generated/cupynumeric.ndarray.nonzero.rst", "api/generated/cupynumeric.ndarray.partition.rst", "api/generated/cupynumeric.ndarray.prod.rst", "api/generated/cupynumeric.ndarray.put.rst", "api/generated/cupynumeric.ndarray.ravel.rst", "api/generated/cupynumeric.ndarray.real.rst", "api/generated/cupynumeric.ndarray.reshape.rst", "api/generated/cupynumeric.ndarray.searchsorted.rst", "api/generated/cupynumeric.ndarray.setfield.rst", "api/generated/cupynumeric.ndarray.setflags.rst", "api/generated/cupynumeric.ndarray.shape.rst", "api/generated/cupynumeric.ndarray.size.rst", "api/generated/cupynumeric.ndarray.sort.rst", "api/generated/cupynumeric.ndarray.squeeze.rst", "api/generated/cupynumeric.ndarray.strides.rst", "api/generated/cupynumeric.ndarray.sum.rst", "api/generated/cupynumeric.ndarray.swapaxes.rst", "api/generated/cupynumeric.ndarray.take.rst", "api/generated/cupynumeric.ndarray.tobytes.rst", "api/generated/cupynumeric.ndarray.tofile.rst", "api/generated/cupynumeric.ndarray.tolist.rst", "api/generated/cupynumeric.ndarray.tostring.rst", "api/generated/cupynumeric.ndarray.trace.rst", "api/generated/cupynumeric.ndarray.transpose.rst", "api/generated/cupynumeric.ndarray.unique.rst", "api/generated/cupynumeric.ndarray.var.rst", "api/generated/cupynumeric.ndarray.view.rst", "api/generated/cupynumeric.ndim.rst", "api/generated/cupynumeric.negative.rst", "api/generated/cupynumeric.nextafter.rst", "api/generated/cupynumeric.nonzero.rst", "api/generated/cupynumeric.not_equal.rst", "api/generated/cupynumeric.ones.rst", "api/generated/cupynumeric.ones_like.rst", "api/generated/cupynumeric.outer.rst", "api/generated/cupynumeric.packbits.rst", "api/generated/cupynumeric.partition.rst", "api/generated/cupynumeric.percentile.rst", "api/generated/cupynumeric.place.rst", "api/generated/cupynumeric.positive.rst", "api/generated/cupynumeric.power.rst", "api/generated/cupynumeric.prod.rst", "api/generated/cupynumeric.put.rst", "api/generated/cupynumeric.put_along_axis.rst", "api/generated/cupynumeric.putmask.rst", "api/generated/cupynumeric.quantile.rst", "api/generated/cupynumeric.rad2deg.rst", "api/generated/cupynumeric.radians.rst", "api/generated/cupynumeric.random.beta.rst", "api/generated/cupynumeric.random.binomial.rst", "api/generated/cupynumeric.random.bytes.rst", "api/generated/cupynumeric.random.chisquare.rst", "api/generated/cupynumeric.random.default_rng.rst", "api/generated/cupynumeric.random.exponential.rst", "api/generated/cupynumeric.random.f.rst", "api/generated/cupynumeric.random.gamma.rst", "api/generated/cupynumeric.random.geometric.rst", "api/generated/cupynumeric.random.gumbel.rst", "api/generated/cupynumeric.random.hypergeometric.rst", "api/generated/cupynumeric.random.laplace.rst", "api/generated/cupynumeric.random.logistic.rst", "api/generated/cupynumeric.random.lognormal.rst", "api/generated/cupynumeric.random.logseries.rst", "api/generated/cupynumeric.random.negative_binomial.rst", "api/generated/cupynumeric.random.noncentral_chisquare.rst", "api/generated/cupynumeric.random.noncentral_f.rst", "api/generated/cupynumeric.random.normal.rst", "api/generated/cupynumeric.random.pareto.rst", "api/generated/cupynumeric.random.poisson.rst", "api/generated/cupynumeric.random.power.rst", "api/generated/cupynumeric.random.rand.rst", "api/generated/cupynumeric.random.randint.rst", "api/generated/cupynumeric.random.randn.rst", "api/generated/cupynumeric.random.random.rst", "api/generated/cupynumeric.random.random_integers.rst", "api/generated/cupynumeric.random.random_sample.rst", "api/generated/cupynumeric.random.ranf.rst", "api/generated/cupynumeric.random.rayleigh.rst", "api/generated/cupynumeric.random.sample.rst", "api/generated/cupynumeric.random.seed.rst", "api/generated/cupynumeric.random.standard_cauchy.rst", "api/generated/cupynumeric.random.standard_exponential.rst", "api/generated/cupynumeric.random.standard_gamma.rst", "api/generated/cupynumeric.random.standard_t.rst", "api/generated/cupynumeric.random.triangular.rst", "api/generated/cupynumeric.random.uniform.rst", "api/generated/cupynumeric.random.vonmises.rst", "api/generated/cupynumeric.random.wald.rst", "api/generated/cupynumeric.random.weibull.rst", "api/generated/cupynumeric.random.zipf.rst", "api/generated/cupynumeric.ravel.rst", "api/generated/cupynumeric.ravel_multi_index.rst", "api/generated/cupynumeric.real.rst", "api/generated/cupynumeric.real_if_close.rst", "api/generated/cupynumeric.reciprocal.rst", "api/generated/cupynumeric.remainder.rst", "api/generated/cupynumeric.repeat.rst", "api/generated/cupynumeric.reshape.rst", "api/generated/cupynumeric.right_shift.rst", "api/generated/cupynumeric.rint.rst", "api/generated/cupynumeric.roll.rst", "api/generated/cupynumeric.roots.rst", "api/generated/cupynumeric.rot90.rst", "api/generated/cupynumeric.round.rst", "api/generated/cupynumeric.row_stack.rst", "api/generated/cupynumeric.searchsorted.rst", "api/generated/cupynumeric.select.rst", "api/generated/cupynumeric.shape.rst", "api/generated/cupynumeric.sign.rst", "api/generated/cupynumeric.signbit.rst", "api/generated/cupynumeric.sin.rst", "api/generated/cupynumeric.sinh.rst", "api/generated/cupynumeric.sort.rst", "api/generated/cupynumeric.sort_complex.rst", "api/generated/cupynumeric.split.rst", "api/generated/cupynumeric.sqrt.rst", "api/generated/cupynumeric.square.rst", "api/generated/cupynumeric.squeeze.rst", "api/generated/cupynumeric.stack.rst", "api/generated/cupynumeric.subtract.rst", "api/generated/cupynumeric.sum.rst", "api/generated/cupynumeric.swapaxes.rst", "api/generated/cupynumeric.take.rst", "api/generated/cupynumeric.take_along_axis.rst", "api/generated/cupynumeric.tan.rst", "api/generated/cupynumeric.tanh.rst", "api/generated/cupynumeric.tensordot.rst", "api/generated/cupynumeric.tile.rst", "api/generated/cupynumeric.trace.rst", "api/generated/cupynumeric.transpose.rst", "api/generated/cupynumeric.tri.rst", "api/generated/cupynumeric.tril.rst", "api/generated/cupynumeric.tril_indices.rst", "api/generated/cupynumeric.tril_indices_from.rst", "api/generated/cupynumeric.triu.rst", "api/generated/cupynumeric.triu_indices.rst", "api/generated/cupynumeric.triu_indices_from.rst", "api/generated/cupynumeric.true_divide.rst", "api/generated/cupynumeric.trunc.rst", "api/generated/cupynumeric.unique.rst", "api/generated/cupynumeric.unpackbits.rst", "api/generated/cupynumeric.unravel_index.rst", "api/generated/cupynumeric.var.rst", "api/generated/cupynumeric.vdot.rst", "api/generated/cupynumeric.vsplit.rst", "api/generated/cupynumeric.vstack.rst", "api/generated/cupynumeric.where.rst", "api/generated/cupynumeric.zeros.rst", "api/generated/cupynumeric.zeros_like.rst", "api/index.rst", "api/indexing.rst", "api/io.rst", "api/linalg.rst", "api/logic.rst", "api/manipulation.rst", "api/math.rst", "api/ndarray.rst", "api/random.rst", "api/routines.rst", "api/set.rst", "api/settings.rst", "api/sorting.rst", "api/statistics.rst", "api/window.rst", "changes/2509.rst", "changes/2510.rst", "changes/dev.rst", "changes/index.rst", "developer/CONTRIBUTING.md", "developer/building.rst", "developer/index.rst", "developer/testing.rst", "examples/black_scholes.ipynb", "examples/cholesky.ipynb", "examples/compact_finite_difference.ipynb", "examples/edge_detection.ipynb", "examples/index.rst", "examples/kmeans.ipynb", "examples/newton_raphson_2d.ipynb", "examples/stencil.ipynb", "examples/torchswe.ipynb", "faqs.rst", "index.rst", "installation.rst", "oss-licenses.rst", "user/advanced.rst", "user/differences.rst", "user/howtos/benchmarking.rst", "user/howtos/index.rst", "user/howtos/measuring.rst", "user/howtos/patching.rst", "user/index.rst", "user/practices.rst", "user/task.rst", "user/tutorial.rst", "user/usage.rst"], "indexentries": {"__abs__() (cupynumeric.ndarray method)": [[214, "cupynumeric.ndarray.__abs__", false]], "__add__() (cupynumeric.ndarray method)": [[215, "cupynumeric.ndarray.__add__", false]], "__and__() (cupynumeric.ndarray method)": [[216, "cupynumeric.ndarray.__and__", false]], "__array__() (cupynumeric.ndarray method)": [[217, "cupynumeric.ndarray.__array__", false]], "__bool__() (cupynumeric.ndarray method)": [[218, "cupynumeric.ndarray.__bool__", false]], "__complex__() (cupynumeric.ndarray method)": [[219, "cupynumeric.ndarray.__complex__", false]], "__contains__() (cupynumeric.ndarray method)": [[220, "cupynumeric.ndarray.__contains__", false]], "__copy__() (cupynumeric.ndarray method)": [[221, "cupynumeric.ndarray.__copy__", false]], "__deepcopy__() (cupynumeric.ndarray method)": [[222, "cupynumeric.ndarray.__deepcopy__", false]], "__divmod__() (cupynumeric.ndarray method)": [[223, "cupynumeric.ndarray.__divmod__", false]], "__eq__() (cupynumeric.ndarray method)": [[224, "cupynumeric.ndarray.__eq__", false]], "__float__() (cupynumeric.ndarray method)": [[225, "cupynumeric.ndarray.__float__", false]], "__floordiv__() (cupynumeric.ndarray method)": [[226, "cupynumeric.ndarray.__floordiv__", false]], "__ge__() (cupynumeric.ndarray method)": [[227, "cupynumeric.ndarray.__ge__", false]], "__getitem__() (cupynumeric.ndarray method)": [[228, "cupynumeric.ndarray.__getitem__", false]], "__gt__() (cupynumeric.ndarray method)": [[229, "cupynumeric.ndarray.__gt__", false]], "__iadd__() (cupynumeric.ndarray method)": [[230, "cupynumeric.ndarray.__iadd__", false]], "__iand__() (cupynumeric.ndarray method)": [[231, "cupynumeric.ndarray.__iand__", false]], "__ifloordiv__() (cupynumeric.ndarray method)": [[232, "cupynumeric.ndarray.__ifloordiv__", false]], "__ilshift__() (cupynumeric.ndarray method)": [[233, "cupynumeric.ndarray.__ilshift__", false]], "__imatmul__() (cupynumeric.ndarray method)": [[234, "cupynumeric.ndarray.__imatmul__", false]], "__imod__() (cupynumeric.ndarray method)": [[235, "cupynumeric.ndarray.__imod__", false]], "__imul__() (cupynumeric.ndarray method)": [[236, "cupynumeric.ndarray.__imul__", false]], "__index__() (cupynumeric.ndarray method)": [[237, "cupynumeric.ndarray.__index__", false]], "__init__() (cupynumeric.ndarray method)": [[4, "cupynumeric.ndarray.__init__", false]], "__init__() (cupynumeric.random.bitgenerator method)": [[1, "cupynumeric.random.BitGenerator.__init__", false]], "__init__() (cupynumeric.random.generator method)": [[2, "cupynumeric.random.Generator.__init__", false]], "__int__() (cupynumeric.ndarray method)": [[238, "cupynumeric.ndarray.__int__", false]], "__invert__() (cupynumeric.ndarray method)": [[239, "cupynumeric.ndarray.__invert__", false]], "__ior__() (cupynumeric.ndarray method)": [[240, "cupynumeric.ndarray.__ior__", false]], "__ipow__() (cupynumeric.ndarray method)": [[241, "cupynumeric.ndarray.__ipow__", false]], "__irshift__() (cupynumeric.ndarray method)": [[242, "cupynumeric.ndarray.__irshift__", false]], "__isub__() (cupynumeric.ndarray method)": [[243, "cupynumeric.ndarray.__isub__", false]], "__itruediv__() (cupynumeric.ndarray method)": [[244, "cupynumeric.ndarray.__itruediv__", false]], "__ixor__() (cupynumeric.ndarray method)": [[245, "cupynumeric.ndarray.__ixor__", false]], "__le__() (cupynumeric.ndarray method)": [[246, "cupynumeric.ndarray.__le__", false]], "__len__() (cupynumeric.ndarray method)": [[247, "cupynumeric.ndarray.__len__", false]], "__lshift__() (cupynumeric.ndarray method)": [[248, "cupynumeric.ndarray.__lshift__", false]], "__lt__() (cupynumeric.ndarray method)": [[249, "cupynumeric.ndarray.__lt__", false]], "__matmul__() (cupynumeric.ndarray method)": [[250, "cupynumeric.ndarray.__matmul__", false]], "__mod__() (cupynumeric.ndarray method)": [[251, "cupynumeric.ndarray.__mod__", false]], "__mul__() (cupynumeric.ndarray method)": [[252, "cupynumeric.ndarray.__mul__", false]], "__ne__() (cupynumeric.ndarray method)": [[253, "cupynumeric.ndarray.__ne__", false]], "__neg__() (cupynumeric.ndarray method)": [[254, "cupynumeric.ndarray.__neg__", false]], "__new__() (cupynumeric.ndarray method)": [[255, "cupynumeric.ndarray.__new__", false]], "__or__() (cupynumeric.ndarray method)": [[256, "cupynumeric.ndarray.__or__", false]], "__pos__() (cupynumeric.ndarray method)": [[257, "cupynumeric.ndarray.__pos__", false]], "__pow__() (cupynumeric.ndarray method)": [[258, "cupynumeric.ndarray.__pow__", false]], "__reduce__() (cupynumeric.ndarray method)": [[259, "cupynumeric.ndarray.__reduce__", false]], "__repr__() (cupynumeric.ndarray method)": [[260, "cupynumeric.ndarray.__repr__", false]], "__rmatmul__() (cupynumeric.ndarray method)": [[261, "cupynumeric.ndarray.__rmatmul__", false]], "__rshift__() (cupynumeric.ndarray method)": [[262, "cupynumeric.ndarray.__rshift__", false]], "__setitem__() (cupynumeric.ndarray method)": [[263, "cupynumeric.ndarray.__setitem__", false]], "__setstate__() (cupynumeric.ndarray method)": [[264, "cupynumeric.ndarray.__setstate__", false]], "__str__() (cupynumeric.ndarray method)": [[265, "cupynumeric.ndarray.__str__", false]], "__sub__() (cupynumeric.ndarray method)": [[266, "cupynumeric.ndarray.__sub__", false]], "__truediv__() (cupynumeric.ndarray method)": [[267, "cupynumeric.ndarray.__truediv__", false]], "__xor__() (cupynumeric.ndarray method)": [[268, "cupynumeric.ndarray.__xor__", false]], "absolute() (in module cupynumeric)": [[12, "cupynumeric.absolute", false]], "add() (in module cupynumeric)": [[13, "cupynumeric.add", false]], "aligned (in module cupynumeric)": [[293, "cupynumeric.ALIGNED", false]], "all() (cupynumeric.ndarray method)": [[269, "cupynumeric.ndarray.all", false]], "all() (in module cupynumeric)": [[14, "cupynumeric.all", false]], "allclose() (in module cupynumeric)": [[15, "cupynumeric.allclose", false]], "amax() (in module cupynumeric)": [[16, "cupynumeric.amax", false]], "amin() (in module cupynumeric)": [[17, "cupynumeric.amin", false]], "angle() (in module cupynumeric)": [[18, "cupynumeric.angle", false]], "any() (cupynumeric.ndarray method)": [[270, "cupynumeric.ndarray.any", false]], "any() (in module cupynumeric)": [[19, "cupynumeric.any", false]], "append() (in module cupynumeric)": [[20, "cupynumeric.append", false]], "arange() (in module cupynumeric)": [[21, "cupynumeric.arange", false]], "arccos() (in module cupynumeric)": [[22, "cupynumeric.arccos", false]], "arccosh() (in module cupynumeric)": [[23, "cupynumeric.arccosh", false]], "arcsin() (in module cupynumeric)": [[24, "cupynumeric.arcsin", false]], "arcsinh() (in module cupynumeric)": [[25, "cupynumeric.arcsinh", false]], "arctan() (in module cupynumeric)": [[26, "cupynumeric.arctan", false]], "arctan2() (in module cupynumeric)": [[27, "cupynumeric.arctan2", false]], "arctanh() (in module cupynumeric)": [[28, "cupynumeric.arctanh", false]], "argmax() (cupynumeric.ndarray method)": [[271, "cupynumeric.ndarray.argmax", false]], "argmax() (in module cupynumeric)": [[29, "cupynumeric.argmax", false]], "argmin() (cupynumeric.ndarray method)": [[272, "cupynumeric.ndarray.argmin", false]], "argmin() (in module cupynumeric)": [[30, "cupynumeric.argmin", false]], "argpartition() (cupynumeric.ndarray method)": [[273, "cupynumeric.ndarray.argpartition", false]], "argpartition() (in module cupynumeric)": [[31, "cupynumeric.argpartition", false]], "argsort() (cupynumeric.ndarray method)": [[274, "cupynumeric.ndarray.argsort", false]], "argsort() (in module cupynumeric)": [[32, "cupynumeric.argsort", false]], "argwhere() (in module cupynumeric)": [[33, "cupynumeric.argwhere", false]], "array() (in module cupynumeric)": [[34, "cupynumeric.array", false]], "array_equal() (in module cupynumeric)": [[35, "cupynumeric.array_equal", false]], "array_split() (in module cupynumeric)": [[36, "cupynumeric.array_split", false]], "asarray() (in module cupynumeric)": [[37, "cupynumeric.asarray", false]], "astype() (cupynumeric.ndarray method)": [[275, "cupynumeric.ndarray.astype", false]], "atleast_1d() (in module cupynumeric)": [[38, "cupynumeric.atleast_1d", false]], "atleast_2d() (in module cupynumeric)": [[39, "cupynumeric.atleast_2d", false]], "atleast_3d() (in module cupynumeric)": [[40, "cupynumeric.atleast_3d", false]], "average() (in module cupynumeric)": [[41, "cupynumeric.average", false]], "bartlett() (in module cupynumeric)": [[42, "cupynumeric.bartlett", false]], "base (cupynumeric.ndarray property)": [[276, "cupynumeric.ndarray.base", false]], "behaved (in module cupynumeric)": [[293, "cupynumeric.BEHAVED", false]], "beta() (in module cupynumeric.random)": [[355, "cupynumeric.random.beta", false]], "bincount() (in module cupynumeric)": [[43, "cupynumeric.bincount", false]], "binomial() (in module cupynumeric.random)": [[356, "cupynumeric.random.binomial", false]], "bitgenerator (class in cupynumeric.random)": [[1, "cupynumeric.random.BitGenerator", false]], "bitwise_and() (in module cupynumeric)": [[44, "cupynumeric.bitwise_and", false]], "bitwise_or() (in module cupynumeric)": [[45, "cupynumeric.bitwise_or", false]], "bitwise_xor() (in module cupynumeric)": [[46, "cupynumeric.bitwise_xor", false]], "blackman() (in module cupynumeric)": [[47, "cupynumeric.blackman", false]], "block() (in module cupynumeric)": [[48, "cupynumeric.block", false]], "broadcast (class in cupynumeric)": [[6, "cupynumeric.broadcast", false]], "broadcast_arrays() (in module cupynumeric)": [[49, "cupynumeric.broadcast_arrays", false]], "broadcast_shapes() (in module cupynumeric)": [[50, "cupynumeric.broadcast_shapes", false]], "broadcast_to() (in module cupynumeric)": [[51, "cupynumeric.broadcast_to", false]], "bytes() (in module cupynumeric.random)": [[357, "cupynumeric.random.bytes", false]], "c_contiguous (cupynumeric.ndarray attribute)": [[293, "cupynumeric.ndarray.C_CONTIGUOUS", false]], "carray (in module cupynumeric)": [[293, "cupynumeric.CARRAY", false]], "cbrt() (in module cupynumeric)": [[52, "cupynumeric.cbrt", false]], "ceil() (in module cupynumeric)": [[53, "cupynumeric.ceil", false]], "chisquare() (in module cupynumeric.random)": [[358, "cupynumeric.random.chisquare", false]], "cholesky() (in module cupynumeric.linalg)": [[164, "cupynumeric.linalg.cholesky", false]], "choose() (cupynumeric.ndarray method)": [[277, "cupynumeric.ndarray.choose", false]], "choose() (in module cupynumeric)": [[54, "cupynumeric.choose", false]], "clip() (cupynumeric.ndarray method)": [[278, "cupynumeric.ndarray.clip", false]], "clip() (in module cupynumeric)": [[55, "cupynumeric.clip", false]], "column_stack() (in module cupynumeric)": [[56, "cupynumeric.column_stack", false]], "compress() (cupynumeric.ndarray method)": [[279, "cupynumeric.ndarray.compress", false]], "compress() (in module cupynumeric)": [[57, "cupynumeric.compress", false]], "concatenate() (in module cupynumeric)": [[58, "cupynumeric.concatenate", false]], "conj() (cupynumeric.ndarray method)": [[280, "cupynumeric.ndarray.conj", false]], "conj() (in module cupynumeric)": [[59, "cupynumeric.conj", false]], "conjugate() (cupynumeric.ndarray method)": [[281, "cupynumeric.ndarray.conjugate", false]], "conjugate() (in module cupynumeric)": [[60, "cupynumeric.conjugate", false]], "convolve() (in module cupynumeric)": [[61, "cupynumeric.convolve", false]], "copy() (cupynumeric.ndarray method)": [[282, "cupynumeric.ndarray.copy", false]], "copy() (in module cupynumeric)": [[62, "cupynumeric.copy", false]], "copysign() (in module cupynumeric)": [[63, "cupynumeric.copysign", false]], "copyto() (in module cupynumeric)": [[64, "cupynumeric.copyto", false]], "cos() (in module cupynumeric)": [[65, "cupynumeric.cos", false]], "cosh() (in module cupynumeric)": [[66, "cupynumeric.cosh", false]], "count_nonzero() (in module cupynumeric)": [[67, "cupynumeric.count_nonzero", false]], "cov() (in module cupynumeric)": [[68, "cupynumeric.cov", false]], "cross() (in module cupynumeric)": [[69, "cupynumeric.cross", false]], "ctypes (cupynumeric.ndarray property)": [[283, "cupynumeric.ndarray.ctypes", false]], "cumprod() (cupynumeric.ndarray method)": [[284, "cupynumeric.ndarray.cumprod", false]], "cumprod() (in module cupynumeric)": [[70, "cupynumeric.cumprod", false]], "cumsum() (cupynumeric.ndarray method)": [[285, "cupynumeric.ndarray.cumsum", false]], "cumsum() (in module cupynumeric)": [[71, "cupynumeric.cumsum", false]], "cupynumeric.fft": [[11, "module-cupynumeric.fft", false]], "cupynumeric.linalg": [[459, "module-cupynumeric.linalg", false]], "cupynumeric.random": [[464, "module-cupynumeric.random", false]], "data (cupynumeric.ndarray property)": [[286, "cupynumeric.ndarray.data", false]], "default_rng() (in module cupynumeric.random)": [[359, "cupynumeric.random.default_rng", false]], "deg2rad() (in module cupynumeric)": [[72, "cupynumeric.deg2rad", false]], "degrees() (in module cupynumeric)": [[73, "cupynumeric.degrees", false]], "delete() (in module cupynumeric)": [[74, "cupynumeric.delete", false]], "diag() (in module cupynumeric)": [[75, "cupynumeric.diag", false]], "diag_indices() (in module cupynumeric)": [[76, "cupynumeric.diag_indices", false]], "diag_indices_from() (in module cupynumeric)": [[77, "cupynumeric.diag_indices_from", false]], "diagflat() (in module cupynumeric)": [[78, "cupynumeric.diagflat", false]], "diagonal() (cupynumeric.ndarray method)": [[287, "cupynumeric.ndarray.diagonal", false]], "diagonal() (in module cupynumeric)": [[79, "cupynumeric.diagonal", false]], "diff() (in module cupynumeric)": [[80, "cupynumeric.diff", false]], "digitize() (in module cupynumeric)": [[81, "cupynumeric.digitize", false]], "divide() (in module cupynumeric)": [[82, "cupynumeric.divide", false]], "dot() (cupynumeric.ndarray method)": [[288, "cupynumeric.ndarray.dot", false]], "dot() (in module cupynumeric)": [[83, "cupynumeric.dot", false]], "dsplit() (in module cupynumeric)": [[84, "cupynumeric.dsplit", false]], "dstack() (in module cupynumeric)": [[85, "cupynumeric.dstack", false]], "dtype (cupynumeric.ndarray property)": [[289, "cupynumeric.ndarray.dtype", false]], "dump() (cupynumeric.ndarray method)": [[290, "cupynumeric.ndarray.dump", false]], "dumps() (cupynumeric.ndarray method)": [[291, "cupynumeric.ndarray.dumps", false]], "eig() (in module cupynumeric.linalg)": [[165, "cupynumeric.linalg.eig", false]], "eigh() (in module cupynumeric.linalg)": [[166, "cupynumeric.linalg.eigh", false]], "eigvals() (in module cupynumeric.linalg)": [[167, "cupynumeric.linalg.eigvals", false]], "eigvalsh() (in module cupynumeric.linalg)": [[168, "cupynumeric.linalg.eigvalsh", false]], "einsum() (in module cupynumeric)": [[86, "cupynumeric.einsum", false]], "einsum_path() (in module cupynumeric)": [[87, "cupynumeric.einsum_path", false]], "empty() (in module cupynumeric)": [[88, "cupynumeric.empty", false]], "empty_like() (in module cupynumeric)": [[89, "cupynumeric.empty_like", false]], "equal() (in module cupynumeric)": [[90, "cupynumeric.equal", false]], "exp() (in module cupynumeric)": [[91, "cupynumeric.exp", false]], "exp2() (in module cupynumeric)": [[92, "cupynumeric.exp2", false]], "expand_dims() (in module cupynumeric)": [[93, "cupynumeric.expand_dims", false]], "expm() (in module cupynumeric.linalg)": [[169, "cupynumeric.linalg.expm", false]], "expm1() (in module cupynumeric)": [[94, "cupynumeric.expm1", false]], "exponential() (in module cupynumeric.random)": [[360, "cupynumeric.random.exponential", false]], "extract() (in module cupynumeric)": [[95, "cupynumeric.extract", false]], "eye() (in module cupynumeric)": [[96, "cupynumeric.eye", false]], "f() (in module cupynumeric.random)": [[361, "cupynumeric.random.f", false]], "f_contiguous (in module cupynumeric)": [[293, "cupynumeric.F_CONTIGUOUS", false]], "fabs() (in module cupynumeric)": [[97, "cupynumeric.fabs", false]], "farray (in module cupynumeric)": [[293, "cupynumeric.FARRAY", false]], "fft() (in module cupynumeric.fft)": [[98, "cupynumeric.fft.fft", false]], "fft2() (in module cupynumeric.fft)": [[99, "cupynumeric.fft.fft2", false]], "fftn() (in module cupynumeric.fft)": [[100, "cupynumeric.fft.fftn", false]], "fftshift() (in module cupynumeric.fft)": [[101, "cupynumeric.fft.fftshift", false]], "fill() (cupynumeric.ndarray method)": [[292, "cupynumeric.ndarray.fill", false]], "fill_diagonal() (in module cupynumeric)": [[114, "cupynumeric.fill_diagonal", false]], "find_common_type() (in module cupynumeric)": [[115, "cupynumeric.find_common_type", false]], "flags (cupynumeric.ndarray property)": [[293, "cupynumeric.ndarray.flags", false]], "flat (cupynumeric.ndarray property)": [[294, "cupynumeric.ndarray.flat", false]], "flatnonzero() (in module cupynumeric)": [[116, "cupynumeric.flatnonzero", false]], "flatten() (cupynumeric.ndarray method)": [[295, "cupynumeric.ndarray.flatten", false]], "flip() (cupynumeric.ndarray method)": [[296, "cupynumeric.ndarray.flip", false]], "flip() (in module cupynumeric)": [[117, "cupynumeric.flip", false]], "fliplr() (in module cupynumeric)": [[118, "cupynumeric.fliplr", false]], "flipud() (in module cupynumeric)": [[119, "cupynumeric.flipud", false]], "float_power() (in module cupynumeric)": [[120, "cupynumeric.float_power", false]], "floor() (in module cupynumeric)": [[121, "cupynumeric.floor", false]], "floor_divide() (in module cupynumeric)": [[122, "cupynumeric.floor_divide", false]], "fmax() (in module cupynumeric)": [[123, "cupynumeric.fmax", false]], "fmin() (in module cupynumeric)": [[124, "cupynumeric.fmin", false]], "fmod() (in module cupynumeric)": [[125, "cupynumeric.fmod", false]], "fnc (in module cupynumeric)": [[293, "cupynumeric.FNC", false]], "forc (in module cupynumeric)": [[293, "cupynumeric.FORC", false]], "frexp() (in module cupynumeric)": [[126, "cupynumeric.frexp", false]], "full() (in module cupynumeric)": [[127, "cupynumeric.full", false]], "full_like() (in module cupynumeric)": [[128, "cupynumeric.full_like", false]], "gamma() (in module cupynumeric.random)": [[362, "cupynumeric.random.gamma", false]], "gcd() (in module cupynumeric)": [[129, "cupynumeric.gcd", false]], "generator (class in cupynumeric.random)": [[2, "cupynumeric.random.Generator", false]], "geometric() (in module cupynumeric.random)": [[363, "cupynumeric.random.geometric", false]], "getfield() (cupynumeric.ndarray method)": [[297, "cupynumeric.ndarray.getfield", false]], "gradient() (in module cupynumeric)": [[130, "cupynumeric.gradient", false]], "greater() (in module cupynumeric)": [[131, "cupynumeric.greater", false]], "greater_equal() (in module cupynumeric)": [[132, "cupynumeric.greater_equal", false]], "gumbel() (in module cupynumeric.random)": [[364, "cupynumeric.random.gumbel", false]], "hamming() (in module cupynumeric)": [[133, "cupynumeric.hamming", false]], "hanning() (in module cupynumeric)": [[134, "cupynumeric.hanning", false]], "hfft() (in module cupynumeric.fft)": [[102, "cupynumeric.fft.hfft", false]], "histogram() (in module cupynumeric)": [[135, "cupynumeric.histogram", false]], "hsplit() (in module cupynumeric)": [[136, "cupynumeric.hsplit", false]], "hstack() (in module cupynumeric)": [[137, "cupynumeric.hstack", false]], "hypergeometric() (in module cupynumeric.random)": [[365, "cupynumeric.random.hypergeometric", false]], "hypot() (in module cupynumeric)": [[138, "cupynumeric.hypot", false]], "identity() (in module cupynumeric)": [[139, "cupynumeric.identity", false]], "ifft() (in module cupynumeric.fft)": [[103, "cupynumeric.fft.ifft", false]], "ifft2() (in module cupynumeric.fft)": [[104, "cupynumeric.fft.ifft2", false]], "ifftn() (in module cupynumeric.fft)": [[105, "cupynumeric.fft.ifftn", false]], "ifftshift() (in module cupynumeric.fft)": [[106, "cupynumeric.fft.ifftshift", false]], "ihfft() (in module cupynumeric.fft)": [[107, "cupynumeric.fft.ihfft", false]], "imag (cupynumeric.ndarray property)": [[298, "cupynumeric.ndarray.imag", false]], "imag() (in module cupynumeric)": [[140, "cupynumeric.imag", false]], "in1d() (in module cupynumeric)": [[141, "cupynumeric.in1d", false]], "index (cupynumeric.broadcast property)": [[6, "cupynumeric.broadcast.index", false]], "indices() (in module cupynumeric)": [[142, "cupynumeric.indices", false]], "inner() (in module cupynumeric)": [[143, "cupynumeric.inner", false]], "insert() (in module cupynumeric)": [[144, "cupynumeric.insert", false]], "invert() (in module cupynumeric)": [[145, "cupynumeric.invert", false]], "irfft() (in module cupynumeric.fft)": [[108, "cupynumeric.fft.irfft", false]], "irfft2() (in module cupynumeric.fft)": [[109, "cupynumeric.fft.irfft2", false]], "irfftn() (in module cupynumeric.fft)": [[110, "cupynumeric.fft.irfftn", false]], "isclose() (in module cupynumeric)": [[146, "cupynumeric.isclose", false]], "iscomplex() (in module cupynumeric)": [[147, "cupynumeric.iscomplex", false]], "iscomplexobj() (in module cupynumeric)": [[148, "cupynumeric.iscomplexobj", false]], "isfinite() (in module cupynumeric)": [[149, "cupynumeric.isfinite", false]], "isinf() (in module cupynumeric)": [[150, "cupynumeric.isinf", false]], "isnan() (in module cupynumeric)": [[151, "cupynumeric.isnan", false]], "isneginf() (in module cupynumeric)": [[152, "cupynumeric.isneginf", false]], "isposinf() (in module cupynumeric)": [[153, "cupynumeric.isposinf", false]], "isreal() (in module cupynumeric)": [[154, "cupynumeric.isreal", false]], "isrealobj() (in module cupynumeric)": [[155, "cupynumeric.isrealobj", false]], "isscalar() (in module cupynumeric)": [[156, "cupynumeric.isscalar", false]], "item() (cupynumeric.ndarray method)": [[299, "cupynumeric.ndarray.item", false]], "itemset (cupynumeric.ndarray attribute)": [[300, "cupynumeric.ndarray.itemset", false]], "itemsize (cupynumeric.ndarray property)": [[301, "cupynumeric.ndarray.itemsize", false]], "iters (cupynumeric.broadcast property)": [[6, "cupynumeric.broadcast.iters", false]], "ix_() (in module cupynumeric)": [[157, "cupynumeric.ix_", false]], "kaiser() (in module cupynumeric)": [[158, "cupynumeric.kaiser", false]], "laplace() (in module cupynumeric.random)": [[366, "cupynumeric.random.laplace", false]], "lcm() (in module cupynumeric)": [[159, "cupynumeric.lcm", false]], "ldexp() (in module cupynumeric)": [[160, "cupynumeric.ldexp", false]], "left_shift() (in module cupynumeric)": [[161, "cupynumeric.left_shift", false]], "less() (in module cupynumeric)": [[162, "cupynumeric.less", false]], "less_equal() (in module cupynumeric)": [[163, "cupynumeric.less_equal", false]], "linspace() (in module cupynumeric)": [[176, "cupynumeric.linspace", false]], "load() (in module cupynumeric)": [[177, "cupynumeric.load", false]], "log() (in module cupynumeric)": [[178, "cupynumeric.log", false]], "log10() (in module cupynumeric)": [[179, "cupynumeric.log10", false]], "log1p() (in module cupynumeric)": [[180, "cupynumeric.log1p", false]], "log2() (in module cupynumeric)": [[181, "cupynumeric.log2", false]], "logaddexp() (in module cupynumeric)": [[182, "cupynumeric.logaddexp", false]], "logaddexp2() (in module cupynumeric)": [[183, "cupynumeric.logaddexp2", false]], "logical_and() (in module cupynumeric)": [[184, "cupynumeric.logical_and", false]], "logical_not() (in module cupynumeric)": [[185, "cupynumeric.logical_not", false]], "logical_or() (in module cupynumeric)": [[186, "cupynumeric.logical_or", false]], "logical_xor() (in module cupynumeric)": [[187, "cupynumeric.logical_xor", false]], "logistic() (in module cupynumeric.random)": [[367, "cupynumeric.random.logistic", false]], "lognormal() (in module cupynumeric.random)": [[368, "cupynumeric.random.lognormal", false]], "logseries() (in module cupynumeric.random)": [[369, "cupynumeric.random.logseries", false]], "logspace() (in module cupynumeric)": [[188, "cupynumeric.logspace", false]], "mask_indices() (in module cupynumeric)": [[189, "cupynumeric.mask_indices", false]], "matmul() (in module cupynumeric)": [[190, "cupynumeric.matmul", false]], "matrix_power() (in module cupynumeric.linalg)": [[170, "cupynumeric.linalg.matrix_power", false]], "max() (cupynumeric.ndarray method)": [[302, "cupynumeric.ndarray.max", false]], "maximum() (in module cupynumeric)": [[191, "cupynumeric.maximum", false]], "mean() (cupynumeric.ndarray method)": [[303, "cupynumeric.ndarray.mean", false]], "mean() (in module cupynumeric)": [[192, "cupynumeric.mean", false]], "median() (in module cupynumeric)": [[193, "cupynumeric.median", false]], "meshgrid() (in module cupynumeric)": [[194, "cupynumeric.meshgrid", false]], "min() (cupynumeric.ndarray method)": [[304, "cupynumeric.ndarray.min", false]], "minimum() (in module cupynumeric)": [[195, "cupynumeric.minimum", false]], "mod() (in module cupynumeric)": [[196, "cupynumeric.mod", false]], "modf() (in module cupynumeric)": [[197, "cupynumeric.modf", false]], "module": [[11, "module-cupynumeric.fft", false], [459, "module-cupynumeric.linalg", false], [464, "module-cupynumeric.random", false]], "moveaxis() (in module cupynumeric)": [[198, "cupynumeric.moveaxis", false]], "multi_dot() (in module cupynumeric.linalg)": [[171, "cupynumeric.linalg.multi_dot", false]], "multiply() (in module cupynumeric)": [[199, "cupynumeric.multiply", false]], "nan_to_num() (in module cupynumeric)": [[200, "cupynumeric.nan_to_num", false]], "nanargmax() (in module cupynumeric)": [[201, "cupynumeric.nanargmax", false]], "nanargmin() (in module cupynumeric)": [[202, "cupynumeric.nanargmin", false]], "nancumprod() (in module cupynumeric)": [[203, "cupynumeric.nancumprod", false]], "nancumsum() (in module cupynumeric)": [[204, "cupynumeric.nancumsum", false]], "nanmax() (in module cupynumeric)": [[205, "cupynumeric.nanmax", false]], "nanmean() (in module cupynumeric)": [[206, "cupynumeric.nanmean", false]], "nanmedian() (in module cupynumeric)": [[207, "cupynumeric.nanmedian", false]], "nanmin() (in module cupynumeric)": [[208, "cupynumeric.nanmin", false]], "nanpercentile() (in module cupynumeric)": [[209, "cupynumeric.nanpercentile", false]], "nanprod() (in module cupynumeric)": [[210, "cupynumeric.nanprod", false]], "nanquantile() (in module cupynumeric)": [[211, "cupynumeric.nanquantile", false]], "nansum() (in module cupynumeric)": [[212, "cupynumeric.nansum", false]], "nbytes (cupynumeric.ndarray property)": [[305, "cupynumeric.ndarray.nbytes", false]], "nd (cupynumeric.broadcast property)": [[6, "cupynumeric.broadcast.nd", false]], "ndarray (class in cupynumeric)": [[4, "cupynumeric.ndarray", false]], "ndim (cupynumeric.broadcast property)": [[6, "cupynumeric.broadcast.ndim", false]], "ndim (cupynumeric.ndarray property)": [[306, "cupynumeric.ndarray.ndim", false]], "ndim() (in module cupynumeric)": [[334, "cupynumeric.ndim", false]], "negative() (in module cupynumeric)": [[335, "cupynumeric.negative", false]], "negative_binomial() (in module cupynumeric.random)": [[370, "cupynumeric.random.negative_binomial", false]], "nextafter() (in module cupynumeric)": [[336, "cupynumeric.nextafter", false]], "noncentral_chisquare() (in module cupynumeric.random)": [[371, "cupynumeric.random.noncentral_chisquare", false]], "noncentral_f() (in module cupynumeric.random)": [[372, "cupynumeric.random.noncentral_f", false]], "nonzero() (cupynumeric.ndarray method)": [[307, "cupynumeric.ndarray.nonzero", false]], "nonzero() (in module cupynumeric)": [[337, "cupynumeric.nonzero", false]], "norm() (in module cupynumeric.linalg)": [[172, "cupynumeric.linalg.norm", false]], "normal() (in module cupynumeric.random)": [[373, "cupynumeric.random.normal", false]], "not_equal() (in module cupynumeric)": [[338, "cupynumeric.not_equal", false]], "numiter (cupynumeric.broadcast property)": [[6, "cupynumeric.broadcast.numiter", false]], "ones() (in module cupynumeric)": [[339, "cupynumeric.ones", false]], "ones_like() (in module cupynumeric)": [[340, "cupynumeric.ones_like", false]], "outer() (in module cupynumeric)": [[341, "cupynumeric.outer", false]], "owndata (in module cupynumeric)": [[293, "cupynumeric.OWNDATA", false]], "packbits() (in module cupynumeric)": [[342, "cupynumeric.packbits", false]], "pareto() (in module cupynumeric.random)": [[374, "cupynumeric.random.pareto", false]], "partition() (cupynumeric.ndarray method)": [[308, "cupynumeric.ndarray.partition", false]], "partition() (in module cupynumeric)": [[343, "cupynumeric.partition", false]], "percentile() (in module cupynumeric)": [[344, "cupynumeric.percentile", false]], "place() (in module cupynumeric)": [[345, "cupynumeric.place", false]], "poisson() (in module cupynumeric.random)": [[375, "cupynumeric.random.poisson", false]], "positive() (in module cupynumeric)": [[346, "cupynumeric.positive", false]], "power() (in module cupynumeric)": [[347, "cupynumeric.power", false]], "power() (in module cupynumeric.random)": [[376, "cupynumeric.random.power", false]], "prod() (cupynumeric.ndarray method)": [[309, "cupynumeric.ndarray.prod", false]], "prod() (in module cupynumeric)": [[348, "cupynumeric.prod", false]], "put() (cupynumeric.ndarray method)": [[310, "cupynumeric.ndarray.put", false]], "put() (in module cupynumeric)": [[349, "cupynumeric.put", false]], "put_along_axis() (in module cupynumeric)": [[350, "cupynumeric.put_along_axis", false]], "putmask() (in module cupynumeric)": [[351, "cupynumeric.putmask", false]], "qr() (in module cupynumeric.linalg)": [[173, "cupynumeric.linalg.qr", false]], "quantile() (in module cupynumeric)": [[352, "cupynumeric.quantile", false]], "rad2deg() (in module cupynumeric)": [[353, "cupynumeric.rad2deg", false]], "radians() (in module cupynumeric)": [[354, "cupynumeric.radians", false]], "rand() (in module cupynumeric.random)": [[377, "cupynumeric.random.rand", false]], "randint() (in module cupynumeric.random)": [[378, "cupynumeric.random.randint", false]], "randn() (in module cupynumeric.random)": [[379, "cupynumeric.random.randn", false]], "random() (in module cupynumeric.random)": [[380, "cupynumeric.random.random", false]], "random_integers() (in module cupynumeric.random)": [[381, "cupynumeric.random.random_integers", false]], "random_sample() (in module cupynumeric.random)": [[382, "cupynumeric.random.random_sample", false]], "ranf() (in module cupynumeric.random)": [[383, "cupynumeric.random.ranf", false]], "ravel() (cupynumeric.ndarray method)": [[311, "cupynumeric.ndarray.ravel", false]], "ravel() (in module cupynumeric)": [[397, "cupynumeric.ravel", false]], "ravel_multi_index() (in module cupynumeric)": [[398, "cupynumeric.ravel_multi_index", false]], "rayleigh() (in module cupynumeric.random)": [[384, "cupynumeric.random.rayleigh", false]], "real (cupynumeric.ndarray property)": [[312, "cupynumeric.ndarray.real", false]], "real() (in module cupynumeric)": [[399, "cupynumeric.real", false]], "real_if_close() (in module cupynumeric)": [[400, "cupynumeric.real_if_close", false]], "reciprocal() (in module cupynumeric)": [[401, "cupynumeric.reciprocal", false]], "remainder() (in module cupynumeric)": [[402, "cupynumeric.remainder", false]], "repeat() (in module cupynumeric)": [[403, "cupynumeric.repeat", false]], "reset() (cupynumeric.broadcast method)": [[6, "cupynumeric.broadcast.reset", false]], "reshape() (cupynumeric.ndarray method)": [[313, "cupynumeric.ndarray.reshape", false]], "reshape() (in module cupynumeric)": [[404, "cupynumeric.reshape", false]], "rfft() (in module cupynumeric.fft)": [[111, "cupynumeric.fft.rfft", false]], "rfft2() (in module cupynumeric.fft)": [[112, "cupynumeric.fft.rfft2", false]], "rfftn() (in module cupynumeric.fft)": [[113, "cupynumeric.fft.rfftn", false]], "right_shift() (in module cupynumeric)": [[405, "cupynumeric.right_shift", false]], "rint() (in module cupynumeric)": [[406, "cupynumeric.rint", false]], "roll() (in module cupynumeric)": [[407, "cupynumeric.roll", false]], "roots() (in module cupynumeric)": [[408, "cupynumeric.roots", false]], "rot90() (in module cupynumeric)": [[409, "cupynumeric.rot90", false]], "round() (in module cupynumeric)": [[410, "cupynumeric.round", false]], "row_stack() (in module cupynumeric)": [[411, "cupynumeric.row_stack", false]], "sample() (in module cupynumeric.random)": [[385, "cupynumeric.random.sample", false]], "searchsorted() (cupynumeric.ndarray method)": [[314, "cupynumeric.ndarray.searchsorted", false]], "searchsorted() (in module cupynumeric)": [[412, "cupynumeric.searchsorted", false]], "seed() (in module cupynumeric.random)": [[386, "cupynumeric.random.seed", false]], "select() (in module cupynumeric)": [[413, "cupynumeric.select", false]], "setfield() (cupynumeric.ndarray method)": [[315, "cupynumeric.ndarray.setfield", false]], "setflags() (cupynumeric.ndarray method)": [[316, "cupynumeric.ndarray.setflags", false]], "shape (cupynumeric.broadcast property)": [[6, "cupynumeric.broadcast.shape", false]], "shape (cupynumeric.ndarray property)": [[317, "cupynumeric.ndarray.shape", false]], "shape() (in module cupynumeric)": [[414, "cupynumeric.shape", false]], "sign() (in module cupynumeric)": [[415, "cupynumeric.sign", false]], "signbit() (in module cupynumeric)": [[416, "cupynumeric.signbit", false]], "sin() (in module cupynumeric)": [[417, "cupynumeric.sin", false]], "sinh() (in module cupynumeric)": [[418, "cupynumeric.sinh", false]], "size (cupynumeric.broadcast property)": [[6, "cupynumeric.broadcast.size", false]], "size (cupynumeric.ndarray property)": [[318, "cupynumeric.ndarray.size", false]], "solve() (in module cupynumeric.linalg)": [[174, "cupynumeric.linalg.solve", false]], "sort() (cupynumeric.ndarray method)": [[319, "cupynumeric.ndarray.sort", false]], "sort() (in module cupynumeric)": [[419, "cupynumeric.sort", false]], "sort_complex() (in module cupynumeric)": [[420, "cupynumeric.sort_complex", false]], "split() (in module cupynumeric)": [[421, "cupynumeric.split", false]], "sqrt() (in module cupynumeric)": [[422, "cupynumeric.sqrt", false]], "square() (in module cupynumeric)": [[423, "cupynumeric.square", false]], "squeeze() (cupynumeric.ndarray method)": [[320, "cupynumeric.ndarray.squeeze", false]], "squeeze() (in module cupynumeric)": [[424, "cupynumeric.squeeze", false]], "stack() (in module cupynumeric)": [[425, "cupynumeric.stack", false]], "standard_cauchy() (in module cupynumeric.random)": [[387, "cupynumeric.random.standard_cauchy", false]], "standard_exponential() (in module cupynumeric.random)": [[388, "cupynumeric.random.standard_exponential", false]], "standard_gamma() (in module cupynumeric.random)": [[389, "cupynumeric.random.standard_gamma", false]], "standard_t() (in module cupynumeric.random)": [[390, "cupynumeric.random.standard_t", false]], "strides (cupynumeric.ndarray property)": [[321, "cupynumeric.ndarray.strides", false]], "subtract() (in module cupynumeric)": [[426, "cupynumeric.subtract", false]], "sum() (cupynumeric.ndarray method)": [[322, "cupynumeric.ndarray.sum", false]], "sum() (in module cupynumeric)": [[427, "cupynumeric.sum", false]], "svd() (in module cupynumeric.linalg)": [[175, "cupynumeric.linalg.svd", false]], "swapaxes() (cupynumeric.ndarray method)": [[323, "cupynumeric.ndarray.swapaxes", false]], "swapaxes() (in module cupynumeric)": [[428, "cupynumeric.swapaxes", false]], "t (cupynumeric.ndarray property)": [[213, "cupynumeric.ndarray.T", false]], "take() (cupynumeric.ndarray method)": [[324, "cupynumeric.ndarray.take", false]], "take() (in module cupynumeric)": [[429, "cupynumeric.take", false]], "take_along_axis() (in module cupynumeric)": [[430, "cupynumeric.take_along_axis", false]], "tan() (in module cupynumeric)": [[431, "cupynumeric.tan", false]], "tanh() (in module cupynumeric)": [[432, "cupynumeric.tanh", false]], "tensordot() (in module cupynumeric)": [[433, "cupynumeric.tensordot", false]], "tile() (in module cupynumeric)": [[434, "cupynumeric.tile", false]], "tobytes() (cupynumeric.ndarray method)": [[325, "cupynumeric.ndarray.tobytes", false]], "tofile() (cupynumeric.ndarray method)": [[326, "cupynumeric.ndarray.tofile", false]], "tolist() (cupynumeric.ndarray method)": [[327, "cupynumeric.ndarray.tolist", false]], "tostring() (cupynumeric.ndarray method)": [[328, "cupynumeric.ndarray.tostring", false]], "trace() (cupynumeric.ndarray method)": [[329, "cupynumeric.ndarray.trace", false]], "trace() (in module cupynumeric)": [[435, "cupynumeric.trace", false]], "transpose() (cupynumeric.ndarray method)": [[330, "cupynumeric.ndarray.transpose", false]], "transpose() (in module cupynumeric)": [[436, "cupynumeric.transpose", false]], "tri() (in module cupynumeric)": [[437, "cupynumeric.tri", false]], "triangular() (in module cupynumeric.random)": [[391, "cupynumeric.random.triangular", false]], "tril() (in module cupynumeric)": [[438, "cupynumeric.tril", false]], "tril_indices() (in module cupynumeric)": [[439, "cupynumeric.tril_indices", false]], "tril_indices_from() (in module cupynumeric)": [[440, "cupynumeric.tril_indices_from", false]], "triu() (in module cupynumeric)": [[441, "cupynumeric.triu", false]], "triu_indices() (in module cupynumeric)": [[442, "cupynumeric.triu_indices", false]], "triu_indices_from() (in module cupynumeric)": [[443, "cupynumeric.triu_indices_from", false]], "true_divide() (in module cupynumeric)": [[444, "cupynumeric.true_divide", false]], "trunc() (in module cupynumeric)": [[445, "cupynumeric.trunc", false]], "uniform() (in module cupynumeric.random)": [[392, "cupynumeric.random.uniform", false]], "unique() (cupynumeric.ndarray method)": [[331, "cupynumeric.ndarray.unique", false]], "unique() (in module cupynumeric)": [[446, "cupynumeric.unique", false]], "unpackbits() (in module cupynumeric)": [[447, "cupynumeric.unpackbits", false]], "unravel_index() (in module cupynumeric)": [[448, "cupynumeric.unravel_index", false]], "var() (cupynumeric.ndarray method)": [[332, "cupynumeric.ndarray.var", false]], "var() (in module cupynumeric)": [[449, "cupynumeric.var", false]], "vdot() (in module cupynumeric)": [[450, "cupynumeric.vdot", false]], "view() (cupynumeric.ndarray method)": [[333, "cupynumeric.ndarray.view", false]], "vonmises() (in module cupynumeric.random)": [[393, "cupynumeric.random.vonmises", false]], "vsplit() (in module cupynumeric)": [[451, "cupynumeric.vsplit", false]], "vstack() (in module cupynumeric)": [[452, "cupynumeric.vstack", false]], "wald() (in module cupynumeric.random)": [[394, "cupynumeric.random.wald", false]], "weibull() (in module cupynumeric.random)": [[395, "cupynumeric.random.weibull", false]], "where() (in module cupynumeric)": [[453, "cupynumeric.where", false]], "writeable (in module cupynumeric)": [[293, "cupynumeric.WRITEABLE", false]], "writebackifcopy (in module cupynumeric)": [[293, "cupynumeric.WRITEBACKIFCOPY", false]], "zeros() (in module cupynumeric)": [[454, "cupynumeric.zeros", false]], "zeros_like() (in module cupynumeric)": [[455, "cupynumeric.zeros_like", false]], "zipf() (in module cupynumeric.random)": [[396, "cupynumeric.random.zipf", false]]}, "objects": {"cupynumeric": [[293, 0, 1, "", "ALIGNED"], [293, 0, 1, "", "BEHAVED"], [293, 0, 1, "", "CARRAY"], [293, 0, 1, "", "FARRAY"], [293, 0, 1, "", "FNC"], [293, 0, 1, "", "FORC"], [293, 0, 1, "", "F_CONTIGUOUS"], [293, 0, 1, "", "OWNDATA"], [293, 0, 1, "", "WRITEABLE"], [293, 0, 1, "", "WRITEBACKIFCOPY"], [12, 1, 1, "", "absolute"], [13, 1, 1, "", "add"], [14, 1, 1, "", "all"], [15, 1, 1, "", "allclose"], [16, 1, 1, "", "amax"], [17, 1, 1, "", "amin"], [18, 1, 1, "", "angle"], [19, 1, 1, "", "any"], [20, 1, 1, "", "append"], [21, 1, 1, "", "arange"], [22, 1, 1, "", "arccos"], [23, 1, 1, "", "arccosh"], [24, 1, 1, "", "arcsin"], [25, 1, 1, "", "arcsinh"], [26, 1, 1, "", "arctan"], [27, 1, 1, "", "arctan2"], [28, 1, 1, "", "arctanh"], [29, 1, 1, "", "argmax"], [30, 1, 1, "", "argmin"], [31, 1, 1, "", "argpartition"], [32, 1, 1, "", "argsort"], [33, 1, 1, "", "argwhere"], [34, 1, 1, "", "array"], [35, 1, 1, "", "array_equal"], [36, 1, 1, "", "array_split"], [37, 1, 1, "", "asarray"], [38, 1, 1, "", "atleast_1d"], [39, 1, 1, "", "atleast_2d"], [40, 1, 1, "", "atleast_3d"], [41, 1, 1, "", "average"], [42, 1, 1, "", "bartlett"], [43, 1, 1, "", "bincount"], [44, 1, 1, "", "bitwise_and"], [45, 1, 1, "", "bitwise_or"], [46, 1, 1, "", "bitwise_xor"], [47, 1, 1, "", "blackman"], [48, 1, 1, "", "block"], [6, 2, 1, "", "broadcast"], [49, 1, 1, "", "broadcast_arrays"], [50, 1, 1, "", "broadcast_shapes"], [51, 1, 1, "", "broadcast_to"], [52, 1, 1, "", "cbrt"], [53, 1, 1, "", "ceil"], [54, 1, 1, "", "choose"], [55, 1, 1, "", "clip"], [56, 1, 1, "", "column_stack"], [57, 1, 1, "", "compress"], [58, 1, 1, "", "concatenate"], [59, 1, 1, "", "conj"], [60, 1, 1, "", "conjugate"], [61, 1, 1, "", "convolve"], [62, 1, 1, "", "copy"], [63, 1, 1, "", "copysign"], [64, 1, 1, "", "copyto"], [65, 1, 1, "", "cos"], [66, 1, 1, "", "cosh"], [67, 1, 1, "", "count_nonzero"], [68, 1, 1, "", "cov"], [69, 1, 1, "", "cross"], [70, 1, 1, "", "cumprod"], [71, 1, 1, "", "cumsum"], [72, 1, 1, "", "deg2rad"], [73, 1, 1, "", "degrees"], [74, 1, 1, "", "delete"], [75, 1, 1, "", "diag"], [76, 1, 1, "", "diag_indices"], [77, 1, 1, "", "diag_indices_from"], [78, 1, 1, "", "diagflat"], [79, 1, 1, "", "diagonal"], [80, 1, 1, "", "diff"], [81, 1, 1, "", "digitize"], [82, 1, 1, "", "divide"], [83, 1, 1, "", "dot"], [84, 1, 1, "", "dsplit"], [85, 1, 1, "", "dstack"], [86, 1, 1, "", "einsum"], [87, 1, 1, "", "einsum_path"], [88, 1, 1, "", "empty"], [89, 1, 1, "", "empty_like"], [90, 1, 1, "", "equal"], [91, 1, 1, "", "exp"], [92, 1, 1, "", "exp2"], [93, 1, 1, "", "expand_dims"], [94, 1, 1, "", "expm1"], [95, 1, 1, "", "extract"], [96, 1, 1, "", "eye"], [97, 1, 1, "", "fabs"], [11, 5, 0, "-", "fft"], [114, 1, 1, "", "fill_diagonal"], [115, 1, 1, "", "find_common_type"], [116, 1, 1, "", "flatnonzero"], [117, 1, 1, "", "flip"], [118, 1, 1, "", "fliplr"], [119, 1, 1, "", "flipud"], [120, 1, 1, "", "float_power"], [121, 1, 1, "", "floor"], [122, 1, 1, "", "floor_divide"], [123, 1, 1, "", "fmax"], [124, 1, 1, "", "fmin"], [125, 1, 1, "", "fmod"], [126, 1, 1, "", "frexp"], [127, 1, 1, "", "full"], [128, 1, 1, "", "full_like"], [129, 1, 1, "", "gcd"], [130, 1, 1, "", "gradient"], [131, 1, 1, "", "greater"], [132, 1, 1, "", "greater_equal"], [133, 1, 1, "", "hamming"], [134, 1, 1, "", "hanning"], [135, 1, 1, "", "histogram"], [136, 1, 1, "", "hsplit"], [137, 1, 1, "", "hstack"], [138, 1, 1, "", "hypot"], [139, 1, 1, "", "identity"], [140, 1, 1, "", "imag"], [141, 1, 1, "", "in1d"], [142, 1, 1, "", "indices"], [143, 1, 1, "", "inner"], [144, 1, 1, "", "insert"], [145, 1, 1, "", "invert"], [146, 1, 1, "", "isclose"], [147, 1, 1, "", "iscomplex"], [148, 1, 1, "", "iscomplexobj"], [149, 1, 1, "", "isfinite"], [150, 1, 1, "", "isinf"], [151, 1, 1, "", "isnan"], [152, 1, 1, "", "isneginf"], [153, 1, 1, "", "isposinf"], [154, 1, 1, "", "isreal"], [155, 1, 1, "", "isrealobj"], [156, 1, 1, "", "isscalar"], [157, 1, 1, "", "ix_"], [158, 1, 1, "", "kaiser"], [159, 1, 1, "", "lcm"], [160, 1, 1, "", "ldexp"], [161, 1, 1, "", "left_shift"], [162, 1, 1, "", "less"], [163, 1, 1, "", "less_equal"], [459, 5, 0, "-", "linalg"], [176, 1, 1, "", "linspace"], [177, 1, 1, "", "load"], [178, 1, 1, "", "log"], [179, 1, 1, "", "log10"], [180, 1, 1, "", "log1p"], [181, 1, 1, "", "log2"], [182, 1, 1, "", "logaddexp"], [183, 1, 1, "", "logaddexp2"], [184, 1, 1, "", "logical_and"], [185, 1, 1, "", "logical_not"], [186, 1, 1, "", "logical_or"], [187, 1, 1, "", "logical_xor"], [188, 1, 1, "", "logspace"], [189, 1, 1, "", "mask_indices"], [190, 1, 1, "", "matmul"], [191, 1, 1, "", "maximum"], [192, 1, 1, "", "mean"], [193, 1, 1, "", "median"], [194, 1, 1, "", "meshgrid"], [195, 1, 1, "", "minimum"], [196, 1, 1, "", "mod"], [197, 1, 1, "", "modf"], [198, 1, 1, "", "moveaxis"], [199, 1, 1, "", "multiply"], [200, 1, 1, "", "nan_to_num"], [201, 1, 1, "", "nanargmax"], [202, 1, 1, "", "nanargmin"], [203, 1, 1, "", "nancumprod"], [204, 1, 1, "", "nancumsum"], [205, 1, 1, "", "nanmax"], [206, 1, 1, "", "nanmean"], [207, 1, 1, "", "nanmedian"], [208, 1, 1, "", "nanmin"], [209, 1, 1, "", "nanpercentile"], [210, 1, 1, "", "nanprod"], [211, 1, 1, "", "nanquantile"], [212, 1, 1, "", "nansum"], [4, 2, 1, "", "ndarray"], [334, 1, 1, "", "ndim"], [335, 1, 1, "", "negative"], [336, 1, 1, "", "nextafter"], [337, 1, 1, "", "nonzero"], [338, 1, 1, "", "not_equal"], [339, 1, 1, "", "ones"], [340, 1, 1, "", "ones_like"], [341, 1, 1, "", "outer"], [342, 1, 1, "", "packbits"], [343, 1, 1, "", "partition"], [344, 1, 1, "", "percentile"], [345, 1, 1, "", "place"], [346, 1, 1, "", "positive"], [347, 1, 1, "", "power"], [348, 1, 1, "", "prod"], [349, 1, 1, "", "put"], [350, 1, 1, "", "put_along_axis"], [351, 1, 1, "", "putmask"], [352, 1, 1, "", "quantile"], [353, 1, 1, "", "rad2deg"], [354, 1, 1, "", "radians"], [464, 5, 0, "-", "random"], [397, 1, 1, "", "ravel"], [398, 1, 1, "", "ravel_multi_index"], [399, 1, 1, "", "real"], [400, 1, 1, "", "real_if_close"], [401, 1, 1, "", "reciprocal"], [402, 1, 1, "", "remainder"], [403, 1, 1, "", "repeat"], [404, 1, 1, "", "reshape"], [405, 1, 1, "", "right_shift"], [406, 1, 1, "", "rint"], [407, 1, 1, "", "roll"], [408, 1, 1, "", "roots"], [409, 1, 1, "", "rot90"], [410, 1, 1, "", "round"], [411, 1, 1, "", "row_stack"], [412, 1, 1, "", "searchsorted"], [413, 1, 1, "", "select"], [414, 1, 1, "", "shape"], [415, 1, 1, "", "sign"], [416, 1, 1, "", "signbit"], [417, 1, 1, "", "sin"], [418, 1, 1, "", "sinh"], [419, 1, 1, "", "sort"], [420, 1, 1, "", "sort_complex"], [421, 1, 1, "", "split"], [422, 1, 1, "", "sqrt"], [423, 1, 1, "", "square"], [424, 1, 1, "", "squeeze"], [425, 1, 1, "", "stack"], [426, 1, 1, "", "subtract"], [427, 1, 1, "", "sum"], [428, 1, 1, "", "swapaxes"], [429, 1, 1, "", "take"], [430, 1, 1, "", "take_along_axis"], [431, 1, 1, "", "tan"], [432, 1, 1, "", "tanh"], [433, 1, 1, "", "tensordot"], [434, 1, 1, "", "tile"], [435, 1, 1, "", "trace"], [436, 1, 1, "", "transpose"], [437, 1, 1, "", "tri"], [438, 1, 1, "", "tril"], [439, 1, 1, "", "tril_indices"], [440, 1, 1, "", "tril_indices_from"], [441, 1, 1, "", "triu"], [442, 1, 1, "", "triu_indices"], [443, 1, 1, "", "triu_indices_from"], [444, 1, 1, "", "true_divide"], [445, 1, 1, "", "trunc"], [446, 1, 1, "", "unique"], [447, 1, 1, "", "unpackbits"], [448, 1, 1, "", "unravel_index"], [449, 1, 1, "", "var"], [450, 1, 1, "", "vdot"], [451, 1, 1, "", "vsplit"], [452, 1, 1, "", "vstack"], [453, 1, 1, "", "where"], [454, 1, 1, "", "zeros"], [455, 1, 1, "", "zeros_like"]], "cupynumeric.broadcast": [[6, 3, 1, "", "index"], [6, 3, 1, "", "iters"], [6, 3, 1, "", "nd"], [6, 3, 1, "", "ndim"], [6, 3, 1, "", "numiter"], [6, 4, 1, "", "reset"], [6, 3, 1, "", "shape"], [6, 3, 1, "", "size"]], "cupynumeric.fft": [[98, 1, 1, "", "fft"], [99, 1, 1, "", "fft2"], [100, 1, 1, "", "fftn"], [101, 1, 1, "", "fftshift"], [102, 1, 1, "", "hfft"], [103, 1, 1, "", "ifft"], [104, 1, 1, "", "ifft2"], [105, 1, 1, "", "ifftn"], [106, 1, 1, "", "ifftshift"], [107, 1, 1, "", "ihfft"], [108, 1, 1, "", "irfft"], [109, 1, 1, "", "irfft2"], [110, 1, 1, "", "irfftn"], [111, 1, 1, "", "rfft"], [112, 1, 1, "", "rfft2"], [113, 1, 1, "", "rfftn"]], "cupynumeric.linalg": [[164, 1, 1, "", "cholesky"], [165, 1, 1, "", "eig"], [166, 1, 1, "", "eigh"], [167, 1, 1, "", "eigvals"], [168, 1, 1, "", "eigvalsh"], [169, 1, 1, "", "expm"], [170, 1, 1, "", "matrix_power"], [171, 1, 1, "", "multi_dot"], [172, 1, 1, "", "norm"], [173, 1, 1, "", "qr"], [174, 1, 1, "", "solve"], [175, 1, 1, "", "svd"]], "cupynumeric.ndarray": [[293, 0, 1, "", "C_CONTIGUOUS"], [213, 3, 1, "", "T"], [214, 4, 1, "", "__abs__"], [215, 4, 1, "", "__add__"], [216, 4, 1, "", "__and__"], [217, 4, 1, "", "__array__"], [218, 4, 1, "", "__bool__"], [219, 4, 1, "", "__complex__"], [220, 4, 1, "", "__contains__"], [221, 4, 1, "", "__copy__"], [222, 4, 1, "", "__deepcopy__"], [223, 4, 1, "", "__divmod__"], [224, 4, 1, "", "__eq__"], [225, 4, 1, "", "__float__"], [226, 4, 1, "", "__floordiv__"], [227, 4, 1, "", "__ge__"], [228, 4, 1, "", "__getitem__"], [229, 4, 1, "", "__gt__"], [230, 4, 1, "", "__iadd__"], [231, 4, 1, "", "__iand__"], [232, 4, 1, "", "__ifloordiv__"], [233, 4, 1, "", "__ilshift__"], [234, 4, 1, "", "__imatmul__"], [235, 4, 1, "", "__imod__"], [236, 4, 1, "", "__imul__"], [237, 4, 1, "", "__index__"], [4, 4, 1, "", "__init__"], [238, 4, 1, "", "__int__"], [239, 4, 1, "", "__invert__"], [240, 4, 1, "", "__ior__"], [241, 4, 1, "", "__ipow__"], [242, 4, 1, "", "__irshift__"], [243, 4, 1, "", "__isub__"], [244, 4, 1, "", "__itruediv__"], [245, 4, 1, "", "__ixor__"], [246, 4, 1, "", "__le__"], [247, 4, 1, "", "__len__"], [248, 4, 1, "", "__lshift__"], [249, 4, 1, "", "__lt__"], [250, 4, 1, "", "__matmul__"], [251, 4, 1, "", "__mod__"], [252, 4, 1, "", "__mul__"], [253, 4, 1, "", "__ne__"], [254, 4, 1, "", "__neg__"], [255, 4, 1, "", "__new__"], [256, 4, 1, "", "__or__"], [257, 4, 1, "", "__pos__"], [258, 4, 1, "", "__pow__"], [259, 4, 1, "", "__reduce__"], [260, 4, 1, "", "__repr__"], [261, 4, 1, "", "__rmatmul__"], [262, 4, 1, "", "__rshift__"], [263, 4, 1, "", "__setitem__"], [264, 4, 1, "", "__setstate__"], [265, 4, 1, "", "__str__"], [266, 4, 1, "", "__sub__"], [267, 4, 1, "", "__truediv__"], [268, 4, 1, "", "__xor__"], [269, 4, 1, "", "all"], [270, 4, 1, "", "any"], [271, 4, 1, "", "argmax"], [272, 4, 1, "", "argmin"], [273, 4, 1, "", "argpartition"], [274, 4, 1, "", "argsort"], [275, 4, 1, "", "astype"], [276, 3, 1, "", "base"], [277, 4, 1, "", "choose"], [278, 4, 1, "", "clip"], [279, 4, 1, "", "compress"], [280, 4, 1, "", "conj"], [281, 4, 1, "", "conjugate"], [282, 4, 1, "", "copy"], [283, 3, 1, "", "ctypes"], [284, 4, 1, "", "cumprod"], [285, 4, 1, "", "cumsum"], [286, 3, 1, "", "data"], [287, 4, 1, "", "diagonal"], [288, 4, 1, "", "dot"], [289, 3, 1, "", "dtype"], [290, 4, 1, "", "dump"], [291, 4, 1, "", "dumps"], [292, 4, 1, "", "fill"], [293, 3, 1, "", "flags"], [294, 3, 1, "", "flat"], [295, 4, 1, "", "flatten"], [296, 4, 1, "", "flip"], [297, 4, 1, "", "getfield"], [298, 3, 1, "", "imag"], [299, 4, 1, "", "item"], [300, 0, 1, "", "itemset"], [301, 3, 1, "", "itemsize"], [302, 4, 1, "", "max"], [303, 4, 1, "", "mean"], [304, 4, 1, "", "min"], [305, 3, 1, "", "nbytes"], [306, 3, 1, "", "ndim"], [307, 4, 1, "", "nonzero"], [308, 4, 1, "", "partition"], [309, 4, 1, "", "prod"], [310, 4, 1, "", "put"], [311, 4, 1, "", "ravel"], [312, 3, 1, "", "real"], [313, 4, 1, "", "reshape"], [314, 4, 1, "", "searchsorted"], [315, 4, 1, "", "setfield"], [316, 4, 1, "", "setflags"], [317, 3, 1, "", "shape"], [318, 3, 1, "", "size"], [319, 4, 1, "", "sort"], [320, 4, 1, "", "squeeze"], [321, 3, 1, "", "strides"], [322, 4, 1, "", "sum"], [323, 4, 1, "", "swapaxes"], [324, 4, 1, "", "take"], [325, 4, 1, "", "tobytes"], [326, 4, 1, "", "tofile"], [327, 4, 1, "", "tolist"], [328, 4, 1, "", "tostring"], [329, 4, 1, "", "trace"], [330, 4, 1, "", "transpose"], [331, 4, 1, "", "unique"], [332, 4, 1, "", "var"], [333, 4, 1, "", "view"]], "cupynumeric.random": [[1, 2, 1, "", "BitGenerator"], [2, 2, 1, "", "Generator"], [355, 1, 1, "", "beta"], [356, 1, 1, "", "binomial"], [357, 1, 1, "", "bytes"], [358, 1, 1, "", "chisquare"], [359, 1, 1, "", "default_rng"], [360, 1, 1, "", "exponential"], [361, 1, 1, "", "f"], [362, 1, 1, "", "gamma"], [363, 1, 1, "", "geometric"], [364, 1, 1, "", "gumbel"], [365, 1, 1, "", "hypergeometric"], [366, 1, 1, "", "laplace"], [367, 1, 1, "", "logistic"], [368, 1, 1, "", "lognormal"], [369, 1, 1, "", "logseries"], [370, 1, 1, "", "negative_binomial"], [371, 1, 1, "", "noncentral_chisquare"], [372, 1, 1, "", "noncentral_f"], [373, 1, 1, "", "normal"], [374, 1, 1, "", "pareto"], [375, 1, 1, "", "poisson"], [376, 1, 1, "", "power"], [377, 1, 1, "", "rand"], [378, 1, 1, "", "randint"], [379, 1, 1, "", "randn"], [380, 1, 1, "", "random"], [381, 1, 1, "", "random_integers"], [382, 1, 1, "", "random_sample"], [383, 1, 1, "", "ranf"], [384, 1, 1, "", "rayleigh"], [385, 1, 1, "", "sample"], [386, 1, 1, "", "seed"], [387, 1, 1, "", "standard_cauchy"], [388, 1, 1, "", "standard_exponential"], [389, 1, 1, "", "standard_gamma"], [390, 1, 1, "", "standard_t"], [391, 1, 1, "", "triangular"], [392, 1, 1, "", "uniform"], [393, 1, 1, "", "vonmises"], [394, 1, 1, "", "wald"], [395, 1, 1, "", "weibull"], [396, 1, 1, "", "zipf"]], "cupynumeric.random.BitGenerator": [[1, 4, 1, "", "__init__"]], "cupynumeric.random.Generator": [[2, 4, 1, "", "__init__"]]}, "objnames": {"0": ["py", "attribute", "Python attribute"], "1": ["py", "function", "Python function"], "2": ["py", "class", "Python class"], "3": ["py", "property", "Python property"], "4": ["py", "method", "Python method"], "5": ["py", "module", "Python module"]}, "objtypes": {"0": "py:attribute", "1": "py:function", "2": "py:class", "3": "py:property", "4": "py:method", "5": "py:module"}, "terms": {"": [2, 6, 14, 15, 29, 30, 35, 61, 69, 70, 71, 79, 99, 100, 104, 105, 109, 110, 112, 113, 114, 115, 146, 156, 172, 175, 203, 204, 205, 208, 209, 211, 286, 289, 299, 318, 325, 326, 330, 344, 352, 390, 396, 433, 434, 467, 475, 476, 479, 480, 481, 482, 484, 485, 486, 487, 488, 491, 494, 496, 499, 500, 501], "0": [3, 4, 14, 19, 21, 36, 41, 43, 48, 54, 55, 58, 68, 70, 75, 76, 78, 79, 80, 81, 83, 96, 99, 100, 101, 103, 104, 105, 110, 113, 116, 119, 139, 142, 170, 172, 176, 188, 189, 194, 200, 205, 209, 211, 218, 264, 287, 293, 297, 314, 315, 321, 322, 327, 329, 330, 332, 342, 344, 352, 355, 356, 358, 360, 361, 362, 364, 366, 367, 368, 369, 370, 371, 372, 373, 375, 376, 377, 378, 379, 380, 382, 383, 384, 385, 387, 390, 392, 393, 394, 395, 408, 409, 410, 412, 413, 421, 425, 427, 435, 437, 438, 439, 440, 441, 442, 443, 447, 449, 451, 467, 475, 478, 479, 480, 481, 482, 484, 485, 486, 487, 488, 494, 496, 497, 499, 500, 501, 502], "00": 501, "000": 501, "000001": 484, "000028": 488, "000029": 488, "0021705301478625403": 481, "01": [70, 501], "012924932": 501, "017": 490, "03": 478, "041000": 500, "05": [15, 146, 479, 501], "052000": 500, "07": [480, 494, 499], "075726": 478, "08": [15, 146, 478], "0b00000011": [342, 447], "0d": 493, "0x11403f190": 481, "1": [2, 3, 14, 16, 17, 19, 21, 31, 32, 36, 38, 40, 41, 43, 48, 54, 55, 56, 57, 61, 68, 69, 70, 71, 75, 76, 79, 80, 81, 83, 85, 94, 95, 98, 99, 100, 102, 103, 104, 105, 107, 108, 109, 110, 111, 112, 113, 118, 130, 135, 136, 137, 141, 142, 143, 157, 171, 172, 173, 176, 188, 190, 194, 203, 204, 208, 209, 211, 212, 273, 274, 282, 293, 294, 295, 299, 308, 309, 314, 319, 321, 330, 341, 342, 343, 344, 345, 350, 352, 355, 356, 358, 360, 362, 363, 364, 365, 366, 367, 368, 369, 370, 372, 373, 374, 375, 376, 377, 379, 380, 381, 382, 383, 384, 385, 388, 389, 392, 394, 395, 396, 397, 400, 404, 408, 409, 411, 412, 419, 421, 424, 425, 430, 433, 434, 437, 446, 447, 450, 452, 467, 475, 476, 479, 480, 481, 482, 484, 485, 486, 487, 488, 490, 493, 494, 496, 497, 499, 500, 502], "10": [80, 81, 135, 179, 188, 474, 479, 481, 484, 487, 488, 497, 499, 500, 501], "100": [70, 209, 344, 400, 478, 479, 480, 481, 484, 486, 496, 497, 500, 501], "1000": [479, 480, 486, 494, 500, 501], "10000": [177, 501], "100000": 501, "1000000": [479, 501], "10000000": 500, "100000000": 501, "1000000k": 501, "100000k": 501, "10000k": 501, "101": 500, "1024": [467, 487], "1083": 501, "10k": 490, "11": [490, 499, 501], "1100": 501, "11432": 501, "11680": 501, "12": [3, 8, 81, 490, 491, 493, 499], "12000": 501, "1202": 501, "123": 500, "1241": 501, "125": 373, "126": 487, "128": [487, 500], "129": 490, "13": [485, 490, 501], "1300": 501, "13012": 501, "134217728": 467, "135": 478, "14": [3, 485, 500], "14000": 501, "141": 501, "15": [81, 172, 486, 501], "150": 501, "15000": 501, "15000x15000": 501, "15973827": 493, "16": [3, 8, 400, 478, 482, 501], "16000": 501, "16969": 501, "17": 3, "173": 500, "17617": 501, "18": [3, 8, 169, 301, 488], "19": 3, "1956": 394, "196": 478, "1970": 501, "1984": 491, "1985": 172, "1992": 481, "1995": 491, "1996": [209, 211, 344, 352], "1997": 479, "1998": 491, "1d": [41, 57, 350, 403, 430, 434], "1d00000000000001": 488, "1e": [15, 146, 480, 481, 485], "1e00000000000000": 488, "2": [3, 39, 40, 48, 56, 68, 69, 75, 76, 77, 78, 79, 80, 81, 83, 84, 85, 92, 96, 99, 102, 103, 104, 107, 108, 109, 110, 111, 112, 113, 114, 118, 119, 130, 157, 160, 165, 166, 167, 168, 171, 172, 173, 175, 181, 183, 190, 194, 209, 211, 321, 330, 344, 352, 360, 363, 371, 395, 400, 409, 411, 421, 433, 434, 435, 452, 467, 475, 478, 479, 480, 481, 482, 484, 485, 486, 487, 490, 491, 492, 493, 499, 500, 502], "20": [81, 321, 374, 485, 487, 501], "200": [373, 501], "2000": [491, 501], "20000": 501, "2000000": 501, "2000000k": 501, "2001": [360, 373], "2004": [475, 491], "2005": 491, "2006": 475, "2015": 491, "2017": 491, "2020": 501, "2024": [479, 480, 486], "2025": 491, "2048": 489, "21": [3, 301, 501], "2193": 501, "22": [3, 501], "2204460492503131e": 400, "225": 501, "22500x22500": 501, "23": [3, 494, 499], "2316419": 479, "2350": 501, "24": [488, 490], "24000": 501, "2461": 486, "249": 500, "25": [474, 487, 500], "250": 500, "25001932": 501, "251": [3, 8], "255": [80, 482, 501], "256": [484, 500], "259": 501, "2593": 501, "26": [479, 496], "27": 496, "273": 486, "275": 501, "277": 480, "28": [3, 496], "280": 479, "29": 3, "294165": 501, "2960": 501, "2d": [114, 330, 409, 487, 499, 500], "2x": 485, "2x2": 485, "2y": 485, "3": [40, 69, 80, 81, 83, 84, 85, 130, 137, 157, 190, 194, 209, 211, 321, 342, 344, 352, 360, 411, 421, 429, 433, 434, 447, 452, 479, 480, 481, 482, 484, 485, 486, 490, 491, 493, 499, 500, 502], "30": 501, "300": 501, "30000": 501, "30000x30000": 501, "303000": 500, "31": [480, 496], "3110": 501, "31938153": 479, "32": [8, 210, 321, 476, 487, 501], "320": 484, "33": 496, "330274429": 479, "35": 501, "3550": 501, "356563782": 479, "36": 481, "361": [209, 211, 344, 352], "365": [209, 211, 344, 352], "37": 70, "38": [3, 500], "38000": 501, "39": 485, "39894228040143267793994605993438": 479, "3d": [499, 500], "3e": 70, "3rd": 84, "4": [3, 80, 81, 83, 143, 190, 209, 211, 321, 344, 352, 433, 434, 450, 479, 480, 481, 482, 484, 485, 486, 487, 488, 493, 497, 499, 500, 501, 502], "40": [321, 486, 501], "40000": 501, "4096": 467, "42": [3, 8, 484, 499], "434": 501, "4378": 501, "443": [3, 8], "45": [8, 479], "457": 501, "466": 501, "47": 3, "48000": 501, "49": [8, 501], "499": 500, "4f": 501, "4th": [360, 373], "4x": 501, "4y": 485, "5": [80, 81, 83, 157, 190, 209, 211, 321, 344, 352, 434, 479, 480, 481, 482, 484, 486, 488, 499, 501], "50": [176, 188, 209, 211, 344, 352, 500, 501], "500": [500, 501], "50000": 501, "50000x50000": 501, "5050": 501, "50625": 501, "50e": 501, "51": 373, "5384": 501, "5460": 501, "5596": 501, "57": 360, "573000": 500, "6": [3, 80, 81, 209, 211, 321, 344, 352, 478, 479, 480, 481, 484, 485, 486], "600": 487, "6040": 501, "613000": 500, "62": [3, 8], "6368": 501, "64": [210, 500, 501], "655000": 500, "65536": 467, "659": 479, "69664": 501, "6f": 500, "7": [3, 80, 190, 209, 211, 316, 321, 344, 352, 479, 481, 484, 485], "70": 501, "70000": 501, "713": 501, "716000": 500, "725": 501, "748000": 500, "749": 500, "75": 500, "750": 500, "75625": 501, "75625x75625": 501, "767": 501, "769000": 500, "776000": 500, "781477937": 479, "790000": 500, "7f0524da9740": 488, "7fda18f26000": 488, "7fe90fa7d740": 488, "8": [80, 173, 209, 211, 321, 344, 352, 481, 484, 491, 501], "80": 374, "8000": 501, "805182": 488, "8192": 467, "821255978": 479, "8388608": 488, "875": 486, "8850": 501, "9": [190, 209, 211, 321, 344, 352, 481, 482, 484, 500, 501], "90": 409, "902": 500, "919": 501, "926000": 500, "961": 501, "993": 501, "999": 500, "A": [1, 8, 12, 13, 14, 18, 19, 20, 22, 23, 24, 25, 26, 27, 28, 34, 43, 44, 45, 46, 51, 52, 53, 57, 59, 60, 61, 63, 64, 65, 66, 68, 70, 71, 72, 73, 74, 82, 87, 90, 91, 92, 94, 97, 99, 103, 104, 115, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 129, 130, 131, 132, 138, 144, 145, 149, 150, 151, 152, 153, 159, 160, 161, 162, 163, 169, 172, 173, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 189, 190, 191, 193, 195, 196, 197, 199, 200, 203, 204, 207, 210, 212, 275, 290, 293, 294, 295, 296, 299, 316, 321, 325, 328, 335, 336, 338, 341, 346, 347, 353, 354, 359, 375, 379, 390, 397, 401, 402, 404, 405, 406, 409, 410, 415, 416, 417, 418, 421, 422, 423, 426, 429, 431, 432, 434, 436, 444, 445, 447, 449, 467, 480, 481, 484, 488, 491, 494, 500, 501], "AND": [14, 44, 184, 491], "AS": [479, 480, 486, 491], "And": [485, 502], "As": [321, 326, 390, 394, 475, 486, 493, 499, 500, 501], "At": [12, 13, 22, 23, 24, 25, 26, 27, 28, 44, 45, 46, 52, 53, 59, 60, 63, 65, 66, 72, 73, 82, 90, 91, 92, 94, 97, 120, 121, 122, 123, 124, 125, 126, 129, 131, 132, 138, 145, 149, 150, 151, 159, 160, 161, 162, 163, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 191, 195, 196, 197, 199, 335, 336, 338, 346, 347, 353, 354, 401, 402, 405, 406, 415, 416, 417, 418, 422, 423, 426, 431, 432, 444, 445, 480], "BE": 491, "BUT": 491, "BY": 491, "But": [499, 500], "By": [16, 17, 29, 30, 31, 32, 37, 68, 69, 99, 104, 113, 169, 176, 188, 201, 202, 205, 210, 275, 343, 397, 403, 407, 419, 429, 436, 437, 439, 442, 449, 467, 475, 487, 500, 501, 502], "FOR": 491, "For": [12, 13, 21, 22, 23, 24, 25, 26, 27, 28, 36, 40, 44, 45, 46, 52, 53, 55, 59, 60, 61, 63, 65, 66, 70, 71, 72, 73, 74, 76, 80, 81, 82, 85, 86, 90, 91, 92, 94, 97, 98, 102, 103, 105, 108, 109, 111, 112, 114, 118, 119, 120, 121, 122, 123, 124, 125, 126, 129, 131, 132, 137, 138, 145, 146, 149, 150, 151, 159, 160, 161, 162, 163, 170, 172, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 191, 192, 194, 195, 196, 197, 199, 200, 201, 202, 203, 204, 206, 210, 259, 264, 301, 321, 330, 335, 336, 338, 346, 347, 353, 354, 373, 401, 402, 405, 406, 411, 415, 416, 417, 418, 421, 422, 423, 425, 426, 431, 432, 444, 445, 449, 452, 463, 475, 481, 482, 484, 487, 488, 489, 490, 492, 494, 497, 500, 501, 502], "IF": 491, "IN": 491, "ITS": 491, "If": [1, 2, 12, 13, 14, 15, 16, 17, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 34, 35, 41, 42, 43, 44, 45, 46, 47, 48, 49, 52, 53, 54, 55, 57, 58, 59, 60, 61, 63, 64, 65, 66, 68, 69, 70, 71, 72, 73, 74, 75, 79, 80, 81, 82, 83, 86, 87, 90, 91, 92, 94, 96, 97, 98, 99, 100, 102, 103, 104, 105, 107, 108, 110, 111, 113, 114, 117, 120, 121, 122, 123, 124, 125, 126, 129, 130, 131, 132, 133, 134, 135, 138, 140, 141, 142, 143, 144, 145, 146, 149, 150, 151, 152, 153, 154, 158, 159, 160, 161, 162, 163, 165, 166, 167, 168, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 190, 191, 192, 193, 194, 195, 196, 197, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 264, 275, 296, 314, 326, 327, 330, 334, 335, 336, 338, 341, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 381, 382, 383, 384, 385, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 399, 400, 401, 402, 404, 405, 406, 407, 408, 410, 412, 415, 416, 417, 418, 419, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 437, 444, 445, 446, 449, 450, 475, 476, 481, 484, 485, 488, 496, 499, 500, 501], "In": [2, 61, 69, 70, 71, 86, 103, 104, 105, 108, 110, 164, 176, 188, 189, 194, 203, 204, 209, 210, 211, 212, 343, 344, 348, 349, 352, 374, 392, 394, 404, 419, 427, 437, 475, 479, 480, 481, 483, 484, 487, 494, 499, 500, 501], "It": [6, 14, 19, 20, 21, 29, 30, 31, 32, 42, 47, 51, 54, 55, 70, 71, 81, 122, 166, 168, 193, 201, 202, 203, 204, 207, 209, 211, 212, 293, 344, 348, 351, 352, 355, 360, 363, 366, 374, 393, 410, 413, 427, 429, 430, 449, 481, 487, 492, 499, 500, 501, 502], "Its": [55, 57, 350, 360, 435], "NO": 491, "NOT": [145, 185, 386, 491, 501], "No": [164, 500], "Not": [55, 149, 203, 204, 210, 212, 499], "OF": [479, 480, 486, 491], "ON": [476, 491], "OR": [19, 45, 186, 479, 480, 486, 490, 491], "On": 488, "One": [38, 39, 40, 210, 278, 404, 488, 499], "Ones": [34, 203], "Or": 433, "SUCH": 491, "Such": 488, "THE": 491, "TO": 491, "That": 189, "The": [2, 6, 7, 14, 15, 16, 17, 18, 19, 20, 21, 31, 32, 34, 36, 37, 41, 42, 43, 47, 48, 49, 50, 51, 54, 55, 56, 58, 61, 64, 67, 68, 69, 70, 71, 74, 75, 76, 78, 79, 80, 81, 83, 85, 86, 87, 89, 93, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 115, 117, 120, 127, 128, 130, 133, 134, 135, 137, 139, 140, 141, 142, 143, 146, 148, 152, 153, 155, 158, 164, 165, 166, 167, 168, 170, 171, 172, 173, 175, 176, 177, 188, 189, 190, 192, 193, 194, 198, 200, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 264, 275, 283, 290, 293, 295, 296, 298, 301, 312, 316, 321, 325, 326, 327, 334, 339, 340, 342, 343, 344, 348, 349, 350, 352, 355, 359, 360, 361, 362, 363, 364, 366, 371, 373, 374, 375, 377, 378, 379, 381, 384, 387, 391, 392, 393, 394, 395, 396, 397, 399, 403, 404, 407, 408, 409, 410, 411, 413, 414, 419, 421, 424, 425, 427, 429, 430, 433, 434, 435, 437, 439, 440, 442, 443, 446, 447, 448, 449, 450, 452, 454, 455, 456, 476, 477, 478, 479, 481, 482, 484, 485, 487, 488, 490, 491, 493, 496, 497, 499, 500, 501], "Then": [54, 189, 500, 502], "There": [176, 316, 446, 476, 478, 485, 499, 501], "These": [20, 49, 68, 86, 87, 194, 198, 293, 316, 350, 430, 487, 490, 493, 501], "To": [102, 108, 110, 330, 382, 383, 385, 475, 479, 480, 481, 484, 485, 486, 490, 492, 497, 499, 500, 501], "WITH": 491, "With": [14, 16, 17, 19, 29, 30, 41, 172, 192, 193, 201, 202, 205, 206, 207, 208, 209, 210, 211, 212, 344, 348, 352, 427, 449, 487, 489, 500, 501], "_": [408, 481, 499, 500, 501], "__abs__": 0, "__add__": 0, "__and__": 0, "__array__": [0, 34, 333], "__array_function__": [0, 437], "__array_ufunc__": 0, "__bool__": 0, "__buffer__": 0, "__complex__": 0, "__contains__": 0, "__copy__": 0, "__deepcopy__": 0, "__divmod__": 0, "__dlpack__": 0, "__dlpack_device__": 0, "__eq__": 0, "__float__": 0, "__floordiv__": 0, "__format__": 0, "__ge__": 0, "__getitem__": 0, "__gt__": 0, "__hash__": 0, "__iadd__": 0, "__iand__": 0, "__ifloordiv__": 0, "__ilshift__": 0, "__imatmul__": 0, "__imod__": 0, "__imul__": 0, "__index__": 0, "__init__": [0, 1, 2, 4, 496], "__int__": 0, "__invert__": 0, "__ior__": 0, "__ipow__": 0, "__irshift__": 0, "__isub__": 0, "__iter__": 0, "__itruediv__": 0, "__ixor__": 0, "__le__": 0, "__len__": 0, "__lshift__": 0, "__lt__": 0, "__main__": [500, 501], "__matmul__": 0, "__mod__": 0, "__mul__": 0, "__name__": [482, 500, 501], "__ne__": 0, "__neg__": 0, "__or__": 0, "__pos__": 0, "__pow__": 0, "__radd__": 0, "__rand__": 0, "__rdivmod__": 0, "__reduce__": 0, "__reduce_ex__": 0, "__repr__": 0, "__rfloordiv__": 0, "__rmatmul__": 0, "__rmod__": 0, "__rmul__": 0, "__ror__": 0, "__rpow__": 0, "__rshift__": 0, "__rsub__": 0, "__rtruediv__": 0, "__rxor__": 0, "__setitem__": 0, "__setstate__": 0, "__sizeof__": 0, "__str__": 0, "__sub__": 0, "__truediv__": 0, "__xor__": 0, "_f": 172, "a0": 341, "a1": [35, 58, 341, 479, 481], "a100": 489, "a2": [35, 58, 479, 481], "a3": 479, "a4": 479, "a5": 479, "a_": [172, 481], "a_ax": 433, "a_cpn": 500, "a_max": 55, "a_min": 55, "a_swap": 428, "aand": 479, "aarch64": [490, 501], "ab": [15, 170, 172, 214, 479], "abandon": 475, "abil": 501, "abl": [172, 475, 500, 501], "about": [103, 293, 316, 467, 475, 480, 484, 490, 492, 494, 500, 501], "abov": [54, 75, 78, 100, 105, 110, 113, 192, 200, 206, 210, 212, 348, 374, 378, 381, 437, 438, 449, 479, 487, 488, 491, 500, 501], "abramowitz": 479, "abrupt": 482, "absolut": [0, 3, 8, 15, 97, 146, 400], "abstract": 487, "ac": [479, 482], "acceler": [141, 467, 488, 489, 500, 501], "accept": [356, 475, 493, 499], "access": [76, 77, 189, 293, 299, 316, 487, 488, 500, 501], "accomod": 481, "accord": [41, 113, 165, 166, 167, 168, 316, 436], "accordingli": [69, 190, 500], "account": [397, 404, 487, 488, 501], "acct": 501, "acct_nam": 501, "accumul": [70, 71, 203, 204, 210, 212, 348, 427, 435, 493, 500], "accur": [130, 480, 481, 488, 500], "accuraci": [103, 104, 105, 108, 110, 481, 485, 501], "achiev": [330, 363, 487, 489], "aco": [3, 8], "acosh": [3, 8], "across": [484, 487, 500, 501], "action": 491, "activ": [490, 501], "actual": [164, 316, 482, 487, 488, 494, 500, 501], "ad": [15, 330, 374, 487, 496, 500], "adapt": 491, "add": [0, 3, 8, 382, 383, 385, 447, 475, 493, 499, 500, 501, 502], "add_argu": [500, 501], "addit": [2, 68, 164, 169, 174, 330, 446, 467, 478, 481, 482, 485, 487, 488, 490, 492, 499, 500, 501], "addition": [359, 476, 493, 499, 501], "address": [429, 475, 501], "adjac": [21, 487, 501], "advanc": [467, 477, 488, 493, 498], "advantag": [500, 501], "advis": 491, "affect": [21, 141, 316, 481, 500], "afford": [488, 501], "after": [85, 114, 190, 209, 211, 321, 336, 344, 352, 407, 411, 452, 475, 478, 487, 496, 499, 500], "afterward": 500, "again": 333, "against": [6, 14, 15, 16, 17, 19, 29, 30, 41, 49, 50, 141, 172, 192, 193, 201, 202, 205, 206, 207, 208, 209, 210, 211, 212, 344, 348, 350, 352, 427, 430, 449], "aggreg": [500, 501], "agre": [475, 479, 480, 486], "ai": 501, "aim": 489, "alaska": 491, "algebra": [86, 456, 465, 476, 500], "algo_canny_edge_detector": 482, "algorithm": [1, 32, 86, 87, 98, 103, 111, 141, 408, 419, 467, 481, 482, 483, 485, 500, 501], "alia": [328, 380], "alias": 103, "align": [293, 316, 500, 501], "all": [0, 3, 8, 16, 17, 19, 41, 48, 54, 56, 64, 68, 80, 81, 85, 86, 87, 91, 92, 94, 96, 100, 101, 105, 106, 110, 113, 114, 117, 130, 137, 139, 156, 157, 164, 176, 188, 189, 190, 192, 194, 201, 202, 203, 204, 205, 206, 208, 210, 212, 275, 280, 292, 293, 296, 316, 327, 348, 392, 400, 407, 411, 413, 424, 427, 429, 435, 449, 452, 467, 475, 476, 478, 484, 486, 487, 491, 496, 500, 501, 502], "allclos": [0, 3, 8, 496], "allevi": 501, "alloc": [12, 13, 22, 23, 24, 25, 26, 27, 28, 44, 45, 46, 52, 53, 59, 60, 63, 65, 66, 72, 73, 82, 90, 91, 92, 94, 97, 120, 121, 122, 123, 124, 125, 126, 129, 131, 132, 138, 145, 149, 150, 151, 152, 153, 159, 160, 161, 162, 163, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 191, 195, 196, 197, 199, 275, 335, 336, 338, 346, 347, 353, 354, 401, 402, 405, 406, 415, 416, 417, 418, 422, 423, 426, 431, 432, 444, 445, 488, 498, 500, 502], "allow": [16, 17, 36, 48, 64, 83, 86, 135, 143, 177, 190, 193, 205, 207, 208, 209, 211, 275, 344, 352, 429, 433, 437, 450, 475, 482, 487, 500, 501], "alon": 501, "along": [6, 14, 16, 17, 19, 20, 29, 30, 31, 32, 41, 48, 57, 58, 67, 70, 71, 74, 76, 80, 84, 85, 98, 99, 100, 102, 103, 104, 105, 107, 108, 110, 111, 113, 114, 117, 118, 119, 130, 136, 137, 142, 144, 172, 176, 188, 192, 193, 194, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 271, 272, 279, 296, 302, 303, 304, 321, 324, 329, 332, 344, 348, 350, 352, 403, 407, 409, 411, 420, 421, 425, 427, 429, 430, 433, 434, 435, 439, 440, 442, 443, 446, 447, 449, 451, 452, 500, 501], "alongsid": 500, "alpha": [355, 481, 484], "alreadi": [39, 40, 193, 207, 293, 334, 341, 446, 475], "also": [21, 68, 80, 86, 100, 105, 110, 113, 141, 169, 190, 198, 293, 333, 356, 361, 367, 374, 376, 384, 387, 393, 396, 429, 446, 461, 463, 475, 478, 480, 485, 486, 487, 488, 490, 492, 493, 497, 499, 500, 501], "alter": 293, "altern": [14, 16, 17, 19, 70, 71, 192, 193, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 344, 348, 352, 360, 410, 427, 449, 467], "although": [106, 327, 487], "alwai": [54, 79, 84, 120, 136, 156, 165, 166, 167, 168, 177, 326, 424, 451, 467, 475, 488], "am": [341, 475], "amax": [0, 3, 8, 43, 205, 302], "amd": 501, "american": [209, 211, 344, 352], "amin": [0, 3, 8, 208, 304], "among": [283, 501], "amongst": 6, "amount": [488, 501], "an": [2, 6, 12, 13, 14, 16, 17, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 34, 36, 37, 38, 39, 40, 41, 42, 44, 45, 46, 47, 48, 51, 52, 53, 54, 55, 57, 58, 59, 60, 61, 62, 63, 65, 66, 68, 70, 71, 72, 73, 74, 76, 77, 79, 81, 82, 83, 86, 87, 90, 91, 92, 93, 94, 95, 96, 97, 99, 100, 102, 103, 104, 105, 108, 110, 111, 113, 114, 117, 120, 121, 122, 123, 124, 125, 126, 129, 130, 131, 132, 133, 134, 135, 136, 138, 141, 142, 143, 145, 148, 149, 150, 151, 155, 157, 158, 159, 160, 161, 162, 163, 172, 174, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 221, 222, 264, 277, 278, 279, 283, 291, 296, 299, 308, 313, 314, 318, 319, 321, 324, 326, 327, 330, 331, 333, 334, 335, 336, 338, 340, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 356, 358, 360, 361, 363, 372, 377, 379, 394, 396, 397, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 441, 442, 444, 445, 446, 448, 449, 451, 453, 455, 463, 467, 475, 476, 478, 479, 480, 482, 484, 485, 486, 487, 488, 490, 491, 493, 494, 496, 500, 501], "analog": [104, 105], "analogu": [360, 393], "analysi": [488, 500], "angl": [0, 3, 8, 72, 73, 353, 354, 400], "ani": [0, 3, 6, 8, 12, 13, 14, 16, 17, 20, 21, 22, 23, 24, 25, 26, 27, 28, 34, 36, 37, 44, 45, 46, 48, 49, 52, 53, 54, 59, 60, 63, 64, 65, 66, 68, 70, 71, 72, 73, 74, 80, 81, 82, 86, 87, 90, 91, 92, 94, 97, 99, 100, 104, 105, 110, 113, 114, 115, 120, 121, 122, 123, 124, 125, 126, 127, 129, 130, 131, 132, 137, 138, 141, 145, 147, 148, 149, 150, 151, 154, 155, 156, 157, 159, 160, 161, 162, 163, 170, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 190, 191, 192, 195, 196, 197, 199, 201, 202, 203, 204, 205, 206, 208, 210, 212, 275, 276, 283, 284, 285, 289, 293, 294, 296, 297, 302, 304, 309, 315, 322, 325, 327, 335, 336, 338, 346, 347, 348, 353, 354, 392, 401, 402, 403, 405, 406, 413, 415, 416, 417, 418, 422, 423, 426, 427, 431, 432, 435, 444, 445, 449, 475, 478, 479, 480, 486, 487, 491, 497, 499, 500], "annot": 500, "anoth": [6, 37, 64, 293, 316, 488, 501], "anova": 361, "answer": 501, "anti": 499, "anyth": [301, 478], "ap": 479, "apach": [475, 479, 480, 486], "api": [293, 316, 380, 467, 476, 481, 482, 485, 488, 489, 492, 494, 495, 497, 498, 501], "appear": [42, 47, 93, 118, 119, 133, 134, 158, 275, 446, 475], "append": [0, 3, 8, 79, 80, 87, 144, 190, 487, 499, 501], "appli": [41, 74, 115, 200, 433, 481, 482, 493, 499, 500, 501], "applic": [479, 480, 486, 487, 494, 496, 498, 501, 502], "apply_along_axi": [3, 8], "apply_over_ax": [3, 8], "approach": [394, 475, 487, 499, 501], "appropri": [29, 30, 48, 54, 81, 201, 202, 293, 316, 378, 381, 429, 463, 475, 487, 501], "approx": 501, "approxim": [479, 481], "ar": [13, 14, 15, 16, 17, 19, 20, 21, 27, 29, 30, 33, 35, 37, 38, 39, 40, 41, 42, 44, 45, 46, 48, 49, 54, 55, 56, 57, 58, 61, 63, 64, 68, 69, 70, 71, 75, 79, 80, 81, 82, 83, 86, 87, 90, 96, 99, 100, 102, 103, 104, 105, 108, 110, 113, 116, 117, 118, 119, 120, 122, 123, 124, 125, 129, 131, 132, 135, 138, 141, 143, 146, 159, 160, 161, 162, 163, 164, 170, 172, 175, 176, 182, 183, 184, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 275, 278, 293, 296, 299, 307, 314, 316, 326, 327, 330, 334, 336, 337, 338, 344, 345, 347, 348, 349, 350, 352, 355, 356, 358, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 378, 379, 381, 382, 383, 384, 385, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 402, 405, 407, 408, 410, 412, 413, 425, 426, 427, 429, 433, 435, 437, 440, 443, 444, 446, 447, 448, 449, 467, 475, 476, 478, 479, 481, 482, 484, 485, 487, 490, 491, 493, 494, 496, 499, 500, 501], "ar1": 141, "ar2": 141, "arang": [0, 3, 8, 500], "arbitrari": [88, 89, 293, 318], "arbitrarili": 293, "arc": 27, "arcco": [0, 3, 8], "arccosh": [0, 3, 8], "architectur": [487, 501], "archiv": 326, "arcsin": [0, 3, 8], "arcsinh": [0, 3, 8], "arctan": [0, 3, 8], "arctan2": [0, 3, 8, 18], "arctanh": [0, 3, 8], "area": [293, 316, 487], "arg": [12, 13, 22, 23, 24, 25, 26, 27, 28, 44, 45, 46, 49, 50, 52, 53, 59, 60, 63, 65, 66, 72, 73, 82, 90, 91, 92, 94, 97, 115, 120, 121, 122, 123, 124, 125, 126, 129, 131, 132, 138, 145, 149, 150, 151, 157, 159, 160, 161, 162, 163, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 191, 195, 196, 197, 199, 299, 335, 336, 338, 346, 347, 353, 354, 401, 402, 405, 406, 415, 416, 417, 418, 422, 423, 426, 431, 432, 444, 445, 479, 500, 501], "argmax": [0, 3, 8], "argmin": [0, 3, 8, 484], "argpars": [500, 501], "argpartit": [0, 3, 8, 350, 430], "argsort": [0, 3, 8, 31, 314, 350, 412, 430], "argument": [2, 12, 13, 18, 21, 22, 23, 24, 25, 26, 27, 28, 44, 45, 46, 52, 53, 55, 58, 59, 60, 61, 63, 65, 66, 72, 73, 81, 82, 83, 87, 90, 91, 92, 94, 97, 115, 120, 121, 122, 123, 124, 125, 126, 129, 131, 132, 135, 138, 140, 143, 145, 149, 150, 151, 152, 153, 156, 159, 160, 161, 162, 163, 171, 176, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 194, 195, 196, 197, 199, 264, 275, 283, 299, 330, 333, 335, 336, 338, 346, 347, 353, 354, 377, 379, 399, 401, 402, 405, 406, 415, 416, 417, 418, 422, 423, 425, 426, 431, 432, 433, 437, 444, 445, 446, 450, 498, 500, 501], "argumentpars": [500, 501], "argwher": [0, 3, 8], "ari": [38, 39, 40, 421], "aris": [361, 491], "arithmet": [7, 54, 192, 206, 299, 465], "around": [3, 8, 349, 429, 501], "arr": [20, 51, 62, 74, 77, 95, 144, 193, 207, 293, 345, 350, 429, 430, 440, 443, 493], "arr_t": 275, "arrai": [0, 2, 6, 7, 12, 13, 14, 15, 16, 17, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 157, 158, 159, 160, 161, 162, 163, 165, 166, 167, 168, 169, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 217, 221, 222, 264, 273, 274, 275, 277, 278, 279, 282, 283, 286, 288, 289, 290, 291, 292, 293, 294, 295, 296, 298, 299, 303, 305, 306, 308, 309, 310, 311, 312, 313, 314, 316, 317, 318, 319, 321, 322, 323, 324, 325, 326, 327, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 368, 377, 378, 379, 381, 382, 383, 385, 392, 397, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 465, 467, 480, 481, 482, 484, 485, 486, 487, 488, 493, 494, 496, 500, 502], "array2str": [3, 8], "array_equ": [0, 3, 8], "array_equiv": [3, 8], "array_lik": [6, 12, 13, 14, 15, 16, 17, 18, 19, 20, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 37, 38, 39, 40, 41, 43, 44, 45, 46, 48, 49, 51, 52, 53, 55, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 77, 78, 79, 80, 81, 82, 83, 86, 87, 89, 90, 91, 92, 93, 94, 95, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 113, 114, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 128, 129, 130, 131, 132, 135, 138, 140, 141, 143, 144, 145, 146, 147, 149, 150, 151, 152, 153, 154, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 190, 191, 192, 193, 194, 195, 196, 197, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 296, 314, 334, 335, 336, 337, 338, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 397, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 412, 414, 415, 416, 417, 418, 419, 420, 422, 423, 424, 425, 426, 427, 428, 429, 431, 432, 433, 434, 435, 436, 437, 438, 440, 444, 445, 446, 448, 449, 450, 453, 455], "array_of_diagon": 79, "array_repr": [3, 8], "array_split": [0, 3, 8], "array_str": [3, 8], "array_typ": 41, "arraylik": [55, 135, 413, 453], "articl": 475, "asanyarrai": 3, "asarrai": [0, 3, 8, 500], "asarray_chkfinit": [3, 8], "ascend": [166, 168, 314, 412], "ascontiguousarrai": 3, "asfortranarrai": 3, "asin": [3, 8], "asinh": [3, 8], "ask": [475, 489], "asmatrix": [3, 8], "aspect": 501, "aspir": 488, "assembl": 48, "assert": [481, 484, 499], "assign": [68, 292, 293, 487, 493, 500], "assoc": 484, "associ": [41, 135, 484, 491, 494, 499], "assum": [41, 69, 87, 141, 169, 189, 476, 500], "assume_uniqu": 141, "ast": 177, "astyp": [0, 3, 8, 80, 289, 482, 488, 500, 501], "asynchron": [350, 493, 494, 500], "atan": [3, 8], "atan2": [3, 8], "atanh": [3, 8], "atleast2d": 330, "atleast_1d": [0, 3, 8, 93], "atleast_2d": [0, 3, 8, 93], "atleast_3d": [0, 3, 8, 93], "atol": [15, 146], "attempt": [41, 81, 192, 205, 206, 208, 212, 293, 334, 449, 467, 499, 501], "attribut": [4, 7, 89, 128, 283, 293, 305, 340, 455], "author": 491, "auto": [61, 467], "autom": 475, "automat": [61, 141, 171, 475, 476, 487, 490, 500, 501], "avail": [1, 2, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 214, 215, 216, 220, 221, 222, 223, 224, 226, 227, 229, 230, 231, 232, 233, 234, 235, 236, 239, 240, 241, 242, 243, 244, 245, 246, 248, 249, 250, 251, 252, 253, 254, 256, 257, 258, 260, 261, 262, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 277, 278, 279, 280, 281, 282, 287, 288, 290, 291, 292, 294, 295, 296, 299, 302, 303, 304, 307, 308, 309, 310, 311, 313, 314, 316, 319, 320, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 475, 476, 490, 499, 500, 501, 502], "averag": [0, 3, 8, 68, 192, 206, 303, 465, 486, 487, 501], "averaged_inverted_cdf": [209, 211, 344, 352], "avg": 41, "avoid": [39, 40, 275, 484, 488, 493], "awai": 500, "aweight": 68, "ax": [14, 16, 17, 19, 29, 30, 41, 48, 67, 69, 79, 80, 93, 99, 100, 101, 104, 105, 106, 109, 110, 112, 113, 117, 130, 143, 172, 174, 192, 193, 198, 201, 202, 205, 206, 207, 208, 209, 210, 211, 212, 296, 320, 330, 344, 348, 352, 407, 409, 427, 428, 433, 434, 435, 436, 449, 482, 500, 501], "axi": [14, 16, 17, 18, 19, 20, 29, 30, 31, 32, 36, 41, 57, 58, 67, 69, 70, 71, 74, 79, 80, 83, 84, 85, 93, 98, 99, 100, 102, 103, 104, 105, 107, 108, 109, 110, 111, 112, 113, 117, 118, 119, 130, 136, 137, 142, 144, 172, 176, 188, 192, 193, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 269, 270, 271, 272, 273, 274, 279, 284, 285, 296, 302, 303, 304, 308, 309, 319, 320, 321, 322, 324, 330, 332, 342, 343, 344, 348, 350, 352, 397, 403, 404, 407, 409, 411, 419, 420, 421, 424, 425, 427, 428, 429, 430, 434, 435, 446, 447, 449, 451, 452, 484, 500], "axis1": [79, 287, 323, 329, 428, 435], "axis2": [79, 287, 323, 329, 428, 435], "axisa": 69, "axisb": 69, "axisc": 69, "b": [6, 15, 35, 48, 69, 83, 85, 122, 137, 143, 146, 174, 190, 293, 341, 355, 382, 383, 385, 411, 433, 450, 452, 475, 476, 481, 500, 501], "b0": 341, "b1": 341, "b_ax": 433, "b_cpn": 500, "ba": 54, "back": [31, 54, 156, 290, 291, 343, 397, 404, 467, 479, 485, 488, 496, 500, 501], "backend": 498, "backward": [79, 98, 99, 100, 102, 103, 104, 105, 107, 108, 109, 110, 111, 112, 113, 130, 275, 397], "bad": 365, "balanc": 501, "baltimor": 172, "bar": 499, "barba": 487, "bartlett": [0, 3, 8], "base": [1, 34, 61, 86, 141, 179, 181, 183, 188, 275, 293, 316, 345, 351, 467, 475, 476, 484, 487, 488, 493, 500], "base_repr": [3, 8], "bash": 501, "bashrc": 501, "basi": [467, 479, 480, 486], "basic": [32, 419, 463, 465, 477, 487, 498, 499, 500], "batch": [98, 99, 100, 102, 103, 104, 105, 107, 108, 109, 110, 111, 112, 113, 165, 166, 167, 168, 174, 467, 500], "bayesian": 355, "bbox_to_anchor": 481, "bchoic": 54, "becaus": [21, 299, 373, 394, 479, 480, 486, 488, 493, 499, 500], "becom": [13, 27, 40, 44, 45, 46, 54, 55, 63, 82, 90, 120, 122, 123, 124, 125, 129, 131, 132, 138, 159, 160, 161, 162, 163, 182, 183, 184, 186, 187, 191, 195, 196, 199, 330, 336, 338, 347, 394, 402, 405, 426, 444, 500, 501, 502], "been": [85, 350, 381, 411, 430, 452, 488], "befor": [14, 16, 17, 19, 20, 41, 58, 61, 118, 119, 144, 192, 205, 206, 212, 293, 314, 348, 370, 407, 412, 427, 434, 449, 450, 485, 488, 490, 499, 500, 501], "begin": [176, 188, 477, 485, 501], "behav": [293, 349, 429], "behavior": [61, 81, 190, 325, 328, 350, 351, 378, 381, 434, 467, 487, 490, 498, 500, 501], "being": [21, 424, 475, 488, 501], "bell": 373, "belong": [81, 484], "below": [68, 75, 78, 108, 172, 188, 316, 437, 438, 441, 467, 476, 479, 481, 485, 487, 496, 497, 499, 501, 502], "benchmark": [478, 488, 495, 498, 500, 501], "benefit": 500, "bernoulli": 363, "bessel": 158, "best": [87, 475, 488, 498], "beta": [0, 3, 8, 158, 360, 484], "better": [21, 54, 494, 500, 501], "between": [15, 21, 36, 80, 130, 176, 188, 209, 211, 326, 344, 352, 360, 366, 381, 394, 400, 481, 482, 484, 485, 487, 499, 500, 501], "beyond": [81, 407], "bham": 479, "bia": 68, "big": [169, 342, 447, 479], "bigger": 501, "billion": 487, "bin": [43, 81, 135, 342, 447, 484, 490, 500, 501], "bin_edg": 135, "binari": [177, 264, 326, 342, 447, 456, 465, 491], "binary_repr": [3, 8], "binaryio": 177, "binaryoptask": 488, "bincount": [0, 3, 8, 484], "binomi": [0, 3, 8, 370, 375], "bit": [1, 44, 45, 46, 145, 161, 185, 210, 321, 342, 405, 447, 465], "bit_gener": 2, "bitgener": [2, 3, 8, 359], "bitord": [342, 447], "bitwise_and": [0, 3, 8], "bitwise_count": [3, 8], "bitwise_invert": [3, 8], "bitwise_left_shift": [3, 8], "bitwise_or": [0, 3, 8], "bitwise_right_shift": [3, 8], "bitwise_xor": [0, 3, 8], "bla": 476, "black": [483, 484, 490], "black_schol": [478, 479, 490, 501], "blackman": [0, 3, 8], "block": [0, 3, 8, 85, 137, 321, 411, 452, 487, 492, 500], "block_arrai": 48, "blog": 488, "blue": [481, 484], "bmat": [3, 8], "bmatrix": 485, "bn": 341, "boilerpl": 501, "boldsymbol": 501, "bond": 501, "bool": [1, 3, 4, 8, 12, 13, 14, 15, 16, 17, 18, 19, 22, 23, 24, 25, 26, 27, 28, 29, 30, 34, 35, 36, 41, 44, 45, 46, 49, 51, 52, 53, 57, 59, 60, 63, 64, 65, 66, 68, 72, 73, 74, 81, 82, 86, 87, 90, 91, 92, 94, 97, 114, 120, 121, 122, 123, 124, 125, 126, 129, 131, 132, 135, 138, 141, 142, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 159, 160, 161, 162, 163, 172, 175, 176, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 191, 192, 193, 194, 195, 196, 197, 199, 200, 201, 202, 205, 206, 207, 208, 209, 210, 211, 212, 264, 275, 302, 304, 309, 316, 322, 335, 336, 338, 344, 346, 347, 348, 352, 353, 354, 401, 402, 405, 406, 413, 415, 416, 417, 418, 422, 423, 426, 427, 431, 432, 444, 445, 446, 449, 453, 463, 467, 499], "bool_": [3, 8], "boolean": [14, 19, 64, 80, 146, 151, 152, 153, 154, 157, 189, 316, 342, 351, 449, 484], "boolean_sequ": 157, "borrow": 293, "both": [13, 15, 20, 27, 41, 44, 45, 46, 61, 63, 68, 69, 82, 83, 90, 104, 120, 122, 123, 124, 125, 129, 131, 132, 138, 141, 143, 146, 159, 160, 161, 162, 163, 172, 182, 183, 184, 186, 187, 190, 191, 194, 195, 196, 199, 293, 336, 338, 347, 361, 362, 372, 373, 402, 405, 426, 433, 435, 444, 476, 485, 488, 499], "bottleneck": 501, "bound": [57, 81, 349, 429], "boundari": [70, 71, 130, 203, 204, 392, 481, 486, 487, 494], "boundsmod": [54, 398, 429], "break": [484, 485, 499, 500], "bright": 501, "broadcast": [3, 7, 8, 12, 13, 14, 16, 17, 19, 22, 23, 24, 25, 26, 27, 28, 29, 30, 41, 44, 45, 46, 48, 49, 50, 51, 52, 53, 54, 55, 59, 60, 63, 64, 65, 66, 72, 73, 82, 83, 90, 91, 92, 94, 97, 120, 121, 122, 123, 124, 125, 126, 129, 131, 132, 138, 143, 145, 149, 150, 151, 152, 153, 159, 160, 161, 162, 163, 172, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 190, 191, 192, 193, 194, 195, 196, 197, 199, 201, 202, 205, 206, 207, 208, 209, 210, 211, 212, 335, 336, 338, 344, 346, 347, 348, 350, 352, 353, 354, 375, 401, 402, 403, 405, 406, 415, 416, 417, 418, 422, 423, 426, 427, 430, 431, 432, 433, 444, 445, 449, 450, 453, 456, 467, 493, 500, 501], "broadcast_arrai": [0, 3, 8], "broadcast_shap": [0, 3, 8], "broadcast_to": [0, 3, 8, 500], "brownian": 394, "bryan": 479, "bsd": 491, "buffer": [4, 16, 17, 54, 70, 71, 193, 203, 204, 205, 207, 208, 286, 293, 299, 316], "bug": [471, 472, 473], "build": [386, 465, 477, 484, 493, 500, 501], "built": [21, 476, 480, 488, 489, 500, 501], "builtin": 327, "bundl": 490, "busday_count": [3, 8], "busday_offset": [3, 8], "busdaycalendar": [3, 8], "busi": 491, "bypass": [326, 501], "byte": [0, 3, 8, 64, 86, 177, 190, 275, 305, 321, 325, 328, 342, 488], "bytes_": [3, 8], "bytesio": 326, "byteswap": 8, "c": [34, 48, 57, 69, 172, 190, 275, 283, 293, 295, 311, 313, 316, 325, 326, 328, 381, 394, 397, 398, 404, 434, 448, 475, 476, 479, 484, 490, 491, 500, 501], "c_": 68, "c_contigu": 293, "c_cpn": 500, "ca": 293, "calcul": [7, 12, 41, 61, 69, 80, 86, 91, 92, 94, 106, 130, 141, 166, 168, 172, 176, 190, 193, 207, 209, 211, 318, 344, 348, 352, 449, 450, 476, 479, 484, 500, 501], "calculate_dist": 484, "call": [54, 81, 111, 171, 189, 193, 207, 221, 222, 283, 293, 316, 373, 429, 434, 467, 479, 480, 485, 488, 500, 501], "call_result": 479, "callabl": 189, "can": [14, 19, 20, 37, 41, 48, 64, 68, 69, 76, 79, 86, 87, 98, 99, 100, 103, 104, 105, 130, 137, 141, 148, 155, 156, 157, 169, 170, 172, 176, 190, 193, 207, 209, 210, 211, 275, 283, 290, 293, 299, 301, 316, 321, 326, 333, 344, 350, 352, 374, 400, 404, 429, 430, 433, 435, 446, 463, 467, 475, 476, 478, 479, 480, 481, 482, 485, 486, 487, 489, 490, 492, 493, 497, 499, 500, 501, 502], "can_cast": [3, 8], "cannot": [58, 177, 201, 202, 293, 326, 408, 488, 500], "canon": [479, 485, 488], "capabl": [41, 490, 501], "care": 501, "carrai": 293, "cartesian": 194, "case": [14, 19, 21, 31, 32, 34, 41, 54, 61, 69, 70, 71, 79, 80, 81, 83, 102, 130, 142, 176, 188, 189, 194, 203, 204, 209, 210, 211, 212, 299, 316, 318, 342, 343, 344, 348, 349, 350, 352, 355, 378, 381, 382, 383, 384, 385, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 404, 419, 427, 430, 433, 437, 475, 483, 493, 496, 499, 500], "cast": [12, 13, 22, 23, 24, 25, 26, 27, 28, 44, 45, 46, 52, 53, 58, 59, 60, 63, 64, 65, 66, 70, 71, 72, 73, 80, 82, 86, 90, 91, 92, 94, 97, 120, 121, 122, 123, 124, 125, 126, 129, 131, 132, 138, 143, 145, 149, 150, 151, 159, 160, 161, 162, 163, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 190, 191, 192, 193, 195, 196, 197, 199, 200, 203, 204, 206, 207, 210, 212, 275, 289, 335, 336, 338, 341, 346, 347, 348, 353, 354, 401, 402, 405, 406, 410, 415, 416, 417, 418, 422, 423, 426, 427, 431, 432, 433, 444, 445, 449, 450, 485, 500], "castingkind": [12, 13, 22, 23, 24, 25, 26, 27, 28, 44, 45, 46, 52, 53, 58, 59, 60, 63, 65, 66, 72, 73, 82, 86, 90, 91, 92, 94, 97, 120, 121, 122, 123, 124, 125, 126, 129, 131, 132, 138, 145, 149, 150, 151, 159, 160, 161, 162, 163, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 190, 191, 195, 196, 197, 199, 335, 336, 338, 346, 347, 353, 354, 401, 402, 405, 406, 415, 416, 417, 418, 422, 423, 426, 431, 432, 444, 445], "cat": 488, "cauchi": 387, "caus": [286, 487, 491, 499], "cbrt": [0, 3, 8], "cdot": [485, 501], "cdoubl": [3, 8], "ceil": [0, 3, 8, 21], "cell": 487, "center": [61, 101, 393, 481, 484, 486, 501], "centr": 373, "central": [130, 371, 372, 373], "centroid": 484, "centroid_dot": 484, "centroid_mask": 484, "certain": [189, 321, 467, 500], "certif": 477, "certifi": 475, "cfd": 489, "cg": [478, 501], "chain": 171, "challeng": [487, 501], "chanc": 475, "chang": [63, 64, 86, 176, 190, 203, 204, 275, 293, 316, 330, 345, 350, 351, 397, 404, 465, 475, 482, 485, 489, 495, 498, 499, 500, 501, 502], "channel": [85, 137, 411, 452, 487, 490], "chapter": 492, "charact": [3, 8, 496], "characterist": 373, "charg": 491, "check": [71, 81, 148, 155, 164, 203, 204, 475, 482, 484, 485, 488, 490, 499, 501], "chi": [358, 361, 371, 384], "chisquar": [0, 3, 8], "choic": [3, 8, 54, 277, 326], "choicelist": 413, "choleski": [0, 3, 8, 478, 483, 497], "cholesky_tim": 480, "choos": [0, 3, 8, 27, 61, 87, 453, 488, 501], "chosen": [135, 453], "chuang": 487, "chunk": 500, "circl": 393, "circular": 393, "circumst": 293, "claim": [394, 491], "class": [1, 2, 4, 6, 14, 16, 17, 19, 34, 96, 139, 142, 192, 205, 208, 210, 275, 333, 339, 348, 383, 385, 427, 437, 456, 500], "classic": [86, 374], "claus": [491, 499], "clean": 487, "clear": 293, "clearli": 501, "clip": [0, 3, 8, 54, 349, 429], "clipped_arrai": 55, "clongdoubl": [3, 8, 299], "close": [47, 176, 275, 381, 400, 475, 488], "closest": 326, "closest_observ": [209, 211, 344, 352], "cluster": [483, 488, 489, 498], "cmap": [482, 501], "cnd": 479, "cnd_d1": 479, "cnd_d2": 479, "co": [0, 3, 8, 481], "coastal": 487, "code": [32, 48, 194, 419, 477, 478, 487, 489, 491, 492, 495, 498, 499, 500, 502], "codebas": 497, "coeffici": [174, 408, 479], "coercion": 115, "coin": 363, "collaps": [294, 295], "collect": [79, 286, 501], "coloc": 500, "color": [478, 481, 484], "colorama": 478, "column": [8, 34, 56, 68, 96, 114, 118, 119, 136, 137, 139, 165, 166, 171, 173, 295, 321, 330, 397, 437, 439, 442, 448, 496, 500, 501], "column_stack": [0, 3, 8], "com": [475, 482, 488, 491, 493, 501, 502], "combin": [93, 100, 105, 110, 113, 130, 478, 494, 501], "combinatori": 87, "come": [446, 492, 501], "comm": 487, "comm_world": 487, "comma": [86, 478], "comman": 488, "command": [478, 488, 490, 492, 496, 500, 501, 502], "comment": 475, "commit": [475, 487], "common": [13, 27, 44, 45, 46, 54, 63, 82, 86, 90, 115, 120, 122, 123, 124, 125, 129, 131, 132, 138, 159, 160, 161, 162, 163, 182, 183, 184, 186, 187, 191, 195, 196, 199, 336, 338, 347, 360, 395, 402, 405, 426, 444, 499, 500, 501], "common_typ": [3, 8], "commonli": [373, 488, 499], "commun": [475, 487, 488, 499, 501], "compact": 483, "compactli": 481, "companion": 408, "compar": [15, 16, 17, 35, 146, 205, 208, 481, 501], "comparison": [7, 456, 465], "compat": [79, 275, 327, 328, 397, 404, 437, 500, 501], "compil": [316, 476, 500], "complet": [87, 209, 211, 344, 352, 476, 487, 489, 496, 501], "complex": [18, 35, 43, 59, 60, 70, 71, 81, 83, 98, 99, 100, 103, 104, 105, 107, 108, 111, 113, 140, 143, 147, 148, 154, 155, 165, 167, 200, 203, 204, 209, 211, 280, 281, 344, 352, 399, 400, 410, 420, 450, 463, 465, 487, 500, 501], "complex128": [3, 8], "complex256": [3, 8], "complex64": [3, 8, 500], "complexflo": [3, 8], "compli": 475, "complianc": [479, 480, 486], "complic": 487, "compon": [6, 35, 48, 69, 101, 140, 200, 399, 433, 499, 500, 501], "compos": 488, "compound": 479, "compress": [0, 3, 8, 326], "compressed_arrai": 57, "compuat": 496, "comput": [16, 17, 18, 41, 44, 45, 46, 61, 70, 71, 86, 97, 98, 99, 100, 102, 103, 104, 105, 107, 108, 109, 110, 111, 112, 113, 130, 135, 142, 145, 165, 166, 167, 168, 170, 171, 172, 173, 174, 175, 184, 185, 186, 187, 192, 193, 203, 204, 205, 206, 207, 208, 209, 210, 211, 341, 344, 352, 408, 431, 432, 433, 449, 467, 479, 480, 481, 482, 484, 485, 487, 488, 489, 493, 494, 499, 500], "computat": 501, "computation": 169, "compute_uv": 175, "concat": [3, 8], "concaten": [0, 3, 8, 48, 85, 137, 411, 452], "concern": 501, "conclud": [475, 487], "conclus": 487, "cond": [8, 499, 501], "conda": 476, "conda_override_cuda": 490, "condit": [12, 13, 22, 23, 24, 25, 26, 27, 28, 44, 45, 46, 52, 53, 57, 59, 60, 63, 65, 66, 72, 73, 82, 90, 91, 92, 94, 95, 97, 120, 121, 122, 123, 124, 125, 126, 129, 131, 132, 138, 145, 149, 150, 151, 159, 160, 161, 162, 163, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 191, 195, 196, 197, 199, 275, 279, 335, 336, 338, 345, 346, 347, 351, 353, 354, 391, 401, 402, 405, 406, 413, 415, 416, 417, 418, 422, 423, 426, 431, 432, 444, 445, 453, 479, 480, 481, 486, 487, 491, 494, 499, 501], "condition": 499, "condlist": 413, "conduct": 501, "configur": [467, 476, 477, 488, 492, 499, 502], "configurt": 488, "conj": [0, 3, 8], "conjug": [0, 3, 8, 59, 83, 108, 143, 164, 280, 450, 480], "connect": [491, 501], "consecut": 80, "consequ": [18, 450, 488], "consequenti": 491, "conserv": 194, "consid": [15, 35, 68, 70, 86, 87, 146, 166, 168, 374, 481, 485, 501], "consider": [141, 501], "consist": [14, 21, 61, 80, 176, 430, 475, 487, 500], "const": [499, 501], "constant": [130, 296], "constraint": [41, 500, 501], "construct": [7, 48, 54, 75, 117, 118, 119, 157, 277, 325, 359, 434], "constructor": [2, 463], "consum": [169, 305], "contact": 488, "contain": [2, 29, 30, 41, 43, 54, 55, 57, 64, 68, 69, 79, 80, 103, 116, 130, 135, 142, 192, 193, 201, 202, 205, 206, 207, 208, 209, 211, 212, 264, 289, 313, 325, 326, 337, 344, 352, 397, 408, 410, 433, 439, 440, 442, 443, 446, 449, 463, 500, 501], "content": [43, 193, 207, 209, 211, 293, 316, 325, 326, 344, 352, 465, 500], "context": [479, 487], "contigu": [49, 51, 194, 275, 293, 295, 321, 325, 397, 404], "continu": [360, 361, 382, 383, 385, 391, 393, 479], "contour": 501, "contract": [86, 87, 476, 491], "contribut": [8, 41, 135, 477, 501], "contributor": [475, 491], "control": [58, 64, 86, 190, 275, 325, 478, 500, 502], "conveni": 326, "convent": [18, 86, 105, 190, 194], "converg": [165, 166, 167, 168, 175, 484, 485, 499, 501], "convers": [41, 64, 86, 190, 192, 205, 206, 208, 212, 275, 333, 334, 449], "convert": [14, 19, 37, 38, 39, 40, 72, 73, 144, 193, 207, 209, 211, 291, 326, 327, 330, 333, 344, 352, 353, 354, 408, 448, 481, 493, 500, 501], "convolut": [61, 482, 501], "convolv": [0, 8, 482, 501], "convolve_nd": [482, 501], "convolvemethodtyp": 61, "convolvemod": 61, "coordin": [130, 194, 448, 484], "copi": [0, 3, 8, 20, 34, 37, 38, 39, 40, 48, 49, 57, 64, 74, 75, 79, 144, 194, 200, 221, 222, 275, 293, 294, 295, 299, 316, 325, 327, 343, 397, 404, 409, 419, 420, 438, 441, 475, 479, 480, 486, 488, 491, 498, 500, 501], "copyright": [475, 479, 480, 486, 491], "copysign": [0, 3, 8], "copyto": [0, 3, 8, 345], "core": [2, 467, 478, 479, 488, 492, 500, 501, 502], "corner": [104, 105, 501], "corpor": [479, 480, 486], "corrcoef": [3, 8], "correct": [20, 58, 425, 487, 500], "correctli": [14, 16, 17, 19, 27, 29, 30, 41, 172, 192, 193, 201, 202, 205, 206, 207, 208, 209, 210, 211, 212, 344, 348, 352, 427, 449, 500, 501], "correl": [8, 465], "correspond": [8, 54, 58, 78, 79, 99, 100, 104, 105, 108, 110, 113, 130, 142, 152, 153, 157, 165, 166, 189, 201, 202, 209, 211, 314, 342, 344, 352, 407, 412, 413, 414, 481, 482, 490, 493, 499, 500, 501], "correspondingli": [421, 488], "cosh": [0, 3, 8], "cosin": [22, 23, 47, 65, 66, 133, 134], "cost": [87, 487, 500], "costli": 87, "could": [499, 500], "count": [14, 19, 41, 43, 67, 117, 130, 135, 212, 296, 348, 427, 447, 456, 465, 484, 500], "count_nonzero": [0, 3, 8], "counterclockwis": [18, 409], "cours": 489, "cov": [0, 3, 8], "covari": 68, "cover": [3, 8, 394, 475, 500], "coverag": [467, 495, 497, 498], "cp": 487, "cp_dst": 500, "cp_src": 500, "cpn": 500, "cpu": [1, 2, 3, 8, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 101, 106, 114, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 214, 215, 216, 220, 221, 222, 223, 224, 226, 227, 229, 230, 231, 232, 233, 234, 235, 236, 239, 240, 241, 242, 243, 244, 245, 246, 248, 249, 250, 251, 252, 253, 254, 256, 257, 258, 260, 261, 262, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 277, 278, 279, 280, 281, 282, 287, 288, 290, 291, 292, 294, 295, 296, 299, 302, 303, 304, 307, 308, 309, 310, 311, 313, 314, 316, 319, 320, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 476, 478, 485, 488, 489, 497, 499, 502], "cputsc": 492, "creat": [12, 13, 22, 23, 24, 25, 26, 27, 28, 34, 44, 45, 46, 52, 53, 54, 59, 60, 63, 65, 66, 72, 73, 78, 82, 87, 90, 91, 92, 94, 97, 120, 121, 122, 123, 124, 125, 126, 129, 131, 132, 138, 145, 149, 150, 151, 159, 160, 161, 162, 163, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 191, 195, 196, 197, 199, 200, 283, 289, 293, 335, 336, 338, 346, 347, 350, 353, 354, 377, 401, 402, 405, 406, 410, 415, 416, 417, 418, 422, 423, 426, 428, 431, 432, 444, 445, 475, 481, 486, 487, 490, 499, 500, 501], "create_subarrai": 487, "creation": [87, 293, 437, 456, 463, 465], "critic": [487, 501], "crop": [98, 99, 100, 102, 103, 104, 105, 107, 108, 110, 111, 113], "cross": [0, 3, 8, 157], "crucial": 501, "csingl": [3, 8], "csv": [467, 488, 496], "ct": 98, "ctx": 500, "cube": 52, "cubic": 87, "cubla": 467, "cuda": [467, 476, 478, 487, 490, 501], "cumbersom": 501, "cumprod": [0, 3, 8, 71, 203, 204, 493], "cumsum": [0, 3, 8], "cumul": [70, 71, 203, 204, 479, 501], "cumulative_prod": [3, 8], "cumulative_sum": [3, 8], "cunumer": 488, "cupi": [487, 500], "cupynumer": [0, 3, 7, 456, 461, 465, 467, 476, 478, 479, 480, 482, 484, 485, 486, 487, 490, 492, 493, 494, 496, 497, 498, 502], "cupynumeric_doctor": [467, 499], "cupynumeric_doctor_filenam": 467, "cupynumeric_doctor_format": 467, "cupynumeric_doctor_traceback": 467, "cupynumeric_fallback_stacktrac": 467, "cupynumeric_fast_math": 467, "cupynumeric_force_thunk": 467, "cupynumeric_matmul_cache_s": 467, "cupynumeric_max_eager_volum": 467, "cupynumeric_min_cpu_chunk": 467, "cupynumeric_min_gpu_chunk": 467, "cupynumeric_min_omp_chunk": 467, "cupynumeric_numpy_compat": [201, 202, 205, 208, 467], "cupynumeric_preload_cudalib": 467, "cupynumeric_report_coverag": [467, 496, 497], "cupynumeric_report_dump_callstack": [467, 496], "cupynumeric_report_dump_csv": [467, 496], "cupynumeric_root": 476, "cupynumeric_take_default": 467, "cupynumeric_warn": 467, "curand": 386, "curiou": 481, "current": [6, 31, 32, 61, 164, 173, 175, 177, 217, 293, 333, 343, 350, 403, 419, 437, 446, 467, 479, 488, 492, 493, 496, 499, 501, 502], "curv": [373, 481], "cusolv": 467, "cusolvermp": 174, "custom": [463, 476, 487, 500], "cycl": 157, "d": [2, 40, 41, 43, 56, 57, 61, 68, 70, 71, 75, 77, 78, 79, 83, 85, 96, 109, 112, 114, 118, 119, 137, 141, 142, 143, 157, 171, 172, 190, 194, 203, 204, 205, 212, 282, 294, 295, 314, 330, 342, 345, 397, 404, 411, 412, 421, 427, 434, 435, 446, 447, 450, 452, 475, 476, 479, 480, 501], "d0": [377, 379], "d1": [377, 379, 479, 500], "d2": [479, 500], "d3": 500, "d_1": 501, "d_2": 501, "damag": 491, "data": [16, 17, 21, 33, 34, 37, 41, 58, 62, 64, 68, 78, 85, 86, 88, 89, 96, 98, 99, 100, 102, 103, 104, 105, 107, 108, 109, 110, 111, 112, 113, 115, 127, 128, 135, 137, 139, 142, 155, 165, 166, 167, 168, 174, 176, 177, 188, 189, 190, 192, 193, 200, 206, 207, 209, 210, 211, 212, 217, 264, 275, 283, 289, 293, 299, 301, 313, 316, 325, 326, 327, 330, 333, 339, 340, 344, 345, 348, 349, 350, 352, 397, 400, 404, 410, 411, 424, 427, 430, 435, 437, 438, 449, 452, 454, 455, 456, 465, 467, 484, 485, 487, 491, 494, 499, 500, 501], "data_loc": 500, "data_magnitude_squar": 484, "dataset": [135, 501], "datatyp": [37, 115, 487, 498, 500], "date": 501, "datetim": [479, 480, 486], "datetime64": [3, 8], "datetime_as_str": [3, 8], "ddof": [68, 332, 449], "de": 373, "deadlock": 487, "deal": [491, 501], "dealloc": 293, "deb": 501, "debian": 491, "debug": [478, 487], "decai": 366, "decid": 467, "decim": 410, "declar": 500, "decompos": [126, 480, 487], "decomposit": [164, 175, 465, 483, 487], "decor": 500, "decreas": [81, 479, 485, 488], "decreasingli": [104, 105], "dedic": 488, "deep": [48, 222, 327, 487], "deepcopi": 222, "def": [479, 480, 482, 484, 485, 486, 487, 499, 500, 501], "default": [2, 12, 13, 14, 16, 17, 18, 19, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 34, 37, 41, 44, 45, 46, 52, 53, 54, 57, 58, 59, 60, 61, 63, 65, 66, 67, 68, 69, 70, 71, 72, 73, 75, 78, 79, 80, 81, 82, 86, 87, 88, 90, 91, 92, 94, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 117, 120, 121, 122, 123, 124, 125, 126, 127, 129, 130, 131, 132, 135, 138, 139, 141, 142, 145, 149, 150, 151, 159, 160, 161, 162, 163, 166, 168, 169, 172, 175, 176, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 190, 191, 192, 193, 194, 195, 196, 197, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 264, 275, 295, 296, 325, 326, 335, 336, 338, 339, 342, 343, 344, 346, 347, 348, 352, 353, 354, 355, 356, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 378, 381, 382, 383, 384, 385, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 400, 401, 402, 403, 405, 406, 407, 409, 410, 413, 415, 416, 417, 418, 419, 421, 422, 423, 426, 427, 429, 431, 432, 435, 436, 437, 438, 439, 442, 444, 445, 446, 447, 449, 451, 454, 467, 478, 482, 484, 493, 500, 501, 502], "default_rng": [0, 2, 3, 8, 484], "defer": [467, 479, 480, 486, 488, 493], "defin": [54, 69, 74, 89, 128, 135, 144, 172, 200, 209, 211, 299, 340, 344, 352, 391, 400, 409, 437, 455, 475, 476, 479, 480, 482, 484, 485, 486, 499, 500, 501], "definit": [61, 103, 105, 164, 480, 501], "deg": [18, 169], "deg2rad": [0, 3, 8, 354], "degre": [3, 8, 18, 72, 353, 354, 358, 361, 371, 372, 390, 409, 449, 501], "delai": [499, 501], "delet": [0, 3, 8], "delta": [449, 484], "demand": 487, "democrat": 501, "demonstr": [497, 500, 501], "denomin": [361, 372], "denot": 8, "dens": [142, 481, 500], "densiti": [135, 360, 373], "dep": 476, "depend": [43, 75, 172, 174, 176, 190, 210, 381, 413, 453, 477, 488, 499, 500, 501], "depict": 501, "deprec": [381, 467, 471, 472, 473], "depth": [48, 84, 85, 327], "deriv": [130, 368, 373, 479, 481, 482, 491, 499, 501], "derivative_exact": 481, "descend": 175, "describ": [172, 316, 360, 373, 408, 481, 488, 499], "descript": [103, 105, 135, 275, 478, 500], "descriptor": 333, "design": [47, 362, 389, 498, 501], "desir": [34, 51, 80, 88, 127, 192, 205, 206, 208, 212, 339, 378, 434, 449, 454, 490, 502], "despit": 328, "dest": 487, "destin": [58, 64, 198, 350, 425], "det": [3, 8], "detail": [16, 17, 70, 71, 75, 77, 98, 103, 108, 109, 111, 112, 177, 194, 203, 204, 205, 208, 210, 212, 272, 283, 321, 348, 427, 439, 440, 441, 442, 443, 446, 463, 475, 478, 487, 488, 490, 492, 499, 500, 501], "detect": [483, 490, 500], "detector": 482, "determin": [34, 61, 70, 71, 79, 115, 174, 203, 204, 210, 316, 413, 435, 448, 482, 484, 485, 487, 500, 501], "determinist": [484, 493], "develop": [476, 487, 488, 489, 491, 501], "developercertif": 475, "deviat": [368, 373, 499], "devic": [487, 500, 501], "devin": 491, "df": [358, 371, 390], "dfden": [361, 372], "dfnum": [361, 372], "dft": [98, 103, 111], "dgx": 489, "diag": [0, 3, 8, 481, 493], "diag_indic": [0, 3, 8, 77], "diag_indices_from": [0, 3, 8], "diagflat": [0, 3, 8], "diagnos": 499, "diagon": [0, 3, 8, 75, 76, 77, 78, 96, 114, 139, 164, 166, 168, 329, 435, 437, 438, 439, 440, 441, 442, 443, 481], "diagram": [476, 501], "dictionari": 293, "did": 485, "diff": [0, 3, 8], "differ": [1, 15, 29, 30, 36, 37, 70, 71, 80, 98, 103, 106, 108, 109, 111, 112, 118, 119, 120, 130, 144, 172, 190, 194, 203, 204, 217, 289, 326, 350, 351, 366, 409, 430, 450, 465, 475, 476, 478, 483, 485, 486, 487, 494, 498, 499, 500, 501], "differenc": 80, "differenti": [484, 501], "difficult": [487, 501], "diffus": 501, "digit": [0, 3, 8], "dim": [293, 398], "dimens": [6, 14, 16, 17, 19, 29, 30, 34, 38, 39, 40, 41, 48, 54, 56, 57, 58, 61, 64, 69, 76, 79, 80, 84, 85, 93, 114, 130, 136, 137, 142, 143, 152, 153, 157, 165, 166, 167, 168, 172, 173, 175, 190, 192, 193, 194, 201, 202, 205, 206, 207, 208, 209, 210, 211, 212, 293, 294, 295, 306, 317, 318, 321, 330, 334, 337, 342, 344, 348, 350, 352, 377, 379, 404, 407, 409, 411, 414, 421, 424, 425, 427, 430, 433, 434, 435, 436, 439, 440, 442, 443, 446, 447, 448, 449, 451, 452, 465, 483, 484, 487, 493, 500], "dimension": [7, 38, 43, 48, 61, 68, 74, 77, 78, 81, 86, 98, 99, 100, 103, 104, 105, 108, 110, 111, 112, 113, 114, 130, 169, 194, 293, 334, 341, 424, 434, 456, 482, 484, 486, 493, 499, 500, 501], "dimenson": 194, "direct": [61, 80, 98, 99, 100, 102, 103, 104, 105, 107, 108, 109, 110, 111, 112, 113, 118, 119, 293, 409, 482, 491, 501], "directli": [61, 80, 326, 391, 475, 490, 492, 496, 500], "directori": [476, 501], "dirichlet": [3, 8, 355], "disabl": [86, 429, 501], "disclaim": 491, "discontinu": [209, 211, 344, 352], "discourag": 494, "discret": [61, 80, 98, 99, 100, 103, 104, 105, 108, 110, 111, 113, 378, 381, 396, 456, 465, 481, 500], "discuss": [475, 488], "dispers": 393, "displai": [478, 488, 501], "distanc": [21, 130, 394, 484], "distance_sum": 484, "distribu": 501, "distribut": [2, 286, 355, 356, 358, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 381, 382, 383, 384, 385, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 449, 465, 467, 475, 479, 480, 486, 487, 488, 489, 491, 492, 493, 500, 501], "disturb": 373, "dive": 487, "divid": [3, 8, 36, 85, 137, 411, 421, 452, 484, 487], "divis": [82, 122, 125, 196, 402, 421, 444], "divisor": [129, 449], "divmod": [3, 8, 223], "dn": [377, 379], "do": [61, 81, 189, 193, 207, 299, 326, 476, 484, 491, 492, 493, 494, 499, 501, 502], "doc": [12, 13, 22, 23, 24, 25, 26, 27, 28, 44, 45, 46, 52, 53, 55, 59, 60, 63, 65, 66, 72, 73, 82, 90, 91, 92, 94, 97, 120, 121, 122, 123, 124, 125, 126, 129, 131, 132, 138, 145, 149, 150, 151, 159, 160, 161, 162, 163, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 191, 195, 196, 197, 199, 335, 336, 338, 346, 347, 353, 354, 401, 402, 405, 406, 415, 416, 417, 418, 422, 423, 426, 431, 432, 444, 445, 482, 488, 490, 502], "docstr": 499, "doctor": [456, 499], "doctor_filenam": 456, "doctor_format": 456, "doctorformat": 467, "document": [36, 75, 84, 136, 269, 270, 271, 272, 273, 274, 277, 278, 279, 280, 281, 287, 288, 302, 303, 304, 307, 308, 309, 310, 311, 313, 319, 320, 322, 323, 324, 329, 331, 332, 441, 451, 475, 488, 490, 491, 492, 499, 500, 501], "doe": [14, 16, 17, 19, 21, 36, 69, 74, 81, 114, 144, 165, 166, 167, 168, 173, 175, 177, 192, 200, 203, 204, 205, 208, 210, 275, 293, 299, 305, 330, 333, 348, 359, 421, 427, 429, 450, 475, 482, 493, 496, 499, 500, 501], "doesn": [81, 117, 118, 119, 349, 493, 499], "dollar": 501, "domain": [42, 476, 481, 487], "don": [293, 478, 484, 499, 500, 501], "done": [64, 86, 166, 168, 190, 275, 296, 316, 342, 447, 499], "dot": [0, 3, 8, 171, 190, 433, 450, 480, 484, 485, 496, 501], "dot_product": 501, "doubl": [3, 8, 41, 366, 487], "down": [119, 499, 500, 501], "download": [476, 490, 501], "dr": 487, "draft": 475, "draw": [355, 356, 358, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 384, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396], "drawn": [2, 355, 356, 358, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 378, 381, 382, 383, 384, 385, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 413], "driver": [478, 492, 501], "drop": [480, 488, 489, 501], "dry": 478, "dsplit": [0, 3, 8, 85], "dst": [64, 500], "dstack": [0, 3, 8], "dt": [355, 479], "dtype": [3, 4, 8, 12, 13, 14, 16, 17, 18, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 34, 35, 37, 41, 44, 45, 46, 52, 53, 54, 58, 59, 60, 63, 65, 66, 68, 70, 71, 72, 73, 80, 81, 82, 83, 86, 88, 89, 90, 91, 92, 94, 96, 97, 115, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 131, 132, 138, 139, 142, 143, 145, 149, 150, 151, 159, 160, 161, 162, 163, 165, 167, 171, 176, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 190, 191, 192, 195, 196, 197, 199, 200, 201, 202, 203, 204, 205, 206, 210, 212, 217, 264, 275, 284, 285, 297, 303, 309, 315, 321, 322, 329, 332, 333, 335, 336, 338, 339, 340, 341, 343, 346, 347, 348, 353, 354, 378, 383, 385, 401, 402, 405, 406, 415, 416, 417, 418, 419, 422, 423, 426, 427, 429, 431, 432, 433, 435, 437, 444, 445, 449, 450, 454, 455, 480, 484, 497, 500], "dtypelik": [4, 58, 96, 127, 128, 139, 142, 176, 188, 315, 333, 339, 340, 383, 385, 437, 455], "due": [392, 493, 500], "dump": [0, 8, 467], "dump_data": 494, "duplic": [350, 493, 501], "dure": [467, 476, 488, 500, 501], "dx": 130, "dy": 130, "dynam": 487, "dz": 130, "e": [14, 19, 43, 54, 79, 81, 83, 99, 102, 103, 104, 105, 108, 110, 130, 142, 143, 174, 190, 318, 326, 333, 355, 356, 358, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 378, 381, 382, 383, 384, 385, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 433, 435, 450, 467, 475, 476, 479, 493, 497, 499, 500, 501, 502], "each": [2, 38, 39, 40, 41, 43, 49, 50, 54, 57, 68, 76, 81, 87, 99, 100, 104, 105, 110, 113, 118, 119, 130, 135, 141, 157, 165, 166, 167, 168, 169, 198, 200, 321, 326, 337, 350, 351, 356, 358, 365, 370, 373, 403, 407, 425, 430, 434, 439, 440, 442, 443, 446, 447, 448, 476, 481, 482, 484, 485, 487, 488, 499, 500, 501], "eager": [467, 478, 488, 501], "eagerli": 485, "earli": 501, "earlier": [484, 500], "eas": [380, 501], "easi": [475, 501], "easier": [283, 429, 501], "easiest": [475, 476], "east": [486, 501], "economist": 501, "ed": [360, 373, 482], "edg": [55, 81, 135, 483], "edge_ord": 130, "edgecolor": 484, "ediff1d": [3, 8], "edit": [476, 501], "effect": [87, 194, 330, 386, 447, 486, 501], "effici": [98, 111, 479, 487, 500, 501], "effort": [475, 487], "effortlessli": 487, "eig": [0, 3, 8], "eigenvalu": [165, 166, 167, 168, 408], "eigenvector": [165, 166], "eigh": [0, 3, 8], "eight": [172, 447], "eigval": [0, 3, 8], "eigvalsh": [0, 3, 8], "einstein": 86, "einsum": [0, 8, 87, 478], "einsum_path": [0, 3, 8, 86], "either": [35, 41, 61, 69, 83, 130, 172, 190, 210, 217, 314, 412, 447, 479, 480, 481, 486, 488, 500, 501], "elaps": [478, 479, 480, 486, 490, 494, 500, 501], "elapsed_millisec": 494, "elapsed_tim": 501, "element": [12, 13, 14, 15, 16, 17, 19, 21, 22, 23, 24, 25, 26, 27, 28, 33, 35, 41, 43, 44, 45, 46, 48, 49, 51, 52, 53, 54, 55, 59, 60, 61, 63, 64, 65, 66, 68, 70, 71, 74, 79, 80, 82, 90, 91, 94, 95, 96, 97, 99, 104, 110, 113, 116, 117, 118, 119, 120, 121, 123, 124, 125, 126, 131, 132, 135, 139, 140, 141, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 156, 160, 162, 163, 164, 170, 178, 179, 180, 184, 185, 186, 187, 188, 190, 191, 192, 193, 194, 195, 196, 197, 199, 203, 204, 205, 206, 207, 208, 210, 212, 264, 269, 270, 275, 280, 281, 289, 292, 293, 295, 296, 299, 301, 303, 305, 307, 309, 310, 314, 318, 321, 322, 324, 327, 331, 332, 335, 336, 337, 338, 342, 345, 346, 347, 348, 349, 351, 397, 399, 400, 401, 402, 403, 404, 406, 407, 409, 412, 413, 414, 415, 416, 417, 418, 422, 423, 426, 427, 429, 431, 432, 433, 435, 438, 441, 444, 445, 446, 447, 448, 449, 453, 463, 465, 481, 484, 500, 501], "elementwis": 465, "elimin": [487, 500], "els": [485, 499, 500, 501], "elsewher": [12, 13, 22, 23, 24, 25, 26, 27, 28, 44, 45, 46, 52, 53, 59, 60, 63, 65, 66, 72, 73, 82, 90, 91, 92, 94, 96, 97, 120, 121, 122, 123, 124, 125, 126, 129, 131, 132, 138, 145, 149, 150, 151, 159, 160, 161, 162, 163, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 191, 195, 196, 197, 199, 335, 336, 338, 346, 347, 353, 354, 360, 401, 402, 405, 406, 415, 416, 417, 418, 422, 423, 426, 431, 432, 437, 444, 445, 453], "email": 475, "emerg": 501, "emit": 467, "emphas": 500, "emphasi": 500, "emploi": 475, "empti": [0, 3, 8, 16, 17, 42, 47, 48, 133, 134, 158, 201, 202, 203, 204, 205, 208, 210, 212, 326, 345, 421, 500], "empty_lik": [0, 3, 8], "en": [360, 475], "enabl": [467, 476, 478, 487, 488, 499, 500, 501], "encapsul": 6, "encount": [203, 204, 205, 208, 413, 475, 488, 499, 501], "encumbr": 475, "end": [20, 21, 42, 79, 81, 87, 176, 188, 342, 447, 475, 481, 485, 486, 494, 500, 501], "end_tim": 501, "endian": 326, "endors": 491, "endpoint": [176, 188, 481], "energi": 501, "enhanc": [475, 487, 501], "enough": [169, 476, 494, 499], "ensur": [437, 475, 487, 494, 499, 500, 501], "enter": 478, "entir": [286, 447, 501], "entri": [57, 74, 88, 95, 114, 117, 118, 119, 293, 296, 326, 349, 350, 421, 424], "entropi": [1, 359], "env": [467, 476], "environ": [201, 202, 205, 208, 467, 476, 487, 488, 490, 492, 496, 499, 500, 501], "ep": 400, "epsilon": 400, "epyc": 501, "eq": 479, "eqn": 481, "eqnarrai": 501, "equal": [0, 3, 8, 12, 13, 15, 22, 23, 24, 25, 26, 27, 28, 35, 36, 41, 42, 43, 44, 45, 46, 48, 52, 53, 59, 60, 63, 65, 66, 69, 72, 73, 79, 82, 84, 91, 92, 94, 96, 97, 120, 121, 122, 123, 124, 125, 126, 129, 130, 131, 132, 135, 138, 145, 146, 148, 149, 150, 151, 155, 159, 160, 161, 162, 163, 176, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 191, 195, 196, 197, 199, 318, 335, 336, 338, 346, 347, 353, 354, 356, 362, 365, 370, 384, 392, 394, 400, 401, 402, 405, 406, 415, 416, 417, 418, 421, 422, 423, 426, 431, 432, 437, 439, 442, 444, 445], "equal_nan": [15, 35, 146], "equat": [15, 146, 174, 392, 465, 481, 485, 487, 501], "equiv": [58, 64, 86, 190, 275], "equival": [21, 41, 57, 81, 83, 84, 85, 87, 116, 122, 136, 137, 141, 146, 157, 221, 269, 270, 271, 272, 273, 274, 277, 278, 279, 280, 281, 287, 288, 302, 303, 304, 307, 308, 309, 310, 311, 313, 317, 319, 320, 322, 323, 324, 326, 329, 330, 331, 332, 333, 334, 411, 429, 451, 452, 499], "erf": 479, "error": [193, 207, 349, 421, 424, 429, 481, 484, 487, 493, 500, 501], "errstat": [3, 8], "especi": 499, "essenti": [499, 501], "estim": [61, 68, 209, 211, 344, 352, 501], "etc": [34, 99, 100, 104, 105, 110, 113, 283, 293, 467, 487, 493, 499, 502], "european": 479, "evalu": [14, 19, 57, 86, 87, 148, 155, 171, 194, 269, 270, 413, 493, 499, 500], "even": [68, 101, 103, 106, 111, 148, 155, 165, 167, 293, 408, 475, 478, 491, 500], "evenli": [21, 176, 188, 410], "event": [375, 491], "everi": [61, 110, 475, 479, 484, 499, 500], "every_nit": 499, "everyon": 475, "evid": 501, "evolv": 475, "exact": [83, 143, 174, 433, 450, 481], "exactli": [328, 475, 480, 485, 496, 501], "examin": 68, "exampl": [40, 55, 70, 71, 80, 81, 203, 204, 321, 330, 363, 373, 421, 425, 475, 476, 478, 481, 482, 484, 485, 487, 488, 489, 490, 492, 494, 497, 498, 499, 502], "exce": [421, 447, 467], "exceed": 487, "except": [14, 16, 17, 19, 21, 34, 42, 54, 58, 80, 83, 96, 110, 137, 192, 205, 208, 210, 293, 299, 316, 348, 397, 403, 427, 430, 433, 479, 480, 486, 491], "exchang": 487, "exclud": [20, 21, 176, 392, 494], "exclus": [378, 500], "execut": [467, 476, 478, 479, 480, 485, 486, 494, 496, 497, 498, 499, 501], "exemplari": 491, "exercis": [475, 501], "exhibit": 325, "exist": [58, 93, 177, 465, 476, 490, 497, 501], "exit": 478, "exp": [0, 3, 8, 94, 169, 360, 479], "exp2": [0, 3, 8], "exp_rt": 479, "expand": [80, 93], "expand_dim": [0, 3, 8], "expans": 479, "expect": [14, 16, 17, 19, 70, 71, 108, 143, 189, 192, 193, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 341, 344, 348, 352, 375, 410, 427, 433, 449, 450, 475, 488], "expens": 326, "experi": [363, 501], "expertis": 487, "expir": [479, 501], "explain": [100, 105, 110, 113], "explan": [71, 203, 204, 321, 475], "explicit": [86, 169, 487, 499, 501], "explicitli": [135, 142, 177, 475, 481, 488, 501], "explor": 87, "expm1": [0, 3, 8], "expon": [126, 170, 376, 465], "exponenti": [0, 3, 8, 87, 91, 169, 182, 183, 366, 388], "exponential_distribut": 360, "expos": [2, 34, 293, 316], "expr": [86, 87], "express": [86, 87, 194, 479, 480, 481, 486, 491, 493, 500], "extend": [481, 487, 493, 498], "extra": [500, 501], "extract": [0, 3, 8, 57, 75, 345, 429], "extrema": 465, "ey": [0, 3, 8, 480, 497], "f": [0, 3, 8, 34, 118, 130, 172, 209, 211, 275, 293, 295, 325, 344, 352, 355, 360, 363, 372, 397, 404, 448, 479, 480, 481, 485, 486, 500, 501], "f_": [481, 485], "f_contigu": 293, "f_interior": 481, "fa": 293, "fab": [0, 3, 8], "facilit": 497, "factor": [98, 99, 100, 102, 103, 104, 105, 107, 108, 109, 110, 111, 112, 113, 164, 173, 480, 501], "fail": [164, 173, 488, 499], "failur": [363, 370, 478], "fall": [31, 81, 156, 343, 467, 479, 485, 488, 496, 500], "fallback": 493, "fallback_stacktrac": 456, "fals": [1, 12, 13, 14, 15, 16, 17, 18, 19, 22, 23, 24, 25, 26, 27, 28, 29, 30, 34, 35, 36, 41, 44, 45, 46, 49, 51, 52, 53, 57, 59, 60, 63, 65, 66, 68, 72, 73, 80, 81, 82, 86, 87, 90, 91, 92, 94, 97, 114, 120, 121, 122, 123, 124, 125, 126, 129, 131, 132, 135, 138, 141, 142, 145, 146, 149, 150, 151, 152, 153, 155, 156, 159, 160, 161, 162, 163, 172, 175, 176, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 191, 192, 193, 194, 195, 196, 197, 199, 200, 201, 202, 205, 206, 207, 208, 209, 210, 211, 212, 269, 270, 275, 293, 302, 303, 304, 309, 322, 332, 335, 336, 338, 344, 346, 347, 348, 352, 353, 354, 401, 402, 405, 406, 413, 415, 416, 417, 418, 422, 423, 426, 427, 431, 432, 444, 445, 446, 449, 467, 481, 485], "familiar": [489, 500, 501], "fan": [209, 211, 344, 352], "fanci": 429, "farrai": 293, "fashion": 86, "fast": [98, 99, 100, 104, 105, 110, 111, 113, 498], "fast_math": 456, "faster": [61, 81, 501], "fastest": [171, 397, 404], "fatter": 366, "fbmem": [478, 501], "featur": [475, 478, 501], "feedback": 475, "feel": 475, "fenc": 500, "fetch": 499, "few": [494, 499], "fewer": 488, "fft": [0, 3, 8, 61, 456, 465, 500], "fft2": [0, 3, 8, 104], "fft2d_batched_gpu": 500, "fftfreq": [3, 8], "fftn": [0, 3, 8, 98, 105, 500], "fftshift": [0, 3, 8, 106], "fid": 326, "fidel": 487, "field": [194, 299, 447], "fig": [482, 501], "figsiz": [482, 501], "file": [177, 290, 321, 326, 465, 467, 475, 476, 478, 479, 480, 486, 491, 496, 501], "filenam": [326, 467], "fileno": 326, "fill": [0, 2, 8, 114, 127, 128, 194, 200, 339, 374, 379, 437, 454, 500], "fill_diagon": [0, 3, 8], "fill_valu": [127, 128], "final": [110, 113, 141, 188, 487, 489, 500, 501], "find": [33, 314, 331, 412, 446, 465, 484, 485, 488, 490, 499, 501], "find_centroid": 484, "find_cupynumeric_cpp": 476, "finfo": [3, 8, 400], "finish": [478, 479, 480, 486, 500], "finit": [146, 149, 200, 483], "first": [14, 19, 41, 42, 47, 49, 54, 56, 58, 61, 64, 69, 79, 80, 83, 85, 87, 104, 105, 117, 120, 130, 135, 137, 144, 171, 190, 193, 194, 207, 209, 211, 212, 296, 314, 326, 341, 344, 345, 347, 348, 349, 352, 373, 394, 397, 404, 407, 409, 411, 412, 413, 420, 425, 427, 428, 430, 433, 435, 446, 450, 451, 452, 475, 476, 481, 486, 499, 500, 501], "first_cond": 499, "fisher": [361, 372, 501], "fit": [403, 491], "five": 488, "fix": [3, 8, 301, 318, 375, 471, 472, 473, 479, 500], "flag": [169, 316, 467, 476, 500], "flat": [295, 299, 311, 351, 403, 448, 493], "flatit": [3, 8, 294], "flatnonzero": [0, 3, 8], "flatten": [0, 3, 8, 16, 17, 20, 29, 30, 31, 32, 57, 58, 67, 70, 71, 74, 78, 114, 116, 135, 144, 192, 193, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 294, 311, 341, 342, 343, 344, 349, 350, 352, 397, 403, 407, 419, 429, 430, 446, 447, 448, 449, 450], "flexibl": [3, 8, 86, 301], "flip": [0, 3, 8, 118, 119, 363, 409, 493, 499], "fliplr": [0, 3, 8, 409], "flipud": [0, 3, 8, 409], "float": [14, 15, 16, 17, 19, 21, 43, 55, 70, 71, 83, 86, 88, 120, 128, 135, 139, 140, 146, 158, 170, 172, 176, 190, 192, 193, 200, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 225, 302, 304, 309, 322, 336, 344, 348, 352, 355, 356, 358, 360, 361, 362, 363, 364, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 379, 380, 382, 383, 384, 385, 388, 389, 390, 391, 392, 393, 394, 395, 396, 399, 400, 410, 412, 427, 433, 437, 449, 454, 463, 465, 467, 493, 500], "float128": [3, 8, 493], "float16": [3, 8, 120], "float32": [3, 8, 64, 70, 86, 120, 190, 275, 333, 497, 500], "float64": [3, 4, 8, 18, 41, 64, 68, 86, 88, 96, 120, 190, 192, 193, 206, 207, 209, 211, 275, 339, 344, 352, 383, 385, 449, 454, 480, 493], "float_pow": [0, 3, 8], "flood": 487, "floor": [0, 3, 8], "floor_divid": [0, 3, 8], "flop": 480, "flow": 487, "fluid": 487, "fmax": [3, 8, 205], "fmin": [3, 8], "fmod": [0, 3, 8], "fnc": 293, "focu": [487, 500, 501], "follow": [15, 18, 34, 41, 54, 61, 81, 108, 115, 146, 166, 168, 172, 190, 194, 209, 211, 264, 344, 352, 467, 476, 481, 482, 484, 485, 487, 488, 490, 491, 492, 499, 500, 501], "foo_in_out": 500, "forc": [34, 86, 190, 275, 293, 467, 490], "force_thunk": 456, "forcebuild": 1, "foremost": 501, "forg": [476, 490, 501], "fork": 475, "form": [37, 47, 56, 68, 79, 85, 86, 108, 133, 134, 137, 157, 158, 411, 452, 481, 491, 499, 501], "format": [326, 467, 477, 488, 500, 501], "format_float_posit": [3, 8], "format_float_scientif": [3, 8], "former": [350, 430], "formula": [479, 501], "forset": 317, "fortran": [34, 275, 293, 295, 325, 397, 404, 448, 476], "fortun": 475, "forum": 488, "forumula": 501, "forward": [98, 99, 100, 102, 103, 104, 105, 107, 108, 109, 110, 111, 112, 113, 130, 380], "found": [43, 314, 321, 412, 487, 501], "foundat": [475, 488], "four": [316, 478, 501], "fourier": [61, 98, 99, 100, 103, 104, 105, 108, 110, 111, 113, 456, 465, 498], "frac": [355, 360, 479, 485], "frac12": 479, "fraction": 197, "frame": [475, 496], "framebuff": [478, 488, 501], "framework": [475, 489], "free": [475, 479, 487, 488, 491, 501], "freed": 487, "freedom": [358, 361, 371, 372, 390, 449], "frequenc": [42, 68, 101, 103, 104, 105, 108, 396, 499, 500], "frequent": 489, "fresh": [1, 359], "freshli": [12, 13, 22, 23, 24, 25, 26, 27, 28, 44, 45, 46, 52, 53, 59, 60, 63, 65, 66, 72, 73, 82, 90, 91, 92, 94, 97, 120, 121, 122, 123, 124, 125, 126, 129, 131, 132, 138, 145, 149, 150, 151, 152, 153, 159, 160, 161, 162, 163, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 191, 195, 196, 197, 199, 335, 336, 338, 346, 347, 353, 354, 401, 402, 405, 406, 415, 416, 417, 418, 422, 423, 426, 431, 432, 444, 445], "frexp": [0, 3, 8], "fro": 172, "frobeniu": 172, "frohn": 491, "from": [1, 2, 14, 18, 19, 21, 29, 30, 37, 41, 48, 54, 57, 61, 64, 70, 71, 72, 73, 79, 95, 103, 113, 115, 117, 118, 119, 120, 130, 143, 144, 157, 173, 176, 177, 188, 190, 194, 203, 204, 212, 217, 276, 277, 293, 296, 320, 324, 341, 347, 348, 351, 353, 354, 355, 356, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 381, 382, 383, 384, 385, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 400, 404, 409, 413, 424, 427, 429, 430, 433, 435, 446, 447, 450, 453, 465, 475, 477, 479, 480, 481, 482, 484, 485, 486, 487, 489, 491, 492, 493, 494, 499, 500, 501], "frombuff": 3, "fromfil": [3, 326], "fromfunct": [3, 8], "fromit": 3, "frompyfunc": 3, "fromregex": [3, 8], "fromstr": 3, "front": [142, 467], "fulfil": [391, 467], "full": [0, 3, 8, 61, 77, 128, 174, 269, 270, 271, 273, 274, 277, 278, 279, 280, 281, 287, 288, 302, 303, 304, 307, 308, 309, 310, 311, 313, 316, 319, 320, 322, 323, 324, 329, 331, 332, 342, 440, 443, 467, 475, 478, 487, 492, 496, 500, 501], "full_lik": [0, 3, 8], "full_matric": 175, "fulli": [193, 194, 207], "func": 479, "function": [2, 8, 18, 21, 36, 64, 75, 85, 98, 99, 100, 101, 103, 104, 105, 106, 108, 110, 111, 113, 114, 120, 122, 130, 135, 137, 141, 156, 157, 158, 171, 172, 189, 194, 209, 211, 269, 270, 271, 272, 273, 274, 277, 278, 279, 280, 281, 287, 288, 293, 299, 302, 303, 304, 307, 308, 309, 310, 311, 313, 316, 317, 319, 320, 322, 323, 324, 326, 327, 329, 330, 331, 332, 344, 350, 352, 355, 359, 360, 363, 373, 376, 381, 386, 408, 411, 429, 430, 434, 450, 452, 456, 463, 465, 479, 480, 481, 485, 486, 487, 488, 493, 496, 497, 501], "function_nam": 496, "function_valu": 481, "fundament": [500, 501], "funtion": 497, "furnish": 491, "further": [86, 209, 211, 318, 344, 352, 441, 475, 487, 500], "furthermor": [49, 51, 194], "futur": 479, "fweight": 68, "g": [14, 19, 83, 85, 137, 143, 172, 190, 326, 333, 355, 356, 358, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 378, 381, 382, 383, 384, 385, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 411, 433, 450, 452, 475, 476, 486, 493, 497, 499, 500, 501, 502], "gamma": [0, 3, 8, 355, 389], "gasnet": [498, 501], "gather": 501, "gauss": 373, "gaussian": [366, 373, 379, 394], "gb": 501, "gcd": [0, 3, 8], "gemm": 484, "gener": [1, 3, 8, 21, 41, 42, 85, 103, 137, 176, 188, 293, 359, 371, 374, 379, 384, 386, 392, 411, 452, 465, 476, 481, 484, 486, 488, 493, 494, 496, 498, 500, 501], "genfromtxt": [3, 8], "geometr": [0, 3, 8, 360], "geomspac": [3, 8], "get": [102, 108, 110, 114, 176, 188, 282, 321, 390, 476, 478, 479, 480, 481, 484, 485, 486, 488, 499, 500], "get_bit_gener": [3, 8], "get_includ": [3, 8], "get_legate_runtim": [492, 500], "get_machin": 492, "get_printopt": [3, 8], "get_rank": 487, "get_siz": 487, "get_stat": [3, 8], "get_variant_kind": 500, "getbufs": [3, 8], "getdevicecount": 487, "geterr": [3, 8], "geterrcal": [3, 8], "getfield": [0, 8], "getter": 317, "git": 475, "github": [475, 487, 501], "give": [43, 78, 86, 190, 194, 330, 351, 404, 414, 446, 475, 488, 500], "given": [14, 15, 16, 17, 19, 20, 21, 31, 34, 35, 41, 48, 51, 54, 55, 56, 57, 62, 67, 68, 70, 71, 79, 80, 83, 85, 87, 88, 89, 98, 99, 100, 102, 103, 104, 105, 107, 108, 110, 111, 113, 114, 117, 127, 128, 130, 135, 137, 138, 143, 144, 146, 172, 176, 188, 189, 190, 193, 194, 203, 204, 207, 208, 209, 210, 211, 212, 217, 271, 272, 275, 278, 279, 293, 296, 302, 303, 304, 309, 310, 314, 322, 330, 332, 339, 340, 341, 344, 348, 349, 352, 355, 356, 358, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 381, 382, 383, 384, 385, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 403, 407, 408, 409, 410, 411, 412, 421, 427, 429, 433, 434, 435, 436, 437, 446, 450, 452, 454, 455, 475, 487, 499, 500, 501], "global": [359, 487, 500], "gmail": 491, "gninja": 476, "gnx": 487, "gny": 487, "go": [430, 501], "goal": 501, "golub": 172, "good": [189, 326, 365, 489, 491], "gop": 480, "govern": [479, 480, 486, 501], "gpu": [1, 2, 3, 8, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 214, 215, 216, 220, 221, 222, 223, 224, 226, 227, 229, 230, 231, 232, 233, 234, 235, 236, 239, 240, 241, 242, 243, 244, 245, 246, 248, 249, 250, 251, 252, 253, 254, 256, 257, 258, 260, 261, 262, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 277, 278, 279, 280, 281, 282, 287, 288, 291, 292, 295, 296, 299, 302, 303, 304, 307, 308, 309, 310, 311, 313, 314, 316, 319, 320, 322, 323, 324, 325, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 478, 485, 487, 489, 492, 499, 502], "grad_i": [482, 501], "grad_x": [482, 501], "gradient": [0, 3, 8, 482], "grai": [482, 484, 501], "grant": 491, "granular": [488, 494], "grasmair": 485, "grate": 475, "grayscal": [482, 501], "greater": [0, 3, 8, 21, 54, 84, 361, 374, 392, 396, 424], "greater_equ": [0, 3, 8], "greatest": [48, 129], "greedi": [86, 87], "green": [481, 484], "grep": 488, "grid": [142, 194, 481, 486, 487, 501], "group": [33, 476, 501], "gt": 481, "guarante": [349, 404], "guess": 485, "guid": [321, 489, 500], "guidelin": 498, "gumbel": [0, 3, 8], "gzipfil": 326, "h": [164, 172, 209, 211, 344, 352, 481, 487, 499, 501], "h5py": 499, "ha": [6, 29, 30, 31, 32, 57, 68, 70, 71, 79, 81, 102, 107, 130, 140, 147, 148, 154, 155, 201, 202, 203, 204, 210, 212, 283, 293, 330, 342, 348, 351, 355, 366, 374, 381, 393, 399, 400, 403, 413, 425, 427, 429, 434, 435, 448, 467, 475, 479, 480, 484, 485, 487, 488, 491, 500, 501], "had": [350, 430, 502], "hadamard": 87, "half": [3, 8, 21, 101, 104, 105, 176, 378, 380, 382, 383, 385, 392], "halo": 487, "ham": [0, 3, 8], "han": [0, 3, 8], "hand": 481, "handl": [446, 450, 465, 467, 487, 493, 496, 500, 501], "happen": [41, 475, 493], "har": 501, "hardwar": [293, 316, 498, 500, 502], "have": [12, 13, 14, 19, 22, 23, 24, 25, 26, 27, 28, 33, 34, 35, 39, 40, 41, 44, 45, 46, 47, 52, 53, 54, 56, 58, 59, 60, 63, 65, 66, 68, 69, 70, 71, 72, 73, 82, 83, 85, 86, 90, 91, 92, 94, 97, 104, 105, 113, 120, 121, 122, 123, 124, 125, 126, 129, 131, 132, 137, 138, 143, 145, 149, 150, 151, 152, 153, 159, 160, 161, 162, 163, 171, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 189, 190, 191, 192, 193, 194, 195, 196, 197, 199, 203, 204, 206, 207, 209, 210, 211, 212, 321, 333, 335, 336, 338, 344, 345, 346, 347, 348, 350, 352, 353, 354, 400, 401, 402, 405, 406, 410, 411, 415, 416, 417, 418, 422, 423, 425, 426, 427, 431, 432, 433, 434, 444, 445, 449, 450, 452, 463, 475, 476, 478, 479, 481, 482, 484, 485, 489, 496, 499, 500, 501], "hazen": [209, 211, 344, 352], "header": [177, 476], "heapsort": [32, 419], "heat": 501, "heavisid": [3, 8], "height": [85, 137, 411, 452, 487, 501], "help": [475, 478, 482, 488, 497, 500, 501], "helper": [465, 480, 486], "henc": 130, "here": [8, 108, 395, 475, 476, 481, 487, 494, 497, 499, 500, 501], "herebi": 491, "herein": 491, "hermitian": [102, 107, 108, 164, 166, 168, 175, 465, 480], "hfft": [0, 3, 8], "high": [378, 381, 392, 476, 487, 500, 501], "higher": [38, 80, 143, 209, 211, 293, 344, 352, 501], "highest": [378, 381], "highli": 499, "highlight": [471, 472, 473, 487, 499, 500, 501], "hipr2": 482, "hist": [135, 500], "hist_loc": 500, "histogram": [0, 3, 8, 465, 498], "histogram2d": [3, 8], "histogram_bin_edg": [3, 8], "histogram_task": 500, "histogramdd": [3, 8], "hold": [34, 55, 57, 70, 71, 172, 193, 203, 204, 207, 210, 212, 293, 435, 487], "holder": 491, "home": 479, "homepag": 482, "hope": 475, "hopkin": 172, "horizont": [136, 137, 409], "host": 189, "hous": 482, "how": [54, 316, 321, 330, 349, 429, 476, 477, 480, 481, 485, 492, 494, 500, 501], "howev": [14, 16, 17, 19, 70, 169, 192, 205, 208, 210, 293, 348, 427, 429, 475, 491, 501], "howto": 498, "hpc": [487, 498], "hsplit": [0, 3, 8, 137], "hstack": [0, 3, 8, 56, 499], "htm": 482, "html": [482, 488, 491, 502], "http": [360, 475, 479, 480, 482, 486, 488, 491, 493, 501, 502], "hull": 479, "hundr": [487, 499], "hyndman": [209, 211, 344, 352], "hyperbol": [23, 25, 28, 66, 390, 418, 432, 465], "hypergeometr": [0, 3, 8], "hypot": [0, 3, 8], "hypotenus": 138, "hypothesi": 358, "i": [2, 8, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 41, 42, 43, 44, 45, 46, 47, 48, 49, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 107, 108, 109, 110, 111, 112, 113, 114, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 176, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 217, 221, 222, 264, 275, 276, 293, 295, 296, 299, 301, 314, 316, 318, 321, 325, 326, 327, 330, 333, 334, 335, 336, 338, 339, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 415, 416, 417, 418, 419, 421, 422, 423, 424, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 442, 444, 445, 446, 447, 449, 450, 451, 452, 453, 454, 467, 476, 478, 479, 480, 481, 482, 484, 485, 486, 487, 489, 490, 491, 492, 493, 494, 496, 497, 498, 501, 502], "i0": [3, 8, 142], "i1": 142, "i16_arr": 80, "iN": 142, "idea": 475, "ident": [0, 3, 8, 106, 114, 170, 174, 201, 202, 205, 208, 366, 388, 480], "identifi": 482, "identit": 480, "idiomat": 488, "idx": 484, "ieee": 467, "ifft": [0, 3, 8, 104, 105], "ifft2": [0, 3, 8], "ifftn": [0, 3, 8, 103, 110], "ifftshift": [0, 3, 8], "ignor": [49, 51, 69, 135, 201, 202, 205, 206, 207, 208, 209, 211, 493], "ihfft": [0, 3, 8], "ii": [68, 374], "iinfo": [3, 8], "ij": [68, 194], "ik": 142, "illeg": 48, "illustr": [194, 476, 499, 501], "imag": [0, 3, 8, 400, 482, 486, 500, 501], "image_np": 501, "imagin": [321, 500], "imaginari": [18, 35, 140, 147, 148, 155, 165, 166, 167, 168, 200, 298, 400, 410, 420], "imbal": 501, "immedi": 480, "impact": 499, "imper": 501, "implement": [8, 14, 16, 17, 19, 29, 30, 31, 61, 70, 71, 79, 83, 117, 118, 119, 143, 164, 169, 190, 192, 203, 204, 205, 208, 210, 343, 348, 427, 433, 450, 476, 479, 480, 487, 488, 491, 493, 496, 499, 500, 501], "impli": [68, 342, 447, 479, 480, 486, 491], "implic": 485, "implicit": [86, 169], "implment": 496, "import": [68, 190, 479, 480, 481, 482, 484, 485, 486, 487, 492, 494, 497, 499, 500, 501, 502], "importantli": 81, "improp": 501, "improv": [471, 472, 473, 501], "imshow": [482, 501], "in1d": [0, 3, 8], "in_arr": 500, "in_stor": 500, "inappropri": 358, "incident": 491, "includ": [21, 37, 81, 86, 135, 176, 188, 192, 206, 210, 212, 305, 348, 392, 395, 427, 449, 467, 475, 476, 478, 481, 487, 491, 493, 496, 499, 500], "inclus": [209, 211, 344, 352, 378, 381], "incorpor": 491, "incorrect": [487, 500], "increas": [81, 93, 103, 108, 135, 481, 488, 500, 501], "incur": 499, "ind": [81, 439, 440, 442, 443], "indefinit": 475, "independ": [326, 358, 366, 373, 476, 500, 501], "index": [6, 29, 30, 31, 32, 43, 54, 57, 79, 81, 96, 99, 104, 142, 144, 157, 190, 194, 201, 202, 277, 299, 314, 343, 349, 350, 397, 404, 412, 419, 421, 425, 429, 430, 446, 448, 456, 463, 465, 467, 481, 484, 489, 498], "index_arrai": [29, 30, 32, 33, 201, 202], "indexerror": 81, "indic": [0, 3, 8, 29, 30, 31, 32, 33, 36, 54, 61, 68, 74, 76, 77, 81, 84, 86, 87, 95, 98, 99, 100, 102, 103, 104, 105, 107, 108, 109, 110, 111, 112, 113, 114, 116, 136, 144, 189, 201, 202, 271, 272, 273, 274, 307, 310, 314, 324, 330, 337, 349, 350, 412, 415, 421, 429, 430, 439, 440, 442, 443, 446, 448, 451, 467, 475, 481, 484, 485, 488, 491, 493, 499, 500, 501], "indices_or_sect": [36, 421], "indirect": [31, 491], "individu": [363, 496], "ineffici": 467, "inexact": [3, 8, 120, 200, 210], "inf": [15, 70, 71, 172, 201, 202, 203, 204, 482, 493], "infer": [21, 37, 176, 188, 355, 404], "infin": [149, 150, 152, 153, 200, 394], "infinit": 172, "influenc": 373, "info": [3, 8], "inform": [86, 293, 299, 316, 326, 475, 480, 481, 482, 485, 488, 490, 492, 496, 500, 501, 502], "infti": 479, "inher": 501, "inherit": 293, "init": [386, 484, 494, 501], "initi": [1, 16, 17, 88, 205, 208, 210, 212, 269, 270, 302, 304, 309, 322, 348, 359, 427, 467, 481, 484, 485, 487, 494, 500], "inner": [0, 3, 8, 83, 87, 433, 500], "innermost": 48, "input": [6, 12, 13, 14, 15, 16, 17, 19, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 37, 38, 39, 40, 41, 43, 44, 45, 46, 48, 50, 52, 53, 55, 58, 59, 60, 61, 62, 63, 65, 66, 69, 70, 71, 72, 73, 74, 78, 80, 81, 82, 86, 87, 90, 91, 92, 93, 94, 95, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 129, 130, 131, 132, 135, 138, 140, 141, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 159, 160, 161, 162, 163, 164, 169, 172, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 275, 295, 296, 333, 334, 335, 336, 337, 338, 341, 342, 343, 344, 345, 346, 347, 348, 350, 351, 352, 353, 354, 356, 397, 399, 400, 401, 402, 403, 405, 406, 407, 410, 412, 414, 415, 416, 417, 418, 419, 420, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 438, 444, 445, 446, 447, 449, 450, 456, 465, 479, 482, 488, 497, 499, 500, 501], "inputarrai": 500, "inputstor": 500, "insert": [0, 3, 8, 29, 30, 48, 54, 79, 93, 176, 188, 201, 202, 314, 342, 350, 412, 413, 465, 501], "insid": [499, 500], "instal": [475, 476, 478, 489, 492, 498, 500], "instanc": [48, 85, 102, 137, 318, 359, 411, 452, 476, 490, 500, 501], "instanti": [2, 359, 476], "instead": [14, 16, 17, 19, 41, 43, 48, 135, 142, 190, 192, 193, 205, 206, 207, 209, 211, 212, 275, 299, 344, 348, 352, 381, 427, 449, 467, 479, 480, 481, 482, 486, 487, 488, 497, 498, 501], "instruct": [475, 476, 490, 501], "instrument": 500, "int": [1, 4, 6, 14, 16, 17, 19, 20, 21, 29, 30, 31, 32, 34, 36, 41, 42, 43, 47, 50, 51, 54, 55, 57, 58, 67, 68, 69, 70, 71, 74, 75, 76, 78, 79, 80, 81, 84, 87, 88, 89, 93, 96, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 117, 127, 128, 130, 133, 134, 135, 136, 139, 142, 144, 158, 170, 172, 176, 177, 188, 189, 192, 193, 198, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 237, 238, 264, 296, 297, 301, 302, 304, 305, 306, 309, 314, 315, 318, 321, 322, 330, 334, 339, 340, 342, 343, 344, 348, 350, 352, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 403, 404, 407, 409, 410, 412, 414, 419, 421, 424, 425, 427, 428, 429, 430, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 446, 447, 448, 449, 451, 454, 455, 463, 467, 481, 482, 484, 500, 501], "int16": [3, 8, 80, 333], "int32": [3, 8, 210, 321, 500], "int32_t": 476, "int64": [3, 8, 210, 500], "int64_t": 476, "int8": [3, 8], "int_": [3, 8, 318, 381, 434, 479], "int_0": 355, "int_lik": 379, "int_typ": 299, "intc": [3, 8], "integ": [2, 3, 8, 21, 36, 51, 54, 68, 70, 71, 80, 120, 122, 157, 161, 170, 172, 192, 193, 203, 204, 206, 207, 209, 210, 211, 212, 314, 318, 321, 342, 344, 348, 349, 352, 356, 363, 378, 381, 404, 405, 406, 409, 412, 421, 427, 435, 446, 448, 449, 500], "integer_lik": 433, "integr": [41, 135, 197, 478, 487, 500, 501], "intel": 501, "intellectu": 475, "intend": [194, 326, 485], "intens": [169, 482, 501], "intensity_max": [482, 501], "intensity_min": [482, 501], "intent": 120, "inter": 487, "interact": [283, 501], "interchang": [323, 428], "interest": [479, 480, 501], "interfac": [34, 293, 316, 501], "interior": 130, "intermedi": [86, 87, 192, 206, 209, 211, 344, 352, 499], "intern": 70, "interoper": 488, "interp": [3, 8], "interpolated_inverted_cdf": [209, 211, 344, 352], "interpret": [37, 51, 62, 157, 189, 299, 316, 349, 485], "interrupt": 491, "intersect1d": [3, 8], "interv": [21, 55, 81, 176, 188, 356, 370, 375, 378, 380, 381, 382, 383, 385, 391, 392, 393], "intp": [3, 8, 210], "introduc": [407, 484, 500, 501], "introduct": 498, "introselect": [31, 273, 308, 343], "inund": 487, "inv": [3, 8, 485], "invas": 499, "invers": [22, 23, 24, 25, 26, 28, 93, 103, 104, 105, 106, 107, 108, 109, 110, 145, 170, 185, 360, 394, 396, 485], "invert": [0, 3, 8, 141, 465], "inverted_cdf": [209, 211, 344, 352], "invest": 501, "invoc": [501, 502], "invok": [476, 485, 497, 500], "involv": [475, 487, 500], "irecv": 487, "irfft": [0, 3, 8, 110], "irfft2": [0, 3, 8], "irfftn": [0, 3, 8, 108, 109], "irrespect": [166, 168], "is_busdai": [3, 8], "isclos": [0, 3, 8], "iscomplex": [0, 3, 8], "iscomplexobj": [0, 3, 8], "isdtyp": [3, 8], "isend": 487, "isfinit": [0, 3, 8, 205, 212], "isfortran": [3, 8, 264], "isin": [3, 8], "isinf": [0, 3, 8], "isnan": [0, 3, 8, 205, 208, 210, 212], "isnat": [3, 8], "isneginf": [0, 3, 8], "isol": 476, "isposinf": [0, 3, 8], "isreal": [0, 3, 8], "isrealobj": [0, 3, 8], "isscalar": [0, 3, 8], "issu": [103, 104, 105, 467, 475, 488, 499, 500, 501], "issubdtyp": [3, 8], "issue_execution_f": 500, "item": [0, 8, 33, 326, 327, 365, 396, 446, 484], "items": 293, "iter": [6, 87, 209, 211, 282, 294, 295, 311, 344, 350, 352, 430, 484, 485, 486, 487, 494, 501], "ith": 142, "its": [12, 13, 14, 19, 22, 23, 24, 25, 26, 27, 28, 37, 41, 43, 44, 45, 46, 52, 53, 54, 59, 60, 63, 65, 66, 72, 73, 75, 82, 90, 91, 92, 94, 97, 120, 121, 122, 123, 124, 125, 126, 129, 131, 132, 135, 138, 139, 143, 145, 149, 150, 151, 159, 160, 161, 162, 163, 165, 166, 167, 168, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 190, 191, 195, 196, 197, 199, 293, 316, 328, 330, 335, 336, 338, 341, 346, 347, 353, 354, 373, 381, 396, 401, 402, 404, 405, 406, 415, 416, 417, 418, 422, 423, 426, 431, 432, 433, 435, 436, 437, 444, 445, 450, 475, 480, 484, 487, 491, 499, 500, 501], "itself": [54, 200, 368, 408, 424, 476], "ivan": 491, "ix_": [0, 3, 8], "j": [83, 172, 194, 209, 211, 330, 341, 344, 350, 352, 430, 437, 481, 485, 487, 499, 501], "j0": 54, "j1": 54, "jacobi": 483, "jacobi_stencil": 501, "jacobian": 485, "jcp": 481, "jm": 54, "john": [172, 479], "join": [58, 425, 465], "jr": [360, 373], "json": 467, "jsrun": 492, "june": 491, "jupyt": 498, "just": [56, 395, 475, 479, 480, 486], "k": [12, 13, 22, 23, 24, 25, 26, 27, 28, 34, 44, 45, 46, 52, 53, 59, 60, 63, 65, 66, 72, 73, 75, 78, 82, 83, 90, 91, 92, 94, 96, 97, 120, 121, 122, 123, 124, 125, 126, 129, 131, 132, 138, 142, 145, 149, 150, 151, 159, 160, 161, 162, 163, 173, 174, 175, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 189, 190, 191, 195, 196, 197, 199, 221, 275, 295, 335, 336, 338, 346, 347, 353, 354, 355, 356, 358, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 378, 381, 382, 383, 384, 385, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 401, 402, 405, 406, 409, 415, 416, 417, 418, 422, 423, 426, 431, 432, 437, 438, 439, 440, 441, 442, 443, 444, 445, 467, 479, 481, 483, 485, 500, 501], "kaiser": [0, 3, 8, 47], "kappa": 393, "ke": 501, "keep": [467, 479, 484, 500], "keepdim": [14, 16, 17, 19, 29, 30, 41, 172, 192, 193, 201, 202, 205, 206, 207, 208, 209, 210, 211, 212, 269, 270, 302, 303, 304, 309, 322, 332, 344, 348, 352, 427, 449], "kei": [220, 228, 263, 488, 500, 501], "kern": 491, "kernel": [482, 500, 501, 502], "kernel_i": [482, 501], "kernel_x": [482, 501], "keyword": [2, 12, 13, 22, 23, 24, 25, 26, 27, 28, 44, 45, 46, 52, 53, 55, 59, 60, 63, 65, 66, 68, 72, 73, 82, 90, 91, 92, 94, 97, 120, 121, 122, 123, 124, 125, 126, 129, 131, 132, 138, 145, 149, 150, 151, 159, 160, 161, 162, 163, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 191, 194, 195, 196, 197, 199, 200, 335, 336, 338, 346, 347, 353, 354, 401, 402, 405, 406, 415, 416, 417, 418, 422, 423, 426, 431, 432, 444, 445, 446], "kill": 164, "kind": [31, 32, 58, 64, 86, 141, 190, 273, 274, 275, 308, 319, 343, 419, 465, 479, 480, 486, 488, 491], "know": [475, 485, 488, 499], "knowledg": [475, 487], "known": [321, 361, 374, 376, 387, 393, 396, 501], "kron": [3, 8], "kth": [31, 273, 308, 343], "kwarg": [12, 13, 22, 23, 24, 25, 26, 27, 28, 44, 45, 46, 52, 53, 55, 59, 60, 63, 65, 66, 72, 73, 82, 90, 91, 92, 94, 97, 120, 121, 122, 123, 124, 125, 126, 129, 131, 132, 138, 145, 149, 150, 151, 159, 160, 161, 162, 163, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 191, 195, 196, 197, 199, 255, 335, 336, 338, 346, 347, 353, 354, 401, 402, 405, 406, 415, 416, 417, 418, 422, 423, 426, 431, 432, 444, 445, 446, 479], "l": [36, 164, 166, 168, 480, 491, 501], "l2": [481, 485], "l2_norm": 485, "label": [86, 476, 479, 481, 484], "label_color": 484, "label_color_map": 484, "label_valu": 484, "lam": 375, "lambda": [360, 366, 395], "languag": [479, 480, 486], "laplac": [0, 3, 8, 373], "laptop": 501, "larg": [61, 68, 177, 200, 373, 375, 390, 429, 487, 494, 499, 500, 501], "larger": [43, 55, 80, 98, 99, 100, 103, 104, 105, 107, 110, 111, 113, 177, 391, 435, 447, 494, 501], "larger_imag": 501, "largest": [43, 87, 122, 172, 200, 378, 381], "last": [14, 19, 21, 31, 32, 41, 42, 48, 69, 80, 83, 98, 99, 100, 102, 103, 104, 105, 107, 108, 109, 110, 111, 113, 117, 130, 143, 171, 176, 188, 190, 212, 296, 314, 343, 348, 397, 404, 407, 412, 419, 420, 425, 427, 429, 433], "latenc": 501, "later": [373, 501], "latest": [488, 490, 501, 502], "latter": [350, 430, 499], "launch": [476, 492, 494, 499, 500], "launcher": [488, 492, 500, 501], "law": [396, 479, 480, 486], "layout": [34, 275, 293, 325, 397, 404], "lcm": [0, 3, 8], "ldexp": [0, 3, 8], "lead": [48, 194, 203, 204, 488, 500, 501], "leakag": 47, "learn": 488, "least": [38, 39, 40, 41, 43, 61, 68, 77, 85, 87, 114, 118, 148, 165, 166, 167, 168, 173, 175, 365, 411, 452, 476, 499, 501], "left": [14, 16, 17, 19, 29, 30, 41, 81, 118, 161, 172, 192, 193, 201, 202, 205, 206, 207, 208, 209, 210, 211, 212, 314, 344, 348, 352, 391, 410, 412, 427, 449, 481, 487], "left_shift": [0, 3, 8], "leg": 138, "legaci": 386, "legal": [144, 475, 491], "legales": 477, "legat": [349, 467, 476, 478, 479, 480, 486, 489, 490, 493, 496, 497, 498, 501, 502], "legate_auto_config": 501, "legate_config": [488, 497], "legate_cpus_2": 502, "legate_limit_stdout": 501, "legate_root": 476, "legate_task": 500, "legate_test": [467, 488], "legend": [479, 481], "legion": [498, 501], "legion_default_arg": 492, "lele": 481, "len": [57, 81, 100, 101, 105, 108, 110, 113, 142, 194, 247, 484], "length": [12, 13, 16, 17, 21, 22, 23, 24, 25, 26, 27, 28, 36, 41, 43, 44, 45, 46, 52, 53, 57, 59, 60, 63, 65, 66, 70, 71, 72, 73, 80, 82, 90, 91, 92, 94, 97, 98, 99, 100, 102, 103, 104, 105, 106, 107, 108, 110, 111, 113, 120, 121, 122, 123, 124, 125, 126, 129, 130, 131, 132, 135, 137, 138, 142, 145, 149, 150, 151, 159, 160, 161, 162, 163, 165, 166, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 191, 193, 194, 195, 196, 197, 199, 203, 204, 205, 207, 208, 314, 320, 335, 336, 338, 346, 347, 350, 353, 354, 357, 401, 402, 404, 405, 406, 408, 411, 412, 413, 414, 415, 416, 417, 418, 422, 423, 424, 426, 430, 431, 432, 433, 434, 444, 445, 452, 476, 481, 500], "less": [0, 3, 8, 42, 47, 57, 68, 70, 71, 79, 114, 133, 134, 158, 169, 203, 204, 210, 212, 348, 365, 392, 416, 427, 435, 485, 488, 499], "less_equ": [0, 3, 8], "let": [467, 475, 479, 480, 485, 486, 500, 501], "letter": 316, "level": [48, 68, 327, 463, 476, 493, 499, 501], "leverag": [141, 500, 501], "lexsort": [3, 8], "lg": 500, "lgpatch": 497, "lh": 481, "liabil": 491, "liabl": 491, "liber": [83, 86, 143, 190, 433, 450], "librari": [283, 463, 467, 476, 488, 489, 491, 500, 501], "licens": [475, 479, 480, 486, 491], "lifespan": 487, "lightli": 490, "lightweight": 475, "like": [39, 40, 48, 56, 64, 74, 86, 110, 114, 173, 175, 176, 177, 188, 189, 190, 194, 275, 293, 318, 326, 350, 392, 394, 397, 404, 430, 437, 465, 475, 480, 481, 485, 486, 487, 492, 499, 500, 501, 502], "limit": [55, 98, 99, 100, 102, 103, 104, 105, 107, 108, 109, 110, 111, 112, 113, 165, 166, 167, 168, 174, 278, 373, 375, 391, 392, 479, 480, 486, 491, 501], "linalg": [0, 3, 8, 456, 465, 480, 481, 484, 485, 497, 499], "linalgerror": [8, 165, 166, 167, 168, 173, 174, 175], "line": [475, 478, 487, 488, 496, 500, 501], "linear": [61, 86, 174, 188, 209, 211, 344, 352, 456, 465, 476, 481, 485, 500, 501], "linearli": 499, "link": [493, 501], "linspac": [0, 3, 8, 21, 479, 481, 499], "linux": [475, 488, 490, 498], "list": [8, 21, 31, 32, 36, 37, 38, 39, 40, 48, 49, 54, 84, 86, 87, 93, 101, 114, 115, 130, 136, 264, 327, 343, 413, 419, 421, 433, 436, 451, 476, 478, 484, 491], "liter": [64, 86, 141], "literal_ev": 177, "littl": [83, 143, 190, 342, 433, 447, 450, 480], "live": 500, "ll": [484, 492, 500], "ln": [188, 395, 501], "load": [0, 3, 8, 290, 291, 500, 501], "loadtxt": [3, 8], "loan": 172, "loc": [364, 366, 367, 373, 481], "local": [487, 488, 500, 501], "local_grid": 487, "local_hist": 500, "local_ni": 487, "local_nx": 487, "local_rank": 487, "locat": [12, 13, 22, 23, 24, 25, 26, 27, 28, 44, 45, 46, 49, 51, 52, 53, 59, 60, 63, 65, 66, 72, 73, 82, 90, 91, 92, 94, 97, 114, 120, 121, 122, 123, 124, 125, 126, 129, 131, 132, 138, 145, 149, 150, 151, 152, 153, 159, 160, 161, 162, 163, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 189, 190, 191, 194, 195, 196, 197, 199, 314, 335, 336, 338, 341, 346, 347, 353, 354, 364, 366, 367, 374, 401, 402, 405, 406, 412, 415, 416, 417, 418, 422, 423, 426, 431, 432, 444, 445, 482, 484, 496, 497, 501], "lock": 293, "log": [0, 3, 8, 188, 368, 369, 479, 489], "log10": [0, 3, 8], "log1p": [0, 3, 8], "log2": [0, 3, 8], "log_bas": 188, "logaddexp": [0, 3, 8], "logaddexp2": [0, 3, 8], "logarithm": [178, 179, 180, 181, 182, 183, 369, 465], "logic": [14, 19, 342, 456, 465, 487, 500], "logical_and": [0, 3, 8, 499], "logical_not": [0, 3, 8], "logical_or": [0, 3, 8], "logical_xor": [0, 3, 8], "logist": [0, 3, 8], "lognorm": [0, 3, 8], "logseri": [0, 3, 8], "logspac": [0, 3, 8], "lomax": 374, "long": [3, 8, 381, 501], "longdoubl": [3, 8, 299], "longer": [43, 61, 102, 108, 499], "longlong": [3, 8], "look": [430, 475, 486, 488, 500], "loop": [485, 487], "lorena": 487, "lorentz": 387, "lose": [299, 327], "loss": 491, "lost": 326, "low": [104, 105, 378, 381, 392, 463], "lower": [55, 96, 135, 164, 166, 168, 209, 211, 344, 352, 391, 392, 437, 438, 439, 440, 480, 487], "lowercas": 293, "lowest": [41, 87, 159, 374, 378, 381], "lstsq": [3, 8], "lt": 481, "m": [40, 42, 47, 61, 68, 83, 85, 96, 99, 100, 102, 104, 105, 108, 110, 113, 117, 118, 119, 133, 134, 158, 164, 165, 166, 167, 168, 169, 170, 173, 174, 175, 190, 192, 194, 206, 296, 341, 350, 355, 356, 358, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 378, 381, 382, 383, 384, 385, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 409, 413, 429, 430, 437, 438, 439, 441, 442, 449, 476, 479, 480, 486, 490, 500, 501], "machin": [326, 400, 476, 488, 492, 501, 502], "maco": [488, 490], "made": [34, 38, 200, 275, 293, 316, 397], "magenta": 484, "magnitud": [18, 484, 501], "mai": [6, 14, 19, 21, 29, 30, 49, 51, 54, 55, 58, 64, 70, 71, 86, 130, 172, 177, 190, 194, 200, 203, 204, 275, 293, 318, 327, 350, 356, 392, 393, 408, 467, 475, 478, 479, 480, 481, 485, 486, 488, 491, 493, 496, 497, 500, 501], "main": [75, 76, 77, 78, 79, 96, 114, 139, 435, 437, 438, 481, 492, 501, 502], "maintain": [79, 475, 487], "mainten": 487, "major": [34, 295, 397, 448, 488], "make": [48, 49, 56, 64, 85, 137, 194, 283, 293, 365, 411, 452, 465, 475, 476, 480, 484, 487, 488, 493, 494, 497, 499, 500, 501], "make_grid": 486, "manag": [359, 467, 487, 501], "mani": [86, 321, 360, 447, 476, 500, 501], "manifest": 499, "manipul": [456, 465], "manner": [493, 501], "mantissa": 126, "manual": [434, 475, 487, 490, 494, 501], "map": [54, 484, 487, 500], "mapper": 488, "margin": 81, "mark": 475, "marker": 484, "marku": 485, "mask": [157, 189, 345, 351, 484], "mask_func": 189, "mask_funct": 189, "mask_indic": [0, 3, 8], "mass": [135, 363], "master": 501, "match": [48, 55, 58, 64, 80, 130, 190, 350, 425, 430, 449, 467, 481, 500], "materi": [189, 293, 482, 484, 491], "math": [299, 467, 491], "mathbf": [481, 485, 501], "mathemat": [172, 456, 465, 501], "mathtt": 479, "matmul": [0, 3, 8, 467, 500, 501], "matmul_cache_s": 456, "matmul_task": 500, "matplotlib": [479, 481, 482, 484, 486, 501], "matric": [48, 114, 165, 166, 167, 168, 169, 171, 172, 190, 194, 397, 465, 480, 481, 500, 501], "matrix": [7, 8, 68, 79, 83, 164, 165, 166, 167, 168, 169, 170, 172, 173, 174, 190, 194, 330, 333, 397, 408, 441, 450, 465, 480, 481, 485, 498], "matrix_norm": 8, "matrix_pow": [0, 8], "matrix_rank": [3, 8], "matrix_transpos": [3, 8], "matter": 488, "matthew": 491, "matvec": [3, 8], "max": [0, 135, 172, 208, 278, 434, 482, 484, 499, 501], "max_eager_volum": 456, "max_header_s": 177, "max_it": 486, "maxim": 501, "maximum": [0, 3, 8, 16, 17, 29, 42, 47, 55, 87, 123, 133, 134, 158, 177, 201, 205, 208, 271, 302, 484, 493, 499], "may_share_memori": [3, 8], "mayb": 475, "mb": [478, 501], "md": 172, "me": 475, "mean": [0, 3, 8, 48, 64, 67, 86, 99, 100, 104, 105, 110, 111, 113, 127, 130, 172, 190, 206, 275, 295, 325, 330, 358, 366, 367, 368, 372, 373, 379, 394, 397, 404, 409, 429, 447, 483, 485, 500, 501], "measur": [360, 449, 488, 494, 495, 497, 498, 500, 501], "mechan": [475, 500], "median": [0, 3, 8, 207, 367], "median_unbias": [209, 211, 344, 352], "medic": 500, "meet": [34, 475, 499, 501], "memavail": 488, "meminfo": 488, "memmap": [3, 8], "memo": 222, "memori": [34, 49, 51, 141, 169, 189, 193, 194, 207, 209, 211, 275, 276, 286, 293, 295, 305, 316, 321, 325, 344, 352, 397, 404, 478, 481, 487, 500, 501], "memoryview": 286, "mention": [484, 488, 499, 501], "merchant": 491, "merg": [54, 475, 491, 494, 500], "merged_arrai": 54, "mergesort": [32, 419], "merton": 501, "mesh": [157, 487, 494], "meshgrid": [0, 3, 8, 157], "messag": [488, 494], "met": [491, 499], "method": [1, 2, 4, 7, 14, 16, 17, 19, 34, 61, 169, 177, 192, 205, 208, 209, 210, 211, 299, 317, 318, 326, 334, 344, 348, 352, 427, 479, 483, 493, 500, 501], "mgrid": 157, "microsecond": 499, "middl": [104, 105], "midpoint": [209, 211, 344, 352], "might": [32, 70, 86, 189, 419, 485, 488, 494, 499, 500, 501], "million": [479, 487, 500], "millisecond": [494, 499, 500], "mimic": [342, 447, 487], "mimick": 487, "min": [0, 135, 172, 173, 175, 208, 278], "min_cpu_chunk": 456, "min_gpu_chunk": 456, "min_omp_chunk": 456, "min_scalar_typ": [3, 8], "miniforg": 501, "miniforge3": 501, "minim": [47, 501], "minimum": [0, 3, 8, 16, 17, 30, 34, 43, 55, 120, 124, 202, 205, 208, 272, 304, 501], "minlength": [43, 484], "mintypecod": [3, 8], "mirror": 487, "miscellan": 465, "mise": 393, "mismatch": [48, 54, 57, 500], "mitig": 499, "mkdir": 501, "mod": [3, 8, 54], "mode": [54, 61, 86, 98, 99, 100, 102, 103, 104, 105, 107, 108, 109, 110, 111, 112, 113, 173, 177, 277, 310, 324, 349, 364, 384, 387, 391, 393, 398, 429, 467, 482, 499, 501], "model": [363, 476, 479, 480, 486, 487, 501], "modf": [0, 3, 8], "modif": [475, 487, 491], "modifi": [64, 114, 193, 207, 209, 211, 344, 352, 475, 481, 491], "modul": [283, 408, 501], "modular": 54, "moivr": 373, "monoton": [81, 135], "more": [38, 39, 40, 49, 51, 55, 70, 71, 75, 79, 81, 83, 85, 86, 98, 103, 108, 109, 111, 112, 137, 143, 169, 171, 190, 194, 203, 204, 210, 321, 394, 395, 409, 411, 425, 433, 435, 446, 450, 452, 478, 480, 481, 482, 484, 487, 490, 492, 493, 499, 500, 501, 502], "moshier": 491, "most": [34, 80, 85, 86, 87, 103, 137, 200, 365, 400, 411, 430, 452, 475, 487, 493, 501], "mostli": 488, "motion": 394, "move": [198, 321, 500, 501], "moveaxi": [0, 3, 8], "mpi": [487, 492, 501], "mpi4pi": [487, 494], "mpi_fin": 487, "mpirun": 492, "msg00295": 491, "mt19937": [3, 8], "mu": [366, 374, 393], "much": [42, 475, 499], "multi": [3, 86, 98, 99, 100, 102, 103, 104, 105, 107, 108, 109, 110, 111, 112, 113, 165, 166, 167, 168, 169, 174, 487, 488, 489, 490, 498, 499], "multi_dot": [0, 8], "multi_index": 398, "multidimension": 450, "multinomi": [3, 8], "multipl": [1, 2, 7, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 116, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 174, 176, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 214, 215, 216, 220, 221, 222, 223, 224, 226, 227, 229, 230, 231, 232, 233, 234, 235, 236, 239, 240, 241, 242, 243, 244, 245, 246, 248, 249, 250, 251, 252, 253, 254, 256, 257, 258, 260, 261, 262, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 277, 278, 279, 280, 281, 282, 287, 288, 291, 292, 295, 299, 302, 303, 304, 307, 308, 309, 310, 311, 313, 314, 316, 319, 320, 322, 323, 324, 325, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 478, 485, 487, 488, 490, 498, 499, 502], "multipli": [0, 3, 8, 70, 83, 190, 203, 348, 374, 382, 383, 385, 499, 500], "multivariate_norm": [3, 8], "must": [1, 12, 13, 14, 16, 17, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 41, 44, 45, 46, 48, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 63, 65, 66, 70, 71, 72, 73, 80, 81, 82, 83, 85, 90, 91, 92, 94, 97, 102, 108, 110, 118, 120, 121, 122, 123, 124, 125, 126, 129, 130, 131, 132, 135, 137, 138, 143, 145, 149, 150, 151, 152, 153, 159, 160, 161, 162, 163, 164, 171, 172, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 190, 191, 192, 193, 195, 196, 197, 198, 199, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 264, 278, 293, 330, 335, 336, 338, 344, 345, 346, 347, 348, 350, 352, 353, 354, 358, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 371, 372, 373, 374, 375, 376, 377, 379, 384, 389, 390, 391, 394, 395, 396, 401, 402, 405, 406, 407, 409, 410, 411, 412, 415, 416, 417, 418, 422, 423, 425, 426, 427, 430, 431, 432, 433, 435, 444, 445, 447, 449, 450, 452, 476, 487, 491, 492, 500, 501], "my": 475, "myenv": [490, 501], "myron": 501, "n": [7, 33, 36, 40, 43, 54, 61, 68, 76, 77, 80, 81, 83, 85, 96, 98, 99, 100, 102, 103, 104, 105, 107, 108, 110, 111, 113, 114, 130, 139, 142, 157, 170, 172, 173, 175, 189, 190, 194, 314, 321, 330, 341, 345, 351, 355, 356, 358, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 378, 381, 382, 383, 384, 385, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 408, 411, 412, 421, 433, 437, 438, 439, 442, 443, 449, 452, 456, 479, 480, 481, 484, 486, 490, 492, 500, 501], "n1": 194, "n2": 194, "n3": 194, "n_bin": 500, "n_centroid": 484, "n_dim": 484, "n_element": 484, "n_gpu": 487, "n_iter": 484, "n_iter_check": 484, "n_point": 481, "n_stencil": 481, "n_warmup_it": 494, "naiv": [499, 501], "name": [290, 293, 316, 328, 394, 475, 491, 497, 501, 502], "nan": [15, 29, 30, 35, 146, 151, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 493], "nan_to_num": [0, 3, 8], "nanargmax": [0, 3, 8, 202, 467], "nanargmin": [0, 3, 8, 201, 467], "nancumprod": [0, 3, 8], "nancumsum": [0, 3, 8], "nanmax": [0, 3, 8, 208, 467], "nanmean": [0, 3, 8], "nanmedian": [0, 3, 8], "nanmin": [0, 3, 8, 205, 467], "nanpercentil": [0, 3, 8], "nanprod": [0, 3, 8], "nanquantil": [0, 3, 8], "nanstd": [3, 8], "nansum": [0, 3, 8], "nanvar": [3, 8], "nation": 501, "nativ": 493, "natur": [178, 180, 373, 501], "navier": 487, "nbad": 365, "nd": [6, 48, 299], "ndarrai": [0, 7, 8, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 358, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 381, 382, 383, 384, 385, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 461, 467, 482, 484, 485, 493, 496, 500, 501], "ndenumer": [3, 8], "ndim": [0, 3, 6, 8, 16, 17, 33, 38, 39, 40, 48, 76, 79, 114, 172, 208, 327, 430, 434], "ndindex": [3, 8], "nditer": [3, 8], "ndmin": 34, "ndshape": [6, 50, 317, 398, 414, 448], "ndshapelik": [4, 50, 51, 117, 127, 128, 339, 340, 383, 385, 404, 424, 455], "nearest": [209, 211, 327, 344, 352, 406], "necessari": [38, 43, 48, 54, 64, 70, 71, 102, 108, 110, 114, 192, 193, 203, 204, 206, 207, 210, 212, 348, 349, 410, 427, 449, 487, 496, 500], "necessarili": [54, 479, 480, 486], "need": [34, 49, 64, 81, 193, 194, 207, 397, 429, 430, 453, 467, 476, 480, 484, 487, 488, 499, 500, 501], "neg": [0, 3, 8, 14, 19, 41, 43, 54, 78, 79, 96, 103, 104, 105, 108, 117, 120, 130, 150, 152, 170, 176, 200, 212, 296, 348, 360, 362, 364, 366, 367, 368, 370, 371, 373, 376, 377, 379, 384, 389, 397, 410, 422, 427, 429, 433, 435, 447], "negative_binomi": [0, 3, 8], "neginf": 200, "neglig": 491, "neighbor": [481, 487, 501], "neither": 491, "nersc": 501, "nest": [34, 48, 327, 487, 499], "nested_it": 3, "network": 498, "never": [61, 316], "new": [14, 19, 51, 54, 70, 71, 74, 79, 88, 89, 93, 117, 118, 119, 127, 144, 176, 188, 189, 192, 193, 198, 203, 204, 206, 207, 210, 212, 217, 275, 277, 289, 313, 330, 333, 339, 359, 380, 404, 410, 425, 428, 434, 449, 454, 463, 484, 490, 500, 501], "new_label": 484, "newaxi": [330, 484, 500], "newli": [34, 275], "newshap": 404, "newton": 483, "next": [321, 336, 475, 501], "nextaft": [0, 3, 8], "ngood": 365, "ni": [194, 350, 429, 430], "nightli": 490, "ninja": 476, "niter": [485, 494, 499], "nj": [350, 429, 430], "nk": [350, 429, 430], "nn": 194, "nnewton": 485, "nnode": 501, "node": [293, 478, 487, 488, 489, 490, 498, 502], "non": [14, 16, 17, 19, 21, 33, 39, 40, 41, 43, 67, 116, 135, 147, 157, 172, 176, 189, 192, 194, 200, 205, 208, 210, 293, 305, 307, 337, 345, 348, 360, 362, 364, 366, 367, 368, 371, 372, 373, 376, 377, 379, 384, 389, 422, 427, 433, 447, 487, 493], "nonc": [371, 372], "noncentr": [371, 372], "noncentral_chisquar": [0, 3, 8], "noncentral_f": [0, 3, 8], "none": [1, 2, 4, 6, 12, 13, 14, 16, 17, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 34, 37, 41, 43, 44, 45, 46, 52, 53, 54, 55, 57, 58, 59, 60, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 79, 80, 82, 83, 86, 89, 90, 91, 92, 94, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 117, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 135, 138, 141, 143, 144, 145, 149, 150, 151, 152, 153, 159, 160, 161, 162, 163, 171, 172, 174, 176, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 190, 191, 192, 193, 195, 196, 197, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 269, 270, 271, 272, 273, 274, 276, 277, 278, 279, 283, 284, 285, 287, 288, 291, 296, 297, 299, 302, 303, 304, 308, 309, 310, 314, 315, 316, 319, 320, 322, 324, 327, 329, 330, 332, 333, 335, 336, 338, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 352, 353, 354, 355, 356, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 378, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 401, 402, 403, 405, 406, 407, 410, 412, 415, 416, 417, 418, 419, 422, 423, 424, 425, 426, 427, 429, 430, 431, 432, 433, 435, 436, 437, 439, 442, 444, 445, 446, 447, 449, 450, 453, 455, 467, 484, 500], "noninfring": 491, "nonneg": [365, 395], "nonzero": [0, 3, 8, 95, 116, 157, 342, 499, 501], "nor": 491, "norm": [0, 8, 98, 99, 100, 102, 103, 104, 105, 107, 108, 109, 110, 111, 112, 113, 169, 465, 481, 484, 485, 499], "normal": [0, 3, 8, 42, 47, 48, 68, 98, 99, 100, 102, 103, 104, 105, 107, 108, 109, 110, 111, 112, 113, 133, 134, 135, 158, 165, 166, 355, 358, 366, 368, 379, 390, 393, 479, 482, 484, 501], "normal_unbias": [209, 211, 344, 352], "north": [486, 501], "not_equ": [0, 3, 8, 484], "note": [12, 13, 15, 18, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 34, 37, 44, 45, 46, 52, 53, 54, 59, 60, 61, 63, 64, 65, 66, 68, 70, 71, 72, 73, 74, 79, 80, 81, 82, 83, 86, 87, 90, 91, 92, 94, 97, 98, 99, 100, 101, 102, 103, 104, 105, 107, 108, 109, 110, 111, 112, 113, 114, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 129, 131, 132, 135, 138, 141, 142, 143, 144, 145, 146, 149, 150, 151, 156, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 189, 190, 191, 194, 195, 196, 197, 199, 203, 204, 205, 208, 275, 286, 293, 299, 305, 316, 318, 321, 326, 327, 333, 335, 336, 338, 343, 346, 347, 353, 354, 359, 368, 397, 400, 401, 402, 403, 404, 405, 406, 407, 408, 415, 416, 417, 418, 422, 423, 426, 429, 431, 432, 433, 437, 439, 440, 442, 443, 444, 445, 446, 450, 481, 482, 485, 488, 499, 501], "notebook": 502, "notic": [479, 485, 488, 490], "notion": [166, 168], "novel": 500, "now": [54, 476, 479, 480, 482, 486, 500, 501], "np": [12, 13, 16, 17, 22, 23, 24, 25, 26, 27, 28, 44, 45, 46, 48, 52, 53, 59, 60, 63, 65, 66, 70, 71, 72, 73, 80, 81, 82, 86, 90, 91, 92, 94, 97, 115, 116, 120, 121, 122, 123, 124, 125, 126, 129, 131, 132, 138, 144, 145, 149, 150, 151, 157, 159, 160, 161, 162, 163, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 189, 190, 191, 193, 194, 195, 196, 197, 199, 203, 204, 207, 294, 318, 321, 330, 335, 336, 338, 346, 347, 348, 353, 354, 381, 400, 401, 402, 405, 406, 415, 416, 417, 418, 422, 423, 426, 427, 429, 431, 432, 434, 444, 445, 479, 480, 481, 482, 484, 485, 486, 487, 492, 493, 494, 497, 499, 501, 502], "npoint": 481, "npt": [4, 36, 55, 58, 96, 127, 128, 135, 139, 142, 147, 148, 154, 156, 176, 188, 276, 294, 315, 333, 339, 340, 383, 385, 413, 434, 437, 453, 455], "npy": [177, 465], "npz": [177, 465], "nsampl": 365, "ntask": 501, "ntime": 500, "nuc": 172, "nuclear": 172, "null": 430, "nullabl": 500, "num": [176, 188, 499, 501], "num_bin": 500, "num_parallel": 476, "num_timestep": 487, "numa": 476, "number": [2, 3, 6, 8, 12, 13, 15, 18, 22, 23, 24, 25, 26, 27, 28, 33, 34, 41, 42, 43, 44, 45, 46, 47, 49, 52, 53, 54, 59, 60, 63, 65, 66, 67, 68, 72, 73, 76, 78, 80, 82, 87, 90, 91, 92, 93, 94, 96, 97, 100, 102, 103, 104, 105, 107, 108, 110, 111, 113, 120, 121, 122, 123, 124, 125, 126, 129, 130, 131, 132, 133, 134, 135, 138, 139, 142, 145, 148, 149, 150, 151, 155, 157, 158, 159, 160, 161, 162, 163, 172, 176, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 191, 192, 195, 196, 197, 199, 200, 203, 204, 205, 206, 208, 210, 212, 301, 306, 318, 334, 335, 336, 338, 342, 345, 346, 347, 353, 354, 356, 357, 358, 363, 365, 370, 373, 375, 386, 401, 402, 403, 405, 406, 407, 409, 410, 415, 416, 417, 418, 422, 423, 426, 429, 431, 432, 434, 437, 444, 445, 446, 447, 449, 450, 465, 467, 478, 479, 481, 485, 487, 488, 492, 493, 500, 501], "number_of_dimens": 334, "numer": [103, 104, 105, 108, 110, 152, 153, 172, 335, 346, 361, 372, 465, 487, 493], "numit": 6, "numpi": [1, 2, 3, 4, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 94, 95, 96, 97, 98, 99, 100, 102, 103, 104, 105, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 275, 283, 289, 293, 316, 321, 333, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 399, 400, 401, 402, 403, 404, 405, 406, 408, 411, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 465, 467, 478, 479, 480, 481, 482, 484, 485, 486, 487, 489, 495, 496, 498, 500, 502], "numpy_compat": 456, "nvidia": [479, 480, 482, 486, 488, 490, 501, 502], "nx": [194, 487, 499, 501], "ny": [194, 487, 499, 501], "nyquist": [101, 103, 104, 105], "o": [1, 293, 359, 484, 494, 501], "obj": [34, 74, 144], "object": [6, 14, 19, 34, 62, 144, 156, 164, 172, 177, 193, 207, 209, 211, 264, 276, 283, 286, 293, 299, 301, 305, 325, 326, 327, 333, 344, 352, 359, 404, 433, 437, 446, 500], "object_": [3, 8], "observ": 68, "obtain": [142, 318, 374, 479, 480, 486, 491, 500], "occas": 475, "occasion": 493, "occur": [58, 64, 70, 71, 74, 86, 144, 190, 200, 203, 204, 275, 295, 370, 373, 375, 391, 397, 499, 501], "occurr": [43, 446], "odd": [42, 47, 102, 106, 108, 110, 111, 133, 134, 158], "ofc": 70, "off": [21, 447, 475, 481], "offer": [488, 490, 499], "offload": 467, "offset": [4, 79, 189, 287, 297, 315, 321, 329, 435, 439, 440, 442, 443, 494], "often": [21, 42, 355, 358, 373, 475, 484, 499, 501], "ogrid": 157, "omiss": 333, "omit": [264, 333], "omp": [478, 488, 501], "ompthread": [478, 501], "onc": [475, 476, 487, 501], "one": [6, 14, 16, 17, 19, 29, 30, 38, 41, 42, 43, 47, 49, 51, 54, 55, 64, 74, 86, 96, 98, 99, 102, 103, 104, 106, 107, 108, 110, 111, 130, 133, 134, 139, 142, 148, 157, 158, 172, 180, 192, 193, 194, 201, 202, 203, 205, 206, 207, 208, 209, 210, 211, 212, 286, 293, 294, 295, 299, 320, 321, 337, 344, 348, 352, 363, 374, 378, 413, 424, 425, 427, 439, 440, 442, 443, 449, 463, 475, 479, 487, 488, 490, 494, 499, 500, 501], "ones": [0, 3, 8, 83, 93, 96, 139, 143, 152, 153, 189, 190, 203, 210, 212, 340, 433, 437, 450, 481, 484, 487, 493, 499, 500], "ones_lik": [0, 3, 8], "onli": [12, 13, 22, 23, 24, 25, 26, 27, 28, 34, 36, 38, 41, 42, 44, 45, 46, 47, 52, 53, 55, 59, 60, 61, 63, 64, 65, 66, 72, 73, 82, 83, 86, 87, 90, 91, 92, 94, 97, 101, 120, 121, 122, 123, 124, 125, 126, 129, 130, 131, 132, 133, 134, 135, 138, 142, 145, 149, 150, 151, 158, 159, 160, 161, 162, 163, 164, 166, 168, 172, 176, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 190, 191, 195, 196, 197, 199, 200, 201, 202, 205, 208, 275, 293, 299, 316, 335, 336, 338, 345, 346, 347, 350, 353, 354, 386, 397, 401, 402, 403, 404, 405, 406, 415, 416, 417, 418, 422, 423, 426, 430, 431, 432, 433, 444, 445, 446, 447, 450, 463, 467, 475, 482, 484, 487, 490, 492, 493, 494, 499, 500, 501], "onto": [293, 488], "oom": 488, "op": 386, "open": [21, 81, 157, 176, 177, 326, 378, 380, 382, 383, 385, 392, 475, 482, 488, 490, 501], "openmp": [476, 478, 501], "oper": [7, 16, 17, 85, 86, 87, 93, 122, 137, 143, 164, 200, 205, 296, 341, 350, 403, 411, 433, 446, 450, 452, 456, 465, 467, 481, 482, 487, 493, 494, 500], "operand": [86, 87], "opposit": [275, 293], "optim": [47, 86, 87, 141, 171, 299, 467, 481, 487, 496, 501], "option": [1, 12, 13, 14, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 34, 37, 41, 43, 44, 45, 46, 49, 51, 52, 53, 54, 55, 57, 58, 59, 60, 61, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 78, 79, 80, 81, 82, 83, 86, 88, 89, 90, 91, 92, 94, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 117, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 135, 138, 139, 141, 142, 143, 144, 145, 149, 150, 151, 152, 153, 159, 160, 161, 162, 163, 166, 168, 171, 172, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 264, 275, 295, 296, 314, 316, 325, 333, 335, 336, 338, 339, 340, 341, 342, 343, 344, 346, 347, 348, 349, 352, 353, 354, 355, 356, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 381, 382, 383, 384, 385, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 400, 401, 402, 403, 404, 405, 406, 407, 410, 412, 413, 415, 416, 417, 418, 419, 421, 422, 423, 424, 425, 426, 427, 429, 431, 432, 433, 435, 436, 437, 438, 439, 440, 442, 443, 444, 445, 446, 447, 448, 449, 450, 454, 455, 475, 476, 478, 483, 488, 490, 492, 496, 497, 499, 500], "ord": [172, 484], "order": [4, 12, 13, 22, 23, 24, 25, 26, 27, 28, 31, 32, 34, 44, 45, 46, 52, 53, 59, 60, 63, 64, 65, 66, 72, 73, 79, 81, 82, 86, 87, 90, 91, 92, 94, 97, 103, 104, 105, 108, 110, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 129, 130, 131, 132, 138, 145, 149, 150, 151, 159, 160, 161, 162, 163, 166, 168, 171, 172, 175, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 190, 191, 194, 195, 196, 197, 198, 199, 221, 273, 274, 275, 295, 296, 308, 311, 313, 314, 319, 325, 326, 328, 330, 335, 336, 338, 342, 343, 346, 347, 349, 353, 354, 355, 363, 397, 398, 401, 402, 404, 405, 406, 409, 412, 415, 416, 417, 418, 419, 422, 423, 426, 431, 432, 433, 444, 445, 447, 448, 465, 479, 480, 481, 498, 499, 500, 501], "ordertyp": [4, 397, 398, 404, 448], "ordin": 174, "ordinari": [143, 164], "org": [360, 475, 479, 480, 486, 491], "organ": 491, "orient": [350, 430], "origin": [12, 13, 22, 23, 24, 25, 26, 27, 28, 41, 44, 45, 46, 49, 51, 52, 53, 59, 60, 63, 64, 65, 66, 72, 73, 82, 90, 91, 92, 94, 97, 120, 121, 122, 123, 124, 125, 126, 129, 131, 132, 138, 145, 149, 150, 151, 159, 160, 161, 162, 163, 172, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 191, 193, 194, 195, 196, 197, 198, 199, 207, 209, 211, 335, 336, 338, 344, 346, 347, 352, 353, 354, 401, 402, 404, 405, 406, 407, 415, 416, 417, 418, 422, 423, 426, 431, 432, 444, 445, 446, 477, 482, 487, 497, 500, 501], "ortho": [98, 99, 100, 102, 103, 104, 105, 107, 108, 109, 110, 111, 112, 113], "orthonorm": 173, "oserror": 177, "other": [6, 12, 13, 21, 22, 23, 24, 25, 26, 27, 28, 34, 44, 45, 46, 49, 50, 52, 53, 54, 55, 59, 60, 61, 63, 65, 66, 72, 73, 80, 82, 86, 90, 91, 92, 94, 97, 103, 104, 105, 108, 110, 120, 121, 122, 123, 124, 125, 126, 129, 131, 132, 138, 139, 145, 149, 150, 151, 159, 160, 161, 162, 163, 171, 172, 176, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 191, 195, 196, 197, 198, 199, 209, 211, 275, 276, 283, 293, 316, 318, 321, 335, 336, 338, 344, 346, 347, 352, 353, 354, 374, 391, 392, 401, 402, 405, 406, 408, 415, 416, 417, 418, 422, 423, 426, 431, 432, 437, 444, 445, 465, 467, 475, 479, 488, 491, 494, 499, 500], "otherwis": [15, 29, 30, 34, 35, 41, 67, 68, 80, 141, 143, 176, 188, 192, 193, 201, 202, 205, 206, 207, 208, 209, 211, 275, 295, 325, 344, 352, 386, 397, 404, 412, 428, 435, 436, 437, 449, 453, 467, 487, 491], "ouput": 467, "our": [475, 482, 486, 488, 493, 499, 501], "out": [12, 13, 14, 16, 17, 19, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 34, 37, 42, 43, 44, 45, 46, 47, 52, 53, 54, 55, 57, 58, 59, 60, 61, 63, 65, 66, 68, 70, 71, 72, 73, 74, 75, 78, 80, 82, 83, 86, 88, 89, 90, 91, 92, 94, 97, 98, 99, 100, 102, 103, 104, 105, 107, 108, 109, 110, 111, 112, 113, 117, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 131, 132, 133, 134, 138, 139, 140, 143, 144, 145, 147, 149, 150, 151, 152, 153, 154, 157, 158, 159, 160, 161, 162, 163, 171, 174, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 189, 190, 191, 192, 193, 195, 196, 197, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 269, 270, 271, 272, 277, 278, 279, 284, 285, 288, 296, 302, 303, 304, 309, 322, 324, 329, 330, 332, 335, 336, 338, 339, 340, 341, 343, 344, 346, 347, 348, 349, 352, 353, 354, 355, 356, 357, 358, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 381, 382, 383, 384, 385, 388, 389, 390, 391, 392, 393, 394, 395, 396, 399, 400, 401, 402, 405, 406, 408, 410, 415, 416, 417, 418, 419, 420, 422, 423, 425, 426, 427, 429, 430, 431, 432, 433, 435, 444, 445, 449, 450, 453, 454, 455, 478, 480, 486, 491, 496, 499, 500, 501], "out_arr": 500, "out_stor": 500, "outcom": [363, 501], "outer": [0, 3, 8, 87], "outermost": [48, 54], "outlin": 487, "output": [12, 13, 14, 15, 16, 17, 19, 21, 22, 23, 24, 25, 26, 27, 28, 42, 43, 44, 45, 46, 47, 48, 52, 53, 55, 57, 59, 60, 61, 63, 65, 66, 70, 71, 72, 73, 78, 80, 81, 82, 83, 86, 87, 88, 90, 91, 92, 94, 96, 97, 98, 99, 100, 102, 103, 104, 105, 108, 109, 110, 116, 120, 121, 122, 123, 124, 125, 126, 129, 131, 132, 133, 134, 138, 139, 140, 142, 143, 145, 146, 147, 149, 150, 151, 157, 158, 159, 160, 161, 162, 163, 171, 174, 176, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 190, 191, 192, 193, 194, 195, 196, 197, 199, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 326, 335, 336, 338, 341, 342, 344, 346, 347, 348, 352, 353, 354, 355, 356, 358, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 378, 381, 382, 383, 384, 385, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 399, 400, 401, 402, 403, 405, 406, 407, 410, 413, 415, 416, 417, 418, 422, 423, 426, 427, 431, 432, 433, 434, 435, 444, 445, 446, 447, 449, 450, 456, 465, 467, 478, 487, 488, 496, 500, 501], "outputarrai": 500, "outputstor": 500, "outsid": [54, 55, 81, 135, 481], "outweigh": 500, "over": [12, 13, 14, 16, 17, 19, 22, 23, 24, 25, 26, 27, 28, 41, 44, 45, 46, 52, 53, 59, 60, 63, 65, 66, 70, 71, 72, 73, 82, 83, 86, 87, 90, 91, 92, 94, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 117, 120, 121, 122, 123, 124, 125, 126, 129, 131, 132, 135, 138, 143, 145, 149, 150, 151, 159, 160, 161, 162, 163, 172, 176, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 191, 192, 194, 195, 196, 197, 199, 203, 204, 205, 206, 210, 212, 294, 295, 296, 309, 322, 335, 336, 338, 342, 346, 347, 348, 350, 353, 354, 356, 360, 375, 377, 382, 383, 385, 391, 392, 395, 401, 402, 405, 406, 407, 415, 416, 417, 418, 422, 423, 426, 427, 429, 430, 431, 432, 433, 444, 445, 447, 449, 467, 486, 487, 500, 501], "overal": [467, 478, 487, 501], "overcom": 326, "overflow": [21, 120, 318], "overhead": [467, 487, 494, 500], "overlap": 481, "overrid": [69, 89, 128, 340, 455, 490], "overridden": [1, 68], "oversubscrib": 488, "overwrite_input": [193, 207, 209, 211, 344, 352], "own": [293, 316, 373, 475, 490, 501], "owndata": 293, "owner": [293, 316, 491], "p": [92, 194, 356, 360, 363, 369, 370, 373, 408, 436, 501], "pack": [342, 397, 447, 465], "packag": [209, 211, 344, 352, 482, 485, 488, 492, 494, 501], "packbit": [0, 3, 8], "packg": 492, "pad": [8, 61, 98, 99, 100, 102, 103, 104, 105, 107, 108, 110, 111, 113, 342, 447], "pade": 169, "page": [360, 475, 489], "pair": [87, 98, 99, 100, 102, 103, 104, 105, 107, 108, 109, 110, 111, 112, 113, 122], "pairwis": 484, "pairwise_dist": 484, "paper": [209, 211, 344, 352, 481], "parallel": [29, 30, 70, 71, 98, 99, 100, 102, 103, 104, 105, 107, 108, 109, 110, 111, 112, 113, 165, 166, 167, 168, 174, 203, 204, 476, 487, 492, 500, 501], "param": 188, "paramet": [1, 2, 6, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 264, 275, 283, 290, 291, 292, 295, 296, 299, 314, 316, 325, 326, 327, 330, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 381, 382, 383, 384, 385, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 442, 443, 444, 445, 446, 447, 448, 449, 450, 452, 453, 454, 455, 478, 499, 500, 501], "parameter": [355, 356, 358, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 384, 389, 390, 391, 392, 393, 394, 395, 396], "parenthes": 171, "pareto": [0, 3, 8], "parse_arg": [500, 501], "parser": [500, 501], "part": [18, 57, 140, 147, 148, 154, 155, 165, 166, 167, 168, 197, 298, 312, 399, 400, 410, 420, 475, 500], "parti": 490, "partial": [98, 99, 100, 102, 103, 104, 105, 107, 108, 109, 110, 111, 112, 113, 193, 207, 485, 500, 501], "particular": 491, "particularli": 501, "partit": [0, 3, 8, 31, 70, 273, 487, 494, 500, 501], "pass": [14, 16, 17, 18, 19, 34, 48, 157, 177, 189, 192, 200, 205, 208, 210, 275, 348, 359, 427, 437, 476, 478, 494, 498, 500, 501], "past": 501, "patch": 497, "path": [87, 177, 290, 326, 476], "pathlib": [177, 290, 326], "pathlik": 177, "pattern": [41, 467, 499, 500], "pcg64": [3, 8], "pcg64dxsm": [3, 8], "pcolor": 486, "pdf": [391, 479], "peak": [366, 391], "peebl": [360, 373], "pend": [34, 434], "pentadiagon": 481, "per": [467, 476, 478, 482, 487, 500, 501], "percent": 374, "percentag": [467, 488, 496, 501], "percentil": [0, 3, 8, 209], "perform": [14, 19, 31, 41, 54, 55, 61, 80, 86, 99, 100, 104, 105, 110, 113, 117, 141, 164, 169, 189, 192, 206, 212, 296, 348, 350, 408, 427, 449, 450, 479, 480, 482, 485, 487, 488, 495, 498, 500, 501], "performa": 501, "perhap": 81, "period": 481, "perlmutt": [500, 501], "permiss": [54, 479, 480, 486, 491], "permit": [475, 482, 491, 499], "permut": [3, 8, 330, 436], "permute_dim": [3, 8], "perpendicular": 69, "person": [475, 491], "peyton": 360, "pg": 172, "phase": 501, "philox": [3, 8], "pi": [18, 393, 479, 481, 487], "pick": [476, 482], "pickl": [177, 259, 264, 290, 291], "piec": [500, 501], "piecewis": [3, 8], "pil": [482, 501], "pillow": 501, "pin": 488, "pinv": [3, 8], "pip": 490, "pipe": 496, "pixel": [85, 137, 411, 452, 486], "place": [0, 3, 8, 14, 15, 16, 17, 19, 55, 58, 64, 70, 71, 74, 93, 114, 142, 144, 192, 193, 200, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 308, 319, 330, 344, 348, 349, 350, 352, 404, 407, 410, 425, 427, 429, 435, 449, 463, 492], "plai": 501, "plain": [467, 478, 480], "plan": 478, "plane": [18, 409], "platform": [70, 71, 203, 204, 210, 212, 348, 381, 400, 427, 490], "pleas": [36, 84, 136, 194, 441, 451, 475, 485, 488, 490, 492, 500], "plot": [479, 481, 482, 484, 501], "plt": [479, 481, 482, 484, 486, 501], "plu": [180, 500], "png": [482, 501], "point": [21, 42, 47, 70, 71, 83, 86, 98, 102, 103, 107, 108, 110, 111, 130, 133, 134, 146, 158, 170, 190, 192, 200, 203, 204, 206, 286, 314, 336, 379, 392, 410, 412, 433, 465, 467, 476, 480, 481, 484, 487, 493, 500, 501], "poisson": [0, 3, 8, 360], "poisson_process": 360, "poli": [3, 8], "poly1d": [3, 8], "polyadd": [3, 8], "polyd": [3, 8], "polydiv": [3, 8], "polyfit": [3, 8], "polyint": [3, 8], "polymul": [3, 8], "polynomi": 408, "polysub": [3, 8], "polyv": [3, 8], "pool": 488, "popul": 377, "port": [380, 487], "portion": [491, 500, 501], "posinf": 200, "posit": [0, 3, 8, 15, 18, 21, 43, 54, 78, 79, 93, 96, 103, 104, 105, 108, 120, 150, 153, 164, 170, 198, 200, 321, 355, 363, 366, 374, 376, 379, 407, 410, 413, 435, 480, 501], "possess": [6, 283], "possibl": [12, 13, 22, 23, 24, 25, 26, 27, 28, 39, 40, 44, 45, 46, 47, 52, 53, 59, 60, 63, 65, 66, 72, 73, 82, 87, 90, 91, 92, 94, 97, 120, 121, 122, 123, 124, 125, 126, 129, 131, 132, 135, 138, 145, 149, 150, 151, 159, 160, 161, 162, 163, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 189, 191, 195, 196, 197, 199, 275, 293, 335, 336, 338, 346, 347, 353, 354, 401, 402, 404, 405, 406, 415, 416, 417, 418, 421, 422, 423, 426, 431, 432, 436, 444, 445, 475, 478, 488, 491, 492, 494, 499, 502], "possibli": [327, 493], "post": 488, "potenti": [286, 493, 499], "pow": [3, 8, 258], "power": [0, 3, 8, 120, 170, 188, 501], "pp": [209, 211, 344, 352, 373], "pr": 475, "practic": [488, 498], "pre": [34, 434, 475, 476], "precis": [41, 68, 70, 71, 86, 120, 189, 203, 204, 210, 212, 318, 326, 327, 348, 381, 427, 435, 467, 493, 500, 501], "predict": 487, "prefer": [83, 488], "preload": 467, "preload_cudalib": 456, "prepar": 500, "prepend": [48, 80, 142, 190, 434], "prescrib": 488, "present": [16, 17, 83, 141, 143, 205, 208, 433, 450], "preserv": [14, 19, 34, 38, 39, 40, 55, 57, 64, 80, 86, 117, 118, 119, 166, 168, 190, 193, 207, 275, 296, 314, 333, 412, 435], "press": 172, "pressur": 275, "prevent": [475, 500, 501], "previou": [41, 475, 500], "previous": [293, 501], "price": [483, 501], "primarili": 48, "principl": [360, 373], "print": [81, 400, 467, 478, 479, 480, 481, 484, 485, 486, 496, 500, 501, 502], "printabl": 87, "printopt": [3, 8], "prior": [80, 476, 491, 501], "prior_distance_sum": 484, "privileg": 500, "probabl": [2, 68, 135, 193, 207, 355, 356, 360, 361, 363, 370, 373, 391, 393, 396], "problem": [326, 475, 485, 487, 488, 494, 498, 499, 501], "proc": 488, "proce": 501, "process": [42, 164, 360, 477, 488, 499, 500, 501], "processor": [478, 487, 488, 499, 501], "procur": 491, "prod": [0, 3, 8, 210, 318], "produc": [6, 293, 325, 326, 350, 430, 486, 493, 500, 501], "product": [69, 70, 83, 87, 143, 157, 171, 190, 203, 210, 212, 288, 309, 318, 341, 348, 433, 450, 465, 480, 487, 489, 491, 501], "product_along_axi": 348, "prof": 487, "profil": 481, "profit": 491, "program": [476, 487, 488, 489, 492, 497, 500, 501, 502], "project": [456, 475, 479, 490], "promot": [115, 120, 190, 434, 491, 500], "prone": [487, 501], "propag": [70, 71, 203, 204, 493], "proper": [465, 487, 500], "properli": [316, 501], "properti": [6, 213, 276, 283, 286, 289, 293, 294, 298, 301, 305, 306, 312, 317, 318, 321, 330, 461], "proport": 396, "propos": 475, "protocol": 437, "prototyp": 89, "provid": [1, 8, 12, 13, 22, 23, 24, 25, 26, 27, 28, 29, 30, 44, 45, 46, 52, 53, 54, 58, 59, 60, 63, 64, 65, 66, 72, 73, 82, 84, 85, 86, 87, 90, 91, 92, 94, 97, 120, 121, 122, 123, 124, 125, 126, 129, 131, 132, 135, 137, 138, 145, 149, 150, 151, 152, 153, 159, 160, 161, 162, 163, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 190, 191, 192, 195, 196, 197, 199, 201, 202, 206, 210, 217, 316, 330, 335, 336, 338, 346, 347, 353, 354, 378, 379, 381, 401, 402, 405, 406, 411, 415, 416, 417, 418, 422, 423, 425, 426, 429, 431, 432, 444, 445, 446, 447, 452, 475, 488, 489, 491, 492, 499, 500, 501], "pseudonym": 475, "ptp": [3, 8], "public": 475, "publish": [488, 491], "pull": [1, 359, 475, 476], "purpos": [172, 491, 500], "put": [0, 3, 8, 345, 350, 351, 479, 500, 501], "put_along_axi": [0, 3, 8], "put_result": 479, "putmask": [0, 3, 8], "pwd": 476, "py": [476, 478, 479, 488, 490, 491, 492, 496, 497, 500, 501, 502], "pyarray_resolvewritebackifcopi": [293, 316], "pypi": 501, "pyplot": [479, 481, 482, 484, 486, 501], "python": [21, 122, 286, 299, 318, 325, 326, 327, 400, 476, 479, 480, 486, 489, 490, 492, 493, 494, 499, 500, 501, 502], "python3": 476, "q": [173, 209, 211, 344, 352], "qo": 501, "qr": [0, 3, 8], "quadrant": 27, "quadrat": 501, "quantil": [0, 3, 8, 209, 211, 344], "quantiti": 501, "queri": [488, 501], "question": [75, 489, 493], "quick": [326, 497], "quickli": [157, 480], "quicksort": [32, 419], "r": [69, 85, 137, 173, 209, 211, 344, 352, 373, 411, 452, 479, 501], "r0": 142, "rad2deg": [0, 3, 8, 73], "radian": [3, 8, 18, 72, 73, 353], "raindrop": 360, "rainstorm": 360, "rais": [14, 16, 17, 19, 41, 43, 48, 54, 57, 64, 69, 79, 81, 114, 120, 165, 166, 167, 168, 170, 172, 173, 174, 175, 177, 192, 193, 201, 202, 205, 207, 208, 209, 210, 211, 277, 293, 310, 324, 344, 347, 348, 349, 352, 358, 376, 398, 408, 421, 424, 427, 429, 435], "ram": 502, "ran": 488, "rand": [0, 3, 8, 501], "randint": [0, 3, 8, 381, 500], "randn": [0, 3, 8, 501], "random": [0, 456, 465, 484, 500, 501], "random_integ": [0, 3, 8], "random_sampl": [0, 3, 8, 380, 383, 385, 392], "random_se": 484, "randomli": [365, 379, 484], "randomst": [3, 8], "ranf": [3, 8], "rang": [18, 21, 54, 81, 135, 194, 349, 369, 374, 429, 465, 484, 485, 486, 487, 494, 499, 500, 501], "rank": [95, 174, 396, 408, 487, 490, 500, 501], "raphson": 483, "rare": 475, "rate": [360, 479, 501], "rather": [21, 79, 293, 494, 499, 500], "ratio": 361, "ration": 465, "ravel": [0, 3, 8, 116, 172, 295], "ravel_multi_index": [0, 3, 8], "raw": 325, "rawdata": 264, "rayleigh": [0, 3, 8], "rbf": 482, "re": [20, 39, 40, 58, 116, 407, 501], "reach": [48, 370, 475], "read": [177, 290, 293, 397, 404, 467, 482, 501], "readi": 475, "readonli": 51, "real": [0, 3, 8, 18, 35, 102, 108, 109, 110, 111, 112, 113, 140, 154, 164, 166, 168, 200, 400, 410, 420, 465, 475, 487], "real_if_clos": [0, 3, 8], "realist": 500, "realli": [98, 103, 108, 109, 111, 112, 475, 499], "realm": 498, "realm_default_arg": 492, "rearrang": 465, "reason": [34, 110, 475], "rebuild": [85, 137, 411, 452], "recarrai": [3, 8], "receiv": [487, 500], "reciproc": [0, 3, 8], "recommend": [2, 54, 494, 498, 501], "reconstruct": 446, "record": [3, 8, 475], "recov": [326, 500], "recreat": 327, "recurs": 80, "recv": 487, "recv_typ": 487, "red": [481, 484], "redistribut": [475, 491], "reduc": [14, 16, 17, 19, 29, 30, 41, 192, 193, 194, 201, 202, 205, 206, 207, 208, 209, 210, 211, 212, 275, 344, 348, 352, 427, 449, 481, 487, 488, 500, 501], "reduct": [14, 19, 209, 211, 344, 352, 449, 498, 500, 501], "reductionarrai": 500, "refer": [14, 19, 36, 49, 51, 70, 71, 84, 96, 99, 100, 104, 105, 110, 113, 136, 152, 153, 172, 192, 194, 203, 204, 206, 209, 211, 217, 269, 270, 271, 272, 273, 274, 277, 278, 279, 280, 281, 287, 288, 293, 302, 303, 304, 307, 308, 309, 310, 311, 313, 319, 320, 321, 322, 323, 324, 329, 331, 332, 344, 348, 352, 360, 373, 394, 397, 404, 410, 427, 437, 441, 449, 451, 484, 487, 488, 489, 490, 499, 500, 501], "referenc": 316, "reflect": [293, 488, 500], "regard": 490, "regardless": [19, 136, 451, 488], "region": 488, "reinterpret": 333, "reject": 475, "rel": [15, 68, 146], "relabel": 484, "relat": [355, 487, 499, 501], "relationship": [68, 394], "releas": [475, 491, 494, 501], "relev": [176, 188, 318, 500], "reli": [61, 408], "reliabl": 500, "remain": [12, 13, 19, 22, 23, 24, 25, 26, 27, 28, 44, 45, 46, 52, 53, 59, 60, 63, 65, 66, 72, 73, 82, 90, 91, 92, 94, 97, 113, 120, 121, 122, 123, 124, 125, 126, 129, 131, 132, 135, 138, 145, 149, 150, 151, 159, 160, 161, 162, 163, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 191, 195, 196, 197, 198, 199, 209, 211, 293, 335, 336, 338, 344, 346, 347, 352, 353, 354, 374, 401, 402, 404, 405, 406, 415, 416, 417, 418, 422, 423, 426, 431, 432, 444, 445, 500], "remaind": [0, 3, 8, 122, 125, 196], "remot": 501, "remov": [29, 30, 74, 79, 93, 190, 201, 202, 205, 320, 348, 424, 427, 435, 465, 487, 493], "reopen": 475, "reorder": [117, 198, 296], "rep": 434, "repeat": [0, 3, 8, 68, 99, 100, 104, 105, 110, 114, 165, 166, 167, 168, 170, 194, 345, 349, 351, 434, 501], "repeated_arrai": 403, "repeatedli": [486, 501], "repetit": [403, 434], "replac": [55, 200, 203, 204, 310, 349, 429, 480, 488, 489, 500, 501, 502], "replic": 434, "repo": 475, "report": 467, "report_coverag": 456, "report_dump_callstack": 456, "report_dump_csv": 456, "repositori": [475, 487], "repr": 260, "repres": [41, 68, 86, 103, 142, 152, 153, 194, 342, 366, 447, 449, 481, 482, 484, 487, 488, 493, 500], "represent": [87, 142, 200, 463], "reproduc": [484, 491], "req": 487, "request": [37, 360, 375, 475, 484, 487, 488], "requir": [3, 8, 34, 177, 200, 467, 476, 477, 479, 480, 486, 487, 488, 490, 492, 496, 498, 499, 500], "requri": 501, "res2": [39, 40], "rese": 386, "research": [479, 487, 500, 501], "resembl": 390, "reserv": [478, 488, 491, 501], "reset": 6, "reshap": [0, 3, 8, 85, 93, 317, 330, 411, 452, 488, 493], "reshaped_arrai": 404, "resid": 190, "resiz": [3, 8, 93, 501], "resolut": [481, 487], "resourc": [479, 488, 498, 500, 502], "respect": [61, 130, 190, 316, 481, 488, 501], "respons": [475, 487, 501], "rest": 36, "restor": 407, "restrict": [491, 492], "result": [6, 12, 13, 14, 16, 17, 18, 19, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 34, 41, 43, 44, 45, 46, 52, 53, 54, 55, 58, 59, 60, 63, 65, 66, 68, 70, 71, 72, 73, 75, 79, 80, 81, 82, 87, 89, 90, 91, 92, 93, 94, 95, 97, 109, 112, 115, 120, 121, 122, 123, 124, 125, 126, 128, 129, 131, 132, 135, 138, 141, 142, 143, 145, 149, 150, 151, 152, 153, 159, 160, 161, 162, 163, 165, 167, 172, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 275, 314, 326, 333, 335, 336, 338, 340, 341, 342, 343, 344, 346, 347, 348, 350, 352, 353, 354, 358, 378, 381, 382, 383, 385, 390, 401, 402, 404, 405, 406, 410, 412, 415, 416, 417, 418, 419, 421, 422, 423, 425, 426, 427, 429, 430, 431, 432, 433, 434, 435, 437, 444, 445, 446, 449, 450, 455, 467, 478, 479, 480, 481, 486, 487, 493, 494, 500, 501], "result_typ": [3, 8, 479], "ret": 38, "retain": [12, 13, 22, 23, 24, 25, 26, 27, 28, 44, 45, 46, 52, 53, 59, 60, 63, 65, 66, 72, 73, 82, 90, 91, 92, 94, 97, 120, 121, 122, 123, 124, 125, 126, 129, 131, 132, 138, 145, 149, 150, 151, 159, 160, 161, 162, 163, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 191, 195, 196, 197, 199, 335, 336, 338, 346, 347, 353, 354, 401, 402, 405, 406, 415, 416, 417, 418, 422, 423, 426, 431, 432, 444, 445, 491], "retstep": 176, "return": [2, 6, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 214, 215, 216, 217, 218, 220, 221, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 256, 257, 258, 260, 261, 262, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 278, 279, 281, 283, 287, 288, 291, 294, 295, 296, 299, 302, 303, 304, 307, 309, 311, 313, 314, 318, 322, 323, 325, 327, 328, 329, 330, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 346, 347, 348, 350, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 452, 453, 454, 455, 463, 479, 480, 482, 484, 485, 486, 488, 498, 500, 501], "return_count": 446, "return_index": 446, "return_invers": 446, "retval": 41, "revers": [81, 117, 118, 119, 296, 330, 342, 397, 409, 436, 447], "review": [477, 488, 490], "rf": 501, "rfft": [0, 3, 8, 108, 113], "rfft2": [0, 3, 8, 109], "rfftfreq": [3, 8], "rfftn": [0, 3, 8, 110, 111, 112], "rh": [288, 481], "richer": 500, "right": [55, 57, 79, 81, 118, 138, 165, 166, 314, 391, 405, 412, 435, 475, 481, 487, 490, 491], "right_shift": [0, 3, 8], "rightmost": 135, "rint": [0, 3, 8], "rippl": 42, "risk": [479, 487, 490, 501], "river": 487, "rk_hypergeometric_hrua": 491, "rk_hypergeometric_hyp": 491, "rk_triangular": 491, "rm": 501, "rn": 142, "rng": 484, "rober": 501, "robert": 491, "roll": [0, 3, 8], "rollaxi": [3, 8], "root": [0, 3, 8, 52, 422, 476], "rot90": [0, 3, 8], "rotat": 409, "roughli": 501, "round": [0, 21, 392, 406, 465], "rounded_arrai": 410, "roundoff": 122, "routin": [456, 463, 467, 476, 500], "row": [34, 68, 96, 118, 119, 139, 171, 295, 321, 397, 411, 437, 439, 448, 451, 452, 482, 487, 500, 501], "row_stack": [3, 8], "rowvar": 68, "rsqrt2pi": 479, "rst": 321, "rt": [500, 501], "rtol": [15, 146], "rule": [21, 41, 48, 64, 115, 374, 494], "run": [189, 363, 475, 476, 477, 486, 488, 489, 490, 492, 496, 497, 498, 499, 502], "run_kmean": 484, "runfil": 501, "runtim": [205, 208, 467, 478, 487, 488, 492, 494, 497, 499, 500, 502], "runtimeerror": 293, "runtimewarn": [479, 485, 488], "rv": 491, "s0": 501, "s_0": 501, "s_0n": 501, "safe": [58, 64, 86, 177, 190, 275, 500], "sai": [488, 494], "salloc": 501, "same": [14, 15, 16, 17, 19, 20, 29, 30, 31, 32, 34, 35, 41, 43, 48, 54, 56, 58, 61, 68, 70, 71, 79, 80, 81, 85, 89, 95, 103, 104, 105, 110, 128, 130, 135, 137, 152, 153, 154, 170, 171, 192, 193, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 275, 289, 313, 314, 318, 321, 328, 330, 333, 340, 342, 343, 344, 345, 348, 351, 352, 397, 403, 407, 410, 411, 412, 413, 419, 420, 425, 427, 429, 433, 435, 438, 440, 443, 447, 448, 449, 452, 455, 475, 479, 480, 482, 484, 485, 486, 488, 490, 497, 499, 500, 501], "same_kind": [12, 13, 22, 23, 24, 25, 26, 27, 28, 44, 45, 46, 52, 53, 58, 59, 60, 63, 64, 65, 66, 72, 73, 82, 86, 90, 91, 92, 94, 97, 120, 121, 122, 123, 124, 125, 126, 129, 131, 132, 138, 145, 149, 150, 151, 159, 160, 161, 162, 163, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 190, 191, 195, 196, 197, 199, 275, 335, 336, 338, 346, 347, 353, 354, 401, 402, 405, 406, 415, 416, 417, 418, 422, 423, 426, 431, 432, 444, 445], "sampl": [42, 47, 68, 106, 130, 133, 135, 158, 176, 188, 209, 211, 344, 352, 355, 356, 358, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 381, 382, 383, 384, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 456, 465], "satisfi": [34, 81, 95, 275, 396, 413, 485, 488, 499], "save": [3, 8, 193, 207, 209, 211, 344, 352, 467, 475, 481, 496], "savetxt": [3, 8], "savez": [3, 8], "savez_compress": [3, 8], "saxpi": 498, "saxpy_task": 500, "scalabl": [487, 488, 499, 501], "scalar": [12, 13, 15, 16, 17, 18, 22, 23, 24, 25, 26, 27, 28, 35, 38, 44, 45, 46, 48, 52, 53, 55, 59, 60, 63, 65, 66, 69, 72, 73, 80, 82, 83, 90, 91, 92, 94, 97, 114, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 135, 138, 140, 143, 145, 146, 149, 150, 151, 156, 159, 160, 161, 162, 163, 174, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 189, 190, 191, 194, 195, 196, 197, 199, 205, 208, 209, 210, 211, 212, 292, 299, 314, 327, 334, 335, 336, 338, 344, 346, 347, 348, 352, 353, 354, 355, 356, 358, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 384, 387, 389, 390, 391, 392, 393, 394, 395, 396, 399, 401, 402, 405, 406, 412, 413, 415, 416, 417, 418, 422, 423, 426, 427, 429, 431, 432, 433, 444, 445, 463, 498, 499, 500], "scale": [87, 98, 99, 100, 102, 103, 104, 105, 107, 108, 109, 110, 111, 112, 113, 188, 360, 362, 364, 366, 367, 373, 374, 384, 388, 389, 394, 395, 482, 487, 488, 489, 499, 500, 501], "scatter": [484, 501], "scenario": 500, "schedul": [479, 480, 486, 488], "scheme": 483, "schole": [483, 490], "scientif": [487, 488, 501], "scientist": 487, "scikit": 476, "scipi": [169, 374, 482, 501], "scope": 498, "scp": 501, "script": [476, 478, 488, 492, 497, 500, 502], "seamlessli": [488, 500], "search": [87, 456, 465, 489], "searchsort": [0, 3, 8, 81], "second": [41, 48, 61, 69, 79, 83, 85, 87, 104, 105, 120, 130, 135, 136, 137, 141, 152, 153, 189, 190, 194, 341, 347, 409, 411, 420, 428, 433, 435, 450, 452, 481, 499, 500, 501], "second_cond": 499, "section": [34, 36, 100, 105, 110, 113, 488, 500, 501], "secur": [177, 501], "see": [12, 13, 15, 16, 17, 22, 23, 24, 25, 26, 27, 28, 34, 44, 45, 46, 48, 52, 53, 55, 59, 60, 63, 65, 66, 68, 70, 71, 72, 73, 75, 77, 82, 86, 90, 91, 92, 94, 97, 98, 99, 100, 102, 103, 104, 105, 107, 108, 109, 110, 111, 112, 113, 120, 121, 122, 123, 124, 125, 126, 129, 131, 132, 135, 138, 145, 146, 149, 150, 151, 159, 160, 161, 162, 163, 172, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 191, 194, 195, 196, 197, 199, 203, 204, 205, 208, 210, 212, 275, 283, 316, 330, 335, 336, 338, 346, 347, 348, 353, 354, 378, 381, 401, 402, 405, 406, 415, 416, 417, 418, 422, 423, 426, 427, 431, 432, 439, 440, 442, 443, 444, 445, 446, 449, 461, 463, 476, 478, 479, 480, 481, 482, 485, 486, 488, 490, 491, 492, 493, 499, 500, 501, 502], "seed": [0, 1, 3, 8, 359, 465, 484], "seedsequ": [3, 8], "seek": [177, 485], "seem": 475, "seen": 355, "segment": 293, "seldom": 120, "select": [0, 3, 8, 16, 17, 57, 64, 141, 171, 205, 279, 365, 424, 429, 449, 484, 487, 500, 501, 502], "selectkind": [31, 343], "selector": 169, "self": [6, 213, 214, 215, 216, 217, 218, 220, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 256, 257, 258, 260, 261, 262, 263, 265, 266, 267, 268, 279, 293], "sell": 491, "semant": 135, "send": 487, "send_typ": 487, "sens": [85, 137, 411, 452, 493], "sep": 326, "separ": [86, 200, 326, 410, 476, 478, 490, 492, 496, 499, 501], "sequenc": [18, 31, 34, 39, 40, 48, 50, 54, 56, 58, 85, 87, 99, 100, 104, 105, 109, 110, 112, 113, 135, 137, 142, 144, 157, 171, 176, 188, 193, 198, 207, 209, 211, 264, 343, 344, 345, 352, 375, 409, 411, 413, 425, 433, 434, 452, 494, 500], "seri": 369, "serial": 476, "servic": [478, 491], "session": 501, "set": [12, 13, 14, 16, 17, 19, 22, 23, 24, 25, 26, 27, 28, 29, 30, 41, 44, 45, 46, 52, 53, 59, 60, 63, 65, 66, 68, 72, 73, 76, 78, 82, 90, 91, 92, 94, 97, 120, 121, 122, 123, 124, 125, 126, 129, 131, 132, 138, 139, 145, 149, 150, 151, 159, 160, 161, 162, 163, 172, 176, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 191, 192, 193, 195, 196, 197, 199, 201, 202, 205, 206, 207, 208, 209, 210, 211, 212, 263, 275, 277, 293, 316, 317, 333, 335, 336, 338, 344, 346, 347, 348, 351, 352, 353, 354, 365, 374, 401, 402, 405, 406, 415, 416, 417, 418, 422, 423, 426, 427, 431, 432, 444, 445, 449, 456, 465, 475, 476, 481, 485, 487, 488, 493, 494, 499, 500, 501], "set_bit_gener": [3, 8], "set_devic": 487, "set_printopt": [3, 8], "set_stat": [3, 8], "set_titl": [482, 501], "set_xtick": [482, 501], "set_ytick": [482, 501], "setbufs": [3, 8], "setdevic": 487, "setdiff1d": [3, 8], "seterr": [3, 8], "seterrcal": [3, 8], "setfield": [0, 8], "setflag": [0, 8, 293], "setup": [485, 500], "setxor1d": [3, 8], "sever": [476, 488, 501], "sfc64": [3, 8], "sh": [476, 501], "shall": 491, "shallow": 487, "shape": [0, 2, 3, 4, 6, 8, 12, 13, 14, 16, 17, 19, 20, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 40, 41, 43, 44, 45, 46, 48, 50, 51, 52, 53, 54, 55, 57, 58, 59, 60, 63, 65, 66, 70, 71, 72, 73, 76, 79, 80, 81, 82, 83, 85, 88, 89, 90, 91, 92, 93, 94, 96, 97, 99, 100, 101, 104, 105, 106, 109, 110, 112, 113, 117, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 135, 137, 138, 142, 143, 144, 145, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 169, 170, 171, 174, 175, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 189, 190, 191, 192, 193, 194, 195, 196, 197, 199, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 264, 275, 283, 293, 296, 313, 314, 318, 330, 334, 335, 336, 338, 339, 340, 342, 343, 344, 346, 347, 348, 350, 351, 352, 353, 354, 355, 356, 358, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 381, 382, 383, 384, 385, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 401, 402, 403, 404, 405, 406, 407, 410, 411, 412, 415, 416, 417, 418, 419, 420, 422, 423, 424, 425, 426, 427, 429, 431, 432, 433, 434, 435, 437, 438, 443, 444, 445, 447, 448, 449, 450, 452, 453, 454, 455, 465, 480, 484, 498, 499, 500, 501], "share": [283, 487, 488, 501], "shares_memori": [3, 8], "sharp": 501, "sharper": 366, "shift": [101, 106, 161, 374, 405, 407], "short": [3, 8, 293, 325, 500], "shorter": [102, 108, 349], "should": [29, 30, 34, 36, 48, 54, 64, 68, 79, 80, 86, 87, 103, 104, 105, 110, 144, 157, 190, 198, 201, 202, 275, 342, 404, 429, 435, 447, 448, 450, 467, 479, 480, 481, 486, 494, 499, 500, 501], "show": [325, 476, 481, 484, 496, 500, 501], "show_config": [3, 8], "show_runtim": [3, 8], "showcas": 501, "shown": [481, 485, 497, 499, 501], "shuffl": [3, 8], "side": [81, 130, 314, 412, 481, 487], "sigma": [368, 501], "sign": [0, 3, 8, 15, 54, 63, 212, 348, 378, 381, 427], "signal": [42, 102, 107, 360, 373, 482, 500, 501], "signatur": [189, 190, 475], "signbit": [0, 3, 8], "signedinteg": [3, 8], "signific": 487, "significantli": [479, 485, 487, 488, 500, 501], "signoff": 475, "similar": [34, 42, 189, 299, 366, 493, 494, 500, 501], "similarli": 487, "simpl": [68, 86, 327, 465, 480, 487, 498, 501, 502], "simple_in_out": 500, "simple_mm": 501, "simpler": [488, 500, 501], "simplest": 478, "simpli": [135, 330, 475, 476, 501], "simplic": 500, "simplifi": [283, 374, 487, 501], "simul": 487, "simultan": [293, 407], "sin": [0, 3, 8, 481], "sinc": [3, 8, 108, 296, 327, 350, 481, 482, 488, 493, 499, 500, 501], "sine": [24, 25, 417, 418, 481], "sing": 172, "singl": [2, 3, 8, 14, 16, 17, 19, 41, 48, 49, 50, 51, 56, 68, 87, 117, 118, 119, 130, 146, 171, 173, 174, 175, 177, 192, 194, 205, 206, 209, 211, 212, 290, 293, 294, 296, 299, 308, 316, 326, 344, 348, 352, 355, 356, 358, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 381, 382, 383, 384, 385, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 408, 409, 424, 427, 433, 449, 467, 485, 488, 489, 499, 500], "singleton": 93, "singular": [172, 174, 175], "sinh": [0, 3, 8], "site": 496, "situat": [360, 475, 488], "sixth": 481, "size": [2, 6, 14, 16, 17, 19, 21, 29, 30, 36, 41, 43, 48, 57, 61, 70, 71, 76, 79, 81, 87, 95, 130, 172, 176, 177, 188, 189, 192, 193, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 299, 301, 326, 344, 345, 348, 351, 352, 355, 356, 358, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 378, 380, 381, 382, 383, 384, 385, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 407, 427, 442, 447, 449, 467, 481, 487, 488, 494, 500, 501], "skbuild_build_opt": 476, "skip": 321, "slice": [16, 17, 57, 74, 144, 169, 201, 202, 203, 204, 205, 208, 210, 212, 279, 293, 350, 430, 467, 481, 487, 500], "slide": 501, "slightli": [47, 169], "slogdet": [3, 8], "slower": 499, "slowest": [397, 404], "small": [15, 169, 200, 486, 488, 494, 497, 499, 500], "smaller": [55, 68, 80, 98, 99, 100, 103, 104, 105, 107, 110, 111, 113, 122, 135, 193, 207, 209, 211, 344, 345, 351, 352, 467], "smallest": [172, 374], "smi": 488, "snippet": [194, 487], "so": [19, 48, 80, 120, 122, 135, 144, 155, 176, 194, 293, 316, 326, 342, 434, 484, 491, 499, 500, 501], "sobel": [482, 501], "sobol": 482, "softwar": [479, 480, 486, 488, 490, 491], "solut": [174, 481, 485, 487], "solv": [0, 3, 8, 465, 481, 485, 487, 501], "solver": 487, "some": [21, 34, 95, 276, 293, 316, 326, 394, 453, 467, 475, 476, 480, 486, 488, 493, 494, 499, 501], "somebodi": 475, "sometim": [327, 362, 389, 493], "soon": 475, "sort": [0, 8, 32, 141, 175, 193, 207, 209, 211, 274, 314, 343, 344, 352, 412, 420, 421, 430, 446, 456, 465, 501], "sort_complex": [0, 3, 8], "sorter": [314, 412], "sortsid": 412, "sorttyp": [32, 419], "sound": 500, "sourc": [198, 429, 430, 475, 477, 487, 491, 497, 500, 501], "south": [486, 501], "space": [3, 8, 21, 101, 130, 176, 188, 467, 481], "sparingli": 499, "spars": [142, 194], "speak": 172, "spec": 488, "special": [7, 355, 390, 397, 487, 491], "specif": [2, 83, 467, 479, 480, 486, 487, 491, 500, 501], "specifi": [14, 19, 20, 21, 29, 30, 31, 32, 34, 41, 43, 54, 55, 58, 68, 70, 71, 74, 79, 86, 87, 98, 99, 100, 102, 103, 104, 105, 107, 108, 110, 111, 113, 117, 130, 166, 168, 172, 176, 190, 192, 193, 201, 202, 203, 204, 205, 206, 207, 209, 210, 211, 212, 275, 287, 290, 296, 299, 310, 333, 344, 348, 349, 350, 352, 356, 361, 362, 364, 365, 366, 367, 368, 369, 370, 372, 374, 378, 389, 393, 396, 397, 409, 410, 425, 427, 429, 430, 433, 435, 446, 447, 449, 467, 478, 484, 485, 488, 492, 496, 500, 501], "spectral": 481, "spectrum": [101, 102], "speed": [141, 299, 326], "speedup": 500, "spelt": 48, "spent": 494, "split": [0, 3, 8, 36, 84, 136, 451, 465, 500], "spread": [373, 449, 501], "sqrt": [0, 3, 8, 479, 482, 501], "sqrt_t": 479, "squar": [0, 3, 8, 139, 164, 165, 166, 167, 168, 170, 174, 189, 358, 361, 371, 372, 422, 484], "squeez": [0, 3, 8, 93], "src": [64, 500], "srun": [492, 500, 501], "ssh": 501, "stabl": [32, 169, 419], "stack": [0, 3, 8, 56, 85, 137, 190, 411, 452, 467, 488], "stackoverflow": 493, "stage": 477, "standard": [299, 318, 330, 358, 368, 373, 374, 379, 387, 388, 389, 390, 463, 465, 475, 479, 480, 486, 492, 494, 497, 501], "standard_cauchi": [0, 3, 8], "standard_exponenti": [0, 3, 8], "standard_gamma": [0, 3, 8], "standard_norm": [3, 8, 390], "standard_t": [0, 3, 8], "start": [21, 87, 103, 176, 188, 210, 212, 286, 348, 427, 475, 478, 479, 480, 481, 486, 487, 494, 499, 500, 501], "start_tim": 501, "startup": 500, "state": [264, 382, 383, 385, 465], "statement": [482, 485, 493, 499, 502], "statist": [209, 211, 344, 352, 355, 456, 465, 500], "statistician": [209, 211, 344, 352], "std": [3, 8], "stdout": [467, 478], "stecil": 481, "stegun": 479, "stencil": [481, 483, 487], "step": [21, 87, 176, 188, 321, 475, 476, 487, 493, 494, 499, 501], "stephen": 491, "still": [41, 172, 194, 500, 501], "stock": [479, 501], "stoke": 487, "stop": [21, 176, 188, 479, 480, 486, 499, 501], "storag": 326, "store": [12, 13, 22, 23, 24, 25, 26, 27, 28, 44, 45, 46, 52, 53, 59, 60, 63, 65, 66, 72, 73, 82, 90, 91, 92, 94, 97, 120, 121, 122, 123, 124, 125, 126, 129, 131, 132, 138, 145, 149, 150, 151, 152, 153, 159, 160, 161, 162, 163, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 190, 191, 195, 196, 197, 199, 321, 335, 336, 338, 341, 346, 347, 353, 354, 401, 402, 405, 406, 415, 416, 417, 418, 422, 423, 426, 431, 432, 444, 445, 481, 500, 501], "str": [12, 13, 22, 23, 24, 25, 26, 27, 28, 31, 32, 44, 45, 46, 52, 53, 58, 59, 60, 63, 65, 66, 72, 73, 82, 86, 87, 90, 91, 92, 94, 97, 98, 99, 100, 102, 103, 104, 105, 107, 108, 109, 110, 111, 112, 113, 120, 121, 122, 123, 124, 125, 126, 129, 131, 132, 138, 145, 149, 150, 151, 159, 160, 161, 162, 163, 166, 168, 169, 172, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 191, 194, 195, 196, 197, 199, 209, 211, 264, 265, 275, 290, 310, 326, 328, 335, 336, 338, 343, 344, 346, 347, 349, 352, 353, 354, 401, 402, 405, 406, 415, 416, 417, 418, 419, 422, 423, 426, 431, 432, 444, 445, 467, 482, 484, 500, 501], "str_": [3, 8], "straightforward": [499, 501], "strategi": [467, 501], "stream": 1, "streamlin": 501, "strict": [467, 491], "strictli": 172, "stride": [4, 283, 293, 316, 397, 476], "strike": [479, 501], "string": [61, 169, 177, 194, 264, 290, 291, 293, 316, 326, 357, 463, 476], "string_repr": 87, "strong": 475, "structur": [446, 487, 494, 499, 500, 501], "student": 390, "studi": [394, 483], "style": [293, 295, 397, 448], "sub": [14, 16, 17, 19, 34, 36, 74, 79, 84, 136, 192, 205, 208, 210, 275, 333, 348, 421, 427, 435, 437, 451], "subarrai": [74, 142, 446], "subdomain": 487, "subgrid": 487, "subject": 491, "sublicens": 491, "submit": 475, "subok": [34, 49, 51, 275], "subplot": [482, 501], "subscript": [86, 87], "subsequ": 293, "subset": [365, 424, 494], "substanti": [487, 491], "substitut": [485, 491], "subtract": [0, 3, 8, 499], "subtyp": 397, "succe": 499, "success": [356, 363, 370], "suffici": 500, "suggest": [318, 475, 488, 501], "suit": [478, 501], "suitabl": [299, 314, 330, 350, 412, 430, 500, 501], "sum": [0, 3, 8, 41, 61, 71, 83, 103, 135, 143, 172, 182, 183, 204, 210, 212, 321, 329, 358, 365, 372, 433, 435, 465, 484, 485, 500, 501], "sum_": 172, "sum_along_axi": 427, "sum_along_diagon": 435, "sum_of_weight": 41, "summar": [209, 211, 344, 352], "summari": [3, 8, 478], "summat": [47, 86, 87], "supercomput": 500, "supercomputerloc": 501, "superpod": 489, "suppli": [152, 153, 169, 171, 379], "support": [31, 32, 61, 81, 83, 86, 173, 175, 177, 190, 194, 293, 326, 333, 343, 350, 363, 403, 407, 408, 419, 433, 437, 446, 476, 482, 490, 492, 498, 501], "suppos": 54, "sure": [484, 494, 500], "surfac": 487, "surpris": 80, "surround": 487, "svd": [0, 8], "svdval": 8, "swap": [61, 101], "swapax": [0, 3, 8], "switch": 485, "symmetr": [108, 164, 501], "symmetri": [102, 107], "synchron": [487, 500, 501], "syntax": 500, "sysmem": 501, "system": [174, 189, 481, 485, 487, 488, 490, 493, 500, 501], "system_mem": 488, "t": [68, 81, 117, 118, 119, 293, 330, 349, 355, 390, 437, 461, 478, 479, 480, 484, 493, 499, 500, 501], "tabl": [141, 172, 396], "tack": 475, "tackl": [487, 501], "tail": 366, "take": [0, 2, 3, 8, 56, 57, 157, 189, 345, 350, 397, 404, 430, 467, 475, 488, 500, 501], "take_along_axi": [0, 3, 8], "take_default": 456, "taken": [41, 54, 79, 80, 87, 102, 108, 110, 112, 113, 192, 206, 365, 413, 435, 437, 439, 442, 450, 482, 494], "tall": 114, "tan": [0, 3, 8], "tangent": [26, 27, 28, 431, 432], "tanh": [0, 3, 8], "taper": [42, 47, 133, 134, 158], "target": [349, 351, 476, 500], "task": [467, 479, 480, 486, 487, 494, 498, 501], "taskcontext": 500, "tasktarget": 492, "taylor": 169, "tdma": 481, "teach": [481, 484, 485, 500], "technic": 488, "techniqu": 501, "tell": [321, 488], "templat": 501, "temporari": 467, "tend": 494, "tensor": [87, 433, 467, 476], "tensordot": [0, 3, 8], "tensorinv": [3, 8], "tensorsolv": [3, 8], "term": [47, 83, 87, 103, 104, 105, 108, 143, 190, 433, 450, 481, 490], "termin": [478, 485, 501], "test": [0, 14, 19, 141, 146, 147, 149, 150, 151, 152, 153, 293, 358, 361, 456, 465, 477, 484, 486, 487, 496, 497], "test_view": 478, "test_vstack": 478, "test_wher": 478, "test_window": 478, "testsystem": 478, "text": [326, 475], "tf32": 467, "th": [75, 78, 80, 96, 130, 142, 209, 211, 330, 344, 352, 413, 438, 441], "than": [21, 43, 47, 49, 51, 54, 55, 57, 61, 70, 71, 79, 83, 84, 98, 99, 100, 102, 103, 104, 105, 107, 108, 110, 111, 113, 114, 118, 119, 135, 143, 169, 190, 193, 194, 203, 204, 207, 209, 210, 211, 212, 344, 345, 348, 349, 351, 352, 361, 365, 374, 391, 392, 396, 416, 424, 425, 427, 433, 435, 447, 450, 467, 480, 485, 493, 494, 499, 500, 501], "thei": [13, 15, 27, 44, 45, 46, 49, 63, 70, 71, 80, 81, 82, 90, 120, 122, 123, 124, 125, 129, 131, 132, 138, 159, 160, 161, 162, 163, 182, 183, 184, 186, 187, 190, 191, 195, 196, 199, 203, 204, 314, 336, 338, 347, 356, 397, 402, 405, 412, 426, 444, 463, 482, 484, 494, 499, 500, 501], "them": [56, 463, 475, 484, 488, 490, 499, 500, 501], "themselv": [283, 481], "theorem": 373, "theoret": 501, "theori": 491, "therefor": [166, 168, 363], "theta": 362, "thi": [12, 13, 14, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 33, 34, 37, 41, 43, 44, 45, 46, 48, 49, 51, 52, 53, 54, 55, 58, 59, 60, 63, 64, 65, 66, 72, 73, 74, 75, 76, 80, 81, 82, 83, 85, 86, 87, 90, 91, 92, 94, 97, 98, 99, 100, 101, 102, 103, 104, 105, 108, 109, 110, 111, 112, 113, 114, 116, 118, 119, 120, 121, 122, 123, 124, 125, 126, 129, 131, 132, 135, 137, 138, 141, 143, 145, 149, 150, 151, 156, 157, 159, 160, 161, 162, 163, 166, 168, 171, 172, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 205, 206, 207, 208, 209, 210, 211, 212, 273, 274, 275, 283, 286, 288, 292, 293, 296, 299, 301, 316, 318, 321, 325, 326, 327, 330, 333, 335, 336, 338, 341, 344, 345, 346, 347, 348, 350, 351, 352, 353, 354, 358, 359, 374, 378, 381, 386, 394, 397, 401, 402, 404, 405, 406, 408, 409, 411, 415, 416, 417, 418, 422, 423, 424, 426, 427, 429, 430, 431, 432, 433, 434, 437, 444, 445, 446, 449, 450, 452, 467, 475, 476, 478, 479, 480, 481, 482, 484, 485, 486, 487, 490, 491, 493, 496, 497, 499, 501, 502], "thing": [429, 475, 480, 500, 501], "think": 475, "third": [69, 84, 85, 137, 411, 433, 452, 490, 499], "those": [55, 61, 68, 74, 170, 350, 487, 493], "though": [43, 408], "thought": 393, "thread": [476, 478, 485, 488, 501], "three": [40, 47, 55, 209, 211, 344, 352, 446, 488, 499, 500], "threshold": 467, "through": [14, 16, 17, 19, 34, 157, 189, 192, 194, 205, 208, 210, 275, 348, 427, 467, 490, 500, 501], "throughout": 487, "thu": [54, 177, 434, 499, 501], "thumb": 494, "tile": [0, 3, 8, 465, 500], "time": [68, 80, 86, 99, 100, 104, 105, 110, 293, 296, 360, 375, 394, 409, 434, 446, 475, 478, 479, 480, 486, 487, 490, 500, 501], "timedelta64": [3, 8], "timer": 494, "timestep": 487, "tini": 373, "titl": [479, 481], "tobyt": [0, 8, 326, 328], "tofil": [0, 3, 8], "togeth": [15, 58, 68, 103, 157, 190, 500], "tol": [400, 485, 499, 501], "toler": [15, 146, 400, 485, 499], "tolist": [0, 3, 8], "too": [42, 81, 429, 488], "took": 501, "tool": [475, 487, 488, 497], "toolkit": [476, 501], "top": [476, 489, 490], "topic": [477, 488, 498], "topographi": 487, "torchsw": 483, "tort": 491, "total": [6, 67, 305, 370, 480, 484, 501], "toward": [135, 336, 409], "trace": [0, 3, 8, 467], "traceback": 467, "tracker": 488, "transfer": [485, 501], "transform": [61, 98, 99, 100, 102, 103, 104, 105, 107, 108, 109, 110, 111, 112, 113, 456, 465, 498, 499], "translat": [381, 481, 499], "transpar": 500, "transport": 326, "transpos": [0, 3, 8, 68, 164, 213, 465, 480], "trapezoid": [3, 8], "trapz": [3, 8], "travers": 321, "treat": [15, 54, 166, 168, 171, 190, 193, 194, 203, 204, 207, 210, 212, 350, 430, 434, 446], "tree": [476, 490], "tri": [0, 3, 8], "trial": [356, 363], "triangl": [138, 437, 438, 439, 440, 441, 442, 443], "triangular": [0, 3, 8, 42, 164, 166, 168, 173, 480], "tridiagon": 481, "trigger": [488, 493], "trigonometr": [22, 26, 417, 465], "tril": [0, 3, 8, 189, 439, 440, 441], "tril_indic": [0, 3, 8, 440], "tril_indices_from": [0, 3, 8], "trim": 447, "trim_zero": [3, 8], "triu": [0, 3, 8, 189, 442, 443], "triu_indic": [0, 3, 8, 443], "triu_indices_from": [0, 3, 8], "trivial": 475, "true": [4, 12, 13, 14, 15, 16, 17, 18, 19, 22, 23, 24, 25, 26, 27, 28, 29, 30, 34, 35, 41, 44, 45, 46, 52, 53, 57, 59, 60, 63, 64, 65, 66, 68, 72, 73, 80, 81, 82, 86, 87, 90, 91, 92, 94, 95, 97, 114, 120, 121, 122, 123, 124, 125, 126, 129, 131, 132, 135, 138, 141, 142, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 159, 160, 161, 162, 163, 169, 172, 175, 176, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 191, 192, 193, 194, 195, 196, 197, 199, 200, 201, 202, 205, 206, 207, 208, 209, 210, 211, 212, 269, 270, 275, 293, 302, 304, 309, 316, 335, 336, 338, 344, 345, 346, 347, 348, 351, 352, 353, 354, 401, 402, 405, 406, 413, 415, 416, 417, 418, 422, 423, 426, 427, 431, 432, 444, 445, 446, 449, 453, 493, 496], "true_divid": [0, 3, 8, 82], "truli": 293, "trunc": [0, 3, 8], "truncat": [57, 98, 99, 100, 102, 103, 104, 105, 107, 108, 110, 111, 113, 356, 445], "trust": [201, 202], "truth": [131, 132, 162, 163, 184, 186, 187, 463, 465], "try": [480, 481, 482, 485, 488, 493, 495, 498, 501], "tup": [56, 85, 137, 411, 452], "tupl": [2, 4, 6, 12, 13, 14, 16, 17, 19, 22, 23, 24, 25, 26, 27, 28, 36, 37, 41, 44, 45, 46, 50, 51, 52, 53, 59, 60, 63, 65, 66, 67, 72, 73, 76, 77, 82, 87, 88, 89, 90, 91, 92, 93, 94, 97, 101, 106, 117, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 135, 138, 142, 145, 149, 150, 151, 157, 159, 160, 161, 162, 163, 165, 166, 172, 173, 175, 176, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 189, 191, 192, 193, 194, 195, 196, 197, 199, 205, 206, 207, 208, 209, 211, 212, 264, 296, 299, 317, 321, 330, 335, 336, 337, 338, 339, 340, 344, 346, 347, 348, 352, 353, 354, 355, 356, 358, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 378, 381, 382, 383, 384, 385, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 398, 401, 402, 404, 405, 406, 407, 414, 415, 416, 417, 418, 422, 423, 424, 426, 427, 431, 432, 433, 439, 440, 442, 443, 444, 445, 448, 449, 453, 454, 455, 484, 499, 500, 501], "tuple_of_arrai": 337, "turn": [56, 467], "tutori": [488, 498, 500], "tweedi": 394, "twice": 499, "two": [15, 21, 35, 39, 44, 45, 46, 48, 61, 68, 69, 78, 79, 80, 83, 99, 103, 104, 109, 126, 143, 146, 171, 190, 341, 361, 363, 366, 409, 428, 433, 435, 439, 440, 442, 443, 450, 482, 483, 484, 486, 499, 500, 501, 502], "type": [6, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 78, 79, 80, 81, 82, 83, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 127, 128, 129, 130, 131, 132, 133, 134, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 167, 168, 169, 170, 171, 172, 174, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 217, 264, 275, 283, 289, 295, 296, 299, 301, 314, 316, 318, 325, 326, 327, 330, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 346, 347, 348, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 381, 382, 383, 384, 385, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 442, 443, 444, 445, 447, 448, 449, 450, 452, 453, 454, 455, 456, 465, 467, 476, 484, 487, 488, 500, 501], "typecod": 275, "typeerror": [43, 64, 81, 209, 211, 344, 352], "typenam": [3, 8], "typic": [15, 49, 51, 68, 102, 314, 412, 476, 487, 494, 501], "u": [166, 168, 175, 210, 321, 395, 475, 480, 482, 486, 488, 491, 501], "u8_arr": 80, "ubyt": [3, 8], "ucx": 492, "ufunc": [8, 12, 13, 16, 17, 22, 23, 24, 25, 26, 27, 28, 44, 45, 46, 52, 53, 55, 59, 60, 63, 65, 66, 72, 73, 82, 90, 91, 92, 94, 97, 120, 121, 122, 123, 124, 125, 126, 129, 131, 132, 138, 145, 149, 150, 151, 159, 160, 161, 162, 163, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 191, 195, 196, 197, 199, 205, 208, 210, 212, 335, 336, 338, 346, 347, 348, 353, 354, 401, 402, 405, 406, 415, 416, 417, 418, 422, 423, 426, 427, 431, 432, 444, 445], "uic": 316, "uid": 488, "uint": [3, 8], "uint16": [3, 8], "uint32": [3, 8], "uint64": [3, 8, 484], "uint8": [3, 8, 80, 342, 447], "uintc": [3, 8], "uintp": [3, 8], "uk": [479, 482], "ulong": [3, 8], "ulonglong": [3, 8], "ultim": [293, 316], "unabl": 488, "unalt": 359, "unari": 463, "unbias": 68, "unbound": 374, "unchang": [34, 113], "undefin": [193, 207, 209, 211, 344, 350, 352, 493], "under": [172, 293, 475, 479, 480, 486, 491], "underli": [32, 368, 397, 404, 419, 479, 501], "understand": [475, 485], "undesir": 499, "undo": 447, "unexpect": 210, "unif": [382, 383, 385], "uniform": [0, 3, 8, 135, 188, 377, 378, 381, 382, 383, 385, 395], "uniformli": 392, "uniniti": [12, 13, 22, 23, 24, 25, 26, 27, 28, 44, 45, 46, 52, 53, 59, 60, 63, 65, 66, 72, 73, 82, 88, 89, 90, 91, 92, 94, 97, 120, 121, 122, 123, 124, 125, 126, 129, 131, 132, 138, 145, 149, 150, 151, 159, 160, 161, 162, 163, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 191, 195, 196, 197, 199, 335, 336, 338, 346, 347, 353, 354, 401, 402, 405, 406, 415, 416, 417, 418, 422, 423, 426, 431, 432, 444, 445], "union1d": [3, 8], "uniqu": [0, 3, 8, 141, 198, 373, 484], "unique_al": [3, 8], "unique_count": [3, 8, 446], "unique_indic": 446, "unique_invers": [3, 8, 446], "unique_valu": [3, 8], "unit": [157, 165, 166, 393, 394, 493], "unitari": [130, 175, 493], "uniti": 135, "univari": 379, "univers": [172, 394], "unknown": 501, "unless": [14, 19, 34, 54, 70, 71, 79, 86, 135, 172, 176, 188, 203, 204, 210, 212, 275, 299, 342, 348, 378, 381, 382, 383, 385, 410, 427, 446, 475, 479, 480, 486], "unlik": [61, 79, 165, 167, 391], "unmodifi": [48, 489], "unnecessari": 475, "unpack": 447, "unpackbit": [0, 3, 8], "unpartit": 500, "unpickl": [264, 316], "unpredict": [1, 359], "unravel": 448, "unravel_index": [0, 3, 8], "unraveled_coord": 448, "unsaf": [58, 64, 86, 143, 190, 275, 341, 433, 450], "unsign": [80, 212, 348, 427], "unsignedinteg": [3, 8], "unstack": [3, 8], "unsupport": 493, "until": [48, 87, 484, 499, 500, 501], "unwrap": [3, 8], "up": [85, 119, 122, 137, 141, 299, 411, 430, 446, 452, 467, 476, 482, 487, 488, 493, 494, 500, 501], "updat": [293, 316, 349, 350, 485, 487, 500, 501], "uplo": [166, 168], "upon": 475, "upper": [55, 96, 135, 164, 166, 168, 173, 316, 391, 392, 441, 442, 443], "uppoer": 173, "us": [2, 6, 16, 17, 20, 21, 31, 32, 42, 47, 48, 54, 58, 61, 68, 70, 71, 75, 76, 79, 80, 83, 86, 87, 98, 99, 100, 102, 103, 104, 105, 107, 108, 110, 111, 113, 130, 133, 134, 140, 141, 146, 157, 158, 164, 169, 171, 172, 176, 188, 190, 192, 193, 194, 200, 203, 204, 205, 206, 207, 209, 210, 211, 212, 221, 222, 277, 283, 293, 299, 316, 318, 326, 333, 343, 344, 345, 348, 350, 352, 356, 358, 360, 381, 386, 394, 397, 399, 400, 403, 404, 407, 413, 419, 427, 429, 430, 435, 446, 448, 449, 450, 463, 467, 475, 476, 478, 479, 480, 481, 482, 485, 486, 487, 489, 490, 491, 493, 496, 497, 498, 500, 502], "usabl": 120, "usag": [98, 99, 100, 102, 103, 104, 105, 107, 108, 109, 110, 111, 112, 113, 165, 166, 167, 168, 174, 467, 475, 477, 488, 498, 499, 500], "use_explicit": 169, "use_openmp": 476, "use_thread": 476, "user": [200, 293, 316, 476, 485, 487, 488, 489, 500, 501], "ushort": [3, 8], "usual": [76, 475, 488, 502], "util": [478, 479, 480, 486, 488, 501], "v": [48, 61, 75, 78, 314, 412, 456, 478, 479, 481], "v1": 479, "v100": 501, "val": [114, 140, 156, 315, 342, 345, 399, 447, 499, 501], "valid": [48, 61, 189, 439, 440, 442, 443, 475, 487, 490, 500], "valu": [2, 12, 13, 14, 15, 16, 17, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 35, 41, 42, 43, 44, 45, 46, 47, 52, 53, 54, 55, 59, 60, 63, 64, 65, 66, 67, 68, 70, 71, 72, 73, 80, 81, 82, 86, 90, 91, 92, 94, 95, 96, 97, 103, 111, 114, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 138, 141, 142, 144, 145, 146, 148, 149, 150, 151, 152, 153, 154, 155, 157, 158, 159, 160, 161, 162, 163, 164, 166, 168, 170, 172, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 195, 196, 197, 199, 200, 201, 202, 203, 204, 205, 206, 208, 209, 210, 211, 212, 215, 216, 223, 224, 226, 227, 229, 230, 231, 232, 233, 234, 235, 236, 240, 241, 242, 243, 244, 245, 246, 248, 249, 250, 251, 252, 253, 254, 256, 257, 258, 261, 262, 263, 266, 267, 268, 271, 272, 275, 278, 289, 292, 302, 304, 310, 314, 316, 318, 321, 335, 336, 338, 342, 345, 346, 347, 348, 349, 350, 351, 353, 354, 355, 356, 358, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 381, 382, 383, 384, 385, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 401, 402, 403, 404, 405, 406, 407, 408, 410, 412, 415, 416, 417, 418, 422, 423, 426, 427, 429, 430, 431, 432, 435, 436, 444, 445, 446, 447, 449, 453, 463, 465, 467, 479, 481, 484, 485, 486, 487, 488, 498, 499, 500, 501], "valuabl": 487, "valueerror": [41, 43, 48, 54, 57, 69, 79, 81, 114, 172, 201, 202, 205, 208, 358, 376, 408, 421, 424, 435], "van": 172, "vander": [3, 8], "vanilla": 467, "var": [0, 3, 8, 467], "vararg": 130, "vari": [32, 68, 142, 400, 419, 481, 482, 487, 501], "variabl": [68, 174, 201, 202, 205, 208, 358, 360, 366, 373, 467, 485, 487, 488, 492, 494, 496, 499, 500, 501], "varianc": [68, 332, 358, 379, 449, 465], "variant": [500, 501], "variantcod": 500, "variat": [209, 211, 344, 352, 361, 501], "varieti": 2, "variou": [172, 465, 467, 487, 497], "vdot": [0, 3, 8], "vecdot": [3, 8], "vecmat": [3, 8], "vector": [3, 8, 68, 69, 83, 143, 171, 172, 190, 194, 330, 341, 450, 465, 500, 501, 502], "vector1": 501, "vector2": 501, "vector_norm": 8, "venv": [490, 501], "verbatim": 475, "verbos": [478, 485, 488, 501], "veri": [15, 42, 200, 299, 494], "verifi": 164, "version": [67, 75, 116, 193, 207, 209, 211, 264, 344, 352, 374, 448, 475, 479, 480, 486, 487, 490, 501], "vertic": [409, 411, 451, 452, 487], "vh": 175, "via": [12, 13, 22, 23, 24, 25, 26, 27, 28, 44, 45, 46, 52, 53, 59, 60, 63, 65, 66, 72, 73, 82, 90, 91, 92, 94, 97, 120, 121, 122, 123, 124, 125, 126, 129, 131, 132, 138, 145, 149, 150, 151, 159, 160, 161, 162, 163, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 191, 195, 196, 197, 199, 293, 327, 335, 336, 338, 346, 347, 353, 354, 401, 402, 405, 406, 415, 416, 417, 418, 422, 423, 426, 431, 432, 437, 444, 445, 478, 488, 492, 500, 501], "view": [0, 8, 37, 39, 40, 49, 51, 75, 93, 117, 118, 119, 194, 198, 289, 293, 296, 323, 330, 350, 404, 421, 424, 428, 430, 436, 448, 488, 498, 500], "violat": [64, 467], "vision": 501, "visit": [475, 488], "vital": 501, "void": [3, 8, 299], "volatil": [479, 501], "von": 393, "vonmis": [0, 3, 8], "vpi": 482, "vsplit": [0, 3, 8, 411, 452], "vstack": [0, 3, 8, 411, 499], "vv": 478, "w": [167, 168, 293, 316], "wa": [47, 83, 143, 171, 370, 394, 410, 433, 450, 475, 482, 485, 488], "wai": [87, 103, 104, 105, 110, 190, 365, 447, 475, 476, 478, 479, 480, 481, 486, 491, 492, 499, 500], "wait": 500, "waital": 487, "wald": [0, 3, 8], "walk": 476, "want": [475, 476, 486, 500, 501], "warm": [494, 500], "warn": [189, 201, 202, 205, 208, 349, 456, 485, 501], "warranti": [479, 480, 486, 491], "wasilla": 491, "water": 487, "wavenumb": 481, "we": [8, 54, 68, 321, 475, 476, 479, 480, 481, 482, 484, 485, 486, 487, 488, 499, 500, 501], "weak": 489, "weibul": [0, 3, 8, 209, 211, 344, 352, 384], "weight": [41, 43, 68, 133, 134, 135, 374, 484], "welcom": [8, 475], "well": [86, 174, 316, 348, 478, 480, 487, 500], "were": [58, 190, 314, 379, 412, 425, 488, 491, 496, 501], "west": [486, 501], "wget": 501, "what": [58, 64, 75, 86, 98, 99, 100, 102, 103, 104, 105, 107, 108, 109, 110, 111, 112, 113, 143, 147, 190, 275, 341, 425, 433, 450, 486, 496, 498, 499, 501], "wheel": [490, 501], "when": [18, 21, 29, 30, 34, 41, 48, 57, 64, 69, 70, 71, 80, 110, 135, 141, 164, 169, 172, 176, 189, 190, 193, 194, 201, 202, 203, 204, 205, 207, 208, 210, 283, 299, 316, 321, 326, 358, 359, 386, 397, 408, 413, 429, 430, 467, 475, 476, 485, 487, 490, 492, 493, 494, 496, 499, 500, 501], "whenev": [436, 467, 499], "where": [0, 3, 8, 12, 13, 14, 16, 17, 19, 21, 22, 23, 24, 25, 26, 27, 28, 33, 39, 40, 44, 45, 46, 48, 52, 53, 54, 55, 57, 59, 60, 63, 64, 65, 66, 68, 69, 72, 73, 80, 82, 83, 90, 91, 92, 93, 94, 95, 96, 97, 102, 108, 110, 120, 121, 122, 123, 124, 125, 126, 129, 131, 132, 137, 138, 141, 142, 145, 146, 147, 149, 150, 151, 152, 153, 154, 159, 160, 161, 162, 163, 164, 173, 175, 176, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 189, 191, 192, 195, 196, 197, 199, 205, 206, 208, 210, 212, 269, 270, 302, 304, 309, 314, 322, 335, 336, 338, 341, 345, 346, 347, 348, 351, 353, 354, 355, 356, 361, 362, 363, 370, 372, 374, 391, 401, 402, 405, 406, 412, 413, 415, 416, 417, 418, 421, 422, 423, 426, 427, 431, 432, 435, 444, 445, 449, 479, 481, 482, 484, 487, 491, 493, 499, 500, 501], "wherea": 493, "wherev": 64, "whether": [14, 15, 19, 35, 75, 81, 141, 146, 147, 164, 166, 168, 176, 200, 210, 316, 448, 467, 475, 478, 491, 496, 499, 501], "which": [1, 12, 13, 14, 16, 17, 19, 20, 22, 23, 24, 25, 26, 27, 28, 29, 30, 34, 41, 44, 45, 46, 48, 52, 53, 54, 57, 58, 59, 60, 61, 63, 64, 65, 66, 67, 68, 70, 71, 72, 73, 74, 76, 78, 79, 80, 81, 82, 86, 87, 90, 91, 92, 94, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 117, 120, 121, 122, 123, 124, 125, 126, 129, 130, 131, 132, 137, 138, 141, 144, 145, 149, 150, 151, 152, 153, 156, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 172, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 195, 196, 197, 199, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 275, 283, 296, 299, 316, 318, 333, 335, 336, 338, 342, 344, 346, 347, 348, 349, 352, 353, 354, 360, 365, 378, 381, 382, 383, 384, 385, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 401, 402, 403, 405, 406, 407, 410, 413, 415, 416, 417, 418, 421, 422, 423, 425, 426, 427, 429, 431, 432, 435, 437, 438, 439, 442, 444, 445, 447, 449, 453, 467, 475, 482, 485, 487, 488, 491, 494, 496, 499, 500, 501], "while": [68, 113, 171, 194, 207, 209, 211, 212, 293, 348, 374, 407, 427, 437, 484, 488, 494, 499, 500, 501], "whilst": 38, "who": 475, "whole": 475, "whom": 491, "whose": [34, 79, 95, 96, 114, 189, 192, 198, 205, 206, 208, 212, 278, 342, 435, 440, 443, 448, 449], "why": [108, 475], "wide": [360, 488, 500], "width": [85, 135, 137, 373, 411, 452, 501], "wiki": 360, "wikipedia": 360, "window": [42, 47, 133, 134, 158, 456, 465, 490, 500], "wise": [12, 13, 15, 22, 23, 24, 25, 26, 27, 28, 44, 45, 46, 52, 53, 59, 60, 63, 65, 66, 82, 85, 90, 97, 98, 99, 100, 102, 103, 104, 105, 107, 108, 109, 110, 111, 112, 113, 120, 121, 123, 124, 125, 131, 132, 136, 137, 145, 146, 149, 150, 151, 152, 153, 160, 162, 163, 165, 166, 167, 168, 174, 178, 179, 180, 184, 185, 186, 187, 191, 195, 196, 197, 199, 281, 335, 336, 338, 346, 347, 401, 402, 411, 415, 416, 417, 418, 422, 423, 426, 431, 432, 444, 445, 451, 452, 500, 501], "wish": 75, "within": [12, 13, 15, 21, 22, 23, 24, 25, 26, 27, 28, 44, 45, 46, 52, 53, 59, 60, 63, 64, 65, 66, 72, 73, 82, 86, 90, 91, 92, 94, 97, 103, 104, 105, 108, 110, 120, 121, 122, 123, 124, 125, 126, 129, 131, 132, 138, 145, 146, 149, 150, 151, 159, 160, 161, 162, 163, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 190, 191, 195, 196, 197, 199, 275, 335, 336, 338, 346, 347, 353, 354, 365, 392, 401, 402, 405, 406, 415, 416, 417, 418, 422, 423, 426, 431, 432, 444, 445, 500, 501], "without": [42, 48, 57, 83, 88, 143, 316, 330, 404, 475, 479, 480, 486, 487, 491, 495, 498, 500, 501], "word": [21, 103, 104, 105, 108, 110, 392, 437], "work": [48, 57, 299, 349, 463, 475, 476, 479, 493, 494, 499, 500, 501], "worker": [478, 488, 501], "workflow": 476, "workload": 501, "workstat": 501, "worri": 501, "wors": 47, "would": [32, 58, 83, 143, 171, 189, 273, 274, 299, 314, 341, 412, 421, 425, 433, 450, 467, 479, 480, 485, 486, 487, 499, 501], "wrap": [54, 114, 349, 359, 429], "wrapper": [492, 501], "write": [49, 75, 114, 194, 316, 326, 404, 479, 480, 486, 489, 501], "writeabl": [4, 293, 316], "writebackifcopi": [293, 316], "written": [114, 293, 316, 326, 491, 499, 502], "wrong": 57, "wsl": 490, "www": [479, 480, 486], "x": [12, 22, 23, 24, 25, 26, 28, 43, 52, 53, 59, 60, 65, 66, 68, 72, 73, 80, 81, 91, 92, 94, 97, 99, 100, 101, 104, 105, 106, 113, 121, 126, 135, 139, 145, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 169, 172, 174, 178, 179, 180, 181, 185, 189, 194, 197, 200, 293, 316, 321, 335, 346, 353, 354, 355, 360, 395, 401, 406, 408, 415, 416, 417, 418, 422, 423, 431, 432, 445, 453, 479, 481, 482, 484, 485, 493, 499, 500, 501, 502], "x1": [13, 27, 44, 45, 46, 63, 82, 90, 120, 122, 123, 124, 125, 129, 131, 132, 138, 159, 160, 161, 162, 163, 182, 183, 184, 186, 187, 191, 194, 195, 196, 199, 336, 338, 347, 402, 405, 426, 444], "x2": [13, 27, 44, 45, 46, 63, 82, 90, 120, 122, 123, 124, 125, 129, 131, 132, 138, 159, 160, 161, 162, 163, 182, 183, 184, 186, 187, 191, 194, 195, 196, 199, 336, 338, 347, 402, 405, 426, 444], "x86": 501, "x86_64": [490, 501], "x_": 485, "x_1": 68, "x_2": 68, "x_current": 499, "x_global": 500, "x_i": 68, "x_j": 68, "x_local": 500, "x_n": 68, "x_prev": 499, "xeon": 501, "xi": 194, "xk": 485, "xk_old": 485, "xlabel": [479, 481], "xn": 194, "xor": [46, 187], "xorwow": 359, "xp": 500, "xv": 194, "xy": 194, "y": [13, 27, 44, 45, 46, 63, 68, 82, 90, 101, 106, 120, 122, 123, 124, 125, 129, 131, 132, 138, 146, 155, 159, 160, 161, 162, 163, 182, 183, 184, 186, 187, 191, 194, 195, 196, 199, 209, 211, 295, 327, 336, 338, 344, 347, 352, 397, 402, 405, 409, 426, 444, 453, 482, 484, 485, 499, 500, 501, 502], "y1": [126, 197], "y2": [126, 197], "y_global": 500, "y_local": 500, "year": [373, 501], "yellow": 484, "yet": [8, 446], "yield": [29, 30, 70, 71, 203, 204, 210, 453, 494, 501], "ylabel": [479, 481], "you": [49, 64, 75, 86, 190, 193, 194, 207, 400, 429, 475, 476, 479, 480, 481, 484, 485, 486, 487, 488, 489, 490, 492, 497, 499, 500, 501, 502], "your": [475, 488, 489, 499, 501, 502], "yueh": 487, "yv": 194, "z": [18, 69, 299, 360, 379, 499, 500, 502], "z_global": 500, "z_local": 500, "zero": [0, 3, 8, 18, 33, 41, 42, 47, 61, 67, 69, 80, 96, 98, 99, 100, 101, 102, 103, 104, 105, 107, 108, 110, 111, 113, 116, 133, 134, 147, 148, 152, 153, 154, 155, 158, 165, 166, 167, 168, 170, 172, 189, 200, 204, 212, 307, 334, 337, 342, 361, 374, 400, 416, 437, 438, 441, 447, 449, 455, 481, 484, 486, 500, 501], "zero_point": 484, "zerodivisionerror": 41, "zeros_lik": [0, 3, 8], "zeta": 396, "zipf": [0, 3, 8], "zsh": 501}, "titles": ["&lt;no title&gt;", "cupynumeric.random.BitGenerator", "cupynumeric.random.Generator", "Convolve and Correlate", "cupynumeric.ndarray", "Binary operations", "cupynumeric.broadcast", "Classes", "Project comparisons", "Array creation routines", "Data type routines", "Discrete Fourier Transform (<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">cupynumeric.fft</span></code>)", "cupynumeric.absolute", "cupynumeric.add", "cupynumeric.all", "cupynumeric.allclose", "cupynumeric.amax", "cupynumeric.amin", "cupynumeric.angle", "cupynumeric.any", "cupynumeric.append", "cupynumeric.arange", "cupynumeric.arccos", "cupynumeric.arccosh", "cupynumeric.arcsin", "cupynumeric.arcsinh", "cupynumeric.arctan", "cupynumeric.arctan2", "cupynumeric.arctanh", "cupynumeric.argmax", "cupynumeric.argmin", "cupynumeric.argpartition", "cupynumeric.argsort", "cupynumeric.argwhere", "cupynumeric.array", "cupynumeric.array_equal", "cupynumeric.array_split", "cupynumeric.asarray", "cupynumeric.atleast_1d", "cupynumeric.atleast_2d", "cupynumeric.atleast_3d", "cupynumeric.average", "cupynumeric.bartlett", "cupynumeric.bincount", "cupynumeric.bitwise_and", "cupynumeric.bitwise_or", "cupynumeric.bitwise_xor", "cupynumeric.blackman", "cupynumeric.block", "cupynumeric.broadcast_arrays", "cupynumeric.broadcast_shapes", "cupynumeric.broadcast_to", "cupynumeric.cbrt", "cupynumeric.ceil", "cupynumeric.choose", "cupynumeric.clip", "cupynumeric.column_stack", "cupynumeric.compress", "cupynumeric.concatenate", "cupynumeric.conj", "cupynumeric.conjugate", "cupynumeric.convolve", "cupynumeric.copy", "cupynumeric.copysign", "cupynumeric.copyto", "cupynumeric.cos", "cupynumeric.cosh", "cupynumeric.count_nonzero", "cupynumeric.cov", "cupynumeric.cross", "cupynumeric.cumprod", "cupynumeric.cumsum", "cupynumeric.deg2rad", "cupynumeric.degrees", "cupynumeric.delete", "cupynumeric.diag", "cupynumeric.diag_indices", "cupynumeric.diag_indices_from", "cupynumeric.diagflat", "cupynumeric.diagonal", "cupynumeric.diff", "cupynumeric.digitize", "cupynumeric.divide", "cupynumeric.dot", "cupynumeric.dsplit", "cupynumeric.dstack", "cupynumeric.einsum", "cupynumeric.einsum_path", "cupynumeric.empty", "cupynumeric.empty_like", "cupynumeric.equal", "cupynumeric.exp", "cupynumeric.exp2", "cupynumeric.expand_dims", "cupynumeric.expm1", "cupynumeric.extract", "cupynumeric.eye", "cupynumeric.fabs", "cupynumeric.fft.fft", "cupynumeric.fft.fft2", "cupynumeric.fft.fftn", "cupynumeric.fft.fftshift", "cupynumeric.fft.hfft", "cupynumeric.fft.ifft", "cupynumeric.fft.ifft2", "cupynumeric.fft.ifftn", "cupynumeric.fft.ifftshift", "cupynumeric.fft.ihfft", "cupynumeric.fft.irfft", "cupynumeric.fft.irfft2", "cupynumeric.fft.irfftn", "cupynumeric.fft.rfft", "cupynumeric.fft.rfft2", "cupynumeric.fft.rfftn", "cupynumeric.fill_diagonal", "cupynumeric.find_common_type", "cupynumeric.flatnonzero", "cupynumeric.flip", "cupynumeric.fliplr", "cupynumeric.flipud", "cupynumeric.float_power", "cupynumeric.floor", "cupynumeric.floor_divide", "cupynumeric.fmax", "cupynumeric.fmin", "cupynumeric.fmod", "cupynumeric.frexp", "cupynumeric.full", "cupynumeric.full_like", "cupynumeric.gcd", "cupynumeric.gradient", "cupynumeric.greater", "cupynumeric.greater_equal", "cupynumeric.hamming", "cupynumeric.hanning", "cupynumeric.histogram", "cupynumeric.hsplit", "cupynumeric.hstack", "cupynumeric.hypot", "cupynumeric.identity", "cupynumeric.imag", "cupynumeric.in1d", "cupynumeric.indices", "cupynumeric.inner", "cupynumeric.insert", "cupynumeric.invert", "cupynumeric.isclose", "cupynumeric.iscomplex", "cupynumeric.iscomplexobj", "cupynumeric.isfinite", "cupynumeric.isinf", "cupynumeric.isnan", "cupynumeric.isneginf", "cupynumeric.isposinf", "cupynumeric.isreal", "cupynumeric.isrealobj", "cupynumeric.isscalar", "cupynumeric.ix_", "cupynumeric.kaiser", "cupynumeric.lcm", "cupynumeric.ldexp", "cupynumeric.left_shift", "cupynumeric.less", "cupynumeric.less_equal", "cupynumeric.linalg.cholesky", "cupynumeric.linalg.eig", "cupynumeric.linalg.eigh", "cupynumeric.linalg.eigvals", "cupynumeric.linalg.eigvalsh", "cupynumeric.linalg.expm", "cupynumeric.linalg.matrix_power", "cupynumeric.linalg.multi_dot", "cupynumeric.linalg.norm", "cupynumeric.linalg.qr", "cupynumeric.linalg.solve", "cupynumeric.linalg.svd", "cupynumeric.linspace", "cupynumeric.load", "cupynumeric.log", "cupynumeric.log10", "cupynumeric.log1p", "cupynumeric.log2", "cupynumeric.logaddexp", "cupynumeric.logaddexp2", "cupynumeric.logical_and", "cupynumeric.logical_not", "cupynumeric.logical_or", "cupynumeric.logical_xor", "cupynumeric.logspace", "cupynumeric.mask_indices", "cupynumeric.matmul", "cupynumeric.maximum", "cupynumeric.mean", "cupynumeric.median", "cupynumeric.meshgrid", "cupynumeric.minimum", "cupynumeric.mod", "cupynumeric.modf", "cupynumeric.moveaxis", "cupynumeric.multiply", "cupynumeric.nan_to_num", "cupynumeric.nanargmax", "cupynumeric.nanargmin", "cupynumeric.nancumprod", "cupynumeric.nancumsum", "cupynumeric.nanmax", "cupynumeric.nanmean", "cupynumeric.nanmedian", "cupynumeric.nanmin", "cupynumeric.nanpercentile", "cupynumeric.nanprod", "cupynumeric.nanquantile", "cupynumeric.nansum", "cupynumeric.ndarray.T", "cupynumeric.ndarray.__abs__", "cupynumeric.ndarray.__add__", "cupynumeric.ndarray.__and__", "cupynumeric.ndarray.__array__", "cupynumeric.ndarray.__bool__", "cupynumeric.ndarray.__complex__", "cupynumeric.ndarray.__contains__", "cupynumeric.ndarray.__copy__", "cupynumeric.ndarray.__deepcopy__", "cupynumeric.ndarray.__divmod__", "cupynumeric.ndarray.__eq__", "cupynumeric.ndarray.__float__", "cupynumeric.ndarray.__floordiv__", "cupynumeric.ndarray.__ge__", "cupynumeric.ndarray.__getitem__", "cupynumeric.ndarray.__gt__", "cupynumeric.ndarray.__iadd__", "cupynumeric.ndarray.__iand__", "cupynumeric.ndarray.__ifloordiv__", "cupynumeric.ndarray.__ilshift__", "cupynumeric.ndarray.__imatmul__", "cupynumeric.ndarray.__imod__", "cupynumeric.ndarray.__imul__", "cupynumeric.ndarray.__index__", "cupynumeric.ndarray.__int__", "cupynumeric.ndarray.__invert__", "cupynumeric.ndarray.__ior__", "cupynumeric.ndarray.__ipow__", "cupynumeric.ndarray.__irshift__", "cupynumeric.ndarray.__isub__", "cupynumeric.ndarray.__itruediv__", "cupynumeric.ndarray.__ixor__", "cupynumeric.ndarray.__le__", "cupynumeric.ndarray.__len__", "cupynumeric.ndarray.__lshift__", "cupynumeric.ndarray.__lt__", "cupynumeric.ndarray.__matmul__", "cupynumeric.ndarray.__mod__", "cupynumeric.ndarray.__mul__", "cupynumeric.ndarray.__ne__", "cupynumeric.ndarray.__neg__", "cupynumeric.ndarray.__new__", "cupynumeric.ndarray.__or__", "cupynumeric.ndarray.__pos__", "cupynumeric.ndarray.__pow__", "cupynumeric.ndarray.__reduce__", "cupynumeric.ndarray.__repr__", "cupynumeric.ndarray.__rmatmul__", "cupynumeric.ndarray.__rshift__", "cupynumeric.ndarray.__setitem__", "cupynumeric.ndarray.__setstate__", "cupynumeric.ndarray.__str__", "cupynumeric.ndarray.__sub__", "cupynumeric.ndarray.__truediv__", "cupynumeric.ndarray.__xor__", "cupynumeric.ndarray.all", "cupynumeric.ndarray.any", "cupynumeric.ndarray.argmax", "cupynumeric.ndarray.argmin", "cupynumeric.ndarray.argpartition", "cupynumeric.ndarray.argsort", "cupynumeric.ndarray.astype", "cupynumeric.ndarray.base", "cupynumeric.ndarray.choose", "cupynumeric.ndarray.clip", "cupynumeric.ndarray.compress", "cupynumeric.ndarray.conj", "cupynumeric.ndarray.conjugate", "cupynumeric.ndarray.copy", "cupynumeric.ndarray.ctypes", "cupynumeric.ndarray.cumprod", "cupynumeric.ndarray.cumsum", "cupynumeric.ndarray.data", "cupynumeric.ndarray.diagonal", "cupynumeric.ndarray.dot", "cupynumeric.ndarray.dtype", "cupynumeric.ndarray.dump", "cupynumeric.ndarray.dumps", "cupynumeric.ndarray.fill", "cupynumeric.ndarray.flags", "cupynumeric.ndarray.flat", "cupynumeric.ndarray.flatten", "cupynumeric.ndarray.flip", "cupynumeric.ndarray.getfield", "cupynumeric.ndarray.imag", "cupynumeric.ndarray.item", "cupynumeric.ndarray.itemset", "cupynumeric.ndarray.itemsize", "cupynumeric.ndarray.max", "cupynumeric.ndarray.mean", "cupynumeric.ndarray.min", "cupynumeric.ndarray.nbytes", "cupynumeric.ndarray.ndim", "cupynumeric.ndarray.nonzero", "cupynumeric.ndarray.partition", "cupynumeric.ndarray.prod", "cupynumeric.ndarray.put", "cupynumeric.ndarray.ravel", "cupynumeric.ndarray.real", "cupynumeric.ndarray.reshape", "cupynumeric.ndarray.searchsorted", "cupynumeric.ndarray.setfield", "cupynumeric.ndarray.setflags", "cupynumeric.ndarray.shape", "cupynumeric.ndarray.size", "cupynumeric.ndarray.sort", "cupynumeric.ndarray.squeeze", "cupynumeric.ndarray.strides", "cupynumeric.ndarray.sum", "cupynumeric.ndarray.swapaxes", "cupynumeric.ndarray.take", "cupynumeric.ndarray.tobytes", "cupynumeric.ndarray.tofile", "cupynumeric.ndarray.tolist", "cupynumeric.ndarray.tostring", "cupynumeric.ndarray.trace", "cupynumeric.ndarray.transpose", "cupynumeric.ndarray.unique", "cupynumeric.ndarray.var", "cupynumeric.ndarray.view", "cupynumeric.ndim", "cupynumeric.negative", "cupynumeric.nextafter", "cupynumeric.nonzero", "cupynumeric.not_equal", "cupynumeric.ones", "cupynumeric.ones_like", "cupynumeric.outer", "cupynumeric.packbits", "cupynumeric.partition", "cupynumeric.percentile", "cupynumeric.place", "cupynumeric.positive", "cupynumeric.power", "cupynumeric.prod", "cupynumeric.put", "cupynumeric.put_along_axis", "cupynumeric.putmask", "cupynumeric.quantile", "cupynumeric.rad2deg", "cupynumeric.radians", "cupynumeric.random.beta", "cupynumeric.random.binomial", "cupynumeric.random.bytes", "cupynumeric.random.chisquare", "cupynumeric.random.default_rng", "cupynumeric.random.exponential", "cupynumeric.random.f", "cupynumeric.random.gamma", "cupynumeric.random.geometric", "cupynumeric.random.gumbel", "cupynumeric.random.hypergeometric", "cupynumeric.random.laplace", "cupynumeric.random.logistic", "cupynumeric.random.lognormal", "cupynumeric.random.logseries", "cupynumeric.random.negative_binomial", "cupynumeric.random.noncentral_chisquare", "cupynumeric.random.noncentral_f", "cupynumeric.random.normal", "cupynumeric.random.pareto", "cupynumeric.random.poisson", "cupynumeric.random.power", "cupynumeric.random.rand", "cupynumeric.random.randint", "cupynumeric.random.randn", "cupynumeric.random.random", "cupynumeric.random.random_integers", "cupynumeric.random.random_sample", "cupynumeric.random.ranf", "cupynumeric.random.rayleigh", "cupynumeric.random.sample", "cupynumeric.random.seed", "cupynumeric.random.standard_cauchy", "cupynumeric.random.standard_exponential", "cupynumeric.random.standard_gamma", "cupynumeric.random.standard_t", "cupynumeric.random.triangular", "cupynumeric.random.uniform", "cupynumeric.random.vonmises", "cupynumeric.random.wald", "cupynumeric.random.weibull", "cupynumeric.random.zipf", "cupynumeric.ravel", "cupynumeric.ravel_multi_index", "cupynumeric.real", "cupynumeric.real_if_close", "cupynumeric.reciprocal", "cupynumeric.remainder", "cupynumeric.repeat", "cupynumeric.reshape", "cupynumeric.right_shift", "cupynumeric.rint", "cupynumeric.roll", "cupynumeric.roots", "cupynumeric.rot90", "cupynumeric.round", "cupynumeric.row_stack", "cupynumeric.searchsorted", "cupynumeric.select", "cupynumeric.shape", "cupynumeric.sign", "cupynumeric.signbit", "cupynumeric.sin", "cupynumeric.sinh", "cupynumeric.sort", "cupynumeric.sort_complex", "cupynumeric.split", "cupynumeric.sqrt", "cupynumeric.square", "cupynumeric.squeeze", "cupynumeric.stack", "cupynumeric.subtract", "cupynumeric.sum", "cupynumeric.swapaxes", "cupynumeric.take", "cupynumeric.take_along_axis", "cupynumeric.tan", "cupynumeric.tanh", "cupynumeric.tensordot", "cupynumeric.tile", "cupynumeric.trace", "cupynumeric.transpose", "cupynumeric.tri", "cupynumeric.tril", "cupynumeric.tril_indices", "cupynumeric.tril_indices_from", "cupynumeric.triu", "cupynumeric.triu_indices", "cupynumeric.triu_indices_from", "cupynumeric.true_divide", "cupynumeric.trunc", "cupynumeric.unique", "cupynumeric.unpackbits", "cupynumeric.unravel_index", "cupynumeric.var", "cupynumeric.vdot", "cupynumeric.vsplit", "cupynumeric.vstack", "cupynumeric.where", "cupynumeric.zeros", "cupynumeric.zeros_like", "API Reference", "Indexing routines", "Input and output", "Linear algebra (<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">cupynumeric.linalg</span></code>)", "Logic functions", "Array manipulation routines", "Mathematical functions", "The N-Dimensional array (<code class=\"xref py py-class docutils literal notranslate\"><span class=\"pre\">cupynumeric.ndarray</span></code>)", "Random sampling (<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">cupynumeric.random</span></code>)", "Routines", "Set routines", "Settings", "Sorting, searching, and counting", "Statistics", "Window functions", "Changes: 25.09", "Changes: 25.10", "Changes: 25.10", "Change Log", "Contributing to cuPyNumeric", "Building from source", "Developer guide", "Running tests", "Black-Scholes options pricing", "Cholesky decomposition", "Compact Finite Difference Scheme", "Edge Detection", "Examples", "K-Means Clustering Algorithm", "Newton Raphson Method In Two Dimensions", "Jacobi stencil", "TorchSWE case study", "Frequently Asked Questions", "NVIDIA cuPyNumeric", "Installation", "Third-party notices", "Advanced topics", "Differences with Numpy", "Performance Benchmarking", "Howtos", "Measure API coverage", "Trying Numpy code without changes", "User guide", "Best practices", "Extend cuPyNumeric with Legate-tasks", "Tutorial", "Usage"], "titleterms": {"09": 471, "1": 501, "10": [472, 473], "2": 501, "25": [471, 472, 473], "3": 501, "In": 485, "Of": 488, "The": [463, 475], "__abs__": 214, "__add__": 215, "__and__": 216, "__array__": 217, "__bool__": 218, "__complex__": 219, "__contains__": 220, "__copy__": 221, "__deepcopy__": 222, "__divmod__": 223, "__eq__": 224, "__float__": 225, "__floordiv__": 226, "__ge__": 227, "__getitem__": 228, "__gt__": 229, "__iadd__": 230, "__iand__": 231, "__ifloordiv__": 232, "__ilshift__": 233, "__imatmul__": 234, "__imod__": 235, "__imul__": 236, "__index__": 237, "__int__": 238, "__invert__": 239, "__ior__": 240, "__ipow__": 241, "__irshift__": 242, "__isub__": 243, "__itruediv__": 244, "__ixor__": 245, "__le__": 246, "__len__": 247, "__lshift__": 248, "__lt__": 249, "__matmul__": 250, "__mod__": 251, "__mul__": 252, "__ne__": 253, "__neg__": 254, "__new__": 255, "__or__": 256, "__pos__": 257, "__pow__": 258, "__reduce__": 259, "__repr__": 260, "__rmatmul__": 261, "__rshift__": 262, "__setitem__": 263, "__setstate__": 264, "__str__": 265, "__sub__": 266, "__truediv__": 267, "__xor__": 268, "about": 488, "absolut": 12, "add": 13, "advanc": [3, 476, 492, 499, 501], "algebra": [8, 459], "algorithm": 484, "all": [14, 269], "allclos": 15, "alloc": [499, 501], "amax": 16, "amin": 17, "an": 499, "angl": 18, "ani": [19, 270], "anoth": 499, "anti": 488, "api": [8, 456, 496, 499], "append": 20, "applic": [488, 499], "ar": 488, "arang": 21, "arcco": 22, "arccosh": 23, "arcsin": 24, "arcsinh": 25, "arctan": 26, "arctan2": 27, "arctanh": 28, "argmax": [29, 271], "argmin": [30, 272], "argpartit": [31, 273], "argsort": [32, 274], "argument": [488, 492, 493, 499], "argwher": 33, "arithmet": [462, 463], "arrai": [3, 8, 9, 34, 457, 460, 461, 463, 499, 501], "array_equ": 35, "array_split": 36, "asarrai": 37, "ask": 488, "astyp": 275, "atleast_1d": 38, "atleast_2d": 39, "atleast_3d": 40, "attribut": 463, "avail": 488, "averag": [41, 469], "avoid": [499, 501], "backend": 492, "background": [481, 482, 484, 485], "bartlett": 42, "base": [276, 499, 501], "basic": [461, 476, 478, 501], "begin": 475, "behavior": 493, "benchmark": 494, "best": [499, 501], "beta": 355, "better": 499, "between": 488, "binari": [5, 458], "bincount": 43, "binomi": 356, "bit": [3, 5, 464], "bitgener": 1, "bitwise_and": 44, "bitwise_or": 45, "bitwise_xor": 46, "black": [479, 501], "blackman": 47, "block": [48, 499], "boolean": [499, 501], "broadcast": 6, "broadcast_arrai": 49, "broadcast_shap": 50, "broadcast_to": 51, "build": [9, 476, 490], "byte": 357, "calcul": 463, "call": 496, "can": 488, "case": 487, "cbrt": 52, "ceil": 53, "ceph": 491, "certif": 475, "chang": [461, 471, 472, 473, 474, 484, 497], "chisquar": 358, "choleski": [164, 480], "choos": [54, 277], "class": 7, "clip": [55, 278], "cluster": [484, 501], "cmake": 476, "co": 65, "code": [475, 488, 497, 501], "column_stack": 56, "compact": 481, "comparison": [8, 460, 463], "complet": 500, "complex": 462, "compress": [57, 279], "comput": 501, "concaten": 58, "conda": [490, 501], "configur": 478, "conj": [59, 280], "conjug": [60, 281, 501], "construct": 463, "content": [460, 489], "contribut": 475, "convers": 463, "convolv": [3, 61], "copi": [62, 282, 493, 499], "copysign": 63, "copyto": 64, "correl": [3, 469], "cosh": 66, "count": [3, 468], "count_nonzero": 67, "cov": 68, "coverag": 496, "cpu": [490, 500, 501], "creation": [3, 9], "cross": 69, "ctype": 283, "cumprod": [70, 284], "cumsum": [71, 285], "cupi": 488, "cupynumer": [1, 2, 4, 6, 8, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 459, 463, 464, 475, 488, 489, 499, 500, 501], "data": [9, 10, 286, 457, 461, 463, 464], "datatyp": 493, "dco": 475, "decomposit": [459, 480], "default": 488, "default_rng": 359, "deg2rad": 72, "degre": 73, "delet": 74, "depend": 476, "design": 499, "detail": 496, "detect": [482, 501], "determin": 488, "develop": [475, 477], "diag": 75, "diag_indic": 76, "diag_indices_from": 77, "diagflat": 78, "diagon": [79, 287], "diff": 80, "differ": [462, 481, 488, 493], "digit": 81, "dimens": [461, 485], "dimension": [8, 463], "discret": [3, 8, 11], "distribut": 464, "divid": 82, "do": [475, 488], "doctor": 467, "doctor_filenam": 467, "doctor_format": 467, "doe": 488, "doesn": 488, "don": 488, "dot": [83, 288], "dsplit": 84, "dstack": 85, "dtype": 289, "dump": [290, 291], "edg": [482, 501], "eig": 165, "eigenvalu": 3, "eigh": 166, "eigval": 167, "eigvalsh": 168, "einsum": [3, 86], "einsum_path": 87, "element": [461, 499], "elementwis": 5, "empti": 88, "empty_lik": 89, "equal": 90, "equat": 459, "error": 488, "exampl": [483, 500, 501], "execut": [488, 492, 500], "exercis": 484, "exist": 9, "exp": 91, "exp2": 92, "expand_dim": 93, "expm": 169, "expm1": 94, "expon": 462, "exponenti": 360, "extend": 500, "extract": 95, "extrema": 462, "ey": 96, "f": 361, "fab": 97, "factor": 3, "fallback_stacktrac": 467, "fast": 500, "fast_math": 467, "faster": 499, "fft": [11, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113], "fft2": 99, "fftn": 100, "fftshift": 101, "file": 458, "fill": 292, "fill_diagon": 114, "find": 462, "find_common_typ": 115, "finit": 481, "flag": 293, "flat": 294, "flatnonzero": 116, "flatten": 295, "flip": [117, 296], "fliplr": 118, "flipud": 119, "float": 462, "float_pow": 120, "floor": 121, "floor_divid": 122, "fmax": 123, "fmin": 124, "fmod": 125, "force_thunk": 467, "format": 475, "fourier": [3, 8, 11, 500], "frequent": 488, "frexp": 126, "from": [9, 461, 476, 488, 490], "full": 127, "full_lik": 128, "function": [3, 459, 460, 462, 470, 499, 500], "gamma": 362, "gasnet": 492, "gcd": 129, "gener": [2, 457, 464, 499], "geometr": 363, "getfield": 297, "gpu": [488, 490, 500, 501], "gradient": [130, 501], "greater": 131, "greater_equ": 132, "guid": [477, 498], "guidelin": [494, 499], "gumbel": 364, "ham": 133, "han": 134, "handl": [462, 488], "hardwar": 501, "have": 488, "helper": 11, "hermitian": 11, "hfft": 102, "histogram": [135, 469, 500], "how": [475, 484, 488], "howto": 495, "hpc": 501, "hsplit": 136, "hstack": 137, "hyperbol": 462, "hypergeometr": 365, "hypot": 138, "i": [475, 488, 499, 500], "ident": 139, "ifft": 103, "ifft2": 104, "ifftn": 105, "ifftshift": 106, "ihfft": 107, "imag": [140, 298], "implement": [481, 482, 484, 485], "in1d": 141, "index": [3, 457, 493, 499, 501], "indic": [142, 489], "inner": 143, "input": [3, 458, 484], "insert": [144, 457], "instal": [490, 501], "instead": [493, 499], "introduct": 501, "invert": [145, 459], "irfft": 108, "irfft2": 109, "irfftn": 110, "isclos": 146, "iscomplex": 147, "iscomplexobj": 148, "isfinit": 149, "isinf": 150, "isnan": 151, "isneginf": 152, "isposinf": 153, "isreal": 154, "isrealobj": 155, "isscalar": 156, "item": [299, 463], "items": 301, "itemset": 300, "iter": 499, "ix_": 157, "jacobi": [486, 501], "join": 461, "jupyt": [488, 502], "k": 484, "kaiser": 158, "kind": 461, "kit": 491, "kmean": 484, "laplac": 366, "laptop": 488, "layout": 463, "lcm": 159, "ldexp": 160, "learn": [481, 482, 484, 485], "left_shift": 161, "legales": 475, "legat": [488, 492, 494, 500], "legion": [488, 492], "less": 162, "less_equ": 163, "let": 484, "level": 8, "licens": 490, "like": [457, 461], "linalg": [164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 459], "linear": [8, 459], "linspac": 176, "linux": 501, "list": [499, 501], "load": 177, "log": [178, 474], "log10": 179, "log1p": 180, "log2": 181, "logaddexp": 182, "logaddexp2": 183, "logarithm": 462, "logic": [3, 460, 499], "logical_and": 184, "logical_not": 185, "logical_or": 186, "logical_xor": 187, "logist": 367, "lognorm": 368, "logseri": 369, "logspac": 188, "loop": [499, 501], "lu": 3, "main": 500, "make": 466, "manag": 492, "manipul": [3, 461, 463, 499], "manual": 492, "mask": [499, 501], "mask_indic": 189, "mathemat": [3, 462, 499], "matmul": 190, "matmul_cache_s": 467, "matric": [9, 459], "matrix": [3, 459, 463, 500, 501], "matrix_pow": 170, "max": 302, "max_eager_volum": 467, "maximum": 191, "mean": [192, 303, 484, 488], "measur": 496, "median": 193, "memori": [463, 488, 499], "merg": 499, "meshgrid": 194, "method": [463, 485], "min": 304, "min_cpu_chunk": 467, "min_gpu_chunk": 467, "min_omp_chunk": 467, "minimum": 195, "miscellan": [3, 462], "mod": 196, "modf": 197, "modul": [8, 500], "more": 488, "moveaxi": 198, "multi": [8, 492, 500, 501], "multi_dot": 171, "multipl": [463, 500, 501], "multipli": 199, "my": 488, "n": 463, "nan_to_num": 200, "nanargmax": 201, "nanargmin": 202, "nancumprod": 203, "nancumsum": 204, "nanmax": 205, "nanmean": 206, "nanmedian": 207, "nanmin": 208, "nanpercentil": 209, "nanprod": 210, "nanquantil": 211, "nansum": 212, "nativ": [499, 501], "nbyte": 305, "ndarrai": [3, 4, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 463], "ndim": [306, 334], "neg": 335, "negative_binomi": 370, "network": 492, "newton": 485, "nextaft": 336, "node": [492, 500, 501], "noncentral_chisquar": 371, "noncentral_f": 372, "nonzero": [307, 337], "norm": [172, 459], "normal": 373, "not_equ": 338, "notebook": 488, "notic": 491, "npy": 458, "npz": 458, "number": [459, 461, 462, 484], "numer": 9, "numpi": [8, 458, 488, 491, 493, 497, 499, 501], "numpy_compat": 467, "nvidia": 489, "o": 499, "observ": 484, "ones": 339, "ones_lik": 340, "openbla": 476, "oper": [3, 5, 457, 460, 461, 462, 463, 499, 501], "option": [479, 501], "order": [469, 493], "origin": 475, "other": [459, 463, 501], "out": 488, "outcom": [481, 482, 484, 485], "outer": 341, "output": [3, 458, 499], "overal": 496, "overhead": 499, "pack": [3, 5], "packag": 490, "packbit": 342, "pad": 3, "pareto": 374, "parti": 491, "partit": [308, 343], "pass": [488, 492], "pattern": 488, "penalti": 499, "percentil": 344, "perform": [494, 499], "pip": [476, 501], "pitfal": 499, "place": 345, "point": 462, "poisson": 375, "posit": 346, "power": [347, 376], "practic": [499, 501], "preload_cudalib": 467, "price": 479, "problem": 500, "process": 475, "prod": [309, 348], "product": [459, 462], "program": 3, "project": 8, "proper": 466, "put": [310, 349], "put_along_axi": 350, "putmask": [351, 499], "pypi": 490, "python": 488, "qr": 173, "quantil": 352, "question": 488, "quick": 500, "rad2deg": 353, "radian": 354, "rand": 377, "randint": 378, "randn": 379, "random": [1, 2, 3, 8, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 464, 491], "random_integ": 381, "random_sampl": 382, "ranf": 383, "rang": 9, "raphson": 485, "ration": 462, "ravel": [311, 397], "ravel_multi_index": 398, "rayleigh": 384, "read": 488, "real": [11, 312, 399], "real_if_clos": 400, "realm": [488, 492], "rearrang": 461, "reciproc": 401, "recommend": 499, "reduc": 499, "reduct": 493, "refer": 456, "relat": 3, "remaind": 402, "remov": 461, "repeat": 403, "report": 496, "report_coverag": 467, "report_dump_callstack": 467, "report_dump_csv": 467, "requir": [475, 501], "reshap": [313, 404, 499], "resourc": [492, 501], "result": [488, 499], "return": [493, 499], "review": 475, "rfft": 111, "rfft2": 112, "rfftn": 113, "right_shift": 405, "rint": 406, "roll": 407, "root": 408, "rot90": 409, "round": [410, 462], "routin": [3, 9, 10, 11, 457, 461, 462, 465, 466, 499], "row_stack": 411, "run": [478, 484, 500, 501], "sampl": [3, 8, 385, 464, 501], "saxpi": 500, "scalar": 493, "scheme": 481, "schole": [479, 501], "scope": 492, "search": [3, 468], "searchsort": [314, 412], "see": 484, "seed": [386, 464], "select": [413, 463], "set": [3, 466, 467, 484], "setfield": 315, "setflag": 316, "setup": 501, "shape": [9, 317, 414, 461, 463, 493], "sign": [415, 475], "signbit": 416, "simpl": [464, 500], "sin": 417, "singl": 501, "sinh": 418, "size": 318, "slower": 488, "solv": [174, 459], "sort": [3, 319, 419, 468], "sort_complex": 420, "sourc": [476, 490], "special": 463, "split": [421, 461], "sqrt": 422, "squar": 423, "squeez": [320, 424], "stack": [425, 496, 499], "stage": 478, "standard": 11, "standard_cauchi": 387, "standard_exponenti": 388, "standard_gamma": 389, "standard_t": 390, "state": 464, "statist": [3, 469], "stencil": [486, 501], "stride": 321, "studi": 487, "subtract": 426, "sum": [322, 427, 462], "support": 493, "svd": [3, 175], "swapax": [323, 428], "t": [213, 488], "tabl": 489, "take": [324, 429], "take_along_axi": 430, "take_default": 467, "tan": 431, "tanh": 432, "task": [488, 492, 499, 500], "tbli": [476, 491], "tensordot": 433, "test": [10, 460, 467, 478], "than": 488, "thi": [488, 500], "third": 491, "three": 501, "through": [476, 499], "tile": [434, 461], "time": [488, 494], "tip": 501, "tobyt": 325, "tofil": 326, "tolist": 327, "tool": 494, "top": 501, "topic": [476, 492], "torchsw": 487, "tostr": 328, "trace": [329, 435], "transform": [3, 8, 11, 500], "transpos": [330, 436, 461], "tri": 437, "triangular": 391, "trigonometr": 462, "tril": 438, "tril_indic": 439, "tril_indices_from": 440, "triu": 441, "triu_indic": 442, "triu_indices_from": 443, "true_divid": 444, "trunc": 445, "truth": 460, "try": 497, "tutori": 501, "two": 485, "type": [10, 460, 463], "ufunc": 3, "understand": 500, "uniform": 392, "uniqu": [331, 446], "unpack": 3, "unpackbit": 447, "unravel_index": 448, "updat": 499, "us": [484, 488, 492, 494, 499, 501], "usag": [478, 502], "user": 498, "v": [8, 488, 501], "valu": [9, 460, 493], "var": [332, 449], "varianc": 469, "variant": [488, 490], "variou": 470, "vdot": 450, "vector": [459, 499], "verifi": 490, "version": 488, "view": [333, 493, 499], "vonmis": 393, "vsplit": 451, "vstack": 452, "wald": 394, "warn": [467, 488], "weibul": 395, "what": [488, 500], "when": 488, "where": [453, 488], "why": 488, "window": 470, "wise": 499, "without": 497, "your": 490, "zero": 454, "zeros_lik": 455, "zipf": 396}})