Search.setIndex({"alltitles": {"1. Use cuPyNumeric arrays, AVOID native lists": [[504, "use-cupynumeric-arrays-avoid-native-lists"]], "2. Use array-based operations, AVOID loops with indexing": [[504, "use-array-based-operations-avoid-loops-with-indexing"]], "3. Use boolean masks, AVOID advanced indexing": [[504, "use-boolean-masks-avoid-advanced-indexing"]], "API Reference": [[459, null]], "Advanced statistics": [[3, "advanced-statistics"]], "Advanced topics": [[479, "advanced-topics"], [495, null]], "Arithmetic operations": [[465, "arithmetic-operations"]], "Arithmetic, matrix multiplication, and comparison operations": [[466, "arithmetic-matrix-multiplication-and-comparison-operations"]], "Array Attributes": [[466, "array-attributes"]], "Array Manipulation Routine Pitfalls": [[502, "array-manipulation-routine-pitfalls"]], "Array Methods": [[466, "array-methods"]], "Array contents": [[463, "array-contents"]], "Array conversion": [[466, "array-conversion"]], "Array creation": [[3, "array-creation"]], "Array creation (ndarray)": [[3, "array-creation-ndarray"]], "Array creation routines": [[9, null]], "Array manipulation": [[3, "array-manipulation"]], "Array manipulation (ndarray)": [[3, "array-manipulation-ndarray"]], "Array manipulation routines": [[464, null]], "Array type testing": [[463, "array-type-testing"]], "Averages and variances": [[472, "averages-and-variances"]], "Avoid blocking operations": [[502, "avoid-blocking-operations"]], "Background": [[484, "Background"], [485, "Background"], [487, "Background"], [488, "Background"]], "Basic Linux installation": [[504, "basic-linux-installation"]], "Basic build": [[479, "basic-build"]], "Basic operations": [[464, "basic-operations"]], "Basic usage": [[481, "basic-usage"]], "Best practices": [[502, null], [504, "best-practices"]], "Binary operations": [[5, null]], "Bit Generators": [[467, "bit-generators"]], "Bit packing": [[5, "bit-packing"]], "Black-Scholes": [[504, "black-scholes"]], "Black-Scholes options pricing": [[482, null]], "Building from source": [[479, null], [493, "building-from-source"]], "Building matrices": [[9, "building-matrices"]], "Building through pip & cmake": [[479, "building-through-pip-cmake"]], "CPU execution": [[503, "cpu-execution"], [503, "id6"], [503, "id16"], [503, "id26"]], "Calculation": [[466, "calculation"], [466, "id1"]], "Call stack reporting": [[499, "call-stack-reporting"]], "Cephes": [[494, "cephes"]], "Change Log": [[477, null]], "Changes: 25.10": [[474, null]], "Changes: 25.11": [[475, null], [476, null]], "Changing array shape": [[464, "changing-array-shape"]], "Changing kind of array": [[464, "changing-kind-of-array"]], "Changing number of dimensions": [[464, "changing-number-of-dimensions"]], "Cholesky decomposition": [[483, null]], "Classes": [[7, null]], "Code Formatting Requirements": [[478, "code-formatting-requirements"]], "Compact Finite Difference Scheme": [[484, null]], "Comparison": [[463, "comparison"]], "Complete module": [[503, "complete-module"], [503, "id3"], [503, "id13"], [503, "id23"]], "Conda": [[504, "conda"]], "Conda and GPU / CPU Variants": [[493, "conda-and-gpu-cpu-variants"]], "Conjugate gradient": [[504, "conjugate-gradient"]], "Constructing arrays": [[466, "constructing-arrays"]], "Contents:": [[492, null]], "Contributing to cuPyNumeric": [[478, null]], "Convolve and Correlate": [[3, null]], "Correlating": [[472, "correlating"]], "Counting": [[471, "counting"]], "Data Type": [[466, "data-type"]], "Data type routines": [[10, null]], "Data type testing": [[10, "data-type-testing"]], "Decompositions": [[462, "decompositions"]], "Dependencies": [[479, "dependencies"]], "Detailed coverage report": [[499, "detailed-coverage-report"]], "Developer guide": [[480, null]], "Differences with Numpy": [[496, null]], "Discrete Fourier Transform": [[8, "discrete-fourier-transform"]], "Discrete Fourier Transform (cupynumeric.fft)": [[11, null]], "Discrete Fourier transform": [[3, "discrete-fourier-transform"]], "Distributions": [[467, "distributions"]], "Edge Detection": [[485, null]], "Edge detection": [[504, "edge-detection"]], "Eigenvalues": [[3, "eigenvalues"]], "Einsum and related": [[3, "einsum-and-related"]], "Elementwise bit operations": [[5, "elementwise-bit-operations"]], "Example 1": [[504, "example-1"]], "Example 2": [[504, "example-2"]], "Examples": [[486, null], [504, "examples"]], "Exercise: Change the number of clusters and number of observations and see how the clusters change": [[487, "Exercise:-Change-the-number-of-clusters-and-number-of-observations-and-see-how-the-clusters-change"]], "Exponents and logarithms": [[465, "exponents-and-logarithms"]], "Extend cuPyNumeric with Legate-tasks": [[503, null]], "Extrema Finding": [[465, "extrema-finding"]], "Factorizations": [[3, "factorizations"]], "Fast Fourier Transform problem": [[503, "fast-fourier-transform-problem"]], "Faster I/O Routines": [[502, "faster-i-o-routines"]], "Floating point routines": [[465, "floating-point-routines"]], "Frequently Asked Questions": [[491, null]], "From existing data": [[9, "from-existing-data"]], "From shape or value": [[9, "from-shape-or-value"]], "Functional programming": [[3, "functional-programming"]], "GPU execution": [[503, "gpu-execution"], [503, "id7"], [503, "id17"], [503, "id27"]], "General Recommendations": [[502, "general-recommendations"]], "Generating index arrays": [[460, "generating-index-arrays"]], "Guidelines for performance benchmarks": [[497, "guidelines-for-performance-benchmarks"]], "Guidelines on designing cuPyNumeric applications": [[502, "guidelines-on-designing-cupynumeric-applications"]], "Guidelines on using cuPyNumeric APIs": [[502, "guidelines-on-using-cupynumeric-apis"]], "HPC cluster installation": [[504, "hpc-cluster-installation"]], "Handling complex numbers": [[465, "handling-complex-numbers"]], "Hardware requirements": [[504, "hardware-requirements"]], "Helper routines": [[11, "helper-routines"]], "Hermitian FFTs": [[11, "hermitian-ffts"]], "Histogram problem": [[503, "histogram-problem"]], "Histograms": [[472, "histograms"]], "How Do I Sign the DCO?": [[478, "how-do-i-sign-the-dco"]], "How do I time the execution of my application?": [[491, "how-do-i-time-the-execution-of-my-application"]], "How do I use Jupyter Notebooks?": [[491, "how-do-i-use-jupyter-notebooks"]], "How to begin": [[478, "how-to-begin"]], "How to determine available memory?": [[491, "how-to-determine-available-memory"]], "How to handle Out-Of-Memory errors?": [[491, "how-to-handle-out-of-memory-errors"]], "How to pass Legion and Realm arguments?": [[491, "how-to-pass-legion-and-realm-arguments"]], "Howtos": [[498, null]], "Hyperbolic functions": [[465, "hyperbolic-functions"]], "Implementation": [[484, "Implementation"], [485, "Implementation"], [487, "Implementation"], [488, "Implementation"]], "Indexing": [[3, "indexing"]], "Indexing behavior": [[496, "indexing-behavior"]], "Indexing routines": [[460, null]], "Indexing-like operations": [[460, "indexing-like-operations"]], "Indices and tables": [[492, "indices-and-tables"]], "Input and output": [[3, "input-and-output"], [461, null]], "Input and output (ndarray)": [[3, "input-and-output-ndarray"]], "Inserting data into arrays": [[460, "inserting-data-into-arrays"]], "Installation": [[493, null]], "Installing Conda Packages": [[493, "installing-conda-packages"]], "Installing PyPI Packages": [[493, "installing-pypi-packages"]], "Introduction": [[504, "introduction"]], "Item selection and manipulation": [[466, "item-selection-and-manipulation"]], "Jacobi stencil": [[489, null], [504, "jacobi-stencil"]], "Joining arrays": [[464, "joining-arrays"]], "Jupyter": [[505, "jupyter"]], "K-Means Clustering Algorithm": [[487, null]], "LU factorization and related": [[3, "lu-factorization-and-related"]], "Learning Outcomes": [[484, "Learning-Outcomes"], [485, "Learning-Outcomes"], [487, "Learning-Outcomes"], [488, "Learning-Outcomes"]], "Lets run the kmeans algorithm using a set of inputs": [[487, "Lets-run-the-kmeans-algorithm-using-a-set-of-inputs"]], "Licenses": [[493, "licenses"]], "Linear Algebra": [[8, "linear-algebra"]], "Linear algebra (cupynumeric.linalg)": [[462, null]], "Logic functions": [[463, null]], "Logic operations": [[463, "logic-operations"]], "Logical operations": [[3, "logical-operations"]], "Main function": [[503, "main-function"], [503, "main-function-1"], [503, "id11"], [503, "id21"]], "Making proper sets": [[469, "making-proper-sets"]], "Mathematical functions": [[3, "mathematical-functions"], [465, null]], "Matrix Functions": [[462, "matrix-functions"]], "Matrix and vector products": [[462, "matrix-and-vector-products"]], "Matrix multiplication": [[504, "matrix-multiplication"]], "Measure API coverage": [[499, null]], "Memory Layout": [[466, "memory-layout"]], "Merge tasks to reduce overhead": [[502, "merge-tasks-to-reduce-overhead"]], "Miscellaneous": [[465, "miscellaneous"]], "Miscellaneous matrix routines": [[3, "miscellaneous-matrix-routines"]], "Module-Level": [[8, "module-level"]], "Multi-Dimensional Array": [[8, "multi-dimensional-array"]], "Multi-Node execution": [[503, "multi-node-execution"], [503, "id8"], [503, "id18"], [503, "id28"]], "Multi-node HPC": [[504, "multi-node-hpc"]], "Multi-node execution": [[495, "multi-node-execution"]], "NVIDIA cuPyNumeric": [[492, null]], "Newton Raphson Method In Two Dimensions": [[488, null]], "Norms and other numbers": [[462, "norms-and-other-numbers"]], "NumPy": [[494, "numpy"], [504, "numpy"]], "NumPy binary files (npy, npz)": [[461, "numpy-binary-files-npy-npz"]], "NumPy vs cuPyNumeric APIs": [[8, "numpy-vs-cupynumeric-apis"]], "Numerical ranges": [[9, "numerical-ranges"]], "OpenBLAS": [[479, "openblas"]], "Order argument": [[496, "order-argument"]], "Order statistics": [[472, "order-statistics"]], "Other Attributes": [[466, "other-attributes"]], "Other options": [[504, "other-options"]], "Overall coverage report": [[499, "overall-coverage-report"]], "Packing and unpacking bits": [[3, "packing-and-unpacking-bits"]], "Padding arrays": [[3, "padding-arrays"]], "Passing Legion and Realm arguments": [[495, "passing-legion-and-realm-arguments"]], "Performance Benchmarking": [[497, null]], "Pip": [[504, "pip"]], "Project comparisons": [[8, null]], "Questions?": [[491, "questions"]], "Quick example": [[503, "quick-example"]], "Random Generator": [[467, "random-generator"]], "Random Kit": [[494, "random-kit"]], "Random Sampling": [[8, "random-sampling"]], "Random sampling": [[3, "random-sampling"]], "Random sampling (cupynumeric.random)": [[467, null]], "Rational routines": [[465, "rational-routines"]], "Real FFTs": [[11, "real-ffts"]], "Rearranging elements": [[464, "rearranging-elements"]], "Reductions": [[496, "reductions"]], "Removing data from arrays": [[464, "removing-data-from-arrays"]], "Reshape returns a copy instead of view": [[502, "reshape-returns-a-copy-instead-of-view"]], "Resource Scoping": [[495, "resource-scoping"]], "Resource allocation": [[504, "resource-allocation"]], "Returning a copy instead of a view": [[496, "returning-a-copy-instead-of-a-view"]], "Review Process": [[478, "review-process"]], "Rounding": [[465, "rounding"]], "Routines": [[468, null]], "Running cuPyNumeric code": [[504, "running-cupynumeric-code"]], "Running on CPU": [[504, "running-on-cpu"], [504, "id2"], [504, "id4"], [504, "id6"]], "Running on CPU and GPU": [[503, "running-on-cpu-and-gpu"], [503, "id4"], [503, "id14"], [503, "id24"]], "Running on GPU": [[504, "running-on-gpu"], [504, "id3"], [504, "id5"], [504, "id7"], [504, "id9"]], "Running on GPU cluster": [[504, "running-on-gpu-cluster"]], "Running tests": [[481, null]], "SAXPY problem": [[503, "saxpy-problem"]], "SVD and related": [[3, "svd-and-related"]], "Sample Code": [[504, "sample-code"], [504, "id8"]], "Sample computation": [[504, "sample-computation"]], "Scalar return values": [[496, "scalar-return-values"]], "Searching": [[471, "searching"]], "Searching, sorting, and counting": [[3, "searching-sorting-and-counting"]], "Seeding and State": [[467, "seeding-and-state"]], "Set operations": [[3, "set-operations"]], "Set routines": [[469, null]], "Settings": [[470, null]], "Shape manipulation": [[466, "shape-manipulation"]], "Simple matrix multiplication problem": [[503, "simple-matrix-multiplication-problem"]], "Simple random data": [[467, "simple-random-data"]], "Single node": [[504, "single-node"]], "Single-node setup": [[504, "single-node-setup"]], "Solving equations and inverting matrices": [[462, "solving-equations-and-inverting-matrices"]], "Sorting": [[471, "sorting"]], "Sorting, searching, and counting": [[471, null]], "Special methods": [[466, "special-methods"]], "Splitting arrays": [[464, "splitting-arrays"]], "Stack results in a performance penalty": [[502, "stack-results-in-a-performance-penalty"]], "Stage configuration": [[481, "stage-configuration"]], "Standard FFTs": [[11, "standard-ffts"]], "Statistics": [[472, null]], "Sums, products, differences": [[465, "sums-products-differences"]], "Supported shapes and datatypes": [[496, "supported-shapes-and-datatypes"]], "TBLIS": [[479, "tblis"], [494, "tblis"]], "Task function": [[503, "task-function"], [503, "id2"], [503, "id12"], [503, "id22"]], "The Legalese: Developer Certificate of Origin": [[478, "the-legalese-developer-certificate-of-origin"]], "The N-Dimensional array (cupynumeric.ndarray)": [[466, null]], "Third-party notices": [[494, null]], "Tiling arrays": [[464, "tiling-arrays"]], "Top three Tips": [[504, "top-three-tips"]], "TorchSWE case study": [[490, null]], "Transpose-like operations": [[464, "transpose-like-operations"]], "Trigonometric functions": [[465, "trigonometric-functions"]], "Truth value testing": [[463, "truth-value-testing"]], "Trying Numpy code without changes": [[500, null]], "Tutorial": [[504, null]], "Ufuncs": [[3, "ufuncs"]], "Understanding this example": [[503, "understanding-this-example"]], "Usage": [[505, null]], "Use array-based operations, AVOID loops with indexing": [[502, "use-array-based-operations-avoid-loops-with-indexing"]], "Use boolean masks, AVOID advanced indexing": [[502, "use-boolean-masks-avoid-advanced-indexing"]], "Use cuPyNumeric or NumPy arrays, AVOID native lists": [[502, "use-cupynumeric-or-numpy-arrays-avoid-native-lists"]], "Use logic functions, AVOID iterating through a loop": [[502, "use-logic-functions-avoid-iterating-through-a-loop"]], "Use mathematical functions, AVOID element-wise loops": [[502, "use-mathematical-functions-avoid-element-wise-loops"]], "Use output arguments to reduce memory allocation": [[502, "use-output-arguments-to-reduce-memory-allocation"]], "Use putmask to update an array based on another array": [[502, "use-putmask-to-update-an-array-based-on-another-array"]], "User guide": [[501, null]], "Using Legate timing tools": [[497, "using-legate-timing-tools"]], "Using a manual task manager": [[495, "using-a-manual-task-manager"]], "Using legate": [[495, "using-legate"]], "Using the GASNet networking backend": [[495, "using-the-gasnet-networking-backend"]], "Various windows": [[473, "various-windows"]], "Vectorize for better performance": [[502, "vectorize-for-better-performance"]], "Verify your Installation": [[493, "verify-your-installation"]], "What are the anti-patterns in a NumPy code?": [[491, "what-are-the-anti-patterns-in-a-numpy-code"]], "What are the defaults?": [[491, "what-are-the-defaults"]], "What are the different task variants available in Legate?": [[491, "what-are-the-different-task-variants-available-in-legate"]], "What does this warning mean?": [[491, "what-does-this-warning-mean"]], "What if I don\u2019t have a GPU?": [[491, "what-if-i-dont-have-a-gpu"]], "What is a Legate task?": [[503, "what-is-a-legate-task"]], "What is the difference between Legate and cuPyNumeric?": [[491, "what-is-the-difference-between-legate-and-cupynumeric"]], "What is the version of legate?": [[491, "what-is-the-version-of-legate"]], "When to use python vs legate?": [[491, "when-to-use-python-vs-legate"]], "Where I can read more about cuPyNumeric?": [[491, "where-i-can-read-more-about-cupynumeric"]], "Why are the results different from NumPy?": [[491, "why-are-the-results-different-from-numpy"]], "Why doesn\u2019t Legate use my GPU?": [[491, "why-doesnt-legate-use-my-gpu"]], "Why is cuPyNumeric slower than CuPy on my laptop?": [[491, "why-is-cupynumeric-slower-than-cupy-on-my-laptop"]], "Why is cuPyNumeric slower than NumPy on my laptop?": [[491, "why-is-cupynumeric-slower-than-numpy-on-my-laptop"]], "Window functions": [[473, null]], "cuPyNumeric": [[504, "cupynumeric"]], "cuPyNumeric vs NumPy": [[504, "cupynumeric-vs-numpy"]], "cupynumeric.absolute": [[12, null]], "cupynumeric.add": [[13, null]], "cupynumeric.all": [[14, null]], "cupynumeric.allclose": [[15, null]], "cupynumeric.amax": [[16, null]], "cupynumeric.amin": [[17, null]], "cupynumeric.angle": [[18, null]], "cupynumeric.any": [[19, null]], "cupynumeric.append": [[20, null]], "cupynumeric.arange": [[21, null]], "cupynumeric.arccos": [[22, null]], "cupynumeric.arccosh": [[23, null]], "cupynumeric.arcsin": [[24, null]], "cupynumeric.arcsinh": [[25, null]], "cupynumeric.arctan": [[26, null]], "cupynumeric.arctan2": [[27, null]], "cupynumeric.arctanh": [[28, null]], "cupynumeric.argmax": [[29, null]], "cupynumeric.argmin": [[30, null]], "cupynumeric.argpartition": [[31, null]], "cupynumeric.argsort": [[32, null]], "cupynumeric.argwhere": [[33, null]], "cupynumeric.array": [[34, null]], "cupynumeric.array_equal": [[35, null]], "cupynumeric.array_split": [[36, null]], "cupynumeric.asarray": [[37, null]], "cupynumeric.atleast_1d": [[38, null]], "cupynumeric.atleast_2d": [[39, null]], "cupynumeric.atleast_3d": [[40, null]], "cupynumeric.average": [[41, null]], "cupynumeric.bartlett": [[42, null]], "cupynumeric.bincount": [[43, null]], "cupynumeric.bitwise_and": [[44, null]], "cupynumeric.bitwise_or": [[45, null]], "cupynumeric.bitwise_xor": [[46, null]], "cupynumeric.blackman": [[47, null]], "cupynumeric.block": [[48, null]], "cupynumeric.broadcast": [[6, null]], "cupynumeric.broadcast_arrays": [[49, null]], "cupynumeric.broadcast_shapes": [[50, null]], "cupynumeric.broadcast_to": [[51, null]], "cupynumeric.cbrt": [[52, null]], "cupynumeric.ceil": [[53, null]], "cupynumeric.choose": [[54, null]], "cupynumeric.clip": [[55, null]], "cupynumeric.column_stack": [[56, null]], "cupynumeric.compress": [[57, null]], "cupynumeric.concatenate": [[58, null]], "cupynumeric.conj": [[59, null]], "cupynumeric.conjugate": [[60, null]], "cupynumeric.convolve": [[61, null]], "cupynumeric.copy": [[62, null]], "cupynumeric.copysign": [[63, null]], "cupynumeric.copyto": [[64, null]], "cupynumeric.cos": [[65, null]], "cupynumeric.cosh": [[66, null]], "cupynumeric.count_nonzero": [[67, null]], "cupynumeric.cov": [[68, null]], "cupynumeric.cross": [[69, null]], "cupynumeric.cumprod": [[70, null]], "cupynumeric.cumsum": [[71, null]], "cupynumeric.deg2rad": [[72, null]], "cupynumeric.degrees": [[73, null]], "cupynumeric.delete": [[74, null]], "cupynumeric.diag": [[75, null]], "cupynumeric.diag_indices": [[76, null]], "cupynumeric.diag_indices_from": [[77, null]], "cupynumeric.diagflat": [[78, null]], "cupynumeric.diagonal": [[79, null]], "cupynumeric.diff": [[80, null]], "cupynumeric.digitize": [[81, null]], "cupynumeric.divide": [[82, null]], "cupynumeric.dot": [[83, null]], "cupynumeric.dsplit": [[84, null]], "cupynumeric.dstack": [[85, null]], "cupynumeric.einsum": [[86, null]], "cupynumeric.einsum_path": [[87, null]], "cupynumeric.empty": [[88, null]], "cupynumeric.empty_like": [[89, null]], "cupynumeric.equal": [[90, null]], "cupynumeric.exp": [[91, null]], "cupynumeric.exp2": [[92, null]], "cupynumeric.expand_dims": [[93, null]], "cupynumeric.expm1": [[94, null]], "cupynumeric.extract": [[95, null]], "cupynumeric.eye": [[96, null]], "cupynumeric.fabs": [[97, null]], "cupynumeric.fft.fft": [[98, null]], "cupynumeric.fft.fft2": [[99, null]], "cupynumeric.fft.fftn": [[100, null]], "cupynumeric.fft.fftshift": [[101, null]], "cupynumeric.fft.hfft": [[102, null]], "cupynumeric.fft.ifft": [[103, null]], "cupynumeric.fft.ifft2": [[104, null]], "cupynumeric.fft.ifftn": [[105, null]], "cupynumeric.fft.ifftshift": [[106, null]], "cupynumeric.fft.ihfft": [[107, null]], "cupynumeric.fft.irfft": [[108, null]], "cupynumeric.fft.irfft2": [[109, null]], "cupynumeric.fft.irfftn": [[110, null]], "cupynumeric.fft.rfft": [[111, null]], "cupynumeric.fft.rfft2": [[112, null]], "cupynumeric.fft.rfftn": [[113, null]], "cupynumeric.fill_diagonal": [[114, null]], "cupynumeric.find_common_type": [[115, null]], "cupynumeric.flatnonzero": [[116, null]], "cupynumeric.flip": [[117, null]], "cupynumeric.fliplr": [[118, null]], "cupynumeric.flipud": [[119, null]], "cupynumeric.float_power": [[120, null]], "cupynumeric.floor": [[121, null]], "cupynumeric.floor_divide": [[122, null]], "cupynumeric.fmax": [[123, null]], "cupynumeric.fmin": [[124, null]], "cupynumeric.fmod": [[125, null]], "cupynumeric.frexp": [[126, null]], "cupynumeric.full": [[127, null]], "cupynumeric.full_like": [[128, null]], "cupynumeric.gcd": [[129, null]], "cupynumeric.gradient": [[130, null]], "cupynumeric.greater": [[131, null]], "cupynumeric.greater_equal": [[132, null]], "cupynumeric.hamming": [[133, null]], "cupynumeric.hanning": [[134, null]], "cupynumeric.histogram": [[135, null]], "cupynumeric.histogram2d": [[136, null]], "cupynumeric.histogramdd": [[137, null]], "cupynumeric.hsplit": [[138, null]], "cupynumeric.hstack": [[139, null]], "cupynumeric.hypot": [[140, null]], "cupynumeric.identity": [[141, null]], "cupynumeric.imag": [[142, null]], "cupynumeric.in1d": [[143, null]], "cupynumeric.indices": [[144, null]], "cupynumeric.inner": [[145, null]], "cupynumeric.insert": [[146, null]], "cupynumeric.invert": [[147, null]], "cupynumeric.isclose": [[148, null]], "cupynumeric.iscomplex": [[149, null]], "cupynumeric.iscomplexobj": [[150, null]], "cupynumeric.isfinite": [[151, null]], "cupynumeric.isin": [[152, null]], "cupynumeric.isinf": [[153, null]], "cupynumeric.isnan": [[154, null]], "cupynumeric.isneginf": [[155, null]], "cupynumeric.isposinf": [[156, null]], "cupynumeric.isreal": [[157, null]], "cupynumeric.isrealobj": [[158, null]], "cupynumeric.isscalar": [[159, null]], "cupynumeric.ix_": [[160, null]], "cupynumeric.kaiser": [[161, null]], "cupynumeric.lcm": [[162, null]], "cupynumeric.ldexp": [[163, null]], "cupynumeric.left_shift": [[164, null]], "cupynumeric.less": [[165, null]], "cupynumeric.less_equal": [[166, null]], "cupynumeric.linalg.cholesky": [[167, null]], "cupynumeric.linalg.eig": [[168, null]], "cupynumeric.linalg.eigh": [[169, null]], "cupynumeric.linalg.eigvals": [[170, null]], "cupynumeric.linalg.eigvalsh": [[171, null]], "cupynumeric.linalg.expm": [[172, null]], "cupynumeric.linalg.matrix_power": [[173, null]], "cupynumeric.linalg.multi_dot": [[174, null]], "cupynumeric.linalg.norm": [[175, null]], "cupynumeric.linalg.qr": [[176, null]], "cupynumeric.linalg.solve": [[177, null]], "cupynumeric.linalg.svd": [[178, null]], "cupynumeric.linspace": [[179, null]], "cupynumeric.load": [[180, null]], "cupynumeric.log": [[181, null]], "cupynumeric.log10": [[182, null]], "cupynumeric.log1p": [[183, null]], "cupynumeric.log2": [[184, null]], "cupynumeric.logaddexp": [[185, null]], "cupynumeric.logaddexp2": [[186, null]], "cupynumeric.logical_and": [[187, null]], "cupynumeric.logical_not": [[188, null]], "cupynumeric.logical_or": [[189, null]], "cupynumeric.logical_xor": [[190, null]], "cupynumeric.logspace": [[191, null]], "cupynumeric.mask_indices": [[192, null]], "cupynumeric.matmul": [[193, null]], "cupynumeric.maximum": [[194, null]], "cupynumeric.mean": [[195, null]], "cupynumeric.median": [[196, null]], "cupynumeric.meshgrid": [[197, null]], "cupynumeric.minimum": [[198, null]], "cupynumeric.mod": [[199, null]], "cupynumeric.modf": [[200, null]], "cupynumeric.moveaxis": [[201, null]], "cupynumeric.multiply": [[202, null]], "cupynumeric.nan_to_num": [[203, null]], "cupynumeric.nanargmax": [[204, null]], "cupynumeric.nanargmin": [[205, null]], "cupynumeric.nancumprod": [[206, null]], "cupynumeric.nancumsum": [[207, null]], "cupynumeric.nanmax": [[208, null]], "cupynumeric.nanmean": [[209, null]], "cupynumeric.nanmedian": [[210, null]], "cupynumeric.nanmin": [[211, null]], "cupynumeric.nanpercentile": [[212, null]], "cupynumeric.nanprod": [[213, null]], "cupynumeric.nanquantile": [[214, null]], "cupynumeric.nansum": [[215, null]], "cupynumeric.ndarray": [[4, null]], "cupynumeric.ndarray.T": [[216, null]], "cupynumeric.ndarray.__abs__": [[217, null]], "cupynumeric.ndarray.__add__": [[218, null]], "cupynumeric.ndarray.__and__": [[219, null]], "cupynumeric.ndarray.__array__": [[220, null]], "cupynumeric.ndarray.__bool__": [[221, null]], "cupynumeric.ndarray.__complex__": [[222, null]], "cupynumeric.ndarray.__contains__": [[223, null]], "cupynumeric.ndarray.__copy__": [[224, null]], "cupynumeric.ndarray.__deepcopy__": [[225, null]], "cupynumeric.ndarray.__divmod__": [[226, null]], "cupynumeric.ndarray.__eq__": [[227, null]], "cupynumeric.ndarray.__float__": [[228, null]], "cupynumeric.ndarray.__floordiv__": [[229, null]], "cupynumeric.ndarray.__ge__": [[230, null]], "cupynumeric.ndarray.__getitem__": [[231, null]], "cupynumeric.ndarray.__gt__": [[232, null]], "cupynumeric.ndarray.__iadd__": [[233, null]], "cupynumeric.ndarray.__iand__": [[234, null]], "cupynumeric.ndarray.__ifloordiv__": [[235, null]], "cupynumeric.ndarray.__ilshift__": [[236, null]], "cupynumeric.ndarray.__imatmul__": [[237, null]], "cupynumeric.ndarray.__imod__": [[238, null]], "cupynumeric.ndarray.__imul__": [[239, null]], "cupynumeric.ndarray.__index__": [[240, null]], "cupynumeric.ndarray.__int__": [[241, null]], "cupynumeric.ndarray.__invert__": [[242, null]], "cupynumeric.ndarray.__ior__": [[243, null]], "cupynumeric.ndarray.__ipow__": [[244, null]], "cupynumeric.ndarray.__irshift__": [[245, null]], "cupynumeric.ndarray.__isub__": [[246, null]], "cupynumeric.ndarray.__itruediv__": [[247, null]], "cupynumeric.ndarray.__ixor__": [[248, null]], "cupynumeric.ndarray.__le__": [[249, null]], "cupynumeric.ndarray.__len__": [[250, null]], "cupynumeric.ndarray.__lshift__": [[251, null]], "cupynumeric.ndarray.__lt__": [[252, null]], "cupynumeric.ndarray.__matmul__": [[253, null]], "cupynumeric.ndarray.__mod__": [[254, null]], "cupynumeric.ndarray.__mul__": [[255, null]], "cupynumeric.ndarray.__ne__": [[256, null]], "cupynumeric.ndarray.__neg__": [[257, null]], "cupynumeric.ndarray.__new__": [[258, null]], "cupynumeric.ndarray.__or__": [[259, null]], "cupynumeric.ndarray.__pos__": [[260, null]], "cupynumeric.ndarray.__pow__": [[261, null]], "cupynumeric.ndarray.__reduce__": [[262, null]], "cupynumeric.ndarray.__repr__": [[263, null]], "cupynumeric.ndarray.__rmatmul__": [[264, null]], "cupynumeric.ndarray.__rshift__": [[265, null]], "cupynumeric.ndarray.__setitem__": [[266, null]], "cupynumeric.ndarray.__setstate__": [[267, null]], "cupynumeric.ndarray.__str__": [[268, null]], "cupynumeric.ndarray.__sub__": [[269, null]], "cupynumeric.ndarray.__truediv__": [[270, null]], "cupynumeric.ndarray.__xor__": [[271, null]], "cupynumeric.ndarray.all": [[272, null]], "cupynumeric.ndarray.any": [[273, null]], "cupynumeric.ndarray.argmax": [[274, null]], "cupynumeric.ndarray.argmin": [[275, null]], "cupynumeric.ndarray.argpartition": [[276, null]], "cupynumeric.ndarray.argsort": [[277, null]], "cupynumeric.ndarray.astype": [[278, null]], "cupynumeric.ndarray.base": [[279, null]], "cupynumeric.ndarray.choose": [[280, null]], "cupynumeric.ndarray.clip": [[281, null]], "cupynumeric.ndarray.compress": [[282, null]], "cupynumeric.ndarray.conj": [[283, null]], "cupynumeric.ndarray.conjugate": [[284, null]], "cupynumeric.ndarray.copy": [[285, null]], "cupynumeric.ndarray.ctypes": [[286, null]], "cupynumeric.ndarray.cumprod": [[287, null]], "cupynumeric.ndarray.cumsum": [[288, null]], "cupynumeric.ndarray.data": [[289, null]], "cupynumeric.ndarray.diagonal": [[290, null]], "cupynumeric.ndarray.dot": [[291, null]], "cupynumeric.ndarray.dtype": [[292, null]], "cupynumeric.ndarray.dump": [[293, null]], "cupynumeric.ndarray.dumps": [[294, null]], "cupynumeric.ndarray.fill": [[295, null]], "cupynumeric.ndarray.flags": [[296, null]], "cupynumeric.ndarray.flat": [[297, null]], "cupynumeric.ndarray.flatten": [[298, null]], "cupynumeric.ndarray.flip": [[299, null]], "cupynumeric.ndarray.getfield": [[300, null]], "cupynumeric.ndarray.imag": [[301, null]], "cupynumeric.ndarray.item": [[302, null]], "cupynumeric.ndarray.itemset": [[303, null]], "cupynumeric.ndarray.itemsize": [[304, null]], "cupynumeric.ndarray.max": [[305, null]], "cupynumeric.ndarray.mean": [[306, null]], "cupynumeric.ndarray.min": [[307, null]], "cupynumeric.ndarray.nbytes": [[308, null]], "cupynumeric.ndarray.ndim": [[309, null]], "cupynumeric.ndarray.nonzero": [[310, null]], "cupynumeric.ndarray.partition": [[311, null]], "cupynumeric.ndarray.prod": [[312, null]], "cupynumeric.ndarray.put": [[313, null]], "cupynumeric.ndarray.ravel": [[314, null]], "cupynumeric.ndarray.real": [[315, null]], "cupynumeric.ndarray.reshape": [[316, null]], "cupynumeric.ndarray.searchsorted": [[317, null]], "cupynumeric.ndarray.setfield": [[318, null]], "cupynumeric.ndarray.setflags": [[319, null]], "cupynumeric.ndarray.shape": [[320, null]], "cupynumeric.ndarray.size": [[321, null]], "cupynumeric.ndarray.sort": [[322, null]], "cupynumeric.ndarray.squeeze": [[323, null]], "cupynumeric.ndarray.strides": [[324, null]], "cupynumeric.ndarray.sum": [[325, null]], "cupynumeric.ndarray.swapaxes": [[326, null]], "cupynumeric.ndarray.take": [[327, null]], "cupynumeric.ndarray.tobytes": [[328, null]], "cupynumeric.ndarray.tofile": [[329, null]], "cupynumeric.ndarray.tolist": [[330, null]], "cupynumeric.ndarray.tostring": [[331, null]], "cupynumeric.ndarray.trace": [[332, null]], "cupynumeric.ndarray.transpose": [[333, null]], "cupynumeric.ndarray.unique": [[334, null]], "cupynumeric.ndarray.var": [[335, null]], "cupynumeric.ndarray.view": [[336, null]], "cupynumeric.ndim": [[337, null]], "cupynumeric.negative": [[338, null]], "cupynumeric.nextafter": [[339, null]], "cupynumeric.nonzero": [[340, null]], "cupynumeric.not_equal": [[341, null]], "cupynumeric.ones": [[342, null]], "cupynumeric.ones_like": [[343, null]], "cupynumeric.outer": [[344, null]], "cupynumeric.packbits": [[345, null]], "cupynumeric.partition": [[346, null]], "cupynumeric.percentile": [[347, null]], "cupynumeric.place": [[348, null]], "cupynumeric.positive": [[349, null]], "cupynumeric.power": [[350, null]], "cupynumeric.prod": [[351, null]], "cupynumeric.put": [[352, null]], "cupynumeric.put_along_axis": [[353, null]], "cupynumeric.putmask": [[354, null]], "cupynumeric.quantile": [[355, null]], "cupynumeric.rad2deg": [[356, null]], "cupynumeric.radians": [[357, null]], "cupynumeric.random.BitGenerator": [[1, null]], "cupynumeric.random.Generator": [[2, null]], "cupynumeric.random.beta": [[358, null]], "cupynumeric.random.binomial": [[359, null]], "cupynumeric.random.bytes": [[360, null]], "cupynumeric.random.chisquare": [[361, null]], "cupynumeric.random.default_rng": [[362, null]], "cupynumeric.random.exponential": [[363, null]], "cupynumeric.random.f": [[364, null]], "cupynumeric.random.gamma": [[365, null]], "cupynumeric.random.geometric": [[366, null]], "cupynumeric.random.gumbel": [[367, null]], "cupynumeric.random.hypergeometric": [[368, null]], "cupynumeric.random.laplace": [[369, null]], "cupynumeric.random.logistic": [[370, null]], "cupynumeric.random.lognormal": [[371, null]], "cupynumeric.random.logseries": [[372, null]], "cupynumeric.random.negative_binomial": [[373, null]], "cupynumeric.random.noncentral_chisquare": [[374, null]], "cupynumeric.random.noncentral_f": [[375, null]], "cupynumeric.random.normal": [[376, null]], "cupynumeric.random.pareto": [[377, null]], "cupynumeric.random.poisson": [[378, null]], "cupynumeric.random.power": [[379, null]], "cupynumeric.random.rand": [[380, null]], "cupynumeric.random.randint": [[381, null]], "cupynumeric.random.randn": [[382, null]], "cupynumeric.random.random": [[383, null]], "cupynumeric.random.random_integers": [[384, null]], "cupynumeric.random.random_sample": [[385, null]], "cupynumeric.random.ranf": [[386, null]], "cupynumeric.random.rayleigh": [[387, null]], "cupynumeric.random.sample": [[388, null]], "cupynumeric.random.seed": [[389, null]], "cupynumeric.random.standard_cauchy": [[390, null]], "cupynumeric.random.standard_exponential": [[391, null]], "cupynumeric.random.standard_gamma": [[392, null]], "cupynumeric.random.standard_t": [[393, null]], "cupynumeric.random.triangular": [[394, null]], "cupynumeric.random.uniform": [[395, null]], "cupynumeric.random.vonmises": [[396, null]], "cupynumeric.random.wald": [[397, null]], "cupynumeric.random.weibull": [[398, null]], "cupynumeric.random.zipf": [[399, null]], "cupynumeric.ravel": [[400, null]], "cupynumeric.ravel_multi_index": [[401, null]], "cupynumeric.real": [[402, null]], "cupynumeric.real_if_close": [[403, null]], "cupynumeric.reciprocal": [[404, null]], "cupynumeric.remainder": [[405, null]], "cupynumeric.repeat": [[406, null]], "cupynumeric.reshape": [[407, null]], "cupynumeric.right_shift": [[408, null]], "cupynumeric.rint": [[409, null]], "cupynumeric.roll": [[410, null]], "cupynumeric.roots": [[411, null]], "cupynumeric.rot90": [[412, null]], "cupynumeric.round": [[413, null]], "cupynumeric.row_stack": [[414, null]], "cupynumeric.searchsorted": [[415, null]], "cupynumeric.select": [[416, null]], "cupynumeric.shape": [[417, null]], "cupynumeric.sign": [[418, null]], "cupynumeric.signbit": [[419, null]], "cupynumeric.sin": [[420, null]], "cupynumeric.sinh": [[421, null]], "cupynumeric.sort": [[422, null]], "cupynumeric.sort_complex": [[423, null]], "cupynumeric.split": [[424, null]], "cupynumeric.sqrt": [[425, null]], "cupynumeric.square": [[426, null]], "cupynumeric.squeeze": [[427, null]], "cupynumeric.stack": [[428, null]], "cupynumeric.subtract": [[429, null]], "cupynumeric.sum": [[430, null]], "cupynumeric.swapaxes": [[431, null]], "cupynumeric.take": [[432, null]], "cupynumeric.take_along_axis": [[433, null]], "cupynumeric.tan": [[434, null]], "cupynumeric.tanh": [[435, null]], "cupynumeric.tensordot": [[436, null]], "cupynumeric.tile": [[437, null]], "cupynumeric.trace": [[438, null]], "cupynumeric.transpose": [[439, null]], "cupynumeric.tri": [[440, null]], "cupynumeric.tril": [[441, null]], "cupynumeric.tril_indices": [[442, null]], "cupynumeric.tril_indices_from": [[443, null]], "cupynumeric.triu": [[444, null]], "cupynumeric.triu_indices": [[445, null]], "cupynumeric.triu_indices_from": [[446, null]], "cupynumeric.true_divide": [[447, null]], "cupynumeric.trunc": [[448, null]], "cupynumeric.unique": [[449, null]], "cupynumeric.unpackbits": [[450, null]], "cupynumeric.unravel_index": [[451, null]], "cupynumeric.var": [[452, null]], "cupynumeric.vdot": [[453, null]], "cupynumeric.vsplit": [[454, null]], "cupynumeric.vstack": [[455, null]], "cupynumeric.where": [[456, null]], "cupynumeric.zeros": [[457, null]], "cupynumeric.zeros_like": [[458, null]], "doctor": [[470, "doctor"]], "doctor_filename": [[470, "doctor-filename"], [470, "id2"]], "doctor_format": [[470, "doctor-format"]], "fallback_stacktrace": [[470, "fallback-stacktrace"]], "fast_math": [[470, "fast-math"]], "force_thunk": [[470, "force-thunk"]], "matmul_cache_size": [[470, "matmul-cache-size"]], "max_eager_volume": [[470, "max-eager-volume"]], "min_cpu_chunk": [[470, "min-cpu-chunk"]], "min_gpu_chunk": [[470, "min-gpu-chunk"]], "min_omp_chunk": [[470, "min-omp-chunk"]], "numpy_compat": [[470, "numpy-compat"]], "preload_cudalibs": [[470, "preload-cudalibs"]], "report_coverage": [[470, "report-coverage"]], "report_dump_callstack": [[470, "report-dump-callstack"]], "report_dump_csv": [[470, "report-dump-csv"]], "take_default": [[470, "take-default"]], "test": [[470, "test"]], "warn": [[470, "warn"]]}, "docnames": ["_implemented", "api/_bitgenerator", "api/_generator", "api/_grouped", "api/_ndarray", "api/binary", "api/broadcast", "api/classes", "api/comparison", "api/creation", "api/datatype", "api/fft", "api/generated/cupynumeric.absolute", "api/generated/cupynumeric.add", "api/generated/cupynumeric.all", "api/generated/cupynumeric.allclose", "api/generated/cupynumeric.amax", "api/generated/cupynumeric.amin", "api/generated/cupynumeric.angle", "api/generated/cupynumeric.any", "api/generated/cupynumeric.append", "api/generated/cupynumeric.arange", "api/generated/cupynumeric.arccos", "api/generated/cupynumeric.arccosh", "api/generated/cupynumeric.arcsin", "api/generated/cupynumeric.arcsinh", "api/generated/cupynumeric.arctan", "api/generated/cupynumeric.arctan2", "api/generated/cupynumeric.arctanh", "api/generated/cupynumeric.argmax", "api/generated/cupynumeric.argmin", "api/generated/cupynumeric.argpartition", "api/generated/cupynumeric.argsort", "api/generated/cupynumeric.argwhere", "api/generated/cupynumeric.array", "api/generated/cupynumeric.array_equal", "api/generated/cupynumeric.array_split", "api/generated/cupynumeric.asarray", "api/generated/cupynumeric.atleast_1d", "api/generated/cupynumeric.atleast_2d", "api/generated/cupynumeric.atleast_3d", "api/generated/cupynumeric.average", "api/generated/cupynumeric.bartlett", "api/generated/cupynumeric.bincount", "api/generated/cupynumeric.bitwise_and", "api/generated/cupynumeric.bitwise_or", "api/generated/cupynumeric.bitwise_xor", "api/generated/cupynumeric.blackman", "api/generated/cupynumeric.block", "api/generated/cupynumeric.broadcast_arrays", "api/generated/cupynumeric.broadcast_shapes", "api/generated/cupynumeric.broadcast_to", "api/generated/cupynumeric.cbrt", "api/generated/cupynumeric.ceil", "api/generated/cupynumeric.choose", "api/generated/cupynumeric.clip", "api/generated/cupynumeric.column_stack", "api/generated/cupynumeric.compress", "api/generated/cupynumeric.concatenate", "api/generated/cupynumeric.conj", "api/generated/cupynumeric.conjugate", "api/generated/cupynumeric.convolve", "api/generated/cupynumeric.copy", "api/generated/cupynumeric.copysign", "api/generated/cupynumeric.copyto", "api/generated/cupynumeric.cos", "api/generated/cupynumeric.cosh", "api/generated/cupynumeric.count_nonzero", "api/generated/cupynumeric.cov", "api/generated/cupynumeric.cross", "api/generated/cupynumeric.cumprod", "api/generated/cupynumeric.cumsum", "api/generated/cupynumeric.deg2rad", "api/generated/cupynumeric.degrees", "api/generated/cupynumeric.delete", "api/generated/cupynumeric.diag", "api/generated/cupynumeric.diag_indices", "api/generated/cupynumeric.diag_indices_from", "api/generated/cupynumeric.diagflat", "api/generated/cupynumeric.diagonal", "api/generated/cupynumeric.diff", "api/generated/cupynumeric.digitize", "api/generated/cupynumeric.divide", "api/generated/cupynumeric.dot", "api/generated/cupynumeric.dsplit", "api/generated/cupynumeric.dstack", "api/generated/cupynumeric.einsum", "api/generated/cupynumeric.einsum_path", "api/generated/cupynumeric.empty", "api/generated/cupynumeric.empty_like", "api/generated/cupynumeric.equal", "api/generated/cupynumeric.exp", "api/generated/cupynumeric.exp2", "api/generated/cupynumeric.expand_dims", "api/generated/cupynumeric.expm1", "api/generated/cupynumeric.extract", "api/generated/cupynumeric.eye", "api/generated/cupynumeric.fabs", "api/generated/cupynumeric.fft.fft", "api/generated/cupynumeric.fft.fft2", "api/generated/cupynumeric.fft.fftn", "api/generated/cupynumeric.fft.fftshift", "api/generated/cupynumeric.fft.hfft", "api/generated/cupynumeric.fft.ifft", "api/generated/cupynumeric.fft.ifft2", "api/generated/cupynumeric.fft.ifftn", "api/generated/cupynumeric.fft.ifftshift", "api/generated/cupynumeric.fft.ihfft", "api/generated/cupynumeric.fft.irfft", "api/generated/cupynumeric.fft.irfft2", "api/generated/cupynumeric.fft.irfftn", "api/generated/cupynumeric.fft.rfft", "api/generated/cupynumeric.fft.rfft2", "api/generated/cupynumeric.fft.rfftn", "api/generated/cupynumeric.fill_diagonal", "api/generated/cupynumeric.find_common_type", "api/generated/cupynumeric.flatnonzero", "api/generated/cupynumeric.flip", "api/generated/cupynumeric.fliplr", "api/generated/cupynumeric.flipud", "api/generated/cupynumeric.float_power", "api/generated/cupynumeric.floor", "api/generated/cupynumeric.floor_divide", "api/generated/cupynumeric.fmax", "api/generated/cupynumeric.fmin", "api/generated/cupynumeric.fmod", "api/generated/cupynumeric.frexp", "api/generated/cupynumeric.full", "api/generated/cupynumeric.full_like", "api/generated/cupynumeric.gcd", "api/generated/cupynumeric.gradient", "api/generated/cupynumeric.greater", "api/generated/cupynumeric.greater_equal", "api/generated/cupynumeric.hamming", "api/generated/cupynumeric.hanning", "api/generated/cupynumeric.histogram", "api/generated/cupynumeric.histogram2d", "api/generated/cupynumeric.histogramdd", "api/generated/cupynumeric.hsplit", "api/generated/cupynumeric.hstack", "api/generated/cupynumeric.hypot", "api/generated/cupynumeric.identity", "api/generated/cupynumeric.imag", "api/generated/cupynumeric.in1d", "api/generated/cupynumeric.indices", "api/generated/cupynumeric.inner", "api/generated/cupynumeric.insert", "api/generated/cupynumeric.invert", "api/generated/cupynumeric.isclose", "api/generated/cupynumeric.iscomplex", "api/generated/cupynumeric.iscomplexobj", "api/generated/cupynumeric.isfinite", "api/generated/cupynumeric.isin", "api/generated/cupynumeric.isinf", "api/generated/cupynumeric.isnan", "api/generated/cupynumeric.isneginf", "api/generated/cupynumeric.isposinf", "api/generated/cupynumeric.isreal", "api/generated/cupynumeric.isrealobj", "api/generated/cupynumeric.isscalar", "api/generated/cupynumeric.ix_", "api/generated/cupynumeric.kaiser", "api/generated/cupynumeric.lcm", "api/generated/cupynumeric.ldexp", "api/generated/cupynumeric.left_shift", "api/generated/cupynumeric.less", "api/generated/cupynumeric.less_equal", "api/generated/cupynumeric.linalg.cholesky", "api/generated/cupynumeric.linalg.eig", "api/generated/cupynumeric.linalg.eigh", "api/generated/cupynumeric.linalg.eigvals", "api/generated/cupynumeric.linalg.eigvalsh", "api/generated/cupynumeric.linalg.expm", "api/generated/cupynumeric.linalg.matrix_power", "api/generated/cupynumeric.linalg.multi_dot", "api/generated/cupynumeric.linalg.norm", "api/generated/cupynumeric.linalg.qr", "api/generated/cupynumeric.linalg.solve", "api/generated/cupynumeric.linalg.svd", "api/generated/cupynumeric.linspace", "api/generated/cupynumeric.load", "api/generated/cupynumeric.log", "api/generated/cupynumeric.log10", "api/generated/cupynumeric.log1p", "api/generated/cupynumeric.log2", "api/generated/cupynumeric.logaddexp", "api/generated/cupynumeric.logaddexp2", "api/generated/cupynumeric.logical_and", "api/generated/cupynumeric.logical_not", "api/generated/cupynumeric.logical_or", "api/generated/cupynumeric.logical_xor", "api/generated/cupynumeric.logspace", "api/generated/cupynumeric.mask_indices", "api/generated/cupynumeric.matmul", "api/generated/cupynumeric.maximum", "api/generated/cupynumeric.mean", "api/generated/cupynumeric.median", "api/generated/cupynumeric.meshgrid", "api/generated/cupynumeric.minimum", "api/generated/cupynumeric.mod", "api/generated/cupynumeric.modf", "api/generated/cupynumeric.moveaxis", "api/generated/cupynumeric.multiply", "api/generated/cupynumeric.nan_to_num", "api/generated/cupynumeric.nanargmax", "api/generated/cupynumeric.nanargmin", "api/generated/cupynumeric.nancumprod", "api/generated/cupynumeric.nancumsum", "api/generated/cupynumeric.nanmax", "api/generated/cupynumeric.nanmean", "api/generated/cupynumeric.nanmedian", "api/generated/cupynumeric.nanmin", "api/generated/cupynumeric.nanpercentile", "api/generated/cupynumeric.nanprod", "api/generated/cupynumeric.nanquantile", "api/generated/cupynumeric.nansum", "api/generated/cupynumeric.ndarray.T", "api/generated/cupynumeric.ndarray.__abs__", "api/generated/cupynumeric.ndarray.__add__", "api/generated/cupynumeric.ndarray.__and__", "api/generated/cupynumeric.ndarray.__array__", "api/generated/cupynumeric.ndarray.__bool__", "api/generated/cupynumeric.ndarray.__complex__", "api/generated/cupynumeric.ndarray.__contains__", "api/generated/cupynumeric.ndarray.__copy__", "api/generated/cupynumeric.ndarray.__deepcopy__", "api/generated/cupynumeric.ndarray.__divmod__", "api/generated/cupynumeric.ndarray.__eq__", "api/generated/cupynumeric.ndarray.__float__", "api/generated/cupynumeric.ndarray.__floordiv__", "api/generated/cupynumeric.ndarray.__ge__", "api/generated/cupynumeric.ndarray.__getitem__", "api/generated/cupynumeric.ndarray.__gt__", "api/generated/cupynumeric.ndarray.__iadd__", "api/generated/cupynumeric.ndarray.__iand__", "api/generated/cupynumeric.ndarray.__ifloordiv__", "api/generated/cupynumeric.ndarray.__ilshift__", "api/generated/cupynumeric.ndarray.__imatmul__", "api/generated/cupynumeric.ndarray.__imod__", "api/generated/cupynumeric.ndarray.__imul__", "api/generated/cupynumeric.ndarray.__index__", "api/generated/cupynumeric.ndarray.__int__", "api/generated/cupynumeric.ndarray.__invert__", "api/generated/cupynumeric.ndarray.__ior__", "api/generated/cupynumeric.ndarray.__ipow__", "api/generated/cupynumeric.ndarray.__irshift__", "api/generated/cupynumeric.ndarray.__isub__", "api/generated/cupynumeric.ndarray.__itruediv__", "api/generated/cupynumeric.ndarray.__ixor__", "api/generated/cupynumeric.ndarray.__le__", "api/generated/cupynumeric.ndarray.__len__", "api/generated/cupynumeric.ndarray.__lshift__", "api/generated/cupynumeric.ndarray.__lt__", "api/generated/cupynumeric.ndarray.__matmul__", "api/generated/cupynumeric.ndarray.__mod__", "api/generated/cupynumeric.ndarray.__mul__", "api/generated/cupynumeric.ndarray.__ne__", "api/generated/cupynumeric.ndarray.__neg__", "api/generated/cupynumeric.ndarray.__new__", "api/generated/cupynumeric.ndarray.__or__", "api/generated/cupynumeric.ndarray.__pos__", "api/generated/cupynumeric.ndarray.__pow__", "api/generated/cupynumeric.ndarray.__reduce__", "api/generated/cupynumeric.ndarray.__repr__", "api/generated/cupynumeric.ndarray.__rmatmul__", "api/generated/cupynumeric.ndarray.__rshift__", "api/generated/cupynumeric.ndarray.__setitem__", "api/generated/cupynumeric.ndarray.__setstate__", "api/generated/cupynumeric.ndarray.__str__", "api/generated/cupynumeric.ndarray.__sub__", "api/generated/cupynumeric.ndarray.__truediv__", "api/generated/cupynumeric.ndarray.__xor__", "api/generated/cupynumeric.ndarray.all", "api/generated/cupynumeric.ndarray.any", "api/generated/cupynumeric.ndarray.argmax", "api/generated/cupynumeric.ndarray.argmin", "api/generated/cupynumeric.ndarray.argpartition", "api/generated/cupynumeric.ndarray.argsort", "api/generated/cupynumeric.ndarray.astype", "api/generated/cupynumeric.ndarray.base", "api/generated/cupynumeric.ndarray.choose", "api/generated/cupynumeric.ndarray.clip", "api/generated/cupynumeric.ndarray.compress", "api/generated/cupynumeric.ndarray.conj", "api/generated/cupynumeric.ndarray.conjugate", "api/generated/cupynumeric.ndarray.copy", "api/generated/cupynumeric.ndarray.ctypes", "api/generated/cupynumeric.ndarray.cumprod", "api/generated/cupynumeric.ndarray.cumsum", "api/generated/cupynumeric.ndarray.data", "api/generated/cupynumeric.ndarray.diagonal", "api/generated/cupynumeric.ndarray.dot", "api/generated/cupynumeric.ndarray.dtype", "api/generated/cupynumeric.ndarray.dump", "api/generated/cupynumeric.ndarray.dumps", "api/generated/cupynumeric.ndarray.fill", "api/generated/cupynumeric.ndarray.flags", "api/generated/cupynumeric.ndarray.flat", "api/generated/cupynumeric.ndarray.flatten", "api/generated/cupynumeric.ndarray.flip", "api/generated/cupynumeric.ndarray.getfield", "api/generated/cupynumeric.ndarray.imag", "api/generated/cupynumeric.ndarray.item", "api/generated/cupynumeric.ndarray.itemset", "api/generated/cupynumeric.ndarray.itemsize", "api/generated/cupynumeric.ndarray.max", "api/generated/cupynumeric.ndarray.mean", "api/generated/cupynumeric.ndarray.min", "api/generated/cupynumeric.ndarray.nbytes", "api/generated/cupynumeric.ndarray.ndim", "api/generated/cupynumeric.ndarray.nonzero", "api/generated/cupynumeric.ndarray.partition", "api/generated/cupynumeric.ndarray.prod", "api/generated/cupynumeric.ndarray.put", "api/generated/cupynumeric.ndarray.ravel", "api/generated/cupynumeric.ndarray.real", "api/generated/cupynumeric.ndarray.reshape", "api/generated/cupynumeric.ndarray.searchsorted", "api/generated/cupynumeric.ndarray.setfield", "api/generated/cupynumeric.ndarray.setflags", "api/generated/cupynumeric.ndarray.shape", "api/generated/cupynumeric.ndarray.size", "api/generated/cupynumeric.ndarray.sort", "api/generated/cupynumeric.ndarray.squeeze", "api/generated/cupynumeric.ndarray.strides", "api/generated/cupynumeric.ndarray.sum", "api/generated/cupynumeric.ndarray.swapaxes", "api/generated/cupynumeric.ndarray.take", "api/generated/cupynumeric.ndarray.tobytes", "api/generated/cupynumeric.ndarray.tofile", "api/generated/cupynumeric.ndarray.tolist", "api/generated/cupynumeric.ndarray.tostring", "api/generated/cupynumeric.ndarray.trace", "api/generated/cupynumeric.ndarray.transpose", "api/generated/cupynumeric.ndarray.unique", "api/generated/cupynumeric.ndarray.var", "api/generated/cupynumeric.ndarray.view", "api/generated/cupynumeric.ndim", "api/generated/cupynumeric.negative", "api/generated/cupynumeric.nextafter", "api/generated/cupynumeric.nonzero", "api/generated/cupynumeric.not_equal", "api/generated/cupynumeric.ones", "api/generated/cupynumeric.ones_like", "api/generated/cupynumeric.outer", "api/generated/cupynumeric.packbits", "api/generated/cupynumeric.partition", "api/generated/cupynumeric.percentile", "api/generated/cupynumeric.place", "api/generated/cupynumeric.positive", "api/generated/cupynumeric.power", "api/generated/cupynumeric.prod", "api/generated/cupynumeric.put", "api/generated/cupynumeric.put_along_axis", "api/generated/cupynumeric.putmask", "api/generated/cupynumeric.quantile", "api/generated/cupynumeric.rad2deg", "api/generated/cupynumeric.radians", "api/generated/cupynumeric.random.beta", "api/generated/cupynumeric.random.binomial", "api/generated/cupynumeric.random.bytes", "api/generated/cupynumeric.random.chisquare", "api/generated/cupynumeric.random.default_rng", "api/generated/cupynumeric.random.exponential", "api/generated/cupynumeric.random.f", "api/generated/cupynumeric.random.gamma", "api/generated/cupynumeric.random.geometric", "api/generated/cupynumeric.random.gumbel", "api/generated/cupynumeric.random.hypergeometric", "api/generated/cupynumeric.random.laplace", "api/generated/cupynumeric.random.logistic", "api/generated/cupynumeric.random.lognormal", "api/generated/cupynumeric.random.logseries", "api/generated/cupynumeric.random.negative_binomial", "api/generated/cupynumeric.random.noncentral_chisquare", "api/generated/cupynumeric.random.noncentral_f", "api/generated/cupynumeric.random.normal", "api/generated/cupynumeric.random.pareto", "api/generated/cupynumeric.random.poisson", "api/generated/cupynumeric.random.power", "api/generated/cupynumeric.random.rand", "api/generated/cupynumeric.random.randint", "api/generated/cupynumeric.random.randn", "api/generated/cupynumeric.random.random", "api/generated/cupynumeric.random.random_integers", "api/generated/cupynumeric.random.random_sample", "api/generated/cupynumeric.random.ranf", "api/generated/cupynumeric.random.rayleigh", "api/generated/cupynumeric.random.sample", "api/generated/cupynumeric.random.seed", "api/generated/cupynumeric.random.standard_cauchy", "api/generated/cupynumeric.random.standard_exponential", "api/generated/cupynumeric.random.standard_gamma", "api/generated/cupynumeric.random.standard_t", "api/generated/cupynumeric.random.triangular", "api/generated/cupynumeric.random.uniform", "api/generated/cupynumeric.random.vonmises", "api/generated/cupynumeric.random.wald", "api/generated/cupynumeric.random.weibull", "api/generated/cupynumeric.random.zipf", "api/generated/cupynumeric.ravel", "api/generated/cupynumeric.ravel_multi_index", "api/generated/cupynumeric.real", "api/generated/cupynumeric.real_if_close", "api/generated/cupynumeric.reciprocal", "api/generated/cupynumeric.remainder", "api/generated/cupynumeric.repeat", "api/generated/cupynumeric.reshape", "api/generated/cupynumeric.right_shift", "api/generated/cupynumeric.rint", "api/generated/cupynumeric.roll", "api/generated/cupynumeric.roots", "api/generated/cupynumeric.rot90", "api/generated/cupynumeric.round", "api/generated/cupynumeric.row_stack", "api/generated/cupynumeric.searchsorted", "api/generated/cupynumeric.select", "api/generated/cupynumeric.shape", "api/generated/cupynumeric.sign", "api/generated/cupynumeric.signbit", "api/generated/cupynumeric.sin", "api/generated/cupynumeric.sinh", "api/generated/cupynumeric.sort", "api/generated/cupynumeric.sort_complex", "api/generated/cupynumeric.split", "api/generated/cupynumeric.sqrt", "api/generated/cupynumeric.square", "api/generated/cupynumeric.squeeze", "api/generated/cupynumeric.stack", "api/generated/cupynumeric.subtract", "api/generated/cupynumeric.sum", "api/generated/cupynumeric.swapaxes", "api/generated/cupynumeric.take", "api/generated/cupynumeric.take_along_axis", "api/generated/cupynumeric.tan", "api/generated/cupynumeric.tanh", "api/generated/cupynumeric.tensordot", "api/generated/cupynumeric.tile", "api/generated/cupynumeric.trace", "api/generated/cupynumeric.transpose", "api/generated/cupynumeric.tri", "api/generated/cupynumeric.tril", "api/generated/cupynumeric.tril_indices", "api/generated/cupynumeric.tril_indices_from", "api/generated/cupynumeric.triu", "api/generated/cupynumeric.triu_indices", "api/generated/cupynumeric.triu_indices_from", "api/generated/cupynumeric.true_divide", "api/generated/cupynumeric.trunc", "api/generated/cupynumeric.unique", "api/generated/cupynumeric.unpackbits", "api/generated/cupynumeric.unravel_index", "api/generated/cupynumeric.var", "api/generated/cupynumeric.vdot", "api/generated/cupynumeric.vsplit", "api/generated/cupynumeric.vstack", "api/generated/cupynumeric.where", "api/generated/cupynumeric.zeros", "api/generated/cupynumeric.zeros_like", "api/index", "api/indexing", "api/io", "api/linalg", "api/logic", "api/manipulation", "api/math", "api/ndarray", "api/random", "api/routines", "api/set", "api/settings", "api/sorting", "api/statistics", "api/window", "changes/2510", "changes/2511", "changes/dev", "changes/index", "developer/CONTRIBUTING", "developer/building", "developer/index", "developer/testing", "examples/black_scholes", "examples/cholesky", "examples/compact_finite_difference", "examples/edge_detection", "examples/index", "examples/kmeans", "examples/newton_raphson_2d", "examples/stencil", "examples/torchswe", "faqs", "index", "installation", "oss-licenses", "user/advanced", "user/differences", "user/howtos/benchmarking", "user/howtos/index", "user/howtos/measuring", "user/howtos/patching", "user/index", "user/practices", "user/task", "user/tutorial", "user/usage"], "envversion": {"nbsphinx": 4, "sphinx": 64, "sphinx.domains.c": 3, "sphinx.domains.changeset": 1, "sphinx.domains.citation": 1, "sphinx.domains.cpp": 9, "sphinx.domains.index": 1, "sphinx.domains.javascript": 3, "sphinx.domains.math": 2, "sphinx.domains.python": 4, "sphinx.domains.rst": 2, "sphinx.domains.std": 2, "sphinx.ext.intersphinx": 1}, "filenames": ["_implemented.rst", "api/_bitgenerator.rst", "api/_generator.rst", "api/_grouped.rst", "api/_ndarray.rst", "api/binary.rst", "api/broadcast.rst", "api/classes.rst", "api/comparison.rst", "api/creation.rst", "api/datatype.rst", "api/fft.rst", "api/generated/cupynumeric.absolute.rst", "api/generated/cupynumeric.add.rst", "api/generated/cupynumeric.all.rst", "api/generated/cupynumeric.allclose.rst", "api/generated/cupynumeric.amax.rst", "api/generated/cupynumeric.amin.rst", "api/generated/cupynumeric.angle.rst", "api/generated/cupynumeric.any.rst", "api/generated/cupynumeric.append.rst", "api/generated/cupynumeric.arange.rst", "api/generated/cupynumeric.arccos.rst", "api/generated/cupynumeric.arccosh.rst", "api/generated/cupynumeric.arcsin.rst", "api/generated/cupynumeric.arcsinh.rst", "api/generated/cupynumeric.arctan.rst", "api/generated/cupynumeric.arctan2.rst", "api/generated/cupynumeric.arctanh.rst", "api/generated/cupynumeric.argmax.rst", "api/generated/cupynumeric.argmin.rst", "api/generated/cupynumeric.argpartition.rst", "api/generated/cupynumeric.argsort.rst", "api/generated/cupynumeric.argwhere.rst", "api/generated/cupynumeric.array.rst", "api/generated/cupynumeric.array_equal.rst", "api/generated/cupynumeric.array_split.rst", "api/generated/cupynumeric.asarray.rst", "api/generated/cupynumeric.atleast_1d.rst", "api/generated/cupynumeric.atleast_2d.rst", "api/generated/cupynumeric.atleast_3d.rst", "api/generated/cupynumeric.average.rst", "api/generated/cupynumeric.bartlett.rst", "api/generated/cupynumeric.bincount.rst", "api/generated/cupynumeric.bitwise_and.rst", "api/generated/cupynumeric.bitwise_or.rst", "api/generated/cupynumeric.bitwise_xor.rst", "api/generated/cupynumeric.blackman.rst", "api/generated/cupynumeric.block.rst", "api/generated/cupynumeric.broadcast_arrays.rst", "api/generated/cupynumeric.broadcast_shapes.rst", "api/generated/cupynumeric.broadcast_to.rst", "api/generated/cupynumeric.cbrt.rst", "api/generated/cupynumeric.ceil.rst", "api/generated/cupynumeric.choose.rst", "api/generated/cupynumeric.clip.rst", "api/generated/cupynumeric.column_stack.rst", "api/generated/cupynumeric.compress.rst", "api/generated/cupynumeric.concatenate.rst", "api/generated/cupynumeric.conj.rst", "api/generated/cupynumeric.conjugate.rst", "api/generated/cupynumeric.convolve.rst", "api/generated/cupynumeric.copy.rst", "api/generated/cupynumeric.copysign.rst", "api/generated/cupynumeric.copyto.rst", "api/generated/cupynumeric.cos.rst", "api/generated/cupynumeric.cosh.rst", "api/generated/cupynumeric.count_nonzero.rst", "api/generated/cupynumeric.cov.rst", "api/generated/cupynumeric.cross.rst", "api/generated/cupynumeric.cumprod.rst", "api/generated/cupynumeric.cumsum.rst", "api/generated/cupynumeric.deg2rad.rst", "api/generated/cupynumeric.degrees.rst", "api/generated/cupynumeric.delete.rst", "api/generated/cupynumeric.diag.rst", "api/generated/cupynumeric.diag_indices.rst", "api/generated/cupynumeric.diag_indices_from.rst", "api/generated/cupynumeric.diagflat.rst", "api/generated/cupynumeric.diagonal.rst", "api/generated/cupynumeric.diff.rst", "api/generated/cupynumeric.digitize.rst", "api/generated/cupynumeric.divide.rst", "api/generated/cupynumeric.dot.rst", "api/generated/cupynumeric.dsplit.rst", "api/generated/cupynumeric.dstack.rst", "api/generated/cupynumeric.einsum.rst", "api/generated/cupynumeric.einsum_path.rst", "api/generated/cupynumeric.empty.rst", "api/generated/cupynumeric.empty_like.rst", "api/generated/cupynumeric.equal.rst", "api/generated/cupynumeric.exp.rst", "api/generated/cupynumeric.exp2.rst", "api/generated/cupynumeric.expand_dims.rst", "api/generated/cupynumeric.expm1.rst", "api/generated/cupynumeric.extract.rst", "api/generated/cupynumeric.eye.rst", "api/generated/cupynumeric.fabs.rst", "api/generated/cupynumeric.fft.fft.rst", "api/generated/cupynumeric.fft.fft2.rst", "api/generated/cupynumeric.fft.fftn.rst", "api/generated/cupynumeric.fft.fftshift.rst", "api/generated/cupynumeric.fft.hfft.rst", "api/generated/cupynumeric.fft.ifft.rst", "api/generated/cupynumeric.fft.ifft2.rst", "api/generated/cupynumeric.fft.ifftn.rst", "api/generated/cupynumeric.fft.ifftshift.rst", "api/generated/cupynumeric.fft.ihfft.rst", "api/generated/cupynumeric.fft.irfft.rst", "api/generated/cupynumeric.fft.irfft2.rst", "api/generated/cupynumeric.fft.irfftn.rst", "api/generated/cupynumeric.fft.rfft.rst", "api/generated/cupynumeric.fft.rfft2.rst", "api/generated/cupynumeric.fft.rfftn.rst", "api/generated/cupynumeric.fill_diagonal.rst", "api/generated/cupynumeric.find_common_type.rst", "api/generated/cupynumeric.flatnonzero.rst", "api/generated/cupynumeric.flip.rst", "api/generated/cupynumeric.fliplr.rst", "api/generated/cupynumeric.flipud.rst", "api/generated/cupynumeric.float_power.rst", "api/generated/cupynumeric.floor.rst", "api/generated/cupynumeric.floor_divide.rst", "api/generated/cupynumeric.fmax.rst", "api/generated/cupynumeric.fmin.rst", "api/generated/cupynumeric.fmod.rst", "api/generated/cupynumeric.frexp.rst", "api/generated/cupynumeric.full.rst", "api/generated/cupynumeric.full_like.rst", "api/generated/cupynumeric.gcd.rst", "api/generated/cupynumeric.gradient.rst", "api/generated/cupynumeric.greater.rst", "api/generated/cupynumeric.greater_equal.rst", "api/generated/cupynumeric.hamming.rst", "api/generated/cupynumeric.hanning.rst", "api/generated/cupynumeric.histogram.rst", "api/generated/cupynumeric.histogram2d.rst", "api/generated/cupynumeric.histogramdd.rst", "api/generated/cupynumeric.hsplit.rst", "api/generated/cupynumeric.hstack.rst", "api/generated/cupynumeric.hypot.rst", "api/generated/cupynumeric.identity.rst", "api/generated/cupynumeric.imag.rst", "api/generated/cupynumeric.in1d.rst", "api/generated/cupynumeric.indices.rst", "api/generated/cupynumeric.inner.rst", "api/generated/cupynumeric.insert.rst", "api/generated/cupynumeric.invert.rst", "api/generated/cupynumeric.isclose.rst", "api/generated/cupynumeric.iscomplex.rst", "api/generated/cupynumeric.iscomplexobj.rst", "api/generated/cupynumeric.isfinite.rst", "api/generated/cupynumeric.isin.rst", "api/generated/cupynumeric.isinf.rst", "api/generated/cupynumeric.isnan.rst", "api/generated/cupynumeric.isneginf.rst", "api/generated/cupynumeric.isposinf.rst", "api/generated/cupynumeric.isreal.rst", "api/generated/cupynumeric.isrealobj.rst", "api/generated/cupynumeric.isscalar.rst", "api/generated/cupynumeric.ix_.rst", "api/generated/cupynumeric.kaiser.rst", "api/generated/cupynumeric.lcm.rst", "api/generated/cupynumeric.ldexp.rst", "api/generated/cupynumeric.left_shift.rst", "api/generated/cupynumeric.less.rst", "api/generated/cupynumeric.less_equal.rst", "api/generated/cupynumeric.linalg.cholesky.rst", "api/generated/cupynumeric.linalg.eig.rst", "api/generated/cupynumeric.linalg.eigh.rst", "api/generated/cupynumeric.linalg.eigvals.rst", "api/generated/cupynumeric.linalg.eigvalsh.rst", "api/generated/cupynumeric.linalg.expm.rst", "api/generated/cupynumeric.linalg.matrix_power.rst", "api/generated/cupynumeric.linalg.multi_dot.rst", "api/generated/cupynumeric.linalg.norm.rst", "api/generated/cupynumeric.linalg.qr.rst", "api/generated/cupynumeric.linalg.solve.rst", "api/generated/cupynumeric.linalg.svd.rst", "api/generated/cupynumeric.linspace.rst", "api/generated/cupynumeric.load.rst", "api/generated/cupynumeric.log.rst", "api/generated/cupynumeric.log10.rst", "api/generated/cupynumeric.log1p.rst", "api/generated/cupynumeric.log2.rst", "api/generated/cupynumeric.logaddexp.rst", "api/generated/cupynumeric.logaddexp2.rst", "api/generated/cupynumeric.logical_and.rst", "api/generated/cupynumeric.logical_not.rst", "api/generated/cupynumeric.logical_or.rst", "api/generated/cupynumeric.logical_xor.rst", "api/generated/cupynumeric.logspace.rst", "api/generated/cupynumeric.mask_indices.rst", "api/generated/cupynumeric.matmul.rst", "api/generated/cupynumeric.maximum.rst", "api/generated/cupynumeric.mean.rst", "api/generated/cupynumeric.median.rst", "api/generated/cupynumeric.meshgrid.rst", "api/generated/cupynumeric.minimum.rst", "api/generated/cupynumeric.mod.rst", "api/generated/cupynumeric.modf.rst", "api/generated/cupynumeric.moveaxis.rst", "api/generated/cupynumeric.multiply.rst", "api/generated/cupynumeric.nan_to_num.rst", "api/generated/cupynumeric.nanargmax.rst", "api/generated/cupynumeric.nanargmin.rst", "api/generated/cupynumeric.nancumprod.rst", "api/generated/cupynumeric.nancumsum.rst", "api/generated/cupynumeric.nanmax.rst", "api/generated/cupynumeric.nanmean.rst", "api/generated/cupynumeric.nanmedian.rst", "api/generated/cupynumeric.nanmin.rst", "api/generated/cupynumeric.nanpercentile.rst", "api/generated/cupynumeric.nanprod.rst", "api/generated/cupynumeric.nanquantile.rst", "api/generated/cupynumeric.nansum.rst", "api/generated/cupynumeric.ndarray.T.rst", "api/generated/cupynumeric.ndarray.__abs__.rst", "api/generated/cupynumeric.ndarray.__add__.rst", "api/generated/cupynumeric.ndarray.__and__.rst", "api/generated/cupynumeric.ndarray.__array__.rst", "api/generated/cupynumeric.ndarray.__bool__.rst", "api/generated/cupynumeric.ndarray.__complex__.rst", "api/generated/cupynumeric.ndarray.__contains__.rst", "api/generated/cupynumeric.ndarray.__copy__.rst", "api/generated/cupynumeric.ndarray.__deepcopy__.rst", "api/generated/cupynumeric.ndarray.__divmod__.rst", "api/generated/cupynumeric.ndarray.__eq__.rst", "api/generated/cupynumeric.ndarray.__float__.rst", "api/generated/cupynumeric.ndarray.__floordiv__.rst", "api/generated/cupynumeric.ndarray.__ge__.rst", "api/generated/cupynumeric.ndarray.__getitem__.rst", "api/generated/cupynumeric.ndarray.__gt__.rst", "api/generated/cupynumeric.ndarray.__iadd__.rst", "api/generated/cupynumeric.ndarray.__iand__.rst", "api/generated/cupynumeric.ndarray.__ifloordiv__.rst", "api/generated/cupynumeric.ndarray.__ilshift__.rst", "api/generated/cupynumeric.ndarray.__imatmul__.rst", "api/generated/cupynumeric.ndarray.__imod__.rst", "api/generated/cupynumeric.ndarray.__imul__.rst", "api/generated/cupynumeric.ndarray.__index__.rst", "api/generated/cupynumeric.ndarray.__int__.rst", "api/generated/cupynumeric.ndarray.__invert__.rst", "api/generated/cupynumeric.ndarray.__ior__.rst", "api/generated/cupynumeric.ndarray.__ipow__.rst", "api/generated/cupynumeric.ndarray.__irshift__.rst", "api/generated/cupynumeric.ndarray.__isub__.rst", "api/generated/cupynumeric.ndarray.__itruediv__.rst", "api/generated/cupynumeric.ndarray.__ixor__.rst", "api/generated/cupynumeric.ndarray.__le__.rst", "api/generated/cupynumeric.ndarray.__len__.rst", "api/generated/cupynumeric.ndarray.__lshift__.rst", "api/generated/cupynumeric.ndarray.__lt__.rst", "api/generated/cupynumeric.ndarray.__matmul__.rst", "api/generated/cupynumeric.ndarray.__mod__.rst", "api/generated/cupynumeric.ndarray.__mul__.rst", "api/generated/cupynumeric.ndarray.__ne__.rst", "api/generated/cupynumeric.ndarray.__neg__.rst", "api/generated/cupynumeric.ndarray.__new__.rst", "api/generated/cupynumeric.ndarray.__or__.rst", "api/generated/cupynumeric.ndarray.__pos__.rst", "api/generated/cupynumeric.ndarray.__pow__.rst", "api/generated/cupynumeric.ndarray.__reduce__.rst", "api/generated/cupynumeric.ndarray.__repr__.rst", "api/generated/cupynumeric.ndarray.__rmatmul__.rst", "api/generated/cupynumeric.ndarray.__rshift__.rst", "api/generated/cupynumeric.ndarray.__setitem__.rst", "api/generated/cupynumeric.ndarray.__setstate__.rst", "api/generated/cupynumeric.ndarray.__str__.rst", "api/generated/cupynumeric.ndarray.__sub__.rst", "api/generated/cupynumeric.ndarray.__truediv__.rst", "api/generated/cupynumeric.ndarray.__xor__.rst", "api/generated/cupynumeric.ndarray.all.rst", "api/generated/cupynumeric.ndarray.any.rst", "api/generated/cupynumeric.ndarray.argmax.rst", "api/generated/cupynumeric.ndarray.argmin.rst", "api/generated/cupynumeric.ndarray.argpartition.rst", "api/generated/cupynumeric.ndarray.argsort.rst", "api/generated/cupynumeric.ndarray.astype.rst", "api/generated/cupynumeric.ndarray.base.rst", "api/generated/cupynumeric.ndarray.choose.rst", "api/generated/cupynumeric.ndarray.clip.rst", "api/generated/cupynumeric.ndarray.compress.rst", "api/generated/cupynumeric.ndarray.conj.rst", "api/generated/cupynumeric.ndarray.conjugate.rst", "api/generated/cupynumeric.ndarray.copy.rst", "api/generated/cupynumeric.ndarray.ctypes.rst", "api/generated/cupynumeric.ndarray.cumprod.rst", "api/generated/cupynumeric.ndarray.cumsum.rst", "api/generated/cupynumeric.ndarray.data.rst", "api/generated/cupynumeric.ndarray.diagonal.rst", "api/generated/cupynumeric.ndarray.dot.rst", "api/generated/cupynumeric.ndarray.dtype.rst", "api/generated/cupynumeric.ndarray.dump.rst", "api/generated/cupynumeric.ndarray.dumps.rst", "api/generated/cupynumeric.ndarray.fill.rst", "api/generated/cupynumeric.ndarray.flags.rst", "api/generated/cupynumeric.ndarray.flat.rst", "api/generated/cupynumeric.ndarray.flatten.rst", "api/generated/cupynumeric.ndarray.flip.rst", "api/generated/cupynumeric.ndarray.getfield.rst", "api/generated/cupynumeric.ndarray.imag.rst", "api/generated/cupynumeric.ndarray.item.rst", "api/generated/cupynumeric.ndarray.itemset.rst", "api/generated/cupynumeric.ndarray.itemsize.rst", "api/generated/cupynumeric.ndarray.max.rst", "api/generated/cupynumeric.ndarray.mean.rst", "api/generated/cupynumeric.ndarray.min.rst", "api/generated/cupynumeric.ndarray.nbytes.rst", "api/generated/cupynumeric.ndarray.ndim.rst", "api/generated/cupynumeric.ndarray.nonzero.rst", "api/generated/cupynumeric.ndarray.partition.rst", "api/generated/cupynumeric.ndarray.prod.rst", "api/generated/cupynumeric.ndarray.put.rst", "api/generated/cupynumeric.ndarray.ravel.rst", "api/generated/cupynumeric.ndarray.real.rst", "api/generated/cupynumeric.ndarray.reshape.rst", "api/generated/cupynumeric.ndarray.searchsorted.rst", "api/generated/cupynumeric.ndarray.setfield.rst", "api/generated/cupynumeric.ndarray.setflags.rst", "api/generated/cupynumeric.ndarray.shape.rst", "api/generated/cupynumeric.ndarray.size.rst", "api/generated/cupynumeric.ndarray.sort.rst", "api/generated/cupynumeric.ndarray.squeeze.rst", "api/generated/cupynumeric.ndarray.strides.rst", "api/generated/cupynumeric.ndarray.sum.rst", "api/generated/cupynumeric.ndarray.swapaxes.rst", "api/generated/cupynumeric.ndarray.take.rst", "api/generated/cupynumeric.ndarray.tobytes.rst", "api/generated/cupynumeric.ndarray.tofile.rst", "api/generated/cupynumeric.ndarray.tolist.rst", "api/generated/cupynumeric.ndarray.tostring.rst", "api/generated/cupynumeric.ndarray.trace.rst", "api/generated/cupynumeric.ndarray.transpose.rst", "api/generated/cupynumeric.ndarray.unique.rst", "api/generated/cupynumeric.ndarray.var.rst", "api/generated/cupynumeric.ndarray.view.rst", "api/generated/cupynumeric.ndim.rst", "api/generated/cupynumeric.negative.rst", "api/generated/cupynumeric.nextafter.rst", "api/generated/cupynumeric.nonzero.rst", "api/generated/cupynumeric.not_equal.rst", "api/generated/cupynumeric.ones.rst", "api/generated/cupynumeric.ones_like.rst", "api/generated/cupynumeric.outer.rst", "api/generated/cupynumeric.packbits.rst", "api/generated/cupynumeric.partition.rst", "api/generated/cupynumeric.percentile.rst", "api/generated/cupynumeric.place.rst", "api/generated/cupynumeric.positive.rst", "api/generated/cupynumeric.power.rst", "api/generated/cupynumeric.prod.rst", "api/generated/cupynumeric.put.rst", "api/generated/cupynumeric.put_along_axis.rst", "api/generated/cupynumeric.putmask.rst", "api/generated/cupynumeric.quantile.rst", "api/generated/cupynumeric.rad2deg.rst", "api/generated/cupynumeric.radians.rst", "api/generated/cupynumeric.random.beta.rst", "api/generated/cupynumeric.random.binomial.rst", "api/generated/cupynumeric.random.bytes.rst", "api/generated/cupynumeric.random.chisquare.rst", "api/generated/cupynumeric.random.default_rng.rst", "api/generated/cupynumeric.random.exponential.rst", "api/generated/cupynumeric.random.f.rst", "api/generated/cupynumeric.random.gamma.rst", "api/generated/cupynumeric.random.geometric.rst", "api/generated/cupynumeric.random.gumbel.rst", "api/generated/cupynumeric.random.hypergeometric.rst", "api/generated/cupynumeric.random.laplace.rst", "api/generated/cupynumeric.random.logistic.rst", "api/generated/cupynumeric.random.lognormal.rst", "api/generated/cupynumeric.random.logseries.rst", "api/generated/cupynumeric.random.negative_binomial.rst", "api/generated/cupynumeric.random.noncentral_chisquare.rst", "api/generated/cupynumeric.random.noncentral_f.rst", "api/generated/cupynumeric.random.normal.rst", "api/generated/cupynumeric.random.pareto.rst", "api/generated/cupynumeric.random.poisson.rst", "api/generated/cupynumeric.random.power.rst", "api/generated/cupynumeric.random.rand.rst", "api/generated/cupynumeric.random.randint.rst", "api/generated/cupynumeric.random.randn.rst", "api/generated/cupynumeric.random.random.rst", "api/generated/cupynumeric.random.random_integers.rst", "api/generated/cupynumeric.random.random_sample.rst", "api/generated/cupynumeric.random.ranf.rst", "api/generated/cupynumeric.random.rayleigh.rst", "api/generated/cupynumeric.random.sample.rst", "api/generated/cupynumeric.random.seed.rst", "api/generated/cupynumeric.random.standard_cauchy.rst", "api/generated/cupynumeric.random.standard_exponential.rst", "api/generated/cupynumeric.random.standard_gamma.rst", "api/generated/cupynumeric.random.standard_t.rst", "api/generated/cupynumeric.random.triangular.rst", "api/generated/cupynumeric.random.uniform.rst", "api/generated/cupynumeric.random.vonmises.rst", "api/generated/cupynumeric.random.wald.rst", "api/generated/cupynumeric.random.weibull.rst", "api/generated/cupynumeric.random.zipf.rst", "api/generated/cupynumeric.ravel.rst", "api/generated/cupynumeric.ravel_multi_index.rst", "api/generated/cupynumeric.real.rst", "api/generated/cupynumeric.real_if_close.rst", "api/generated/cupynumeric.reciprocal.rst", "api/generated/cupynumeric.remainder.rst", "api/generated/cupynumeric.repeat.rst", "api/generated/cupynumeric.reshape.rst", "api/generated/cupynumeric.right_shift.rst", "api/generated/cupynumeric.rint.rst", "api/generated/cupynumeric.roll.rst", "api/generated/cupynumeric.roots.rst", "api/generated/cupynumeric.rot90.rst", "api/generated/cupynumeric.round.rst", "api/generated/cupynumeric.row_stack.rst", "api/generated/cupynumeric.searchsorted.rst", "api/generated/cupynumeric.select.rst", "api/generated/cupynumeric.shape.rst", "api/generated/cupynumeric.sign.rst", "api/generated/cupynumeric.signbit.rst", "api/generated/cupynumeric.sin.rst", "api/generated/cupynumeric.sinh.rst", "api/generated/cupynumeric.sort.rst", "api/generated/cupynumeric.sort_complex.rst", "api/generated/cupynumeric.split.rst", "api/generated/cupynumeric.sqrt.rst", "api/generated/cupynumeric.square.rst", "api/generated/cupynumeric.squeeze.rst", "api/generated/cupynumeric.stack.rst", "api/generated/cupynumeric.subtract.rst", "api/generated/cupynumeric.sum.rst", "api/generated/cupynumeric.swapaxes.rst", "api/generated/cupynumeric.take.rst", "api/generated/cupynumeric.take_along_axis.rst", "api/generated/cupynumeric.tan.rst", "api/generated/cupynumeric.tanh.rst", "api/generated/cupynumeric.tensordot.rst", "api/generated/cupynumeric.tile.rst", "api/generated/cupynumeric.trace.rst", "api/generated/cupynumeric.transpose.rst", "api/generated/cupynumeric.tri.rst", "api/generated/cupynumeric.tril.rst", "api/generated/cupynumeric.tril_indices.rst", "api/generated/cupynumeric.tril_indices_from.rst", "api/generated/cupynumeric.triu.rst", "api/generated/cupynumeric.triu_indices.rst", "api/generated/cupynumeric.triu_indices_from.rst", "api/generated/cupynumeric.true_divide.rst", "api/generated/cupynumeric.trunc.rst", "api/generated/cupynumeric.unique.rst", "api/generated/cupynumeric.unpackbits.rst", "api/generated/cupynumeric.unravel_index.rst", "api/generated/cupynumeric.var.rst", "api/generated/cupynumeric.vdot.rst", "api/generated/cupynumeric.vsplit.rst", "api/generated/cupynumeric.vstack.rst", "api/generated/cupynumeric.where.rst", "api/generated/cupynumeric.zeros.rst", "api/generated/cupynumeric.zeros_like.rst", "api/index.rst", "api/indexing.rst", "api/io.rst", "api/linalg.rst", "api/logic.rst", "api/manipulation.rst", "api/math.rst", "api/ndarray.rst", "api/random.rst", "api/routines.rst", "api/set.rst", "api/settings.rst", "api/sorting.rst", "api/statistics.rst", "api/window.rst", "changes/2510.rst", "changes/2511.rst", "changes/dev.rst", "changes/index.rst", "developer/CONTRIBUTING.md", "developer/building.rst", "developer/index.rst", "developer/testing.rst", "examples/black_scholes.ipynb", "examples/cholesky.ipynb", "examples/compact_finite_difference.ipynb", "examples/edge_detection.ipynb", "examples/index.rst", "examples/kmeans.ipynb", "examples/newton_raphson_2d.ipynb", "examples/stencil.ipynb", "examples/torchswe.ipynb", "faqs.rst", "index.rst", "installation.rst", "oss-licenses.rst", "user/advanced.rst", "user/differences.rst", "user/howtos/benchmarking.rst", "user/howtos/index.rst", "user/howtos/measuring.rst", "user/howtos/patching.rst", "user/index.rst", "user/practices.rst", "user/task.rst", "user/tutorial.rst", "user/usage.rst"], "indexentries": {"__abs__() (cupynumeric.ndarray method)": [[217, "cupynumeric.ndarray.__abs__", false]], "__add__() (cupynumeric.ndarray method)": [[218, "cupynumeric.ndarray.__add__", false]], "__and__() (cupynumeric.ndarray method)": [[219, "cupynumeric.ndarray.__and__", false]], "__array__() (cupynumeric.ndarray method)": [[220, "cupynumeric.ndarray.__array__", false]], "__bool__() (cupynumeric.ndarray method)": [[221, "cupynumeric.ndarray.__bool__", false]], "__complex__() (cupynumeric.ndarray method)": [[222, "cupynumeric.ndarray.__complex__", false]], "__contains__() (cupynumeric.ndarray method)": [[223, "cupynumeric.ndarray.__contains__", false]], "__copy__() (cupynumeric.ndarray method)": [[224, "cupynumeric.ndarray.__copy__", false]], "__deepcopy__() (cupynumeric.ndarray method)": [[225, "cupynumeric.ndarray.__deepcopy__", false]], "__divmod__() (cupynumeric.ndarray method)": [[226, "cupynumeric.ndarray.__divmod__", false]], "__eq__() (cupynumeric.ndarray method)": [[227, "cupynumeric.ndarray.__eq__", false]], "__float__() (cupynumeric.ndarray method)": [[228, "cupynumeric.ndarray.__float__", false]], "__floordiv__() (cupynumeric.ndarray method)": [[229, "cupynumeric.ndarray.__floordiv__", false]], "__ge__() (cupynumeric.ndarray method)": [[230, "cupynumeric.ndarray.__ge__", false]], "__getitem__() (cupynumeric.ndarray method)": [[231, "cupynumeric.ndarray.__getitem__", false]], "__gt__() (cupynumeric.ndarray method)": [[232, "cupynumeric.ndarray.__gt__", false]], "__iadd__() (cupynumeric.ndarray method)": [[233, "cupynumeric.ndarray.__iadd__", false]], "__iand__() (cupynumeric.ndarray method)": [[234, "cupynumeric.ndarray.__iand__", false]], "__ifloordiv__() (cupynumeric.ndarray method)": [[235, "cupynumeric.ndarray.__ifloordiv__", false]], "__ilshift__() (cupynumeric.ndarray method)": [[236, "cupynumeric.ndarray.__ilshift__", false]], "__imatmul__() (cupynumeric.ndarray method)": [[237, "cupynumeric.ndarray.__imatmul__", false]], "__imod__() (cupynumeric.ndarray method)": [[238, "cupynumeric.ndarray.__imod__", false]], "__imul__() (cupynumeric.ndarray method)": [[239, "cupynumeric.ndarray.__imul__", false]], "__index__() (cupynumeric.ndarray method)": [[240, "cupynumeric.ndarray.__index__", false]], "__init__() (cupynumeric.ndarray method)": [[4, "cupynumeric.ndarray.__init__", false]], "__init__() (cupynumeric.random.bitgenerator method)": [[1, "cupynumeric.random.BitGenerator.__init__", false]], "__init__() (cupynumeric.random.generator method)": [[2, "cupynumeric.random.Generator.__init__", false]], "__int__() (cupynumeric.ndarray method)": [[241, "cupynumeric.ndarray.__int__", false]], "__invert__() (cupynumeric.ndarray method)": [[242, "cupynumeric.ndarray.__invert__", false]], "__ior__() (cupynumeric.ndarray method)": [[243, "cupynumeric.ndarray.__ior__", false]], "__ipow__() (cupynumeric.ndarray method)": [[244, "cupynumeric.ndarray.__ipow__", false]], "__irshift__() (cupynumeric.ndarray method)": [[245, "cupynumeric.ndarray.__irshift__", false]], "__isub__() (cupynumeric.ndarray method)": [[246, "cupynumeric.ndarray.__isub__", false]], "__itruediv__() (cupynumeric.ndarray method)": [[247, "cupynumeric.ndarray.__itruediv__", false]], "__ixor__() (cupynumeric.ndarray method)": [[248, "cupynumeric.ndarray.__ixor__", false]], "__le__() (cupynumeric.ndarray method)": [[249, "cupynumeric.ndarray.__le__", false]], "__len__() (cupynumeric.ndarray method)": [[250, "cupynumeric.ndarray.__len__", false]], "__lshift__() (cupynumeric.ndarray method)": [[251, "cupynumeric.ndarray.__lshift__", false]], "__lt__() (cupynumeric.ndarray method)": [[252, "cupynumeric.ndarray.__lt__", false]], "__matmul__() (cupynumeric.ndarray method)": [[253, "cupynumeric.ndarray.__matmul__", false]], "__mod__() (cupynumeric.ndarray method)": [[254, "cupynumeric.ndarray.__mod__", false]], "__mul__() (cupynumeric.ndarray method)": [[255, "cupynumeric.ndarray.__mul__", false]], "__ne__() (cupynumeric.ndarray method)": [[256, "cupynumeric.ndarray.__ne__", false]], "__neg__() (cupynumeric.ndarray method)": [[257, "cupynumeric.ndarray.__neg__", false]], "__new__() (cupynumeric.ndarray method)": [[258, "cupynumeric.ndarray.__new__", false]], "__or__() (cupynumeric.ndarray method)": [[259, "cupynumeric.ndarray.__or__", false]], "__pos__() (cupynumeric.ndarray method)": [[260, "cupynumeric.ndarray.__pos__", false]], "__pow__() (cupynumeric.ndarray method)": [[261, "cupynumeric.ndarray.__pow__", false]], "__reduce__() (cupynumeric.ndarray method)": [[262, "cupynumeric.ndarray.__reduce__", false]], "__repr__() (cupynumeric.ndarray method)": [[263, "cupynumeric.ndarray.__repr__", false]], "__rmatmul__() (cupynumeric.ndarray method)": [[264, "cupynumeric.ndarray.__rmatmul__", false]], "__rshift__() (cupynumeric.ndarray method)": [[265, "cupynumeric.ndarray.__rshift__", false]], "__setitem__() (cupynumeric.ndarray method)": [[266, "cupynumeric.ndarray.__setitem__", false]], "__setstate__() (cupynumeric.ndarray method)": [[267, "cupynumeric.ndarray.__setstate__", false]], "__str__() (cupynumeric.ndarray method)": [[268, "cupynumeric.ndarray.__str__", false]], "__sub__() (cupynumeric.ndarray method)": [[269, "cupynumeric.ndarray.__sub__", false]], "__truediv__() (cupynumeric.ndarray method)": [[270, "cupynumeric.ndarray.__truediv__", false]], "__xor__() (cupynumeric.ndarray method)": [[271, "cupynumeric.ndarray.__xor__", false]], "absolute() (in module cupynumeric)": [[12, "cupynumeric.absolute", false]], "add() (in module cupynumeric)": [[13, "cupynumeric.add", false]], "aligned (in module cupynumeric)": [[296, "cupynumeric.ALIGNED", false]], "all() (cupynumeric.ndarray method)": [[272, "cupynumeric.ndarray.all", false]], "all() (in module cupynumeric)": [[14, "cupynumeric.all", false]], "allclose() (in module cupynumeric)": [[15, "cupynumeric.allclose", false]], "amax() (in module cupynumeric)": [[16, "cupynumeric.amax", false]], "amin() (in module cupynumeric)": [[17, "cupynumeric.amin", false]], "angle() (in module cupynumeric)": [[18, "cupynumeric.angle", false]], "any() (cupynumeric.ndarray method)": [[273, "cupynumeric.ndarray.any", false]], "any() (in module cupynumeric)": [[19, "cupynumeric.any", false]], "append() (in module cupynumeric)": [[20, "cupynumeric.append", false]], "arange() (in module cupynumeric)": [[21, "cupynumeric.arange", false]], "arccos() (in module cupynumeric)": [[22, "cupynumeric.arccos", false]], "arccosh() (in module cupynumeric)": [[23, "cupynumeric.arccosh", false]], "arcsin() (in module cupynumeric)": [[24, "cupynumeric.arcsin", false]], "arcsinh() (in module cupynumeric)": [[25, "cupynumeric.arcsinh", false]], "arctan() (in module cupynumeric)": [[26, "cupynumeric.arctan", false]], "arctan2() (in module cupynumeric)": [[27, "cupynumeric.arctan2", false]], "arctanh() (in module cupynumeric)": [[28, "cupynumeric.arctanh", false]], "argmax() (cupynumeric.ndarray method)": [[274, "cupynumeric.ndarray.argmax", false]], "argmax() (in module cupynumeric)": [[29, "cupynumeric.argmax", false]], "argmin() (cupynumeric.ndarray method)": [[275, "cupynumeric.ndarray.argmin", false]], "argmin() (in module cupynumeric)": [[30, "cupynumeric.argmin", false]], "argpartition() (cupynumeric.ndarray method)": [[276, "cupynumeric.ndarray.argpartition", false]], "argpartition() (in module cupynumeric)": [[31, "cupynumeric.argpartition", false]], "argsort() (cupynumeric.ndarray method)": [[277, "cupynumeric.ndarray.argsort", false]], "argsort() (in module cupynumeric)": [[32, "cupynumeric.argsort", false]], "argwhere() (in module cupynumeric)": [[33, "cupynumeric.argwhere", false]], "array() (in module cupynumeric)": [[34, "cupynumeric.array", false]], "array_equal() (in module cupynumeric)": [[35, "cupynumeric.array_equal", false]], "array_split() (in module cupynumeric)": [[36, "cupynumeric.array_split", false]], "asarray() (in module cupynumeric)": [[37, "cupynumeric.asarray", false]], "astype() (cupynumeric.ndarray method)": [[278, "cupynumeric.ndarray.astype", false]], "atleast_1d() (in module cupynumeric)": [[38, "cupynumeric.atleast_1d", false]], "atleast_2d() (in module cupynumeric)": [[39, "cupynumeric.atleast_2d", false]], "atleast_3d() (in module cupynumeric)": [[40, "cupynumeric.atleast_3d", false]], "average() (in module cupynumeric)": [[41, "cupynumeric.average", false]], "bartlett() (in module cupynumeric)": [[42, "cupynumeric.bartlett", false]], "base (cupynumeric.ndarray property)": [[279, "cupynumeric.ndarray.base", false]], "behaved (in module cupynumeric)": [[296, "cupynumeric.BEHAVED", false]], "beta() (in module cupynumeric.random)": [[358, "cupynumeric.random.beta", false]], "bincount() (in module cupynumeric)": [[43, "cupynumeric.bincount", false]], "binomial() (in module cupynumeric.random)": [[359, "cupynumeric.random.binomial", false]], "bitgenerator (class in cupynumeric.random)": [[1, "cupynumeric.random.BitGenerator", false]], "bitwise_and() (in module cupynumeric)": [[44, "cupynumeric.bitwise_and", false]], "bitwise_or() (in module cupynumeric)": [[45, "cupynumeric.bitwise_or", false]], "bitwise_xor() (in module cupynumeric)": [[46, "cupynumeric.bitwise_xor", false]], "blackman() (in module cupynumeric)": [[47, "cupynumeric.blackman", false]], "block() (in module cupynumeric)": [[48, "cupynumeric.block", false]], "broadcast (class in cupynumeric)": [[6, "cupynumeric.broadcast", false]], "broadcast_arrays() (in module cupynumeric)": [[49, "cupynumeric.broadcast_arrays", false]], "broadcast_shapes() (in module cupynumeric)": [[50, "cupynumeric.broadcast_shapes", false]], "broadcast_to() (in module cupynumeric)": [[51, "cupynumeric.broadcast_to", false]], "bytes() (in module cupynumeric.random)": [[360, "cupynumeric.random.bytes", false]], "c_contiguous (cupynumeric.ndarray attribute)": [[296, "cupynumeric.ndarray.C_CONTIGUOUS", false]], "carray (in module cupynumeric)": [[296, "cupynumeric.CARRAY", false]], "cbrt() (in module cupynumeric)": [[52, "cupynumeric.cbrt", false]], "ceil() (in module cupynumeric)": [[53, "cupynumeric.ceil", false]], "chisquare() (in module cupynumeric.random)": [[361, "cupynumeric.random.chisquare", false]], "cholesky() (in module cupynumeric.linalg)": [[167, "cupynumeric.linalg.cholesky", false]], "choose() (cupynumeric.ndarray method)": [[280, "cupynumeric.ndarray.choose", false]], "choose() (in module cupynumeric)": [[54, "cupynumeric.choose", false]], "clip() (cupynumeric.ndarray method)": [[281, "cupynumeric.ndarray.clip", false]], "clip() (in module cupynumeric)": [[55, "cupynumeric.clip", false]], "column_stack() (in module cupynumeric)": [[56, "cupynumeric.column_stack", false]], "compress() (cupynumeric.ndarray method)": [[282, "cupynumeric.ndarray.compress", false]], "compress() (in module cupynumeric)": [[57, "cupynumeric.compress", false]], "concatenate() (in module cupynumeric)": [[58, "cupynumeric.concatenate", false]], "conj() (cupynumeric.ndarray method)": [[283, "cupynumeric.ndarray.conj", false]], "conj() (in module cupynumeric)": [[59, "cupynumeric.conj", false]], "conjugate() (cupynumeric.ndarray method)": [[284, "cupynumeric.ndarray.conjugate", false]], "conjugate() (in module cupynumeric)": [[60, "cupynumeric.conjugate", false]], "convolve() (in module cupynumeric)": [[61, "cupynumeric.convolve", false]], "copy() (cupynumeric.ndarray method)": [[285, "cupynumeric.ndarray.copy", false]], "copy() (in module cupynumeric)": [[62, "cupynumeric.copy", false]], "copysign() (in module cupynumeric)": [[63, "cupynumeric.copysign", false]], "copyto() (in module cupynumeric)": [[64, "cupynumeric.copyto", false]], "cos() (in module cupynumeric)": [[65, "cupynumeric.cos", false]], "cosh() (in module cupynumeric)": [[66, "cupynumeric.cosh", false]], "count_nonzero() (in module cupynumeric)": [[67, "cupynumeric.count_nonzero", false]], "cov() (in module cupynumeric)": [[68, "cupynumeric.cov", false]], "cross() (in module cupynumeric)": [[69, "cupynumeric.cross", false]], "ctypes (cupynumeric.ndarray property)": [[286, "cupynumeric.ndarray.ctypes", false]], "cumprod() (cupynumeric.ndarray method)": [[287, "cupynumeric.ndarray.cumprod", false]], "cumprod() (in module cupynumeric)": [[70, "cupynumeric.cumprod", false]], "cumsum() (cupynumeric.ndarray method)": [[288, "cupynumeric.ndarray.cumsum", false]], "cumsum() (in module cupynumeric)": [[71, "cupynumeric.cumsum", false]], "cupynumeric.fft": [[11, "module-cupynumeric.fft", false]], "cupynumeric.linalg": [[462, "module-cupynumeric.linalg", false]], "cupynumeric.random": [[467, "module-cupynumeric.random", false]], "data (cupynumeric.ndarray property)": [[289, "cupynumeric.ndarray.data", false]], "default_rng() (in module cupynumeric.random)": [[362, "cupynumeric.random.default_rng", false]], "deg2rad() (in module cupynumeric)": [[72, "cupynumeric.deg2rad", false]], "degrees() (in module cupynumeric)": [[73, "cupynumeric.degrees", false]], "delete() (in module cupynumeric)": [[74, "cupynumeric.delete", false]], "diag() (in module cupynumeric)": [[75, "cupynumeric.diag", false]], "diag_indices() (in module cupynumeric)": [[76, "cupynumeric.diag_indices", false]], "diag_indices_from() (in module cupynumeric)": [[77, "cupynumeric.diag_indices_from", false]], "diagflat() (in module cupynumeric)": [[78, "cupynumeric.diagflat", false]], "diagonal() (cupynumeric.ndarray method)": [[290, "cupynumeric.ndarray.diagonal", false]], "diagonal() (in module cupynumeric)": [[79, "cupynumeric.diagonal", false]], "diff() (in module cupynumeric)": [[80, "cupynumeric.diff", false]], "digitize() (in module cupynumeric)": [[81, "cupynumeric.digitize", false]], "divide() (in module cupynumeric)": [[82, "cupynumeric.divide", false]], "dot() (cupynumeric.ndarray method)": [[291, "cupynumeric.ndarray.dot", false]], "dot() (in module cupynumeric)": [[83, "cupynumeric.dot", false]], "dsplit() (in module cupynumeric)": [[84, "cupynumeric.dsplit", false]], "dstack() (in module cupynumeric)": [[85, "cupynumeric.dstack", false]], "dtype (cupynumeric.ndarray property)": [[292, "cupynumeric.ndarray.dtype", false]], "dump() (cupynumeric.ndarray method)": [[293, "cupynumeric.ndarray.dump", false]], "dumps() (cupynumeric.ndarray method)": [[294, "cupynumeric.ndarray.dumps", false]], "eig() (in module cupynumeric.linalg)": [[168, "cupynumeric.linalg.eig", false]], "eigh() (in module cupynumeric.linalg)": [[169, "cupynumeric.linalg.eigh", false]], "eigvals() (in module cupynumeric.linalg)": [[170, "cupynumeric.linalg.eigvals", false]], "eigvalsh() (in module cupynumeric.linalg)": [[171, "cupynumeric.linalg.eigvalsh", false]], "einsum() (in module cupynumeric)": [[86, "cupynumeric.einsum", false]], "einsum_path() (in module cupynumeric)": [[87, "cupynumeric.einsum_path", false]], "empty() (in module cupynumeric)": [[88, "cupynumeric.empty", false]], "empty_like() (in module cupynumeric)": [[89, "cupynumeric.empty_like", false]], "equal() (in module cupynumeric)": [[90, "cupynumeric.equal", false]], "exp() (in module cupynumeric)": [[91, "cupynumeric.exp", false]], "exp2() (in module cupynumeric)": [[92, "cupynumeric.exp2", false]], "expand_dims() (in module cupynumeric)": [[93, "cupynumeric.expand_dims", false]], "expm() (in module cupynumeric.linalg)": [[172, "cupynumeric.linalg.expm", false]], "expm1() (in module cupynumeric)": [[94, "cupynumeric.expm1", false]], "exponential() (in module cupynumeric.random)": [[363, "cupynumeric.random.exponential", false]], "extract() (in module cupynumeric)": [[95, "cupynumeric.extract", false]], "eye() (in module cupynumeric)": [[96, "cupynumeric.eye", false]], "f() (in module cupynumeric.random)": [[364, "cupynumeric.random.f", false]], "f_contiguous (in module cupynumeric)": [[296, "cupynumeric.F_CONTIGUOUS", false]], "fabs() (in module cupynumeric)": [[97, "cupynumeric.fabs", false]], "farray (in module cupynumeric)": [[296, "cupynumeric.FARRAY", false]], "fft() (in module cupynumeric.fft)": [[98, "cupynumeric.fft.fft", false]], "fft2() (in module cupynumeric.fft)": [[99, "cupynumeric.fft.fft2", false]], "fftn() (in module cupynumeric.fft)": [[100, "cupynumeric.fft.fftn", false]], "fftshift() (in module cupynumeric.fft)": [[101, "cupynumeric.fft.fftshift", false]], "fill() (cupynumeric.ndarray method)": [[295, "cupynumeric.ndarray.fill", false]], "fill_diagonal() (in module cupynumeric)": [[114, "cupynumeric.fill_diagonal", false]], "find_common_type() (in module cupynumeric)": [[115, "cupynumeric.find_common_type", false]], "flags (cupynumeric.ndarray property)": [[296, "cupynumeric.ndarray.flags", false]], "flat (cupynumeric.ndarray property)": [[297, "cupynumeric.ndarray.flat", false]], "flatnonzero() (in module cupynumeric)": [[116, "cupynumeric.flatnonzero", false]], "flatten() (cupynumeric.ndarray method)": [[298, "cupynumeric.ndarray.flatten", false]], "flip() (cupynumeric.ndarray method)": [[299, "cupynumeric.ndarray.flip", false]], "flip() (in module cupynumeric)": [[117, "cupynumeric.flip", false]], "fliplr() (in module cupynumeric)": [[118, "cupynumeric.fliplr", false]], "flipud() (in module cupynumeric)": [[119, "cupynumeric.flipud", false]], "float_power() (in module cupynumeric)": [[120, "cupynumeric.float_power", false]], "floor() (in module cupynumeric)": [[121, "cupynumeric.floor", false]], "floor_divide() (in module cupynumeric)": [[122, "cupynumeric.floor_divide", false]], "fmax() (in module cupynumeric)": [[123, "cupynumeric.fmax", false]], "fmin() (in module cupynumeric)": [[124, "cupynumeric.fmin", false]], "fmod() (in module cupynumeric)": [[125, "cupynumeric.fmod", false]], "fnc (in module cupynumeric)": [[296, "cupynumeric.FNC", false]], "forc (in module cupynumeric)": [[296, "cupynumeric.FORC", false]], "frexp() (in module cupynumeric)": [[126, "cupynumeric.frexp", false]], "full() (in module cupynumeric)": [[127, "cupynumeric.full", false]], "full_like() (in module cupynumeric)": [[128, "cupynumeric.full_like", false]], "gamma() (in module cupynumeric.random)": [[365, "cupynumeric.random.gamma", false]], "gcd() (in module cupynumeric)": [[129, "cupynumeric.gcd", false]], "generator (class in cupynumeric.random)": [[2, "cupynumeric.random.Generator", false]], "geometric() (in module cupynumeric.random)": [[366, "cupynumeric.random.geometric", false]], "getfield() (cupynumeric.ndarray method)": [[300, "cupynumeric.ndarray.getfield", false]], "gradient() (in module cupynumeric)": [[130, "cupynumeric.gradient", false]], "greater() (in module cupynumeric)": [[131, "cupynumeric.greater", false]], "greater_equal() (in module cupynumeric)": [[132, "cupynumeric.greater_equal", false]], "gumbel() (in module cupynumeric.random)": [[367, "cupynumeric.random.gumbel", false]], "hamming() (in module cupynumeric)": [[133, "cupynumeric.hamming", false]], "hanning() (in module cupynumeric)": [[134, "cupynumeric.hanning", false]], "hfft() (in module cupynumeric.fft)": [[102, "cupynumeric.fft.hfft", false]], "histogram() (in module cupynumeric)": [[135, "cupynumeric.histogram", false]], "histogram2d() (in module cupynumeric)": [[136, "cupynumeric.histogram2d", false]], "histogramdd() (in module cupynumeric)": [[137, "cupynumeric.histogramdd", false]], "hsplit() (in module cupynumeric)": [[138, "cupynumeric.hsplit", false]], "hstack() (in module cupynumeric)": [[139, "cupynumeric.hstack", false]], "hypergeometric() (in module cupynumeric.random)": [[368, "cupynumeric.random.hypergeometric", false]], "hypot() (in module cupynumeric)": [[140, "cupynumeric.hypot", false]], "identity() (in module cupynumeric)": [[141, "cupynumeric.identity", false]], "ifft() (in module cupynumeric.fft)": [[103, "cupynumeric.fft.ifft", false]], "ifft2() (in module cupynumeric.fft)": [[104, "cupynumeric.fft.ifft2", false]], "ifftn() (in module cupynumeric.fft)": [[105, "cupynumeric.fft.ifftn", false]], "ifftshift() (in module cupynumeric.fft)": [[106, "cupynumeric.fft.ifftshift", false]], "ihfft() (in module cupynumeric.fft)": [[107, "cupynumeric.fft.ihfft", false]], "imag (cupynumeric.ndarray property)": [[301, "cupynumeric.ndarray.imag", false]], "imag() (in module cupynumeric)": [[142, "cupynumeric.imag", false]], "in1d() (in module cupynumeric)": [[143, "cupynumeric.in1d", false]], "index (cupynumeric.broadcast property)": [[6, "cupynumeric.broadcast.index", false]], "indices() (in module cupynumeric)": [[144, "cupynumeric.indices", false]], "inner() (in module cupynumeric)": [[145, "cupynumeric.inner", false]], "insert() (in module cupynumeric)": [[146, "cupynumeric.insert", false]], "invert() (in module cupynumeric)": [[147, "cupynumeric.invert", false]], "irfft() (in module cupynumeric.fft)": [[108, "cupynumeric.fft.irfft", false]], "irfft2() (in module cupynumeric.fft)": [[109, "cupynumeric.fft.irfft2", false]], "irfftn() (in module cupynumeric.fft)": [[110, "cupynumeric.fft.irfftn", false]], "isclose() (in module cupynumeric)": [[148, "cupynumeric.isclose", false]], "iscomplex() (in module cupynumeric)": [[149, "cupynumeric.iscomplex", false]], "iscomplexobj() (in module cupynumeric)": [[150, "cupynumeric.iscomplexobj", false]], "isfinite() (in module cupynumeric)": [[151, "cupynumeric.isfinite", false]], "isin() (in module cupynumeric)": [[152, "cupynumeric.isin", false]], "isinf() (in module cupynumeric)": [[153, "cupynumeric.isinf", false]], "isnan() (in module cupynumeric)": [[154, "cupynumeric.isnan", false]], "isneginf() (in module cupynumeric)": [[155, "cupynumeric.isneginf", false]], "isposinf() (in module cupynumeric)": [[156, "cupynumeric.isposinf", false]], "isreal() (in module cupynumeric)": [[157, "cupynumeric.isreal", false]], "isrealobj() (in module cupynumeric)": [[158, "cupynumeric.isrealobj", false]], "isscalar() (in module cupynumeric)": [[159, "cupynumeric.isscalar", false]], "item() (cupynumeric.ndarray method)": [[302, "cupynumeric.ndarray.item", false]], "itemset (cupynumeric.ndarray attribute)": [[303, "cupynumeric.ndarray.itemset", false]], "itemsize (cupynumeric.ndarray property)": [[304, "cupynumeric.ndarray.itemsize", false]], "iters (cupynumeric.broadcast property)": [[6, "cupynumeric.broadcast.iters", false]], "ix_() (in module cupynumeric)": [[160, "cupynumeric.ix_", false]], "kaiser() (in module cupynumeric)": [[161, "cupynumeric.kaiser", false]], "laplace() (in module cupynumeric.random)": [[369, "cupynumeric.random.laplace", false]], "lcm() (in module cupynumeric)": [[162, "cupynumeric.lcm", false]], "ldexp() (in module cupynumeric)": [[163, "cupynumeric.ldexp", false]], "left_shift() (in module cupynumeric)": [[164, "cupynumeric.left_shift", false]], "less() (in module cupynumeric)": [[165, "cupynumeric.less", false]], "less_equal() (in module cupynumeric)": [[166, "cupynumeric.less_equal", false]], "linspace() (in module cupynumeric)": [[179, "cupynumeric.linspace", false]], "load() (in module cupynumeric)": [[180, "cupynumeric.load", false]], "log() (in module cupynumeric)": [[181, "cupynumeric.log", false]], "log10() (in module cupynumeric)": [[182, "cupynumeric.log10", false]], "log1p() (in module cupynumeric)": [[183, "cupynumeric.log1p", false]], "log2() (in module cupynumeric)": [[184, "cupynumeric.log2", false]], "logaddexp() (in module cupynumeric)": [[185, "cupynumeric.logaddexp", false]], "logaddexp2() (in module cupynumeric)": [[186, "cupynumeric.logaddexp2", false]], "logical_and() (in module cupynumeric)": [[187, "cupynumeric.logical_and", false]], "logical_not() (in module cupynumeric)": [[188, "cupynumeric.logical_not", false]], "logical_or() (in module cupynumeric)": [[189, "cupynumeric.logical_or", false]], "logical_xor() (in module cupynumeric)": [[190, "cupynumeric.logical_xor", false]], "logistic() (in module cupynumeric.random)": [[370, "cupynumeric.random.logistic", false]], "lognormal() (in module cupynumeric.random)": [[371, "cupynumeric.random.lognormal", false]], "logseries() (in module cupynumeric.random)": [[372, "cupynumeric.random.logseries", false]], "logspace() (in module cupynumeric)": [[191, "cupynumeric.logspace", false]], "mask_indices() (in module cupynumeric)": [[192, "cupynumeric.mask_indices", false]], "matmul() (in module cupynumeric)": [[193, "cupynumeric.matmul", false]], "matrix_power() (in module cupynumeric.linalg)": [[173, "cupynumeric.linalg.matrix_power", false]], "max() (cupynumeric.ndarray method)": [[305, "cupynumeric.ndarray.max", false]], "maximum() (in module cupynumeric)": [[194, "cupynumeric.maximum", false]], "mean() (cupynumeric.ndarray method)": [[306, "cupynumeric.ndarray.mean", false]], "mean() (in module cupynumeric)": [[195, "cupynumeric.mean", false]], "median() (in module cupynumeric)": [[196, "cupynumeric.median", false]], "meshgrid() (in module cupynumeric)": [[197, "cupynumeric.meshgrid", false]], "min() (cupynumeric.ndarray method)": [[307, "cupynumeric.ndarray.min", false]], "minimum() (in module cupynumeric)": [[198, "cupynumeric.minimum", false]], "mod() (in module cupynumeric)": [[199, "cupynumeric.mod", false]], "modf() (in module cupynumeric)": [[200, "cupynumeric.modf", false]], "module": [[11, "module-cupynumeric.fft", false], [462, "module-cupynumeric.linalg", false], [467, "module-cupynumeric.random", false]], "moveaxis() (in module cupynumeric)": [[201, "cupynumeric.moveaxis", false]], "multi_dot() (in module cupynumeric.linalg)": [[174, "cupynumeric.linalg.multi_dot", false]], "multiply() (in module cupynumeric)": [[202, "cupynumeric.multiply", false]], "nan_to_num() (in module cupynumeric)": [[203, "cupynumeric.nan_to_num", false]], "nanargmax() (in module cupynumeric)": [[204, "cupynumeric.nanargmax", false]], "nanargmin() (in module cupynumeric)": [[205, "cupynumeric.nanargmin", false]], "nancumprod() (in module cupynumeric)": [[206, "cupynumeric.nancumprod", false]], "nancumsum() (in module cupynumeric)": [[207, "cupynumeric.nancumsum", false]], "nanmax() (in module cupynumeric)": [[208, "cupynumeric.nanmax", false]], "nanmean() (in module cupynumeric)": [[209, "cupynumeric.nanmean", false]], "nanmedian() (in module cupynumeric)": [[210, "cupynumeric.nanmedian", false]], "nanmin() (in module cupynumeric)": [[211, "cupynumeric.nanmin", false]], "nanpercentile() (in module cupynumeric)": [[212, "cupynumeric.nanpercentile", false]], "nanprod() (in module cupynumeric)": [[213, "cupynumeric.nanprod", false]], "nanquantile() (in module cupynumeric)": [[214, "cupynumeric.nanquantile", false]], "nansum() (in module cupynumeric)": [[215, "cupynumeric.nansum", false]], "nbytes (cupynumeric.ndarray property)": [[308, "cupynumeric.ndarray.nbytes", false]], "nd (cupynumeric.broadcast property)": [[6, "cupynumeric.broadcast.nd", false]], "ndarray (class in cupynumeric)": [[4, "cupynumeric.ndarray", false]], "ndim (cupynumeric.broadcast property)": [[6, "cupynumeric.broadcast.ndim", false]], "ndim (cupynumeric.ndarray property)": [[309, "cupynumeric.ndarray.ndim", false]], "ndim() (in module cupynumeric)": [[337, "cupynumeric.ndim", false]], "negative() (in module cupynumeric)": [[338, "cupynumeric.negative", false]], "negative_binomial() (in module cupynumeric.random)": [[373, "cupynumeric.random.negative_binomial", false]], "nextafter() (in module cupynumeric)": [[339, "cupynumeric.nextafter", false]], "noncentral_chisquare() (in module cupynumeric.random)": [[374, "cupynumeric.random.noncentral_chisquare", false]], "noncentral_f() (in module cupynumeric.random)": [[375, "cupynumeric.random.noncentral_f", false]], "nonzero() (cupynumeric.ndarray method)": [[310, "cupynumeric.ndarray.nonzero", false]], "nonzero() (in module cupynumeric)": [[340, "cupynumeric.nonzero", false]], "norm() (in module cupynumeric.linalg)": [[175, "cupynumeric.linalg.norm", false]], "normal() (in module cupynumeric.random)": [[376, "cupynumeric.random.normal", false]], "not_equal() (in module cupynumeric)": [[341, "cupynumeric.not_equal", false]], "numiter (cupynumeric.broadcast property)": [[6, "cupynumeric.broadcast.numiter", false]], "ones() (in module cupynumeric)": [[342, "cupynumeric.ones", false]], "ones_like() (in module cupynumeric)": [[343, "cupynumeric.ones_like", false]], "outer() (in module cupynumeric)": [[344, "cupynumeric.outer", false]], "owndata (in module cupynumeric)": [[296, "cupynumeric.OWNDATA", false]], "packbits() (in module cupynumeric)": [[345, "cupynumeric.packbits", false]], "pareto() (in module cupynumeric.random)": [[377, "cupynumeric.random.pareto", false]], "partition() (cupynumeric.ndarray method)": [[311, "cupynumeric.ndarray.partition", false]], "partition() (in module cupynumeric)": [[346, "cupynumeric.partition", false]], "percentile() (in module cupynumeric)": [[347, "cupynumeric.percentile", false]], "place() (in module cupynumeric)": [[348, "cupynumeric.place", false]], "poisson() (in module cupynumeric.random)": [[378, "cupynumeric.random.poisson", false]], "positive() (in module cupynumeric)": [[349, "cupynumeric.positive", false]], "power() (in module cupynumeric)": [[350, "cupynumeric.power", false]], "power() (in module cupynumeric.random)": [[379, "cupynumeric.random.power", false]], "prod() (cupynumeric.ndarray method)": [[312, "cupynumeric.ndarray.prod", false]], "prod() (in module cupynumeric)": [[351, "cupynumeric.prod", false]], "put() (cupynumeric.ndarray method)": [[313, "cupynumeric.ndarray.put", false]], "put() (in module cupynumeric)": [[352, "cupynumeric.put", false]], "put_along_axis() (in module cupynumeric)": [[353, "cupynumeric.put_along_axis", false]], "putmask() (in module cupynumeric)": [[354, "cupynumeric.putmask", false]], "qr() (in module cupynumeric.linalg)": [[176, "cupynumeric.linalg.qr", false]], "quantile() (in module cupynumeric)": [[355, "cupynumeric.quantile", false]], "rad2deg() (in module cupynumeric)": [[356, "cupynumeric.rad2deg", false]], "radians() (in module cupynumeric)": [[357, "cupynumeric.radians", false]], "rand() (in module cupynumeric.random)": [[380, "cupynumeric.random.rand", false]], "randint() (in module cupynumeric.random)": [[381, "cupynumeric.random.randint", false]], "randn() (in module cupynumeric.random)": [[382, "cupynumeric.random.randn", false]], "random() (in module cupynumeric.random)": [[383, "cupynumeric.random.random", false]], "random_integers() (in module cupynumeric.random)": [[384, "cupynumeric.random.random_integers", false]], "random_sample() (in module cupynumeric.random)": [[385, "cupynumeric.random.random_sample", false]], "ranf() (in module cupynumeric.random)": [[386, "cupynumeric.random.ranf", false]], "ravel() (cupynumeric.ndarray method)": [[314, "cupynumeric.ndarray.ravel", false]], "ravel() (in module cupynumeric)": [[400, "cupynumeric.ravel", false]], "ravel_multi_index() (in module cupynumeric)": [[401, "cupynumeric.ravel_multi_index", false]], "rayleigh() (in module cupynumeric.random)": [[387, "cupynumeric.random.rayleigh", false]], "real (cupynumeric.ndarray property)": [[315, "cupynumeric.ndarray.real", false]], "real() (in module cupynumeric)": [[402, "cupynumeric.real", false]], "real_if_close() (in module cupynumeric)": [[403, "cupynumeric.real_if_close", false]], "reciprocal() (in module cupynumeric)": [[404, "cupynumeric.reciprocal", false]], "remainder() (in module cupynumeric)": [[405, "cupynumeric.remainder", false]], "repeat() (in module cupynumeric)": [[406, "cupynumeric.repeat", false]], "reset() (cupynumeric.broadcast method)": [[6, "cupynumeric.broadcast.reset", false]], "reshape() (cupynumeric.ndarray method)": [[316, "cupynumeric.ndarray.reshape", false]], "reshape() (in module cupynumeric)": [[407, "cupynumeric.reshape", false]], "rfft() (in module cupynumeric.fft)": [[111, "cupynumeric.fft.rfft", false]], "rfft2() (in module cupynumeric.fft)": [[112, "cupynumeric.fft.rfft2", false]], "rfftn() (in module cupynumeric.fft)": [[113, "cupynumeric.fft.rfftn", false]], "right_shift() (in module cupynumeric)": [[408, "cupynumeric.right_shift", false]], "rint() (in module cupynumeric)": [[409, "cupynumeric.rint", false]], "roll() (in module cupynumeric)": [[410, "cupynumeric.roll", false]], "roots() (in module cupynumeric)": [[411, "cupynumeric.roots", false]], "rot90() (in module cupynumeric)": [[412, "cupynumeric.rot90", false]], "round() (in module cupynumeric)": [[413, "cupynumeric.round", false]], "row_stack() (in module cupynumeric)": [[414, "cupynumeric.row_stack", false]], "sample() (in module cupynumeric.random)": [[388, "cupynumeric.random.sample", false]], "searchsorted() (cupynumeric.ndarray method)": [[317, "cupynumeric.ndarray.searchsorted", false]], "searchsorted() (in module cupynumeric)": [[415, "cupynumeric.searchsorted", false]], "seed() (in module cupynumeric.random)": [[389, "cupynumeric.random.seed", false]], "select() (in module cupynumeric)": [[416, "cupynumeric.select", false]], "setfield() (cupynumeric.ndarray method)": [[318, "cupynumeric.ndarray.setfield", false]], "setflags() (cupynumeric.ndarray method)": [[319, "cupynumeric.ndarray.setflags", false]], "shape (cupynumeric.broadcast property)": [[6, "cupynumeric.broadcast.shape", false]], "shape (cupynumeric.ndarray property)": [[320, "cupynumeric.ndarray.shape", false]], "shape() (in module cupynumeric)": [[417, "cupynumeric.shape", false]], "sign() (in module cupynumeric)": [[418, "cupynumeric.sign", false]], "signbit() (in module cupynumeric)": [[419, "cupynumeric.signbit", false]], "sin() (in module cupynumeric)": [[420, "cupynumeric.sin", false]], "sinh() (in module cupynumeric)": [[421, "cupynumeric.sinh", false]], "size (cupynumeric.broadcast property)": [[6, "cupynumeric.broadcast.size", false]], "size (cupynumeric.ndarray property)": [[321, "cupynumeric.ndarray.size", false]], "solve() (in module cupynumeric.linalg)": [[177, "cupynumeric.linalg.solve", false]], "sort() (cupynumeric.ndarray method)": [[322, "cupynumeric.ndarray.sort", false]], "sort() (in module cupynumeric)": [[422, "cupynumeric.sort", false]], "sort_complex() (in module cupynumeric)": [[423, "cupynumeric.sort_complex", false]], "split() (in module cupynumeric)": [[424, "cupynumeric.split", false]], "sqrt() (in module cupynumeric)": [[425, "cupynumeric.sqrt", false]], "square() (in module cupynumeric)": [[426, "cupynumeric.square", false]], "squeeze() (cupynumeric.ndarray method)": [[323, "cupynumeric.ndarray.squeeze", false]], "squeeze() (in module cupynumeric)": [[427, "cupynumeric.squeeze", false]], "stack() (in module cupynumeric)": [[428, "cupynumeric.stack", false]], "standard_cauchy() (in module cupynumeric.random)": [[390, "cupynumeric.random.standard_cauchy", false]], "standard_exponential() (in module cupynumeric.random)": [[391, "cupynumeric.random.standard_exponential", false]], "standard_gamma() (in module cupynumeric.random)": [[392, "cupynumeric.random.standard_gamma", false]], "standard_t() (in module cupynumeric.random)": [[393, "cupynumeric.random.standard_t", false]], "strides (cupynumeric.ndarray property)": [[324, "cupynumeric.ndarray.strides", false]], "subtract() (in module cupynumeric)": [[429, "cupynumeric.subtract", false]], "sum() (cupynumeric.ndarray method)": [[325, "cupynumeric.ndarray.sum", false]], "sum() (in module cupynumeric)": [[430, "cupynumeric.sum", false]], "svd() (in module cupynumeric.linalg)": [[178, "cupynumeric.linalg.svd", false]], "swapaxes() (cupynumeric.ndarray method)": [[326, "cupynumeric.ndarray.swapaxes", false]], "swapaxes() (in module cupynumeric)": [[431, "cupynumeric.swapaxes", false]], "t (cupynumeric.ndarray property)": [[216, "cupynumeric.ndarray.T", false]], "take() (cupynumeric.ndarray method)": [[327, "cupynumeric.ndarray.take", false]], "take() (in module cupynumeric)": [[432, "cupynumeric.take", false]], "take_along_axis() (in module cupynumeric)": [[433, "cupynumeric.take_along_axis", false]], "tan() (in module cupynumeric)": [[434, "cupynumeric.tan", false]], "tanh() (in module cupynumeric)": [[435, "cupynumeric.tanh", false]], "tensordot() (in module cupynumeric)": [[436, "cupynumeric.tensordot", false]], "tile() (in module cupynumeric)": [[437, "cupynumeric.tile", false]], "tobytes() (cupynumeric.ndarray method)": [[328, "cupynumeric.ndarray.tobytes", false]], "tofile() (cupynumeric.ndarray method)": [[329, "cupynumeric.ndarray.tofile", false]], "tolist() (cupynumeric.ndarray method)": [[330, "cupynumeric.ndarray.tolist", false]], "tostring() (cupynumeric.ndarray method)": [[331, "cupynumeric.ndarray.tostring", false]], "trace() (cupynumeric.ndarray method)": [[332, "cupynumeric.ndarray.trace", false]], "trace() (in module cupynumeric)": [[438, "cupynumeric.trace", false]], "transpose() (cupynumeric.ndarray method)": [[333, "cupynumeric.ndarray.transpose", false]], "transpose() (in module cupynumeric)": [[439, "cupynumeric.transpose", false]], "tri() (in module cupynumeric)": [[440, "cupynumeric.tri", false]], "triangular() (in module cupynumeric.random)": [[394, "cupynumeric.random.triangular", false]], "tril() (in module cupynumeric)": [[441, "cupynumeric.tril", false]], "tril_indices() (in module cupynumeric)": [[442, "cupynumeric.tril_indices", false]], "tril_indices_from() (in module cupynumeric)": [[443, "cupynumeric.tril_indices_from", false]], "triu() (in module cupynumeric)": [[444, "cupynumeric.triu", false]], "triu_indices() (in module cupynumeric)": [[445, "cupynumeric.triu_indices", false]], "triu_indices_from() (in module cupynumeric)": [[446, "cupynumeric.triu_indices_from", false]], "true_divide() (in module cupynumeric)": [[447, "cupynumeric.true_divide", false]], "trunc() (in module cupynumeric)": [[448, "cupynumeric.trunc", false]], "uniform() (in module cupynumeric.random)": [[395, "cupynumeric.random.uniform", false]], "unique() (cupynumeric.ndarray method)": [[334, "cupynumeric.ndarray.unique", false]], "unique() (in module cupynumeric)": [[449, "cupynumeric.unique", false]], "unpackbits() (in module cupynumeric)": [[450, "cupynumeric.unpackbits", false]], "unravel_index() (in module cupynumeric)": [[451, "cupynumeric.unravel_index", false]], "var() (cupynumeric.ndarray method)": [[335, "cupynumeric.ndarray.var", false]], "var() (in module cupynumeric)": [[452, "cupynumeric.var", false]], "vdot() (in module cupynumeric)": [[453, "cupynumeric.vdot", false]], "view() (cupynumeric.ndarray method)": [[336, "cupynumeric.ndarray.view", false]], "vonmises() (in module cupynumeric.random)": [[396, "cupynumeric.random.vonmises", false]], "vsplit() (in module cupynumeric)": [[454, "cupynumeric.vsplit", false]], "vstack() (in module cupynumeric)": [[455, "cupynumeric.vstack", false]], "wald() (in module cupynumeric.random)": [[397, "cupynumeric.random.wald", false]], "weibull() (in module cupynumeric.random)": [[398, "cupynumeric.random.weibull", false]], "where() (in module cupynumeric)": [[456, "cupynumeric.where", false]], "writeable (in module cupynumeric)": [[296, "cupynumeric.WRITEABLE", false]], "writebackifcopy (in module cupynumeric)": [[296, "cupynumeric.WRITEBACKIFCOPY", false]], "zeros() (in module cupynumeric)": [[457, "cupynumeric.zeros", false]], "zeros_like() (in module cupynumeric)": [[458, "cupynumeric.zeros_like", false]], "zipf() (in module cupynumeric.random)": [[399, "cupynumeric.random.zipf", false]]}, "objects": {"cupynumeric": [[296, 0, 1, "", "ALIGNED"], [296, 0, 1, "", "BEHAVED"], [296, 0, 1, "", "CARRAY"], [296, 0, 1, "", "FARRAY"], [296, 0, 1, "", "FNC"], [296, 0, 1, "", "FORC"], [296, 0, 1, "", "F_CONTIGUOUS"], [296, 0, 1, "", "OWNDATA"], [296, 0, 1, "", "WRITEABLE"], [296, 0, 1, "", "WRITEBACKIFCOPY"], [12, 1, 1, "", "absolute"], [13, 1, 1, "", "add"], [14, 1, 1, "", "all"], [15, 1, 1, "", "allclose"], [16, 1, 1, "", "amax"], [17, 1, 1, "", "amin"], [18, 1, 1, "", "angle"], [19, 1, 1, "", "any"], [20, 1, 1, "", "append"], [21, 1, 1, "", "arange"], [22, 1, 1, "", "arccos"], [23, 1, 1, "", "arccosh"], [24, 1, 1, "", "arcsin"], [25, 1, 1, "", "arcsinh"], [26, 1, 1, "", "arctan"], [27, 1, 1, "", "arctan2"], [28, 1, 1, "", "arctanh"], [29, 1, 1, "", "argmax"], [30, 1, 1, "", "argmin"], [31, 1, 1, "", "argpartition"], [32, 1, 1, "", "argsort"], [33, 1, 1, "", "argwhere"], [34, 1, 1, "", "array"], [35, 1, 1, "", "array_equal"], [36, 1, 1, "", "array_split"], [37, 1, 1, "", "asarray"], [38, 1, 1, "", "atleast_1d"], [39, 1, 1, "", "atleast_2d"], [40, 1, 1, "", "atleast_3d"], [41, 1, 1, "", "average"], [42, 1, 1, "", "bartlett"], [43, 1, 1, "", "bincount"], [44, 1, 1, "", "bitwise_and"], [45, 1, 1, "", "bitwise_or"], [46, 1, 1, "", "bitwise_xor"], [47, 1, 1, "", "blackman"], [48, 1, 1, "", "block"], [6, 2, 1, "", "broadcast"], [49, 1, 1, "", "broadcast_arrays"], [50, 1, 1, "", "broadcast_shapes"], [51, 1, 1, "", "broadcast_to"], [52, 1, 1, "", "cbrt"], [53, 1, 1, "", "ceil"], [54, 1, 1, "", "choose"], [55, 1, 1, "", "clip"], [56, 1, 1, "", "column_stack"], [57, 1, 1, "", "compress"], [58, 1, 1, "", "concatenate"], [59, 1, 1, "", "conj"], [60, 1, 1, "", "conjugate"], [61, 1, 1, "", "convolve"], [62, 1, 1, "", "copy"], [63, 1, 1, "", "copysign"], [64, 1, 1, "", "copyto"], [65, 1, 1, "", "cos"], [66, 1, 1, "", "cosh"], [67, 1, 1, "", "count_nonzero"], [68, 1, 1, "", "cov"], [69, 1, 1, "", "cross"], [70, 1, 1, "", "cumprod"], [71, 1, 1, "", "cumsum"], [72, 1, 1, "", "deg2rad"], [73, 1, 1, "", "degrees"], [74, 1, 1, "", "delete"], [75, 1, 1, "", "diag"], [76, 1, 1, "", "diag_indices"], [77, 1, 1, "", "diag_indices_from"], [78, 1, 1, "", "diagflat"], [79, 1, 1, "", "diagonal"], [80, 1, 1, "", "diff"], [81, 1, 1, "", "digitize"], [82, 1, 1, "", "divide"], [83, 1, 1, "", "dot"], [84, 1, 1, "", "dsplit"], [85, 1, 1, "", "dstack"], [86, 1, 1, "", "einsum"], [87, 1, 1, "", "einsum_path"], [88, 1, 1, "", "empty"], [89, 1, 1, "", "empty_like"], [90, 1, 1, "", "equal"], [91, 1, 1, "", "exp"], [92, 1, 1, "", "exp2"], [93, 1, 1, "", "expand_dims"], [94, 1, 1, "", "expm1"], [95, 1, 1, "", "extract"], [96, 1, 1, "", "eye"], [97, 1, 1, "", "fabs"], [11, 5, 0, "-", "fft"], [114, 1, 1, "", "fill_diagonal"], [115, 1, 1, "", "find_common_type"], [116, 1, 1, "", "flatnonzero"], [117, 1, 1, "", "flip"], [118, 1, 1, "", "fliplr"], [119, 1, 1, "", "flipud"], [120, 1, 1, "", "float_power"], [121, 1, 1, "", "floor"], [122, 1, 1, "", "floor_divide"], [123, 1, 1, "", "fmax"], [124, 1, 1, "", "fmin"], [125, 1, 1, "", "fmod"], [126, 1, 1, "", "frexp"], [127, 1, 1, "", "full"], [128, 1, 1, "", "full_like"], [129, 1, 1, "", "gcd"], [130, 1, 1, "", "gradient"], [131, 1, 1, "", "greater"], [132, 1, 1, "", "greater_equal"], [133, 1, 1, "", "hamming"], [134, 1, 1, "", "hanning"], [135, 1, 1, "", "histogram"], [136, 1, 1, "", "histogram2d"], [137, 1, 1, "", "histogramdd"], [138, 1, 1, "", "hsplit"], [139, 1, 1, "", "hstack"], [140, 1, 1, "", "hypot"], [141, 1, 1, "", "identity"], [142, 1, 1, "", "imag"], [143, 1, 1, "", "in1d"], [144, 1, 1, "", "indices"], [145, 1, 1, "", "inner"], [146, 1, 1, "", "insert"], [147, 1, 1, "", "invert"], [148, 1, 1, "", "isclose"], [149, 1, 1, "", "iscomplex"], [150, 1, 1, "", "iscomplexobj"], [151, 1, 1, "", "isfinite"], [152, 1, 1, "", "isin"], [153, 1, 1, "", "isinf"], [154, 1, 1, "", "isnan"], [155, 1, 1, "", "isneginf"], [156, 1, 1, "", "isposinf"], [157, 1, 1, "", "isreal"], [158, 1, 1, "", "isrealobj"], [159, 1, 1, "", "isscalar"], [160, 1, 1, "", "ix_"], [161, 1, 1, "", "kaiser"], [162, 1, 1, "", "lcm"], [163, 1, 1, "", "ldexp"], [164, 1, 1, "", "left_shift"], [165, 1, 1, "", "less"], [166, 1, 1, "", "less_equal"], [462, 5, 0, "-", "linalg"], [179, 1, 1, "", "linspace"], [180, 1, 1, "", "load"], [181, 1, 1, "", "log"], [182, 1, 1, "", "log10"], [183, 1, 1, "", "log1p"], [184, 1, 1, "", "log2"], [185, 1, 1, "", "logaddexp"], [186, 1, 1, "", "logaddexp2"], [187, 1, 1, "", "logical_and"], [188, 1, 1, "", "logical_not"], [189, 1, 1, "", "logical_or"], [190, 1, 1, "", "logical_xor"], [191, 1, 1, "", "logspace"], [192, 1, 1, "", "mask_indices"], [193, 1, 1, "", "matmul"], [194, 1, 1, "", "maximum"], [195, 1, 1, "", "mean"], [196, 1, 1, "", "median"], [197, 1, 1, "", "meshgrid"], [198, 1, 1, "", "minimum"], [199, 1, 1, "", "mod"], [200, 1, 1, "", "modf"], [201, 1, 1, "", "moveaxis"], [202, 1, 1, "", "multiply"], [203, 1, 1, "", "nan_to_num"], [204, 1, 1, "", "nanargmax"], [205, 1, 1, "", "nanargmin"], [206, 1, 1, "", "nancumprod"], [207, 1, 1, "", "nancumsum"], [208, 1, 1, "", "nanmax"], [209, 1, 1, "", "nanmean"], [210, 1, 1, "", "nanmedian"], [211, 1, 1, "", "nanmin"], [212, 1, 1, "", "nanpercentile"], [213, 1, 1, "", "nanprod"], [214, 1, 1, "", "nanquantile"], [215, 1, 1, "", "nansum"], [4, 2, 1, "", "ndarray"], [337, 1, 1, "", "ndim"], [338, 1, 1, "", "negative"], [339, 1, 1, "", "nextafter"], [340, 1, 1, "", "nonzero"], [341, 1, 1, "", "not_equal"], [342, 1, 1, "", "ones"], [343, 1, 1, "", "ones_like"], [344, 1, 1, "", "outer"], [345, 1, 1, "", "packbits"], [346, 1, 1, "", "partition"], [347, 1, 1, "", "percentile"], [348, 1, 1, "", "place"], [349, 1, 1, "", "positive"], [350, 1, 1, "", "power"], [351, 1, 1, "", "prod"], [352, 1, 1, "", "put"], [353, 1, 1, "", "put_along_axis"], [354, 1, 1, "", "putmask"], [355, 1, 1, "", "quantile"], [356, 1, 1, "", "rad2deg"], [357, 1, 1, "", "radians"], [467, 5, 0, "-", "random"], [400, 1, 1, "", "ravel"], [401, 1, 1, "", "ravel_multi_index"], [402, 1, 1, "", "real"], [403, 1, 1, "", "real_if_close"], [404, 1, 1, "", "reciprocal"], [405, 1, 1, "", "remainder"], [406, 1, 1, "", "repeat"], [407, 1, 1, "", "reshape"], [408, 1, 1, "", "right_shift"], [409, 1, 1, "", "rint"], [410, 1, 1, "", "roll"], [411, 1, 1, "", "roots"], [412, 1, 1, "", "rot90"], [413, 1, 1, "", "round"], [414, 1, 1, "", "row_stack"], [415, 1, 1, "", "searchsorted"], [416, 1, 1, "", "select"], [417, 1, 1, "", "shape"], [418, 1, 1, "", "sign"], [419, 1, 1, "", "signbit"], [420, 1, 1, "", "sin"], [421, 1, 1, "", "sinh"], [422, 1, 1, "", "sort"], [423, 1, 1, "", "sort_complex"], [424, 1, 1, "", "split"], [425, 1, 1, "", "sqrt"], [426, 1, 1, "", "square"], [427, 1, 1, "", "squeeze"], [428, 1, 1, "", "stack"], [429, 1, 1, "", "subtract"], [430, 1, 1, "", "sum"], [431, 1, 1, "", "swapaxes"], [432, 1, 1, "", "take"], [433, 1, 1, "", "take_along_axis"], [434, 1, 1, "", "tan"], [435, 1, 1, "", "tanh"], [436, 1, 1, "", "tensordot"], [437, 1, 1, "", "tile"], [438, 1, 1, "", "trace"], [439, 1, 1, "", "transpose"], [440, 1, 1, "", "tri"], [441, 1, 1, "", "tril"], [442, 1, 1, "", "tril_indices"], [443, 1, 1, "", "tril_indices_from"], [444, 1, 1, "", "triu"], [445, 1, 1, "", "triu_indices"], [446, 1, 1, "", "triu_indices_from"], [447, 1, 1, "", "true_divide"], [448, 1, 1, "", "trunc"], [449, 1, 1, "", "unique"], [450, 1, 1, "", "unpackbits"], [451, 1, 1, "", "unravel_index"], [452, 1, 1, "", "var"], [453, 1, 1, "", "vdot"], [454, 1, 1, "", "vsplit"], [455, 1, 1, "", "vstack"], [456, 1, 1, "", "where"], [457, 1, 1, "", "zeros"], [458, 1, 1, "", "zeros_like"]], "cupynumeric.broadcast": [[6, 3, 1, "", "index"], [6, 3, 1, "", "iters"], [6, 3, 1, "", "nd"], [6, 3, 1, "", "ndim"], [6, 3, 1, "", "numiter"], [6, 4, 1, "", "reset"], [6, 3, 1, "", "shape"], [6, 3, 1, "", "size"]], "cupynumeric.fft": [[98, 1, 1, "", "fft"], [99, 1, 1, "", "fft2"], [100, 1, 1, "", "fftn"], [101, 1, 1, "", "fftshift"], [102, 1, 1, "", "hfft"], [103, 1, 1, "", "ifft"], [104, 1, 1, "", "ifft2"], [105, 1, 1, "", "ifftn"], [106, 1, 1, "", "ifftshift"], [107, 1, 1, "", "ihfft"], [108, 1, 1, "", "irfft"], [109, 1, 1, "", "irfft2"], [110, 1, 1, "", "irfftn"], [111, 1, 1, "", "rfft"], [112, 1, 1, "", "rfft2"], [113, 1, 1, "", "rfftn"]], "cupynumeric.linalg": [[167, 1, 1, "", "cholesky"], [168, 1, 1, "", "eig"], [169, 1, 1, "", "eigh"], [170, 1, 1, "", "eigvals"], [171, 1, 1, "", "eigvalsh"], [172, 1, 1, "", "expm"], [173, 1, 1, "", "matrix_power"], [174, 1, 1, "", "multi_dot"], [175, 1, 1, "", "norm"], [176, 1, 1, "", "qr"], [177, 1, 1, "", "solve"], [178, 1, 1, "", "svd"]], "cupynumeric.ndarray": [[296, 0, 1, "", "C_CONTIGUOUS"], [216, 3, 1, "", "T"], [217, 4, 1, "", "__abs__"], [218, 4, 1, "", "__add__"], [219, 4, 1, "", "__and__"], [220, 4, 1, "", "__array__"], [221, 4, 1, "", "__bool__"], [222, 4, 1, "", "__complex__"], [223, 4, 1, "", "__contains__"], [224, 4, 1, "", "__copy__"], [225, 4, 1, "", "__deepcopy__"], [226, 4, 1, "", "__divmod__"], [227, 4, 1, "", "__eq__"], [228, 4, 1, "", "__float__"], [229, 4, 1, "", "__floordiv__"], [230, 4, 1, "", "__ge__"], [231, 4, 1, "", "__getitem__"], [232, 4, 1, "", "__gt__"], [233, 4, 1, "", "__iadd__"], [234, 4, 1, "", "__iand__"], [235, 4, 1, "", "__ifloordiv__"], [236, 4, 1, "", "__ilshift__"], [237, 4, 1, "", "__imatmul__"], [238, 4, 1, "", "__imod__"], [239, 4, 1, "", "__imul__"], [240, 4, 1, "", "__index__"], [4, 4, 1, "", "__init__"], [241, 4, 1, "", "__int__"], [242, 4, 1, "", "__invert__"], [243, 4, 1, "", "__ior__"], [244, 4, 1, "", "__ipow__"], [245, 4, 1, "", "__irshift__"], [246, 4, 1, "", "__isub__"], [247, 4, 1, "", "__itruediv__"], [248, 4, 1, "", "__ixor__"], [249, 4, 1, "", "__le__"], [250, 4, 1, "", "__len__"], [251, 4, 1, "", "__lshift__"], [252, 4, 1, "", "__lt__"], [253, 4, 1, "", "__matmul__"], [254, 4, 1, "", "__mod__"], [255, 4, 1, "", "__mul__"], [256, 4, 1, "", "__ne__"], [257, 4, 1, "", "__neg__"], [258, 4, 1, "", "__new__"], [259, 4, 1, "", "__or__"], [260, 4, 1, "", "__pos__"], [261, 4, 1, "", "__pow__"], [262, 4, 1, "", "__reduce__"], [263, 4, 1, "", "__repr__"], [264, 4, 1, "", "__rmatmul__"], [265, 4, 1, "", "__rshift__"], [266, 4, 1, "", "__setitem__"], [267, 4, 1, "", "__setstate__"], [268, 4, 1, "", "__str__"], [269, 4, 1, "", "__sub__"], [270, 4, 1, "", "__truediv__"], [271, 4, 1, "", "__xor__"], [272, 4, 1, "", "all"], [273, 4, 1, "", "any"], [274, 4, 1, "", "argmax"], [275, 4, 1, "", "argmin"], [276, 4, 1, "", "argpartition"], [277, 4, 1, "", "argsort"], [278, 4, 1, "", "astype"], [279, 3, 1, "", "base"], [280, 4, 1, "", "choose"], [281, 4, 1, "", "clip"], [282, 4, 1, "", "compress"], [283, 4, 1, "", "conj"], [284, 4, 1, "", "conjugate"], [285, 4, 1, "", "copy"], [286, 3, 1, "", "ctypes"], [287, 4, 1, "", "cumprod"], [288, 4, 1, "", "cumsum"], [289, 3, 1, "", "data"], [290, 4, 1, "", "diagonal"], [291, 4, 1, "", "dot"], [292, 3, 1, "", "dtype"], [293, 4, 1, "", "dump"], [294, 4, 1, "", "dumps"], [295, 4, 1, "", "fill"], [296, 3, 1, "", "flags"], [297, 3, 1, "", "flat"], [298, 4, 1, "", "flatten"], [299, 4, 1, "", "flip"], [300, 4, 1, "", "getfield"], [301, 3, 1, "", "imag"], [302, 4, 1, "", "item"], [303, 0, 1, "", "itemset"], [304, 3, 1, "", "itemsize"], [305, 4, 1, "", "max"], [306, 4, 1, "", "mean"], [307, 4, 1, "", "min"], [308, 3, 1, "", "nbytes"], [309, 3, 1, "", "ndim"], [310, 4, 1, "", "nonzero"], [311, 4, 1, "", "partition"], [312, 4, 1, "", "prod"], [313, 4, 1, "", "put"], [314, 4, 1, "", "ravel"], [315, 3, 1, "", "real"], [316, 4, 1, "", "reshape"], [317, 4, 1, "", "searchsorted"], [318, 4, 1, "", "setfield"], [319, 4, 1, "", "setflags"], [320, 3, 1, "", "shape"], [321, 3, 1, "", "size"], [322, 4, 1, "", "sort"], [323, 4, 1, "", "squeeze"], [324, 3, 1, "", "strides"], [325, 4, 1, "", "sum"], [326, 4, 1, "", "swapaxes"], [327, 4, 1, "", "take"], [328, 4, 1, "", "tobytes"], [329, 4, 1, "", "tofile"], [330, 4, 1, "", "tolist"], [331, 4, 1, "", "tostring"], [332, 4, 1, "", "trace"], [333, 4, 1, "", "transpose"], [334, 4, 1, "", "unique"], [335, 4, 1, "", "var"], [336, 4, 1, "", "view"]], "cupynumeric.random": [[1, 2, 1, "", "BitGenerator"], [2, 2, 1, "", "Generator"], [358, 1, 1, "", "beta"], [359, 1, 1, "", "binomial"], [360, 1, 1, "", "bytes"], [361, 1, 1, "", "chisquare"], [362, 1, 1, "", "default_rng"], [363, 1, 1, "", "exponential"], [364, 1, 1, "", "f"], [365, 1, 1, "", "gamma"], [366, 1, 1, "", "geometric"], [367, 1, 1, "", "gumbel"], [368, 1, 1, "", "hypergeometric"], [369, 1, 1, "", "laplace"], [370, 1, 1, "", "logistic"], [371, 1, 1, "", "lognormal"], [372, 1, 1, "", "logseries"], [373, 1, 1, "", "negative_binomial"], [374, 1, 1, "", "noncentral_chisquare"], [375, 1, 1, "", "noncentral_f"], [376, 1, 1, "", "normal"], [377, 1, 1, "", "pareto"], [378, 1, 1, "", "poisson"], [379, 1, 1, "", "power"], [380, 1, 1, "", "rand"], [381, 1, 1, "", "randint"], [382, 1, 1, "", "randn"], [383, 1, 1, "", "random"], [384, 1, 1, "", "random_integers"], [385, 1, 1, "", "random_sample"], [386, 1, 1, "", "ranf"], [387, 1, 1, "", "rayleigh"], [388, 1, 1, "", "sample"], [389, 1, 1, "", "seed"], [390, 1, 1, "", "standard_cauchy"], [391, 1, 1, "", "standard_exponential"], [392, 1, 1, "", "standard_gamma"], [393, 1, 1, "", "standard_t"], [394, 1, 1, "", "triangular"], [395, 1, 1, "", "uniform"], [396, 1, 1, "", "vonmises"], [397, 1, 1, "", "wald"], [398, 1, 1, "", "weibull"], [399, 1, 1, "", "zipf"]], "cupynumeric.random.BitGenerator": [[1, 4, 1, "", "__init__"]], "cupynumeric.random.Generator": [[2, 4, 1, "", "__init__"]]}, "objnames": {"0": ["py", "attribute", "Python attribute"], "1": ["py", "function", "Python function"], "2": ["py", "class", "Python class"], "3": ["py", "property", "Python property"], "4": ["py", "method", "Python method"], "5": ["py", "module", "Python module"]}, "objtypes": {"0": "py:attribute", "1": "py:function", "2": "py:class", "3": "py:property", "4": "py:method", "5": "py:module"}, "terms": {"": [2, 6, 14, 15, 29, 30, 35, 61, 69, 70, 71, 79, 99, 100, 104, 105, 109, 110, 112, 113, 114, 115, 148, 159, 175, 178, 206, 207, 208, 211, 212, 214, 289, 292, 302, 321, 328, 329, 333, 347, 355, 393, 399, 436, 437, 470, 478, 479, 482, 483, 484, 485, 487, 488, 489, 490, 491, 494, 497, 499, 502, 503, 504], "0": [3, 4, 14, 19, 21, 36, 41, 43, 48, 54, 55, 58, 68, 70, 75, 76, 78, 79, 80, 81, 83, 96, 99, 100, 101, 103, 104, 105, 110, 113, 116, 119, 141, 144, 173, 175, 179, 191, 192, 197, 203, 208, 212, 214, 221, 267, 290, 296, 300, 317, 318, 324, 325, 330, 332, 333, 335, 345, 347, 355, 358, 359, 361, 363, 364, 365, 367, 369, 370, 371, 372, 373, 374, 375, 376, 378, 379, 380, 381, 382, 383, 385, 386, 387, 388, 390, 393, 395, 396, 397, 398, 411, 412, 413, 415, 416, 424, 428, 430, 438, 440, 441, 442, 443, 444, 445, 446, 450, 452, 454, 470, 478, 481, 482, 483, 484, 485, 487, 488, 489, 490, 491, 497, 499, 500, 502, 503, 504, 505], "00": 504, "000": 504, "000001": 487, "000028": 491, "000029": 491, "0021705301478625403": 484, "01": [70, 504], "012924932": 504, "017": 493, "03": 481, "041000": 503, "05": [15, 148, 482, 504], "052000": 503, "07": [483, 497, 502], "075726": 481, "08": [15, 148, 481], "0b00000011": [345, 450], "0d": 496, "0x11403f190": 484, "1": [2, 3, 14, 16, 17, 19, 21, 31, 32, 36, 38, 40, 41, 43, 48, 54, 55, 56, 57, 61, 68, 69, 70, 71, 75, 76, 79, 80, 81, 83, 85, 94, 95, 98, 99, 100, 102, 103, 104, 105, 107, 108, 109, 110, 111, 112, 113, 118, 130, 135, 136, 137, 138, 139, 143, 144, 145, 160, 174, 175, 176, 179, 191, 193, 197, 206, 207, 211, 212, 214, 215, 276, 277, 285, 296, 297, 298, 302, 311, 312, 317, 322, 324, 333, 344, 345, 346, 347, 348, 353, 355, 358, 359, 361, 363, 365, 366, 367, 368, 369, 370, 371, 372, 373, 375, 376, 377, 378, 379, 380, 382, 383, 384, 385, 386, 387, 388, 391, 392, 395, 397, 398, 399, 400, 403, 407, 411, 412, 414, 415, 422, 424, 427, 428, 433, 436, 437, 440, 449, 450, 453, 455, 470, 478, 479, 482, 483, 484, 485, 487, 488, 489, 490, 491, 493, 496, 497, 499, 500, 502, 503, 505], "10": [80, 81, 135, 136, 137, 182, 191, 482, 484, 487, 490, 491, 500, 502, 503, 504], "100": [70, 212, 347, 403, 481, 482, 483, 484, 487, 489, 499, 500, 503, 504], "1000": [482, 483, 489, 497, 503, 504], "10000": [180, 504], "100000": 504, "1000000": [482, 504], "10000000": 503, "100000000": 504, "1000000k": 504, "100000k": 504, "10000k": 504, "101": 503, "1024": [470, 490], "1083": 504, "10k": 493, "11": [477, 493, 502, 504], "1100": 504, "11432": 504, "11680": 504, "12": [3, 8, 81, 493, 494, 496, 502], "12000": 504, "1202": 504, "123": 503, "1241": 504, "125": 376, "126": 490, "128": [490, 503], "129": 493, "13": [488, 493, 504], "1300": 504, "13012": 504, "134217728": 470, "135": 481, "14": [3, 488, 503], "14000": 504, "141": 504, "15": [81, 175, 489, 504], "150": 504, "15000": 504, "15000x15000": 504, "15973827": 496, "16": [3, 8, 403, 481, 485, 504], "16000": 504, "16969": 504, "17": 3, "173": 503, "17617": 504, "18": [3, 8, 172, 304, 491], "19": 3, "1956": 397, "196": 481, "1970": 504, "1984": 494, "1985": 175, "1992": 484, "1995": 494, "1996": [212, 214, 347, 355], "1997": 482, "1998": 494, "1d": [41, 57, 353, 406, 433, 437], "1d00000000000001": 491, "1e": [15, 148, 483, 484, 488], "1e00000000000000": 491, "2": [3, 39, 40, 48, 56, 68, 69, 75, 76, 77, 78, 79, 80, 81, 83, 84, 85, 92, 96, 99, 102, 103, 104, 107, 108, 109, 110, 111, 112, 113, 114, 118, 119, 130, 136, 160, 163, 168, 169, 170, 171, 174, 175, 176, 178, 184, 186, 193, 197, 212, 214, 324, 333, 347, 355, 363, 366, 374, 398, 403, 412, 414, 424, 436, 437, 438, 455, 470, 478, 481, 482, 483, 484, 485, 487, 488, 489, 490, 493, 494, 495, 496, 502, 503, 505], "20": [81, 324, 377, 488, 490, 504], "200": [376, 504], "2000": [494, 504], "20000": 504, "2000000": 504, "2000000k": 504, "2001": [363, 376], "2004": [478, 494], "2005": 494, "2006": 478, "2015": 494, "2017": 494, "2020": 504, "2024": [482, 483, 489], "2025": 494, "2048": 492, "21": [3, 304, 504], "2193": 504, "22": [3, 504], "2204460492503131e": 403, "225": 504, "22500x22500": 504, "23": [3, 497, 502], "2316419": 482, "2350": 504, "24": [491, 493], "24000": 504, "2461": 489, "249": 503, "25": [477, 490, 503], "250": 503, "25001932": 504, "255": [3, 8, 80, 485, 504], "256": [487, 503], "259": 504, "2593": 504, "26": [482, 499], "27": 499, "273": 489, "275": 504, "277": 483, "28": [3, 499], "280": 482, "29": 3, "294165": 504, "2960": 504, "2d": [114, 333, 412, 490, 502, 503], "2x": 488, "2x2": 488, "2y": 488, "3": [3, 40, 69, 80, 81, 83, 84, 85, 130, 139, 160, 193, 197, 212, 214, 324, 345, 347, 355, 363, 414, 424, 432, 436, 437, 450, 455, 482, 483, 484, 485, 487, 488, 489, 493, 494, 496, 502, 503, 505], "30": 504, "300": 504, "30000": 504, "30000x30000": 504, "303000": 503, "31": [483, 499], "3110": 504, "31938153": 482, "32": [8, 213, 324, 479, 490, 504], "320": 487, "33": 499, "330274429": 482, "35": 504, "3550": 504, "356563782": 482, "36": 484, "361": [212, 214, 347, 355], "365": [212, 214, 347, 355], "37": 70, "38": [3, 503], "38000": 504, "39": 488, "39894228040143267793994605993438": 482, "3d": [502, 503], "3e": 70, "3rd": 84, "4": [3, 80, 81, 83, 145, 193, 212, 214, 324, 347, 355, 436, 437, 453, 482, 483, 484, 485, 487, 488, 489, 490, 491, 496, 500, 502, 503, 504, 505], "40": [324, 489, 504], "40000": 504, "4096": 470, "42": [3, 8, 487, 502], "434": 504, "4378": 504, "443": [3, 8], "45": [8, 482], "457": 504, "466": 504, "47": 3, "48000": 504, "49": [8, 504], "499": 503, "4f": 504, "4th": [363, 376], "4x": 504, "4y": 488, "5": [80, 81, 83, 160, 193, 212, 214, 324, 347, 355, 437, 482, 483, 484, 485, 487, 489, 491, 502, 504], "50": [179, 191, 212, 214, 347, 355, 503, 504], "500": [503, 504], "50000": 504, "50000x50000": 504, "5050": 504, "50625": 504, "50e": 504, "51": 376, "5384": 504, "5460": 504, "5596": 504, "57": 363, "573000": 503, "6": [3, 80, 81, 152, 212, 214, 324, 347, 355, 481, 482, 483, 484, 487, 488, 489], "600": 490, "6040": 504, "613000": 503, "62": [3, 8], "6368": 504, "64": [213, 503, 504], "655000": 503, "65536": 470, "659": 482, "69664": 504, "6f": 503, "7": [3, 80, 193, 212, 214, 319, 324, 347, 355, 482, 484, 487, 488], "70": 504, "70000": 504, "713": 504, "716000": 503, "725": 504, "748000": 503, "749": 503, "75": 503, "750": 503, "75625": 504, "75625x75625": 504, "767": 504, "769000": 503, "776000": 503, "781477937": 482, "790000": 503, "7f0524da9740": 491, "7fda18f26000": 491, "7fe90fa7d740": 491, "8": [80, 176, 212, 214, 324, 347, 355, 484, 487, 494, 504], "80": 377, "8000": 504, "805182": 491, "8192": 470, "821255978": 482, "8388608": 491, "875": 489, "8850": 504, "9": [193, 212, 214, 324, 347, 355, 484, 485, 487, 503, 504], "90": 412, "902": 503, "919": 504, "926000": 503, "961": 504, "993": 504, "999": 503, "A": [1, 8, 12, 13, 14, 18, 19, 20, 22, 23, 24, 25, 26, 27, 28, 34, 43, 44, 45, 46, 51, 52, 53, 57, 59, 60, 61, 63, 64, 65, 66, 68, 70, 71, 72, 73, 74, 82, 87, 90, 91, 92, 94, 97, 99, 103, 104, 115, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 129, 130, 131, 132, 136, 137, 140, 146, 147, 151, 153, 154, 155, 156, 162, 163, 164, 165, 166, 172, 175, 176, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 192, 193, 194, 196, 198, 199, 200, 202, 203, 206, 207, 210, 213, 215, 278, 293, 296, 297, 298, 299, 302, 319, 324, 328, 331, 338, 339, 341, 344, 349, 350, 356, 357, 362, 378, 382, 393, 400, 404, 405, 407, 408, 409, 412, 413, 418, 419, 420, 421, 424, 425, 426, 429, 432, 434, 435, 437, 439, 447, 448, 450, 452, 470, 483, 484, 487, 491, 494, 497, 503, 504], "AND": [14, 44, 187, 494], "AS": [482, 483, 489, 494], "And": [488, 505], "As": [324, 329, 393, 397, 478, 489, 496, 502, 503, 504], "At": [12, 13, 22, 23, 24, 25, 26, 27, 28, 44, 45, 46, 52, 53, 59, 60, 63, 65, 66, 72, 73, 82, 90, 91, 92, 94, 97, 120, 121, 122, 123, 124, 125, 126, 129, 131, 132, 140, 147, 151, 153, 154, 162, 163, 164, 165, 166, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 194, 198, 199, 200, 202, 338, 339, 341, 349, 350, 356, 357, 404, 405, 408, 409, 418, 419, 420, 421, 425, 426, 429, 434, 435, 447, 448, 483], "BE": 494, "BUT": 494, "BY": 494, "But": [502, 503], "By": [16, 17, 29, 30, 31, 32, 37, 68, 69, 99, 104, 113, 172, 179, 191, 204, 205, 208, 213, 278, 346, 400, 406, 410, 422, 432, 439, 440, 442, 445, 452, 470, 478, 490, 503, 504, 505], "FOR": 494, "For": [12, 13, 21, 22, 23, 24, 25, 26, 27, 28, 36, 40, 44, 45, 46, 52, 53, 55, 59, 60, 61, 63, 65, 66, 70, 71, 72, 73, 74, 76, 80, 81, 82, 85, 86, 90, 91, 92, 94, 97, 98, 102, 103, 105, 108, 109, 111, 112, 114, 118, 119, 120, 121, 122, 123, 124, 125, 126, 129, 131, 132, 139, 140, 147, 148, 151, 153, 154, 162, 163, 164, 165, 166, 173, 175, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 194, 195, 197, 198, 199, 200, 202, 203, 204, 205, 206, 207, 209, 213, 262, 267, 304, 324, 333, 338, 339, 341, 349, 350, 356, 357, 376, 404, 405, 408, 409, 414, 418, 419, 420, 421, 424, 425, 426, 428, 429, 434, 435, 447, 448, 452, 455, 466, 478, 484, 485, 487, 490, 491, 492, 493, 495, 497, 500, 503, 504, 505], "IF": 494, "IN": 494, "ITS": 494, "If": [1, 2, 12, 13, 14, 15, 16, 17, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 34, 35, 41, 42, 43, 44, 45, 46, 47, 48, 49, 52, 53, 54, 55, 57, 58, 59, 60, 61, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 79, 80, 81, 82, 83, 86, 87, 90, 91, 92, 94, 96, 97, 98, 99, 100, 102, 103, 104, 105, 107, 108, 110, 111, 113, 114, 117, 120, 121, 122, 123, 124, 125, 126, 129, 130, 131, 132, 133, 134, 135, 136, 137, 140, 142, 143, 144, 145, 146, 147, 148, 151, 152, 153, 154, 155, 156, 157, 161, 162, 163, 164, 165, 166, 168, 169, 170, 171, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 193, 194, 195, 196, 197, 198, 199, 200, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 267, 278, 299, 317, 329, 330, 333, 337, 338, 339, 341, 344, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 384, 385, 386, 387, 388, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 402, 403, 404, 405, 407, 408, 409, 410, 411, 413, 415, 418, 419, 420, 421, 422, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 440, 447, 448, 449, 452, 453, 478, 479, 484, 487, 488, 491, 499, 502, 503, 504], "In": [2, 61, 69, 70, 71, 86, 103, 104, 105, 108, 110, 167, 179, 191, 192, 197, 206, 207, 212, 213, 214, 215, 346, 347, 351, 352, 355, 377, 395, 397, 407, 422, 430, 440, 478, 482, 483, 484, 486, 487, 490, 497, 502, 503, 504], "It": [6, 14, 19, 20, 21, 29, 30, 31, 32, 42, 47, 51, 54, 55, 70, 71, 81, 122, 169, 171, 196, 204, 205, 206, 207, 210, 212, 214, 215, 296, 347, 351, 354, 355, 358, 363, 366, 369, 377, 396, 413, 416, 430, 432, 433, 452, 484, 490, 495, 502, 503, 504, 505], "Its": [55, 57, 353, 363, 438], "NO": 494, "NOT": [147, 188, 389, 494, 504], "No": [167, 503], "Not": [55, 151, 206, 207, 213, 215, 502], "OF": [482, 483, 489, 494], "ON": [479, 494], "OR": [19, 45, 189, 482, 483, 489, 493, 494], "On": 491, "One": [38, 39, 40, 213, 281, 407, 491, 502], "Ones": [34, 206], "Or": 436, "SUCH": 494, "Such": 491, "THE": 494, "TO": 494, "That": 192, "The": [2, 6, 7, 14, 15, 16, 17, 18, 19, 20, 21, 31, 32, 34, 36, 37, 41, 42, 43, 47, 48, 49, 50, 51, 54, 55, 56, 58, 61, 64, 67, 68, 69, 70, 71, 74, 75, 76, 78, 79, 80, 81, 83, 85, 86, 87, 89, 93, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 115, 117, 120, 127, 128, 130, 133, 134, 135, 136, 137, 139, 141, 142, 143, 144, 145, 148, 150, 152, 155, 156, 158, 161, 167, 168, 169, 170, 171, 173, 174, 175, 176, 178, 179, 180, 191, 192, 193, 195, 196, 197, 201, 203, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 267, 278, 286, 293, 296, 298, 299, 301, 304, 315, 319, 324, 328, 329, 330, 337, 342, 343, 345, 346, 347, 351, 352, 353, 355, 358, 362, 363, 364, 365, 366, 367, 369, 374, 376, 377, 378, 380, 381, 382, 384, 387, 390, 394, 395, 396, 397, 398, 399, 400, 402, 406, 407, 410, 411, 412, 413, 414, 416, 417, 422, 424, 427, 428, 430, 432, 433, 436, 437, 438, 440, 442, 443, 445, 446, 449, 450, 451, 452, 453, 455, 457, 458, 459, 479, 480, 481, 482, 484, 485, 487, 488, 490, 491, 493, 494, 496, 499, 500, 502, 503, 504], "Then": [54, 192, 503, 505], "There": [179, 319, 449, 479, 481, 488, 502, 504], "These": [20, 49, 68, 86, 87, 197, 201, 296, 319, 353, 433, 490, 493, 496, 504], "To": [102, 108, 110, 333, 385, 386, 388, 478, 482, 483, 484, 487, 488, 489, 493, 495, 500, 502, 503, 504], "WITH": 494, "With": [14, 16, 17, 19, 29, 30, 41, 67, 175, 195, 196, 204, 205, 208, 209, 210, 211, 212, 213, 214, 215, 347, 351, 355, 430, 452, 490, 492, 503, 504], "_": [411, 484, 502, 503, 504], "__abs__": 0, "__add__": 0, "__and__": 0, "__array__": [0, 34, 336], "__array_function__": [0, 440], "__array_ufunc__": 0, "__bool__": 0, "__buffer__": 0, "__complex__": 0, "__contains__": 0, "__copy__": 0, "__deepcopy__": 0, "__divmod__": 0, "__dlpack__": 0, "__dlpack_device__": 0, "__eq__": 0, "__float__": 0, "__floordiv__": 0, "__format__": 0, "__ge__": 0, "__getitem__": 0, "__gt__": 0, "__hash__": 0, "__iadd__": 0, "__iand__": 0, "__ifloordiv__": 0, "__ilshift__": 0, "__imatmul__": 0, "__imod__": 0, "__imul__": 0, "__index__": 0, "__init__": [0, 1, 2, 4, 499], "__int__": 0, "__invert__": 0, "__ior__": 0, "__ipow__": 0, "__irshift__": 0, "__isub__": 0, "__iter__": 0, "__itruediv__": 0, "__ixor__": 0, "__le__": 0, "__len__": 0, "__lshift__": 0, "__lt__": 0, "__main__": [503, 504], "__matmul__": 0, "__mod__": 0, "__mul__": 0, "__name__": [485, 503, 504], "__ne__": 0, "__neg__": 0, "__or__": 0, "__pos__": 0, "__pow__": 0, "__radd__": 0, "__rand__": 0, "__rdivmod__": 0, "__reduce__": 0, "__reduce_ex__": 0, "__repr__": 0, "__rfloordiv__": 0, "__rmatmul__": 0, "__rmod__": 0, "__rmul__": 0, "__ror__": 0, "__rpow__": 0, "__rshift__": 0, "__rsub__": 0, "__rtruediv__": 0, "__rxor__": 0, "__setitem__": 0, "__setstate__": 0, "__sizeof__": 0, "__str__": 0, "__sub__": 0, "__truediv__": 0, "__xor__": 0, "_f": 175, "a0": 344, "a1": [35, 58, 344, 482, 484], "a100": 492, "a2": [35, 58, 482, 484], "a3": 482, "a4": 482, "a5": 482, "a_": [175, 484], "a_ax": 436, "a_cpn": 503, "a_max": 55, "a_min": 55, "a_swap": 431, "aand": 482, "aarch64": [493, 504], "ab": [15, 173, 175, 217, 482], "abandon": 478, "abil": 504, "abl": [175, 478, 503, 504], "about": [103, 296, 319, 470, 478, 483, 487, 493, 495, 497, 503, 504], "abov": [54, 75, 78, 100, 105, 110, 113, 195, 203, 209, 213, 215, 351, 377, 381, 384, 440, 441, 452, 482, 490, 491, 494, 503, 504], "abramowitz": 482, "abrupt": 485, "absolut": [0, 3, 8, 15, 97, 148, 403], "abstract": 490, "ac": [482, 485], "acceler": [143, 470, 491, 492, 503, 504], "accept": [359, 478, 496, 502], "access": [76, 77, 192, 296, 302, 319, 490, 491, 503, 504], "accomod": 484, "accord": [41, 113, 168, 169, 170, 171, 319, 439], "accordingli": [69, 193, 503], "account": [152, 400, 407, 490, 491, 504], "acct": 504, "acct_nam": 504, "accumul": [70, 71, 206, 207, 213, 215, 351, 430, 438, 496, 503], "accur": [130, 483, 484, 491, 503], "accuraci": [103, 104, 105, 108, 110, 484, 488, 504], "achiev": [333, 366, 490, 492], "aco": [3, 8], "acosh": [3, 8], "across": [487, 490, 503, 504], "action": 494, "activ": [493, 504], "actual": [167, 319, 485, 490, 491, 497, 503, 504], "ad": [15, 333, 377, 490, 499, 503], "adapt": 494, "add": [0, 3, 8, 385, 386, 388, 450, 478, 496, 502, 503, 504, 505], "add_argu": [503, 504], "addit": [2, 68, 167, 172, 177, 333, 449, 470, 481, 484, 485, 488, 490, 491, 493, 495, 502, 503, 504], "addition": [362, 479, 496, 502, 504], "address": [432, 478, 504], "adjac": [21, 490, 504], "advanc": [470, 480, 491, 496, 501], "advantag": [503, 504], "advis": 494, "affect": [21, 143, 152, 319, 484, 503], "afford": [491, 504], "after": [85, 114, 193, 212, 214, 324, 339, 347, 355, 410, 414, 455, 478, 481, 490, 499, 502, 503], "afterward": 503, "again": 336, "against": [6, 14, 15, 16, 17, 19, 29, 30, 41, 49, 50, 67, 143, 152, 175, 195, 196, 204, 205, 208, 209, 210, 211, 212, 213, 214, 215, 347, 351, 353, 355, 430, 433, 452], "aggreg": [503, 504], "agre": [478, 482, 483, 489], "ai": 504, "aim": 492, "alaska": 494, "algebra": [86, 459, 468, 479, 503], "algo_canny_edge_detector": 485, "algorithm": [1, 32, 86, 87, 98, 103, 111, 143, 152, 411, 422, 470, 484, 485, 486, 488, 503, 504], "alia": [331, 383], "alias": 103, "align": [296, 319, 503, 504], "all": [0, 3, 8, 16, 17, 19, 41, 48, 54, 56, 64, 68, 80, 81, 85, 86, 87, 91, 92, 94, 96, 100, 101, 105, 106, 110, 113, 114, 117, 130, 136, 137, 139, 141, 159, 160, 167, 179, 191, 192, 193, 195, 197, 204, 205, 206, 207, 208, 209, 211, 213, 215, 278, 283, 295, 296, 299, 319, 330, 351, 395, 403, 410, 414, 416, 427, 430, 432, 438, 452, 455, 470, 478, 479, 481, 487, 489, 490, 494, 499, 503, 504, 505], "allclos": [0, 3, 8, 499], "allevi": 504, "alloc": [12, 13, 22, 23, 24, 25, 26, 27, 28, 44, 45, 46, 52, 53, 59, 60, 63, 65, 66, 72, 73, 82, 90, 91, 92, 94, 97, 120, 121, 122, 123, 124, 125, 126, 129, 131, 132, 140, 147, 151, 153, 154, 155, 156, 162, 163, 164, 165, 166, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 194, 198, 199, 200, 202, 278, 338, 339, 341, 349, 350, 356, 357, 404, 405, 408, 409, 418, 419, 420, 421, 425, 426, 429, 434, 435, 447, 448, 491, 501, 503, 505], "allow": [16, 17, 36, 48, 64, 83, 86, 135, 145, 180, 193, 196, 208, 210, 211, 212, 214, 278, 347, 355, 432, 436, 440, 453, 478, 485, 490, 503, 504], "alon": 504, "along": [6, 14, 16, 17, 19, 20, 29, 30, 31, 32, 41, 48, 57, 58, 67, 70, 71, 74, 76, 80, 84, 85, 98, 99, 100, 102, 103, 104, 105, 107, 108, 110, 111, 113, 114, 117, 118, 119, 130, 136, 137, 138, 139, 144, 146, 175, 179, 191, 195, 196, 197, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 274, 275, 282, 299, 305, 306, 307, 324, 327, 332, 335, 347, 351, 353, 355, 406, 410, 412, 414, 423, 424, 428, 430, 432, 433, 436, 437, 438, 442, 443, 445, 446, 449, 450, 452, 454, 455, 503, 504], "alongsid": 503, "alpha": [358, 484, 487], "alreadi": [39, 40, 196, 210, 296, 337, 344, 449, 478], "also": [21, 68, 80, 86, 100, 105, 110, 113, 143, 172, 193, 201, 296, 336, 359, 364, 370, 377, 379, 387, 390, 396, 399, 432, 449, 464, 466, 478, 481, 483, 488, 489, 490, 491, 493, 495, 496, 500, 502, 503, 504], "alter": 296, "altern": [14, 16, 17, 19, 70, 71, 195, 196, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 347, 351, 355, 363, 413, 430, 452, 470], "although": [106, 330, 490], "alwai": [54, 79, 84, 120, 138, 159, 168, 169, 170, 171, 180, 329, 427, 454, 470, 478, 491], "am": [344, 478], "amax": [0, 3, 8, 43, 208, 305], "amd": 504, "american": [212, 214, 347, 355], "amin": [0, 3, 8, 211, 307], "among": [286, 504], "amongst": 6, "amount": [491, 504], "an": [2, 6, 12, 13, 14, 16, 17, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 34, 36, 37, 38, 39, 40, 41, 42, 44, 45, 46, 47, 48, 51, 52, 53, 54, 55, 57, 58, 59, 60, 61, 62, 63, 65, 66, 68, 70, 71, 72, 73, 74, 76, 77, 79, 81, 82, 83, 86, 87, 90, 91, 92, 93, 94, 95, 96, 97, 99, 100, 102, 103, 104, 105, 108, 110, 111, 113, 114, 117, 120, 121, 122, 123, 124, 125, 126, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 140, 143, 144, 145, 147, 150, 151, 152, 153, 154, 158, 160, 161, 162, 163, 164, 165, 166, 175, 177, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 224, 225, 267, 280, 281, 282, 286, 294, 299, 302, 311, 316, 317, 321, 322, 324, 327, 329, 330, 333, 334, 336, 337, 338, 339, 341, 343, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 359, 361, 363, 364, 366, 375, 380, 382, 397, 399, 400, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 444, 445, 447, 448, 449, 451, 452, 454, 456, 458, 466, 470, 478, 479, 481, 482, 483, 485, 487, 488, 489, 490, 491, 493, 494, 496, 497, 499, 503, 504], "analog": [104, 105], "analogu": [363, 396], "analysi": [491, 503], "angl": [0, 3, 8, 72, 73, 356, 357, 403], "ani": [0, 3, 6, 8, 12, 13, 14, 16, 17, 20, 21, 22, 23, 24, 25, 26, 27, 28, 34, 36, 37, 44, 45, 46, 48, 49, 52, 53, 54, 59, 60, 63, 64, 65, 66, 68, 70, 71, 72, 73, 74, 80, 81, 82, 86, 87, 90, 91, 92, 94, 97, 99, 100, 104, 105, 110, 113, 114, 115, 120, 121, 122, 123, 124, 125, 126, 127, 129, 130, 131, 132, 139, 140, 143, 147, 149, 150, 151, 152, 153, 154, 157, 158, 159, 160, 162, 163, 164, 165, 166, 173, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 193, 194, 195, 198, 199, 200, 202, 204, 205, 206, 207, 208, 209, 211, 213, 215, 278, 279, 286, 287, 288, 292, 296, 297, 299, 300, 305, 307, 312, 318, 325, 328, 330, 338, 339, 341, 349, 350, 351, 356, 357, 395, 404, 405, 406, 408, 409, 416, 418, 419, 420, 421, 425, 426, 429, 430, 434, 435, 438, 447, 448, 452, 478, 481, 482, 483, 489, 490, 494, 500, 502, 503], "annot": 503, "anoth": [6, 37, 64, 296, 319, 491, 504], "anova": 364, "answer": 504, "anti": 502, "anyth": [304, 481], "ap": 482, "apach": [478, 482, 483, 489], "api": [296, 319, 383, 470, 479, 484, 485, 488, 491, 492, 495, 497, 498, 500, 501, 504], "appear": [42, 47, 93, 118, 119, 133, 134, 161, 278, 449, 478], "append": [0, 3, 8, 79, 80, 87, 146, 193, 490, 502, 504], "appli": [41, 74, 115, 203, 436, 484, 485, 496, 502, 503, 504], "applic": [482, 483, 489, 490, 497, 499, 501, 504, 505], "apply_along_axi": [3, 8], "apply_over_ax": [3, 8], "approach": [152, 397, 478, 490, 502, 504], "appropri": [29, 30, 48, 54, 81, 204, 205, 296, 319, 381, 384, 432, 466, 478, 490, 504], "approx": 504, "approxim": [482, 484], "ar": [13, 14, 15, 16, 17, 19, 20, 21, 27, 29, 30, 33, 35, 37, 38, 39, 40, 41, 42, 44, 45, 46, 48, 49, 54, 55, 56, 57, 58, 61, 63, 64, 67, 68, 69, 70, 71, 75, 79, 80, 81, 82, 83, 86, 87, 90, 96, 99, 100, 102, 103, 104, 105, 108, 110, 113, 116, 117, 118, 119, 120, 122, 123, 124, 125, 129, 131, 132, 135, 136, 137, 140, 143, 145, 148, 152, 162, 163, 164, 165, 166, 167, 173, 175, 178, 179, 185, 186, 187, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 278, 281, 296, 299, 302, 310, 317, 319, 329, 330, 333, 337, 339, 340, 341, 347, 348, 350, 351, 352, 353, 355, 358, 359, 361, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 381, 382, 384, 385, 386, 387, 388, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 405, 408, 410, 411, 413, 415, 416, 428, 429, 430, 432, 436, 438, 440, 443, 446, 447, 449, 450, 451, 452, 470, 478, 479, 481, 482, 484, 485, 487, 488, 490, 493, 494, 496, 497, 499, 502, 503, 504], "ar1": 143, "ar2": 143, "arang": [0, 3, 8, 503], "arbitrari": [88, 89, 296, 321], "arbitrarili": 296, "arc": 27, "arcco": [0, 3, 8], "arccosh": [0, 3, 8], "architectur": [490, 504], "archiv": 329, "arcsin": [0, 3, 8], "arcsinh": [0, 3, 8], "arctan": [0, 3, 8], "arctan2": [0, 3, 8, 18], "arctanh": [0, 3, 8], "area": [296, 319, 490], "arg": [12, 13, 22, 23, 24, 25, 26, 27, 28, 44, 45, 46, 49, 50, 52, 53, 59, 60, 63, 65, 66, 72, 73, 82, 90, 91, 92, 94, 97, 115, 120, 121, 122, 123, 124, 125, 126, 129, 131, 132, 140, 147, 151, 153, 154, 160, 162, 163, 164, 165, 166, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 194, 198, 199, 200, 202, 302, 338, 339, 341, 349, 350, 356, 357, 404, 405, 408, 409, 418, 419, 420, 421, 425, 426, 429, 434, 435, 447, 448, 482, 503, 504], "argmax": [0, 3, 8], "argmin": [0, 3, 8, 487], "argpars": [503, 504], "argpartit": [0, 3, 8, 353, 433], "argsort": [0, 3, 8, 31, 317, 353, 415, 433], "argument": [2, 12, 13, 18, 21, 22, 23, 24, 25, 26, 27, 28, 44, 45, 46, 52, 53, 55, 58, 59, 60, 61, 63, 65, 66, 72, 73, 81, 82, 83, 87, 90, 91, 92, 94, 97, 115, 120, 121, 122, 123, 124, 125, 126, 129, 131, 132, 135, 140, 142, 145, 147, 151, 152, 153, 154, 155, 156, 159, 162, 163, 164, 165, 166, 174, 179, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 197, 198, 199, 200, 202, 267, 278, 286, 302, 333, 336, 338, 339, 341, 349, 350, 356, 357, 380, 382, 402, 404, 405, 408, 409, 418, 419, 420, 421, 425, 426, 428, 429, 434, 435, 436, 440, 447, 448, 449, 453, 501, 503, 504], "argumentpars": [503, 504], "argwher": [0, 3, 8], "ari": [38, 39, 40, 424], "aris": [364, 494], "arithmet": [7, 54, 195, 209, 302, 468], "around": [3, 8, 352, 432, 504], "arr": [20, 51, 62, 74, 77, 95, 146, 196, 210, 296, 348, 353, 432, 433, 443, 446, 496], "arr_t": 278, "arrai": [0, 2, 6, 7, 12, 13, 14, 15, 16, 17, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 160, 161, 162, 163, 164, 165, 166, 168, 169, 170, 171, 172, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 220, 224, 225, 267, 276, 277, 278, 280, 281, 282, 285, 286, 289, 291, 292, 293, 294, 295, 296, 297, 298, 299, 301, 302, 306, 308, 309, 311, 312, 313, 314, 315, 316, 317, 319, 320, 321, 322, 324, 325, 326, 327, 328, 329, 330, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 371, 380, 381, 382, 384, 385, 386, 388, 395, 400, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 468, 470, 483, 484, 485, 487, 488, 489, 490, 491, 496, 497, 499, 503, 505], "array2str": [3, 8], "array_equ": [0, 3, 8], "array_equiv": [3, 8], "array_lik": [6, 12, 13, 14, 15, 16, 17, 18, 19, 20, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 37, 38, 39, 40, 41, 43, 44, 45, 46, 48, 49, 51, 52, 53, 55, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 77, 78, 79, 80, 81, 82, 83, 86, 87, 89, 90, 91, 92, 93, 94, 95, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 113, 114, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 128, 129, 130, 131, 132, 135, 136, 137, 140, 142, 143, 145, 146, 147, 148, 149, 151, 152, 153, 154, 155, 156, 157, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 193, 194, 195, 196, 197, 198, 199, 200, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 299, 317, 337, 338, 339, 340, 341, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 400, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 415, 417, 418, 419, 420, 421, 422, 423, 425, 426, 427, 428, 429, 430, 431, 432, 434, 435, 436, 437, 438, 439, 440, 441, 443, 447, 448, 449, 451, 452, 453, 456, 458], "array_of_diagon": 79, "array_repr": [3, 8], "array_split": [0, 3, 8], "array_str": [3, 8], "array_typ": 41, "arraylik": [55, 137, 416, 456], "articl": 478, "asanyarrai": 3, "asarrai": [0, 3, 8, 503], "asarray_chkfinit": [3, 8], "ascend": [169, 171, 317, 415], "ascontiguousarrai": 3, "asfortranarrai": 3, "asin": [3, 8], "asinh": [3, 8], "ask": [478, 492], "asmatrix": [3, 8], "aspect": 504, "aspir": 491, "assembl": 48, "assert": [484, 487, 502], "assign": [68, 295, 296, 490, 496, 503], "assoc": 487, "associ": [41, 135, 487, 494, 497, 502], "assum": [41, 69, 87, 143, 152, 172, 192, 479, 503], "assume_uniqu": [143, 152], "ast": 180, "astyp": [0, 3, 8, 80, 292, 485, 491, 503, 504], "asynchron": [353, 496, 497, 503], "atan": [3, 8], "atan2": [3, 8], "atanh": [3, 8], "atleast2d": 333, "atleast_1d": [0, 3, 8, 93], "atleast_2d": [0, 3, 8, 93], "atleast_3d": [0, 3, 8, 93], "atol": [15, 148], "attempt": [41, 81, 195, 208, 209, 211, 215, 296, 337, 452, 470, 502, 504], "attribut": [4, 7, 89, 128, 286, 296, 308, 343, 458], "author": 494, "auto": [61, 470], "autom": 478, "automat": [61, 143, 152, 174, 478, 479, 490, 493, 503, 504], "avail": [1, 2, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 217, 218, 219, 223, 224, 225, 226, 227, 229, 230, 232, 233, 234, 235, 236, 237, 238, 239, 242, 243, 244, 245, 246, 247, 248, 249, 251, 252, 253, 254, 255, 256, 257, 259, 260, 261, 263, 264, 265, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 280, 281, 282, 283, 284, 285, 290, 291, 293, 294, 295, 297, 298, 299, 302, 305, 306, 307, 310, 311, 312, 313, 314, 316, 317, 319, 322, 323, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 478, 479, 493, 502, 503, 504, 505], "averag": [0, 3, 8, 68, 195, 209, 306, 468, 489, 490, 504], "averaged_inverted_cdf": [212, 214, 347, 355], "avg": 41, "avoid": [39, 40, 278, 487, 491, 496], "awai": 503, "aweight": 68, "ax": [14, 16, 17, 19, 29, 30, 41, 48, 67, 69, 79, 80, 93, 99, 100, 101, 104, 105, 106, 109, 110, 112, 113, 117, 130, 145, 175, 177, 195, 196, 201, 204, 205, 208, 209, 210, 211, 212, 213, 214, 215, 299, 323, 333, 347, 351, 355, 410, 412, 430, 431, 436, 437, 438, 439, 452, 485, 503, 504], "axi": [14, 16, 17, 18, 19, 20, 29, 30, 31, 32, 36, 41, 57, 58, 67, 69, 70, 71, 74, 79, 80, 83, 84, 85, 93, 98, 99, 100, 102, 103, 104, 105, 107, 108, 109, 110, 111, 112, 113, 117, 118, 119, 130, 138, 139, 144, 146, 175, 179, 191, 195, 196, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 272, 273, 274, 275, 276, 277, 282, 287, 288, 299, 305, 306, 307, 311, 312, 322, 323, 324, 325, 327, 333, 335, 345, 346, 347, 351, 353, 355, 400, 406, 407, 410, 412, 414, 422, 423, 424, 427, 428, 430, 431, 432, 433, 437, 438, 449, 450, 452, 454, 455, 487, 503], "axis1": [79, 290, 326, 332, 431, 438], "axis2": [79, 290, 326, 332, 431, 438], "axisa": 69, "axisb": 69, "axisc": 69, "b": [6, 15, 35, 48, 69, 83, 85, 122, 139, 145, 148, 152, 177, 193, 296, 344, 358, 385, 386, 388, 414, 436, 453, 455, 478, 479, 484, 503, 504], "b0": 344, "b1": 344, "b_ax": 436, "b_cpn": 503, "ba": 54, "back": [31, 54, 159, 293, 294, 346, 400, 407, 470, 482, 488, 491, 499, 503, 504], "backend": 501, "backward": [79, 98, 99, 100, 102, 103, 104, 105, 107, 108, 109, 110, 111, 112, 113, 130, 278, 400], "bad": 368, "balanc": 504, "baltimor": 175, "bar": 502, "barba": 490, "bartlett": [0, 3, 8], "base": [1, 34, 61, 86, 143, 152, 182, 184, 186, 191, 278, 296, 319, 348, 354, 470, 478, 479, 487, 490, 491, 496, 503], "base_repr": [3, 8], "bash": 504, "bashrc": 504, "basi": [470, 482, 483, 489], "basic": [32, 422, 466, 468, 480, 490, 501, 502, 503], "batch": [98, 99, 100, 102, 103, 104, 105, 107, 108, 109, 110, 111, 112, 113, 168, 169, 170, 171, 177, 470, 503], "bayesian": 358, "bbox_to_anchor": 484, "bchoic": 54, "becaus": [21, 302, 376, 397, 482, 483, 489, 491, 496, 502, 503], "becom": [13, 27, 40, 44, 45, 46, 54, 55, 63, 82, 90, 120, 122, 123, 124, 125, 129, 131, 132, 140, 162, 163, 164, 165, 166, 185, 186, 187, 189, 190, 194, 198, 199, 202, 333, 339, 341, 350, 397, 405, 408, 429, 447, 503, 504, 505], "been": [85, 353, 384, 414, 433, 455, 491], "befor": [14, 16, 17, 19, 20, 41, 58, 61, 118, 119, 146, 195, 208, 209, 215, 296, 317, 351, 373, 410, 415, 430, 437, 452, 453, 488, 491, 493, 502, 503, 504], "begin": [179, 191, 480, 488, 504], "behav": [296, 352, 432], "behavior": [61, 81, 193, 328, 331, 353, 354, 381, 384, 437, 470, 490, 493, 501, 503, 504], "being": [21, 137, 427, 478, 491, 504], "bell": 376, "belong": [81, 136, 137, 487], "below": [68, 75, 78, 108, 175, 191, 319, 440, 441, 444, 470, 479, 482, 484, 488, 490, 499, 500, 502, 504, 505], "benchmark": [481, 491, 498, 501, 503, 504], "benefit": 503, "bernoulli": 366, "bessel": 161, "best": [87, 478, 491, 501], "beta": [0, 3, 8, 161, 363, 487], "better": [21, 54, 497, 503, 504], "between": [15, 21, 36, 80, 130, 179, 191, 212, 214, 329, 347, 355, 363, 369, 384, 397, 403, 484, 485, 487, 488, 490, 502, 503, 504], "beyond": [81, 410], "bham": 482, "bi": 136, "bia": 68, "big": [172, 345, 450, 482], "bigger": 504, "billion": 490, "bin": [43, 81, 135, 136, 137, 345, 450, 487, 493, 503, 504], "bin_area": 136, "bin_count": [136, 137], "bin_edg": 135, "bin_volum": 137, "binari": [180, 267, 329, 345, 450, 459, 468, 494], "binary_repr": [3, 8], "binaryio": 180, "binaryoptask": 491, "bincount": [0, 3, 8, 487], "binomi": [0, 3, 8, 373, 378], "bit": [1, 44, 45, 46, 147, 164, 188, 213, 324, 345, 408, 450, 468], "bit_gener": 2, "bitgener": [2, 3, 8, 362], "bitord": [345, 450], "bitwise_and": [0, 3, 8], "bitwise_count": [3, 8], "bitwise_invert": [3, 8], "bitwise_left_shift": [3, 8], "bitwise_or": [0, 3, 8], "bitwise_right_shift": [3, 8], "bitwise_xor": [0, 3, 8], "bla": 479, "black": [486, 487, 493], "black_schol": [481, 482, 493, 504], "blackman": [0, 3, 8], "block": [0, 3, 8, 85, 139, 324, 414, 455, 490, 495, 503], "block_arrai": 48, "blog": 491, "blue": [484, 487], "bmat": [3, 8], "bmatrix": 488, "bn": 344, "boilerpl": 504, "boldsymbol": 504, "bond": 504, "bool": [1, 3, 4, 8, 12, 13, 14, 15, 16, 17, 18, 19, 22, 23, 24, 25, 26, 27, 28, 29, 30, 34, 35, 36, 41, 44, 45, 46, 49, 51, 52, 53, 57, 59, 60, 63, 64, 65, 66, 67, 68, 72, 73, 74, 81, 82, 86, 87, 90, 91, 92, 94, 97, 114, 120, 121, 122, 123, 124, 125, 126, 129, 131, 132, 135, 136, 137, 140, 143, 144, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 162, 163, 164, 165, 166, 175, 178, 179, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 194, 195, 196, 197, 198, 199, 200, 202, 203, 204, 205, 208, 209, 210, 211, 212, 213, 214, 215, 267, 278, 305, 307, 312, 319, 325, 338, 339, 341, 347, 349, 350, 351, 355, 356, 357, 404, 405, 408, 409, 416, 418, 419, 420, 421, 425, 426, 429, 430, 434, 435, 447, 448, 449, 452, 456, 466, 470, 502], "bool_": [3, 8], "boolean": [14, 19, 64, 80, 148, 152, 154, 155, 156, 157, 160, 192, 319, 345, 354, 452, 487], "boolean_sequ": 160, "borrow": 296, "both": [13, 15, 20, 27, 41, 44, 45, 46, 61, 63, 68, 69, 82, 83, 90, 104, 120, 122, 123, 124, 125, 129, 131, 132, 140, 143, 145, 148, 152, 162, 163, 164, 165, 166, 175, 185, 186, 187, 189, 190, 193, 194, 197, 198, 199, 202, 296, 339, 341, 350, 364, 365, 375, 376, 405, 408, 429, 436, 438, 447, 479, 488, 491, 502], "bottleneck": 504, "bound": [57, 81, 352, 432], "boundari": [70, 71, 130, 206, 207, 395, 484, 489, 490, 497], "boundsmod": [54, 401, 432], "break": [487, 488, 502, 503], "bright": 504, "broadcast": [3, 7, 8, 12, 13, 14, 16, 17, 19, 22, 23, 24, 25, 26, 27, 28, 29, 30, 41, 44, 45, 46, 48, 49, 50, 51, 52, 53, 54, 55, 59, 60, 63, 64, 65, 66, 67, 72, 73, 82, 83, 90, 91, 92, 94, 97, 120, 121, 122, 123, 124, 125, 126, 129, 131, 132, 140, 145, 147, 151, 152, 153, 154, 155, 156, 162, 163, 164, 165, 166, 175, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 193, 194, 195, 196, 197, 198, 199, 200, 202, 204, 205, 208, 209, 210, 211, 212, 213, 214, 215, 338, 339, 341, 347, 349, 350, 351, 353, 355, 356, 357, 378, 404, 405, 406, 408, 409, 418, 419, 420, 421, 425, 426, 429, 430, 433, 434, 435, 436, 447, 448, 452, 453, 456, 459, 470, 496, 503, 504], "broadcast_arrai": [0, 3, 8], "broadcast_shap": [0, 3, 8], "broadcast_to": [0, 3, 8, 503], "brownian": 397, "bryan": 482, "bsd": 494, "buffer": [4, 16, 17, 54, 70, 71, 196, 206, 207, 208, 210, 211, 289, 296, 302, 319], "bug": [474, 475, 476], "build": [389, 468, 480, 487, 496, 503, 504], "built": [21, 479, 483, 491, 492, 503, 504], "builtin": 330, "bundl": 493, "busday_count": [3, 8], "busday_offset": [3, 8], "busdaycalendar": [3, 8], "busi": 494, "bypass": [329, 504], "byte": [0, 3, 8, 64, 86, 180, 193, 278, 308, 324, 328, 331, 345, 491], "bytes_": [3, 8], "bytesio": 329, "byteswap": 8, "c": [34, 48, 57, 69, 175, 193, 278, 286, 296, 298, 314, 316, 319, 328, 329, 331, 384, 397, 400, 401, 407, 437, 451, 478, 479, 482, 487, 493, 494, 503, 504], "c_": 68, "c_contigu": 296, "c_cpn": 503, "ca": 296, "calcul": [7, 12, 41, 61, 69, 80, 86, 91, 92, 94, 106, 130, 143, 152, 169, 171, 175, 179, 193, 196, 210, 212, 214, 321, 347, 351, 355, 452, 453, 479, 482, 487, 503, 504], "calculate_dist": 487, "call": [54, 81, 111, 174, 192, 196, 210, 224, 225, 286, 296, 319, 376, 432, 437, 470, 482, 483, 488, 491, 503, 504], "call_result": 482, "callabl": 192, "can": [14, 19, 20, 37, 41, 48, 64, 68, 69, 76, 79, 86, 87, 98, 99, 100, 103, 104, 105, 130, 139, 143, 150, 152, 158, 159, 160, 172, 173, 175, 179, 193, 196, 210, 212, 213, 214, 278, 286, 293, 296, 302, 304, 319, 324, 329, 336, 347, 353, 355, 377, 403, 407, 432, 433, 436, 438, 449, 466, 470, 478, 479, 481, 482, 483, 484, 485, 488, 489, 490, 492, 493, 495, 496, 500, 502, 503, 504, 505], "can_cast": [3, 8], "cannot": [58, 180, 204, 205, 296, 329, 411, 491, 503], "canon": [482, 488, 491], "capabl": [41, 493, 504], "care": 504, "carrai": 296, "cartesian": 197, "case": [14, 19, 21, 31, 32, 34, 41, 54, 61, 69, 70, 71, 79, 80, 81, 83, 102, 130, 144, 179, 191, 192, 197, 206, 207, 212, 213, 214, 215, 302, 319, 321, 345, 346, 347, 351, 352, 353, 355, 358, 381, 384, 385, 386, 387, 388, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 407, 422, 430, 433, 436, 440, 478, 486, 496, 499, 502, 503], "cast": [12, 13, 22, 23, 24, 25, 26, 27, 28, 44, 45, 46, 52, 53, 58, 59, 60, 63, 64, 65, 66, 70, 71, 72, 73, 80, 82, 86, 90, 91, 92, 94, 97, 120, 121, 122, 123, 124, 125, 126, 129, 131, 132, 140, 145, 147, 151, 153, 154, 162, 163, 164, 165, 166, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 193, 194, 195, 196, 198, 199, 200, 202, 203, 206, 207, 209, 210, 213, 215, 278, 292, 338, 339, 341, 344, 349, 350, 351, 356, 357, 404, 405, 408, 409, 413, 418, 419, 420, 421, 425, 426, 429, 430, 434, 435, 436, 447, 448, 452, 453, 488, 503], "castingkind": [12, 13, 22, 23, 24, 25, 26, 27, 28, 44, 45, 46, 52, 53, 58, 59, 60, 63, 65, 66, 72, 73, 82, 86, 90, 91, 92, 94, 97, 120, 121, 122, 123, 124, 125, 126, 129, 131, 132, 140, 147, 151, 153, 154, 162, 163, 164, 165, 166, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 193, 194, 198, 199, 200, 202, 338, 339, 341, 349, 350, 356, 357, 404, 405, 408, 409, 418, 419, 420, 421, 425, 426, 429, 434, 435, 447, 448], "cat": 491, "cauchi": 390, "caus": [289, 490, 494, 502], "cbrt": [0, 3, 8], "cdot": [488, 504], "cdoubl": [3, 8], "ceil": [0, 3, 8, 21], "cell": 490, "center": [61, 101, 396, 484, 487, 489, 504], "centr": 376, "central": [130, 374, 375, 376], "centroid": 487, "centroid_dot": 487, "centroid_mask": 487, "certain": [192, 324, 470, 503], "certif": 480, "certifi": 478, "cfd": 492, "cg": [481, 504], "chain": 174, "challeng": [490, 504], "chanc": 478, "chang": [63, 64, 86, 179, 193, 206, 207, 278, 296, 319, 333, 348, 353, 354, 400, 407, 468, 478, 485, 488, 492, 498, 501, 502, 503, 504, 505], "channel": [85, 139, 414, 455, 490, 493], "chapter": 495, "charact": [3, 8, 499], "characterist": 376, "charg": 494, "check": [71, 81, 150, 158, 167, 206, 207, 478, 485, 487, 488, 491, 493, 502, 504], "chi": [361, 364, 374, 387], "chisquar": [0, 3, 8], "choic": [3, 8, 54, 280, 329], "choicelist": 416, "choleski": [0, 3, 8, 481, 486, 500], "cholesky_tim": 483, "choos": [0, 3, 8, 27, 61, 87, 456, 491, 504], "chosen": [135, 456], "chuang": 490, "chunk": 503, "circl": 396, "circular": 396, "circumst": 296, "claim": [397, 494], "class": [1, 2, 4, 6, 14, 16, 17, 19, 34, 96, 141, 144, 195, 208, 211, 213, 278, 336, 342, 351, 386, 388, 430, 440, 459, 503], "classic": [86, 377], "claus": [494, 502], "clean": 490, "clear": 296, "clearli": 504, "clip": [0, 3, 8, 54, 352, 432], "clipped_arrai": 55, "clongdoubl": [3, 8, 302], "close": [47, 179, 278, 384, 403, 478, 491], "closest": 329, "closest_observ": [212, 214, 347, 355], "cluster": [486, 491, 492, 501], "cmap": [485, 504], "cnd": 482, "cnd_d1": 482, "cnd_d2": 482, "co": [0, 3, 8, 484], "coastal": 490, "code": [32, 48, 197, 422, 480, 481, 490, 492, 494, 495, 498, 501, 502, 503, 505], "codebas": 500, "coeffici": [177, 411, 482], "coercion": 115, "coin": 366, "collaps": [297, 298], "collect": [79, 289, 504], "coloc": 503, "color": [481, 484, 487], "colorama": 481, "column": [8, 34, 56, 68, 96, 114, 118, 119, 138, 139, 141, 168, 169, 174, 176, 298, 324, 333, 400, 440, 442, 445, 451, 499, 503, 504], "column_stack": [0, 3, 8], "com": [478, 485, 491, 494, 496, 504, 505], "combin": [93, 100, 105, 110, 113, 130, 136, 481, 497, 504], "combinatori": 87, "come": [449, 495, 504], "comm": 490, "comm_world": 490, "comma": [86, 481], "comman": 491, "command": [481, 491, 493, 495, 499, 503, 504, 505], "comment": 478, "commit": [478, 490], "common": [13, 27, 44, 45, 46, 54, 63, 82, 86, 90, 115, 120, 122, 123, 124, 125, 129, 131, 132, 140, 162, 163, 164, 165, 166, 185, 186, 187, 189, 190, 194, 198, 199, 202, 339, 341, 350, 363, 398, 405, 408, 429, 447, 502, 503, 504], "common_typ": [3, 8], "commonli": [376, 491, 502], "commun": [478, 490, 491, 502, 504], "compact": 486, "compactli": 484, "companion": 411, "compar": [15, 16, 17, 35, 148, 208, 211, 484, 504], "comparison": [7, 459, 468], "compat": [79, 278, 330, 331, 400, 407, 440, 503, 504], "compil": [319, 479, 503], "complet": [87, 212, 214, 347, 355, 479, 490, 492, 499, 504], "complex": [18, 35, 43, 59, 60, 70, 71, 81, 83, 98, 99, 100, 103, 104, 105, 107, 108, 111, 113, 142, 145, 149, 150, 157, 158, 168, 170, 203, 206, 207, 212, 214, 283, 284, 347, 355, 402, 403, 413, 423, 453, 466, 468, 490, 503, 504], "complex128": [3, 8], "complex256": [3, 8], "complex64": [3, 8, 503], "complexflo": [3, 8], "compli": 478, "complianc": [482, 483, 489], "complic": 490, "compon": [6, 35, 48, 69, 101, 142, 203, 402, 436, 502, 503, 504], "compos": 491, "compound": 482, "compress": [0, 3, 8, 329], "compressed_arrai": 57, "compuat": 499, "comput": [16, 17, 18, 41, 44, 45, 46, 61, 70, 71, 86, 97, 98, 99, 100, 102, 103, 104, 105, 107, 108, 109, 110, 111, 112, 113, 130, 135, 136, 137, 144, 147, 168, 169, 170, 171, 173, 174, 175, 176, 177, 178, 187, 188, 189, 190, 195, 196, 206, 207, 208, 209, 210, 211, 212, 213, 214, 344, 347, 355, 411, 434, 435, 436, 452, 470, 482, 483, 484, 485, 487, 488, 490, 491, 492, 496, 497, 502, 503], "computat": 504, "computation": 172, "compute_uv": 178, "concat": [3, 8], "concaten": [0, 3, 8, 48, 85, 139, 414, 455], "concern": 504, "conclud": [478, 490], "conclus": 490, "cond": [8, 502, 504], "conda": 479, "conda_override_cuda": 493, "condit": [12, 13, 22, 23, 24, 25, 26, 27, 28, 44, 45, 46, 52, 53, 57, 59, 60, 63, 65, 66, 72, 73, 82, 90, 91, 92, 94, 95, 97, 120, 121, 122, 123, 124, 125, 126, 129, 131, 132, 140, 147, 151, 153, 154, 162, 163, 164, 165, 166, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 194, 198, 199, 200, 202, 278, 282, 338, 339, 341, 348, 349, 350, 354, 356, 357, 394, 404, 405, 408, 409, 416, 418, 419, 420, 421, 425, 426, 429, 434, 435, 447, 448, 456, 482, 483, 484, 489, 490, 494, 497, 502, 504], "condition": 502, "condlist": 416, "conduct": 504, "configur": [470, 479, 480, 491, 495, 502, 505], "configurt": 491, "conj": [0, 3, 8], "conjug": [0, 3, 8, 59, 83, 108, 145, 167, 283, 453, 483], "connect": [494, 504], "consecut": 80, "consequ": [18, 453, 491], "consequenti": 494, "conserv": 197, "consid": [15, 35, 68, 70, 86, 87, 136, 148, 169, 171, 377, 484, 488, 504], "consider": [143, 152, 504], "consist": [14, 21, 61, 80, 179, 433, 478, 490, 503], "const": [502, 504], "constant": [130, 299], "constraint": [41, 503, 504], "construct": [7, 48, 54, 75, 117, 118, 119, 160, 280, 328, 362, 437], "constructor": [2, 466], "consum": [172, 308], "contact": 491, "contain": [2, 29, 30, 41, 43, 54, 55, 57, 64, 68, 69, 79, 80, 103, 116, 130, 135, 136, 144, 195, 196, 204, 205, 208, 209, 210, 211, 212, 214, 215, 267, 292, 316, 328, 329, 340, 347, 355, 400, 411, 413, 436, 442, 443, 445, 446, 449, 452, 466, 503, 504], "content": [43, 196, 210, 212, 214, 296, 319, 328, 329, 347, 355, 468, 503], "context": [482, 490], "contigu": [49, 51, 197, 278, 296, 298, 324, 328, 400, 407], "continu": [363, 364, 385, 386, 388, 394, 396, 482], "contour": 504, "contract": [86, 87, 479, 494], "contribut": [8, 41, 135, 480, 504], "contributor": [478, 494], "control": [58, 64, 86, 193, 278, 328, 481, 503, 505], "conveni": 329, "convent": [18, 86, 105, 193, 197], "converg": [168, 169, 170, 171, 178, 487, 488, 502, 504], "convers": [41, 64, 86, 193, 195, 208, 209, 211, 215, 278, 336, 337, 452], "convert": [14, 19, 37, 38, 39, 40, 72, 73, 146, 196, 210, 212, 214, 294, 329, 330, 333, 336, 347, 355, 356, 357, 411, 451, 484, 496, 503, 504], "convolut": [61, 485, 504], "convolv": [0, 8, 485, 504], "convolve_nd": [485, 504], "convolvemethodtyp": 61, "convolvemod": 61, "coord": 137, "coordin": [130, 136, 137, 197, 451, 487], "copi": [0, 3, 8, 20, 34, 37, 38, 39, 40, 48, 49, 57, 64, 74, 75, 79, 146, 197, 203, 224, 225, 278, 296, 297, 298, 302, 319, 328, 330, 346, 400, 407, 412, 422, 423, 441, 444, 478, 482, 483, 489, 491, 494, 501, 503, 504], "copyright": [478, 482, 483, 489, 494], "copysign": [0, 3, 8], "copyto": [0, 3, 8, 348], "core": [2, 470, 481, 482, 491, 495, 503, 504, 505], "corner": [104, 105, 504], "corpor": [482, 483, 489], "corrcoef": [3, 8], "correct": [20, 58, 428, 490, 503], "correctli": [14, 16, 17, 19, 27, 29, 30, 41, 67, 175, 195, 196, 204, 205, 208, 209, 210, 211, 212, 213, 214, 215, 347, 351, 355, 430, 452, 503, 504], "correl": [8, 468], "correspond": [8, 54, 58, 78, 79, 99, 100, 104, 105, 108, 110, 113, 130, 137, 144, 155, 156, 160, 168, 169, 192, 204, 205, 212, 214, 317, 345, 347, 355, 410, 415, 416, 417, 484, 485, 493, 496, 502, 503, 504], "correspondingli": [424, 491], "cosh": [0, 3, 8], "cosin": [22, 23, 47, 65, 66, 133, 134], "cost": [87, 490, 503], "costli": 87, "could": [502, 503], "count": [14, 19, 41, 43, 67, 117, 130, 135, 152, 215, 299, 351, 430, 450, 459, 468, 487, 503], "count_nonzero": [0, 3, 8], "counterclockwis": [18, 412], "cours": 492, "cov": [0, 3, 8], "covari": 68, "cover": [3, 8, 397, 478, 503], "coverag": [470, 498, 500, 501], "cp": 490, "cp_dst": 503, "cp_src": 503, "cpn": 503, "cpu": [1, 2, 3, 8, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 101, 106, 114, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 217, 218, 219, 223, 224, 225, 226, 227, 229, 230, 232, 233, 234, 235, 236, 237, 238, 239, 242, 243, 244, 245, 246, 247, 248, 249, 251, 252, 253, 254, 255, 256, 257, 259, 260, 261, 263, 264, 265, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 280, 281, 282, 283, 284, 285, 290, 291, 293, 294, 295, 297, 298, 299, 302, 305, 306, 307, 310, 311, 312, 313, 314, 316, 317, 319, 322, 323, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 479, 481, 488, 491, 492, 500, 502, 505], "cputsc": 495, "creat": [12, 13, 22, 23, 24, 25, 26, 27, 28, 34, 44, 45, 46, 52, 53, 54, 59, 60, 63, 65, 66, 72, 73, 78, 82, 87, 90, 91, 92, 94, 97, 120, 121, 122, 123, 124, 125, 126, 129, 131, 132, 140, 147, 151, 153, 154, 162, 163, 164, 165, 166, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 194, 198, 199, 200, 202, 203, 286, 292, 296, 338, 339, 341, 349, 350, 353, 356, 357, 380, 404, 405, 408, 409, 413, 418, 419, 420, 421, 425, 426, 429, 431, 434, 435, 447, 448, 478, 484, 489, 490, 493, 502, 503, 504], "create_subarrai": 490, "creation": [87, 296, 440, 459, 466, 468], "critic": [490, 504], "crop": [98, 99, 100, 102, 103, 104, 105, 107, 108, 110, 111, 113], "cross": [0, 3, 8, 160], "crucial": 504, "csingl": [3, 8], "csv": [470, 491, 499], "ct": 98, "ctx": 503, "cube": 52, "cubic": 87, "cubla": 470, "cuda": [470, 479, 481, 490, 493, 504], "cumbersom": 504, "cumprod": [0, 3, 8, 71, 206, 207, 496], "cumsum": [0, 3, 8], "cumul": [70, 71, 206, 207, 482, 504], "cumulative_prod": [3, 8], "cumulative_sum": [3, 8], "cunumer": 491, "cupi": [490, 503], "cupynumer": [0, 3, 7, 459, 464, 468, 470, 479, 481, 482, 483, 485, 487, 488, 489, 490, 493, 495, 496, 497, 499, 500, 501, 505], "cupynumeric_doctor": [470, 502], "cupynumeric_doctor_filenam": 470, "cupynumeric_doctor_format": 470, "cupynumeric_doctor_traceback": 470, "cupynumeric_fallback_stacktrac": 470, "cupynumeric_fast_math": 470, "cupynumeric_force_thunk": 470, "cupynumeric_matmul_cache_s": 470, "cupynumeric_max_eager_volum": 470, "cupynumeric_min_cpu_chunk": 470, "cupynumeric_min_gpu_chunk": 470, "cupynumeric_min_omp_chunk": 470, "cupynumeric_numpy_compat": [204, 205, 208, 211, 470], "cupynumeric_preload_cudalib": 470, "cupynumeric_report_coverag": [470, 499, 500], "cupynumeric_report_dump_callstack": [470, 499], "cupynumeric_report_dump_csv": [470, 499], "cupynumeric_root": 479, "cupynumeric_take_default": 470, "cupynumeric_warn": 470, "curand": 389, "curiou": 484, "current": [6, 31, 32, 61, 167, 176, 178, 180, 220, 296, 336, 346, 353, 406, 422, 440, 449, 470, 482, 491, 495, 496, 499, 502, 504, 505], "curv": [376, 484], "cusolv": 470, "cusolvermp": 177, "custom": [466, 479, 490, 503], "cycl": 160, "d": [2, 40, 41, 43, 56, 57, 61, 68, 70, 71, 75, 77, 78, 79, 83, 85, 96, 109, 112, 114, 118, 119, 137, 139, 143, 144, 145, 160, 174, 175, 193, 197, 206, 207, 208, 215, 285, 297, 298, 317, 333, 345, 348, 400, 407, 414, 415, 424, 430, 437, 438, 449, 450, 453, 455, 478, 479, 482, 483, 504], "d0": [380, 382], "d1": [380, 382, 482, 503], "d2": [482, 503], "d3": 503, "d_1": 504, "d_2": 504, "damag": 494, "data": [16, 17, 21, 33, 34, 37, 41, 58, 62, 64, 68, 78, 85, 86, 88, 89, 96, 98, 99, 100, 102, 103, 104, 105, 107, 108, 109, 110, 111, 112, 113, 115, 127, 128, 135, 136, 137, 139, 141, 144, 158, 168, 169, 170, 171, 177, 179, 180, 191, 192, 193, 195, 196, 203, 209, 210, 212, 213, 214, 215, 220, 267, 278, 286, 292, 296, 302, 304, 316, 319, 328, 329, 330, 333, 336, 342, 343, 347, 348, 351, 352, 353, 355, 400, 403, 407, 413, 414, 427, 430, 433, 438, 440, 441, 452, 455, 457, 458, 459, 468, 470, 487, 488, 490, 494, 497, 502, 503, 504], "data_loc": 503, "data_magnitude_squar": 487, "dataset": [135, 137, 504], "datatyp": [37, 115, 490, 501, 503], "date": 504, "datetim": [482, 483, 489], "datetime64": [3, 8], "datetime_as_str": [3, 8], "ddof": [68, 335, 452], "de": 376, "deadlock": 490, "deal": [494, 504], "dealloc": 296, "deb": 504, "debian": 494, "debug": [481, 490], "decai": 369, "decid": 470, "decim": 413, "declar": 503, "decompos": [126, 483, 490], "decomposit": [167, 178, 468, 486, 490], "decor": 503, "decreas": [81, 482, 488, 491], "decreasingli": [104, 105], "dedic": 491, "deep": [48, 225, 330, 490], "deepcopi": 225, "def": [482, 483, 485, 487, 488, 489, 490, 502, 503, 504], "default": [2, 12, 13, 14, 16, 17, 18, 19, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 34, 37, 41, 44, 45, 46, 52, 53, 54, 57, 58, 59, 60, 61, 63, 65, 66, 67, 68, 69, 70, 71, 72, 73, 75, 78, 79, 80, 81, 82, 86, 87, 88, 90, 91, 92, 94, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 117, 120, 121, 122, 123, 124, 125, 126, 127, 129, 130, 131, 132, 135, 136, 137, 140, 141, 143, 144, 147, 151, 152, 153, 154, 162, 163, 164, 165, 166, 169, 171, 172, 175, 178, 179, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 193, 194, 195, 196, 197, 198, 199, 200, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 267, 278, 298, 299, 328, 329, 338, 339, 341, 342, 345, 346, 347, 349, 350, 351, 355, 356, 357, 358, 359, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 381, 384, 385, 386, 387, 388, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 403, 404, 405, 406, 408, 409, 410, 412, 413, 416, 418, 419, 420, 421, 422, 424, 425, 426, 429, 430, 432, 434, 435, 438, 439, 440, 441, 442, 445, 447, 448, 449, 450, 452, 454, 457, 470, 481, 485, 487, 496, 503, 504, 505], "default_rng": [0, 2, 3, 8, 487], "defer": [470, 482, 483, 489, 491, 496], "defin": [54, 69, 74, 89, 128, 135, 146, 175, 203, 212, 214, 302, 343, 347, 355, 394, 403, 412, 440, 458, 478, 479, 482, 483, 485, 487, 488, 489, 502, 503, 504], "definit": [61, 103, 105, 167, 483, 504], "deg": [18, 172], "deg2rad": [0, 3, 8, 357], "degre": [3, 8, 18, 72, 356, 357, 361, 364, 374, 375, 393, 412, 452, 504], "delai": [502, 504], "delet": [0, 3, 8], "delta": [452, 487], "demand": 490, "democrat": 504, "demonstr": [500, 503, 504], "denomin": [364, 375], "denot": 8, "dens": [144, 484, 503], "densiti": [135, 136, 137, 363, 376], "dep": 479, "depend": [43, 75, 175, 177, 179, 193, 213, 384, 416, 456, 480, 491, 502, 503, 504], "depict": 504, "deprec": [384, 470, 474, 475, 476], "depth": [48, 84, 85, 330], "deriv": [130, 371, 376, 482, 484, 485, 494, 502, 504], "derivative_exact": 484, "descend": 178, "describ": [137, 175, 319, 363, 376, 411, 484, 491, 502], "descript": [103, 105, 135, 137, 278, 481, 503], "descriptor": 336, "design": [47, 365, 392, 501, 504], "desir": [34, 51, 80, 88, 127, 195, 208, 209, 211, 215, 342, 381, 437, 452, 457, 493, 505], "despit": 331, "dest": 490, "destin": [58, 64, 201, 353, 428], "det": [3, 8], "detail": [16, 17, 70, 71, 75, 77, 98, 103, 108, 109, 111, 112, 180, 197, 206, 207, 208, 211, 213, 215, 275, 286, 324, 351, 430, 442, 443, 444, 445, 446, 449, 466, 478, 481, 490, 491, 493, 495, 502, 503, 504], "detect": [486, 493, 503], "detector": 485, "determin": [34, 61, 70, 71, 79, 115, 177, 206, 207, 213, 319, 416, 438, 451, 485, 487, 488, 490, 503, 504], "determinist": [487, 496], "develop": [479, 490, 491, 492, 494, 504], "developercertif": 478, "deviat": [371, 376, 502], "devic": [490, 503, 504], "devin": 494, "df": [361, 374, 393], "dfden": [364, 375], "dfnum": [364, 375], "dft": [98, 103, 111], "dgx": 492, "diag": [0, 3, 8, 484, 496], "diag_indic": [0, 3, 8, 77], "diag_indices_from": [0, 3, 8], "diagflat": [0, 3, 8], "diagnos": 502, "diagon": [0, 3, 8, 75, 76, 77, 78, 96, 114, 141, 167, 169, 171, 332, 438, 440, 441, 442, 443, 444, 445, 446, 484], "diagram": [479, 504], "dictionari": 296, "did": 488, "diff": [0, 3, 8], "differ": [1, 15, 29, 30, 36, 37, 70, 71, 80, 98, 103, 106, 108, 109, 111, 112, 118, 119, 120, 130, 146, 175, 193, 197, 206, 207, 220, 292, 329, 353, 354, 369, 412, 433, 453, 468, 478, 479, 481, 486, 488, 489, 490, 497, 501, 502, 503, 504], "differenc": 80, "differenti": [487, 504], "difficult": [490, 504], "diffus": 504, "digit": [0, 3, 8], "dim": [296, 401], "dimens": [6, 14, 16, 17, 19, 29, 30, 34, 38, 39, 40, 41, 48, 54, 56, 57, 58, 61, 64, 67, 69, 76, 79, 80, 84, 85, 93, 114, 130, 136, 137, 138, 139, 144, 145, 155, 156, 160, 168, 169, 170, 171, 175, 176, 178, 193, 195, 196, 197, 204, 205, 208, 209, 210, 211, 212, 213, 214, 215, 296, 297, 298, 309, 320, 321, 324, 333, 337, 340, 345, 347, 351, 353, 355, 380, 382, 407, 410, 412, 414, 417, 424, 427, 428, 430, 433, 436, 437, 438, 439, 442, 443, 445, 446, 449, 450, 451, 452, 454, 455, 468, 486, 487, 490, 496, 503], "dimension": [7, 38, 43, 48, 61, 68, 74, 77, 78, 81, 86, 98, 99, 100, 103, 104, 105, 108, 110, 111, 112, 113, 114, 130, 136, 137, 172, 197, 296, 337, 344, 427, 437, 459, 485, 487, 489, 496, 502, 503, 504], "dimenson": 197, "direct": [61, 80, 98, 99, 100, 102, 103, 104, 105, 107, 108, 109, 110, 111, 112, 113, 118, 119, 296, 412, 485, 494, 504], "directli": [61, 80, 329, 394, 478, 493, 495, 499, 503], "directori": [479, 504], "dirichlet": [3, 8, 358], "disabl": [86, 432, 504], "disclaim": 494, "discontinu": [212, 214, 347, 355], "discourag": 497, "discret": [61, 80, 98, 99, 100, 103, 104, 105, 108, 110, 111, 113, 381, 384, 399, 459, 468, 484, 503], "discuss": [478, 491], "dispers": 396, "displai": [481, 491, 504], "distanc": [21, 130, 397, 487], "distance_sum": 487, "distribu": 504, "distribut": [2, 289, 358, 359, 361, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 384, 385, 386, 387, 388, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 452, 468, 470, 478, 482, 483, 489, 490, 491, 492, 494, 495, 496, 503, 504], "disturb": 376, "dive": 490, "divid": [3, 8, 36, 85, 139, 414, 424, 455, 487, 490], "divis": [82, 122, 125, 199, 405, 424, 447], "divisor": [129, 452], "divmod": [3, 8, 226], "dn": [380, 382], "do": [61, 81, 192, 196, 210, 302, 329, 479, 487, 494, 495, 496, 497, 502, 504, 505], "doc": [12, 13, 22, 23, 24, 25, 26, 27, 28, 44, 45, 46, 52, 53, 55, 59, 60, 63, 65, 66, 72, 73, 82, 90, 91, 92, 94, 97, 120, 121, 122, 123, 124, 125, 126, 129, 131, 132, 140, 147, 151, 153, 154, 162, 163, 164, 165, 166, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 194, 198, 199, 200, 202, 338, 339, 341, 349, 350, 356, 357, 404, 405, 408, 409, 418, 419, 420, 421, 425, 426, 429, 434, 435, 447, 448, 485, 491, 493, 505], "docstr": 502, "doctor": [459, 502], "doctor_filenam": 459, "doctor_format": 459, "doctorformat": 470, "document": [36, 75, 84, 138, 272, 273, 274, 275, 276, 277, 280, 281, 282, 283, 284, 290, 291, 305, 306, 307, 310, 311, 312, 313, 314, 316, 322, 323, 325, 326, 327, 332, 334, 335, 444, 454, 478, 491, 493, 494, 495, 502, 503, 504], "doe": [14, 16, 17, 19, 21, 36, 69, 74, 81, 114, 146, 168, 169, 170, 171, 176, 178, 180, 195, 203, 206, 207, 208, 211, 213, 278, 296, 302, 308, 333, 336, 351, 362, 424, 430, 432, 453, 478, 485, 496, 499, 502, 503, 504], "doesn": [81, 117, 118, 119, 352, 496, 502], "dollar": 504, "domain": [42, 479, 484, 490], "don": [296, 481, 487, 502, 503, 504], "done": [64, 86, 169, 171, 193, 278, 299, 319, 345, 450, 502], "dot": [0, 3, 8, 174, 193, 436, 453, 483, 487, 488, 499, 504], "dot_product": 504, "doubl": [3, 8, 41, 369, 490], "down": [119, 502, 503, 504], "download": [479, 493, 504], "dr": 490, "draft": 478, "draw": [358, 359, 361, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 387, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399], "drawn": [2, 358, 359, 361, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 381, 384, 385, 386, 387, 388, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 416], "driver": [481, 495, 504], "drop": [483, 491, 492, 504], "dry": 481, "dsplit": [0, 3, 8, 85], "dst": [64, 503], "dstack": [0, 3, 8], "dt": [358, 482], "dtype": [3, 4, 8, 12, 13, 14, 16, 17, 18, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 34, 35, 37, 41, 44, 45, 46, 52, 53, 54, 58, 59, 60, 63, 65, 66, 68, 70, 71, 72, 73, 80, 81, 82, 83, 86, 88, 89, 90, 91, 92, 94, 96, 97, 115, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 131, 132, 140, 141, 144, 145, 147, 151, 152, 153, 154, 162, 163, 164, 165, 166, 168, 170, 174, 179, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 193, 194, 195, 198, 199, 200, 202, 203, 204, 205, 206, 207, 208, 209, 213, 215, 220, 267, 278, 287, 288, 300, 306, 312, 318, 324, 325, 332, 335, 336, 338, 339, 341, 342, 343, 344, 346, 349, 350, 351, 356, 357, 381, 386, 388, 404, 405, 408, 409, 418, 419, 420, 421, 422, 425, 426, 429, 430, 432, 434, 435, 436, 438, 440, 447, 448, 452, 453, 457, 458, 483, 487, 500, 503], "dtypelik": [4, 58, 96, 127, 128, 141, 144, 179, 191, 318, 336, 342, 343, 386, 388, 440, 458], "due": [395, 496, 503], "dump": [0, 8, 470], "dump_data": 497, "duplic": [353, 496, 504], "dure": [470, 479, 491, 503, 504], "dx": 130, "dy": 130, "dynam": 490, "dz": 130, "e": [14, 19, 43, 54, 79, 81, 83, 99, 102, 103, 104, 105, 108, 110, 130, 144, 145, 177, 193, 321, 329, 336, 358, 359, 361, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 381, 384, 385, 386, 387, 388, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 436, 438, 453, 470, 478, 479, 482, 496, 500, 502, 503, 504, 505], "each": [2, 38, 39, 40, 41, 43, 49, 50, 54, 57, 68, 76, 81, 87, 99, 100, 104, 105, 110, 113, 118, 119, 130, 135, 136, 137, 143, 152, 160, 168, 169, 170, 171, 172, 201, 203, 324, 329, 340, 353, 354, 359, 361, 368, 373, 376, 406, 410, 428, 433, 437, 442, 443, 445, 446, 449, 450, 451, 479, 484, 485, 487, 488, 490, 491, 502, 503, 504], "eager": [470, 481, 491, 504], "eagerli": 488, "earli": 504, "earlier": [487, 503], "eas": [383, 504], "easi": [478, 504], "easier": [286, 432, 504], "easiest": [478, 479], "east": [489, 504], "economist": 504, "ed": [363, 376, 485], "edg": [55, 81, 135, 136, 137, 486], "edge_ord": 130, "edgecolor": 487, "ediff1d": [3, 8], "edit": [479, 504], "effect": [87, 197, 333, 389, 450, 489, 504], "effici": [98, 111, 482, 490, 503, 504], "effort": [478, 490], "effortlessli": 490, "eig": [0, 3, 8], "eigenvalu": [168, 169, 170, 171, 411], "eigenvector": [168, 169], "eigh": [0, 3, 8], "eight": [175, 450], "eigval": [0, 3, 8], "eigvalsh": [0, 3, 8], "einstein": 86, "einsum": [0, 8, 87, 481], "einsum_path": [0, 3, 8, 86], "either": [35, 41, 61, 69, 83, 130, 175, 193, 213, 220, 317, 415, 450, 482, 483, 484, 489, 491, 503, 504], "elaps": [481, 482, 483, 489, 493, 497, 503, 504], "elapsed_millisec": 497, "elapsed_tim": 504, "element": [12, 13, 14, 15, 16, 17, 19, 21, 22, 23, 24, 25, 26, 27, 28, 33, 35, 41, 43, 44, 45, 46, 48, 49, 51, 52, 53, 54, 55, 59, 60, 61, 63, 64, 65, 66, 68, 70, 71, 74, 79, 80, 82, 90, 91, 94, 95, 96, 97, 99, 104, 110, 113, 116, 117, 118, 119, 120, 121, 123, 124, 125, 126, 131, 132, 135, 141, 142, 143, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 159, 163, 165, 166, 167, 173, 181, 182, 183, 187, 188, 189, 190, 191, 193, 194, 195, 196, 197, 198, 199, 200, 202, 206, 207, 208, 209, 210, 211, 213, 215, 267, 272, 273, 278, 283, 284, 292, 295, 296, 298, 299, 302, 304, 306, 308, 310, 312, 313, 317, 321, 324, 325, 327, 330, 334, 335, 338, 339, 340, 341, 345, 348, 349, 350, 351, 352, 354, 400, 402, 403, 404, 405, 406, 407, 409, 410, 412, 415, 416, 417, 418, 419, 420, 421, 425, 426, 429, 430, 432, 434, 435, 436, 438, 441, 444, 447, 448, 449, 450, 451, 452, 456, 466, 468, 484, 487, 503, 504], "elementwis": 468, "elimin": [490, 503], "els": [488, 502, 503, 504], "elsewher": [12, 13, 22, 23, 24, 25, 26, 27, 28, 44, 45, 46, 52, 53, 59, 60, 63, 65, 66, 72, 73, 82, 90, 91, 92, 94, 96, 97, 120, 121, 122, 123, 124, 125, 126, 129, 131, 132, 140, 147, 151, 153, 154, 162, 163, 164, 165, 166, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 194, 198, 199, 200, 202, 338, 339, 341, 349, 350, 356, 357, 363, 404, 405, 408, 409, 418, 419, 420, 421, 425, 426, 429, 434, 435, 440, 447, 448, 456], "email": 478, "emerg": 504, "emit": 470, "emphas": 503, "emphasi": 503, "emploi": 478, "empti": [0, 3, 8, 16, 17, 42, 47, 48, 133, 134, 161, 204, 205, 206, 207, 208, 211, 213, 215, 329, 348, 424, 503], "empty_lik": [0, 3, 8], "en": [363, 478], "enabl": [470, 479, 481, 490, 491, 502, 503, 504], "encapsul": 6, "encount": [206, 207, 208, 211, 416, 478, 491, 502, 504], "encumbr": 478, "end": [20, 21, 42, 79, 81, 87, 179, 191, 345, 450, 478, 484, 488, 489, 497, 503, 504], "end_tim": 504, "endian": 329, "endors": 494, "endpoint": [179, 191, 484], "energi": 504, "enhanc": [478, 490, 504], "enough": [172, 479, 497, 502], "ensur": [440, 478, 490, 497, 502, 503, 504], "enter": 481, "entir": [289, 450, 504], "entri": [57, 74, 88, 95, 114, 117, 118, 119, 137, 296, 299, 329, 352, 353, 424, 427], "entropi": [1, 362], "env": [470, 479], "environ": [204, 205, 208, 211, 470, 479, 490, 491, 493, 495, 499, 502, 503, 504], "ep": 403, "epsilon": 403, "epyc": 504, "eq": 482, "eqn": 484, "eqnarrai": 504, "equal": [0, 3, 8, 12, 13, 15, 22, 23, 24, 25, 26, 27, 28, 35, 36, 41, 42, 43, 44, 45, 46, 48, 52, 53, 59, 60, 63, 65, 66, 69, 72, 73, 79, 82, 84, 91, 92, 94, 96, 97, 120, 121, 122, 123, 124, 125, 126, 129, 130, 131, 132, 135, 136, 137, 140, 147, 148, 150, 151, 153, 154, 158, 162, 163, 164, 165, 166, 179, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 194, 198, 199, 200, 202, 321, 338, 339, 341, 349, 350, 356, 357, 359, 365, 368, 373, 387, 395, 397, 403, 404, 405, 408, 409, 418, 419, 420, 421, 424, 425, 426, 429, 434, 435, 440, 442, 445, 447, 448], "equal_nan": [15, 35, 148], "equat": [15, 148, 177, 395, 468, 484, 488, 490, 504], "equiv": [58, 64, 86, 193, 278], "equival": [21, 41, 57, 81, 83, 84, 85, 87, 116, 122, 137, 138, 139, 143, 148, 152, 160, 224, 272, 273, 274, 275, 276, 277, 280, 281, 282, 283, 284, 290, 291, 305, 306, 307, 310, 311, 312, 313, 314, 316, 320, 322, 323, 325, 326, 327, 329, 332, 333, 334, 335, 336, 337, 414, 432, 454, 455, 502], "erf": 482, "error": [196, 210, 352, 424, 427, 432, 484, 487, 490, 496, 503, 504], "errstat": [3, 8], "especi": 502, "essenti": [502, 504], "estim": [61, 68, 212, 214, 347, 355, 504], "etc": [34, 99, 100, 104, 105, 110, 113, 286, 296, 470, 490, 496, 502, 505], "european": 482, "evalu": [14, 19, 57, 86, 87, 150, 158, 174, 197, 272, 273, 416, 496, 502, 503], "even": [68, 101, 103, 106, 111, 150, 158, 168, 170, 296, 411, 478, 481, 494, 503], "evenli": [21, 179, 191, 413], "event": [378, 494], "everi": [61, 110, 478, 482, 487, 502, 503], "every_nit": 502, "everyon": 478, "evid": 504, "evolv": 478, "exact": [83, 145, 177, 436, 453, 484], "exactli": [331, 478, 483, 488, 499, 504], "examin": 68, "exampl": [40, 55, 70, 71, 80, 81, 206, 207, 324, 333, 366, 376, 424, 428, 478, 479, 481, 484, 485, 487, 488, 490, 491, 492, 493, 495, 497, 500, 501, 502, 505], "exce": [424, 450, 470], "exceed": 490, "except": [14, 16, 17, 19, 21, 34, 42, 54, 58, 80, 83, 96, 110, 139, 195, 208, 211, 213, 296, 302, 319, 351, 400, 406, 430, 433, 436, 482, 483, 489, 494], "exchang": 490, "exclud": [20, 21, 179, 395, 497], "exclus": [381, 503], "execut": [470, 479, 481, 482, 483, 488, 489, 497, 499, 500, 501, 502, 504], "exemplari": 494, "exercis": [478, 504], "exhibit": 328, "exist": [58, 93, 180, 468, 479, 493, 500, 504], "exit": 481, "exp": [0, 3, 8, 94, 172, 363, 482], "exp2": [0, 3, 8], "exp_rt": 482, "expand": [80, 93], "expand_dim": [0, 3, 8], "expans": 482, "expect": [14, 16, 17, 19, 70, 71, 108, 145, 192, 195, 196, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 344, 347, 351, 355, 378, 413, 430, 436, 452, 453, 478, 491], "expens": 329, "experi": [366, 504], "expertis": 490, "expir": [482, 504], "explain": [100, 105, 110, 113], "explan": [71, 206, 207, 324, 478], "explicit": [86, 172, 490, 502, 504], "explicitli": [135, 136, 137, 144, 180, 478, 484, 491, 504], "explor": 87, "expm1": [0, 3, 8], "expon": [126, 173, 379, 468], "exponenti": [0, 3, 8, 87, 91, 172, 185, 186, 369, 391], "exponential_distribut": 363, "expos": [2, 34, 296, 319], "expr": [86, 87], "express": [86, 87, 197, 482, 483, 484, 489, 494, 496, 503], "extend": [484, 490, 496, 501], "extra": [503, 504], "extract": [0, 3, 8, 57, 75, 348, 432], "extrema": 468, "ey": [0, 3, 8, 483, 500], "f": [0, 3, 8, 34, 118, 130, 175, 212, 214, 278, 296, 298, 328, 347, 355, 358, 363, 366, 375, 400, 407, 451, 482, 483, 484, 488, 489, 503, 504], "f_": [484, 488], "f_contigu": 296, "f_interior": 484, "fa": 296, "fab": [0, 3, 8], "facilit": 500, "factor": [98, 99, 100, 102, 103, 104, 105, 107, 108, 109, 110, 111, 112, 113, 167, 176, 483, 504], "fail": [167, 176, 491, 502], "failur": [366, 373, 481], "fall": [31, 81, 136, 137, 159, 346, 470, 482, 488, 491, 499, 503], "fallback": 496, "fallback_stacktrac": 459, "fals": [1, 12, 13, 14, 15, 16, 17, 18, 19, 22, 23, 24, 25, 26, 27, 28, 29, 30, 34, 35, 36, 41, 44, 45, 46, 49, 51, 52, 53, 57, 59, 60, 63, 65, 66, 67, 68, 72, 73, 80, 81, 82, 86, 87, 90, 91, 92, 94, 97, 114, 120, 121, 122, 123, 124, 125, 126, 129, 131, 132, 135, 136, 137, 140, 143, 144, 147, 148, 151, 152, 153, 154, 155, 156, 158, 159, 162, 163, 164, 165, 166, 175, 178, 179, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 194, 195, 196, 197, 198, 199, 200, 202, 203, 204, 205, 208, 209, 210, 211, 212, 213, 214, 215, 272, 273, 278, 296, 305, 306, 307, 312, 325, 335, 338, 339, 341, 347, 349, 350, 351, 355, 356, 357, 404, 405, 408, 409, 416, 418, 419, 420, 421, 425, 426, 429, 430, 434, 435, 447, 448, 449, 452, 470, 484, 488], "familiar": [492, 503, 504], "fan": [212, 214, 347, 355], "fanci": 432, "farrai": 296, "fashion": 86, "fast": [98, 99, 100, 104, 105, 110, 111, 113, 501], "fast_math": 459, "faster": [61, 81, 152, 504], "fastest": [174, 400, 407], "fatter": 369, "fbmem": [481, 504], "featur": [478, 481, 504], "feedback": 478, "feel": 478, "fenc": 503, "fetch": 502, "few": [497, 502], "fewer": 491, "fft": [0, 3, 8, 61, 459, 468, 503], "fft2": [0, 3, 8, 104], "fft2d_batched_gpu": 503, "fftfreq": [3, 8], "fftn": [0, 3, 8, 98, 105, 503], "fftshift": [0, 3, 8, 106], "fid": 329, "fidel": 490, "field": [197, 302, 450], "fig": [485, 504], "figsiz": [485, 504], "file": [180, 293, 324, 329, 468, 470, 478, 479, 481, 482, 483, 489, 494, 499, 504], "filenam": [329, 470], "fileno": 329, "fill": [0, 2, 8, 114, 127, 128, 197, 203, 342, 377, 382, 440, 457, 503], "fill_diagon": [0, 3, 8], "fill_valu": [127, 128], "final": [110, 113, 143, 152, 191, 490, 492, 503, 504], "find": [33, 317, 334, 415, 449, 468, 487, 488, 491, 493, 502, 504], "find_centroid": 487, "find_cupynumeric_cpp": 479, "finfo": [3, 8, 403], "finish": [481, 482, 483, 489, 503], "finit": [148, 151, 203, 486], "first": [14, 19, 41, 42, 47, 49, 54, 56, 58, 61, 64, 69, 79, 80, 83, 85, 87, 104, 105, 117, 120, 130, 135, 136, 139, 146, 174, 193, 196, 197, 210, 212, 214, 215, 299, 317, 329, 344, 347, 348, 350, 351, 352, 355, 376, 397, 400, 407, 410, 412, 414, 415, 416, 423, 428, 430, 431, 433, 436, 438, 449, 453, 454, 455, 478, 479, 484, 489, 502, 503, 504], "first_cond": 502, "fisher": [364, 375, 504], "fit": [406, 494], "five": 491, "fix": [3, 8, 304, 321, 378, 474, 475, 476, 482, 503], "flag": [172, 319, 470, 479, 503], "flat": [298, 302, 314, 354, 406, 451, 496], "flatit": [3, 8, 297], "flatnonzero": [0, 3, 8], "flatten": [0, 3, 8, 16, 17, 20, 29, 30, 31, 32, 57, 58, 67, 70, 71, 74, 78, 114, 116, 135, 146, 152, 195, 196, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 297, 314, 344, 345, 346, 347, 352, 353, 355, 400, 406, 410, 422, 432, 433, 449, 450, 451, 452, 453], "flexibl": [3, 8, 86, 304], "flip": [0, 3, 8, 118, 119, 366, 412, 496, 502], "fliplr": [0, 3, 8, 412], "flipud": [0, 3, 8, 412], "float": [14, 15, 16, 17, 19, 21, 43, 55, 70, 71, 83, 86, 88, 120, 128, 135, 137, 141, 142, 148, 161, 173, 175, 179, 193, 195, 196, 203, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 228, 305, 307, 312, 325, 339, 347, 351, 355, 358, 359, 361, 363, 364, 365, 366, 367, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 382, 383, 385, 386, 387, 388, 391, 392, 393, 394, 395, 396, 397, 398, 399, 402, 403, 413, 415, 430, 436, 440, 452, 457, 466, 468, 470, 496, 503], "float128": [3, 8, 496], "float16": [3, 8, 120], "float32": [3, 8, 64, 70, 86, 120, 193, 278, 336, 500, 503], "float64": [3, 4, 8, 18, 41, 64, 68, 86, 88, 96, 120, 193, 195, 196, 209, 210, 212, 214, 278, 342, 347, 355, 386, 388, 452, 457, 483, 496], "float_pow": [0, 3, 8], "flood": 490, "floor": [0, 3, 8], "floor_divid": [0, 3, 8], "flop": 483, "flow": 490, "fluid": 490, "fmax": [3, 8, 208], "fmin": [3, 8], "fmod": [0, 3, 8], "fnc": 296, "focu": [490, 503, 504], "follow": [15, 18, 34, 41, 54, 61, 81, 108, 115, 148, 152, 169, 171, 175, 193, 197, 212, 214, 267, 347, 355, 470, 479, 484, 485, 487, 488, 490, 491, 493, 494, 495, 502, 503, 504], "foo_in_out": 503, "forc": [34, 86, 193, 278, 296, 470, 493], "force_thunk": 459, "forcebuild": 1, "foremost": 504, "forg": [479, 493, 504], "fork": 478, "form": [37, 47, 56, 68, 79, 85, 86, 108, 133, 134, 139, 160, 161, 414, 455, 484, 494, 502, 504], "format": [329, 470, 480, 491, 503, 504], "format_float_posit": [3, 8], "format_float_scientif": [3, 8], "former": [353, 433], "formula": [482, 504], "forset": 320, "fortran": [34, 278, 296, 298, 328, 400, 407, 451, 479], "fortun": 478, "forum": 491, "forumula": 504, "forward": [98, 99, 100, 102, 103, 104, 105, 107, 108, 109, 110, 111, 112, 113, 130, 383], "found": [43, 317, 324, 415, 490, 504], "foundat": [478, 491], "four": [319, 481, 504], "fourier": [61, 98, 99, 100, 103, 104, 105, 108, 110, 111, 113, 459, 468, 501], "frac": [358, 363, 482, 488], "frac12": 482, "fraction": 200, "frame": [478, 499], "framebuff": [481, 491, 504], "framework": [478, 492], "free": [478, 482, 490, 491, 494, 504], "freed": 490, "freedom": [361, 364, 374, 375, 393, 452], "frequenc": [42, 68, 101, 103, 104, 105, 108, 399, 502, 503], "frequent": 492, "fresh": [1, 362], "freshli": [12, 13, 22, 23, 24, 25, 26, 27, 28, 44, 45, 46, 52, 53, 59, 60, 63, 65, 66, 72, 73, 82, 90, 91, 92, 94, 97, 120, 121, 122, 123, 124, 125, 126, 129, 131, 132, 140, 147, 151, 153, 154, 155, 156, 162, 163, 164, 165, 166, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 194, 198, 199, 200, 202, 338, 339, 341, 349, 350, 356, 357, 404, 405, 408, 409, 418, 419, 420, 421, 425, 426, 429, 434, 435, 447, 448], "frexp": [0, 3, 8], "fro": 175, "frobeniu": 175, "frohn": 494, "from": [1, 2, 14, 18, 19, 21, 29, 30, 37, 41, 48, 54, 57, 61, 64, 70, 71, 72, 73, 79, 95, 103, 113, 115, 117, 118, 119, 120, 130, 145, 146, 160, 176, 179, 180, 191, 193, 197, 206, 207, 215, 220, 279, 280, 296, 299, 323, 327, 344, 350, 351, 354, 356, 357, 358, 359, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 384, 385, 386, 387, 388, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 403, 407, 412, 416, 427, 430, 432, 433, 436, 438, 449, 450, 453, 456, 468, 478, 480, 482, 483, 484, 485, 487, 488, 489, 490, 492, 494, 495, 496, 497, 502, 503, 504], "frombuff": 3, "fromfil": [3, 329], "fromfunct": [3, 8], "fromit": 3, "frompyfunc": 3, "fromregex": [3, 8], "fromstr": 3, "front": [144, 470], "fulfil": [394, 470], "full": [0, 3, 8, 61, 77, 128, 177, 272, 273, 274, 276, 277, 280, 281, 282, 283, 284, 290, 291, 305, 306, 307, 310, 311, 312, 313, 314, 316, 319, 322, 323, 325, 326, 327, 332, 334, 335, 345, 443, 446, 470, 478, 481, 490, 495, 499, 503, 504], "full_lik": [0, 3, 8], "full_matric": 178, "fulli": [196, 197, 210], "func": 482, "function": [2, 8, 18, 21, 36, 64, 75, 85, 98, 99, 100, 101, 103, 104, 105, 106, 108, 110, 111, 113, 114, 120, 122, 130, 135, 136, 137, 139, 143, 152, 159, 160, 161, 174, 175, 192, 197, 212, 214, 272, 273, 274, 275, 276, 277, 280, 281, 282, 283, 284, 290, 291, 296, 302, 305, 306, 307, 310, 311, 312, 313, 314, 316, 319, 320, 322, 323, 325, 326, 327, 329, 330, 332, 333, 334, 335, 347, 353, 355, 358, 362, 363, 366, 376, 379, 384, 389, 411, 414, 432, 433, 437, 453, 455, 459, 466, 468, 482, 483, 484, 488, 489, 490, 491, 496, 499, 500, 504], "function_nam": 499, "function_valu": 484, "fundament": [503, 504], "funtion": 500, "furnish": 494, "further": [86, 212, 214, 321, 347, 355, 444, 478, 490, 503], "furthermor": [49, 51, 197], "futur": 482, "fweight": 68, "g": [14, 19, 83, 85, 139, 145, 175, 193, 329, 336, 358, 359, 361, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 381, 384, 385, 386, 387, 388, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 414, 436, 453, 455, 478, 479, 489, 496, 500, 502, 503, 504, 505], "gamma": [0, 3, 8, 358, 392], "gasnet": [501, 504], "gather": 504, "gauss": 376, "gaussian": [369, 376, 382, 397], "gb": 504, "gcd": [0, 3, 8], "gemm": 487, "gener": [1, 3, 8, 21, 41, 42, 85, 103, 139, 179, 191, 296, 362, 374, 377, 382, 387, 389, 395, 414, 455, 468, 479, 484, 487, 489, 491, 496, 497, 499, 501, 503, 504], "genfromtxt": [3, 8], "geometr": [0, 3, 8, 363], "geomspac": [3, 8], "get": [102, 108, 110, 114, 179, 191, 285, 324, 393, 479, 481, 482, 483, 484, 487, 488, 489, 491, 502, 503], "get_bit_gener": [3, 8], "get_includ": [3, 8], "get_legate_runtim": [495, 503], "get_machin": 495, "get_printopt": [3, 8], "get_rank": 490, "get_siz": 490, "get_stat": [3, 8], "get_variant_kind": 503, "getbufs": [3, 8], "getdevicecount": 490, "geterr": [3, 8], "geterrcal": [3, 8], "getfield": [0, 8], "getter": 320, "git": 478, "github": [478, 490, 504], "give": [43, 78, 86, 137, 193, 197, 333, 354, 407, 417, 449, 478, 491, 503], "given": [14, 15, 16, 17, 19, 20, 21, 31, 34, 35, 41, 48, 51, 54, 55, 56, 57, 62, 67, 68, 70, 71, 79, 80, 83, 85, 87, 88, 89, 98, 99, 100, 102, 103, 104, 105, 107, 108, 110, 111, 113, 114, 117, 127, 128, 130, 135, 137, 139, 140, 145, 146, 148, 175, 179, 191, 192, 193, 196, 197, 206, 207, 210, 211, 212, 213, 214, 215, 220, 274, 275, 278, 281, 282, 296, 299, 305, 306, 307, 312, 313, 317, 325, 333, 335, 342, 343, 344, 347, 351, 352, 355, 358, 359, 361, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 384, 385, 386, 387, 388, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 406, 410, 411, 412, 413, 414, 415, 424, 430, 432, 436, 437, 438, 439, 440, 449, 453, 455, 457, 458, 478, 490, 502, 503, 504], "global": [362, 490, 503], "gmail": 494, "gninja": 479, "gnx": 490, "gny": 490, "go": [433, 504], "goal": 504, "golub": 175, "good": [192, 329, 368, 492, 494], "gop": 483, "govern": [482, 483, 489, 504], "gpu": [1, 2, 3, 8, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 217, 218, 219, 223, 224, 225, 226, 227, 229, 230, 232, 233, 234, 235, 236, 237, 238, 239, 242, 243, 244, 245, 246, 247, 248, 249, 251, 252, 253, 254, 255, 256, 257, 259, 260, 261, 263, 264, 265, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 280, 281, 282, 283, 284, 285, 290, 291, 294, 295, 298, 299, 302, 305, 306, 307, 310, 311, 312, 313, 314, 316, 317, 319, 322, 323, 325, 326, 327, 328, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 481, 488, 490, 492, 495, 502, 505], "grad_i": [485, 504], "grad_x": [485, 504], "gradient": [0, 3, 8, 485], "grai": [485, 487, 504], "grant": 494, "granular": [491, 497], "grasmair": 488, "grate": 478, "grayscal": [485, 504], "greater": [0, 3, 8, 21, 54, 84, 364, 377, 395, 399, 427], "greater_equ": [0, 3, 8], "greatest": [48, 129], "greedi": [86, 87], "green": [484, 487], "grep": 491, "grid": [144, 197, 484, 489, 490, 504], "group": [33, 479, 504], "gt": 484, "guarante": [352, 407], "guess": 488, "guid": [324, 492, 503], "guidelin": 501, "gumbel": [0, 3, 8], "gzipfil": 329, "h": [167, 175, 212, 214, 347, 355, 484, 490, 502, 504], "h5py": 502, "ha": [6, 29, 30, 31, 32, 57, 68, 70, 71, 79, 81, 102, 107, 130, 142, 149, 150, 152, 157, 158, 204, 205, 206, 207, 213, 215, 286, 296, 333, 345, 351, 354, 358, 369, 377, 384, 396, 402, 403, 406, 416, 428, 430, 432, 437, 438, 451, 470, 478, 482, 483, 487, 488, 490, 491, 494, 503, 504], "had": [353, 433, 505], "hadamard": 87, "half": [3, 8, 21, 101, 104, 105, 179, 381, 383, 385, 386, 388, 395], "halo": 490, "ham": [0, 3, 8], "han": [0, 3, 8], "hand": 484, "handl": [449, 453, 468, 470, 490, 496, 499, 503, 504], "happen": [41, 478, 496], "har": 504, "hardwar": [296, 319, 501, 503, 505], "have": [12, 13, 14, 19, 22, 23, 24, 25, 26, 27, 28, 33, 34, 35, 39, 40, 41, 44, 45, 46, 47, 52, 53, 54, 56, 58, 59, 60, 63, 65, 66, 68, 69, 70, 71, 72, 73, 82, 83, 85, 86, 90, 91, 92, 94, 97, 104, 105, 113, 120, 121, 122, 123, 124, 125, 126, 129, 131, 132, 139, 140, 145, 147, 151, 152, 153, 154, 155, 156, 162, 163, 164, 165, 166, 174, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 192, 193, 194, 195, 196, 197, 198, 199, 200, 202, 206, 207, 209, 210, 212, 213, 214, 215, 324, 336, 338, 339, 341, 347, 348, 349, 350, 351, 353, 355, 356, 357, 403, 404, 405, 408, 409, 413, 414, 418, 419, 420, 421, 425, 426, 428, 429, 430, 434, 435, 436, 437, 447, 448, 452, 453, 455, 466, 478, 479, 481, 482, 484, 485, 487, 488, 492, 499, 502, 503, 504], "hazen": [212, 214, 347, 355], "header": [180, 479], "heapsort": [32, 422], "heat": 504, "heavisid": [3, 8], "height": [85, 139, 414, 455, 490, 504], "help": [478, 481, 485, 491, 500, 503, 504], "helper": [468, 483, 489], "henc": 130, "here": [8, 108, 398, 478, 479, 484, 490, 497, 500, 502, 503, 504], "herebi": 494, "herein": 494, "hermitian": [102, 107, 108, 167, 169, 171, 178, 468, 483], "hfft": [0, 3, 8], "high": [381, 384, 395, 479, 490, 503, 504], "higher": [38, 80, 145, 212, 214, 296, 347, 355, 504], "highest": [381, 384], "highli": 502, "highlight": [474, 475, 476, 490, 502, 503, 504], "hipr2": 485, "hist": [135, 136, 137, 503], "hist_loc": 503, "histogram": [0, 3, 8, 136, 137, 468, 501], "histogram2d": [0, 3, 8], "histogram_bin_edg": [3, 8], "histogram_task": 503, "histogramdd": [0, 3, 8], "hold": [34, 55, 57, 70, 71, 175, 196, 206, 207, 210, 213, 215, 296, 438, 490], "holder": 494, "home": 482, "homepag": 485, "hope": 478, "hopkin": 175, "horizont": [138, 139, 412], "host": 192, "hous": 485, "how": [54, 319, 324, 333, 352, 432, 479, 480, 483, 484, 488, 495, 497, 503, 504], "howev": [14, 16, 17, 19, 70, 172, 195, 208, 211, 213, 296, 351, 430, 432, 478, 494, 504], "howto": 501, "hpc": [490, 501], "hsplit": [0, 3, 8, 139], "hstack": [0, 3, 8, 56, 502], "htm": 485, "html": [485, 491, 494, 505], "http": [363, 478, 482, 483, 485, 489, 491, 494, 496, 504, 505], "hull": 482, "hundr": [490, 502], "hyndman": [212, 214, 347, 355], "hyperbol": [23, 25, 28, 66, 393, 421, 435, 468], "hypergeometr": [0, 3, 8], "hypot": [0, 3, 8], "hypotenus": 140, "hypothesi": 361, "i": [2, 8, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 41, 42, 43, 44, 45, 46, 47, 48, 49, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 107, 108, 109, 110, 111, 112, 113, 114, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 179, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 220, 224, 225, 267, 278, 279, 296, 298, 299, 302, 304, 317, 319, 321, 324, 328, 329, 330, 333, 336, 337, 338, 339, 341, 342, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 418, 419, 420, 421, 422, 424, 425, 426, 427, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 445, 447, 448, 449, 450, 452, 453, 454, 455, 456, 457, 470, 479, 481, 482, 483, 484, 485, 487, 488, 489, 490, 492, 493, 494, 495, 496, 497, 499, 500, 501, 504, 505], "i0": [3, 8, 144], "i1": 144, "i16_arr": 80, "iN": 144, "idea": 478, "ident": [0, 3, 8, 106, 114, 173, 177, 204, 205, 208, 211, 369, 391, 483], "identifi": 485, "identit": 483, "idiomat": 491, "idx": 487, "ieee": 470, "ifft": [0, 3, 8, 104, 105], "ifft2": [0, 3, 8], "ifftn": [0, 3, 8, 103, 110], "ifftshift": [0, 3, 8], "ignor": [49, 51, 69, 135, 204, 205, 208, 209, 210, 211, 212, 214, 496], "ihfft": [0, 3, 8], "ii": [68, 377], "iinfo": [3, 8], "ij": [68, 197], "ik": 144, "illeg": 48, "illustr": [197, 479, 502, 504], "imag": [0, 3, 8, 403, 485, 489, 503, 504], "image_np": 504, "imagin": [324, 503], "imaginari": [18, 35, 142, 149, 150, 158, 168, 169, 170, 171, 203, 301, 403, 413, 423], "imbal": 504, "immedi": 483, "impact": 502, "imper": 504, "implement": [8, 14, 16, 17, 19, 29, 30, 31, 61, 70, 71, 79, 83, 117, 118, 119, 145, 167, 172, 193, 195, 206, 207, 208, 211, 213, 346, 351, 430, 436, 453, 479, 482, 483, 490, 491, 494, 496, 499, 502, 503, 504], "impli": [68, 345, 450, 482, 483, 489, 494], "implic": 488, "implicit": [86, 172], "implment": 499, "import": [68, 193, 482, 483, 484, 485, 487, 488, 489, 490, 495, 497, 500, 502, 503, 504, 505], "importantli": 81, "improp": 504, "improv": [474, 475, 476, 504], "imshow": [485, 504], "in1d": [0, 3, 8, 152], "in_arr": 503, "in_stor": 503, "inappropri": 361, "incident": 494, "includ": [21, 37, 81, 86, 135, 179, 191, 195, 209, 213, 215, 308, 351, 395, 398, 430, 452, 470, 478, 479, 481, 484, 490, 494, 496, 499, 502, 503], "inclus": [212, 214, 347, 355, 381, 384], "incorpor": 494, "incorrect": [490, 503], "increas": [81, 93, 103, 108, 135, 137, 484, 491, 503, 504], "incur": 502, "ind": [81, 442, 443, 445, 446], "indefinit": 478, "independ": [329, 361, 369, 376, 479, 503, 504], "index": [6, 29, 30, 31, 32, 43, 54, 57, 79, 81, 96, 99, 104, 144, 146, 160, 193, 197, 204, 205, 280, 302, 317, 346, 352, 353, 400, 407, 415, 422, 424, 428, 432, 433, 449, 451, 459, 466, 468, 470, 484, 487, 492, 501], "index_arrai": [29, 30, 32, 33, 204, 205], "indexerror": 81, "indic": [0, 3, 8, 29, 30, 31, 32, 33, 36, 54, 61, 68, 74, 76, 77, 81, 84, 86, 87, 95, 98, 99, 100, 102, 103, 104, 105, 107, 108, 109, 110, 111, 112, 113, 114, 116, 138, 146, 192, 204, 205, 274, 275, 276, 277, 310, 313, 317, 327, 333, 340, 352, 353, 415, 418, 424, 432, 433, 442, 443, 445, 446, 449, 451, 454, 470, 478, 484, 487, 488, 491, 494, 496, 502, 503, 504], "indices_or_sect": [36, 424], "indirect": [31, 494], "individu": [366, 499], "ineffici": 470, "inexact": [3, 8, 120, 203, 213], "inf": [15, 70, 71, 175, 204, 205, 206, 207, 485, 496], "infer": [21, 37, 179, 191, 358, 407], "infin": [151, 153, 155, 156, 203, 397], "infinit": 175, "influenc": 376, "info": [3, 8], "inform": [86, 296, 302, 319, 329, 478, 483, 484, 485, 488, 491, 493, 495, 499, 503, 504, 505], "infti": 482, "inher": 504, "inherit": 296, "init": [389, 487, 497, 504], "initi": [1, 16, 17, 88, 208, 211, 213, 215, 272, 273, 305, 307, 312, 325, 351, 362, 430, 470, 484, 487, 488, 490, 497, 503], "inner": [0, 3, 8, 83, 87, 436, 503], "innermost": 48, "input": [6, 12, 13, 14, 15, 16, 17, 19, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 37, 38, 39, 40, 41, 43, 44, 45, 46, 48, 50, 52, 53, 55, 58, 59, 60, 61, 62, 63, 65, 66, 67, 69, 70, 71, 72, 73, 74, 78, 80, 81, 82, 86, 87, 90, 91, 92, 93, 94, 95, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 129, 130, 131, 132, 135, 137, 140, 142, 143, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 162, 163, 164, 165, 166, 167, 172, 175, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 278, 298, 299, 336, 337, 338, 339, 340, 341, 344, 345, 346, 347, 348, 349, 350, 351, 353, 354, 355, 356, 357, 359, 400, 402, 403, 404, 405, 406, 408, 409, 410, 413, 415, 417, 418, 419, 420, 421, 422, 423, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 441, 447, 448, 449, 450, 452, 453, 459, 468, 482, 485, 491, 500, 502, 503, 504], "inputarrai": 503, "inputstor": 503, "insert": [0, 3, 8, 29, 30, 48, 54, 79, 93, 179, 191, 204, 205, 317, 345, 353, 415, 416, 468, 504], "insid": [502, 503], "instal": [478, 479, 481, 492, 495, 501, 503], "instanc": [48, 85, 102, 139, 321, 362, 414, 455, 479, 493, 503, 504], "instanti": [2, 362, 479], "instead": [14, 16, 17, 19, 41, 43, 48, 135, 144, 193, 195, 196, 208, 209, 210, 212, 214, 215, 278, 302, 347, 351, 355, 384, 430, 452, 470, 482, 483, 484, 485, 489, 490, 491, 500, 501, 504], "instruct": [478, 479, 493, 504], "instrument": 503, "int": [1, 4, 6, 14, 16, 17, 19, 20, 21, 29, 30, 31, 32, 34, 36, 41, 42, 43, 47, 50, 51, 54, 55, 57, 58, 67, 68, 69, 70, 71, 74, 75, 76, 78, 79, 80, 81, 84, 87, 88, 89, 93, 96, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 117, 127, 128, 130, 133, 134, 135, 136, 137, 138, 141, 144, 146, 161, 173, 175, 179, 180, 191, 192, 195, 196, 201, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 240, 241, 267, 299, 300, 304, 305, 307, 308, 309, 312, 317, 318, 321, 324, 325, 333, 337, 342, 343, 345, 346, 347, 351, 353, 355, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 406, 407, 410, 412, 413, 415, 417, 422, 424, 427, 428, 430, 431, 432, 433, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 449, 450, 451, 452, 454, 457, 458, 466, 470, 484, 485, 487, 503, 504], "int16": [3, 8, 80, 336], "int32": [3, 8, 213, 324, 503], "int32_t": 479, "int64": [3, 8, 213, 503], "int64_t": 479, "int8": [3, 8], "int_": [3, 8, 321, 384, 437, 482], "int_0": 358, "int_lik": 382, "int_typ": 302, "intc": [3, 8], "integ": [2, 3, 8, 21, 36, 51, 54, 68, 70, 71, 80, 120, 122, 152, 160, 164, 173, 175, 195, 196, 206, 207, 209, 210, 212, 213, 214, 215, 317, 321, 324, 345, 347, 351, 352, 355, 359, 366, 381, 384, 407, 408, 409, 412, 415, 424, 430, 438, 449, 451, 452, 503], "integer_lik": 436, "integr": [41, 135, 200, 481, 490, 503, 504], "intel": 504, "intellectu": 478, "intend": [197, 329, 488], "intens": [172, 485, 504], "intensity_max": [485, 504], "intensity_min": [485, 504], "intent": 120, "inter": 490, "interact": [286, 504], "interchang": [326, 431], "interest": [482, 483, 504], "interfac": [34, 296, 319, 504], "interior": 130, "intermedi": [86, 87, 195, 209, 212, 214, 347, 355, 502], "intern": 70, "interoper": 491, "interp": [3, 8], "interpolated_inverted_cdf": [212, 214, 347, 355], "interpret": [37, 51, 62, 160, 192, 302, 319, 352, 488], "interrupt": 494, "intersect1d": [3, 8], "interv": [21, 55, 81, 179, 191, 359, 373, 378, 381, 383, 384, 385, 386, 388, 394, 395, 396], "intp": [3, 8, 213], "introduc": [410, 487, 503, 504], "introduct": 501, "introselect": [31, 276, 311, 346], "inund": 490, "inv": [3, 8, 488], "invas": 502, "invers": [22, 23, 24, 25, 26, 28, 93, 103, 104, 105, 106, 107, 108, 109, 110, 147, 173, 188, 363, 397, 399, 488], "invert": [0, 3, 8, 143, 152, 468], "inverted_cdf": [212, 214, 347, 355], "invest": 504, "invoc": [504, 505], "invok": [479, 488, 500, 503], "involv": [478, 490, 503], "irecv": 490, "irfft": [0, 3, 8, 110], "irfft2": [0, 3, 8], "irfftn": [0, 3, 8, 108, 109], "irrespect": [169, 171], "is_busdai": [3, 8], "isclos": [0, 3, 8], "iscomplex": [0, 3, 8], "iscomplexobj": [0, 3, 8], "isdtyp": [3, 8], "isend": 490, "isfinit": [0, 3, 8, 208, 215], "isfortran": [3, 8, 267], "isin": [0, 3, 8], "isinf": [0, 3, 8], "isnan": [0, 3, 8, 208, 211, 213, 215], "isnat": [3, 8], "isneginf": [0, 3, 8], "isol": 479, "isposinf": [0, 3, 8], "isreal": [0, 3, 8], "isrealobj": [0, 3, 8], "isscalar": [0, 3, 8], "issu": [103, 104, 105, 470, 478, 491, 502, 503, 504], "issubdtyp": [3, 8], "issue_execution_f": 503, "item": [0, 8, 33, 329, 330, 368, 399, 449, 487], "items": 296, "iter": [6, 87, 212, 214, 285, 297, 298, 314, 347, 353, 355, 433, 487, 488, 489, 490, 497, 504], "ith": 144, "its": [12, 13, 14, 19, 22, 23, 24, 25, 26, 27, 28, 37, 41, 43, 44, 45, 46, 52, 53, 54, 59, 60, 63, 65, 66, 72, 73, 75, 82, 90, 91, 92, 94, 97, 120, 121, 122, 123, 124, 125, 126, 129, 131, 132, 135, 140, 141, 145, 147, 151, 153, 154, 162, 163, 164, 165, 166, 168, 169, 170, 171, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 193, 194, 198, 199, 200, 202, 296, 319, 331, 333, 338, 339, 341, 344, 349, 350, 356, 357, 376, 384, 399, 404, 405, 407, 408, 409, 418, 419, 420, 421, 425, 426, 429, 434, 435, 436, 438, 439, 440, 447, 448, 453, 478, 483, 487, 490, 494, 502, 503, 504], "itself": [54, 203, 371, 411, 427, 479], "ivan": 494, "ix_": [0, 3, 8], "j": [83, 175, 197, 212, 214, 333, 344, 347, 353, 355, 433, 440, 484, 488, 490, 502, 504], "j0": 54, "j1": 54, "jacobi": 486, "jacobi_stencil": 504, "jacobian": 488, "jcp": 484, "jm": 54, "john": [175, 482], "join": [58, 428, 468], "jr": [363, 376], "json": 470, "jsrun": 495, "june": 494, "jupyt": 501, "just": [56, 398, 478, 482, 483, 489], "k": [12, 13, 22, 23, 24, 25, 26, 27, 28, 34, 44, 45, 46, 52, 53, 59, 60, 63, 65, 66, 72, 73, 75, 78, 82, 83, 90, 91, 92, 94, 96, 97, 120, 121, 122, 123, 124, 125, 126, 129, 131, 132, 140, 144, 147, 151, 153, 154, 162, 163, 164, 165, 166, 176, 177, 178, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 192, 193, 194, 198, 199, 200, 202, 224, 278, 298, 338, 339, 341, 349, 350, 356, 357, 358, 359, 361, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 381, 384, 385, 386, 387, 388, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 404, 405, 408, 409, 412, 418, 419, 420, 421, 425, 426, 429, 434, 435, 440, 441, 442, 443, 444, 445, 446, 447, 448, 470, 482, 484, 486, 488, 503, 504], "kaiser": [0, 3, 8, 47], "kappa": 396, "ke": 504, "keep": [470, 482, 487, 503], "keepdim": [14, 16, 17, 19, 29, 30, 41, 67, 175, 195, 196, 204, 205, 208, 209, 210, 211, 212, 213, 214, 215, 272, 273, 305, 306, 307, 312, 325, 335, 347, 351, 355, 430, 452], "kei": [223, 231, 266, 491, 503, 504], "kern": 494, "kernel": [485, 503, 504, 505], "kernel_i": [485, 504], "kernel_x": [485, 504], "keyword": [2, 12, 13, 22, 23, 24, 25, 26, 27, 28, 44, 45, 46, 52, 53, 55, 59, 60, 63, 65, 66, 68, 72, 73, 82, 90, 91, 92, 94, 97, 120, 121, 122, 123, 124, 125, 126, 129, 131, 132, 140, 147, 151, 153, 154, 162, 163, 164, 165, 166, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 194, 197, 198, 199, 200, 202, 203, 338, 339, 341, 349, 350, 356, 357, 404, 405, 408, 409, 418, 419, 420, 421, 425, 426, 429, 434, 435, 447, 448, 449], "kill": 167, "kind": [31, 32, 58, 64, 86, 143, 152, 193, 276, 277, 278, 311, 322, 346, 422, 468, 482, 483, 489, 491, 494], "know": [478, 488, 491, 502], "knowledg": [478, 490], "known": [324, 364, 377, 379, 390, 396, 399, 504], "kron": [3, 8], "kth": [31, 276, 311, 346], "kwarg": [12, 13, 22, 23, 24, 25, 26, 27, 28, 44, 45, 46, 52, 53, 55, 59, 60, 63, 65, 66, 72, 73, 82, 90, 91, 92, 94, 97, 120, 121, 122, 123, 124, 125, 126, 129, 131, 132, 140, 147, 151, 153, 154, 162, 163, 164, 165, 166, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 194, 198, 199, 200, 202, 258, 338, 339, 341, 349, 350, 356, 357, 404, 405, 408, 409, 418, 419, 420, 421, 425, 426, 429, 434, 435, 447, 448, 449, 482], "l": [36, 167, 169, 171, 483, 494, 504], "l2": [484, 488], "l2_norm": 488, "label": [86, 479, 482, 484, 487], "label_color": 487, "label_color_map": 487, "label_valu": 487, "lam": 378, "lambda": [363, 369, 398], "languag": [482, 483, 489], "laplac": [0, 3, 8, 376], "laptop": 504, "larg": [61, 68, 180, 203, 376, 378, 393, 432, 490, 497, 502, 503, 504], "larger": [43, 55, 80, 98, 99, 100, 103, 104, 105, 107, 110, 111, 113, 180, 394, 438, 450, 497, 504], "larger_imag": 504, "largest": [43, 87, 122, 175, 203, 381, 384], "last": [14, 19, 21, 31, 32, 41, 42, 48, 69, 80, 83, 98, 99, 100, 102, 103, 104, 105, 107, 108, 109, 110, 111, 113, 117, 130, 145, 174, 179, 191, 193, 215, 299, 317, 346, 351, 400, 407, 410, 415, 422, 423, 428, 430, 432, 436], "latenc": 504, "later": [376, 504], "latest": [491, 493, 504, 505], "latter": [353, 433, 502], "launch": [479, 495, 497, 502, 503], "launcher": [491, 495, 503, 504], "law": [399, 482, 483, 489], "layout": [34, 278, 296, 328, 400, 407], "lcm": [0, 3, 8], "ldexp": [0, 3, 8], "lead": [48, 197, 206, 207, 491, 503, 504], "leakag": 47, "learn": 491, "least": [38, 39, 40, 41, 43, 61, 68, 77, 85, 87, 114, 118, 150, 168, 169, 170, 171, 176, 178, 368, 414, 455, 479, 502, 504], "left": [14, 16, 17, 19, 29, 30, 41, 67, 81, 118, 164, 175, 195, 196, 204, 205, 208, 209, 210, 211, 212, 213, 214, 215, 317, 347, 351, 355, 394, 413, 415, 430, 452, 484, 490], "left_shift": [0, 3, 8], "leftmost": 136, "leg": 140, "legaci": 389, "legal": [146, 478, 494], "legales": 480, "legat": [352, 470, 479, 481, 482, 483, 489, 492, 493, 496, 499, 500, 501, 504, 505], "legate_auto_config": 504, "legate_config": [491, 500], "legate_cpus_2": 505, "legate_limit_stdout": 504, "legate_root": 479, "legate_task": 503, "legate_test": [470, 491], "legend": [482, 484], "legion": [501, 504], "legion_default_arg": 495, "lele": 484, "len": [57, 81, 100, 101, 105, 108, 110, 113, 144, 152, 197, 250, 487], "length": [12, 13, 16, 17, 21, 22, 23, 24, 25, 26, 27, 28, 36, 41, 43, 44, 45, 46, 52, 53, 57, 59, 60, 63, 65, 66, 70, 71, 72, 73, 80, 82, 90, 91, 92, 94, 97, 98, 99, 100, 102, 103, 104, 105, 106, 107, 108, 110, 111, 113, 120, 121, 122, 123, 124, 125, 126, 129, 130, 131, 132, 135, 137, 139, 140, 144, 147, 151, 153, 154, 162, 163, 164, 165, 166, 168, 169, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 194, 196, 197, 198, 199, 200, 202, 206, 207, 208, 210, 211, 317, 323, 338, 339, 341, 349, 350, 353, 356, 357, 360, 404, 405, 407, 408, 409, 411, 414, 415, 416, 417, 418, 419, 420, 421, 425, 426, 427, 429, 433, 434, 435, 436, 437, 447, 448, 455, 479, 484, 503], "less": [0, 3, 8, 42, 47, 57, 68, 70, 71, 79, 114, 133, 134, 161, 172, 206, 207, 213, 215, 351, 368, 395, 419, 430, 438, 488, 491, 502], "less_equ": [0, 3, 8], "let": [470, 478, 482, 483, 488, 489, 503, 504], "letter": 319, "level": [48, 68, 330, 466, 479, 496, 502, 504], "leverag": [143, 503, 504], "lexsort": [0, 3, 8], "lg": 503, "lgpatch": 500, "lh": 484, "liabil": 494, "liabl": 494, "liber": [83, 86, 145, 193, 436, 453], "librari": [286, 466, 470, 479, 491, 492, 494, 503, 504], "licens": [478, 482, 483, 489, 494], "lifespan": 490, "lightli": 493, "lightweight": 478, "like": [39, 40, 48, 56, 64, 74, 86, 110, 114, 176, 178, 179, 180, 191, 192, 193, 197, 278, 296, 321, 329, 353, 395, 397, 400, 407, 433, 440, 468, 478, 483, 484, 488, 489, 490, 495, 502, 503, 504, 505], "limit": [55, 98, 99, 100, 102, 103, 104, 105, 107, 108, 109, 110, 111, 112, 113, 168, 169, 170, 171, 177, 281, 376, 378, 394, 395, 482, 483, 489, 494, 504], "linalg": [0, 3, 8, 459, 468, 483, 484, 487, 488, 500, 502], "linalgerror": [8, 168, 169, 170, 171, 176, 177, 178], "line": [478, 481, 490, 491, 499, 503, 504], "linear": [61, 86, 177, 191, 212, 214, 347, 355, 459, 468, 479, 484, 488, 503, 504], "linearli": 502, "link": [496, 504], "linspac": [0, 3, 8, 21, 482, 484, 502], "linux": [478, 491, 493, 501], "list": [8, 21, 31, 32, 36, 37, 38, 39, 40, 48, 49, 54, 84, 86, 87, 93, 101, 114, 115, 130, 137, 138, 267, 330, 346, 416, 422, 424, 436, 439, 454, 479, 481, 487, 494], "liter": [64, 86, 143, 152], "literal_ev": 180, "littl": [83, 145, 193, 345, 436, 450, 453, 483], "live": 503, "ll": [487, 495, 503], "ln": [191, 398, 504], "load": [0, 3, 8, 293, 294, 503, 504], "loadtxt": [3, 8], "loan": 175, "loc": [367, 369, 370, 376, 484], "local": [490, 491, 503, 504], "local_grid": 490, "local_hist": 503, "local_ni": 490, "local_nx": 490, "local_rank": 490, "locat": [12, 13, 22, 23, 24, 25, 26, 27, 28, 44, 45, 46, 49, 51, 52, 53, 59, 60, 63, 65, 66, 72, 73, 82, 90, 91, 92, 94, 97, 114, 120, 121, 122, 123, 124, 125, 126, 129, 131, 132, 140, 147, 151, 153, 154, 155, 156, 162, 163, 164, 165, 166, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 192, 193, 194, 197, 198, 199, 200, 202, 317, 338, 339, 341, 344, 349, 350, 356, 357, 367, 369, 370, 377, 404, 405, 408, 409, 415, 418, 419, 420, 421, 425, 426, 429, 434, 435, 447, 448, 485, 487, 499, 500, 504], "lock": 296, "log": [0, 3, 8, 191, 371, 372, 482, 492], "log10": [0, 3, 8], "log1p": [0, 3, 8], "log2": [0, 3, 8], "log_bas": 191, "logaddexp": [0, 3, 8], "logaddexp2": [0, 3, 8], "logarithm": [181, 182, 183, 184, 185, 186, 372, 468], "logic": [14, 19, 345, 459, 468, 490, 503], "logical_and": [0, 3, 8, 502], "logical_not": [0, 3, 8], "logical_or": [0, 3, 8], "logical_xor": [0, 3, 8], "logist": [0, 3, 8], "lognorm": [0, 3, 8], "logseri": [0, 3, 8], "logspac": [0, 3, 8], "lomax": 377, "long": [3, 8, 384, 504], "longdoubl": [3, 8, 302], "longer": [43, 61, 102, 108, 502], "longlong": [3, 8], "look": [433, 478, 489, 491, 503], "lookup": 152, "loop": [488, 490], "lorena": 490, "lorentz": 390, "lose": [302, 330], "loss": 494, "lost": 329, "low": [104, 105, 381, 384, 395, 466], "lower": [55, 96, 135, 137, 167, 169, 171, 212, 214, 347, 355, 394, 395, 440, 441, 442, 443, 483, 490], "lowercas": 296, "lowest": [41, 87, 162, 377, 381, 384], "lstsq": [3, 8], "lt": 484, "m": [40, 42, 47, 61, 68, 83, 85, 96, 99, 100, 102, 104, 105, 108, 110, 113, 117, 118, 119, 133, 134, 161, 167, 168, 169, 170, 171, 172, 173, 176, 177, 178, 193, 195, 197, 209, 299, 344, 353, 358, 359, 361, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 381, 384, 385, 386, 387, 388, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 412, 416, 432, 433, 440, 441, 442, 444, 445, 452, 479, 482, 483, 489, 493, 503, 504], "machin": [329, 403, 479, 491, 495, 504, 505], "maco": [491, 493], "made": [34, 38, 203, 278, 296, 319, 400], "magenta": 487, "magnitud": [18, 487, 504], "mai": [6, 14, 19, 21, 29, 30, 49, 51, 54, 55, 58, 64, 70, 71, 86, 130, 175, 180, 193, 197, 203, 206, 207, 278, 296, 321, 330, 353, 359, 395, 396, 411, 470, 478, 481, 482, 483, 484, 488, 489, 491, 494, 496, 499, 500, 503, 504], "main": [75, 76, 77, 78, 79, 96, 114, 141, 438, 440, 441, 484, 495, 504, 505], "maintain": [79, 478, 490], "mainten": 490, "major": [34, 298, 400, 451, 491], "make": [48, 49, 56, 64, 85, 139, 197, 286, 296, 368, 414, 455, 468, 478, 479, 483, 487, 490, 491, 496, 497, 500, 502, 503, 504], "make_grid": 489, "manag": [362, 470, 490, 504], "mani": [86, 324, 363, 450, 479, 503, 504], "manifest": 502, "manipul": [459, 468], "manner": [496, 504], "mantissa": 126, "manual": [437, 478, 490, 493, 497, 504], "map": [54, 487, 490, 503], "mapper": 491, "margin": 81, "mark": 478, "marker": 487, "marku": 488, "mask": [160, 192, 348, 354, 487], "mask_func": 192, "mask_funct": 192, "mask_indic": [0, 3, 8], "mass": [135, 366], "master": 504, "match": [48, 55, 58, 64, 80, 130, 193, 353, 428, 433, 452, 470, 484, 503], "materi": [192, 296, 485, 487, 494], "math": [302, 470, 494], "mathbf": [484, 488, 504], "mathemat": [175, 459, 468, 504], "mathtt": 482, "matmul": [0, 3, 8, 470, 503, 504], "matmul_cache_s": 459, "matmul_task": 503, "matplotlib": [482, 484, 485, 487, 489, 504], "matric": [48, 114, 168, 169, 170, 171, 172, 174, 175, 193, 197, 400, 468, 483, 484, 503, 504], "matrix": [7, 8, 68, 79, 83, 167, 168, 169, 170, 171, 172, 173, 175, 176, 177, 193, 197, 333, 336, 400, 411, 444, 453, 468, 483, 484, 488, 501], "matrix_norm": 8, "matrix_pow": [0, 8], "matrix_rank": [3, 8], "matrix_transpos": [3, 8], "matter": 491, "matthew": 494, "matvec": [3, 8], "max": [0, 135, 152, 175, 211, 281, 437, 485, 487, 502, 504], "max_eager_volum": 459, "max_header_s": 180, "max_it": 489, "maxim": 504, "maximum": [0, 3, 8, 16, 17, 29, 42, 47, 55, 87, 123, 133, 134, 137, 161, 180, 204, 208, 211, 274, 305, 487, 496, 502], "may_share_memori": [3, 8], "mayb": 478, "mb": [481, 504], "md": 175, "me": 478, "mean": [0, 3, 8, 48, 64, 67, 86, 99, 100, 104, 105, 110, 111, 113, 127, 130, 175, 193, 209, 278, 298, 328, 333, 361, 369, 370, 371, 375, 376, 382, 397, 400, 407, 412, 432, 450, 486, 488, 503, 504], "measur": [363, 452, 491, 497, 498, 500, 501, 503, 504], "mechan": [478, 503], "median": [0, 3, 8, 210, 370], "median_unbias": [212, 214, 347, 355], "medic": 503, "meet": [34, 478, 502, 504], "memavail": 491, "meminfo": 491, "memmap": [3, 8], "memo": 225, "memori": [34, 49, 51, 143, 152, 172, 192, 196, 197, 210, 212, 214, 278, 279, 289, 296, 298, 308, 319, 324, 328, 347, 355, 400, 407, 481, 484, 490, 503, 504], "memoryview": 289, "mention": [487, 491, 502, 504], "merchant": 494, "merg": [54, 478, 494, 497, 503], "merged_arrai": 54, "mergesort": [32, 152, 422], "merton": 504, "mesh": [160, 490, 497], "meshgrid": [0, 3, 8, 160], "messag": [491, 497], "met": [494, 502], "method": [1, 2, 4, 7, 14, 16, 17, 19, 34, 61, 152, 172, 180, 195, 208, 211, 212, 213, 214, 302, 320, 321, 329, 337, 347, 351, 355, 430, 482, 486, 496, 503, 504], "mgrid": 160, "microsecond": 502, "middl": [104, 105], "midpoint": [212, 214, 347, 355], "might": [32, 70, 86, 192, 422, 488, 491, 497, 502, 503, 504], "million": [482, 490, 503], "millisecond": [497, 502, 503], "mimic": [345, 450, 490], "mimick": 490, "min": [0, 135, 152, 175, 176, 178, 211, 281], "min_cpu_chunk": 459, "min_gpu_chunk": 459, "min_omp_chunk": 459, "min_scalar_typ": [3, 8], "miniforg": 504, "miniforge3": 504, "minim": [47, 504], "minimum": [0, 3, 8, 16, 17, 30, 34, 43, 55, 120, 124, 137, 205, 208, 211, 275, 307, 504], "minlength": [43, 487], "mintypecod": [3, 8], "mirror": 490, "miscellan": 468, "mise": 396, "mismatch": [48, 54, 57, 503], "mitig": 502, "mkdir": 504, "mod": [3, 8, 54], "mode": [54, 61, 86, 98, 99, 100, 102, 103, 104, 105, 107, 108, 109, 110, 111, 112, 113, 176, 180, 280, 313, 327, 352, 367, 387, 390, 394, 396, 401, 432, 470, 485, 502, 504], "model": [366, 479, 482, 483, 489, 490, 504], "modf": [0, 3, 8], "modif": [478, 490, 494], "modifi": [64, 114, 196, 210, 212, 214, 347, 355, 478, 484, 494], "modul": [286, 411, 504], "modular": 54, "moivr": 376, "monoton": [81, 135, 137], "more": [38, 39, 40, 49, 51, 55, 70, 71, 75, 79, 81, 83, 85, 86, 98, 103, 108, 109, 111, 112, 139, 145, 172, 174, 193, 197, 206, 207, 213, 324, 397, 398, 412, 414, 428, 436, 438, 449, 453, 455, 481, 483, 484, 485, 487, 490, 493, 495, 496, 502, 503, 504, 505], "moshier": 494, "most": [34, 80, 85, 86, 87, 103, 139, 203, 368, 403, 414, 433, 455, 478, 490, 496, 504], "mostli": 491, "motion": 397, "move": [201, 324, 503, 504], "moveaxi": [0, 3, 8], "mpi": [490, 495, 504], "mpi4pi": [490, 497], "mpi_fin": 490, "mpirun": 495, "msg00295": 494, "mt19937": [3, 8], "mu": [369, 377, 396], "much": [42, 478, 502], "multi": [3, 86, 98, 99, 100, 102, 103, 104, 105, 107, 108, 109, 110, 111, 112, 113, 168, 169, 170, 171, 172, 177, 490, 491, 492, 493, 501, 502], "multi_dot": [0, 8], "multi_index": 401, "multidimension": [137, 453], "multinomi": [3, 8], "multipl": [1, 2, 7, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 116, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 177, 179, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 217, 218, 219, 223, 224, 225, 226, 227, 229, 230, 232, 233, 234, 235, 236, 237, 238, 239, 242, 243, 244, 245, 246, 247, 248, 249, 251, 252, 253, 254, 255, 256, 257, 259, 260, 261, 263, 264, 265, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 280, 281, 282, 283, 284, 285, 290, 291, 294, 295, 298, 302, 305, 306, 307, 310, 311, 312, 313, 314, 316, 317, 319, 322, 323, 325, 326, 327, 328, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 481, 488, 490, 491, 493, 501, 502, 505], "multipli": [0, 3, 8, 70, 83, 193, 206, 351, 377, 385, 386, 388, 502, 503], "multivariate_norm": [3, 8], "must": [1, 12, 13, 14, 16, 17, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 41, 44, 45, 46, 48, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 63, 65, 66, 70, 71, 72, 73, 80, 81, 82, 83, 85, 90, 91, 92, 94, 97, 102, 108, 110, 118, 120, 121, 122, 123, 124, 125, 126, 129, 130, 131, 132, 135, 139, 140, 145, 147, 151, 153, 154, 155, 156, 162, 163, 164, 165, 166, 167, 174, 175, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 193, 194, 195, 196, 198, 199, 200, 201, 202, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 267, 281, 296, 333, 338, 339, 341, 347, 348, 349, 350, 351, 353, 355, 356, 357, 361, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 374, 375, 376, 377, 378, 379, 380, 382, 387, 392, 393, 394, 397, 398, 399, 404, 405, 408, 409, 410, 412, 413, 414, 415, 418, 419, 420, 421, 425, 426, 428, 429, 430, 433, 434, 435, 436, 438, 447, 448, 450, 452, 453, 455, 479, 490, 494, 495, 503, 504], "my": 478, "myenv": [493, 504], "myron": 504, "n": [7, 33, 36, 40, 43, 54, 61, 68, 76, 77, 80, 81, 83, 85, 96, 98, 99, 100, 102, 103, 104, 105, 107, 108, 110, 111, 113, 114, 130, 136, 137, 141, 144, 160, 173, 175, 176, 178, 192, 193, 197, 317, 324, 333, 344, 348, 354, 358, 359, 361, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 381, 384, 385, 386, 387, 388, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 411, 414, 415, 424, 436, 440, 441, 442, 445, 446, 452, 455, 459, 482, 483, 484, 487, 489, 493, 495, 503, 504], "n1": 197, "n2": 197, "n3": 197, "n_bin": 503, "n_centroid": 487, "n_dim": 487, "n_element": 487, "n_gpu": 490, "n_iter": 487, "n_iter_check": 487, "n_point": 484, "n_stencil": 484, "n_warmup_it": 497, "naiv": [502, 504], "name": [293, 296, 319, 331, 397, 478, 494, 500, 504, 505], "nan": [15, 29, 30, 35, 148, 154, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 496], "nan_to_num": [0, 3, 8], "nanargmax": [0, 3, 8, 205, 470], "nanargmin": [0, 3, 8, 204, 470], "nancumprod": [0, 3, 8], "nancumsum": [0, 3, 8], "nanmax": [0, 3, 8, 211, 470], "nanmean": [0, 3, 8], "nanmedian": [0, 3, 8], "nanmin": [0, 3, 8, 208, 470], "nanpercentil": [0, 3, 8], "nanprod": [0, 3, 8], "nanquantil": [0, 3, 8], "nanstd": [3, 8], "nansum": [0, 3, 8], "nanvar": [3, 8], "nation": 504, "nativ": 496, "natur": [181, 183, 376, 504], "navier": 490, "nbad": 368, "nd": [6, 48, 302], "ndarrai": [0, 7, 8, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 361, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 384, 385, 386, 387, 388, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 464, 470, 485, 487, 488, 496, 499, 503, 504], "ndenumer": [3, 8], "ndim": [0, 3, 6, 8, 16, 17, 33, 38, 39, 40, 48, 76, 79, 114, 175, 211, 330, 433, 437], "ndindex": [3, 8], "nditer": [3, 8], "ndmin": 34, "ndshape": [6, 50, 320, 401, 417, 451], "ndshapelik": [4, 50, 51, 117, 127, 128, 342, 343, 386, 388, 407, 427, 458], "nearest": [212, 214, 330, 347, 355, 409], "necessari": [38, 43, 48, 54, 64, 70, 71, 102, 108, 110, 114, 195, 196, 206, 207, 209, 210, 213, 215, 351, 352, 413, 430, 452, 490, 499, 503], "necessarili": [54, 482, 483, 489], "need": [34, 49, 64, 81, 196, 197, 210, 400, 432, 433, 456, 470, 479, 483, 487, 490, 491, 502, 503, 504], "neg": [0, 3, 8, 14, 19, 41, 43, 54, 78, 79, 96, 103, 104, 105, 108, 117, 120, 130, 153, 155, 173, 179, 203, 215, 299, 351, 363, 365, 367, 369, 370, 371, 373, 374, 376, 379, 380, 382, 387, 392, 400, 413, 425, 430, 432, 436, 438, 450], "negative_binomi": [0, 3, 8], "neginf": 203, "neglig": 494, "neighbor": [484, 490, 504], "neither": 494, "nersc": 504, "nest": [34, 48, 330, 490, 502], "nested_it": 3, "network": 501, "never": [61, 319], "new": [14, 19, 51, 54, 70, 71, 74, 79, 88, 89, 93, 117, 118, 119, 127, 146, 179, 191, 192, 195, 196, 201, 206, 207, 209, 210, 213, 215, 220, 278, 280, 292, 316, 333, 336, 342, 362, 383, 407, 413, 428, 431, 437, 452, 457, 466, 487, 493, 503, 504], "new_label": 487, "newaxi": [333, 487, 503], "newli": [34, 278], "newshap": 407, "newton": 486, "next": [324, 339, 478, 504], "nextaft": [0, 3, 8], "ngood": 368, "ni": [197, 353, 432, 433], "nightli": 493, "ninja": 479, "niter": [488, 497, 502], "nj": [353, 432, 433], "nk": [353, 432, 433], "nn": 197, "nnewton": 488, "nnode": 504, "node": [296, 481, 490, 491, 492, 493, 501, 505], "non": [14, 16, 17, 19, 21, 33, 39, 40, 41, 43, 67, 116, 135, 149, 160, 175, 179, 192, 195, 197, 203, 208, 211, 213, 296, 308, 310, 340, 348, 351, 363, 365, 367, 369, 370, 371, 374, 375, 376, 379, 380, 382, 387, 392, 425, 430, 436, 450, 490, 496], "nonc": [374, 375], "noncentr": [374, 375], "noncentral_chisquar": [0, 3, 8], "noncentral_f": [0, 3, 8], "none": [1, 2, 4, 6, 12, 13, 14, 16, 17, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 34, 37, 41, 43, 44, 45, 46, 52, 53, 54, 55, 57, 58, 59, 60, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 79, 80, 82, 83, 86, 89, 90, 91, 92, 94, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 117, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 135, 136, 137, 140, 143, 145, 146, 147, 151, 152, 153, 154, 155, 156, 162, 163, 164, 165, 166, 174, 175, 177, 179, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 193, 194, 195, 196, 198, 199, 200, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 272, 273, 274, 275, 276, 277, 279, 280, 281, 282, 286, 287, 288, 290, 291, 294, 299, 300, 302, 305, 306, 307, 311, 312, 313, 317, 318, 319, 322, 323, 325, 327, 330, 332, 333, 335, 336, 338, 339, 341, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 355, 356, 357, 358, 359, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 381, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 404, 405, 406, 408, 409, 410, 413, 415, 418, 419, 420, 421, 422, 425, 426, 427, 428, 429, 430, 432, 433, 434, 435, 436, 438, 439, 440, 442, 445, 447, 448, 449, 450, 452, 453, 456, 458, 470, 487, 503], "noninfring": 494, "nonneg": [368, 398], "nonzero": [0, 3, 8, 95, 116, 160, 345, 502, 504], "nor": 494, "norm": [0, 8, 98, 99, 100, 102, 103, 104, 105, 107, 108, 109, 110, 111, 112, 113, 172, 468, 484, 487, 488, 502], "normal": [0, 3, 8, 42, 47, 48, 68, 98, 99, 100, 102, 103, 104, 105, 107, 108, 109, 110, 111, 112, 113, 133, 134, 135, 136, 137, 161, 168, 169, 358, 361, 369, 371, 382, 393, 396, 482, 485, 487, 504], "normal_unbias": [212, 214, 347, 355], "north": [489, 504], "not_equ": [0, 3, 8, 487], "note": [12, 13, 15, 18, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 34, 37, 44, 45, 46, 52, 53, 54, 59, 60, 61, 63, 64, 65, 66, 68, 70, 71, 72, 73, 74, 79, 80, 81, 82, 83, 86, 87, 90, 91, 92, 94, 97, 98, 99, 100, 101, 102, 103, 104, 105, 107, 108, 109, 110, 111, 112, 113, 114, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 129, 131, 132, 135, 140, 143, 144, 145, 146, 147, 148, 151, 153, 154, 159, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 192, 193, 194, 197, 198, 199, 200, 202, 206, 207, 208, 211, 278, 289, 296, 302, 308, 319, 321, 324, 329, 330, 336, 338, 339, 341, 346, 349, 350, 356, 357, 362, 371, 400, 403, 404, 405, 406, 407, 408, 409, 410, 411, 418, 419, 420, 421, 425, 426, 429, 432, 434, 435, 436, 440, 442, 443, 445, 446, 447, 448, 449, 453, 484, 485, 488, 491, 502, 504], "notebook": 505, "notic": [482, 488, 491, 493], "notion": [169, 171], "novel": 503, "now": [54, 479, 482, 483, 485, 489, 503, 504], "np": [12, 13, 16, 17, 22, 23, 24, 25, 26, 27, 28, 44, 45, 46, 48, 52, 53, 59, 60, 63, 65, 66, 70, 71, 72, 73, 80, 81, 82, 86, 90, 91, 92, 94, 97, 115, 116, 120, 121, 122, 123, 124, 125, 126, 129, 131, 132, 137, 140, 146, 147, 151, 152, 153, 154, 160, 162, 163, 164, 165, 166, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 192, 193, 194, 196, 197, 198, 199, 200, 202, 206, 207, 210, 297, 321, 324, 333, 338, 339, 341, 349, 350, 351, 356, 357, 384, 403, 404, 405, 408, 409, 418, 419, 420, 421, 425, 426, 429, 430, 432, 434, 435, 437, 447, 448, 482, 483, 484, 485, 487, 488, 489, 490, 495, 496, 497, 500, 502, 504, 505], "npoint": 484, "npt": [4, 36, 55, 58, 96, 127, 128, 137, 141, 144, 149, 150, 157, 159, 179, 191, 279, 297, 318, 336, 342, 343, 386, 388, 416, 437, 440, 456, 458], "npy": [180, 468], "npz": [180, 468], "nsampl": 368, "ntask": 504, "ntime": 503, "nuc": 175, "nuclear": 175, "null": 433, "nullabl": 503, "num": [179, 191, 502, 504], "num_bin": 503, "num_parallel": 479, "num_timestep": 490, "numa": 479, "number": [2, 3, 6, 8, 12, 13, 15, 18, 22, 23, 24, 25, 26, 27, 28, 33, 34, 41, 42, 43, 44, 45, 46, 47, 49, 52, 53, 54, 59, 60, 63, 65, 66, 67, 68, 72, 73, 76, 78, 80, 82, 87, 90, 91, 92, 93, 94, 96, 97, 100, 102, 103, 104, 105, 107, 108, 110, 111, 113, 120, 121, 122, 123, 124, 125, 126, 129, 130, 131, 132, 133, 134, 135, 136, 137, 140, 141, 144, 147, 150, 151, 153, 154, 158, 160, 161, 162, 163, 164, 165, 166, 175, 179, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 194, 195, 198, 199, 200, 202, 203, 206, 207, 208, 209, 211, 213, 215, 304, 309, 321, 337, 338, 339, 341, 345, 348, 349, 350, 356, 357, 359, 360, 361, 366, 368, 373, 376, 378, 389, 404, 405, 406, 408, 409, 410, 412, 413, 418, 419, 420, 421, 425, 426, 429, 432, 434, 435, 437, 440, 447, 448, 449, 450, 452, 453, 468, 470, 481, 482, 484, 488, 490, 491, 495, 496, 503, 504], "number_of_dimens": 337, "numer": [103, 104, 105, 108, 110, 155, 156, 175, 338, 349, 364, 375, 468, 490, 496], "numit": 6, "numpi": [1, 2, 3, 4, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 94, 95, 96, 97, 98, 99, 100, 102, 103, 104, 105, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 278, 286, 292, 296, 319, 324, 336, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 402, 403, 404, 405, 406, 407, 408, 409, 411, 414, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 468, 470, 481, 482, 483, 484, 485, 487, 488, 489, 490, 492, 498, 499, 501, 503, 505], "numpy_compat": 459, "nvidia": [482, 483, 485, 489, 491, 493, 504, 505], "nx": [136, 137, 197, 490, 502, 504], "ny": [136, 137, 197, 490, 502, 504], "nyquist": [101, 103, 104, 105], "o": [1, 296, 362, 487, 497, 504], "obj": [34, 74, 146], "object": [6, 14, 19, 34, 62, 146, 159, 167, 175, 180, 196, 210, 212, 214, 267, 279, 286, 289, 296, 302, 304, 308, 328, 329, 330, 336, 347, 355, 362, 407, 436, 440, 449, 503], "object_": [3, 8], "observ": 68, "obtain": [144, 321, 377, 482, 483, 489, 494, 503], "occas": 478, "occasion": 496, "occur": [58, 64, 70, 71, 74, 86, 146, 193, 203, 206, 207, 278, 298, 373, 376, 378, 394, 400, 502, 504], "occurr": [43, 449], "odd": [42, 47, 102, 106, 108, 110, 111, 133, 134, 161], "ofc": 70, "off": [21, 450, 478, 484], "offer": [491, 493, 502], "offload": 470, "offset": [4, 79, 192, 290, 300, 318, 324, 332, 438, 442, 443, 445, 446, 497], "often": [21, 42, 358, 361, 376, 478, 487, 502, 504], "ogrid": 160, "omiss": 336, "omit": [267, 336], "omp": [481, 491, 504], "ompthread": [481, 504], "onc": [478, 479, 490, 504], "one": [6, 14, 16, 17, 19, 29, 30, 38, 41, 42, 43, 47, 49, 51, 54, 55, 64, 67, 74, 86, 96, 98, 99, 102, 103, 104, 106, 107, 108, 110, 111, 130, 133, 134, 141, 144, 150, 160, 161, 175, 183, 195, 196, 197, 204, 205, 206, 208, 209, 210, 211, 212, 213, 214, 215, 289, 296, 297, 298, 302, 323, 324, 340, 347, 351, 355, 366, 377, 381, 416, 427, 428, 430, 442, 443, 445, 446, 452, 466, 478, 482, 490, 491, 493, 497, 502, 503, 504], "ones": [0, 3, 8, 83, 93, 96, 141, 145, 155, 156, 192, 193, 206, 213, 215, 343, 436, 440, 453, 484, 487, 490, 496, 502, 503], "ones_lik": [0, 3, 8], "onli": [12, 13, 22, 23, 24, 25, 26, 27, 28, 34, 36, 38, 41, 42, 44, 45, 46, 47, 52, 53, 55, 59, 60, 61, 63, 64, 65, 66, 72, 73, 82, 83, 86, 87, 90, 91, 92, 94, 97, 101, 120, 121, 122, 123, 124, 125, 126, 129, 130, 131, 132, 133, 134, 135, 140, 144, 147, 151, 152, 153, 154, 161, 162, 163, 164, 165, 166, 167, 169, 171, 175, 179, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 193, 194, 198, 199, 200, 202, 203, 204, 205, 208, 211, 278, 296, 302, 319, 338, 339, 341, 348, 349, 350, 353, 356, 357, 389, 400, 404, 405, 406, 407, 408, 409, 418, 419, 420, 421, 425, 426, 429, 433, 434, 435, 436, 447, 448, 449, 450, 453, 466, 470, 478, 485, 487, 490, 493, 495, 496, 497, 502, 503, 504], "onto": [296, 491], "oom": 491, "op": 389, "open": [21, 81, 160, 179, 180, 329, 381, 383, 385, 386, 388, 395, 478, 485, 491, 493, 504], "openmp": [479, 481, 504], "oper": [7, 16, 17, 85, 86, 87, 93, 122, 139, 145, 167, 203, 208, 299, 344, 353, 406, 414, 436, 449, 453, 455, 459, 468, 470, 484, 485, 490, 496, 497, 503], "operand": [86, 87], "opposit": [278, 296], "optim": [47, 86, 87, 143, 174, 302, 470, 484, 490, 499, 504], "option": [1, 12, 13, 14, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 34, 37, 41, 43, 44, 45, 46, 49, 51, 52, 53, 54, 55, 57, 58, 59, 60, 61, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 78, 79, 80, 81, 82, 83, 86, 88, 89, 90, 91, 92, 94, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 117, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 135, 136, 137, 140, 141, 143, 144, 145, 146, 147, 151, 152, 153, 154, 155, 156, 162, 163, 164, 165, 166, 169, 171, 174, 175, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 267, 278, 298, 299, 317, 319, 328, 336, 338, 339, 341, 342, 343, 344, 345, 346, 347, 349, 350, 351, 352, 355, 356, 357, 358, 359, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 384, 385, 386, 387, 388, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 403, 404, 405, 406, 407, 408, 409, 410, 413, 415, 416, 418, 419, 420, 421, 422, 424, 425, 426, 427, 428, 429, 430, 432, 434, 435, 436, 438, 439, 440, 441, 442, 443, 445, 446, 447, 448, 449, 450, 451, 452, 453, 457, 458, 478, 479, 481, 486, 491, 493, 495, 499, 500, 502, 503], "ord": [175, 487], "order": [4, 12, 13, 22, 23, 24, 25, 26, 27, 28, 31, 32, 34, 44, 45, 46, 52, 53, 59, 60, 63, 64, 65, 66, 72, 73, 79, 81, 82, 86, 87, 90, 91, 92, 94, 97, 103, 104, 105, 108, 110, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 129, 130, 131, 132, 140, 147, 151, 153, 154, 162, 163, 164, 165, 166, 169, 171, 174, 175, 178, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 193, 194, 197, 198, 199, 200, 201, 202, 224, 276, 277, 278, 298, 299, 311, 314, 316, 317, 322, 328, 329, 331, 333, 338, 339, 341, 345, 346, 349, 350, 352, 356, 357, 358, 366, 400, 401, 404, 405, 407, 408, 409, 412, 415, 418, 419, 420, 421, 422, 425, 426, 429, 434, 435, 436, 447, 448, 450, 451, 468, 482, 483, 484, 501, 502, 503, 504], "ordertyp": [4, 400, 401, 407, 451], "ordin": 177, "ordinari": [145, 167], "org": [363, 478, 482, 483, 489, 494], "organ": 494, "orient": [353, 433], "origin": [12, 13, 22, 23, 24, 25, 26, 27, 28, 41, 44, 45, 46, 49, 51, 52, 53, 59, 60, 63, 64, 65, 66, 72, 73, 82, 90, 91, 92, 94, 97, 120, 121, 122, 123, 124, 125, 126, 129, 131, 132, 140, 147, 151, 153, 154, 162, 163, 164, 165, 166, 175, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 194, 196, 197, 198, 199, 200, 201, 202, 210, 212, 214, 338, 339, 341, 347, 349, 350, 355, 356, 357, 404, 405, 407, 408, 409, 410, 418, 419, 420, 421, 425, 426, 429, 434, 435, 447, 448, 449, 480, 485, 490, 500, 503, 504], "ortho": [98, 99, 100, 102, 103, 104, 105, 107, 108, 109, 110, 111, 112, 113], "orthonorm": 176, "oserror": 180, "other": [6, 12, 13, 21, 22, 23, 24, 25, 26, 27, 28, 34, 44, 45, 46, 49, 50, 52, 53, 54, 55, 59, 60, 61, 63, 65, 66, 72, 73, 80, 82, 86, 90, 91, 92, 94, 97, 103, 104, 105, 108, 110, 120, 121, 122, 123, 124, 125, 126, 129, 131, 132, 140, 141, 147, 151, 153, 154, 162, 163, 164, 165, 166, 174, 175, 179, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 194, 198, 199, 200, 201, 202, 212, 214, 278, 279, 286, 296, 319, 321, 324, 338, 339, 341, 347, 349, 350, 355, 356, 357, 377, 394, 395, 404, 405, 408, 409, 411, 418, 419, 420, 421, 425, 426, 429, 434, 435, 440, 447, 448, 468, 470, 478, 482, 491, 494, 497, 502, 503], "otherwis": [15, 29, 30, 34, 35, 41, 67, 68, 80, 143, 145, 152, 179, 191, 195, 196, 204, 205, 208, 209, 210, 211, 212, 214, 278, 298, 328, 347, 355, 389, 400, 407, 415, 431, 438, 439, 440, 452, 456, 470, 490, 494], "ouput": 470, "our": [478, 485, 489, 491, 496, 502, 504], "out": [12, 13, 14, 16, 17, 19, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 34, 37, 42, 43, 44, 45, 46, 47, 52, 53, 54, 55, 57, 58, 59, 60, 61, 63, 65, 66, 68, 70, 71, 72, 73, 74, 75, 78, 80, 82, 83, 86, 88, 89, 90, 91, 92, 94, 97, 98, 99, 100, 102, 103, 104, 105, 107, 108, 109, 110, 111, 112, 113, 117, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 131, 132, 133, 134, 140, 141, 142, 145, 146, 147, 149, 151, 153, 154, 155, 156, 157, 160, 161, 162, 163, 164, 165, 166, 174, 177, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 192, 193, 194, 195, 196, 198, 199, 200, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 272, 273, 274, 275, 280, 281, 282, 287, 288, 291, 299, 305, 306, 307, 312, 325, 327, 332, 333, 335, 338, 339, 341, 342, 343, 344, 346, 347, 349, 350, 351, 352, 355, 356, 357, 358, 359, 360, 361, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 384, 385, 386, 387, 388, 391, 392, 393, 394, 395, 396, 397, 398, 399, 402, 403, 404, 405, 408, 409, 411, 413, 418, 419, 420, 421, 422, 423, 425, 426, 428, 429, 430, 432, 433, 434, 435, 436, 438, 447, 448, 452, 453, 456, 457, 458, 481, 483, 489, 494, 499, 502, 503, 504], "out_arr": 503, "out_stor": 503, "outcom": [366, 504], "outer": [0, 3, 8, 87, 137], "outermost": [48, 54], "outlier": 136, "outlin": 490, "output": [12, 13, 14, 15, 16, 17, 19, 21, 22, 23, 24, 25, 26, 27, 28, 42, 43, 44, 45, 46, 47, 48, 52, 53, 55, 57, 59, 60, 61, 63, 65, 66, 70, 71, 72, 73, 78, 80, 81, 82, 83, 86, 87, 88, 90, 91, 92, 94, 96, 97, 98, 99, 100, 102, 103, 104, 105, 108, 109, 110, 116, 120, 121, 122, 123, 124, 125, 126, 129, 131, 132, 133, 134, 140, 141, 142, 144, 145, 147, 148, 149, 151, 153, 154, 160, 161, 162, 163, 164, 165, 166, 174, 177, 179, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 193, 194, 195, 196, 197, 198, 199, 200, 202, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 329, 338, 339, 341, 344, 345, 347, 349, 350, 351, 355, 356, 357, 358, 359, 361, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 381, 384, 385, 386, 387, 388, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 402, 403, 404, 405, 406, 408, 409, 410, 413, 416, 418, 419, 420, 421, 425, 426, 429, 430, 434, 435, 436, 437, 438, 447, 448, 449, 450, 452, 453, 459, 468, 470, 481, 490, 491, 499, 503, 504], "outputarrai": 503, "outputstor": 503, "outsid": [54, 55, 81, 135, 136, 484], "outweigh": 503, "over": [12, 13, 14, 16, 17, 19, 22, 23, 24, 25, 26, 27, 28, 41, 44, 45, 46, 52, 53, 59, 60, 63, 65, 66, 70, 71, 72, 73, 82, 83, 86, 87, 90, 91, 92, 94, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 117, 120, 121, 122, 123, 124, 125, 126, 129, 131, 132, 135, 140, 145, 147, 151, 152, 153, 154, 162, 163, 164, 165, 166, 175, 179, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 194, 195, 197, 198, 199, 200, 202, 206, 207, 208, 209, 213, 215, 297, 298, 299, 312, 325, 338, 339, 341, 345, 349, 350, 351, 353, 356, 357, 359, 363, 378, 380, 385, 386, 388, 394, 395, 398, 404, 405, 408, 409, 410, 418, 419, 420, 421, 425, 426, 429, 430, 432, 433, 434, 435, 436, 447, 448, 450, 452, 470, 489, 490, 503, 504], "overal": [470, 481, 490, 504], "overcom": 329, "overflow": [21, 120, 321], "overhead": [470, 490, 497, 503], "overlap": 484, "overrid": [69, 89, 128, 343, 458, 493], "overridden": [1, 68], "oversubscrib": 491, "overwrite_input": [196, 210, 212, 214, 347, 355], "own": [296, 319, 376, 478, 493, 504], "owndata": 296, "owner": [296, 319, 494], "p": [92, 197, 359, 363, 366, 372, 373, 376, 411, 439, 504], "p1": 137, "p2": 137, "p3": 137, "pack": [345, 400, 450, 468], "packag": [212, 214, 347, 355, 485, 488, 491, 495, 497, 504], "packbit": [0, 3, 8], "packg": 495, "pad": [8, 61, 98, 99, 100, 102, 103, 104, 105, 107, 108, 110, 111, 113, 345, 450], "pade": 172, "page": [363, 478, 492], "pair": [87, 98, 99, 100, 102, 103, 104, 105, 107, 108, 109, 110, 111, 112, 113, 122], "pairwis": 487, "pairwise_dist": 487, "paper": [212, 214, 347, 355, 484], "parallel": [29, 30, 70, 71, 98, 99, 100, 102, 103, 104, 105, 107, 108, 109, 110, 111, 112, 113, 168, 169, 170, 171, 177, 206, 207, 479, 490, 495, 503, 504], "param": 191, "paramet": [1, 2, 6, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 267, 278, 286, 293, 294, 295, 298, 299, 302, 317, 319, 328, 329, 330, 333, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 384, 385, 386, 387, 388, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 445, 446, 447, 448, 449, 450, 451, 452, 453, 455, 456, 457, 458, 481, 502, 503, 504], "parameter": [358, 359, 361, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 387, 392, 393, 394, 395, 396, 397, 398, 399], "parenthes": 174, "pareto": [0, 3, 8], "parse_arg": [503, 504], "parser": [503, 504], "part": [18, 57, 142, 149, 150, 157, 158, 168, 169, 170, 171, 200, 301, 315, 402, 403, 413, 423, 478, 503], "parti": 493, "partial": [98, 99, 100, 102, 103, 104, 105, 107, 108, 109, 110, 111, 112, 113, 196, 210, 488, 503, 504], "particular": 494, "particularli": 504, "partit": [0, 3, 8, 31, 70, 276, 490, 497, 503, 504], "pass": [14, 16, 17, 18, 19, 34, 48, 137, 160, 180, 192, 195, 203, 208, 211, 213, 278, 351, 362, 430, 440, 479, 481, 497, 501, 503, 504], "past": 504, "patch": 500, "path": [87, 180, 293, 329, 479], "pathlib": [180, 293, 329], "pathlik": 180, "pattern": [41, 470, 502, 503], "pcg64": [3, 8], "pcg64dxsm": [3, 8], "pcolor": 489, "pdf": [394, 482], "peak": [369, 394], "peebl": [363, 376], "pend": [34, 437], "pentadiagon": 484, "per": [470, 479, 481, 485, 490, 503, 504], "percent": 377, "percentag": [470, 491, 499, 504], "percentil": [0, 3, 8, 212], "perform": [14, 19, 31, 41, 54, 55, 61, 80, 86, 99, 100, 104, 105, 110, 113, 117, 143, 167, 172, 192, 195, 209, 215, 299, 351, 353, 411, 430, 452, 453, 482, 483, 485, 488, 490, 491, 498, 501, 503, 504], "performa": 504, "perhap": 81, "period": 484, "perlmutt": [503, 504], "permiss": [54, 482, 483, 489, 494], "permit": [478, 485, 494, 502], "permut": [3, 8, 333, 439], "permute_dim": [3, 8], "perpendicular": 69, "person": [478, 494], "peyton": 363, "pg": 175, "phase": 504, "philox": [3, 8], "pi": [18, 396, 482, 484, 490], "pick": [479, 485], "pickl": [180, 262, 267, 293, 294], "piec": [503, 504], "piecewis": [3, 8], "pil": [485, 504], "pillow": 504, "pin": 491, "pinv": [3, 8], "pip": 493, "pipe": 499, "pixel": [85, 139, 414, 455, 489], "place": [0, 3, 8, 14, 15, 16, 17, 19, 55, 58, 64, 70, 71, 74, 93, 114, 144, 146, 195, 196, 203, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 311, 322, 333, 347, 351, 352, 353, 355, 407, 410, 413, 428, 430, 432, 438, 452, 466, 495], "plai": 504, "plain": [470, 481, 483], "plan": 481, "plane": [18, 412], "platform": [70, 71, 206, 207, 213, 215, 351, 384, 403, 430, 493], "pleas": [36, 84, 138, 197, 444, 454, 478, 488, 491, 493, 495, 503], "plot": [482, 484, 485, 487, 504], "plt": [482, 484, 485, 487, 489, 504], "plu": [152, 183, 503], "png": [485, 504], "point": [21, 42, 47, 70, 71, 83, 86, 98, 102, 103, 107, 108, 110, 111, 130, 133, 134, 136, 148, 161, 173, 193, 195, 203, 206, 207, 209, 289, 317, 339, 382, 395, 413, 415, 436, 468, 470, 479, 483, 484, 487, 490, 496, 503, 504], "poisson": [0, 3, 8, 363], "poisson_process": 363, "poli": [3, 8], "poly1d": [3, 8], "polyadd": [3, 8], "polyd": [3, 8], "polydiv": [3, 8], "polyfit": [3, 8], "polyint": [3, 8], "polymul": [3, 8], "polynomi": 411, "polysub": [3, 8], "polyv": [3, 8], "pool": 491, "popul": 380, "port": [383, 490], "portion": [494, 503, 504], "posinf": 203, "posit": [0, 3, 8, 15, 18, 21, 43, 54, 78, 79, 93, 96, 103, 104, 105, 108, 120, 153, 156, 167, 173, 201, 203, 324, 358, 366, 369, 377, 379, 382, 410, 413, 416, 438, 483, 504], "possess": [6, 286], "possibl": [12, 13, 22, 23, 24, 25, 26, 27, 28, 39, 40, 44, 45, 46, 47, 52, 53, 59, 60, 63, 65, 66, 72, 73, 82, 87, 90, 91, 92, 94, 97, 120, 121, 122, 123, 124, 125, 126, 129, 131, 132, 135, 137, 140, 147, 151, 153, 154, 162, 163, 164, 165, 166, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 192, 194, 198, 199, 200, 202, 278, 296, 338, 339, 341, 349, 350, 356, 357, 404, 405, 407, 408, 409, 418, 419, 420, 421, 424, 425, 426, 429, 434, 435, 439, 447, 448, 478, 481, 491, 494, 495, 497, 502, 505], "possibli": [330, 496], "post": 491, "potenti": [289, 496, 502], "pow": [3, 8, 261], "power": [0, 3, 8, 120, 173, 191, 504], "pp": [212, 214, 347, 355, 376], "pr": 478, "practic": [491, 501], "pre": [34, 437, 478, 479], "precis": [41, 68, 70, 71, 86, 120, 192, 206, 207, 213, 215, 321, 329, 330, 351, 384, 430, 438, 470, 496, 503, 504], "predict": 490, "prefer": [83, 491], "preload": 470, "preload_cudalib": 459, "prepar": 503, "prepend": [48, 80, 144, 193, 437], "prescrib": 491, "present": [16, 17, 83, 143, 145, 208, 211, 436, 453], "preserv": [14, 19, 34, 38, 39, 40, 55, 57, 64, 80, 86, 117, 118, 119, 169, 171, 193, 196, 210, 278, 299, 317, 336, 415, 438], "press": 175, "pressur": 278, "prevent": [478, 503, 504], "previou": [41, 478, 503], "previous": [296, 504], "price": [486, 504], "primarili": 48, "principl": [363, 376], "print": [81, 403, 470, 481, 482, 483, 484, 487, 488, 489, 499, 503, 504, 505], "printabl": 87, "printopt": [3, 8], "prior": [80, 479, 494, 504], "prior_distance_sum": 487, "privileg": 503, "probabl": [2, 68, 135, 136, 137, 196, 210, 358, 359, 363, 364, 366, 373, 376, 394, 396, 399], "problem": [329, 478, 488, 490, 491, 497, 501, 502, 504], "proc": 491, "proce": 504, "process": [42, 167, 363, 480, 491, 502, 503, 504], "processor": [481, 490, 491, 502, 504], "procur": 494, "prod": [0, 3, 8, 213, 321], "produc": [6, 296, 328, 329, 353, 433, 489, 496, 503, 504], "product": [69, 70, 83, 87, 145, 160, 174, 193, 206, 213, 215, 291, 312, 321, 344, 351, 436, 453, 468, 483, 490, 492, 494, 504], "product_along_axi": 351, "prof": 490, "profil": 484, "profit": 494, "program": [479, 490, 491, 492, 495, 500, 503, 504, 505], "project": [459, 478, 482, 493], "promot": [115, 120, 193, 437, 494, 503], "prone": [490, 504], "propag": [70, 71, 206, 207, 496], "proper": [468, 490, 503], "properli": [319, 504], "properti": [6, 216, 279, 286, 289, 292, 296, 297, 301, 304, 308, 309, 315, 320, 321, 324, 333, 464], "proport": 399, "propos": 478, "protocol": 440, "prototyp": 89, "provid": [1, 8, 12, 13, 22, 23, 24, 25, 26, 27, 28, 29, 30, 44, 45, 46, 52, 53, 54, 58, 59, 60, 63, 64, 65, 66, 72, 73, 82, 84, 85, 86, 87, 90, 91, 92, 94, 97, 120, 121, 122, 123, 124, 125, 126, 129, 131, 132, 135, 139, 140, 147, 151, 153, 154, 155, 156, 162, 163, 164, 165, 166, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 193, 194, 195, 198, 199, 200, 202, 204, 205, 209, 213, 220, 319, 333, 338, 339, 341, 349, 350, 356, 357, 381, 382, 384, 404, 405, 408, 409, 414, 418, 419, 420, 421, 425, 426, 428, 429, 432, 434, 435, 447, 448, 449, 450, 455, 478, 491, 492, 494, 495, 502, 503, 504], "pseudonym": 478, "ptp": [3, 8], "public": 478, "publish": [491, 494], "pull": [1, 362, 478, 479], "purpos": [175, 494, 503], "put": [0, 3, 8, 348, 353, 354, 482, 503, 504], "put_along_axi": [0, 3, 8], "put_result": 482, "putmask": [0, 3, 8], "pwd": 479, "py": [479, 481, 482, 491, 493, 494, 495, 499, 500, 503, 504, 505], "pyarray_resolvewritebackifcopi": [296, 319], "pypi": 504, "pyplot": [482, 484, 485, 487, 489, 504], "python": [21, 122, 289, 302, 321, 328, 329, 330, 403, 479, 482, 483, 489, 492, 493, 495, 496, 497, 502, 503, 504, 505], "python3": 479, "q": [176, 212, 214, 347, 355], "qo": 504, "qr": [0, 3, 8], "quadrant": 27, "quadrat": 504, "quantil": [0, 3, 8, 212, 214, 347], "quantiti": 504, "queri": [491, 504], "question": [75, 492, 496], "quick": [329, 500], "quickli": [160, 483], "quicksort": [32, 422], "r": [69, 85, 139, 176, 212, 214, 347, 355, 376, 414, 455, 482, 504], "r0": 144, "rad2deg": [0, 3, 8, 73], "radian": [3, 8, 18, 72, 73, 356], "raindrop": 363, "rainstorm": 363, "rais": [14, 16, 17, 19, 41, 43, 48, 54, 57, 64, 69, 79, 81, 114, 120, 168, 169, 170, 171, 173, 175, 176, 177, 178, 180, 195, 196, 204, 205, 208, 210, 211, 212, 213, 214, 280, 296, 313, 327, 347, 350, 351, 352, 355, 361, 379, 401, 411, 424, 427, 430, 432, 438], "ram": 505, "ran": 491, "rand": [0, 3, 8, 504], "randint": [0, 3, 8, 384, 503], "randn": [0, 3, 8, 504], "random": [0, 459, 468, 487, 503, 504], "random_integ": [0, 3, 8], "random_sampl": [0, 3, 8, 383, 386, 388, 395], "random_se": 487, "randomli": [368, 382, 487], "randomst": [3, 8], "ranf": [3, 8], "rang": [18, 21, 54, 81, 135, 136, 137, 197, 352, 372, 377, 432, 468, 487, 488, 489, 490, 497, 502, 503, 504], "rank": [95, 177, 399, 411, 490, 493, 503, 504], "raphson": 486, "rare": 478, "rate": [363, 482, 504], "rather": [21, 79, 296, 497, 502, 503], "ratio": 364, "ration": 468, "ravel": [0, 3, 8, 116, 175, 298], "ravel_multi_index": [0, 3, 8], "raw": 328, "rawdata": 267, "rayleigh": [0, 3, 8], "rbf": 485, "re": [20, 39, 40, 58, 116, 410, 504], "reach": [48, 373, 478], "read": [180, 293, 296, 400, 407, 470, 485, 504], "readi": 478, "readonli": 51, "real": [0, 3, 8, 18, 35, 102, 108, 109, 110, 111, 112, 113, 142, 157, 167, 169, 171, 203, 403, 413, 423, 468, 478, 490], "real_if_clos": [0, 3, 8], "realist": 503, "realli": [98, 103, 108, 109, 111, 112, 478, 502], "realm": 501, "realm_default_arg": 495, "rearrang": 468, "reason": [34, 110, 478], "rebuild": [85, 139, 414, 455], "recarrai": [3, 8], "receiv": [490, 503], "reciproc": [0, 3, 8], "recommend": [2, 54, 497, 501, 504], "reconstruct": 449, "record": [3, 8, 478], "recov": [329, 503], "recreat": 330, "recurs": 80, "recv": 490, "recv_typ": 490, "red": [484, 487], "redistribut": [478, 494], "reduc": [14, 16, 17, 19, 29, 30, 41, 67, 195, 196, 197, 204, 205, 208, 209, 210, 211, 212, 213, 214, 215, 278, 347, 351, 355, 430, 452, 484, 490, 491, 503, 504], "reduct": [14, 19, 212, 214, 347, 355, 452, 501, 503, 504], "reductionarrai": 503, "refer": [14, 19, 36, 49, 51, 70, 71, 84, 96, 99, 100, 104, 105, 110, 113, 138, 155, 156, 175, 195, 197, 206, 207, 209, 212, 214, 220, 272, 273, 274, 275, 276, 277, 280, 281, 282, 283, 284, 290, 291, 296, 305, 306, 307, 310, 311, 312, 313, 314, 316, 322, 323, 324, 325, 326, 327, 332, 334, 335, 347, 351, 355, 363, 376, 397, 400, 407, 413, 430, 440, 444, 452, 454, 487, 490, 491, 492, 493, 502, 503, 504], "referenc": 319, "reflect": [296, 491, 503], "regard": 493, "regardless": [19, 138, 454, 491], "region": 491, "reinterpret": 336, "reject": 478, "rel": [15, 68, 148], "relabel": 487, "relat": [358, 490, 502, 504], "relationship": [68, 152, 397], "releas": [478, 494, 497, 504], "relev": [179, 191, 321, 503], "reli": [61, 411], "reliabl": 503, "remain": [12, 13, 19, 22, 23, 24, 25, 26, 27, 28, 44, 45, 46, 52, 53, 59, 60, 63, 65, 66, 72, 73, 82, 90, 91, 92, 94, 97, 113, 120, 121, 122, 123, 124, 125, 126, 129, 131, 132, 135, 140, 147, 151, 153, 154, 162, 163, 164, 165, 166, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 194, 198, 199, 200, 201, 202, 212, 214, 296, 338, 339, 341, 347, 349, 350, 355, 356, 357, 377, 404, 405, 407, 408, 409, 418, 419, 420, 421, 425, 426, 429, 434, 435, 447, 448, 503], "remaind": [0, 3, 8, 122, 125, 199], "remot": 504, "remov": [29, 30, 74, 79, 93, 193, 204, 205, 208, 323, 351, 427, 430, 438, 468, 490, 496], "reopen": 478, "reorder": [117, 201, 299], "rep": 437, "repeat": [0, 3, 8, 68, 99, 100, 104, 105, 110, 114, 168, 169, 170, 171, 173, 197, 348, 352, 354, 437, 504], "repeated_arrai": 406, "repeatedli": [489, 504], "repetit": [406, 437], "replac": [55, 203, 206, 207, 313, 352, 432, 483, 491, 492, 503, 504, 505], "replic": 437, "repo": 478, "report": 470, "report_coverag": 459, "report_dump_callstack": 459, "report_dump_csv": 459, "repositori": [478, 490], "repr": 263, "repres": [41, 68, 86, 103, 144, 155, 156, 197, 345, 369, 450, 452, 484, 485, 487, 490, 491, 496, 503], "represent": [87, 144, 203, 466], "reproduc": [487, 494], "req": 490, "request": [37, 363, 378, 478, 487, 490, 491], "requir": [3, 8, 34, 180, 203, 470, 479, 480, 482, 483, 489, 490, 491, 493, 495, 499, 501, 502, 503], "requri": 504, "res2": [39, 40], "rese": 389, "research": [482, 490, 503, 504], "resembl": 393, "reserv": [481, 491, 494, 504], "reset": 6, "reshap": [0, 3, 8, 85, 93, 320, 333, 414, 455, 491, 496], "reshaped_arrai": 407, "resid": 193, "resiz": [3, 8, 93, 504], "resolut": [484, 490], "resourc": [482, 491, 501, 503, 505], "respect": [61, 130, 193, 319, 484, 491, 504], "respons": [478, 490, 504], "rest": 36, "restor": 410, "restrict": [494, 495], "result": [6, 12, 13, 14, 16, 17, 18, 19, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 34, 41, 43, 44, 45, 46, 52, 53, 54, 55, 58, 59, 60, 63, 65, 66, 67, 68, 70, 71, 72, 73, 75, 79, 80, 81, 82, 87, 89, 90, 91, 92, 93, 94, 95, 97, 109, 112, 115, 120, 121, 122, 123, 124, 125, 126, 128, 129, 131, 132, 135, 137, 140, 143, 144, 145, 147, 151, 152, 153, 154, 155, 156, 162, 163, 164, 165, 166, 168, 170, 175, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 278, 317, 329, 336, 338, 339, 341, 343, 344, 345, 346, 347, 349, 350, 351, 353, 355, 356, 357, 361, 381, 384, 385, 386, 388, 393, 404, 405, 407, 408, 409, 413, 415, 418, 419, 420, 421, 422, 424, 425, 426, 428, 429, 430, 432, 433, 434, 435, 436, 437, 438, 440, 447, 448, 449, 452, 453, 458, 470, 481, 482, 483, 484, 489, 490, 496, 497, 503, 504], "result_typ": [3, 8, 482], "ret": 38, "retain": [12, 13, 22, 23, 24, 25, 26, 27, 28, 44, 45, 46, 52, 53, 59, 60, 63, 65, 66, 72, 73, 82, 90, 91, 92, 94, 97, 120, 121, 122, 123, 124, 125, 126, 129, 131, 132, 140, 147, 151, 153, 154, 162, 163, 164, 165, 166, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 194, 198, 199, 200, 202, 338, 339, 341, 349, 350, 356, 357, 404, 405, 408, 409, 418, 419, 420, 421, 425, 426, 429, 434, 435, 447, 448, 494], "retstep": 179, "return": [2, 6, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 217, 218, 219, 220, 221, 223, 224, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 259, 260, 261, 263, 264, 265, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 281, 282, 284, 286, 290, 291, 294, 297, 298, 299, 302, 305, 306, 307, 310, 312, 314, 316, 317, 321, 325, 326, 328, 330, 331, 332, 333, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 349, 350, 351, 353, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 455, 456, 457, 458, 466, 482, 483, 485, 487, 488, 489, 491, 501, 503, 504], "return_count": 449, "return_index": 449, "return_invers": 449, "retval": 41, "revers": [81, 117, 118, 119, 299, 333, 345, 400, 412, 439, 450], "review": [480, 491, 493], "rf": 504, "rfft": [0, 3, 8, 108, 113], "rfft2": [0, 3, 8, 109], "rfftfreq": [3, 8], "rfftn": [0, 3, 8, 110, 111, 112], "rh": [291, 484], "richer": 503, "right": [55, 57, 79, 81, 118, 140, 168, 169, 317, 394, 408, 415, 438, 478, 484, 490, 493, 494], "right_shift": [0, 3, 8], "rightmost": [135, 136], "rint": [0, 3, 8], "rippl": 42, "risk": [482, 490, 493, 504], "river": 490, "rk_hypergeometric_hrua": 494, "rk_hypergeometric_hyp": 494, "rk_triangular": 494, "rm": 504, "rn": 144, "rng": 487, "rober": 504, "robert": 494, "roll": [0, 3, 8], "rollaxi": [3, 8], "root": [0, 3, 8, 52, 425, 479], "rot90": [0, 3, 8], "rotat": 412, "roughli": [152, 504], "round": [0, 21, 395, 409, 468], "rounded_arrai": 413, "roundoff": 122, "routin": [459, 466, 470, 479, 503], "row": [34, 68, 96, 118, 119, 137, 141, 174, 298, 324, 400, 414, 440, 442, 451, 454, 455, 485, 490, 503, 504], "row_stack": [3, 8], "rowvar": 68, "rsqrt2pi": 482, "rst": 324, "rt": [503, 504], "rtol": [15, 148], "rule": [21, 41, 48, 64, 115, 377, 497], "run": [192, 366, 478, 479, 480, 489, 491, 492, 493, 495, 499, 500, 501, 502, 505], "run_kmean": 487, "runfil": 504, "runtim": [208, 211, 470, 481, 490, 491, 495, 497, 500, 502, 503, 505], "runtimeerror": 296, "runtimewarn": [482, 488, 491], "rv": 494, "s0": 504, "s_0": 504, "s_0n": 504, "safe": [58, 64, 86, 180, 193, 278, 503], "sai": [491, 497], "salloc": 504, "same": [14, 15, 16, 17, 19, 20, 29, 30, 31, 32, 34, 35, 41, 43, 48, 54, 56, 58, 61, 68, 70, 71, 79, 80, 81, 85, 89, 95, 103, 104, 105, 110, 128, 130, 135, 139, 152, 155, 156, 157, 173, 174, 195, 196, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 278, 292, 316, 317, 321, 324, 331, 333, 336, 343, 345, 346, 347, 348, 351, 354, 355, 400, 406, 410, 413, 414, 415, 416, 422, 423, 428, 430, 432, 436, 438, 441, 443, 446, 450, 451, 452, 455, 458, 478, 482, 483, 485, 487, 488, 489, 491, 493, 500, 502, 503, 504], "same_kind": [12, 13, 22, 23, 24, 25, 26, 27, 28, 44, 45, 46, 52, 53, 58, 59, 60, 63, 64, 65, 66, 72, 73, 82, 86, 90, 91, 92, 94, 97, 120, 121, 122, 123, 124, 125, 126, 129, 131, 132, 140, 147, 151, 153, 154, 162, 163, 164, 165, 166, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 193, 194, 198, 199, 200, 202, 278, 338, 339, 341, 349, 350, 356, 357, 404, 405, 408, 409, 418, 419, 420, 421, 425, 426, 429, 434, 435, 447, 448], "sampl": [42, 47, 68, 106, 130, 133, 135, 136, 137, 161, 179, 191, 212, 214, 347, 355, 358, 359, 361, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 384, 385, 386, 387, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 459, 468], "sample_count": [136, 137], "satisfi": [34, 81, 95, 278, 399, 416, 488, 491, 502], "save": [3, 8, 196, 210, 212, 214, 347, 355, 470, 478, 484, 499], "savetxt": [3, 8], "savez": [3, 8], "savez_compress": [3, 8], "saxpi": 501, "saxpy_task": 503, "scalabl": [490, 491, 502, 504], "scalar": [12, 13, 15, 16, 17, 18, 22, 23, 24, 25, 26, 27, 28, 35, 38, 44, 45, 46, 48, 52, 53, 55, 59, 60, 63, 65, 66, 69, 72, 73, 80, 82, 83, 90, 91, 92, 94, 97, 114, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 135, 140, 142, 145, 147, 148, 151, 153, 154, 159, 162, 163, 164, 165, 166, 177, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 192, 193, 194, 197, 198, 199, 200, 202, 208, 211, 212, 213, 214, 215, 295, 302, 317, 330, 337, 338, 339, 341, 347, 349, 350, 351, 355, 356, 357, 358, 359, 361, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 387, 390, 392, 393, 394, 395, 396, 397, 398, 399, 402, 404, 405, 408, 409, 415, 416, 418, 419, 420, 421, 425, 426, 429, 430, 432, 434, 435, 436, 447, 448, 466, 501, 502, 503], "scale": [87, 98, 99, 100, 102, 103, 104, 105, 107, 108, 109, 110, 111, 112, 113, 191, 363, 365, 367, 369, 370, 376, 377, 387, 391, 392, 397, 398, 485, 490, 491, 492, 502, 503, 504], "scatter": [487, 504], "scenario": 503, "schedul": [482, 483, 489, 491], "scheme": 486, "schole": [486, 493], "scientif": [490, 491, 504], "scientist": 490, "scikit": 479, "scipi": [172, 377, 485, 504], "scope": 501, "scp": 504, "script": [479, 481, 491, 495, 500, 503, 505], "seamlessli": [491, 503], "search": [87, 459, 468, 492], "searchsort": [0, 3, 8, 81], "second": [41, 48, 61, 69, 79, 83, 85, 87, 104, 105, 120, 130, 135, 136, 138, 139, 143, 155, 156, 192, 193, 197, 344, 350, 412, 414, 423, 431, 436, 438, 453, 455, 484, 502, 503, 504], "second_cond": 502, "section": [34, 36, 100, 105, 110, 113, 491, 503, 504], "secur": [180, 504], "see": [12, 13, 15, 16, 17, 22, 23, 24, 25, 26, 27, 28, 34, 44, 45, 46, 48, 52, 53, 55, 59, 60, 63, 65, 66, 68, 70, 71, 72, 73, 75, 77, 82, 86, 90, 91, 92, 94, 97, 98, 99, 100, 102, 103, 104, 105, 107, 108, 109, 110, 111, 112, 113, 120, 121, 122, 123, 124, 125, 126, 129, 131, 132, 135, 137, 140, 147, 148, 151, 153, 154, 162, 163, 164, 165, 166, 175, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 194, 197, 198, 199, 200, 202, 206, 207, 208, 211, 213, 215, 278, 286, 319, 333, 338, 339, 341, 349, 350, 351, 356, 357, 381, 384, 404, 405, 408, 409, 418, 419, 420, 421, 425, 426, 429, 430, 434, 435, 442, 443, 445, 446, 447, 448, 449, 452, 464, 466, 479, 481, 482, 483, 484, 485, 488, 489, 491, 493, 494, 495, 496, 502, 503, 504, 505], "seed": [0, 1, 3, 8, 362, 468, 487], "seedsequ": [3, 8], "seek": [180, 488], "seem": 478, "seen": 358, "segment": 296, "seldom": 120, "select": [0, 3, 8, 16, 17, 57, 64, 143, 152, 174, 208, 282, 368, 427, 432, 452, 487, 490, 503, 504, 505], "selectkind": [31, 346], "selector": 172, "self": [6, 216, 217, 218, 219, 220, 221, 223, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 259, 260, 261, 263, 264, 265, 266, 268, 269, 270, 271, 282, 296], "sell": 494, "semant": [135, 137], "send": 490, "send_typ": 490, "sens": [85, 139, 414, 455, 496], "sep": 329, "separ": [86, 203, 329, 413, 479, 481, 493, 495, 499, 502, 504], "sequenc": [18, 31, 34, 39, 40, 48, 50, 54, 56, 58, 85, 87, 99, 100, 104, 105, 109, 110, 112, 113, 135, 136, 137, 139, 144, 146, 160, 174, 179, 191, 196, 201, 210, 212, 214, 267, 346, 347, 348, 355, 378, 412, 414, 416, 428, 436, 437, 455, 497, 503], "seri": 372, "serial": 479, "servic": [481, 494], "session": 504, "set": [12, 13, 14, 16, 17, 19, 22, 23, 24, 25, 26, 27, 28, 29, 30, 41, 44, 45, 46, 52, 53, 59, 60, 63, 65, 66, 67, 68, 72, 73, 76, 78, 82, 90, 91, 92, 94, 97, 120, 121, 122, 123, 124, 125, 126, 129, 131, 132, 140, 141, 147, 151, 153, 154, 162, 163, 164, 165, 166, 175, 179, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 194, 195, 196, 198, 199, 200, 202, 204, 205, 208, 209, 210, 211, 212, 213, 214, 215, 266, 278, 280, 296, 319, 320, 336, 338, 339, 341, 347, 349, 350, 351, 354, 355, 356, 357, 368, 377, 404, 405, 408, 409, 418, 419, 420, 421, 425, 426, 429, 430, 434, 435, 447, 448, 452, 459, 468, 478, 479, 484, 488, 490, 491, 496, 497, 502, 503, 504], "set_bit_gener": [3, 8], "set_devic": 490, "set_printopt": [3, 8], "set_stat": [3, 8], "set_titl": [485, 504], "set_xtick": [485, 504], "set_ytick": [485, 504], "setbufs": [3, 8], "setdevic": 490, "setdiff1d": [3, 8], "seterr": [3, 8], "seterrcal": [3, 8], "setfield": [0, 8], "setflag": [0, 8, 296], "setup": [488, 503], "setxor1d": [3, 8], "sever": [479, 491, 504], "sfc64": [3, 8], "sh": [479, 504], "shall": 494, "shallow": 490, "shape": [0, 2, 3, 4, 6, 8, 12, 13, 14, 16, 17, 19, 20, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 40, 41, 43, 44, 45, 46, 48, 50, 51, 52, 53, 54, 55, 57, 58, 59, 60, 63, 65, 66, 70, 71, 72, 73, 76, 79, 80, 81, 82, 83, 85, 88, 89, 90, 91, 92, 93, 94, 96, 97, 99, 100, 101, 104, 105, 106, 109, 110, 112, 113, 117, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 135, 136, 139, 140, 144, 145, 146, 147, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 172, 173, 174, 177, 178, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 192, 193, 194, 195, 196, 197, 198, 199, 200, 202, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 267, 278, 286, 296, 299, 316, 317, 321, 333, 337, 338, 339, 341, 342, 343, 345, 346, 347, 349, 350, 351, 353, 354, 355, 356, 357, 358, 359, 361, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 384, 385, 386, 387, 388, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 404, 405, 406, 407, 408, 409, 410, 413, 414, 415, 418, 419, 420, 421, 422, 423, 425, 426, 427, 428, 429, 430, 432, 434, 435, 436, 437, 438, 440, 441, 446, 447, 448, 450, 451, 452, 453, 455, 456, 457, 458, 468, 483, 487, 501, 502, 503, 504], "share": [286, 490, 491, 504], "shares_memori": [3, 8], "sharp": 504, "sharper": 369, "shift": [101, 106, 164, 377, 408, 410], "short": [3, 8, 296, 328, 503], "shorter": [102, 108, 352], "should": [29, 30, 34, 36, 48, 54, 64, 68, 79, 80, 86, 87, 103, 104, 105, 110, 146, 160, 193, 201, 204, 205, 278, 345, 407, 432, 438, 450, 451, 453, 470, 482, 483, 484, 489, 497, 502, 503, 504], "show": [328, 479, 484, 487, 499, 503, 504], "show_config": [3, 8], "show_runtim": [3, 8], "showcas": 504, "shown": [484, 488, 500, 502, 504], "shuffl": [3, 8], "side": [81, 130, 317, 415, 484, 490], "sigma": [371, 504], "sign": [0, 3, 8, 15, 54, 63, 215, 351, 381, 384, 430], "signal": [42, 102, 107, 363, 376, 485, 503, 504], "signatur": [192, 193, 478], "signbit": [0, 3, 8], "signedinteg": [3, 8], "signific": 490, "significantli": [482, 488, 490, 491, 503, 504], "signoff": 478, "similar": [34, 42, 152, 192, 302, 369, 496, 497, 503, 504], "similarli": 490, "simpl": [68, 86, 330, 468, 483, 490, 501, 504, 505], "simple_in_out": 503, "simple_mm": 504, "simpler": [491, 503, 504], "simplest": 481, "simpli": [135, 333, 478, 479, 504], "simplic": 503, "simplifi": [286, 377, 490, 504], "simul": 490, "simultan": [296, 410], "sin": [0, 3, 8, 484], "sinc": [3, 8, 108, 299, 330, 353, 484, 485, 491, 496, 502, 503, 504], "sine": [24, 25, 420, 421, 484], "sing": 175, "singl": [2, 3, 8, 14, 16, 17, 19, 41, 48, 49, 50, 51, 56, 68, 87, 117, 118, 119, 130, 148, 174, 176, 177, 178, 180, 195, 197, 208, 209, 212, 214, 215, 293, 296, 297, 299, 302, 311, 319, 329, 347, 351, 355, 358, 359, 361, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 384, 385, 386, 387, 388, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 411, 412, 427, 430, 436, 452, 470, 488, 491, 492, 502, 503], "singleton": 93, "singular": [175, 177, 178], "sinh": [0, 3, 8], "site": 499, "situat": [363, 478, 491], "sixth": 484, "size": [2, 6, 14, 16, 17, 19, 21, 29, 30, 36, 41, 43, 48, 57, 61, 67, 70, 71, 76, 79, 81, 87, 95, 130, 152, 175, 179, 180, 191, 192, 195, 196, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 302, 304, 329, 347, 348, 351, 354, 355, 358, 359, 361, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 381, 383, 384, 385, 386, 387, 388, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 410, 430, 445, 450, 452, 470, 484, 490, 491, 497, 503, 504], "skbuild_build_opt": 479, "skip": 324, "slice": [16, 17, 57, 74, 146, 172, 204, 205, 206, 207, 208, 211, 213, 215, 282, 296, 353, 433, 470, 484, 490, 503], "slide": 504, "slightli": [47, 172], "slogdet": [3, 8], "slower": 502, "slowest": [400, 407], "small": [15, 172, 203, 489, 491, 497, 500, 502, 503], "smaller": [55, 68, 80, 98, 99, 100, 103, 104, 105, 107, 110, 111, 113, 122, 135, 196, 210, 212, 214, 347, 348, 354, 355, 470], "smallest": [175, 377], "smi": 491, "snippet": [197, 490], "so": [19, 48, 80, 120, 122, 135, 146, 158, 179, 197, 296, 319, 329, 345, 437, 487, 494, 502, 503, 504], "sobel": [485, 504], "sobol": 485, "softwar": [482, 483, 489, 491, 493, 494], "solut": [177, 484, 488, 490], "solv": [0, 3, 8, 468, 484, 488, 490, 504], "solver": 490, "some": [21, 34, 95, 279, 296, 319, 329, 397, 456, 470, 478, 479, 483, 489, 491, 496, 497, 502, 504], "somebodi": 478, "sometim": [330, 365, 392, 496], "soon": 478, "sort": [0, 8, 32, 143, 152, 178, 196, 210, 212, 214, 277, 317, 346, 347, 355, 415, 423, 424, 433, 449, 459, 468, 504], "sort_complex": [0, 3, 8], "sorter": [317, 415], "sortsid": 415, "sorttyp": [32, 422], "sound": 503, "sourc": [201, 432, 433, 478, 480, 490, 494, 500, 503, 504], "south": [489, 504], "space": [3, 8, 21, 101, 130, 137, 179, 191, 470, 484], "sparingli": 502, "spars": [144, 197], "speak": 175, "spec": 491, "special": [7, 358, 393, 400, 490, 494], "specif": [2, 83, 137, 470, 482, 483, 489, 490, 494, 503, 504], "specifi": [14, 19, 20, 21, 29, 30, 31, 32, 34, 41, 43, 54, 55, 58, 68, 70, 71, 74, 79, 86, 87, 98, 99, 100, 102, 103, 104, 105, 107, 108, 110, 111, 113, 117, 130, 136, 169, 171, 175, 179, 193, 195, 196, 204, 205, 206, 207, 208, 209, 210, 212, 213, 214, 215, 278, 290, 293, 299, 302, 313, 336, 347, 351, 352, 353, 355, 359, 364, 365, 367, 368, 369, 370, 371, 372, 373, 375, 377, 381, 392, 396, 399, 400, 412, 413, 428, 430, 432, 433, 436, 438, 449, 450, 452, 470, 481, 487, 488, 491, 495, 499, 503, 504], "spectral": 484, "spectrum": [101, 102], "speed": [143, 152, 302, 329], "speedup": 503, "spelt": 48, "spent": 497, "split": [0, 3, 8, 36, 84, 138, 454, 468, 503], "spread": [376, 452, 504], "sqrt": [0, 3, 8, 482, 485, 504], "sqrt_t": 482, "squar": [0, 3, 8, 141, 167, 168, 169, 170, 171, 173, 177, 192, 361, 364, 374, 375, 425, 487], "squeez": [0, 3, 8, 93], "src": [64, 503], "srun": [495, 503, 504], "ssh": 504, "stabl": [32, 172, 422], "stack": [0, 3, 8, 56, 85, 139, 193, 414, 455, 470, 491], "stackoverflow": 496, "stage": 480, "standard": [302, 321, 333, 361, 371, 376, 377, 382, 390, 391, 392, 393, 466, 468, 478, 482, 483, 489, 495, 497, 500, 504], "standard_cauchi": [0, 3, 8], "standard_exponenti": [0, 3, 8], "standard_gamma": [0, 3, 8], "standard_norm": [3, 8, 393], "standard_t": [0, 3, 8], "start": [21, 87, 103, 179, 191, 213, 215, 289, 351, 430, 478, 481, 482, 483, 484, 489, 490, 497, 502, 503, 504], "start_tim": 504, "startup": 503, "state": [267, 385, 386, 388, 468], "statement": [485, 488, 496, 502, 505], "statist": [212, 214, 347, 355, 358, 459, 468, 503], "statistician": [212, 214, 347, 355], "std": [3, 8], "stdout": [470, 481], "stecil": 484, "stegun": 482, "stencil": [484, 486, 490], "step": [21, 87, 179, 191, 324, 478, 479, 490, 496, 497, 502, 504], "stephen": 494, "still": [41, 175, 197, 503, 504], "stock": [482, 504], "stoke": 490, "stop": [21, 179, 191, 482, 483, 489, 502, 504], "storag": 329, "store": [12, 13, 22, 23, 24, 25, 26, 27, 28, 44, 45, 46, 52, 53, 59, 60, 63, 65, 66, 72, 73, 82, 90, 91, 92, 94, 97, 120, 121, 122, 123, 124, 125, 126, 129, 131, 132, 140, 147, 151, 153, 154, 155, 156, 162, 163, 164, 165, 166, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 193, 194, 198, 199, 200, 202, 324, 338, 339, 341, 344, 349, 350, 356, 357, 404, 405, 408, 409, 418, 419, 420, 421, 425, 426, 429, 434, 435, 447, 448, 484, 503, 504], "str": [12, 13, 22, 23, 24, 25, 26, 27, 28, 31, 32, 44, 45, 46, 52, 53, 58, 59, 60, 63, 65, 66, 72, 73, 82, 86, 87, 90, 91, 92, 94, 97, 98, 99, 100, 102, 103, 104, 105, 107, 108, 109, 110, 111, 112, 113, 120, 121, 122, 123, 124, 125, 126, 129, 131, 132, 140, 147, 151, 153, 154, 162, 163, 164, 165, 166, 169, 171, 172, 175, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 194, 197, 198, 199, 200, 202, 212, 214, 267, 268, 278, 293, 313, 329, 331, 338, 339, 341, 346, 347, 349, 350, 352, 355, 356, 357, 404, 405, 408, 409, 418, 419, 420, 421, 422, 425, 426, 429, 434, 435, 447, 448, 470, 485, 487, 503, 504], "str_": [3, 8], "straightforward": [502, 504], "strategi": [470, 504], "stream": 1, "streamlin": 504, "strict": [470, 494], "strictli": 175, "stride": [4, 286, 296, 319, 400, 479], "strike": [482, 504], "string": [61, 172, 180, 197, 267, 293, 294, 296, 319, 329, 360, 466, 479], "string_repr": 87, "strong": 478, "structur": [449, 490, 497, 502, 503, 504], "student": 393, "studi": [397, 486], "style": [296, 298, 400, 451], "sub": [14, 16, 17, 19, 34, 36, 74, 79, 84, 138, 195, 208, 211, 213, 278, 336, 351, 424, 430, 438, 440, 454], "subarrai": [74, 144, 449], "subdomain": 490, "subgrid": 490, "subject": 494, "sublicens": 494, "submit": 478, "subok": [34, 49, 51, 278], "subplot": [485, 504], "subscript": [86, 87], "subsequ": 296, "subset": [368, 427, 497], "substanti": [490, 494], "substitut": [488, 494], "subtract": [0, 3, 8, 502], "subtyp": 400, "succe": 502, "success": [359, 366, 373], "suffici": 503, "suggest": [321, 478, 491, 504], "suit": [481, 504], "suitabl": [302, 317, 333, 353, 415, 433, 503, 504], "sum": [0, 3, 8, 41, 61, 71, 83, 103, 135, 136, 137, 145, 152, 175, 185, 186, 207, 213, 215, 324, 332, 361, 368, 375, 436, 438, 468, 487, 488, 503, 504], "sum_": 175, "sum_along_axi": 430, "sum_along_diagon": 438, "sum_of_weight": 41, "summar": [212, 214, 347, 355], "summari": [3, 8, 481], "summat": [47, 86, 87], "supercomput": 503, "supercomputerloc": 504, "superpod": 492, "suppli": [155, 156, 172, 174, 382], "support": [31, 32, 61, 81, 83, 86, 176, 178, 180, 193, 197, 296, 329, 336, 346, 353, 366, 406, 410, 411, 422, 436, 440, 449, 479, 485, 493, 495, 501, 504], "suppos": 54, "sure": [487, 497, 503], "surfac": 490, "surpris": 80, "surround": 490, "svd": [0, 8], "svdval": 8, "swap": [61, 101], "swapax": [0, 3, 8], "switch": 488, "symmetr": [108, 167, 504], "symmetri": [102, 107], "synchron": [490, 503, 504], "syntax": 503, "sysmem": 504, "system": [177, 192, 484, 488, 490, 491, 493, 496, 503, 504], "system_mem": 491, "t": [68, 81, 117, 118, 119, 296, 333, 352, 358, 393, 440, 464, 481, 482, 483, 487, 496, 502, 503, 504], "tabl": [143, 152, 175, 399], "tack": 478, "tackl": [490, 504], "tail": 369, "take": [0, 2, 3, 8, 56, 57, 160, 192, 348, 353, 400, 407, 433, 470, 478, 491, 503, 504], "take_along_axi": [0, 3, 8], "take_default": 459, "taken": [41, 54, 79, 80, 87, 102, 108, 110, 112, 113, 195, 209, 368, 416, 438, 440, 442, 445, 453, 485, 497], "tall": 114, "talli": 136, "tan": [0, 3, 8], "tangent": [26, 27, 28, 434, 435], "tanh": [0, 3, 8], "taper": [42, 47, 133, 134, 161], "target": [352, 354, 479, 503], "task": [470, 482, 483, 489, 490, 497, 501, 504], "taskcontext": 503, "tasktarget": 495, "taylor": 172, "tdma": 484, "teach": [484, 487, 488, 503], "technic": 491, "techniqu": 504, "tell": [324, 491], "templat": 504, "temporari": 470, "tend": [152, 497], "tensor": [87, 436, 470, 479], "tensordot": [0, 3, 8], "tensorinv": [3, 8], "tensorsolv": [3, 8], "term": [47, 83, 87, 103, 104, 105, 108, 145, 193, 436, 453, 484, 493], "termin": [481, 488, 504], "test": [0, 14, 19, 143, 148, 149, 151, 152, 153, 154, 155, 156, 296, 361, 364, 459, 468, 480, 487, 489, 490, 499, 500], "test_el": 152, "test_view": 481, "test_vstack": 481, "test_wher": 481, "test_window": 481, "testsystem": 481, "text": [329, 478], "tf32": 470, "th": [75, 78, 80, 96, 130, 144, 212, 214, 333, 347, 355, 416, 441, 444], "than": [21, 43, 47, 49, 51, 54, 55, 57, 61, 70, 71, 79, 83, 84, 98, 99, 100, 102, 103, 104, 105, 107, 108, 110, 111, 113, 114, 118, 119, 135, 145, 152, 172, 193, 196, 197, 206, 207, 210, 212, 213, 214, 215, 347, 348, 351, 352, 354, 355, 364, 368, 377, 394, 395, 399, 419, 427, 428, 430, 436, 438, 450, 453, 470, 483, 488, 496, 497, 502, 503, 504], "thei": [13, 15, 27, 44, 45, 46, 49, 63, 70, 71, 80, 81, 82, 90, 120, 122, 123, 124, 125, 129, 131, 132, 140, 162, 163, 164, 165, 166, 185, 186, 187, 189, 190, 193, 194, 198, 199, 202, 206, 207, 317, 339, 341, 350, 359, 400, 405, 408, 415, 429, 447, 466, 485, 487, 497, 502, 503, 504], "them": [56, 466, 478, 487, 491, 493, 502, 503, 504], "themselv": [286, 484], "theorem": 376, "theoret": 504, "theori": 494, "therefor": [169, 171, 366], "theta": 365, "thi": [12, 13, 14, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 33, 34, 37, 41, 43, 44, 45, 46, 48, 49, 51, 52, 53, 54, 55, 58, 59, 60, 63, 64, 65, 66, 67, 72, 73, 74, 75, 76, 80, 81, 82, 83, 85, 86, 87, 90, 91, 92, 94, 97, 98, 99, 100, 101, 102, 103, 104, 105, 108, 109, 110, 111, 112, 113, 114, 116, 118, 119, 120, 121, 122, 123, 124, 125, 126, 129, 131, 132, 135, 136, 139, 140, 143, 145, 147, 151, 152, 153, 154, 159, 160, 162, 163, 164, 165, 166, 169, 171, 174, 175, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 208, 209, 210, 211, 212, 213, 214, 215, 276, 277, 278, 286, 289, 291, 295, 296, 299, 302, 304, 319, 321, 324, 328, 329, 330, 333, 336, 338, 339, 341, 344, 347, 348, 349, 350, 351, 353, 354, 355, 356, 357, 361, 362, 377, 381, 384, 389, 397, 400, 404, 405, 407, 408, 409, 411, 412, 414, 418, 419, 420, 421, 425, 426, 427, 429, 430, 432, 433, 434, 435, 436, 437, 440, 447, 448, 449, 452, 453, 455, 470, 478, 479, 481, 482, 483, 484, 485, 487, 488, 489, 490, 493, 494, 496, 499, 500, 502, 504, 505], "thing": [432, 478, 483, 503, 504], "think": 478, "third": [69, 84, 85, 139, 414, 436, 455, 493, 502], "those": [55, 61, 68, 74, 173, 353, 490, 496], "though": [43, 411], "thought": 396, "thread": [479, 481, 488, 491, 504], "three": [40, 47, 55, 212, 214, 347, 355, 449, 491, 502, 503], "threshold": 470, "through": [14, 16, 17, 19, 34, 160, 192, 195, 197, 208, 211, 213, 278, 351, 430, 470, 493, 503, 504], "throughout": 490, "thu": [54, 180, 437, 502, 504], "thumb": 497, "tile": [0, 3, 8, 468, 503], "time": [68, 80, 86, 99, 100, 104, 105, 110, 152, 296, 299, 363, 378, 397, 412, 437, 449, 478, 481, 482, 483, 489, 490, 493, 503, 504], "timedelta64": [3, 8], "timer": 497, "timestep": 490, "tini": 376, "titl": [482, 484], "tobyt": [0, 8, 329, 331], "tofil": [0, 3, 8], "togeth": [15, 58, 68, 103, 160, 193, 503], "tol": [403, 488, 502, 504], "toler": [15, 148, 403, 488, 502], "tolist": [0, 3, 8], "too": [42, 81, 432, 491], "took": 504, "tool": [478, 490, 491, 500], "toolkit": [479, 504], "top": [479, 492, 493], "topic": [480, 491, 501], "topographi": 490, "torchsw": 486, "tort": 494, "total": [6, 67, 308, 373, 483, 487, 504], "toward": [135, 339, 412], "trace": [0, 3, 8, 470], "traceback": 470, "tracker": 491, "transfer": [488, 504], "transform": [61, 98, 99, 100, 102, 103, 104, 105, 107, 108, 109, 110, 111, 112, 113, 459, 468, 501, 502], "translat": [384, 484, 502], "transpar": 503, "transport": 329, "transpos": [0, 3, 8, 68, 167, 216, 468, 483], "trapezoid": [3, 8], "trapz": [3, 8], "travers": 324, "treat": [15, 54, 169, 171, 174, 193, 196, 197, 206, 207, 210, 213, 215, 353, 433, 437, 449], "tree": [479, 493], "tri": [0, 3, 8], "trial": [359, 366], "triangl": [140, 440, 441, 442, 443, 444, 445, 446], "triangular": [0, 3, 8, 42, 167, 169, 171, 176, 483], "tridiagon": 484, "trigger": [491, 496], "trigonometr": [22, 26, 420, 468], "tril": [0, 3, 8, 192, 442, 443, 444], "tril_indic": [0, 3, 8, 443], "tril_indices_from": [0, 3, 8], "trim": 450, "trim_zero": [3, 8], "triu": [0, 3, 8, 192, 445, 446], "triu_indic": [0, 3, 8, 446], "triu_indices_from": [0, 3, 8], "trivial": 478, "true": [4, 12, 13, 14, 15, 16, 17, 18, 19, 22, 23, 24, 25, 26, 27, 28, 29, 30, 34, 35, 41, 44, 45, 46, 52, 53, 57, 59, 60, 63, 64, 65, 66, 67, 68, 72, 73, 80, 81, 82, 86, 87, 90, 91, 92, 94, 95, 97, 114, 120, 121, 122, 123, 124, 125, 126, 129, 131, 132, 135, 136, 137, 140, 143, 144, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 162, 163, 164, 165, 166, 172, 175, 178, 179, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 194, 195, 196, 197, 198, 199, 200, 202, 203, 204, 205, 208, 209, 210, 211, 212, 213, 214, 215, 272, 273, 278, 296, 305, 307, 312, 319, 338, 339, 341, 347, 348, 349, 350, 351, 354, 355, 356, 357, 404, 405, 408, 409, 416, 418, 419, 420, 421, 425, 426, 429, 430, 434, 435, 447, 448, 449, 452, 456, 496, 499], "true_divid": [0, 3, 8, 82], "truli": 296, "trunc": [0, 3, 8], "truncat": [57, 98, 99, 100, 102, 103, 104, 105, 107, 108, 110, 111, 113, 359, 448], "trust": [204, 205], "truth": [131, 132, 165, 166, 187, 189, 190, 466, 468], "try": [483, 484, 485, 488, 491, 496, 498, 501, 504], "tup": [56, 85, 139, 414, 455], "tupl": [2, 4, 6, 12, 13, 14, 16, 17, 19, 22, 23, 24, 25, 26, 27, 28, 36, 37, 41, 44, 45, 46, 50, 51, 52, 53, 59, 60, 63, 65, 66, 67, 72, 73, 76, 77, 82, 87, 88, 89, 90, 91, 92, 93, 94, 97, 101, 106, 117, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 135, 136, 137, 140, 144, 147, 151, 153, 154, 160, 162, 163, 164, 165, 166, 168, 169, 175, 176, 178, 179, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 192, 194, 195, 196, 197, 198, 199, 200, 202, 208, 209, 210, 211, 212, 214, 215, 267, 299, 302, 320, 324, 333, 338, 339, 340, 341, 342, 343, 347, 349, 350, 351, 355, 356, 357, 358, 359, 361, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 381, 384, 385, 386, 387, 388, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 401, 404, 405, 407, 408, 409, 410, 417, 418, 419, 420, 421, 425, 426, 427, 429, 430, 434, 435, 436, 442, 443, 445, 446, 447, 448, 451, 452, 456, 457, 458, 487, 502, 503, 504], "tuple_of_arrai": 340, "turn": [56, 470], "tutori": [491, 501, 503], "tweedi": 397, "twice": 502, "two": [15, 21, 35, 39, 44, 45, 46, 48, 61, 68, 69, 78, 79, 80, 83, 99, 103, 104, 109, 126, 136, 145, 148, 174, 193, 344, 364, 366, 369, 412, 431, 436, 438, 442, 443, 445, 446, 453, 485, 486, 487, 489, 502, 503, 504, 505], "type": [6, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 78, 79, 80, 81, 82, 83, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 127, 128, 129, 130, 131, 132, 133, 134, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 170, 171, 172, 173, 174, 175, 177, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 220, 267, 278, 286, 292, 298, 299, 302, 304, 317, 319, 321, 328, 329, 330, 333, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 349, 350, 351, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 384, 385, 386, 387, 388, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 445, 446, 447, 448, 450, 451, 452, 453, 455, 456, 457, 458, 459, 468, 470, 479, 487, 490, 491, 503, 504], "typecod": 278, "typeerror": [43, 64, 81, 212, 214, 347, 355], "typenam": [3, 8], "typic": [15, 49, 51, 68, 102, 317, 415, 479, 490, 497, 504], "u": [169, 171, 178, 213, 324, 398, 478, 483, 485, 489, 491, 494, 504], "u8_arr": 80, "ubyt": [3, 8], "ucx": 495, "ufunc": [8, 12, 13, 16, 17, 22, 23, 24, 25, 26, 27, 28, 44, 45, 46, 52, 53, 55, 59, 60, 63, 65, 66, 72, 73, 82, 90, 91, 92, 94, 97, 120, 121, 122, 123, 124, 125, 126, 129, 131, 132, 140, 147, 151, 153, 154, 162, 163, 164, 165, 166, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 194, 198, 199, 200, 202, 208, 211, 213, 215, 338, 339, 341, 349, 350, 351, 356, 357, 404, 405, 408, 409, 418, 419, 420, 421, 425, 426, 429, 430, 434, 435, 447, 448], "uic": 319, "uid": 491, "uint": [3, 8], "uint16": [3, 8], "uint32": [3, 8], "uint64": [3, 8, 487], "uint8": [3, 8, 80, 345, 450], "uintc": [3, 8], "uintp": [3, 8], "uk": [482, 485], "ulong": [3, 8], "ulonglong": [3, 8], "ultim": [296, 319], "unabl": 491, "unalt": 362, "unari": 466, "unbias": 68, "unbound": 377, "unchang": [34, 113], "undefin": [196, 210, 212, 214, 347, 353, 355, 496], "under": [175, 296, 478, 482, 483, 489, 494], "underli": [32, 371, 400, 407, 422, 482, 504], "understand": [478, 488], "undesir": 502, "undo": 450, "unexpect": 213, "unif": [385, 386, 388], "uniform": [0, 3, 8, 135, 191, 380, 381, 384, 385, 386, 388, 398], "uniformli": 395, "uniniti": [12, 13, 22, 23, 24, 25, 26, 27, 28, 44, 45, 46, 52, 53, 59, 60, 63, 65, 66, 72, 73, 82, 88, 89, 90, 91, 92, 94, 97, 120, 121, 122, 123, 124, 125, 126, 129, 131, 132, 140, 147, 151, 153, 154, 162, 163, 164, 165, 166, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 194, 198, 199, 200, 202, 338, 339, 341, 349, 350, 356, 357, 404, 405, 408, 409, 418, 419, 420, 421, 425, 426, 429, 434, 435, 447, 448], "union1d": [3, 8], "uniqu": [0, 3, 8, 143, 152, 201, 376, 487], "unique_al": [3, 8], "unique_count": [3, 8, 449], "unique_indic": 449, "unique_invers": [3, 8, 449], "unique_valu": [3, 8], "unit": [160, 168, 169, 396, 397, 496], "unitari": [130, 178, 496], "uniti": 135, "univari": 382, "univers": [175, 397], "unknown": 504, "unless": [14, 19, 34, 54, 70, 71, 79, 86, 135, 175, 179, 191, 206, 207, 213, 215, 278, 302, 345, 351, 381, 384, 385, 386, 388, 413, 430, 449, 478, 482, 483, 489], "unlik": [61, 79, 168, 170, 394], "unmodifi": [48, 492], "unnecessari": 478, "unpack": 450, "unpackbit": [0, 3, 8], "unpartit": 503, "unpickl": [267, 319], "unpredict": [1, 362], "unravel": 451, "unravel_index": [0, 3, 8], "unraveled_coord": 451, "unsaf": [58, 64, 86, 145, 193, 278, 344, 436, 453], "unsign": [80, 215, 351, 430], "unsignedinteg": [3, 8], "unstack": [3, 8], "unsupport": 496, "until": [48, 87, 487, 502, 503, 504], "unwrap": [3, 8], "up": [85, 119, 122, 139, 143, 152, 302, 414, 433, 449, 455, 470, 479, 485, 490, 491, 496, 497, 503, 504], "updat": [296, 319, 352, 353, 488, 490, 503, 504], "uplo": [169, 171], "upon": 478, "upper": [55, 96, 135, 137, 167, 169, 171, 176, 319, 394, 395, 444, 445, 446], "uppoer": 176, "us": [2, 6, 16, 17, 20, 21, 31, 32, 42, 47, 48, 54, 58, 61, 68, 70, 71, 75, 76, 79, 80, 83, 86, 87, 98, 99, 100, 102, 103, 104, 105, 107, 108, 110, 111, 113, 130, 133, 134, 137, 142, 143, 148, 152, 160, 161, 167, 172, 174, 175, 179, 191, 193, 195, 196, 197, 203, 206, 207, 208, 209, 210, 212, 213, 214, 215, 224, 225, 280, 286, 296, 302, 319, 321, 329, 336, 346, 347, 348, 351, 353, 355, 359, 361, 363, 384, 389, 397, 400, 402, 403, 406, 407, 410, 416, 422, 430, 432, 433, 438, 449, 451, 452, 453, 466, 470, 478, 479, 481, 482, 483, 484, 485, 488, 489, 490, 492, 493, 494, 496, 499, 500, 501, 503, 505], "usabl": 120, "usag": [98, 99, 100, 102, 103, 104, 105, 107, 108, 109, 110, 111, 112, 113, 152, 168, 169, 170, 171, 177, 470, 478, 480, 491, 501, 502, 503], "use_explicit": 172, "use_openmp": 479, "use_thread": 479, "user": [203, 296, 319, 479, 488, 490, 491, 492, 503, 504], "ushort": [3, 8], "usual": [76, 478, 491, 505], "util": [481, 482, 483, 489, 491, 504], "v": [48, 61, 75, 78, 317, 415, 459, 481, 482, 484], "v1": 482, "v100": 504, "val": [114, 142, 159, 318, 345, 348, 402, 450, 502, 504], "valid": [48, 61, 192, 442, 443, 445, 446, 478, 490, 493, 503], "valu": [2, 12, 13, 14, 15, 16, 17, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 35, 41, 42, 43, 44, 45, 46, 47, 52, 53, 54, 55, 59, 60, 63, 64, 65, 66, 67, 68, 70, 71, 72, 73, 80, 81, 82, 86, 90, 91, 92, 94, 95, 96, 97, 103, 111, 114, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 140, 143, 144, 146, 147, 148, 150, 151, 152, 153, 154, 155, 156, 157, 158, 160, 161, 162, 163, 164, 165, 166, 167, 169, 171, 173, 175, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 198, 199, 200, 202, 203, 204, 205, 206, 207, 208, 209, 211, 212, 213, 214, 215, 218, 219, 226, 227, 229, 230, 232, 233, 234, 235, 236, 237, 238, 239, 243, 244, 245, 246, 247, 248, 249, 251, 252, 253, 254, 255, 256, 257, 259, 260, 261, 264, 265, 266, 269, 270, 271, 274, 275, 278, 281, 292, 295, 305, 307, 313, 317, 319, 321, 324, 338, 339, 341, 345, 348, 349, 350, 351, 352, 353, 354, 356, 357, 358, 359, 361, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 384, 385, 386, 387, 388, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 404, 405, 406, 407, 408, 409, 410, 411, 413, 415, 418, 419, 420, 421, 425, 426, 429, 430, 432, 433, 434, 435, 438, 439, 447, 448, 449, 450, 452, 456, 466, 468, 470, 482, 484, 487, 488, 489, 490, 491, 501, 502, 503, 504], "valuabl": 490, "valueerror": [41, 43, 48, 54, 57, 69, 79, 81, 114, 175, 204, 205, 208, 211, 361, 379, 411, 424, 427, 438], "van": 175, "vander": [3, 8], "vanilla": 470, "var": [0, 3, 8, 470], "vararg": 130, "vari": [32, 68, 144, 403, 422, 484, 485, 490, 504], "variabl": [68, 177, 204, 205, 208, 211, 361, 363, 369, 376, 470, 488, 490, 491, 495, 497, 499, 502, 503, 504], "varianc": [68, 335, 361, 382, 452, 468], "variant": [503, 504], "variantcod": 503, "variat": [212, 214, 347, 355, 364, 504], "varieti": 2, "variou": [175, 468, 470, 490, 500], "vdot": [0, 3, 8], "vecdot": [3, 8], "vecmat": [3, 8], "vector": [3, 8, 68, 69, 83, 145, 174, 175, 193, 197, 333, 344, 453, 468, 503, 504, 505], "vector1": 504, "vector2": 504, "vector_norm": 8, "venv": [493, 504], "verbatim": 478, "verbos": [481, 488, 491, 504], "veri": [15, 42, 203, 302, 497], "verifi": 167, "version": [67, 75, 116, 152, 196, 210, 212, 214, 267, 347, 355, 377, 451, 478, 482, 483, 489, 490, 493, 504], "vertic": [412, 414, 454, 455, 490], "vh": 178, "via": [12, 13, 22, 23, 24, 25, 26, 27, 28, 44, 45, 46, 52, 53, 59, 60, 63, 65, 66, 72, 73, 82, 90, 91, 92, 94, 97, 120, 121, 122, 123, 124, 125, 126, 129, 131, 132, 140, 147, 151, 153, 154, 162, 163, 164, 165, 166, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 194, 198, 199, 200, 202, 296, 330, 338, 339, 341, 349, 350, 356, 357, 404, 405, 408, 409, 418, 419, 420, 421, 425, 426, 429, 434, 435, 440, 447, 448, 481, 491, 495, 503, 504], "view": [0, 8, 37, 39, 40, 49, 51, 75, 93, 117, 118, 119, 197, 201, 292, 296, 299, 326, 333, 353, 407, 424, 427, 431, 433, 439, 451, 491, 501, 503], "violat": [64, 470], "vision": 504, "visit": [478, 491], "vital": 504, "void": [3, 8, 302], "volatil": [482, 504], "von": 396, "vonmis": [0, 3, 8], "vpi": 485, "vsplit": [0, 3, 8, 414, 455], "vstack": [0, 3, 8, 414, 502], "vv": 481, "w": [170, 171, 296, 319], "w_i": [136, 137], "wa": [47, 83, 145, 174, 373, 397, 413, 436, 453, 478, 485, 488, 491], "wai": [87, 103, 104, 105, 110, 193, 368, 450, 478, 479, 481, 482, 483, 484, 489, 494, 495, 502, 503], "wait": 503, "waital": 490, "wald": [0, 3, 8], "walk": 479, "want": [478, 479, 489, 503, 504], "warm": [497, 503], "warn": [192, 204, 205, 208, 211, 352, 459, 488, 504], "warranti": [482, 483, 489, 494], "wasilla": 494, "water": 490, "wavenumb": 484, "we": [8, 54, 68, 324, 478, 479, 482, 483, 484, 485, 487, 488, 489, 490, 491, 502, 503, 504], "weak": 492, "weibul": [0, 3, 8, 212, 214, 347, 355, 387], "weigh": [136, 137], "weight": [41, 43, 68, 133, 134, 135, 136, 137, 377, 487], "welcom": [8, 478], "well": [86, 177, 319, 351, 481, 483, 490, 503], "were": [58, 193, 317, 382, 415, 428, 491, 494, 499, 504], "west": [489, 504], "wget": 504, "what": [58, 64, 75, 86, 98, 99, 100, 102, 103, 104, 105, 107, 108, 109, 110, 111, 112, 113, 145, 149, 193, 278, 344, 428, 436, 453, 489, 499, 501, 502, 504], "wheel": [493, 504], "when": [18, 21, 29, 30, 34, 41, 48, 57, 64, 69, 70, 71, 80, 110, 135, 143, 167, 172, 175, 179, 192, 193, 196, 197, 204, 205, 206, 207, 208, 210, 211, 213, 286, 302, 319, 324, 329, 361, 362, 389, 400, 411, 416, 432, 433, 470, 478, 479, 488, 490, 493, 495, 496, 497, 499, 502, 503, 504], "whenev": [439, 470, 502], "where": [0, 3, 8, 12, 13, 14, 16, 17, 19, 21, 22, 23, 24, 25, 26, 27, 28, 33, 39, 40, 44, 45, 46, 48, 52, 53, 54, 55, 57, 59, 60, 63, 64, 65, 66, 68, 69, 72, 73, 80, 82, 83, 90, 91, 92, 93, 94, 95, 96, 97, 102, 108, 110, 120, 121, 122, 123, 124, 125, 126, 129, 131, 132, 136, 139, 140, 143, 144, 147, 148, 149, 151, 152, 153, 154, 155, 156, 157, 162, 163, 164, 165, 166, 167, 176, 178, 179, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 192, 194, 195, 198, 199, 200, 202, 208, 209, 211, 213, 215, 272, 273, 305, 307, 312, 317, 325, 338, 339, 341, 344, 348, 349, 350, 351, 354, 356, 357, 358, 359, 364, 365, 366, 373, 375, 377, 394, 404, 405, 408, 409, 415, 416, 418, 419, 420, 421, 424, 425, 426, 429, 430, 434, 435, 438, 447, 448, 452, 482, 484, 485, 487, 490, 494, 496, 502, 503, 504], "wherea": 496, "wherev": 64, "whether": [14, 15, 19, 35, 75, 81, 143, 148, 149, 167, 169, 171, 179, 203, 213, 319, 451, 470, 478, 481, 494, 499, 502, 504], "which": [1, 12, 13, 14, 16, 17, 19, 20, 22, 23, 24, 25, 26, 27, 28, 29, 30, 34, 41, 44, 45, 46, 48, 52, 53, 54, 57, 58, 59, 60, 61, 63, 64, 65, 66, 67, 68, 70, 71, 72, 73, 74, 76, 78, 79, 80, 81, 82, 86, 87, 90, 91, 92, 94, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 117, 120, 121, 122, 123, 124, 125, 126, 129, 130, 131, 132, 139, 140, 143, 146, 147, 151, 152, 153, 154, 155, 156, 159, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 175, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 198, 199, 200, 202, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 278, 286, 299, 302, 319, 321, 336, 338, 339, 341, 345, 347, 349, 350, 351, 352, 355, 356, 357, 363, 368, 381, 384, 385, 386, 387, 388, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 404, 405, 406, 408, 409, 410, 413, 416, 418, 419, 420, 421, 424, 425, 426, 428, 429, 430, 432, 434, 435, 438, 440, 441, 442, 445, 447, 448, 450, 452, 456, 470, 478, 485, 488, 490, 491, 494, 497, 499, 502, 503, 504], "while": [68, 113, 174, 197, 210, 212, 214, 215, 296, 351, 377, 410, 430, 440, 487, 491, 497, 502, 503, 504], "whilst": 38, "who": 478, "whole": 478, "whom": 494, "whose": [34, 79, 95, 96, 114, 192, 195, 201, 208, 209, 211, 215, 281, 345, 438, 443, 446, 451, 452], "why": [108, 478], "wide": [363, 491, 503], "width": [85, 135, 139, 376, 414, 455, 504], "wiki": 363, "wikipedia": 363, "window": [42, 47, 133, 134, 161, 459, 468, 493, 503], "wise": [12, 13, 15, 22, 23, 24, 25, 26, 27, 28, 44, 45, 46, 52, 53, 59, 60, 63, 65, 66, 82, 85, 90, 97, 98, 99, 100, 102, 103, 104, 105, 107, 108, 109, 110, 111, 112, 113, 120, 121, 123, 124, 125, 131, 132, 138, 139, 147, 148, 151, 153, 154, 155, 156, 163, 165, 166, 168, 169, 170, 171, 177, 181, 182, 183, 187, 188, 189, 190, 194, 198, 199, 200, 202, 284, 338, 339, 341, 349, 350, 404, 405, 414, 418, 419, 420, 421, 425, 426, 429, 434, 435, 447, 448, 454, 455, 503, 504], "wish": 75, "within": [12, 13, 15, 21, 22, 23, 24, 25, 26, 27, 28, 44, 45, 46, 52, 53, 59, 60, 63, 64, 65, 66, 72, 73, 82, 86, 90, 91, 92, 94, 97, 103, 104, 105, 108, 110, 120, 121, 122, 123, 124, 125, 126, 129, 131, 132, 140, 147, 148, 151, 153, 154, 162, 163, 164, 165, 166, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 193, 194, 198, 199, 200, 202, 278, 338, 339, 341, 349, 350, 356, 357, 368, 395, 404, 405, 408, 409, 418, 419, 420, 421, 425, 426, 429, 434, 435, 447, 448, 503, 504], "without": [42, 48, 57, 83, 88, 145, 319, 333, 407, 478, 482, 483, 489, 490, 494, 498, 501, 503, 504], "word": [21, 103, 104, 105, 108, 110, 395, 440], "work": [48, 57, 302, 352, 466, 478, 479, 482, 496, 497, 502, 503, 504], "worker": [481, 491, 504], "workflow": 479, "workload": 504, "workstat": 504, "worri": 504, "wors": 47, "would": [32, 58, 83, 145, 174, 192, 276, 277, 302, 317, 344, 415, 424, 428, 436, 453, 470, 482, 483, 488, 489, 490, 502, 504], "wrap": [54, 114, 352, 362, 432], "wrapper": [495, 504], "write": [49, 75, 114, 197, 319, 329, 407, 482, 483, 489, 492, 504], "writeabl": [4, 296, 319], "writebackifcopi": [296, 319], "written": [114, 296, 319, 329, 494, 502, 505], "wrong": 57, "wsl": 493, "www": [482, 483, 489], "x": [12, 22, 23, 24, 25, 26, 28, 43, 52, 53, 59, 60, 65, 66, 68, 72, 73, 80, 81, 91, 92, 94, 97, 99, 100, 101, 104, 105, 106, 113, 121, 126, 135, 136, 141, 147, 149, 150, 151, 153, 154, 155, 156, 157, 158, 159, 172, 175, 177, 181, 182, 183, 184, 188, 192, 197, 200, 203, 296, 319, 324, 338, 349, 356, 357, 358, 363, 398, 404, 409, 411, 418, 419, 420, 421, 425, 426, 434, 435, 448, 456, 482, 484, 485, 487, 488, 496, 502, 503, 504, 505], "x1": [13, 27, 44, 45, 46, 63, 82, 90, 120, 122, 123, 124, 125, 129, 131, 132, 140, 162, 163, 164, 165, 166, 185, 186, 187, 189, 190, 194, 197, 198, 199, 202, 339, 341, 350, 405, 408, 429, 447], "x2": [13, 27, 44, 45, 46, 63, 82, 90, 120, 122, 123, 124, 125, 129, 131, 132, 140, 162, 163, 164, 165, 166, 185, 186, 187, 189, 190, 194, 197, 198, 199, 202, 339, 341, 350, 405, 408, 429, 447], "x86": 504, "x86_64": [493, 504], "x_": 488, "x_1": 68, "x_2": 68, "x_current": 502, "x_edg": 136, "x_global": 503, "x_i": [68, 136, 137], "x_j": 68, "x_local": 503, "x_n": 68, "x_prev": 502, "xcoord": 136, "xedg": 136, "xeon": 504, "xi": 197, "xk": 488, "xk_old": 488, "xlabel": [482, 484], "xmax": 136, "xmin": 136, "xn": 197, "xor": [46, 190], "xorwow": 362, "xp": 503, "xv": 197, "xy": 197, "y": [13, 27, 44, 45, 46, 63, 68, 82, 90, 101, 106, 120, 122, 123, 124, 125, 129, 131, 132, 136, 140, 148, 158, 162, 163, 164, 165, 166, 185, 186, 187, 189, 190, 194, 197, 198, 199, 202, 212, 214, 298, 330, 339, 341, 347, 350, 355, 400, 405, 408, 412, 429, 447, 456, 485, 487, 488, 502, 503, 504, 505], "y1": [126, 200], "y2": [126, 200], "y_edg": 136, "y_global": 503, "y_i": [136, 137], "y_local": 503, "ycoord": 136, "year": [376, 504], "yedg": 136, "yellow": 487, "yet": [8, 449], "yield": [29, 30, 70, 71, 206, 207, 213, 456, 497, 504], "ylabel": [482, 484], "ymax": 136, "ymin": 136, "you": [49, 64, 75, 86, 193, 196, 197, 210, 403, 432, 478, 479, 482, 483, 484, 487, 488, 489, 490, 491, 492, 493, 495, 500, 502, 503, 504, 505], "your": [478, 491, 492, 502, 504, 505], "yueh": 490, "yv": 197, "z": [18, 69, 302, 363, 382, 502, 503, 505], "z_global": 503, "z_i": 137, "z_local": 503, "zero": [0, 3, 8, 18, 33, 41, 42, 47, 61, 67, 69, 80, 96, 98, 99, 100, 101, 102, 103, 104, 105, 107, 108, 110, 111, 113, 116, 133, 134, 149, 150, 155, 156, 157, 158, 161, 168, 169, 170, 171, 173, 175, 192, 203, 207, 215, 310, 337, 340, 345, 364, 377, 403, 419, 440, 441, 444, 450, 452, 458, 484, 487, 489, 503, 504], "zero_point": 487, "zerodivisionerror": 41, "zeros_lik": [0, 3, 8], "zeta": 399, "zipf": [0, 3, 8], "zsh": 504}, "titles": ["&lt;no title&gt;", "cupynumeric.random.BitGenerator", "cupynumeric.random.Generator", "Convolve and Correlate", "cupynumeric.ndarray", "Binary operations", "cupynumeric.broadcast", "Classes", "Project comparisons", "Array creation routines", "Data type routines", "Discrete Fourier Transform (<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">cupynumeric.fft</span></code>)", "cupynumeric.absolute", "cupynumeric.add", "cupynumeric.all", "cupynumeric.allclose", "cupynumeric.amax", "cupynumeric.amin", "cupynumeric.angle", "cupynumeric.any", "cupynumeric.append", "cupynumeric.arange", "cupynumeric.arccos", "cupynumeric.arccosh", "cupynumeric.arcsin", "cupynumeric.arcsinh", "cupynumeric.arctan", "cupynumeric.arctan2", "cupynumeric.arctanh", "cupynumeric.argmax", "cupynumeric.argmin", "cupynumeric.argpartition", "cupynumeric.argsort", "cupynumeric.argwhere", "cupynumeric.array", "cupynumeric.array_equal", "cupynumeric.array_split", "cupynumeric.asarray", "cupynumeric.atleast_1d", "cupynumeric.atleast_2d", "cupynumeric.atleast_3d", "cupynumeric.average", "cupynumeric.bartlett", "cupynumeric.bincount", "cupynumeric.bitwise_and", "cupynumeric.bitwise_or", "cupynumeric.bitwise_xor", "cupynumeric.blackman", "cupynumeric.block", "cupynumeric.broadcast_arrays", "cupynumeric.broadcast_shapes", "cupynumeric.broadcast_to", "cupynumeric.cbrt", "cupynumeric.ceil", "cupynumeric.choose", "cupynumeric.clip", "cupynumeric.column_stack", "cupynumeric.compress", "cupynumeric.concatenate", "cupynumeric.conj", "cupynumeric.conjugate", "cupynumeric.convolve", "cupynumeric.copy", "cupynumeric.copysign", "cupynumeric.copyto", "cupynumeric.cos", "cupynumeric.cosh", "cupynumeric.count_nonzero", "cupynumeric.cov", "cupynumeric.cross", "cupynumeric.cumprod", "cupynumeric.cumsum", "cupynumeric.deg2rad", "cupynumeric.degrees", "cupynumeric.delete", "cupynumeric.diag", "cupynumeric.diag_indices", "cupynumeric.diag_indices_from", "cupynumeric.diagflat", "cupynumeric.diagonal", "cupynumeric.diff", "cupynumeric.digitize", "cupynumeric.divide", "cupynumeric.dot", "cupynumeric.dsplit", "cupynumeric.dstack", "cupynumeric.einsum", "cupynumeric.einsum_path", "cupynumeric.empty", "cupynumeric.empty_like", "cupynumeric.equal", "cupynumeric.exp", "cupynumeric.exp2", "cupynumeric.expand_dims", "cupynumeric.expm1", "cupynumeric.extract", "cupynumeric.eye", "cupynumeric.fabs", "cupynumeric.fft.fft", "cupynumeric.fft.fft2", "cupynumeric.fft.fftn", "cupynumeric.fft.fftshift", "cupynumeric.fft.hfft", "cupynumeric.fft.ifft", "cupynumeric.fft.ifft2", "cupynumeric.fft.ifftn", "cupynumeric.fft.ifftshift", "cupynumeric.fft.ihfft", "cupynumeric.fft.irfft", "cupynumeric.fft.irfft2", "cupynumeric.fft.irfftn", "cupynumeric.fft.rfft", "cupynumeric.fft.rfft2", "cupynumeric.fft.rfftn", "cupynumeric.fill_diagonal", "cupynumeric.find_common_type", "cupynumeric.flatnonzero", "cupynumeric.flip", "cupynumeric.fliplr", "cupynumeric.flipud", "cupynumeric.float_power", "cupynumeric.floor", "cupynumeric.floor_divide", "cupynumeric.fmax", "cupynumeric.fmin", "cupynumeric.fmod", "cupynumeric.frexp", "cupynumeric.full", "cupynumeric.full_like", "cupynumeric.gcd", "cupynumeric.gradient", "cupynumeric.greater", "cupynumeric.greater_equal", "cupynumeric.hamming", "cupynumeric.hanning", "cupynumeric.histogram", "cupynumeric.histogram2d", "cupynumeric.histogramdd", "cupynumeric.hsplit", "cupynumeric.hstack", "cupynumeric.hypot", "cupynumeric.identity", "cupynumeric.imag", "cupynumeric.in1d", "cupynumeric.indices", "cupynumeric.inner", "cupynumeric.insert", "cupynumeric.invert", "cupynumeric.isclose", "cupynumeric.iscomplex", "cupynumeric.iscomplexobj", "cupynumeric.isfinite", "cupynumeric.isin", "cupynumeric.isinf", "cupynumeric.isnan", "cupynumeric.isneginf", "cupynumeric.isposinf", "cupynumeric.isreal", "cupynumeric.isrealobj", "cupynumeric.isscalar", "cupynumeric.ix_", "cupynumeric.kaiser", "cupynumeric.lcm", "cupynumeric.ldexp", "cupynumeric.left_shift", "cupynumeric.less", "cupynumeric.less_equal", "cupynumeric.linalg.cholesky", "cupynumeric.linalg.eig", "cupynumeric.linalg.eigh", "cupynumeric.linalg.eigvals", "cupynumeric.linalg.eigvalsh", "cupynumeric.linalg.expm", "cupynumeric.linalg.matrix_power", "cupynumeric.linalg.multi_dot", "cupynumeric.linalg.norm", "cupynumeric.linalg.qr", "cupynumeric.linalg.solve", "cupynumeric.linalg.svd", "cupynumeric.linspace", "cupynumeric.load", "cupynumeric.log", "cupynumeric.log10", "cupynumeric.log1p", "cupynumeric.log2", "cupynumeric.logaddexp", "cupynumeric.logaddexp2", "cupynumeric.logical_and", "cupynumeric.logical_not", "cupynumeric.logical_or", "cupynumeric.logical_xor", "cupynumeric.logspace", "cupynumeric.mask_indices", "cupynumeric.matmul", "cupynumeric.maximum", "cupynumeric.mean", "cupynumeric.median", "cupynumeric.meshgrid", "cupynumeric.minimum", "cupynumeric.mod", "cupynumeric.modf", "cupynumeric.moveaxis", "cupynumeric.multiply", "cupynumeric.nan_to_num", "cupynumeric.nanargmax", "cupynumeric.nanargmin", "cupynumeric.nancumprod", "cupynumeric.nancumsum", "cupynumeric.nanmax", "cupynumeric.nanmean", "cupynumeric.nanmedian", "cupynumeric.nanmin", "cupynumeric.nanpercentile", "cupynumeric.nanprod", "cupynumeric.nanquantile", "cupynumeric.nansum", "cupynumeric.ndarray.T", "cupynumeric.ndarray.__abs__", "cupynumeric.ndarray.__add__", "cupynumeric.ndarray.__and__", "cupynumeric.ndarray.__array__", "cupynumeric.ndarray.__bool__", "cupynumeric.ndarray.__complex__", "cupynumeric.ndarray.__contains__", "cupynumeric.ndarray.__copy__", "cupynumeric.ndarray.__deepcopy__", "cupynumeric.ndarray.__divmod__", "cupynumeric.ndarray.__eq__", "cupynumeric.ndarray.__float__", "cupynumeric.ndarray.__floordiv__", "cupynumeric.ndarray.__ge__", "cupynumeric.ndarray.__getitem__", "cupynumeric.ndarray.__gt__", "cupynumeric.ndarray.__iadd__", "cupynumeric.ndarray.__iand__", "cupynumeric.ndarray.__ifloordiv__", "cupynumeric.ndarray.__ilshift__", "cupynumeric.ndarray.__imatmul__", "cupynumeric.ndarray.__imod__", "cupynumeric.ndarray.__imul__", "cupynumeric.ndarray.__index__", "cupynumeric.ndarray.__int__", "cupynumeric.ndarray.__invert__", "cupynumeric.ndarray.__ior__", "cupynumeric.ndarray.__ipow__", "cupynumeric.ndarray.__irshift__", "cupynumeric.ndarray.__isub__", "cupynumeric.ndarray.__itruediv__", "cupynumeric.ndarray.__ixor__", "cupynumeric.ndarray.__le__", "cupynumeric.ndarray.__len__", "cupynumeric.ndarray.__lshift__", "cupynumeric.ndarray.__lt__", "cupynumeric.ndarray.__matmul__", "cupynumeric.ndarray.__mod__", "cupynumeric.ndarray.__mul__", "cupynumeric.ndarray.__ne__", "cupynumeric.ndarray.__neg__", "cupynumeric.ndarray.__new__", "cupynumeric.ndarray.__or__", "cupynumeric.ndarray.__pos__", "cupynumeric.ndarray.__pow__", "cupynumeric.ndarray.__reduce__", "cupynumeric.ndarray.__repr__", "cupynumeric.ndarray.__rmatmul__", "cupynumeric.ndarray.__rshift__", "cupynumeric.ndarray.__setitem__", "cupynumeric.ndarray.__setstate__", "cupynumeric.ndarray.__str__", "cupynumeric.ndarray.__sub__", "cupynumeric.ndarray.__truediv__", "cupynumeric.ndarray.__xor__", "cupynumeric.ndarray.all", "cupynumeric.ndarray.any", "cupynumeric.ndarray.argmax", "cupynumeric.ndarray.argmin", "cupynumeric.ndarray.argpartition", "cupynumeric.ndarray.argsort", "cupynumeric.ndarray.astype", "cupynumeric.ndarray.base", "cupynumeric.ndarray.choose", "cupynumeric.ndarray.clip", "cupynumeric.ndarray.compress", "cupynumeric.ndarray.conj", "cupynumeric.ndarray.conjugate", "cupynumeric.ndarray.copy", "cupynumeric.ndarray.ctypes", "cupynumeric.ndarray.cumprod", "cupynumeric.ndarray.cumsum", "cupynumeric.ndarray.data", "cupynumeric.ndarray.diagonal", "cupynumeric.ndarray.dot", "cupynumeric.ndarray.dtype", "cupynumeric.ndarray.dump", "cupynumeric.ndarray.dumps", "cupynumeric.ndarray.fill", "cupynumeric.ndarray.flags", "cupynumeric.ndarray.flat", "cupynumeric.ndarray.flatten", "cupynumeric.ndarray.flip", "cupynumeric.ndarray.getfield", "cupynumeric.ndarray.imag", "cupynumeric.ndarray.item", "cupynumeric.ndarray.itemset", "cupynumeric.ndarray.itemsize", "cupynumeric.ndarray.max", "cupynumeric.ndarray.mean", "cupynumeric.ndarray.min", "cupynumeric.ndarray.nbytes", "cupynumeric.ndarray.ndim", "cupynumeric.ndarray.nonzero", "cupynumeric.ndarray.partition", "cupynumeric.ndarray.prod", "cupynumeric.ndarray.put", "cupynumeric.ndarray.ravel", "cupynumeric.ndarray.real", "cupynumeric.ndarray.reshape", "cupynumeric.ndarray.searchsorted", "cupynumeric.ndarray.setfield", "cupynumeric.ndarray.setflags", "cupynumeric.ndarray.shape", "cupynumeric.ndarray.size", "cupynumeric.ndarray.sort", "cupynumeric.ndarray.squeeze", "cupynumeric.ndarray.strides", "cupynumeric.ndarray.sum", "cupynumeric.ndarray.swapaxes", "cupynumeric.ndarray.take", "cupynumeric.ndarray.tobytes", "cupynumeric.ndarray.tofile", "cupynumeric.ndarray.tolist", "cupynumeric.ndarray.tostring", "cupynumeric.ndarray.trace", "cupynumeric.ndarray.transpose", "cupynumeric.ndarray.unique", "cupynumeric.ndarray.var", "cupynumeric.ndarray.view", "cupynumeric.ndim", "cupynumeric.negative", "cupynumeric.nextafter", "cupynumeric.nonzero", "cupynumeric.not_equal", "cupynumeric.ones", "cupynumeric.ones_like", "cupynumeric.outer", "cupynumeric.packbits", "cupynumeric.partition", "cupynumeric.percentile", "cupynumeric.place", "cupynumeric.positive", "cupynumeric.power", "cupynumeric.prod", "cupynumeric.put", "cupynumeric.put_along_axis", "cupynumeric.putmask", "cupynumeric.quantile", "cupynumeric.rad2deg", "cupynumeric.radians", "cupynumeric.random.beta", "cupynumeric.random.binomial", "cupynumeric.random.bytes", "cupynumeric.random.chisquare", "cupynumeric.random.default_rng", "cupynumeric.random.exponential", "cupynumeric.random.f", "cupynumeric.random.gamma", "cupynumeric.random.geometric", "cupynumeric.random.gumbel", "cupynumeric.random.hypergeometric", "cupynumeric.random.laplace", "cupynumeric.random.logistic", "cupynumeric.random.lognormal", "cupynumeric.random.logseries", "cupynumeric.random.negative_binomial", "cupynumeric.random.noncentral_chisquare", "cupynumeric.random.noncentral_f", "cupynumeric.random.normal", "cupynumeric.random.pareto", "cupynumeric.random.poisson", "cupynumeric.random.power", "cupynumeric.random.rand", "cupynumeric.random.randint", "cupynumeric.random.randn", "cupynumeric.random.random", "cupynumeric.random.random_integers", "cupynumeric.random.random_sample", "cupynumeric.random.ranf", "cupynumeric.random.rayleigh", "cupynumeric.random.sample", "cupynumeric.random.seed", "cupynumeric.random.standard_cauchy", "cupynumeric.random.standard_exponential", "cupynumeric.random.standard_gamma", "cupynumeric.random.standard_t", "cupynumeric.random.triangular", "cupynumeric.random.uniform", "cupynumeric.random.vonmises", "cupynumeric.random.wald", "cupynumeric.random.weibull", "cupynumeric.random.zipf", "cupynumeric.ravel", "cupynumeric.ravel_multi_index", "cupynumeric.real", "cupynumeric.real_if_close", "cupynumeric.reciprocal", "cupynumeric.remainder", "cupynumeric.repeat", "cupynumeric.reshape", "cupynumeric.right_shift", "cupynumeric.rint", "cupynumeric.roll", "cupynumeric.roots", "cupynumeric.rot90", "cupynumeric.round", "cupynumeric.row_stack", "cupynumeric.searchsorted", "cupynumeric.select", "cupynumeric.shape", "cupynumeric.sign", "cupynumeric.signbit", "cupynumeric.sin", "cupynumeric.sinh", "cupynumeric.sort", "cupynumeric.sort_complex", "cupynumeric.split", "cupynumeric.sqrt", "cupynumeric.square", "cupynumeric.squeeze", "cupynumeric.stack", "cupynumeric.subtract", "cupynumeric.sum", "cupynumeric.swapaxes", "cupynumeric.take", "cupynumeric.take_along_axis", "cupynumeric.tan", "cupynumeric.tanh", "cupynumeric.tensordot", "cupynumeric.tile", "cupynumeric.trace", "cupynumeric.transpose", "cupynumeric.tri", "cupynumeric.tril", "cupynumeric.tril_indices", "cupynumeric.tril_indices_from", "cupynumeric.triu", "cupynumeric.triu_indices", "cupynumeric.triu_indices_from", "cupynumeric.true_divide", "cupynumeric.trunc", "cupynumeric.unique", "cupynumeric.unpackbits", "cupynumeric.unravel_index", "cupynumeric.var", "cupynumeric.vdot", "cupynumeric.vsplit", "cupynumeric.vstack", "cupynumeric.where", "cupynumeric.zeros", "cupynumeric.zeros_like", "API Reference", "Indexing routines", "Input and output", "Linear algebra (<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">cupynumeric.linalg</span></code>)", "Logic functions", "Array manipulation routines", "Mathematical functions", "The N-Dimensional array (<code class=\"xref py py-class docutils literal notranslate\"><span class=\"pre\">cupynumeric.ndarray</span></code>)", "Random sampling (<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">cupynumeric.random</span></code>)", "Routines", "Set routines", "Settings", "Sorting, searching, and counting", "Statistics", "Window functions", "Changes: 25.10", "Changes: 25.11", "Changes: 25.11", "Change Log", "Contributing to cuPyNumeric", "Building from source", "Developer guide", "Running tests", "Black-Scholes options pricing", "Cholesky decomposition", "Compact Finite Difference Scheme", "Edge Detection", "Examples", "K-Means Clustering Algorithm", "Newton Raphson Method In Two Dimensions", "Jacobi stencil", "TorchSWE case study", "Frequently Asked Questions", "NVIDIA cuPyNumeric", "Installation", "Third-party notices", "Advanced topics", "Differences with Numpy", "Performance Benchmarking", "Howtos", "Measure API coverage", "Trying Numpy code without changes", "User guide", "Best practices", "Extend cuPyNumeric with Legate-tasks", "Tutorial", "Usage"], "titleterms": {"1": 504, "10": 474, "11": [475, 476], "2": 504, "25": [474, 475, 476], "3": 504, "In": 488, "Of": 491, "The": [466, 478], "__abs__": 217, "__add__": 218, "__and__": 219, "__array__": 220, "__bool__": 221, "__complex__": 222, "__contains__": 223, "__copy__": 224, "__deepcopy__": 225, "__divmod__": 226, "__eq__": 227, "__float__": 228, "__floordiv__": 229, "__ge__": 230, "__getitem__": 231, "__gt__": 232, "__iadd__": 233, "__iand__": 234, "__ifloordiv__": 235, "__ilshift__": 236, "__imatmul__": 237, "__imod__": 238, "__imul__": 239, "__index__": 240, "__int__": 241, "__invert__": 242, "__ior__": 243, "__ipow__": 244, "__irshift__": 245, "__isub__": 246, "__itruediv__": 247, "__ixor__": 248, "__le__": 249, "__len__": 250, "__lshift__": 251, "__lt__": 252, "__matmul__": 253, "__mod__": 254, "__mul__": 255, "__ne__": 256, "__neg__": 257, "__new__": 258, "__or__": 259, "__pos__": 260, "__pow__": 261, "__reduce__": 262, "__repr__": 263, "__rmatmul__": 264, "__rshift__": 265, "__setitem__": 266, "__setstate__": 267, "__str__": 268, "__sub__": 269, "__truediv__": 270, "__xor__": 271, "about": 491, "absolut": 12, "add": 13, "advanc": [3, 479, 495, 502, 504], "algebra": [8, 462], "algorithm": 487, "all": [14, 272], "allclos": 15, "alloc": [502, 504], "amax": 16, "amin": 17, "an": 502, "angl": 18, "ani": [19, 273], "anoth": 502, "anti": 491, "api": [8, 459, 499, 502], "append": 20, "applic": [491, 502], "ar": 491, "arang": 21, "arcco": 22, "arccosh": 23, "arcsin": 24, "arcsinh": 25, "arctan": 26, "arctan2": 27, "arctanh": 28, "argmax": [29, 274], "argmin": [30, 275], "argpartit": [31, 276], "argsort": [32, 277], "argument": [491, 495, 496, 502], "argwher": 33, "arithmet": [465, 466], "arrai": [3, 8, 9, 34, 460, 463, 464, 466, 502, 504], "array_equ": 35, "array_split": 36, "asarrai": 37, "ask": 491, "astyp": 278, "atleast_1d": 38, "atleast_2d": 39, "atleast_3d": 40, "attribut": 466, "avail": 491, "averag": [41, 472], "avoid": [502, 504], "backend": 495, "background": [484, 485, 487, 488], "bartlett": 42, "base": [279, 502, 504], "basic": [464, 479, 481, 504], "begin": 478, "behavior": 496, "benchmark": 497, "best": [502, 504], "beta": 358, "better": 502, "between": 491, "binari": [5, 461], "bincount": 43, "binomi": 359, "bit": [3, 5, 467], "bitgener": 1, "bitwise_and": 44, "bitwise_or": 45, "bitwise_xor": 46, "black": [482, 504], "blackman": 47, "block": [48, 502], "boolean": [502, 504], "broadcast": 6, "broadcast_arrai": 49, "broadcast_shap": 50, "broadcast_to": 51, "build": [9, 479, 493], "byte": 360, "calcul": 466, "call": 499, "can": 491, "case": 490, "cbrt": 52, "ceil": 53, "ceph": 494, "certif": 478, "chang": [464, 474, 475, 476, 477, 487, 500], "chisquar": 361, "choleski": [167, 483], "choos": [54, 280], "class": 7, "clip": [55, 281], "cluster": [487, 504], "cmake": 479, "co": 65, "code": [478, 491, 500, 504], "column_stack": 56, "compact": 484, "comparison": [8, 463, 466], "complet": 503, "complex": 465, "compress": [57, 282], "comput": 504, "concaten": 58, "conda": [493, 504], "configur": 481, "conj": [59, 283], "conjug": [60, 284, 504], "construct": 466, "content": [463, 492], "contribut": 478, "convers": 466, "convolv": [3, 61], "copi": [62, 285, 496, 502], "copysign": 63, "copyto": 64, "correl": [3, 472], "cosh": 66, "count": [3, 471], "count_nonzero": 67, "cov": 68, "coverag": 499, "cpu": [493, 503, 504], "creation": [3, 9], "cross": 69, "ctype": 286, "cumprod": [70, 287], "cumsum": [71, 288], "cupi": 491, "cupynumer": [1, 2, 4, 6, 8, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 462, 466, 467, 478, 491, 492, 502, 503, 504], "data": [9, 10, 289, 460, 464, 466, 467], "datatyp": 496, "dco": 478, "decomposit": [462, 483], "default": 491, "default_rng": 362, "deg2rad": 72, "degre": 73, "delet": 74, "depend": 479, "design": 502, "detail": 499, "detect": [485, 504], "determin": 491, "develop": [478, 480], "diag": 75, "diag_indic": 76, "diag_indices_from": 77, "diagflat": 78, "diagon": [79, 290], "diff": 80, "differ": [465, 484, 491, 496], "digit": 81, "dimens": [464, 488], "dimension": [8, 466], "discret": [3, 8, 11], "distribut": 467, "divid": 82, "do": [478, 491], "doctor": 470, "doctor_filenam": 470, "doctor_format": 470, "doe": 491, "doesn": 491, "don": 491, "dot": [83, 291], "dsplit": 84, "dstack": 85, "dtype": 292, "dump": [293, 294], "edg": [485, 504], "eig": 168, "eigenvalu": 3, "eigh": 169, "eigval": 170, "eigvalsh": 171, "einsum": [3, 86], "einsum_path": 87, "element": [464, 502], "elementwis": 5, "empti": 88, "empty_lik": 89, "equal": 90, "equat": 462, "error": 491, "exampl": [486, 503, 504], "execut": [491, 495, 503], "exercis": 487, "exist": 9, "exp": 91, "exp2": 92, "expand_dim": 93, "expm": 172, "expm1": 94, "expon": 465, "exponenti": 363, "extend": 503, "extract": 95, "extrema": 465, "ey": 96, "f": 364, "fab": 97, "factor": 3, "fallback_stacktrac": 470, "fast": 503, "fast_math": 470, "faster": 502, "fft": [11, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113], "fft2": 99, "fftn": 100, "fftshift": 101, "file": 461, "fill": 295, "fill_diagon": 114, "find": 465, "find_common_typ": 115, "finit": 484, "flag": 296, "flat": 297, "flatnonzero": 116, "flatten": 298, "flip": [117, 299], "fliplr": 118, "flipud": 119, "float": 465, "float_pow": 120, "floor": 121, "floor_divid": 122, "fmax": 123, "fmin": 124, "fmod": 125, "force_thunk": 470, "format": 478, "fourier": [3, 8, 11, 503], "frequent": 491, "frexp": 126, "from": [9, 464, 479, 491, 493], "full": 127, "full_lik": 128, "function": [3, 462, 463, 465, 473, 502, 503], "gamma": 365, "gasnet": 495, "gcd": 129, "gener": [2, 460, 467, 502], "geometr": 366, "getfield": 300, "gpu": [491, 493, 503, 504], "gradient": [130, 504], "greater": 131, "greater_equ": 132, "guid": [480, 501], "guidelin": [497, 502], "gumbel": 367, "ham": 133, "han": 134, "handl": [465, 491], "hardwar": 504, "have": 491, "helper": 11, "hermitian": 11, "hfft": 102, "histogram": [135, 472, 503], "histogram2d": 136, "histogramdd": 137, "how": [478, 487, 491], "howto": 498, "hpc": 504, "hsplit": 138, "hstack": 139, "hyperbol": 465, "hypergeometr": 368, "hypot": 140, "i": [478, 491, 502, 503], "ident": 141, "ifft": 103, "ifft2": 104, "ifftn": 105, "ifftshift": 106, "ihfft": 107, "imag": [142, 301], "implement": [484, 485, 487, 488], "in1d": 143, "index": [3, 460, 496, 502, 504], "indic": [144, 492], "inner": 145, "input": [3, 461, 487], "insert": [146, 460], "instal": [493, 504], "instead": [496, 502], "introduct": 504, "invert": [147, 462], "irfft": 108, "irfft2": 109, "irfftn": 110, "isclos": 148, "iscomplex": 149, "iscomplexobj": 150, "isfinit": 151, "isin": 152, "isinf": 153, "isnan": 154, "isneginf": 155, "isposinf": 156, "isreal": 157, "isrealobj": 158, "isscalar": 159, "item": [302, 466], "items": 304, "itemset": 303, "iter": 502, "ix_": 160, "jacobi": [489, 504], "join": 464, "jupyt": [491, 505], "k": 487, "kaiser": 161, "kind": 464, "kit": 494, "kmean": 487, "laplac": 369, "laptop": 491, "layout": 466, "lcm": 162, "ldexp": 163, "learn": [484, 485, 487, 488], "left_shift": 164, "legales": 478, "legat": [491, 495, 497, 503], "legion": [491, 495], "less": 165, "less_equ": 166, "let": 487, "level": 8, "licens": 493, "like": [460, 464], "linalg": [167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 462], "linear": [8, 462], "linspac": 179, "linux": 504, "list": [502, 504], "load": 180, "log": [181, 477], "log10": 182, "log1p": 183, "log2": 184, "logaddexp": 185, "logaddexp2": 186, "logarithm": 465, "logic": [3, 463, 502], "logical_and": 187, "logical_not": 188, "logical_or": 189, "logical_xor": 190, "logist": 370, "lognorm": 371, "logseri": 372, "logspac": 191, "loop": [502, 504], "lu": 3, "main": 503, "make": 469, "manag": 495, "manipul": [3, 464, 466, 502], "manual": 495, "mask": [502, 504], "mask_indic": 192, "mathemat": [3, 465, 502], "matmul": 193, "matmul_cache_s": 470, "matric": [9, 462], "matrix": [3, 462, 466, 503, 504], "matrix_pow": 173, "max": 305, "max_eager_volum": 470, "maximum": 194, "mean": [195, 306, 487, 491], "measur": 499, "median": 196, "memori": [466, 491, 502], "merg": 502, "meshgrid": 197, "method": [466, 488], "min": 307, "min_cpu_chunk": 470, "min_gpu_chunk": 470, "min_omp_chunk": 470, "minimum": 198, "miscellan": [3, 465], "mod": 199, "modf": 200, "modul": [8, 503], "more": 491, "moveaxi": 201, "multi": [8, 495, 503, 504], "multi_dot": 174, "multipl": [466, 503, 504], "multipli": 202, "my": 491, "n": 466, "nan_to_num": 203, "nanargmax": 204, "nanargmin": 205, "nancumprod": 206, "nancumsum": 207, "nanmax": 208, "nanmean": 209, "nanmedian": 210, "nanmin": 211, "nanpercentil": 212, "nanprod": 213, "nanquantil": 214, "nansum": 215, "nativ": [502, 504], "nbyte": 308, "ndarrai": [3, 4, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 466], "ndim": [309, 337], "neg": 338, "negative_binomi": 373, "network": 495, "newton": 488, "nextaft": 339, "node": [495, 503, 504], "noncentral_chisquar": 374, "noncentral_f": 375, "nonzero": [310, 340], "norm": [175, 462], "normal": 376, "not_equ": 341, "notebook": 491, "notic": 494, "npy": 461, "npz": 461, "number": [462, 464, 465, 487], "numer": 9, "numpi": [8, 461, 491, 494, 496, 500, 502, 504], "numpy_compat": 470, "nvidia": 492, "o": 502, "observ": 487, "ones": 342, "ones_lik": 343, "openbla": 479, "oper": [3, 5, 460, 463, 464, 465, 466, 502, 504], "option": [482, 504], "order": [472, 496], "origin": 478, "other": [462, 466, 504], "out": 491, "outcom": [484, 485, 487, 488], "outer": 344, "output": [3, 461, 502], "overal": 499, "overhead": 502, "pack": [3, 5], "packag": 493, "packbit": 345, "pad": 3, "pareto": 377, "parti": 494, "partit": [311, 346], "pass": [491, 495], "pattern": 491, "penalti": 502, "percentil": 347, "perform": [497, 502], "pip": [479, 504], "pitfal": 502, "place": 348, "point": 465, "poisson": 378, "posit": 349, "power": [350, 379], "practic": [502, 504], "preload_cudalib": 470, "price": 482, "problem": 503, "process": 478, "prod": [312, 351], "product": [462, 465], "program": 3, "project": 8, "proper": 469, "put": [313, 352], "put_along_axi": 353, "putmask": [354, 502], "pypi": 493, "python": 491, "qr": 176, "quantil": 355, "question": 491, "quick": 503, "rad2deg": 356, "radian": 357, "rand": 380, "randint": 381, "randn": 382, "random": [1, 2, 3, 8, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 467, 494], "random_integ": 384, "random_sampl": 385, "ranf": 386, "rang": 9, "raphson": 488, "ration": 465, "ravel": [314, 400], "ravel_multi_index": 401, "rayleigh": 387, "read": 491, "real": [11, 315, 402], "real_if_clos": 403, "realm": [491, 495], "rearrang": 464, "reciproc": 404, "recommend": 502, "reduc": 502, "reduct": 496, "refer": 459, "relat": 3, "remaind": 405, "remov": 464, "repeat": 406, "report": 499, "report_coverag": 470, "report_dump_callstack": 470, "report_dump_csv": 470, "requir": [478, 504], "reshap": [316, 407, 502], "resourc": [495, 504], "result": [491, 502], "return": [496, 502], "review": 478, "rfft": 111, "rfft2": 112, "rfftn": 113, "right_shift": 408, "rint": 409, "roll": 410, "root": 411, "rot90": 412, "round": [413, 465], "routin": [3, 9, 10, 11, 460, 464, 465, 468, 469, 502], "row_stack": 414, "run": [481, 487, 503, 504], "sampl": [3, 8, 388, 467, 504], "saxpi": 503, "scalar": 496, "scheme": 484, "schole": [482, 504], "scope": 495, "search": [3, 471], "searchsort": [317, 415], "see": 487, "seed": [389, 467], "select": [416, 466], "set": [3, 469, 470, 487], "setfield": 318, "setflag": 319, "setup": 504, "shape": [9, 320, 417, 464, 466, 496], "sign": [418, 478], "signbit": 419, "simpl": [467, 503], "sin": 420, "singl": 504, "sinh": 421, "size": 321, "slower": 491, "solv": [177, 462], "sort": [3, 322, 422, 471], "sort_complex": 423, "sourc": [479, 493], "special": 466, "split": [424, 464], "sqrt": 425, "squar": 426, "squeez": [323, 427], "stack": [428, 499, 502], "stage": 481, "standard": 11, "standard_cauchi": 390, "standard_exponenti": 391, "standard_gamma": 392, "standard_t": 393, "state": 467, "statist": [3, 472], "stencil": [489, 504], "stride": 324, "studi": 490, "subtract": 429, "sum": [325, 430, 465], "support": 496, "svd": [3, 178], "swapax": [326, 431], "t": [216, 491], "tabl": 492, "take": [327, 432], "take_along_axi": 433, "take_default": 470, "tan": 434, "tanh": 435, "task": [491, 495, 502, 503], "tbli": [479, 494], "tensordot": 436, "test": [10, 463, 470, 481], "than": 491, "thi": [491, 503], "third": 494, "three": 504, "through": [479, 502], "tile": [437, 464], "time": [491, 497], "tip": 504, "tobyt": 328, "tofil": 329, "tolist": 330, "tool": 497, "top": 504, "topic": [479, 495], "torchsw": 490, "tostr": 331, "trace": [332, 438], "transform": [3, 8, 11, 503], "transpos": [333, 439, 464], "tri": 440, "triangular": 394, "trigonometr": 465, "tril": 441, "tril_indic": 442, "tril_indices_from": 443, "triu": 444, "triu_indic": 445, "triu_indices_from": 446, "true_divid": 447, "trunc": 448, "truth": 463, "try": 500, "tutori": 504, "two": 488, "type": [10, 463, 466], "ufunc": 3, "understand": 503, "uniform": 395, "uniqu": [334, 449], "unpack": 3, "unpackbit": 450, "unravel_index": 451, "updat": 502, "us": [487, 491, 495, 497, 502, 504], "usag": [481, 505], "user": 501, "v": [8, 491, 504], "valu": [9, 463, 496], "var": [335, 452], "varianc": 472, "variant": [491, 493], "variou": 473, "vdot": 453, "vector": [462, 502], "verifi": 493, "version": 491, "view": [336, 496, 502], "vonmis": 396, "vsplit": 454, "vstack": 455, "wald": 397, "warn": [470, 491], "weibul": 398, "what": [491, 503], "when": 491, "where": [456, 491], "why": 491, "window": 473, "wise": 502, "without": 500, "your": 493, "zero": 457, "zeros_lik": 458, "zipf": 399}})