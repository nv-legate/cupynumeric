#!/usr/bin/env bash

set -x

setup_env() {
    set -xeuo pipefail

    . conda-dnld-utils
    setup_conda_channel;
    export DEBIAN_FRONTEND=non-interactive

    # Run package updates and install packages
    apt-get update
    apt-get install -y numactl make

    legate-mamba-retry search --override-channels -c "${ARTIFACTS_DIR}/conda-build/cupynumeric" --info cupynumeric

    # This requires strict channel priority to work (prioritize local channel)
    legate-mamba-retry create -y -n legate -c "${ARTIFACTS_DIR}/conda-build/cupynumeric" -c https://conda.anaconda.org/${CONDA_CHANNEL}/label/${CONDA_LABEL} -c conda-forge legate cupynumeric
}

setup_test_env() {
    legate-mamba-retry install -y "clang-tools>=8" "clang>=8" colorama coverage mock pre-commit pytest-cov pytest-mock "pytest" types-docutils pynvml psutil

    pip install tifffile
}

setup_docs_env() {
    legate-mamba-retry install -y pandoc doxygen
    pip install ipython jinja2 "markdown<3.4.0" myst-parser  nbsphinx  sphinx-copybutton  "sphinx>=8"  nvidia-sphinx-theme cffi
}

setup_mypy_env() {
    legate-mamba-retry install -y "mypy>=0.961" jinja2 nbsphinx sphinx-copybutton  "sphinx>=4.4.0" types-docutils
}

setup_unit_env() {
    legate-mamba-retry install -y pytest pytest-mock mock cffi
}

test_cupynumeric() {
    set -xeo pipefail

    . conda-utils;
    export CONDA_ENV=legate

    setup_env;

    activate_conda_env;
    conda_info;

    cd "${REPO_DIR}";

    case "$1" in
        "test")
            echo "Executing tests..."
            shift;
            setup_test_env;
            ./test.py -vv --timeout 300 "$@"
            ;;
        "mypy")
            echo "Installing and executing mypy..."
            shift;
            setup_mypy_env;
            mypy cupynumeric
            ;;
        "docs")
            echo "Building docs..."
            shift;

            setup_docs_env;
            cd docs/cupynumeric
            make clean html
            # ls -lah .
            echo Copying artifacts
            cd build/html
            cp -r . "${OUTPUT_ARTIFACTS_DIR}"
            ;;
        "unit")
            echo "Running Unit tests..."
            shift;
            setup_unit_env;
            LEGATE_AUTO_CONFIG=0 pytest tests/unit
            ;;
        *)
            echo "Invalid command: $1"
            return 1
            ;;
    esac
}

(test_cupynumeric "$@");
