on:
  workflow_call:
    inputs:
      platform:
        type: string
        required: true
      target-device:
        type: string
        required: true
      build-type:
        type: string
        required: true
      upload-enabled:
        type: boolean
        required: true
      waive-gpu-tests:
         required: true
         type: boolean
         description: Waive GPU tests based on specific configuration
      python-version:
        required: false
        type: string
        default: "3.12"
      dependencies-workflow:
        required: false
        type: string
        default: ci-gh.yml

jobs:
  setup-build:
    name: Setup build
    runs-on: linux-amd64-cpu4
    outputs:
      runner_type: ${{ steps.set_runner.outputs.runner_type }}
    steps:
      - id: set_runner
        run: |
          if [ "${{ inputs.platform }}" = "linux" ]; then
            if [ "${{ github.repository_owner }}" = "nv-legate" ]; then
              echo "runner_type=linux-amd64-cpu16" >> $GITHUB_OUTPUT
            else
              echo "runner_type=ubuntu-latest" >> $GITHUB_OUTPUT
            fi
          elif [ "${{ inputs.platform }}" = "linux-aarch64" ]; then
            echo "runner_type=linux-arm64-cpu16"  >> $GITHUB_OUTPUT
          elif [ "${{ inputs.platform }}" = "mac" ]; then
            echo "runner_type=macos-latest"  >> $GITHUB_OUTPUT
          fi

  build:
    needs: setup-build
    name: "Build (${{ inputs.platform }}, ${{ inputs.target-device }}, ${{ inputs.build-type }}, Python ${{ inputs.python-version }})"
    uses:
      nv-legate/legate-gh-ci/.github/workflows/gh-build.yml@v1.18
    with:
      build-mode: ""
      build-type: ${{ inputs.build-type }}
      client-repo: ${{ github.event.repository.name }}
      dependencies-file: "cmake/versions.json"
      dependencies-workflow: ${{ inputs.dependencies-workflow }}
      legate-gh-ci-tag: "v1.18"
      network: "ucx"
      platform: ${{ inputs.platform }}
      python-version: ${{ inputs.python-version }}
      runs-on: ${{ needs.setup-build.outputs.runner_type }}
      target-device: ${{ inputs.target-device }}
      upload-enabled: ${{ inputs.upload-enabled }}
      use-container: ${{ inputs.platform == 'linux' || inputs.platform == 'linux-aarch64' }}
    secrets: inherit

  nightly-exists:
    needs: setup-build
    name: "Check if legate.internal nightly exists for SHA specified in versions.json (${{ inputs.platform }}, ${{ inputs.target-device }}, ${{ inputs.build-type }})"
    uses:
      nv-legate/legate-gh-ci/.github/workflows/gh-check-if-nightly-exists-for-all-dependencies.yml@v1.18
    with:
      build-mode: ""
      build-type: ${{ inputs.build-type }}
      client-repo: ${{ github.event.repository.name }}
      dependencies-file: "cmake/versions.json"
      legate-gh-ci-tag: "v1.18"
      network: "ucx"
      platform: ${{ inputs.platform }}
      python-version: ${{ inputs.python-version }}
      runs-on: linux-amd64-cpu4
      target-device: ${{ inputs.target-device }}
      upload-enabled: ${{ inputs.upload-enabled }}
    secrets: inherit

  upload:
    needs: build
    if: ${{ github.repository_owner == 'nv-legate' && contains(github.workflow, 'release') && inputs.upload-enabled == true }}
    name: Upload package to Server
    uses:
      nv-legate/legate-gh-ci/.github/workflows/gh-upload.yml@v1.18
    with:
      build-mode: ""
      build-type: ${{ inputs.build-type }}
      client-repo: ${{ github.event.repository.name }}
      legate-gh-ci-tag: "v1.18"
      name: Upload package to Server
      network: "ucx"
      pkgSubString: "cunumeric-"
      platform: ${{ inputs.platform }}
      python-version: ${{ inputs.python-version }}
      repos-Root: "cunumeric"
      target-device: ${{ inputs.target-device }}
      upload-action: "upload-package"
      upload-enabled: ${{ inputs.upload-enabled }}
    secrets: inherit

  setup-test:
    if: inputs.upload-enabled == false
    name: Setup test
    needs:
      - build
    runs-on: linux-amd64-cpu4
    outputs:
      matrix: ${{ steps.set-matrix.outputs.matrix }}
    steps:
      - id: set-matrix
        run: |
          set -xeuo pipefail
          MATRIX_JSON='{"include": ['
          RUNNERS=(
            'linux-amd64-gpu-v100-latest-1:gpu:gpu:linux' 'linux-amd64-2gpu:gpu:2gpu:linux'
            'linux-amd64-cpu16:cpu:cpu:linux'
            'linux-arm64-cpu16:cpu:cpu:linux-aarch64' 'linux-aarch64-2gpu:gpu:2gpu:linux-aarch64' 'linux-aarch64-2gpu:gpu:gpu:linux-aarch64'
            'macos-latest:cpu:cpu:mac')
          TEST_CONFIGS=(
            '1 CPU test:test --cpus 1 --debug:cpu'
            '1 CPU test:test --cpus 1 --debug:gpu'
            '2 CPU test:test --cpus 2 --debug:cpu'
            '2 CPU test:test --cpus 2 --debug:gpu'
            # set the number of workers manually because nvidia runners report 6 gpus when onyl one is really available
            # this workaround can be removed when the number of available gpus is reported correctly (when we run on VMs)
            'GPU test:test --use cuda --gpus 1 -j 7 --debug:gpu'
            '2 GPU test:test --use cuda --gpus 2 --debug:2gpu'
            'OpenMP test:test --use openmp --omps 1 --ompthreads 2 --debug:gpu'
            'OpenMP test:test --use openmp --omps 1 --ompthreads 2 --debug:cpu'
            '2 NUMA OpenMPs test:test --use openmp --omps 2 --ompthreads 2 --numamem 2048 --debug:gpu'
            '2 NUMA OpenMPs test:test --use openmp --omps 2 --ompthreads 2 --numamem 2048 --debug:cpu'
            'Eager execution test:test --use eager --debug:gpu'
            'Eager execution test:test --use eager --debug:cpu'
            'mypy:mypy:cpu'
            'Documentation:docs:cpu'
            'Unit tests:unit:cpu'
          )
          for RUNNER in "${RUNNERS[@]}"; do
            IFS=':' read -ra RUNNER_INFO <<< "$RUNNER"
            RUNNER_NAME=${RUNNER_INFO[0]}
            RUNNER_TYPE=${RUNNER_INFO[1]}
            RUNNER_DEVICE=${RUNNER_INFO[2]}
            RUNNER_PLATFORM=${RUNNER_INFO[3]}
            if [[ "$RUNNER_TYPE" == "${{ inputs.target-device }}" && "$RUNNER_PLATFORM" == "${{ inputs.platform }}" ]]; then
              for TEST_CONFIG in "${TEST_CONFIGS[@]}"; do
                IFS=':' read -ra CONFIG_INFO <<< "$TEST_CONFIG"
                TEST_NAME=${CONFIG_INFO[0]}
                TEST_OPTIONS=${CONFIG_INFO[1]}
                TEST_TARGET_DEVICE=${CONFIG_INFO[2]}
                if [[ "$TEST_TARGET_DEVICE" == "$RUNNER_DEVICE" ]]; then
                  if ! [[ "$TEST_NAME" =~ "GPU" && "${{ inputs.waive-gpu-tests }}" == 'true' ]]; then
                    MATRIX_JSON+="{\"runner\": {\"name\": \"$RUNNER_NAME\", \"type\": \"$RUNNER_TYPE\", \"platform\": \"$RUNNER_PLATFORM\"}, \"test-config\": {\"name\": \"$TEST_NAME\", \"test-options\": \"$TEST_OPTIONS\"}},"
                  fi
                fi
              done
            fi
          done
          MATRIX_JSON=$(echo "$MATRIX_JSON" | sed 's/,$//') # Remove the trailing comma
          MATRIX_JSON+=']}'
          echo "matrix=$MATRIX_JSON" >> $GITHUB_OUTPUT

  test:
    needs:
      - setup-test
    name: ${{ matrix.test-config.name }} (${{ inputs.platform }}, ${{ inputs.target-device }})

    strategy:
      fail-fast: false
      matrix: ${{fromJson(needs.setup-test.outputs.matrix)}}

    uses:
      nv-legate/legate-gh-ci/.github/workflows/gh-test-within-container.yml@v1.18
    with:
      build-mode: ""
      build-type: ${{ inputs.build-type }}
      client-repo: ${{ github.event.repository.name }}
      has-gpu: ${{ matrix.runner.type == 'gpu' }}
      legate-gh-ci-tag: "v1.18"
      name: ${{ matrix.test-config.name }}
      network: "ucx"
      platform: ${{ inputs.platform }}
      python-version: ${{ inputs.python-version }}
      runs-on: ${{ matrix.runner.name }}
      target-device: ${{ inputs.target-device }}
      test-options: ${{ matrix.test-config.test-options }}
      upload-enabled: ${{ inputs.upload-enabled }}
    secrets: inherit

  updateTestStatus:
    needs: test
    name: Update Test status on Server
    if: ${{ (github.repository_owner == 'nv-legate') && contains(github.workflow, 'Nightly') && (inputs.upload-enabled == true) }}
    uses:
      nv-legate/legate-gh-ci/.github/workflows/gh-upload.yml@v1.18
    with:
      build-mode: ""
      build-type: ${{ inputs.build-type }}
      client-repo: ${{ github.event.repository.name }}
      legate-gh-ci-tag: "v1.18"
      name: UpdateTestStatus
      network: "ucx"
      pkgSubString: "cunumeric-"
      platform: ${{ inputs.platform }}
      python-version: ${{ inputs.python-version }}
      repos-Root: "cunumeric"
      target-device: ${{ inputs.target-device }}
      upload-action: "update-test-status"
      upload-enabled: true
    secrets: inherit
